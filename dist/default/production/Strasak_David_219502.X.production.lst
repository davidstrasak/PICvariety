

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 21:53:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   0051D0                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   0051D0  DC                 	db	low STR_19
   125   0051D1  FF                 	db	high STR_19
   126   0051D2  E1                 	db	low STR_20
   127   0051D3  FF                 	db	high STR_20
   128   0051D4  FB                 	db	low STR_21
   129   0051D5  FF                 	db	high STR_21
   130   0051D6  F7                 	db	low STR_22
   131   0051D7  FF                 	db	high STR_22
   132   0051D8  F3                 	db	low STR_23
   133   0051D9  FF                 	db	high STR_23
   134   0051DA  D7                 	db	low STR_24
   135   0051DB  FF                 	db	high STR_24
   136   0051DC  C6                 	db	low STR_25
   137   0051DD  FF                 	db	high STR_25
   138   0051DE  D6                 	db	low (STR_30+4)
   139   0051DF  FF                 	db	high (STR_30+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   0051E0  20                 	db	32
   143   0051E1  30                 	db	48
   144   0051E2  18                 	db	24
   145   0051E3  0C                 	db	12
   146   0051E4  06                 	db	6
   147   0051E5  03                 	db	3
   148   0051E6  01                 	db	1
   149   0051E7  03                 	db	3
   150   0051E8  06                 	db	6
   151   0051E9  0C                 	db	12
   152   0051EA  18                 	db	24
   153   0051EB  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   0051EC  B2                 	db	low _LED1_Control
   157   0051ED  52                 	db	high _LED1_Control
   158   0051EE  A4                 	db	low _LED2_Control
   159   0051EF  52                 	db	high _LED2_Control
   160   0051F0  96                 	db	low _LED3_Control
   161   0051F1  52                 	db	high _LED3_Control
   162   0051F2  88                 	db	low _LED4_Control
   163   0051F3  52                 	db	high _LED4_Control
   164   0051F4  7A                 	db	low _LED5_Control
   165   0051F5  52                 	db	high _LED5_Control
   166   0051F6  C0                 	db	low _LED6_Control
   167   0051F7  52                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FE36                     __pmediumconst:
   171                           	callstack 0
   172   00FE36  00                 	db	0
   173   00FE37  6C3C               	dw	27708
   174   00FE39  3636               	dw	13878
   175   00FE3B                     __end_of_S4:
   176                           	callstack 0
   177   00FE3B  07CF               	dw	1999
   178   00FE3D  B950               	dw	47440
   179   00FE3F                     __end_of_S3:
   180                           	callstack 0
   181   00FE3F  8884               	dw	34948
   182   00FE41  3C08               	dw	15368
   183   00FE43                     __end_of_S2:
   184                           	callstack 0
   185   00FE43  AAAB               	dw	43691
   186   00FE45  BE2A               	dw	48682
   187   00FE47                     __end_of_S1:
   188                           	callstack 0
   189   00FE47  85A3               	dw	34211
   190   00FE49  3288               	dw	12936
   191   00FE4B                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE4B  0FDA               	dw	4058
   194   00FE4D  3FC9               	dw	16329
   195   00FE4F                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE4F  F983               	dw	63875
   198   00FE51  3F22               	dw	16162
   199   00FE53                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE53  0000               	dw	0
   202   00FE55  3F00               	dw	16128
   203   00FE57                     __end_of_half:
   204                           	callstack 0
   205   00FE57  9A17               	dw	39447
   206   00FE59  37CC               	dw	14284
   207   00FE5B                     __end_of_C3:
   208                           	callstack 0
   209   00FE5B  043F               	dw	1087
   210   00FE5D  BAB6               	dw	47798
   211   00FE5F                     __end_of_C2:
   212                           	callstack 0
   213   00FE5F  AA9F               	dw	43679
   214   00FE61  3D2A               	dw	15658
   215   00FE63                     __end_of_C1:
   216                           	callstack 0
   217   00FE63  0000               	dw	0
   218   00FE65  BF00               	dw	48896
   219   00FE67                     __end_of_C0:
   220                           	callstack 0
   221   00FE67  0FDB               	dw	4059
   222   00FE69  40C9               	dw	16585
   223   00FE6B                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FE6B  CBE4               	dw	52196
   226   00FE6D  4096               	dw	16534
   227   00FE6F                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FE6F  0FDB               	dw	4059
   230   00FE71  4049               	dw	16457
   231   00FE73                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FE73  0FDB               	dw	4059
   234   00FE75  3FC9               	dw	16329
   235   00FE77                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FE77                     STR_31:
   290   00FE77  25                 	db	37
   291   00FE78  75                 	db	117	;'u'
   292   00FE79  20                 	db	32
   293   00FE7A  20                 	db	32
   294   00FE7B  20                 	db	32
   295   00FE7C  20                 	db	32
   296   00FE7D  20                 	db	32
   297   00FE7E  20                 	db	32
   298   00FE7F  20                 	db	32
   299   00FE80  20                 	db	32
   300   00FE81  20                 	db	32
   301   00FE82  20                 	db	32
   302   00FE83  20                 	db	32
   303   00FE84  20                 	db	32
   304   00FE85  20                 	db	32
   305   00FE86  20                 	db	32
   306   00FE87  20                 	db	32
   307   00FE88  20                 	db	32
   308   00FE89  00                 	db	0
   309   00FE8A                     STR_29:
   310   00FE8A  50                 	db	80	;'P'
   311   00FE8B  4F                 	db	79	;'O'
   312   00FE8C  54                 	db	84	;'T'
   313   00FE8D  31                 	db	49	;'1'
   314   00FE8E  3A                 	db	58	;':'
   315   00FE8F  25                 	db	37
   316   00FE90  2E                 	db	46
   317   00FE91  31                 	db	49	;'1'
   318   00FE92  66                 	db	102	;'f'
   319   00FE93  50                 	db	80	;'P'
   320   00FE94  4F                 	db	79	;'O'
   321   00FE95  54                 	db	84	;'T'
   322   00FE96  32                 	db	50	;'2'
   323   00FE97  3A                 	db	58	;':'
   324   00FE98  25                 	db	37
   325   00FE99  2E                 	db	46
   326   00FE9A  31                 	db	49	;'1'
   327   00FE9B  66                 	db	102	;'f'
   328   00FE9C  00                 	db	0
   329   00FE9D                     STR_34:
   330   00FE9D  53                 	db	83	;'S'
   331   00FE9E  6B                 	db	107	;'k'
   332   00FE9F  6F                 	db	111	;'o'
   333   00FEA0  72                 	db	114	;'r'
   334   00FEA1  65                 	db	101	;'e'
   335   00FEA2  3A                 	db	58	;':'
   336   00FEA3  20                 	db	32
   337   00FEA4  25                 	db	37
   338   00FEA5  75                 	db	117	;'u'
   339   00FEA6  20                 	db	32
   340   00FEA7  20                 	db	32
   341   00FEA8  20                 	db	32
   342   00FEA9  20                 	db	32
   343   00FEAA  20                 	db	32
   344   00FEAB  20                 	db	32
   345   00FEAC  20                 	db	32
   346   00FEAD  20                 	db	32
   347   00FEAE  00                 	db	0
   348   00FEAF                     STR_32:
   349   00FEAF  25                 	db	37
   350   00FEB0  68                 	db	104	;'h'
   351   00FEB1  75                 	db	117	;'u'
   352   00FEB2  20                 	db	32
   353   00FEB3  20                 	db	32
   354   00FEB4  20                 	db	32
   355   00FEB5  20                 	db	32
   356   00FEB6  20                 	db	32
   357   00FEB7  20                 	db	32
   358   00FEB8  20                 	db	32
   359   00FEB9  20                 	db	32
   360   00FEBA  20                 	db	32
   361   00FEBB  20                 	db	32
   362   00FEBC  20                 	db	32
   363   00FEBD  20                 	db	32
   364   00FEBE  20                 	db	32
   365   00FEBF  00                 	db	0
   366   00FEC0                     STR_35:
   367   00FEC0  47                 	db	71	;'G'
   368   00FEC1  41                 	db	65	;'A'
   369   00FEC2  4D                 	db	77	;'M'
   370   00FEC3  45                 	db	69	;'E'
   371   00FEC4  20                 	db	32
   372   00FEC5  4F                 	db	79	;'O'
   373   00FEC6  56                 	db	86	;'V'
   374   00FEC7  45                 	db	69	;'E'
   375   00FEC8  52                 	db	82	;'R'
   376   00FEC9  20                 	db	32
   377   00FECA  20                 	db	32
   378   00FECB  20                 	db	32
   379   00FECC  20                 	db	32
   380   00FECD  20                 	db	32
   381   00FECE  20                 	db	32
   382   00FECF  20                 	db	32
   383   00FED0  00                 	db	0
   384   00FED1                     STR_16:
   385   00FED1  4E                 	db	78	;'N'
   386   00FED2  65                 	db	101	;'e'
   387   00FED3  62                 	db	98	;'b'
   388   00FED4  79                 	db	121	;'y'
   389   00FED5  6C                 	db	108	;'l'
   390   00FED6  6F                 	db	111	;'o'
   391   00FED7  20                 	db	32
   392   00FED8  20                 	db	32
   393   00FED9  20                 	db	32
   394   00FEDA  20                 	db	32
   395   00FEDB  20                 	db	32
   396   00FEDC  20                 	db	32
   397   00FEDD  20                 	db	32
   398   00FEDE  20                 	db	32
   399   00FEDF  20                 	db	32
   400   00FEE0  20                 	db	32
   401   00FEE1  00                 	db	0
   402   00FEE2                     STR_5:
   403   00FEE2  42                 	db	66	;'B'
   404   00FEE3  52                 	db	82	;'R'
   405   00FEE4  3A                 	db	58	;':'
   406   00FEE5  20                 	db	32
   407   00FEE6  31                 	db	49	;'1'
   408   00FEE7  39                 	db	57	;'9'
   409   00FEE8  32                 	db	50	;'2'
   410   00FEE9  30                 	db	48	;'0'
   411   00FEEA  30                 	db	48	;'0'
   412   00FEEB  20                 	db	32
   413   00FEEC  20                 	db	32
   414   00FEED  20                 	db	32
   415   00FEEE  20                 	db	32
   416   00FEEF  20                 	db	32
   417   00FEF0  20                 	db	32
   418   00FEF1  20                 	db	32
   419   00FEF2  00                 	db	0
   420   00FEF3                     STR_1:
   421   00FEF3  56                 	db	86	;'V'
   422   00FEF4  79                 	db	121	;'y'
   423   00FEF5  74                 	db	116	;'t'
   424   00FEF6  76                 	db	118	;'v'
   425   00FEF7  6F                 	db	111	;'o'
   426   00FEF8  72                 	db	114	;'r'
   427   00FEF9  69                 	db	105	;'i'
   428   00FEFA  6C                 	db	108	;'l'
   429   00FEFB  3A                 	db	58	;':'
   430   00FEFC  20                 	db	32
   431   00FEFD  20                 	db	32
   432   00FEFE  20                 	db	32
   433   00FEFF  20                 	db	32
   434   00FF00  20                 	db	32
   435   00FF01  20                 	db	32
   436   00FF02  20                 	db	32
   437   00FF03  00                 	db	0
   438   00FF04                     STR_14:
   439   00FF04  50                 	db	80	;'P'
   440   00FF05  72                 	db	114	;'r'
   441   00FF06  69                 	db	105	;'i'
   442   00FF07  70                 	db	112	;'p'
   443   00FF08  72                 	db	114	;'r'
   444   00FF09  61                 	db	97	;'a'
   445   00FF0A  76                 	db	118	;'v'
   446   00FF0B  69                 	db	105	;'i'
   447   00FF0C  74                 	db	116	;'t'
   448   00FF0D  20                 	db	32
   449   00FF0E  20                 	db	32
   450   00FF0F  20                 	db	32
   451   00FF10  20                 	db	32
   452   00FF11  20                 	db	32
   453   00FF12  20                 	db	32
   454   00FF13  20                 	db	32
   455   00FF14  00                 	db	0
   456   00FF15                     STR_3:
   457   00FF15  50                 	db	80	;'P'
   458   00FF16  6F                 	db	111	;'o'
   459   00FF17  7A                 	db	122	;'z'
   460   00FF18  6F                 	db	111	;'o'
   461   00FF19  72                 	db	114	;'r'
   462   00FF1A  21                 	db	33
   463   00FF1B  20                 	db	32
   464   00FF1C  48                 	db	72	;'H'
   465   00FF1D  61                 	db	97	;'a'
   466   00FF1E  64                 	db	100	;'d'
   467   00FF1F  21                 	db	33
   468   00FF20  21                 	db	33
   469   00FF21  21                 	db	33
   470   00FF22  20                 	db	32
   471   00FF23  20                 	db	32
   472   00FF24  20                 	db	32
   473   00FF25  00                 	db	0
   474   00FF26                     STR_2:
   475   00FF26  44                 	db	68	;'D'
   476   00FF27  61                 	db	97	;'a'
   477   00FF28  76                 	db	118	;'v'
   478   00FF29  69                 	db	105	;'i'
   479   00FF2A  64                 	db	100	;'d'
   480   00FF2B  20                 	db	32
   481   00FF2C  53                 	db	83	;'S'
   482   00FF2D  74                 	db	116	;'t'
   483   00FF2E  72                 	db	114	;'r'
   484   00FF2F  61                 	db	97	;'a'
   485   00FF30  73                 	db	115	;'s'
   486   00FF31  61                 	db	97	;'a'
   487   00FF32  6B                 	db	107	;'k'
   488   00FF33  20                 	db	32
   489   00FF34  20                 	db	32
   490   00FF35  20                 	db	32
   491   00FF36  00                 	db	0
   492   00FF37                     STR_12:
   493   00FF37  4C                 	db	76	;'L'
   494   00FF38  61                 	db	97	;'a'
   495   00FF39  64                 	db	100	;'d'
   496   00FF3A  65                 	db	101	;'e'
   497   00FF3B  6E                 	db	110	;'n'
   498   00FF3C  69                 	db	105	;'i'
   499   00FF3D  20                 	db	32
   500   00FF3E  70                 	db	112	;'p'
   501   00FF3F  6F                 	db	111	;'o'
   502   00FF40  74                 	db	116	;'t'
   503   00FF41  61                 	db	97	;'a'
   504   00FF42  6B                 	db	107	;'k'
   505   00FF43  75                 	db	117	;'u'
   506   00FF44  20                 	db	32
   507   00FF45  20                 	db	32
   508   00FF46  20                 	db	32
   509   00FF47  00                 	db	0
   510   00FF48                     STR_7:
   511   00FF48  5A                 	db	90	;'Z'
   512   00FF49  6D                 	db	109	;'m'
   513   00FF4A  61                 	db	97	;'a'
   514   00FF4B  63                 	db	99	;'c'
   515   00FF4C  6B                 	db	107	;'k'
   516   00FF4D  6E                 	db	110	;'n'
   517   00FF4E  65                 	db	101	;'e'
   518   00FF4F  74                 	db	116	;'t'
   519   00FF50  65                 	db	101	;'e'
   520   00FF51  20                 	db	32
   521   00FF52  42                 	db	66	;'B'
   522   00FF53  54                 	db	84	;'T'
   523   00FF54  4E                 	db	78	;'N'
   524   00FF55  32                 	db	50	;'2'
   525   00FF56  20                 	db	32
   526   00FF57  20                 	db	32
   527   00FF58  00                 	db	0
   528   00FF59                     STR_17:
   529   00FF59  49                 	db	73	;'I'
   530   00FF5A  6D                 	db	109	;'m'
   531   00FF5B  70                 	db	112	;'p'
   532   00FF5C  6C                 	db	108	;'l'
   533   00FF5D  65                 	db	101	;'e'
   534   00FF5E  6D                 	db	109	;'m'
   535   00FF5F  65                 	db	101	;'e'
   536   00FF60  6E                 	db	110	;'n'
   537   00FF61  74                 	db	116	;'t'
   538   00FF62  6F                 	db	111	;'o'
   539   00FF63  76                 	db	118	;'v'
   540   00FF64  61                 	db	97	;'a'
   541   00FF65  6E                 	db	110	;'n'
   542   00FF66  6F                 	db	111	;'o'
   543   00FF67  20                 	db	32
   544   00FF68  20                 	db	32
   545   00FF69  00                 	db	0
   546   00FF6A                     STR_10:
   547   00FF6A  52                 	db	82	;'R'
   548   00FF6B  42                 	db	66	;'B'
   549   00FF6C  30                 	db	48	;'0'
   550   00FF6D  2D                 	db	45
   551   00FF6E  41                 	db	65	;'A'
   552   00FF6F  32                 	db	50	;'2'
   553   00FF70  2C                 	db	44
   554   00FF71  20                 	db	32
   555   00FF72  42                 	db	66	;'B'
   556   00FF73  52                 	db	82	;'R'
   557   00FF74  3A                 	db	58	;':'
   558   00FF75  31                 	db	49	;'1'
   559   00FF76  39                 	db	57	;'9'
   560   00FF77  32                 	db	50	;'2'
   561   00FF78  30                 	db	48	;'0'
   562   00FF79  30                 	db	48	;'0'
   563   00FF7A  00                 	db	0
   564   00FF7B                     STR_9:
   565   00FF7B  56                 	db	86	;'V'
   566   00FF7C  6F                 	db	111	;'o'
   567   00FF7D  6C                 	db	108	;'l'
   568   00FF7E  74                 	db	116	;'t'
   569   00FF7F  79                 	db	121	;'y'
   570   00FF80  20                 	db	32
   571   00FF81  6E                 	db	110	;'n'
   572   00FF82  61                 	db	97	;'a'
   573   00FF83  20                 	db	32
   574   00FF84  50                 	db	80	;'P'
   575   00FF85  4F                 	db	79	;'O'
   576   00FF86  54                 	db	84	;'T'
   577   00FF87  65                 	db	101	;'e'
   578   00FF88  63                 	db	99	;'c'
   579   00FF89  68                 	db	104	;'h'
   580   00FF8A  3A                 	db	58	;':'
   581   00FF8B  00                 	db	0
   582   00FF8C                     STR_6:
   583   00FF8C  4B                 	db	75	;'K'
   584   00FF8D  6F                 	db	111	;'o'
   585   00FF8E  6E                 	db	110	;'n'
   586   00FF8F  65                 	db	101	;'e'
   587   00FF90  63                 	db	99	;'c'
   588   00FF91  20                 	db	32
   589   00FF92  2D                 	db	45
   590   00FF93  20                 	db	32
   591   00FF94  6E                 	db	110	;'n'
   592   00FF95  65                 	db	101	;'e'
   593   00FF96  77                 	db	119	;'w'
   594   00FF97  20                 	db	32
   595   00FF98  6C                 	db	108	;'l'
   596   00FF99  69                 	db	105	;'i'
   597   00FF9A  6E                 	db	110	;'n'
   598   00FF9B  65                 	db	101	;'e'
   599   00FF9C  00                 	db	0
   600   00FF9D                     STR_11:
   601   00FF9D  31                 	db	49	;'1'
   602   00FF9E  3A                 	db	58	;':'
   603   00FF9F  74                 	db	116	;'t'
   604   00FFA0  72                 	db	114	;'r'
   605   00FFA1  2C                 	db	44
   606   00FFA2  32                 	db	50	;'2'
   607   00FFA3  3A                 	db	58	;':'
   608   00FFA4  73                 	db	115	;'s'
   609   00FFA5  69                 	db	105	;'i'
   610   00FFA6  6E                 	db	110	;'n'
   611   00FFA7  2C                 	db	44
   612   00FFA8  33                 	db	51	;'3'
   613   00FFA9  3A                 	db	58	;':'
   614   00FFAA  70                 	db	112	;'p'
   615   00FFAB  69                 	db	105	;'i'
   616   00FFAC  6C                 	db	108	;'l'
   617   00FFAD  00                 	db	0
   618   00FFAE                     STR_15:
   619   00FFAE  20                 	db	32
   620   00FFAF  20                 	db	32
   621   00FFB0  20                 	db	32
   622   00FFB1  20                 	db	32
   623   00FFB2  20                 	db	32
   624   00FFB3  20                 	db	32
   625   00FFB4  20                 	db	32
   626   00FFB5  20                 	db	32
   627   00FFB6  20                 	db	32
   628   00FFB7  20                 	db	32
   629   00FFB8  20                 	db	32
   630   00FFB9  50                 	db	80	;'P'
   631   00FFBA  6F                 	db	111	;'o'
   632   00FFBB  7A                 	db	122	;'z'
   633   00FFBC  6F                 	db	111	;'o'
   634   00FFBD  72                 	db	114	;'r'
   635   00FFBE  00                 	db	0
   636   00FFBF                     STR_42:
   637   00FFBF  28                 	db	40
   638   00FFC0  6E                 	db	110	;'n'
   639   00FFC1  75                 	db	117	;'u'
   640   00FFC2  6C                 	db	108	;'l'
   641   00FFC3  6C                 	db	108	;'l'
   642   00FFC4  29                 	db	41
   643   00FFC5  00                 	db	0
   644   00FFC6                     STR_25:
   645   00FFC6  4D                 	db	77	;'M'
   646   00FFC7  55                 	db	85	;'U'
   647   00FFC8  53                 	db	83	;'S'
   648   00FFC9  49                 	db	73	;'I'
   649   00FFCA  43                 	db	67	;'C'
   650   00FFCB  00                 	db	0
   651   00FFCC                     STR_27:
   652   00FFCC  3E                 	db	62	;'>'
   653   00FFCD  25                 	db	37
   654   00FFCE  2D                 	db	45
   655   00FFCF  2A                 	db	42
   656   00FFD0  73                 	db	115	;'s'
   657   00FFD1  00                 	db	0
   658   00FFD2                     STR_30:
   659   00FFD2  25                 	db	37
   660   00FFD3  73                 	db	115	;'s'
   661   00FFD4  20                 	db	32
   662   00FFD5  0A                 	db	10
   663   00FFD6  00                 	db	0
   664   00FFD7                     STR_24:
   665   00FFD7  47                 	db	71	;'G'
   666   00FFD8  41                 	db	65	;'A'
   667   00FFD9  4D                 	db	77	;'M'
   668   00FFDA  45                 	db	69	;'E'
   669   00FFDB  00                 	db	0
   670   00FFDC                     STR_19:
   671   00FFDC  47                 	db	71	;'G'
   672   00FFDD  50                 	db	80	;'P'
   673   00FFDE  49                 	db	73	;'I'
   674   00FFDF  4F                 	db	79	;'O'
   675   00FFE0  00                 	db	0
   676   00FFE1                     STR_20:
   677   00FFE1  55                 	db	85	;'U'
   678   00FFE2  41                 	db	65	;'A'
   679   00FFE3  52                 	db	82	;'R'
   680   00FFE4  54                 	db	84	;'T'
   681   00FFE5  00                 	db	0
   682   00FFE6                     STR_18:
   683   00FFE6  25                 	db	37
   684   00FFE7  64                 	db	100	;'d'
   685   00FFE8  20                 	db	32
   686   00FFE9  0D                 	db	13
   687   00FFEA  00                 	db	0
   688   00FFEB                     STR_36:
   689   00FFEB  69                 	db	105	;'i'
   690   00FFEC  6E                 	db	110	;'n'
   691   00FFED  66                 	db	102	;'f'
   692   00FFEE  00                 	db	0
   693   00FFEF                     STR_39:
   694   00FFEF  6E                 	db	110	;'n'
   695   00FFF0  61                 	db	97	;'a'
   696   00FFF1  6E                 	db	110	;'n'
   697   00FFF2  00                 	db	0
   698   00FFF3                     STR_23:
   699   00FFF3  44                 	db	68	;'D'
   700   00FFF4  41                 	db	65	;'A'
   701   00FFF5  43                 	db	67	;'C'
   702   00FFF6  00                 	db	0
   703   00FFF7                     STR_22:
   704   00FFF7  41                 	db	65	;'A'
   705   00FFF8  44                 	db	68	;'D'
   706   00FFF9  43                 	db	67	;'C'
   707   00FFFA  00                 	db	0
   708   00FFFB                     STR_21:
   709   00FFFB  50                 	db	80	;'P'
   710   00FFFC  57                 	db	87	;'W'
   711   00FFFD  4D                 	db	77	;'M'
   712   00FFFE  00                 	db	0
   713   00FFFF  00                 	db	0	; dummy byte at the end
   714   000000                     
   715                           ; #config settings
   716                           
   717                           	psect	cinit
   718   004E8C                     __pcinit:
   719                           	callstack 0
   720   004E8C                     start_initialization:
   721                           	callstack 0
   722   004E8C                     __initialization:
   723                           	callstack 0
   724                           
   725                           ; Initialize objects allocated to BANK1 (40 bytes)
   726                           ; load TBLPTR registers with __pidataBANK1
   727   004E8C  0ED0               	movlw	low __pidataBANK1
   728   004E8E  6EF6               	movwf	tblptrl,c
   729   004E90  0E51               	movlw	high __pidataBANK1
   730   004E92  6EF7               	movwf	tblptrh,c
   731   004E94  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   732   004E96  6EF8               	movwf	tblptru,c
   733   004E98  EE01  F0CE         	lfsr	0,__pdataBANK1
   734   004E9C  EE10 F028          	lfsr	1,40
   735   004EA0                     copy_data0:
   736   004EA0  0009               	tblrd		*+
   737   004EA2  CFF5 FFEE          	movff	tablat,postinc0
   738   004EA6  50E5               	movf	postdec1,w,c
   739   004EA8  50E1               	movf	fsr1l,w,c
   740   004EAA  E1FA               	bnz	copy_data0
   741                           
   742                           ; Clear objects allocated to BANK2 (42 bytes)
   743   004EAC  EE02  F000         	lfsr	0,__pbssBANK2
   744   004EB0  0E2A               	movlw	42
   745   004EB2                     clear_0:
   746   004EB2  6AEE               	clrf	postinc0,c
   747   004EB4  06E8               	decf	wreg,f,c
   748   004EB6  E1FD               	bnz	clear_0
   749                           
   750                           ; Clear objects allocated to BANK1 (155 bytes)
   751   004EB8  EE01  F000         	lfsr	0,__pbssBANK1
   752   004EBC  0E9B               	movlw	155
   753   004EBE                     clear_1:
   754   004EBE  6AEE               	clrf	postinc0,c
   755   004EC0  06E8               	decf	wreg,f,c
   756   004EC2  E1FD               	bnz	clear_1
   757                           
   758                           ; Clear objects allocated to BANK0 (1 bytes)
   759   004EC4  0100               	movlb	0
   760   004EC6  6BFE               	clrf	__pbssBANK0& (0+255),b
   761                           
   762                           ; Clear objects allocated to COMRAM (5 bytes)
   763   004EC8  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   764   004ECA  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   765   004ECC  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   766   004ECE  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   767   004ED0  6A55               	clrf	__pbssCOMRAM& (0+255),c
   768   004ED2                     end_of_initialization:
   769                           	callstack 0
   770   004ED2                     __end_of__initialization:
   771                           	callstack 0
   772   004ED2  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   773   004ED4  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   774   004ED6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   775   004ED8  6EF8               	movwf	tblptru,c
   776   004EDA  0100               	movlb	0
   777   004EDC  EFF7  F014         	goto	_main	;jump to C main() function
   778                           
   779                           	psect	bssCOMRAM
   780   000055                     __pbssCOMRAM:
   781                           	callstack 0
   782   000055                     _width:
   783                           	callstack 0
   784   000055                     	ds	2
   785   000057                     _prec:
   786                           	callstack 0
   787   000057                     	ds	2
   788   000059                     _flags:
   789                           	callstack 0
   790   000059                     	ds	1
   791                           
   792                           	psect	bssBANK0
   793   0000FE                     __pbssBANK0:
   794                           	callstack 0
   795   0000FE                     _keepStateGPIO:
   796                           	callstack 0
   797   0000FE                     	ds	1
   798                           
   799                           	psect	bssBANK1
   800   000100                     __pbssBANK1:
   801                           	callstack 0
   802   000100                     	ds	17
   803   000111                     fabsf@F465:
   804                           	callstack 0
   805   000111                     	ds	4
   806   000115                     ___rem_pio2f@F526:
   807                           	callstack 0
   808   000115                     	ds	4
   809   000119                     floorf@F521:
   810                           	callstack 0
   811   000119                     	ds	4
   812   00011D                     ___fpclassifyf@F465:
   813                           	callstack 0
   814   00011D                     	ds	4
   815   000121                     ISR@i:
   816                           	callstack 0
   817   000121                     	ds	2
   818   000123                     _GAMEtime:
   819                           	callstack 0
   820   000123                     	ds	1
   821   000124                     _GAMEIE:
   822                           	callstack 0
   823   000124                     	ds	1
   824   000125                     _UARTIE:
   825                           	callstack 0
   826   000125                     	ds	1
   827   000126                     _GPIOIE:
   828                           	callstack 0
   829   000126                     	ds	1
   830   000127                     _dbuf:
   831                           	callstack 0
   832   000127                     	ds	80
   833   000177                     _gmail:
   834                           	callstack 0
   835   000177                     	ds	32
   836   000197                     _seed:
   837                           	callstack 0
   838   000197                     	ds	4
   839                           
   840                           	psect	dataBANK1
   841   0001CE                     __pdataBANK1:
   842                           	callstack 0
   843   0001CE                     moveDisplay@F6965:
   844                           	callstack 0
   845   0001CE                     	ds	16
   846   0001DE                     runGPIO@F6993:
   847                           	callstack 0
   848   0001DE                     	ds	12
   849   0001EA                     runGPIO@F6975:
   850                           	callstack 0
   851   0001EA                     	ds	12
   852                           
   853                           	psect	bssBANK2
   854   000200                     __pbssBANK2:
   855                           	callstack 0
   856   000200                     	ds	25
   857   000219                     	ds	17
   858                           
   859                           	psect	cstackBANK1
   860   00019B                     __pcstackBANK1:
   861                           	callstack 0
   862   00019B                     moveDisplay@menuItem1:
   863                           	callstack 0
   864   00019B                     runADC@text:
   865                           	callstack 0
   866   00019B                     runGAME@text:
   867                           	callstack 0
   868                           
   869                           ; 17 bytes @ 0x0
   870   00019B                     	ds	17
   871   0001AC                     runADC@voltage1:
   872                           	callstack 0
   873   0001AC                     moveDisplay@menuItem2:
   874                           	callstack 0
   875   0001AC                     runGAME@approxText:
   876                           	callstack 0
   877                           
   878                           ; 25 bytes @ 0x11
   879   0001AC                     	ds	4
   880   0001B0                     runADC@voltage2:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x15
   884   0001B0                     	ds	4
   885   0001B4                     runADC@pot1:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x19
   889   0001B4                     	ds	2
   890   0001B6                     runADC@pot2:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x1B
   894   0001B6                     	ds	2
   895   0001B8                     runADC@keepState:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x1D
   899   0001B8                     	ds	5
   900   0001BD                     moveDisplay@menuItems:
   901                           	callstack 0
   902                           
   903                           ; 16 bytes @ 0x22
   904   0001BD                     	ds	8
   905   0001C5                     runGAME@GAMEpart:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x2A
   909   0001C5                     	ds	1
   910   0001C6                     runGAME@keepStateGAME:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x2B
   914   0001C6                     	ds	1
   915   0001C7                     runGAME@GAMEround:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x2C
   919   0001C7                     	ds	1
   920   0001C8                     runGAME@GAMEdivider:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x2D
   924   0001C8                     	ds	1
   925   0001C9                     runGAME@pot1:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x2E
   929   0001C9                     	ds	2
   930   0001CB                     runGAME@randomNumber:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x30
   934   0001CB                     	ds	2
   935   0001CD                     moveDisplay@menuI:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x32
   939   0001CD                     	ds	1
   940                           
   941                           	psect	cstackBANK0
   942   000060                     __pcstackBANK0:
   943                           	callstack 0
   944   000060                     ___fladd@signs:
   945                           	callstack 0
   946   000060                     floorf@m:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x0
   950   000060                     	ds	1
   951   000061                     ___fladd@aexp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x1
   955   000061                     	ds	1
   956   000062                     ___fladd@bexp:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x2
   960   000062                     	ds	1
   961   000063                     ___fladd@grs:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x3
   965   000063                     	ds	1
   966   000064                     ?___flsub:
   967                           	callstack 0
   968   000064                     ?___sindf:
   969                           	callstack 0
   970   000064                     ?___cosdf:
   971                           	callstack 0
   972   000064                     ?___fltol:
   973                           	callstack 0
   974   000064                     floorf@e:
   975                           	callstack 0
   976   000064                     ___fltol@f1:
   977                           	callstack 0
   978   000064                     ___flsub@b:
   979                           	callstack 0
   980   000064                     ___cosdf@x:
   981                           	callstack 0
   982   000064                     ___sindf@x:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x4
   986   000064                     	ds	2
   987   000066                     floorf@u:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x6
   991   000066                     	ds	2
   992   000068                     ??___fltol:
   993   000068                     ___flsub@a:
   994                           	callstack 0
   995   000068                     ___cosdf@r:
   996                           	callstack 0
   997   000068                     ___sindf@r:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x8
  1001   000068                     	ds	4
  1002   00006C                     ___sindf@w:
  1003                           	callstack 0
  1004   00006C                     ___cosdf$4530:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0xC
  1008   00006C                     	ds	4
  1009   000070                     ___cosdf$4531:
  1010                           	callstack 0
  1011   000070                     ___sindf$4534:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x10
  1015   000070                     	ds	4
  1016   000074                     ___cosdf$4532:
  1017                           	callstack 0
  1018   000074                     ___sindf$4535:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x14
  1022   000074                     	ds	4
  1023   000078                     ___cosdf@w:
  1024                           	callstack 0
  1025   000078                     ___sindf$4536:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x18
  1029   000078                     	ds	4
  1030   00007C                     ___cosdf@z:
  1031                           	callstack 0
  1032   00007C                     ___sindf@s:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x1C
  1036   00007C                     	ds	4
  1037   000080                     ?___flneg:
  1038                           	callstack 0
  1039   000080                     ___flneg@f1:
  1040                           	callstack 0
  1041   000080                     ___sindf@z:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x20
  1045   000080                     	ds	4
  1046   000084                     ?___rem_pio2f:
  1047                           	callstack 0
  1048   000084                     efgtoa@fp:
  1049                           	callstack 0
  1050   000084                     ___rem_pio2f@x:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x24
  1054   000084                     	ds	2
  1055   000086                     efgtoa@f:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x26
  1059   000086                     	ds	2
  1060   000088                     ___rem_pio2f@y:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x28
  1064   000088                     	ds	1
  1065   000089                     ??___rem_pio2f:
  1066                           
  1067                           ; 1 bytes @ 0x29
  1068   000089                     	ds	1
  1069   00008A                     efgtoa@c:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x2A
  1073   00008A                     	ds	1
  1074   00008B                     ??_efgtoa:
  1075   00008B                     ___rem_pio2f@ty:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x2B
  1079   00008B                     	ds	2
  1080   00008D                     efgtoa@ne:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x2D
  1084   00008D                     	ds	2
  1085   00008F                     efgtoa@p:
  1086                           	callstack 0
  1087   00008F                     ___rem_pio2f$4533:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x2F
  1091   00008F                     	ds	2
  1092   000091                     efgtoa@t:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x31
  1096   000091                     	ds	2
  1097   000093                     ___rem_pio2f@sign:
  1098                           	callstack 0
  1099   000093                     _efgtoa$4070:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x33
  1103   000093                     	ds	1
  1104   000094                     ___rem_pio2f@ux:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x34
  1108   000094                     	ds	1
  1109   000095                     efgtoa@pp:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x35
  1113   000095                     	ds	1
  1114   000096                     efgtoa@mode:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x36
  1118   000096                     	ds	1
  1119   000097                     efgtoa@nmode:
  1120                           	callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x37
  1123   000097                     	ds	1
  1124   000098                     efgtoa@d:
  1125                           	callstack 0
  1126   000098                     ___rem_pio2f@fn:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x38
  1130   000098                     	ds	2
  1131   00009A                     efgtoa@m:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x3A
  1135   00009A                     	ds	2
  1136   00009C                     efgtoa@e:
  1137                           	callstack 0
  1138   00009C                     ___rem_pio2f@t:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x3C
  1142   00009C                     	ds	2
  1143   00009E                     efgtoa@w:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x3E
  1147   00009E                     	ds	2
  1148   0000A0                     efgtoa@ou:
  1149                           	callstack 0
  1150   0000A0                     ___rem_pio2f@n:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x40
  1154   0000A0                     	ds	4
  1155   0000A4                     ?_sinf:
  1156                           	callstack 0
  1157   0000A4                     efgtoa@i:
  1158                           	callstack 0
  1159   0000A4                     sinf@x:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x44
  1163   0000A4                     	ds	2
  1164   0000A6                     efgtoa@h:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x46
  1168   0000A6                     	ds	2
  1169   0000A8                     _sinf$4245:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x48
  1173   0000A8                     	ds	2
  1174   0000AA                     efgtoa@l:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x4A
  1178   0000AA                     	ds	2
  1179   0000AC                     _sinf$4246:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x4C
  1183   0000AC                     	ds	2
  1184   0000AE                     efgtoa@sign:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x4E
  1188   0000AE                     	ds	1
  1189   0000AF                     efgtoa@g:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x4F
  1193   0000AF                     	ds	1
  1194   0000B0                     sinf@n:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x50
  1198   0000B0                     	ds	1
  1199   0000B1                     sinf@sign:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x51
  1203   0000B1                     	ds	1
  1204   0000B2                     _sinf$4529:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x52
  1208   0000B2                     	ds	1
  1209   0000B3                     efgtoa@n:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x53
  1213   0000B3                     	ds	2
  1214   0000B5                     efgtoa@u:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x55
  1218   0000B5                     	ds	1
  1219   0000B6                     sinf@y:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x56
  1223   0000B6                     	ds	3
  1224   0000B9                     vfpfcnvrt@fp:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x59
  1228   0000B9                     	ds	1
  1229   0000BA                     sinf@ux:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x5A
  1233   0000BA                     	ds	1
  1234   0000BB                     vfpfcnvrt@fmt:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x5B
  1238   0000BB                     	ds	1
  1239   0000BC                     vfpfcnvrt@ap:
  1240                           	callstack 0
  1241                           
  1242                           ; 1 bytes @ 0x5C
  1243   0000BC                     	ds	1
  1244   0000BD                     ??_vfpfcnvrt:
  1245                           
  1246                           ; 1 bytes @ 0x5D
  1247   0000BD                     	ds	2
  1248   0000BF                     vfpfcnvrt@done:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x5F
  1252   0000BF                     	ds	1
  1253   0000C0                     vfpfcnvrt@convarg:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x60
  1257   0000C0                     	ds	4
  1258   0000C4                     vfpfcnvrt@c:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x64
  1262   0000C4                     	ds	1
  1263   0000C5                     vfpfcnvrt@cp:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x65
  1267   0000C5                     	ds	2
  1268   0000C7                     ?_vfprintf:
  1269                           	callstack 0
  1270   0000C7                     vfprintf@fp:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x67
  1274   0000C7                     	ds	2
  1275   0000C9                     vfprintf@fmt:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x69
  1279   0000C9                     	ds	2
  1280   0000CB                     vfprintf@ap:
  1281                           	callstack 0
  1282                           
  1283                           ; 1 bytes @ 0x6B
  1284   0000CB                     	ds	1
  1285   0000CC                     vfprintf@cfmt:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x6C
  1289   0000CC                     	ds	2
  1290   0000CE                     ?_printf:
  1291                           	callstack 0
  1292   0000CE                     ?_sprintf:
  1293                           	callstack 0
  1294   0000CE                     sprintf@s:
  1295                           	callstack 0
  1296   0000CE                     printf@fmt:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x6E
  1300   0000CE                     	ds	2
  1301   0000D0                     sprintf@fmt:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0x70
  1305   0000D0                     	ds	2
  1306   0000D2                     ??_runUART:
  1307   0000D2                     ??_runDAC:
  1308                           
  1309                           ; 1 bytes @ 0x72
  1310   0000D2                     	ds	1
  1311   0000D3                     _runDAC$4526:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x73
  1315   0000D3                     	ds	1
  1316   0000D4                     runUART@reversed:
  1317                           	callstack 0
  1318                           
  1319                           ; 31 bytes @ 0x74
  1320   0000D4                     	ds	3
  1321   0000D7                     _runDAC$4527:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x77
  1325   0000D7                     	ds	3
  1326   0000DA                     sprintf@ap:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x7A
  1330   0000DA                     	ds	1
  1331   0000DB                     runDAC@keepState:
  1332                           	callstack 0
  1333   0000DB                     sprintf@f:
  1334                           	callstack 0
  1335                           
  1336                           ; 12 bytes @ 0x7B
  1337   0000DB                     	ds	1
  1338   0000DC                     runDAC@selectModeDAC:
  1339                           	callstack 0
  1340                           
  1341                           ; 1 bytes @ 0x7C
  1342   0000DC                     	ds	1
  1343   0000DD                     runDAC@DACindex:
  1344                           	callstack 0
  1345                           
  1346                           ; 1 bytes @ 0x7D
  1347   0000DD                     	ds	10
  1348   0000E7                     ??_runADC:
  1349   0000E7                     ??_runGAME:
  1350   0000E7                     moveDisplay@where:
  1351                           	callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x87
  1354   0000E7                     	ds	1
  1355   0000E8                     ??_moveDisplay:
  1356                           
  1357                           ; 1 bytes @ 0x88
  1358   0000E8                     	ds	11
  1359   0000F3                     runUART@keepState:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0x93
  1363   0000F3                     	ds	1
  1364   0000F4                     runUART@len:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x94
  1368   0000F4                     	ds	2
  1369   0000F6                     runUART@i:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x96
  1373   0000F6                     	ds	2
  1374   0000F8                     runUART@p:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x98
  1378   0000F8                     	ds	2
  1379   0000FA                     ??_main:
  1380                           
  1381                           ; 1 bytes @ 0x9A
  1382   0000FA                     	ds	2
  1383   0000FC                     main@setUpAgain:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x9C
  1387   0000FC                     	ds	1
  1388   0000FD                     main@menuI:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x9D
  1392   0000FD                     	ds	1
  1393                           
  1394                           	psect	cstackCOMRAM
  1395   000001                     __pcstackCOMRAM:
  1396                           	callstack 0
  1397   000001                     ??_ISR:
  1398                           
  1399                           ; 1 bytes @ 0x0
  1400   000001                     	ds	4
  1401   000005                     ISR@temp:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x4
  1405   000005                     	ds	1
  1406   000006                     ?_strlen:
  1407                           	callstack 0
  1408   000006                     ?___fpclassifyf:
  1409                           	callstack 0
  1410   000006                     ?___wmul:
  1411                           	callstack 0
  1412   000006                     ?___awmod:
  1413                           	callstack 0
  1414   000006                     ?___lwdiv:
  1415                           	callstack 0
  1416   000006                     ?___lwmod:
  1417                           	callstack 0
  1418   000006                     ?_labs:
  1419                           	callstack 0
  1420   000006                     ?_fabsf:
  1421                           	callstack 0
  1422   000006                     ?___lmul:
  1423                           	callstack 0
  1424   000006                     ?___xxtofl:
  1425                           	callstack 0
  1426   000006                     LCD_Send@data:
  1427                           	callstack 0
  1428   000006                     SPI_write@MSB:
  1429                           	callstack 0
  1430   000006                     putch@data:
  1431                           	callstack 0
  1432   000006                     LED1_Control@state:
  1433                           	callstack 0
  1434   000006                     LED2_Control@state:
  1435                           	callstack 0
  1436   000006                     LED3_Control@state:
  1437                           	callstack 0
  1438   000006                     LED4_Control@state:
  1439                           	callstack 0
  1440   000006                     LED5_Control@state:
  1441                           	callstack 0
  1442   000006                     LED6_Control@state:
  1443                           	callstack 0
  1444   000006                     ___lbdiv@divisor:
  1445                           	callstack 0
  1446   000006                     ___wmul@multiplier:
  1447                           	callstack 0
  1448   000006                     ___awmod@dividend:
  1449                           	callstack 0
  1450   000006                     ___lwdiv@dividend:
  1451                           	callstack 0
  1452   000006                     ___lwmod@dividend:
  1453                           	callstack 0
  1454   000006                     memcpy@d1:
  1455                           	callstack 0
  1456   000006                     strcpy@dest:
  1457                           	callstack 0
  1458   000006                     strlen@s:
  1459                           	callstack 0
  1460   000006                     ___lmul@multiplier:
  1461                           	callstack 0
  1462   000006                     ___fleq@ff1:
  1463                           	callstack 0
  1464   000006                     ___xxtofl@val:
  1465                           	callstack 0
  1466   000006                     ___fpclassifyf@x:
  1467                           	callstack 0
  1468   000006                     labs@a:
  1469                           	callstack 0
  1470   000006                     fabsf@x:
  1471                           	callstack 0
  1472                           
  1473                           ; 4 bytes @ 0x5
  1474   000006                     	ds	1
  1475   000007                     ??_LCD_Init:
  1476   000007                     ??_runGPIO:
  1477   000007                     SPI_write@LSB:
  1478                           	callstack 0
  1479   000007                     ___lbdiv@dividend:
  1480                           	callstack 0
  1481   000007                     LCD_ShowString@textData:
  1482                           	callstack 0
  1483   000007                     fputc@c:
  1484                           	callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x6
  1487   000007                     	ds	1
  1488   000008                     SPI_write@data:
  1489                           	callstack 0
  1490   000008                     ___lbdiv@counter:
  1491                           	callstack 0
  1492   000008                     ___wmul@multiplicand:
  1493                           	callstack 0
  1494   000008                     ___awmod@divisor:
  1495                           	callstack 0
  1496   000008                     ___lwdiv@divisor:
  1497                           	callstack 0
  1498   000008                     ___lwmod@divisor:
  1499                           	callstack 0
  1500   000008                     memcpy@s1:
  1501                           	callstack 0
  1502   000008                     strcpy@src:
  1503                           	callstack 0
  1504   000008                     strlen@a:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x7
  1508   000008                     	ds	1
  1509   000009                     ??_LCD_ShowString:
  1510   000009                     ___lbdiv@quotient:
  1511                           	callstack 0
  1512   000009                     fputc@fp:
  1513                           	callstack 0
  1514   000009                     runGPIO@states:
  1515                           	callstack 0
  1516                           
  1517                           ; 12 bytes @ 0x8
  1518   000009                     	ds	1
  1519   00000A                     ??___fpclassifyf:
  1520   00000A                     ??_labs:
  1521   00000A                     ??___xxtofl:
  1522   00000A                     ___awmod@counter:
  1523                           	callstack 0
  1524   00000A                     ___lwdiv@counter:
  1525                           	callstack 0
  1526   00000A                     ___lwmod@counter:
  1527                           	callstack 0
  1528   00000A                     ___wmul@product:
  1529                           	callstack 0
  1530   00000A                     memcpy@n:
  1531                           	callstack 0
  1532   00000A                     strcpy@d:
  1533                           	callstack 0
  1534   00000A                     ___lmul@multiplicand:
  1535                           	callstack 0
  1536   00000A                     ___fleq@ff2:
  1537                           	callstack 0
  1538   00000A                     fabsf@u:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x9
  1542   00000A                     	ds	1
  1543   00000B                     ??_fputc:
  1544   00000B                     LCD_ShowString@lineNum:
  1545                           	callstack 0
  1546   00000B                     ___awmod@sign:
  1547                           	callstack 0
  1548   00000B                     ___lwdiv@quotient:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0xA
  1552   00000B                     	ds	1
  1553   00000C                     ?_abs:
  1554                           	callstack 0
  1555   00000C                     ?_read_prec_or_width:
  1556                           	callstack 0
  1557   00000C                     LCD_ShowString@i:
  1558                           	callstack 0
  1559   00000C                     read_prec_or_width@fmt:
  1560                           	callstack 0
  1561   00000C                     memcpy@tmp:
  1562                           	callstack 0
  1563   00000C                     abs@a:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0xB
  1567   00000C                     	ds	1
  1568   00000D                     read_prec_or_width@ap:
  1569                           	callstack 0
  1570   00000D                     memcpy@d:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0xC
  1574   00000D                     	ds	1
  1575   00000E                     ??_abs:
  1576   00000E                     ??___fleq:
  1577   00000E                     ___xxtofl@sign:
  1578                           	callstack 0
  1579   00000E                     read_prec_or_width@c:
  1580                           	callstack 0
  1581   00000E                     ___fpclassifyf@e:
  1582                           	callstack 0
  1583   00000E                     ___lmul@product:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0xD
  1587   00000E                     	ds	1
  1588   00000F                     ___xxtofl@exp:
  1589                           	callstack 0
  1590   00000F                     read_prec_or_width@n:
  1591                           	callstack 0
  1592   00000F                     memcpy@s:
  1593                           	callstack 0
  1594                           
  1595                           ; 2 bytes @ 0xE
  1596   00000F                     	ds	1
  1597   000010                     stoa@fp:
  1598                           	callstack 0
  1599   000010                     fputs@s:
  1600                           	callstack 0
  1601   000010                     ___xxtofl@arg:
  1602                           	callstack 0
  1603   000010                     ___fpclassifyf@u:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0xF
  1607   000010                     	ds	2
  1608   000012                     ?_rand:
  1609                           	callstack 0
  1610   000012                     stoa@s:
  1611                           	callstack 0
  1612   000012                     fputs@fp:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x11
  1616   000012                     	ds	2
  1617   000014                     ??_rand:
  1618   000014                     ??_stoa:
  1619   000014                     ?___flmul:
  1620                           	callstack 0
  1621   000014                     fputs@c:
  1622                           	callstack 0
  1623   000014                     ___flmul@b:
  1624                           	callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x13
  1627   000014                     	ds	1
  1628   000015                     fputs@i:
  1629                           	callstack 0
  1630   000015                     runGPIO@LEDControl:
  1631                           	callstack 0
  1632                           
  1633                           ; 12 bytes @ 0x14
  1634   000015                     	ds	1
  1635   000016                     stoa@p:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0x15
  1639   000016                     	ds	1
  1640   000017                     pad@fp:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x16
  1644   000017                     	ds	1
  1645   000018                     ?___awdiv:
  1646                           	callstack 0
  1647   000018                     ___awdiv@dividend:
  1648                           	callstack 0
  1649   000018                     stoa@w:
  1650                           	callstack 0
  1651   000018                     ___flmul@a:
  1652                           	callstack 0
  1653                           
  1654                           ; 4 bytes @ 0x17
  1655   000018                     	ds	1
  1656   000019                     pad@buf:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x18
  1660   000019                     	ds	1
  1661   00001A                     ___awdiv@divisor:
  1662                           	callstack 0
  1663   00001A                     stoa@cp:
  1664                           	callstack 0
  1665                           
  1666                           ; 2 bytes @ 0x19
  1667   00001A                     	ds	1
  1668   00001B                     pad@p:
  1669                           	callstack 0
  1670                           
  1671                           ; 2 bytes @ 0x1A
  1672   00001B                     	ds	1
  1673   00001C                     ??___flmul:
  1674   00001C                     ___awdiv@counter:
  1675                           	callstack 0
  1676   00001C                     stoa@l:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x1B
  1680   00001C                     	ds	1
  1681   00001D                     ??_pad:
  1682   00001D                     ___awdiv@sign:
  1683                           	callstack 0
  1684                           
  1685                           ; 1 bytes @ 0x1C
  1686   00001D                     	ds	1
  1687   00001E                     ___awdiv@quotient:
  1688                           	callstack 0
  1689   00001E                     pad@i:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x1D
  1693   00001E                     	ds	2
  1694   000020                     ??_runPWM:
  1695   000020                     ___flmul@sign:
  1696                           	callstack 0
  1697   000020                     dtoa@fp:
  1698                           	callstack 0
  1699   000020                     utoa@fp:
  1700                           	callstack 0
  1701                           
  1702                           ; 2 bytes @ 0x1F
  1703   000020                     	ds	1
  1704   000021                     ___flmul@aexp:
  1705                           	callstack 0
  1706   000021                     runGPIO@numberOfStates:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x20
  1710   000021                     	ds	1
  1711   000022                     runPWM@keepState:
  1712                           	callstack 0
  1713   000022                     dtoa@d:
  1714                           	callstack 0
  1715   000022                     utoa@d:
  1716                           	callstack 0
  1717   000022                     ___flmul@grs:
  1718                           	callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x21
  1721   000022                     	ds	1
  1722   000023                     runGPIO@GPIOi:
  1723                           	callstack 0
  1724   000023                     runPWM@multiplier:
  1725                           	callstack 0
  1726                           
  1727                           ; 1 bytes @ 0x22
  1728   000023                     	ds	1
  1729   000024                     runGPIO@j:
  1730                           	callstack 0
  1731   000024                     _dtoa$4039:
  1732                           	callstack 0
  1733   000024                     utoa@w:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x23
  1737   000024                     	ds	2
  1738   000026                     ___flmul@bexp:
  1739                           	callstack 0
  1740   000026                     dtoa@w:
  1741                           	callstack 0
  1742   000026                     utoa@p:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x25
  1746   000026                     	ds	1
  1747   000027                     ___flmul@prod:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x26
  1751   000027                     	ds	1
  1752   000028                     dtoa@p:
  1753                           	callstack 0
  1754   000028                     utoa@i:
  1755                           	callstack 0
  1756                           
  1757                           ; 2 bytes @ 0x27
  1758   000028                     	ds	2
  1759   00002A                     dtoa@s:
  1760                           	callstack 0
  1761                           
  1762                           ; 1 bytes @ 0x29
  1763   00002A                     	ds	1
  1764   00002B                     ___flmul@temp:
  1765                           	callstack 0
  1766   00002B                     dtoa@i:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0x2A
  1770   00002B                     	ds	2
  1771   00002D                     ?___fldiv:
  1772                           	callstack 0
  1773   00002D                     ___flge@ff1:
  1774                           	callstack 0
  1775   00002D                     ___fldiv@b:
  1776                           	callstack 0
  1777                           
  1778                           ; 4 bytes @ 0x2C
  1779   00002D                     	ds	4
  1780   000031                     ___flge@ff2:
  1781                           	callstack 0
  1782   000031                     ___fldiv@a:
  1783                           	callstack 0
  1784                           
  1785                           ; 4 bytes @ 0x30
  1786   000031                     	ds	4
  1787   000035                     ??___fldiv:
  1788   000035                     ??___flge:
  1789                           
  1790                           ; 1 bytes @ 0x34
  1791   000035                     	ds	4
  1792   000039                     ___fldiv@rem:
  1793                           	callstack 0
  1794                           
  1795                           ; 4 bytes @ 0x38
  1796   000039                     	ds	4
  1797   00003D                     ___fldiv@sign:
  1798                           	callstack 0
  1799                           
  1800                           ; 1 bytes @ 0x3C
  1801   00003D                     	ds	1
  1802   00003E                     ___fldiv@new_exp:
  1803                           	callstack 0
  1804                           
  1805                           ; 2 bytes @ 0x3D
  1806   00003E                     	ds	2
  1807   000040                     ___fldiv@grs:
  1808                           	callstack 0
  1809                           
  1810                           ; 4 bytes @ 0x3F
  1811   000040                     	ds	4
  1812   000044                     ___fldiv@bexp:
  1813                           	callstack 0
  1814                           
  1815                           ; 1 bytes @ 0x43
  1816   000044                     	ds	1
  1817   000045                     ___fldiv@aexp:
  1818                           	callstack 0
  1819                           
  1820                           ; 1 bytes @ 0x44
  1821   000045                     	ds	1
  1822   000046                     ?___fladd:
  1823                           	callstack 0
  1824   000046                     ?_floorf:
  1825                           	callstack 0
  1826   000046                     ___fladd@b:
  1827                           	callstack 0
  1828   000046                     floorf@x:
  1829                           	callstack 0
  1830                           
  1831                           ; 4 bytes @ 0x45
  1832   000046                     	ds	4
  1833   00004A                     ??_floorf:
  1834   00004A                     ___fladd@a:
  1835                           	callstack 0
  1836                           
  1837                           ; 4 bytes @ 0x49
  1838   00004A                     	ds	4
  1839   00004E                     ??___fladd:
  1840                           
  1841                           ; 1 bytes @ 0x4D
  1842   00004E                     	ds	4
  1843   000052                     ___fltol@sign1:
  1844                           	callstack 0
  1845                           
  1846                           ; 1 bytes @ 0x51
  1847   000052                     	ds	1
  1848   000053                     ___fltol@exp1:
  1849                           	callstack 0
  1850                           
  1851                           ; 1 bytes @ 0x52
  1852   000053                     	ds	1
  1853   000054                     printf@ap:
  1854                           	callstack 0
  1855                           
  1856                           ; 1 bytes @ 0x53
  1857   000054                     	ds	1
  1858                           
  1859 ;;
  1860 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1861 ;;
  1862 ;; *************** function _main *****************
  1863 ;; Defined at:
  1864 ;;		line 10 in file "main.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  menuI           1  157[BANK0 ] unsigned char 
  1869 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:        4 bytes
  1884 ;; Hardware stack levels required when called: 10
  1885 ;; This function calls:
  1886 ;;		_LCD_Init
  1887 ;;		_LCD_ShowString
  1888 ;;		_moveDisplay
  1889 ;;		_runADC
  1890 ;;		_runDAC
  1891 ;;		_runGAME
  1892 ;;		_runGPIO
  1893 ;;		_runMUSIC
  1894 ;;		_runPWM
  1895 ;;		_runUART
  1896 ;; This function is called by:
  1897 ;;		Startup code after reset
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text0
  1902   0029EE                     __ptext0:
  1903                           	callstack 0
  1904   0029EE                     _main:
  1905                           	callstack 21
  1906   0029EE                     
  1907                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1908   0029EE  0E05               	movlw	5
  1909   0029F0  0100               	movlb	0	; () banked
  1910   0029F2  6FFB               	movwf	(??_main+1)& (0+255),b
  1911   0029F4  0E0F               	movlw	15
  1912   0029F6  6FFA               	movwf	??_main& (0+255),b
  1913   0029F8  0EF1               	movlw	241
  1914   0029FA                     u10357:
  1915   0029FA  2EE8               	decfsz	wreg,f,c
  1916   0029FC  D7FE               	bra	u10357
  1917   0029FE  2FFA               	decfsz	??_main& (0+255),f,b
  1918   002A00  D7FC               	bra	u10357
  1919   002A02  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1920   002A04  D7FA               	bra	u10357
  1921   002A06                     
  1922                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1923   002A06  8094               	bsf	148,0,c	;volatile
  1924   002A08                     
  1925                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1926   002A08  8892               	bsf	146,4,c	;volatile
  1927   002A0A                     
  1928                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1929   002A0A  8692               	bsf	146,3,c	;volatile
  1930   002A0C                     
  1931                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1932   002A0C  8492               	bsf	146,2,c	;volatile
  1933   002A0E                     
  1934                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1935   002A0E  010F               	movlb	15	; () banked
  1936   002A10  9738               	bcf	56,3,b	;volatile
  1937   002A12                     
  1938                           ; BSR set to: 15
  1939                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1940   002A12  9538               	bcf	56,2,b	;volatile
  1941   002A14                     
  1942                           ; BSR set to: 15
  1943                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1944   002A14  9495               	bcf	149,2,c	;volatile
  1945   002A16                     
  1946                           ; BSR set to: 15
  1947                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1948   002A16  9695               	bcf	149,3,c	;volatile
  1949   002A18                     
  1950                           ; BSR set to: 15
  1951                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1952   002A18  9894               	bcf	148,4,c	;volatile
  1953   002A1A                     
  1954                           ; BSR set to: 15
  1955                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1956   002A1A  9895               	bcf	149,4,c	;volatile
  1957   002A1C                     
  1958                           ; BSR set to: 15
  1959                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1960   002A1C  9A95               	bcf	149,5,c	;volatile
  1961   002A1E                     
  1962                           ; BSR set to: 15
  1963                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1964   002A1E  9C95               	bcf	149,6,c	;volatile
  1965   002A20                     
  1966                           ; BSR set to: 15
  1967                           ;main.c: 27:     LATDbits.LD2 = 1;
  1968   002A20  848C               	bsf	140,2,c	;volatile
  1969   002A22                     
  1970                           ; BSR set to: 15
  1971                           ;main.c: 28:     LATDbits.LD3 = 1;
  1972   002A22  868C               	bsf	140,3,c	;volatile
  1973   002A24                     
  1974                           ; BSR set to: 15
  1975                           ;main.c: 29:     LATCbits.LC4 = 1;
  1976   002A24  888B               	bsf	139,4,c	;volatile
  1977   002A26                     
  1978                           ; BSR set to: 15
  1979                           ;main.c: 30:     LATDbits.LD4 = 1;
  1980   002A26  888C               	bsf	140,4,c	;volatile
  1981   002A28                     
  1982                           ; BSR set to: 15
  1983                           ;main.c: 31:     LATDbits.LD5 = 1;
  1984   002A28  8A8C               	bsf	140,5,c	;volatile
  1985   002A2A                     
  1986                           ; BSR set to: 15
  1987                           ;main.c: 32:     LATDbits.LD6 = 1;
  1988   002A2A  8C8C               	bsf	140,6,c	;volatile
  1989   002A2C                     
  1990                           ; BSR set to: 15
  1991                           ;main.c: 35:     LCD_Init();
  1992   002A2C  EC35  F023         	call	_LCD_Init	;wreg free
  1993   002A30                     
  1994                           ;main.c: 36:     uint8_t menuI = 0;
  1995   002A30  0E00               	movlw	0
  1996   002A32  0100               	movlb	0	; () banked
  1997   002A34  6FFD               	movwf	main@menuI& (0+255),b
  1998   002A36                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 37:     uint8_t setUpAgain = 0;
  2001   002A36  0E00               	movlw	0
  2002   002A38  6FFC               	movwf	main@setUpAgain& (0+255),b
  2003   002A3A                     
  2004                           ; BSR set to: 0
  2005                           ;main.c: 39:     LCD_ShowString((char)1, "Vytvoril:       ");
  2006   002A3A  0EF3               	movlw	low STR_1
  2007   002A3C  6E07               	movwf	LCD_ShowString@textData^0,c
  2008   002A3E  0EFE               	movlw	high STR_1
  2009   002A40  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2010   002A42  0E01               	movlw	1
  2011   002A44  EC69  F024         	call	_LCD_ShowString
  2012   002A48                     
  2013                           ;main.c: 40:     LCD_ShowString((char)2, "David Strasak   ");
  2014   002A48  0E26               	movlw	low STR_2
  2015   002A4A  6E07               	movwf	LCD_ShowString@textData^0,c
  2016   002A4C  0EFF               	movlw	high STR_2
  2017   002A4E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2018   002A50  0E02               	movlw	2
  2019   002A52  EC69  F024         	call	_LCD_ShowString
  2020   002A56                     
  2021                           ;main.c: 41:     _delay((unsigned long)((2000)*(32E6/4000.0)));
  2022   002A56  0E52               	movlw	82
  2023   002A58  0100               	movlb	0	; () banked
  2024   002A5A  6FFB               	movwf	(??_main+1)& (0+255),b
  2025   002A5C  0E2B               	movlw	43
  2026   002A5E  6FFA               	movwf	??_main& (0+255),b
  2027   002A60  0E00               	movlw	0
  2028   002A62                     u10367:
  2029   002A62  2EE8               	decfsz	wreg,f,c
  2030   002A64  D7FE               	bra	u10367
  2031   002A66  2FFA               	decfsz	??_main& (0+255),f,b
  2032   002A68  D7FC               	bra	u10367
  2033   002A6A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2034   002A6C  D7FA               	bra	u10367
  2035   002A6E  0000               	nop	
  2036   002A70                     
  2037                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  2038   002A70  0E00               	movlw	0
  2039   002A72  0100               	movlb	0	; () banked
  2040   002A74  6FE7               	movwf	moveDisplay@where& (0+255),b
  2041   002A76  51FD               	movf	main@menuI& (0+255),w,b
  2042   002A78  ECAF  F020         	call	_moveDisplay
  2043   002A7C  0100               	movlb	0	; () banked
  2044   002A7E  6FFD               	movwf	main@menuI& (0+255),b
  2045   002A80                     l8412:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 47:         if(PORTCbits.RC0){
  2049   002A80  A082               	btfss	130,0,c	;volatile
  2050   002A82  EF45  F015         	goto	u10251
  2051   002A86  EF47  F015         	goto	u10250
  2052   002A8A                     u10251:
  2053   002A8A  EF69  F015         	goto	l56
  2054   002A8E                     u10250:
  2055   002A8E                     
  2056                           ; BSR set to: 0
  2057                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2058   002A8E  0E03               	movlw	3
  2059   002A90  0100               	movlb	0	; () banked
  2060   002A92  6FFB               	movwf	(??_main+1)& (0+255),b
  2061   002A94  0E08               	movlw	8
  2062   002A96  6FFA               	movwf	??_main& (0+255),b
  2063   002A98  0E77               	movlw	119
  2064   002A9A                     u10377:
  2065   002A9A  2EE8               	decfsz	wreg,f,c
  2066   002A9C  D7FE               	bra	u10377
  2067   002A9E  2FFA               	decfsz	??_main& (0+255),f,b
  2068   002AA0  D7FC               	bra	u10377
  2069   002AA2  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2070   002AA4  D7FA               	bra	u10377
  2071   002AA6                     
  2072                           ;main.c: 49:             if(PORTCbits.RC0){
  2073   002AA6  A082               	btfss	130,0,c	;volatile
  2074   002AA8  EF58  F015         	goto	u10261
  2075   002AAC  EF5A  F015         	goto	u10260
  2076   002AB0                     u10261:
  2077   002AB0  EF69  F015         	goto	l56
  2078   002AB4                     u10260:
  2079   002AB4                     
  2080                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  2081   002AB4  0E02               	movlw	2
  2082   002AB6  0100               	movlb	0	; () banked
  2083   002AB8  6FE7               	movwf	moveDisplay@where& (0+255),b
  2084   002ABA  51FD               	movf	main@menuI& (0+255),w,b
  2085   002ABC  ECAF  F020         	call	_moveDisplay
  2086   002AC0  0100               	movlb	0	; () banked
  2087   002AC2  6FFD               	movwf	main@menuI& (0+255),b
  2088   002AC4                     l58:
  2089   002AC4  B082               	btfsc	130,0,c	;volatile
  2090   002AC6  EF67  F015         	goto	u10271
  2091   002ACA  EF69  F015         	goto	u10270
  2092   002ACE                     u10271:
  2093   002ACE  EF62  F015         	goto	l58
  2094   002AD2                     u10270:
  2095   002AD2                     l56:
  2096                           
  2097                           ;main.c: 54:         if(PORTAbits.RA4){
  2098   002AD2  A880               	btfss	128,4,c	;volatile
  2099   002AD4  EF6E  F015         	goto	u10281
  2100   002AD8  EF70  F015         	goto	u10280
  2101   002ADC                     u10281:
  2102   002ADC  EF92  F015         	goto	l61
  2103   002AE0                     u10280:
  2104   002AE0                     
  2105                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2106   002AE0  0E03               	movlw	3
  2107   002AE2  0100               	movlb	0	; () banked
  2108   002AE4  6FFB               	movwf	(??_main+1)& (0+255),b
  2109   002AE6  0E08               	movlw	8
  2110   002AE8  6FFA               	movwf	??_main& (0+255),b
  2111   002AEA  0E77               	movlw	119
  2112   002AEC                     u10387:
  2113   002AEC  2EE8               	decfsz	wreg,f,c
  2114   002AEE  D7FE               	bra	u10387
  2115   002AF0  2FFA               	decfsz	??_main& (0+255),f,b
  2116   002AF2  D7FC               	bra	u10387
  2117   002AF4  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2118   002AF6  D7FA               	bra	u10387
  2119   002AF8                     
  2120                           ;main.c: 56:             if(PORTAbits.RA4){
  2121   002AF8  A880               	btfss	128,4,c	;volatile
  2122   002AFA  EF81  F015         	goto	u10291
  2123   002AFE  EF83  F015         	goto	u10290
  2124   002B02                     u10291:
  2125   002B02  EF92  F015         	goto	l61
  2126   002B06                     u10290:
  2127   002B06                     
  2128                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2129   002B06  0E01               	movlw	1
  2130   002B08  0100               	movlb	0	; () banked
  2131   002B0A  6FE7               	movwf	moveDisplay@where& (0+255),b
  2132   002B0C  51FD               	movf	main@menuI& (0+255),w,b
  2133   002B0E  ECAF  F020         	call	_moveDisplay
  2134   002B12  0100               	movlb	0	; () banked
  2135   002B14  6FFD               	movwf	main@menuI& (0+255),b
  2136   002B16                     l63:
  2137   002B16  B880               	btfsc	128,4,c	;volatile
  2138   002B18  EF90  F015         	goto	u10301
  2139   002B1C  EF92  F015         	goto	u10300
  2140   002B20                     u10301:
  2141   002B20  EF8B  F015         	goto	l63
  2142   002B24                     u10300:
  2143   002B24                     l61:
  2144                           
  2145                           ;main.c: 61:         if(PORTAbits.RA3){
  2146   002B24  A680               	btfss	128,3,c	;volatile
  2147   002B26  EF97  F015         	goto	u10311
  2148   002B2A  EF99  F015         	goto	u10310
  2149   002B2E                     u10311:
  2150   002B2E  EF82  F016         	goto	l66
  2151   002B32                     u10310:
  2152   002B32                     
  2153                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2154   002B32  0E03               	movlw	3
  2155   002B34  0100               	movlb	0	; () banked
  2156   002B36  6FFB               	movwf	(??_main+1)& (0+255),b
  2157   002B38  0E08               	movlw	8
  2158   002B3A  6FFA               	movwf	??_main& (0+255),b
  2159   002B3C  0E77               	movlw	119
  2160   002B3E                     u10397:
  2161   002B3E  2EE8               	decfsz	wreg,f,c
  2162   002B40  D7FE               	bra	u10397
  2163   002B42  2FFA               	decfsz	??_main& (0+255),f,b
  2164   002B44  D7FC               	bra	u10397
  2165   002B46  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2166   002B48  D7FA               	bra	u10397
  2167   002B4A                     
  2168                           ;main.c: 63:             if(PORTAbits.RA3){
  2169   002B4A  A680               	btfss	128,3,c	;volatile
  2170   002B4C  EFAA  F015         	goto	u10321
  2171   002B50  EFAC  F015         	goto	u10320
  2172   002B54                     u10321:
  2173   002B54  EF82  F016         	goto	l66
  2174   002B58                     u10320:
  2175   002B58                     l68:
  2176   002B58  B680               	btfsc	128,3,c	;volatile
  2177   002B5A  EFB1  F015         	goto	u10331
  2178   002B5E  EFB3  F015         	goto	u10330
  2179   002B62                     u10331:
  2180   002B62  EFAC  F015         	goto	l68
  2181   002B66                     u10330:
  2182   002B66  EF62  F016         	goto	l8484
  2183   002B6A                     l8432:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2187   002B6A  0E15               	movlw	low STR_3
  2188   002B6C  6E07               	movwf	LCD_ShowString@textData^0,c
  2189   002B6E  0EFF               	movlw	high STR_3
  2190   002B70  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2191   002B72  0E01               	movlw	1
  2192   002B74  EC69  F024         	call	_LCD_ShowString
  2193                           
  2194                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2195   002B78  0E79               	movlw	low (STR_31+2)
  2196   002B7A  6E07               	movwf	LCD_ShowString@textData^0,c
  2197   002B7C  0EFE               	movlw	high (STR_31+2)
  2198   002B7E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2199   002B80  0E02               	movlw	2
  2200   002B82  EC69  F024         	call	_LCD_ShowString
  2201   002B86                     
  2202                           ;main.c: 69:                         runGPIO();
  2203   002B86  EC56  F01F         	call	_runGPIO	;wreg free
  2204   002B8A                     l8436:
  2205                           
  2206                           ;main.c: 70:                         setUpAgain = 1;
  2207   002B8A  0E01               	movlw	1
  2208   002B8C  0100               	movlb	0	; () banked
  2209   002B8E  6FFC               	movwf	main@setUpAgain& (0+255),b
  2210                           
  2211                           ;main.c: 71:                         break;
  2212   002B90  EF82  F016         	goto	l66
  2213   002B94                     l8438:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2217   002B94  0EE2               	movlw	low STR_5
  2218   002B96  6E07               	movwf	LCD_ShowString@textData^0,c
  2219   002B98  0EFE               	movlw	high STR_5
  2220   002B9A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2221   002B9C  0E01               	movlw	1
  2222   002B9E  EC69  F024         	call	_LCD_ShowString
  2223                           
  2224                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2225   002BA2  0E8C               	movlw	low STR_6
  2226   002BA4  6E07               	movwf	LCD_ShowString@textData^0,c
  2227   002BA6  0EFF               	movlw	high STR_6
  2228   002BA8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2229   002BAA  0E02               	movlw	2
  2230   002BAC  EC69  F024         	call	_LCD_ShowString
  2231   002BB0                     
  2232                           ;main.c: 75:                         runUART();
  2233   002BB0  ECA0  F01E         	call	_runUART	;wreg free
  2234   002BB4  EFC5  F015         	goto	l8436
  2235   002BB8                     l8444:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2239   002BB8  0E48               	movlw	low STR_7
  2240   002BBA  6E07               	movwf	LCD_ShowString@textData^0,c
  2241   002BBC  0EFF               	movlw	high STR_7
  2242   002BBE  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2243   002BC0  0E01               	movlw	1
  2244   002BC2  EC69  F024         	call	_LCD_ShowString
  2245                           
  2246                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2247   002BC6  0E79               	movlw	low (STR_31+2)
  2248   002BC8  6E07               	movwf	LCD_ShowString@textData^0,c
  2249   002BCA  0EFE               	movlw	high (STR_31+2)
  2250   002BCC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2251   002BCE  0E02               	movlw	2
  2252   002BD0  EC69  F024         	call	_LCD_ShowString
  2253   002BD4                     
  2254                           ;main.c: 81:                         runPWM();
  2255   002BD4  EC0C  F020         	call	_runPWM	;wreg free
  2256   002BD8  EFC5  F015         	goto	l8436
  2257   002BDC                     l8450:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2261   002BDC  0E7B               	movlw	low STR_9
  2262   002BDE  6E07               	movwf	LCD_ShowString@textData^0,c
  2263   002BE0  0EFF               	movlw	high STR_9
  2264   002BE2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2265   002BE4  0E01               	movlw	1
  2266   002BE6  EC69  F024         	call	_LCD_ShowString
  2267   002BEA                     
  2268                           ;main.c: 86:                         runADC();
  2269   002BEA  EC31  F01A         	call	_runADC	;wreg free
  2270   002BEE  EFC5  F015         	goto	l8436
  2271   002BF2                     l8456:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2275   002BF2  0E6A               	movlw	low STR_10
  2276   002BF4  6E07               	movwf	LCD_ShowString@textData^0,c
  2277   002BF6  0EFF               	movlw	high STR_10
  2278   002BF8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2279   002BFA  0E01               	movlw	1
  2280   002BFC  EC69  F024         	call	_LCD_ShowString
  2281                           
  2282                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2283   002C00  0E9D               	movlw	low STR_11
  2284   002C02  6E07               	movwf	LCD_ShowString@textData^0,c
  2285   002C04  0EFF               	movlw	high STR_11
  2286   002C06  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2287   002C08  0E02               	movlw	2
  2288   002C0A  EC69  F024         	call	_LCD_ShowString
  2289   002C0E                     
  2290                           ;main.c: 92:                         runDAC();
  2291   002C0E  EC99  F016         	call	_runDAC	;wreg free
  2292   002C12  EFC5  F015         	goto	l8436
  2293   002C16                     l8462:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2297   002C16  0E37               	movlw	low STR_12
  2298   002C18  6E07               	movwf	LCD_ShowString@textData^0,c
  2299   002C1A  0EFF               	movlw	high STR_12
  2300   002C1C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2301   002C1E  0E01               	movlw	1
  2302   002C20  EC69  F024         	call	_LCD_ShowString
  2303                           
  2304                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2305   002C24  0E79               	movlw	low (STR_31+2)
  2306   002C26  6E07               	movwf	LCD_ShowString@textData^0,c
  2307   002C28  0EFE               	movlw	high (STR_31+2)
  2308   002C2A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2309   002C2C  0E02               	movlw	2
  2310   002C2E  EC69  F024         	call	_LCD_ShowString
  2311   002C32                     
  2312                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2313   002C32  0E29               	movlw	41
  2314   002C34  0100               	movlb	0	; () banked
  2315   002C36  6FFB               	movwf	(??_main+1)& (0+255),b
  2316   002C38  0E96               	movlw	150
  2317   002C3A  6FFA               	movwf	??_main& (0+255),b
  2318   002C3C  0E7F               	movlw	127
  2319   002C3E                     u10407:
  2320   002C3E  2EE8               	decfsz	wreg,f,c
  2321   002C40  D7FE               	bra	u10407
  2322   002C42  2FFA               	decfsz	??_main& (0+255),f,b
  2323   002C44  D7FC               	bra	u10407
  2324   002C46  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2325   002C48  D7FA               	bra	u10407
  2326   002C4A                     
  2327                           ;main.c: 99:                         LCD_ShowString((char)1, "Pripravit       ");
  2328   002C4A  0E04               	movlw	low STR_14
  2329   002C4C  6E07               	movwf	LCD_ShowString@textData^0,c
  2330   002C4E  0EFF               	movlw	high STR_14
  2331   002C50  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2332   002C52  0E01               	movlw	1
  2333   002C54  EC69  F024         	call	_LCD_ShowString
  2334                           
  2335                           ;main.c: 100:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2336   002C58  0E29               	movlw	41
  2337   002C5A  0100               	movlb	0	; () banked
  2338   002C5C  6FFB               	movwf	(??_main+1)& (0+255),b
  2339   002C5E  0E96               	movlw	150
  2340   002C60  6FFA               	movwf	??_main& (0+255),b
  2341   002C62  0E7F               	movlw	127
  2342   002C64                     u10417:
  2343   002C64  2EE8               	decfsz	wreg,f,c
  2344   002C66  D7FE               	bra	u10417
  2345   002C68  2FFA               	decfsz	??_main& (0+255),f,b
  2346   002C6A  D7FC               	bra	u10417
  2347   002C6C  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2348   002C6E  D7FA               	bra	u10417
  2349   002C70                     
  2350                           ;main.c: 101:                         LCD_ShowString((char)2, "           Pozor");
  2351   002C70  0EAE               	movlw	low STR_15
  2352   002C72  6E07               	movwf	LCD_ShowString@textData^0,c
  2353   002C74  0EFF               	movlw	high STR_15
  2354   002C76  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2355   002C78  0E02               	movlw	2
  2356   002C7A  EC69  F024         	call	_LCD_ShowString
  2357   002C7E                     
  2358                           ;main.c: 102:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2359   002C7E  0E52               	movlw	82
  2360   002C80  0100               	movlb	0	; () banked
  2361   002C82  6FFB               	movwf	(??_main+1)& (0+255),b
  2362   002C84  0E2B               	movlw	43
  2363   002C86  6FFA               	movwf	??_main& (0+255),b
  2364   002C88  0E00               	movlw	0
  2365   002C8A                     u10427:
  2366   002C8A  2EE8               	decfsz	wreg,f,c
  2367   002C8C  D7FE               	bra	u10427
  2368   002C8E  2FFA               	decfsz	??_main& (0+255),f,b
  2369   002C90  D7FC               	bra	u10427
  2370   002C92  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2371   002C94  D7FA               	bra	u10427
  2372   002C96  0000               	nop	
  2373   002C98                     
  2374                           ;main.c: 103:                         runGAME();
  2375   002C98  EC4F  F00F         	call	_runGAME	;wreg free
  2376   002C9C  EFC5  F015         	goto	l8436
  2377   002CA0                     l8476:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;main.c: 107:                         LCD_ShowString((char)1, "Nebylo          ");
  2381   002CA0  0ED1               	movlw	low STR_16
  2382   002CA2  6E07               	movwf	LCD_ShowString@textData^0,c
  2383   002CA4  0EFE               	movlw	high STR_16
  2384   002CA6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2385   002CA8  0E01               	movlw	1
  2386   002CAA  EC69  F024         	call	_LCD_ShowString
  2387                           
  2388                           ;main.c: 108:                         LCD_ShowString((char)2, "Implementovano  ");
  2389   002CAE  0E59               	movlw	low STR_17
  2390   002CB0  6E07               	movwf	LCD_ShowString@textData^0,c
  2391   002CB2  0EFF               	movlw	high STR_17
  2392   002CB4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2393   002CB6  0E02               	movlw	2
  2394   002CB8  EC69  F024         	call	_LCD_ShowString
  2395   002CBC                     
  2396                           ;main.c: 109:                         runMUSIC();
  2397   002CBC  EC67  F029         	call	_runMUSIC	;wreg free
  2398   002CC0  EFC5  F015         	goto	l8436
  2399   002CC4                     l8484:
  2400   002CC4  0100               	movlb	0	; () banked
  2401   002CC6  51FD               	movf	main@menuI& (0+255),w,b
  2402                           
  2403                           ; Switch size 1, requested type "simple"
  2404                           ; Number of cases is 7, Range of values is 0 to 6
  2405                           ; switch strategies available:
  2406                           ; Name         Instructions Cycles
  2407                           ; simple_byte           22    12 (average)
  2408                           ;	Chosen strategy is simple_byte
  2409   002CC8  0A00               	xorlw	0	; case 0
  2410   002CCA  B4D8               	btfsc	status,2,c
  2411   002CCC  EFB5  F015         	goto	l8432
  2412   002CD0  0A01               	xorlw	1	; case 1
  2413   002CD2  B4D8               	btfsc	status,2,c
  2414   002CD4  EFCA  F015         	goto	l8438
  2415   002CD8  0A03               	xorlw	3	; case 2
  2416   002CDA  B4D8               	btfsc	status,2,c
  2417   002CDC  EFDC  F015         	goto	l8444
  2418   002CE0  0A01               	xorlw	1	; case 3
  2419   002CE2  B4D8               	btfsc	status,2,c
  2420   002CE4  EFEE  F015         	goto	l8450
  2421   002CE8  0A07               	xorlw	7	; case 4
  2422   002CEA  B4D8               	btfsc	status,2,c
  2423   002CEC  EFF9  F015         	goto	l8456
  2424   002CF0  0A01               	xorlw	1	; case 5
  2425   002CF2  B4D8               	btfsc	status,2,c
  2426   002CF4  EF0B  F016         	goto	l8462
  2427   002CF8  0A03               	xorlw	3	; case 6
  2428   002CFA  B4D8               	btfsc	status,2,c
  2429   002CFC  EF50  F016         	goto	l8476
  2430   002D00  EF82  F016         	goto	l66
  2431   002D04                     l66:
  2432                           
  2433                           ;main.c: 116:         if(PORTAbits.RA2){
  2434   002D04  5080               	movf	128,w,c	;volatile
  2435   002D06                     
  2436                           ;main.c: 120:         if(setUpAgain){
  2437   002D06  0100               	movlb	0	; () banked
  2438   002D08  51FC               	movf	main@setUpAgain& (0+255),w,b
  2439   002D0A  B4D8               	btfsc	status,2,c
  2440   002D0C  EF8A  F016         	goto	u10341
  2441   002D10  EF8C  F016         	goto	u10340
  2442   002D14                     u10341:
  2443   002D14  EF40  F015         	goto	l8412
  2444   002D18                     u10340:
  2445   002D18                     
  2446                           ; BSR set to: 0
  2447                           ;main.c: 121:         menuI = moveDisplay(menuI,0);
  2448   002D18  0E00               	movlw	0
  2449   002D1A  6FE7               	movwf	moveDisplay@where& (0+255),b
  2450   002D1C  51FD               	movf	main@menuI& (0+255),w,b
  2451   002D1E  ECAF  F020         	call	_moveDisplay
  2452   002D22  0100               	movlb	0	; () banked
  2453   002D24  6FFD               	movwf	main@menuI& (0+255),b
  2454   002D26                     
  2455                           ; BSR set to: 0
  2456                           ;main.c: 122:         setUpAgain = 0;
  2457   002D26  0E00               	movlw	0
  2458   002D28  6FFC               	movwf	main@setUpAgain& (0+255),b
  2459   002D2A  EF40  F015         	goto	l8412
  2460   002D2E  EFA7  F000         	goto	start
  2461   002D32                     __end_of_main:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _runUART *****************
  2465 ;; Defined at:
  2466 ;;		line 4 in file "UART.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  p               2  152[BANK0 ] int 
  2471 ;;  i               2  150[BANK0 ] unsigned int 
  2472 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2473 ;;  len             2  148[BANK0 ] unsigned int 
  2474 ;;  keepState       1  147[BANK0 ] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;Total ram usage:       40 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 9
  2491 ;; This function calls:
  2492 ;;		_printf
  2493 ;;		_strlen
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text1
  2500   003D40                     __ptext1:
  2501                           	callstack 0
  2502   003D40                     _runUART:
  2503                           	callstack 21
  2504   003D40                     
  2505                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2506   003D40  8492               	bsf	146,2,c	;volatile
  2507                           
  2508                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2509   003D42  010F               	movlb	15	; () banked
  2510   003D44  9D3A               	bcf	58,6,b	;volatile
  2511                           
  2512                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2513   003D46  9F3A               	bcf	58,7,b	;volatile
  2514                           
  2515                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2516   003D48  8C94               	bsf	148,6,c	;volatile
  2517                           
  2518                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2519   003D4A  8E94               	bsf	148,7,c	;volatile
  2520   003D4C                     
  2521                           ; BSR set to: 15
  2522                           ;UART.c: 14:     SPBRG1 = 25;
  2523   003D4C  0E19               	movlw	25
  2524   003D4E  6EAF               	movwf	175,c	;volatile
  2525   003D50                     
  2526                           ; BSR set to: 15
  2527                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2528   003D50  98AC               	bcf	172,4,c	;volatile
  2529   003D52                     
  2530                           ; BSR set to: 15
  2531                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2532   003D52  8EAB               	bsf	171,7,c	;volatile
  2533   003D54                     
  2534                           ; BSR set to: 15
  2535                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2536   003D54  8AAC               	bsf	172,5,c	;volatile
  2537   003D56                     
  2538                           ; BSR set to: 15
  2539                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2540   003D56  88AB               	bsf	171,4,c	;volatile
  2541                           
  2542                           ;UART.c: 21:     UARTIE = 1;
  2543   003D58  0E01               	movlw	1
  2544   003D5A  0101               	movlb	1	; () banked
  2545   003D5C  6F25               	movwf	_UARTIE& (0+255),b
  2546   003D5E                     
  2547                           ; BSR set to: 1
  2548                           ;UART.c: 22:     RC1IE = 1;
  2549   003D5E  8A9D               	bsf	3997,5,c	;volatile
  2550   003D60                     
  2551                           ; BSR set to: 1
  2552                           ;UART.c: 23:     PEIE = 1;
  2553   003D60  8CF2               	bsf	4082,6,c	;volatile
  2554   003D62                     
  2555                           ; BSR set to: 1
  2556                           ;UART.c: 24:     GIE = 1;
  2557   003D62  8EF2               	bsf	4082,7,c	;volatile
  2558                           
  2559                           ;UART.c: 26:     uint8_t keepState = 1;
  2560   003D64  0E01               	movlw	1
  2561   003D66  0100               	movlb	0	; () banked
  2562   003D68  6FF3               	movwf	runUART@keepState& (0+255),b
  2563                           
  2564                           ;UART.c: 28:     while(keepState){
  2565   003D6A  EF43  F01F         	goto	l579
  2566   003D6E                     l8042:
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;UART.c: 29:         if(gmail.full){
  2570   003D6E  0101               	movlb	1	; () banked
  2571   003D70  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2572   003D72  B4D8               	btfsc	status,2,c
  2573   003D74  EFBE  F01E         	goto	u9841
  2574   003D78  EFC0  F01E         	goto	u9840
  2575   003D7C                     u9841:
  2576   003D7C  EF1F  F01F         	goto	l581
  2577   003D80                     u9840:
  2578   003D80                     
  2579                           ; BSR set to: 1
  2580                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2581   003D80  0E77               	movlw	low _gmail
  2582   003D82  6E06               	movwf	strlen@s^0,c
  2583   003D84  0E01               	movlw	high _gmail
  2584   003D86  6E07               	movwf	(strlen@s+1)^0,c
  2585   003D88  EC7E  F028         	call	_strlen	;wreg free
  2586   003D8C  C006  F0F4         	movff	?_strlen,runUART@len
  2587   003D90  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2588   003D94                     
  2589                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2590   003D94  0E00               	movlw	0
  2591   003D96  0100               	movlb	0	; () banked
  2592   003D98  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2593   003D9A  0E00               	movlw	0
  2594   003D9C  6FF6               	movwf	runUART@i& (0+255),b
  2595   003D9E  EFE7  F01E         	goto	l8052
  2596   003DA2                     l8048:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2600   003DA2  0E76               	movlw	low (_gmail+65535)
  2601   003DA4  6FD2               	movwf	??_runUART& (0+255),b
  2602   003DA6  0E01               	movlw	high (_gmail+65535)
  2603   003DA8  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2604   003DAA  51F6               	movf	runUART@i& (0+255),w,b
  2605   003DAC  5FD2               	subwf	??_runUART& (0+255),f,b
  2606   003DAE  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2607   003DB0  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2608   003DB2  51F4               	movf	runUART@len& (0+255),w,b
  2609   003DB4  25D2               	addwf	??_runUART& (0+255),w,b
  2610   003DB6  6ED9               	movwf	fsr2l,c
  2611   003DB8  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2612   003DBA  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2613   003DBC  6EDA               	movwf	fsr2h,c
  2614   003DBE  51F6               	movf	runUART@i& (0+255),w,b
  2615   003DC0  0FD4               	addlw	low runUART@reversed
  2616   003DC2  6EE1               	movwf	fsr1l,c
  2617   003DC4  6AE2               	clrf	fsr1h,c
  2618   003DC6  CFDF FFE7          	movff	indf2,indf1
  2619   003DCA                     
  2620                           ; BSR set to: 0
  2621                           ;UART.c: 35:             }
  2622   003DCA  4BF6               	infsnz	runUART@i& (0+255),f,b
  2623   003DCC  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2624   003DCE                     l8052:
  2625                           
  2626                           ; BSR set to: 0
  2627   003DCE  51F4               	movf	runUART@len& (0+255),w,b
  2628   003DD0  5DF6               	subwf	runUART@i& (0+255),w,b
  2629   003DD2  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2630   003DD4  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2631   003DD6  A0D8               	btfss	status,0,c
  2632   003DD8  EFF0  F01E         	goto	u9851
  2633   003DDC  EFF2  F01E         	goto	u9850
  2634   003DE0                     u9851:
  2635   003DE0  EFD1  F01E         	goto	l8048
  2636   003DE4                     u9850:
  2637   003DE4                     
  2638                           ; BSR set to: 0
  2639                           ;UART.c: 36:             reversed[len] = '\0';
  2640   003DE4  51F4               	movf	runUART@len& (0+255),w,b
  2641   003DE6  0FD4               	addlw	low runUART@reversed
  2642   003DE8  6ED9               	movwf	fsr2l,c
  2643   003DEA  6ADA               	clrf	fsr2h,c
  2644   003DEC  6ADF               	clrf	indf2,c
  2645   003DEE                     
  2646                           ; BSR set to: 0
  2647                           ;UART.c: 37:             printf("%s \n", reversed);
  2648   003DEE  0ED2               	movlw	low STR_30
  2649   003DF0  6FCE               	movwf	printf@fmt& (0+255),b
  2650   003DF2  0EFF               	movlw	high STR_30
  2651   003DF4  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2652   003DF6  0ED4               	movlw	low runUART@reversed
  2653   003DF8  6FD0               	movwf	(?_printf+2)& (0+255),b
  2654   003DFA  6BD1               	clrf	(?_printf+3)& (0+255),b
  2655   003DFC  EC22  F029         	call	_printf	;wreg free
  2656   003E00                     
  2657                           ;UART.c: 39:             gmail.full = 0;
  2658   003E00  0E00               	movlw	0
  2659   003E02  0101               	movlb	1	; () banked
  2660   003E04  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2661   003E06                     
  2662                           ; BSR set to: 1
  2663                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2664   003E06  0E00               	movlw	0
  2665   003E08  0100               	movlb	0	; () banked
  2666   003E0A  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2667   003E0C  0E00               	movlw	0
  2668   003E0E  6FF8               	movwf	runUART@p& (0+255),b
  2669   003E10                     l8066:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2673   003E10  0E77               	movlw	low _gmail
  2674   003E12  25F8               	addwf	runUART@p& (0+255),w,b
  2675   003E14  6ED9               	movwf	fsr2l,c
  2676   003E16  0E01               	movlw	high _gmail
  2677   003E18  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2678   003E1A  6EDA               	movwf	fsr2h,c
  2679   003E1C  6ADF               	clrf	indf2,c
  2680   003E1E                     
  2681                           ; BSR set to: 0
  2682                           ;UART.c: 43:             }
  2683   003E1E  4BF8               	infsnz	runUART@p& (0+255),f,b
  2684   003E20  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2685   003E22                     
  2686                           ; BSR set to: 0
  2687   003E22  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2688   003E24  EF1D  F01F         	goto	u9861
  2689   003E28  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2690   003E2A  E109               	bnz	u9860
  2691   003E2C  0E1F               	movlw	31
  2692   003E2E  5DF8               	subwf	runUART@p& (0+255),w,b
  2693   003E30  A0D8               	btfss	status,0,c
  2694   003E32  EF1D  F01F         	goto	u9861
  2695   003E36  EF1F  F01F         	goto	u9860
  2696   003E3A                     u9861:
  2697   003E3A  EF08  F01F         	goto	l8066
  2698   003E3E                     u9860:
  2699   003E3E                     l581:
  2700                           
  2701                           ;UART.c: 47:         if(PORTAbits.RA2){
  2702   003E3E  A480               	btfss	128,2,c	;volatile
  2703   003E40  EF24  F01F         	goto	u9871
  2704   003E44  EF26  F01F         	goto	u9870
  2705   003E48                     u9871:
  2706   003E48  EF43  F01F         	goto	l579
  2707   003E4C                     u9870:
  2708   003E4C                     
  2709                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2710   003E4C  0E03               	movlw	3
  2711   003E4E  0100               	movlb	0	; () banked
  2712   003E50  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2713   003E52  0E08               	movlw	8
  2714   003E54  6FD2               	movwf	??_runUART& (0+255),b
  2715   003E56  0E77               	movlw	119
  2716   003E58                     u10437:
  2717   003E58  2EE8               	decfsz	wreg,f,c
  2718   003E5A  D7FE               	bra	u10437
  2719   003E5C  2FD2               	decfsz	??_runUART& (0+255),f,b
  2720   003E5E  D7FC               	bra	u10437
  2721   003E60  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2722   003E62  D7FA               	bra	u10437
  2723   003E64                     
  2724                           ;UART.c: 49:             if(PORTAbits.RA2){
  2725   003E64  A480               	btfss	128,2,c	;volatile
  2726   003E66  EF37  F01F         	goto	u9881
  2727   003E6A  EF39  F01F         	goto	u9880
  2728   003E6E                     u9881:
  2729   003E6E  EF43  F01F         	goto	l579
  2730   003E72                     u9880:
  2731   003E72                     l589:
  2732   003E72  B480               	btfsc	128,2,c	;volatile
  2733   003E74  EF3E  F01F         	goto	u9891
  2734   003E78  EF40  F01F         	goto	u9890
  2735   003E7C                     u9891:
  2736   003E7C  EF39  F01F         	goto	l589
  2737   003E80                     u9890:
  2738   003E80                     
  2739                           ;UART.c: 51:                 keepState = 0;
  2740   003E80  0E00               	movlw	0
  2741   003E82  0100               	movlb	0	; () banked
  2742   003E84  6FF3               	movwf	runUART@keepState& (0+255),b
  2743   003E86                     l579:
  2744                           
  2745                           ;UART.c: 28:     while(keepState){
  2746   003E86  0100               	movlb	0	; () banked
  2747   003E88  51F3               	movf	runUART@keepState& (0+255),w,b
  2748   003E8A  A4D8               	btfss	status,2,c
  2749   003E8C  EF4A  F01F         	goto	u9901
  2750   003E90  EF4C  F01F         	goto	u9900
  2751   003E94                     u9901:
  2752   003E94  EFB7  F01E         	goto	l8042
  2753   003E98                     u9900:
  2754   003E98                     
  2755                           ; BSR set to: 0
  2756                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2757   003E98  9EAB               	bcf	171,7,c	;volatile
  2758                           
  2759                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2760   003E9A  9AAC               	bcf	172,5,c	;volatile
  2761                           
  2762                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2763   003E9C  98AB               	bcf	171,4,c	;volatile
  2764   003E9E                     
  2765                           ; BSR set to: 0
  2766                           ;UART.c: 61:     UARTIE = 0;
  2767   003E9E  0E00               	movlw	0
  2768   003EA0  0101               	movlb	1	; () banked
  2769   003EA2  6F25               	movwf	_UARTIE& (0+255),b
  2770   003EA4                     
  2771                           ; BSR set to: 1
  2772                           ;UART.c: 62:     RC1IE = 0;
  2773   003EA4  9A9D               	bcf	3997,5,c	;volatile
  2774   003EA6                     
  2775                           ; BSR set to: 1
  2776                           ;UART.c: 63:     PEIE = 0;
  2777   003EA6  9CF2               	bcf	4082,6,c	;volatile
  2778   003EA8                     
  2779                           ; BSR set to: 1
  2780                           ;UART.c: 64:     GIE = 0;
  2781   003EA8  9EF2               	bcf	4082,7,c	;volatile
  2782   003EAA                     
  2783                           ; BSR set to: 1
  2784   003EAA  0012               	return		;funcret
  2785   003EAC                     __end_of_runUART:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _strlen *****************
  2789 ;; Defined at:
  2790 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2793 ;;		 -> gmail$data(31), gmail(32), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2796 ;;		 -> gmail$data(31), gmail(32), 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    5[COMRAM] unsigned int 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        4 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_runUART
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text2
  2821   0050FC                     __ptext2:
  2822                           	callstack 0
  2823   0050FC                     _strlen:
  2824                           	callstack 28
  2825   0050FC  C006  F008         	movff	strlen@s,strlen@a
  2826   005100  C007  F009         	movff	strlen@s+1,strlen@a+1
  2827   005104  EF86  F028         	goto	l7904
  2828   005108                     l7902:
  2829   005108  4A06               	infsnz	strlen@s^0,f,c
  2830   00510A  2A07               	incf	(strlen@s+1)^0,f,c
  2831   00510C                     l7904:
  2832   00510C  C006  FFD9         	movff	strlen@s,fsr2l
  2833   005110  C007  FFDA         	movff	strlen@s+1,fsr2h
  2834   005114  50DF               	movf	indf2,w,c
  2835   005116  A4D8               	btfss	status,2,c
  2836   005118  EF90  F028         	goto	u9651
  2837   00511C  EF92  F028         	goto	u9650
  2838   005120                     u9651:
  2839   005120  EF84  F028         	goto	l7902
  2840   005124                     u9650:
  2841   005124  5008               	movf	strlen@a^0,w,c
  2842   005126  5C06               	subwf	strlen@s^0,w,c
  2843   005128  6E06               	movwf	?_strlen^0,c
  2844   00512A  5009               	movf	(strlen@a+1)^0,w,c
  2845   00512C  5807               	subwfb	(strlen@s+1)^0,w,c
  2846   00512E  6E07               	movwf	(?_strlen+1)^0,c
  2847   005130  0012               	return		;funcret
  2848   005132                     __end_of_strlen:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _runPWM *****************
  2852 ;; Defined at:
  2853 ;;		line 11 in file "PWM.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  multiplier      1   34[COMRAM] unsigned char 
  2858 ;;  keepState       1   33[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:        4 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 2
  2875 ;; This function calls:
  2876 ;;		___awdiv
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text3
  2883   004018                     __ptext3:
  2884                           	callstack 0
  2885   004018                     _runPWM:
  2886                           	callstack 28
  2887   004018                     
  2888                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2889   004018  8494               	bsf	148,2,c	;volatile
  2890   00401A                     
  2891                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2892   00401A  0EFC               	movlw	-4
  2893   00401C  010F               	movlb	15	; () banked
  2894   00401E  1749               	andwf	73,f,b	;volatile
  2895                           
  2896                           ;PWM.c: 15:     PR2 = 199;
  2897   004020  0EC7               	movlw	199
  2898   004022  6EBB               	movwf	187,c	;volatile
  2899                           
  2900                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2901   004024  0E0C               	movlw	12
  2902   004026  12BD               	iorwf	189,f,c	;volatile
  2903                           
  2904                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2905   004028  50BD               	movf	189,w,c	;volatile
  2906   00402A  0B3F               	andlw	-193
  2907   00402C  0980               	iorlw	128
  2908   00402E  6EBD               	movwf	189,c	;volatile
  2909                           
  2910                           ;PWM.c: 18:     CCPR1L = 0;
  2911   004030  0E00               	movlw	0
  2912   004032  6EBE               	movwf	190,c	;volatile
  2913   004034                     
  2914                           ; BSR set to: 15
  2915                           ;PWM.c: 19:     TMR2IF = 0;
  2916   004034  929E               	bcf	3998,1,c	;volatile
  2917   004036                     
  2918                           ; BSR set to: 15
  2919                           ;PWM.c: 20:     TMR2ON = 1;
  2920   004036  84BA               	bsf	4026,2,c	;volatile
  2921   004038                     l519:
  2922   004038  A29E               	btfss	3998,1,c	;volatile
  2923   00403A  EF21  F020         	goto	u9911
  2924   00403E  EF23  F020         	goto	u9910
  2925   004042                     u9911:
  2926   004042  EF1C  F020         	goto	l519
  2927   004046                     u9910:
  2928   004046                     
  2929                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2930   004046  8494               	bsf	148,2,c	;volatile
  2931                           
  2932                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2933   004048  8892               	bsf	146,4,c	;volatile
  2934                           
  2935                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2936   00404A  8492               	bsf	146,2,c	;volatile
  2937                           
  2938                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2939   00404C  9495               	bcf	149,2,c	;volatile
  2940                           
  2941                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2942   00404E  9695               	bcf	149,3,c	;volatile
  2943                           
  2944                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2945   004050  9894               	bcf	148,4,c	;volatile
  2946                           
  2947                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2948   004052  9895               	bcf	149,4,c	;volatile
  2949                           
  2950                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2951   004054  9A95               	bcf	149,5,c	;volatile
  2952                           
  2953                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2954   004056  9C95               	bcf	149,6,c	;volatile
  2955                           
  2956                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2957   004058  848C               	bsf	140,2,c	;volatile
  2958                           
  2959                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2960   00405A  868C               	bsf	140,3,c	;volatile
  2961                           
  2962                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2963   00405C  888B               	bsf	139,4,c	;volatile
  2964                           
  2965                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2966   00405E  888C               	bsf	140,4,c	;volatile
  2967                           
  2968                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2969   004060  8A8C               	bsf	140,5,c	;volatile
  2970                           
  2971                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2972   004062  8C8C               	bsf	140,6,c	;volatile
  2973   004064                     
  2974                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2975   004064  0E01               	movlw	1
  2976   004066  6E22               	movwf	runPWM@keepState^0,c
  2977                           
  2978                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2979   004068  0E00               	movlw	0
  2980   00406A  6E23               	movwf	runPWM@multiplier^0,c
  2981                           
  2982                           ;PWM.c: 47:     while(keepState){
  2983   00406C  EFA2  F020         	goto	l522
  2984   004070                     l8100:
  2985                           
  2986                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2987   004070  5023               	movf	runPWM@multiplier^0,w,c
  2988   004072  0DC7               	mullw	199
  2989   004074  CFF3 F018          	movff	prodl,___awdiv@dividend
  2990   004078  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  2991   00407C  0E00               	movlw	0
  2992   00407E  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  2993   004080  0E05               	movlw	5
  2994   004082  6E1A               	movwf	___awdiv@divisor^0,c
  2995   004084  EC07  F024         	call	___awdiv	;wreg free
  2996   004088  5018               	movf	?___awdiv^0,w,c
  2997   00408A  6EBE               	movwf	190,c	;volatile
  2998   00408C                     
  2999                           ;PWM.c: 51:         if(PORTAbits.RA4){
  3000   00408C  A880               	btfss	128,4,c	;volatile
  3001   00408E  EF4B  F020         	goto	u9921
  3002   004092  EF4D  F020         	goto	u9920
  3003   004096                     u9921:
  3004   004096  EF7F  F020         	goto	l8118
  3005   00409A                     u9920:
  3006   00409A                     
  3007                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  3008   00409A  0E03               	movlw	3
  3009   00409C  6E21               	movwf	(??_runPWM+1)^0,c
  3010   00409E  0E08               	movlw	8
  3011   0040A0  6E20               	movwf	??_runPWM^0,c
  3012   0040A2  0E77               	movlw	119
  3013   0040A4                     u10447:
  3014   0040A4  2EE8               	decfsz	wreg,f,c
  3015   0040A6  D7FE               	bra	u10447
  3016   0040A8  2E20               	decfsz	??_runPWM^0,f,c
  3017   0040AA  D7FC               	bra	u10447
  3018   0040AC  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3019   0040AE  D7FA               	bra	u10447
  3020   0040B0  0000               	nop	
  3021   0040B2                     
  3022                           ;PWM.c: 53:             if(PORTAbits.RA4){
  3023   0040B2  A880               	btfss	128,4,c	;volatile
  3024   0040B4  EF5E  F020         	goto	u9931
  3025   0040B8  EF60  F020         	goto	u9930
  3026   0040BC                     u9931:
  3027   0040BC  EF7F  F020         	goto	l8118
  3028   0040C0                     u9930:
  3029   0040C0                     l526:
  3030   0040C0  B880               	btfsc	128,4,c	;volatile
  3031   0040C2  EF65  F020         	goto	u9941
  3032   0040C6  EF67  F020         	goto	u9940
  3033   0040CA                     u9941:
  3034   0040CA  EF60  F020         	goto	l526
  3035   0040CE                     u9940:
  3036   0040CE                     
  3037                           ;PWM.c: 55:                 if(multiplier == 5 ){
  3038   0040CE  0E05               	movlw	5
  3039   0040D0  1823               	xorwf	runPWM@multiplier^0,w,c
  3040   0040D2  A4D8               	btfss	status,2,c
  3041   0040D4  EF6E  F020         	goto	u9951
  3042   0040D8  EF70  F020         	goto	u9950
  3043   0040DC                     u9951:
  3044   0040DC  EF74  F020         	goto	l8114
  3045   0040E0                     u9950:
  3046   0040E0                     
  3047                           ;PWM.c: 56:                     multiplier = 0;
  3048   0040E0  0E00               	movlw	0
  3049   0040E2  6E23               	movwf	runPWM@multiplier^0,c
  3050                           
  3051                           ;PWM.c: 57:                 } else if(multiplier <5){
  3052   0040E4  EF7F  F020         	goto	l8118
  3053   0040E8                     l8114:
  3054   0040E8  0E05               	movlw	5
  3055   0040EA  6023               	cpfslt	runPWM@multiplier^0,c
  3056   0040EC  EF7A  F020         	goto	u9961
  3057   0040F0  EF7C  F020         	goto	u9960
  3058   0040F4                     u9961:
  3059   0040F4  EF7F  F020         	goto	l525
  3060   0040F8                     u9960:
  3061   0040F8                     
  3062                           ;PWM.c: 58:                     multiplier++;
  3063   0040F8  2A23               	incf	runPWM@multiplier^0,f,c
  3064   0040FA  EF7F  F020         	goto	l8118
  3065   0040FE                     l525:
  3066   0040FE                     l8118:
  3067                           
  3068                           ;PWM.c: 63:         if(PORTAbits.RA2){
  3069   0040FE  A480               	btfss	128,2,c	;volatile
  3070   004100  EF84  F020         	goto	u9971
  3071   004104  EF86  F020         	goto	u9970
  3072   004108                     u9971:
  3073   004108  EFA2  F020         	goto	l522
  3074   00410C                     u9970:
  3075   00410C                     
  3076                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3077   00410C  0E03               	movlw	3
  3078   00410E  6E21               	movwf	(??_runPWM+1)^0,c
  3079   004110  0E08               	movlw	8
  3080   004112  6E20               	movwf	??_runPWM^0,c
  3081   004114  0E77               	movlw	119
  3082   004116                     u10457:
  3083   004116  2EE8               	decfsz	wreg,f,c
  3084   004118  D7FE               	bra	u10457
  3085   00411A  2E20               	decfsz	??_runPWM^0,f,c
  3086   00411C  D7FC               	bra	u10457
  3087   00411E  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3088   004120  D7FA               	bra	u10457
  3089   004122  0000               	nop	
  3090   004124                     
  3091                           ;PWM.c: 65:         if(PORTAbits.RA2){
  3092   004124  A480               	btfss	128,2,c	;volatile
  3093   004126  EF97  F020         	goto	u9981
  3094   00412A  EF99  F020         	goto	u9980
  3095   00412E                     u9981:
  3096   00412E  EFA2  F020         	goto	l522
  3097   004132                     u9980:
  3098   004132                     l534:
  3099   004132  B480               	btfsc	128,2,c	;volatile
  3100   004134  EF9E  F020         	goto	u9991
  3101   004138  EFA0  F020         	goto	u9990
  3102   00413C                     u9991:
  3103   00413C  EF99  F020         	goto	l534
  3104   004140                     u9990:
  3105   004140                     
  3106                           ;PWM.c: 67:             keepState = 0;
  3107   004140  0E00               	movlw	0
  3108   004142  6E22               	movwf	runPWM@keepState^0,c
  3109   004144                     l522:
  3110                           
  3111                           ;PWM.c: 47:     while(keepState){
  3112   004144  5022               	movf	runPWM@keepState^0,w,c
  3113   004146  A4D8               	btfss	status,2,c
  3114   004148  EFA8  F020         	goto	u10001
  3115   00414C  EFAA  F020         	goto	u10000
  3116   004150                     u10001:
  3117   004150  EF38  F020         	goto	l8100
  3118   004154                     u10000:
  3119   004154                     
  3120                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3121   004154  0EF0               	movlw	-16
  3122   004156  16BD               	andwf	189,f,c	;volatile
  3123   004158                     
  3124                           ;PWM.c: 75:     TMR2ON = 0;
  3125   004158  94BA               	bcf	4026,2,c	;volatile
  3126   00415A                     
  3127                           ;PWM.c: 76:     TMR2IE = 0;
  3128   00415A  929D               	bcf	3997,1,c	;volatile
  3129   00415C  0012               	return		;funcret
  3130   00415E                     __end_of_runPWM:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _runMUSIC *****************
  3134 ;; Defined at:
  3135 ;;		line 10 in file "MUSIC.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		None
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 1
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text4
  3164   0052CE                     __ptext4:
  3165                           	callstack 0
  3166   0052CE                     _runMUSIC:
  3167                           	callstack 29
  3168   0052CE  0012               	return		;funcret
  3169   0052D0                     __end_of_runMUSIC:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _runGPIO *****************
  3173 ;; Defined at:
  3174 ;;		line 19 in file "GPIO.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  j               2   35[COMRAM] int 
  3179 ;;  states         12    8[COMRAM] unsigned char [12]
  3180 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3181 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3182 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3183 ;;  numberOfStat    2   32[COMRAM] int 
  3184 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;Total ram usage:       31 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 2
  3201 ;; This function calls:
  3202 ;;		_LED1_Control
  3203 ;;		_LED2_Control
  3204 ;;		_LED3_Control
  3205 ;;		_LED4_Control
  3206 ;;		_LED5_Control
  3207 ;;		_LED6_Control
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text5
  3214   003EAC                     __ptext5:
  3215                           	callstack 0
  3216   003EAC                     _runGPIO:
  3217                           	callstack 28
  3218   003EAC                     
  3219                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3220   003EAC  9495               	bcf	149,2,c	;volatile
  3221                           
  3222                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3223   003EAE  9695               	bcf	149,3,c	;volatile
  3224                           
  3225                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3226   003EB0  9894               	bcf	148,4,c	;volatile
  3227                           
  3228                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3229   003EB2  9895               	bcf	149,4,c	;volatile
  3230                           
  3231                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3232   003EB4  9A95               	bcf	149,5,c	;volatile
  3233                           
  3234                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3235   003EB6  9C95               	bcf	149,6,c	;volatile
  3236                           
  3237                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3238   003EB8  010F               	movlb	15	; () banked
  3239   003EBA  953B               	bcf	59,2,b	;volatile
  3240                           
  3241                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3242   003EBC  973B               	bcf	59,3,b	;volatile
  3243                           
  3244                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3245   003EBE  993A               	bcf	58,4,b	;volatile
  3246                           
  3247                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3248   003EC0  993B               	bcf	59,4,b	;volatile
  3249                           
  3250                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3251   003EC2  9B3B               	bcf	59,5,b	;volatile
  3252                           
  3253                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3254   003EC4  9D3B               	bcf	59,6,b	;volatile
  3255                           
  3256                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3257   003EC6  848C               	bsf	140,2,c	;volatile
  3258                           
  3259                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3260   003EC8  868C               	bsf	140,3,c	;volatile
  3261                           
  3262                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3263   003ECA  888B               	bsf	139,4,c	;volatile
  3264                           
  3265                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3266   003ECC  888C               	bsf	140,4,c	;volatile
  3267                           
  3268                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3269   003ECE  8A8C               	bsf	140,5,c	;volatile
  3270                           
  3271                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3272   003ED0  8C8C               	bsf	140,6,c	;volatile
  3273                           
  3274                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3275   003ED2  8492               	bsf	146,2,c	;volatile
  3276                           
  3277                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3278   003ED4  9538               	bcf	56,2,b	;volatile
  3279   003ED6                     
  3280                           ; BSR set to: 15
  3281                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3282   003ED6  0E3F               	movlw	-193
  3283   003ED8  16CD               	andwf	205,f,c	;volatile
  3284                           
  3285                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3286   003EDA  0E30               	movlw	48
  3287   003EDC  12CD               	iorwf	205,f,c	;volatile
  3288   003EDE                     
  3289                           ; BSR set to: 15
  3290                           ;GPIO.c: 49:     TMR1IE = 1;
  3291   003EDE  809D               	bsf	3997,0,c	;volatile
  3292   003EE0                     
  3293                           ; BSR set to: 15
  3294                           ;GPIO.c: 50:     PEIE = 1;
  3295   003EE0  8CF2               	bsf	4082,6,c	;volatile
  3296   003EE2                     
  3297                           ; BSR set to: 15
  3298                           ;GPIO.c: 51:     GIE = 1;
  3299   003EE2  8EF2               	bsf	4082,7,c	;volatile
  3300                           
  3301                           ;GPIO.c: 52:     GPIOIE = 1;
  3302   003EE4  0E01               	movlw	1
  3303   003EE6  0101               	movlb	1	; () banked
  3304   003EE8  6F26               	movwf	_GPIOIE& (0+255),b
  3305   003EEA                     
  3306                           ; BSR set to: 1
  3307                           ;GPIO.c: 53:     TMR1IF = 1;
  3308   003EEA  809E               	bsf	3998,0,c	;volatile
  3309                           
  3310                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3311   003EEC  0E9E               	movlw	158
  3312   003EEE  6ECF               	movwf	207,c	;volatile
  3313   003EF0  0E58               	movlw	88
  3314   003EF2  6ECE               	movwf	206,c	;volatile
  3315   003EF4                     
  3316                           ; BSR set to: 1
  3317                           ;GPIO.c: 55:     TMR1ON = 1;
  3318   003EF4  80CD               	bsf	4045,0,c	;volatile
  3319                           
  3320                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3321   003EF6  0E01               	movlw	1
  3322   003EF8  0100               	movlb	0	; () banked
  3323   003EFA  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3324   003EFC                     
  3325                           ; BSR set to: 0
  3326                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3327   003EFC  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3328   003F00  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3329   003F04  0E0B               	movlw	11
  3330   003F06                     u9751:
  3331   003F06  CFDB FFE3          	movff	plusw2,plusw1
  3332   003F0A  06E8               	decf	wreg,f,c
  3333   003F0C  E2FC               	bc	u9751
  3334   003F0E                     
  3335                           ; BSR set to: 0
  3336                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3337   003F0E  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3338   003F12  EE10  F009         	lfsr	1,runGPIO@states
  3339   003F16  0E0B               	movlw	11
  3340   003F18                     u9761:
  3341   003F18  CFDB FFE3          	movff	plusw2,plusw1
  3342   003F1C  06E8               	decf	wreg,f,c
  3343   003F1E  E2FC               	bc	u9761
  3344                           
  3345                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3346   003F20  0E00               	movlw	0
  3347   003F22  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3348   003F24  0E0C               	movlw	12
  3349   003F26  6E21               	movwf	runGPIO@numberOfStates^0,c
  3350                           
  3351                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3352   003F28  0E00               	movlw	0
  3353   003F2A  6E23               	movwf	runGPIO@GPIOi^0,c
  3354                           
  3355                           ;GPIO.c: 66:     while(keepStateGPIO){
  3356   003F2C  EFF7  F01F         	goto	l372
  3357   003F30                     l8002:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3361   003F30  0E00               	movlw	0
  3362   003F32  6E25               	movwf	(runGPIO@j+1)^0,c
  3363   003F34  0E00               	movlw	0
  3364   003F36  6E24               	movwf	runGPIO@j^0,c
  3365   003F38                     l8008:
  3366                           
  3367                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3368   003F38  5024               	movf	runGPIO@j^0,w,c
  3369   003F3A  0D02               	mullw	2
  3370   003F3C  50F3               	movf	243,w,c
  3371   003F3E  0F15               	addlw	low runGPIO@LEDControl
  3372   003F40  6ED9               	movwf	fsr2l,c
  3373   003F42  6ADA               	clrf	fsr2h,c
  3374   003F44  D802               	call	u9778
  3375   003F46  EFC9  F01F         	goto	u9779
  3376   003F4A                     u9778:
  3377   003F4A  0005               	push	
  3378   003F4C  6EFA               	movwf	pclath,c
  3379   003F4E  50DE               	movf	postinc2,w,c
  3380   003F50  6EFD               	movwf	tosl,c
  3381   003F52  50DE               	movf	postinc2,w,c
  3382   003F54  6EFE               	movwf	tosh,c
  3383   003F56  50F8               	movf	tblptru,w,c
  3384   003F58  6EFF               	movwf	tosu,c
  3385   003F5A  50FA               	movf	pclath,w,c
  3386   003F5C  5024               	movf	runGPIO@j^0,w,c
  3387   003F5E  0805               	sublw	5
  3388   003F60  6E07               	movwf	??_runGPIO^0,c
  3389   003F62  5023               	movf	runGPIO@GPIOi^0,w,c
  3390   003F64  0F09               	addlw	low runGPIO@states
  3391   003F66  6ED9               	movwf	fsr2l,c
  3392   003F68  6ADA               	clrf	fsr2h,c
  3393   003F6A  50DF               	movf	indf2,w,c
  3394   003F6C  6E08               	movwf	(??_runGPIO+1)^0,c
  3395   003F6E  2A07               	incf	??_runGPIO^0,f,c
  3396   003F70  EFBC  F01F         	goto	u9784
  3397   003F74                     u9785:
  3398   003F74  90D8               	bcf	status,0,c
  3399   003F76  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3400   003F78                     u9784:
  3401   003F78  2E07               	decfsz	??_runGPIO^0,f,c
  3402   003F7A  EFBA  F01F         	goto	u9785
  3403   003F7E  A008               	btfss	(??_runGPIO+1)^0,0,c
  3404   003F80  EFC4  F01F         	goto	u9791
  3405   003F84  EFC7  F01F         	goto	u9790
  3406   003F88                     u9791:
  3407   003F88  0E01               	movlw	1
  3408   003F8A  EFC8  F01F         	goto	u9800
  3409   003F8E                     u9790:
  3410   003F8E  0E00               	movlw	0
  3411   003F90                     u9800:
  3412   003F90  0012               	return		;indir
  3413   003F92                     u9779:
  3414   003F92                     
  3415                           ;GPIO.c: 70:         }
  3416   003F92  4A24               	infsnz	runGPIO@j^0,f,c
  3417   003F94  2A25               	incf	(runGPIO@j+1)^0,f,c
  3418   003F96  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3419   003F98  EFD7  F01F         	goto	u9811
  3420   003F9C  5025               	movf	(runGPIO@j+1)^0,w,c
  3421   003F9E  E109               	bnz	u9810
  3422   003FA0  0E06               	movlw	6
  3423   003FA2  5C24               	subwf	runGPIO@j^0,w,c
  3424   003FA4  A0D8               	btfss	status,0,c
  3425   003FA6  EFD7  F01F         	goto	u9811
  3426   003FAA  EFD9  F01F         	goto	u9810
  3427   003FAE                     u9811:
  3428   003FAE  EF9C  F01F         	goto	l8008
  3429   003FB2                     u9810:
  3430   003FB2                     
  3431                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3432   003FB2  0E11               	movlw	17
  3433   003FB4  6E08               	movwf	(??_runGPIO+1)^0,c
  3434   003FB6  0E3C               	movlw	60
  3435   003FB8  6E07               	movwf	??_runGPIO^0,c
  3436   003FBA  0ECB               	movlw	203
  3437   003FBC                     u10467:
  3438   003FBC  2EE8               	decfsz	wreg,f,c
  3439   003FBE  D7FE               	bra	u10467
  3440   003FC0  2E07               	decfsz	??_runGPIO^0,f,c
  3441   003FC2  D7FC               	bra	u10467
  3442   003FC4  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3443   003FC6  D7FA               	bra	u10467
  3444   003FC8  0000               	nop	
  3445   003FCA                     
  3446                           ;GPIO.c: 72:         GPIOi++;
  3447   003FCA  2A23               	incf	runGPIO@GPIOi^0,f,c
  3448                           
  3449                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3450   003FCC  5023               	movf	runGPIO@GPIOi^0,w,c
  3451   003FCE  6E07               	movwf	??_runGPIO^0,c
  3452   003FD0  6A08               	clrf	(??_runGPIO+1)^0,c
  3453   003FD2  5021               	movf	runGPIO@numberOfStates^0,w,c
  3454   003FD4  1807               	xorwf	??_runGPIO^0,w,c
  3455   003FD6  E107               	bnz	u9821
  3456   003FD8  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3457   003FDA  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3458   003FDC  A4D8               	btfss	status,2,c
  3459   003FDE  EFF3  F01F         	goto	u9821
  3460   003FE2  EFF5  F01F         	goto	u9820
  3461   003FE6                     u9821:
  3462   003FE6  EFF7  F01F         	goto	l372
  3463   003FEA                     u9820:
  3464   003FEA                     
  3465                           ;GPIO.c: 74:             GPIOi = 0;
  3466   003FEA  0E00               	movlw	0
  3467   003FEC  6E23               	movwf	runGPIO@GPIOi^0,c
  3468   003FEE                     l372:
  3469                           
  3470                           ;GPIO.c: 66:     while(keepStateGPIO){
  3471   003FEE  0100               	movlb	0	; () banked
  3472   003FF0  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3473   003FF2  A4D8               	btfss	status,2,c
  3474   003FF4  EFFE  F01F         	goto	u9831
  3475   003FF8  EF00  F020         	goto	u9830
  3476   003FFC                     u9831:
  3477   003FFC  EF98  F01F         	goto	l8002
  3478   004000                     u9830:
  3479   004000                     
  3480                           ; BSR set to: 0
  3481                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3482   004000  848C               	bsf	140,2,c	;volatile
  3483                           
  3484                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3485   004002  868C               	bsf	140,3,c	;volatile
  3486                           
  3487                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3488   004004  888B               	bsf	139,4,c	;volatile
  3489                           
  3490                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3491   004006  888C               	bsf	140,4,c	;volatile
  3492                           
  3493                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3494   004008  8A8C               	bsf	140,5,c	;volatile
  3495                           
  3496                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3497   00400A  8C8C               	bsf	140,6,c	;volatile
  3498                           
  3499                           ;GPIO.c: 85:     TMR1ON = 0;
  3500   00400C  90CD               	bcf	4045,0,c	;volatile
  3501                           
  3502                           ;GPIO.c: 86:     TMR1IE = 0;
  3503   00400E  909D               	bcf	3997,0,c	;volatile
  3504   004010                     
  3505                           ; BSR set to: 0
  3506                           ;GPIO.c: 87:     GPIOIE = 0;
  3507   004010  0E00               	movlw	0
  3508   004012  0101               	movlb	1	; () banked
  3509   004014  6F26               	movwf	_GPIOIE& (0+255),b
  3510   004016                     
  3511                           ; BSR set to: 1
  3512   004016  0012               	return		;funcret
  3513   004018                     __end_of_runGPIO:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _LED5_Control *****************
  3517 ;; Defined at:
  3518 ;;		line 14 in file "GPIO.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  state           1    wreg     unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  state           1    5[COMRAM] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;Total ram usage:        1 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 1
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_runGPIO
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text6
  3547   00527A                     __ptext6:
  3548                           	callstack 0
  3549   00527A                     _LED5_Control:
  3550                           	callstack 28
  3551                           
  3552                           ; BSR set to: 1
  3553                           ;incstack = 0
  3554                           ;LED5_Control@state stored from wreg
  3555   00527A  6E06               	movwf	LED5_Control@state^0,c
  3556   00527C  B006               	btfsc	LED5_Control@state^0,0,c
  3557   00527E  D002               	bra	u9635
  3558   005280  9A8C               	bcf	140,5,c	;volatile
  3559   005282  D001               	bra	u9636
  3560   005284                     u9635:
  3561   005284  8A8C               	bsf	140,5,c	;volatile
  3562   005286                     u9636:
  3563   005286  0012               	return		;funcret
  3564   005288                     __end_of_LED5_Control:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _LED4_Control *****************
  3568 ;; Defined at:
  3569 ;;		line 13 in file "GPIO.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  state           1    wreg     unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  state           1    5[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;Total ram usage:        1 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_runGPIO
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text7
  3598   005288                     __ptext7:
  3599                           	callstack 0
  3600   005288                     _LED4_Control:
  3601                           	callstack 28
  3602                           
  3603                           ;incstack = 0
  3604                           ;LED4_Control@state stored from wreg
  3605   005288  6E06               	movwf	LED4_Control@state^0,c
  3606   00528A  B006               	btfsc	LED4_Control@state^0,0,c
  3607   00528C  D002               	bra	u9625
  3608   00528E  988C               	bcf	140,4,c	;volatile
  3609   005290  D001               	bra	u9626
  3610   005292                     u9625:
  3611   005292  888C               	bsf	140,4,c	;volatile
  3612   005294                     u9626:
  3613   005294  0012               	return		;funcret
  3614   005296                     __end_of_LED4_Control:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _LED3_Control *****************
  3618 ;; Defined at:
  3619 ;;		line 12 in file "GPIO.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  state           1    wreg     unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  state           1    5[COMRAM] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        1 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_runGPIO
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text8
  3648   005296                     __ptext8:
  3649                           	callstack 0
  3650   005296                     _LED3_Control:
  3651                           	callstack 28
  3652                           
  3653                           ;incstack = 0
  3654                           ;LED3_Control@state stored from wreg
  3655   005296  6E06               	movwf	LED3_Control@state^0,c
  3656   005298  B006               	btfsc	LED3_Control@state^0,0,c
  3657   00529A  D002               	bra	u9615
  3658   00529C  988B               	bcf	139,4,c	;volatile
  3659   00529E  D001               	bra	u9616
  3660   0052A0                     u9615:
  3661   0052A0  888B               	bsf	139,4,c	;volatile
  3662   0052A2                     u9616:
  3663   0052A2  0012               	return		;funcret
  3664   0052A4                     __end_of_LED3_Control:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _LED2_Control *****************
  3668 ;; Defined at:
  3669 ;;		line 11 in file "GPIO.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  state           1    wreg     unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  state           1    5[COMRAM] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;Total ram usage:        1 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_runGPIO
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text9
  3698   0052A4                     __ptext9:
  3699                           	callstack 0
  3700   0052A4                     _LED2_Control:
  3701                           	callstack 28
  3702                           
  3703                           ;incstack = 0
  3704                           ;LED2_Control@state stored from wreg
  3705   0052A4  6E06               	movwf	LED2_Control@state^0,c
  3706   0052A6  B006               	btfsc	LED2_Control@state^0,0,c
  3707   0052A8  D002               	bra	u9605
  3708   0052AA  968C               	bcf	140,3,c	;volatile
  3709   0052AC  D001               	bra	u9606
  3710   0052AE                     u9605:
  3711   0052AE  868C               	bsf	140,3,c	;volatile
  3712   0052B0                     u9606:
  3713   0052B0  0012               	return		;funcret
  3714   0052B2                     __end_of_LED2_Control:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function _LED1_Control *****************
  3718 ;; Defined at:
  3719 ;;		line 10 in file "GPIO.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  state           1    wreg     unsigned char 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  state           1    5[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:        1 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_runGPIO
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text10
  3748   0052B2                     __ptext10:
  3749                           	callstack 0
  3750   0052B2                     _LED1_Control:
  3751                           	callstack 28
  3752                           
  3753                           ;incstack = 0
  3754                           ;LED1_Control@state stored from wreg
  3755   0052B2  6E06               	movwf	LED1_Control@state^0,c
  3756   0052B4  B006               	btfsc	LED1_Control@state^0,0,c
  3757   0052B6  D002               	bra	u9595
  3758   0052B8  948C               	bcf	140,2,c	;volatile
  3759   0052BA  D001               	bra	u9596
  3760   0052BC                     u9595:
  3761   0052BC  848C               	bsf	140,2,c	;volatile
  3762   0052BE                     u9596:
  3763   0052BE  0012               	return		;funcret
  3764   0052C0                     __end_of_LED1_Control:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _LED6_Control *****************
  3768 ;; Defined at:
  3769 ;;		line 15 in file "GPIO.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  state           1    wreg     unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  state           1    5[COMRAM] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:        1 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 1
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_runGPIO
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text11
  3798   0052C0                     __ptext11:
  3799                           	callstack 0
  3800   0052C0                     _LED6_Control:
  3801                           	callstack 28
  3802                           
  3803                           ;incstack = 0
  3804                           ;LED6_Control@state stored from wreg
  3805   0052C0  6E06               	movwf	LED6_Control@state^0,c
  3806   0052C2  B006               	btfsc	LED6_Control@state^0,0,c
  3807   0052C4  D002               	bra	u9645
  3808   0052C6  9C8C               	bcf	140,6,c	;volatile
  3809   0052C8  D001               	bra	u9646
  3810   0052CA                     u9645:
  3811   0052CA  8C8C               	bsf	140,6,c	;volatile
  3812   0052CC                     u9646:
  3813   0052CC  0012               	return		;funcret
  3814   0052CE                     __end_of_LED6_Control:
  3815                           	callstack 0
  3816                           
  3817 ;; *************** function _runGAME *****************
  3818 ;; Defined at:
  3819 ;;		line 10 in file "GAME.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  approxText     25   17[BANK1 ] unsigned char [25]
  3824 ;;  text           17    0[BANK1 ] unsigned char [17]
  3825 ;;  randomNumber    2   48[BANK1 ] unsigned short 
  3826 ;;  pot1            2   46[BANK1 ] unsigned short 
  3827 ;;  GAMEdivider     1   45[BANK1 ] unsigned char 
  3828 ;;  GAMEround       1   44[BANK1 ] unsigned char 
  3829 ;;  keepStateGAM    1   43[BANK1 ] unsigned char 
  3830 ;;  GAMEpart        1   42[BANK1 ] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;Total ram usage:       52 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 9
  3847 ;; This function calls:
  3848 ;;		_LCD_ShowString
  3849 ;;		___awdiv
  3850 ;;		___lbdiv
  3851 ;;		_rand
  3852 ;;		_sprintf
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text12
  3859   001E9E                     __ptext12:
  3860                           	callstack 0
  3861   001E9E                     _runGAME:
  3862                           	callstack 21
  3863   001E9E                     
  3864                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  3865   001E9E  9495               	bcf	149,2,c	;volatile
  3866                           
  3867                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  3868   001EA0  9695               	bcf	149,3,c	;volatile
  3869                           
  3870                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  3871   001EA2  9894               	bcf	148,4,c	;volatile
  3872                           
  3873                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  3874   001EA4  9895               	bcf	149,4,c	;volatile
  3875                           
  3876                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  3877   001EA6  9A95               	bcf	149,5,c	;volatile
  3878                           
  3879                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  3880   001EA8  9C95               	bcf	149,6,c	;volatile
  3881                           
  3882                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  3883   001EAA  010F               	movlb	15	; () banked
  3884   001EAC  953B               	bcf	59,2,b	;volatile
  3885                           
  3886                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  3887   001EAE  973B               	bcf	59,3,b	;volatile
  3888                           
  3889                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  3890   001EB0  993A               	bcf	58,4,b	;volatile
  3891                           
  3892                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  3893   001EB2  993B               	bcf	59,4,b	;volatile
  3894                           
  3895                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  3896   001EB4  9B3B               	bcf	59,5,b	;volatile
  3897                           
  3898                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  3899   001EB6  9D3B               	bcf	59,6,b	;volatile
  3900                           
  3901                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  3902   001EB8  848C               	bsf	140,2,c	;volatile
  3903                           
  3904                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  3905   001EBA  868C               	bsf	140,3,c	;volatile
  3906                           
  3907                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  3908   001EBC  888B               	bsf	139,4,c	;volatile
  3909                           
  3910                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  3911   001EBE  888C               	bsf	140,4,c	;volatile
  3912                           
  3913                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  3914   001EC0  8A8C               	bsf	140,5,c	;volatile
  3915                           
  3916                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  3917   001EC2  8C8C               	bsf	140,6,c	;volatile
  3918                           
  3919                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  3920   001EC4  8492               	bsf	146,2,c	;volatile
  3921                           
  3922                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  3923   001EC6  9538               	bcf	56,2,b	;volatile
  3924                           
  3925                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  3926   001EC8  8B38               	bsf	56,5,b	;volatile
  3927                           
  3928                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  3929   001ECA  8EC0               	bsf	192,7,c	;volatile
  3930   001ECC                     
  3931                           ; BSR set to: 15
  3932                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  3933   001ECC  50C0               	movf	192,w,c	;volatile
  3934   001ECE  0BF8               	andlw	-8
  3935   001ED0  0906               	iorlw	6
  3936   001ED2  6EC0               	movwf	192,c	;volatile
  3937                           
  3938                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  3939   001ED4  50C0               	movf	192,w,c	;volatile
  3940   001ED6  0BC7               	andlw	-57
  3941   001ED8  0930               	iorlw	48
  3942   001EDA  6EC0               	movwf	192,c	;volatile
  3943   001EDC                     
  3944                           ; BSR set to: 15
  3945                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  3946   001EDC  80C2               	bsf	194,0,c	;volatile
  3947   001EDE                     
  3948                           ; BSR set to: 15
  3949                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  3950   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  3951   001EE2  0E10               	movlw	16
  3952   001EE4                     u10161:
  3953   001EE4  6ADE               	clrf	postinc2,c
  3954   001EE6  06E8               	decf	wreg,f,c
  3955   001EE8  E2FD               	bc	u10161
  3956   001EEA                     
  3957                           ; BSR set to: 15
  3958                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  3959   001EEA  0E3F               	movlw	-193
  3960   001EEC  16CD               	andwf	205,f,c	;volatile
  3961   001EEE                     
  3962                           ; BSR set to: 15
  3963                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  3964   001EEE  0E30               	movlw	48
  3965   001EF0  12CD               	iorwf	205,f,c	;volatile
  3966   001EF2                     
  3967                           ; BSR set to: 15
  3968                           ;GAME.c: 50:     TMR1IE = 1;
  3969   001EF2  809D               	bsf	3997,0,c	;volatile
  3970   001EF4                     
  3971                           ; BSR set to: 15
  3972                           ;GAME.c: 51:     PEIE = 1;
  3973   001EF4  8CF2               	bsf	4082,6,c	;volatile
  3974   001EF6                     
  3975                           ; BSR set to: 15
  3976                           ;GAME.c: 52:     GIE = 1;
  3977   001EF6  8EF2               	bsf	4082,7,c	;volatile
  3978   001EF8                     
  3979                           ; BSR set to: 15
  3980                           ;GAME.c: 53:     GAMEIE = 1;
  3981   001EF8  0E01               	movlw	1
  3982   001EFA  0101               	movlb	1	; () banked
  3983   001EFC  6F24               	movwf	_GAMEIE& (0+255),b
  3984   001EFE                     
  3985                           ; BSR set to: 1
  3986                           ;GAME.c: 54:     TMR1IF = 1;
  3987   001EFE  809E               	bsf	3998,0,c	;volatile
  3988   001F00                     
  3989                           ; BSR set to: 1
  3990                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  3991   001F00  0E0B               	movlw	11
  3992   001F02  6ECF               	movwf	207,c	;volatile
  3993   001F04  0EDC               	movlw	220
  3994   001F06  6ECE               	movwf	206,c	;volatile
  3995   001F08                     
  3996                           ; BSR set to: 1
  3997                           ;GAME.c: 56:     TMR1ON = 1;
  3998   001F08  80CD               	bsf	4045,0,c	;volatile
  3999   001F0A                     
  4000                           ; BSR set to: 1
  4001                           ;GAME.c: 58:     GAMEtime = 0;
  4002   001F0A  0E00               	movlw	0
  4003   001F0C  6F23               	movwf	_GAMEtime& (0+255),b
  4004   001F0E                     
  4005                           ; BSR set to: 1
  4006                           ;GAME.c: 59:     uint8_t GAMEround = 1;
  4007   001F0E  0E01               	movlw	1
  4008   001F10  6FC7               	movwf	runGAME@GAMEround& (0+255),b
  4009   001F12                     
  4010                           ; BSR set to: 1
  4011                           ;GAME.c: 62:     char approxText[25] = "";
  4012   001F12  EE21  F0AC         	lfsr	2,runGAME@approxText
  4013   001F16  0E18               	movlw	24
  4014   001F18                     u10171:
  4015   001F18  6ADE               	clrf	postinc2,c
  4016   001F1A  06E8               	decf	wreg,f,c
  4017   001F1C  E2FD               	bc	u10171
  4018   001F1E                     
  4019                           ; BSR set to: 1
  4020                           ;GAME.c: 65:     uint16_t randomNumber;;GAME.c: 66:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  4021   001F1E  EC4F  F026         	call	_rand
  4022   001F22  C012  F018         	movff	?_rand,___awdiv@dividend
  4023   001F26  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4024   001F2A  0E00               	movlw	0
  4025   001F2C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4026   001F2E  0E21               	movlw	33
  4027   001F30  6E1A               	movwf	___awdiv@divisor^0,c
  4028   001F32  EC07  F024         	call	___awdiv	;wreg free
  4029   001F36  0E02               	movlw	2
  4030   001F38  2418               	addwf	?___awdiv^0,w,c
  4031   001F3A  0101               	movlb	1	; () banked
  4032   001F3C  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4033   001F3E  0E00               	movlw	0
  4034   001F40  2019               	addwfc	(?___awdiv+1)^0,w,c
  4035   001F42  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4036   001F44                     
  4037                           ; BSR set to: 1
  4038                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  4039   001F44  0EAC               	movlw	low runGAME@approxText
  4040   001F46  0100               	movlb	0	; () banked
  4041   001F48  6FCE               	movwf	sprintf@s& (0+255),b
  4042   001F4A  0E01               	movlw	high runGAME@approxText
  4043   001F4C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4044   001F4E  0E77               	movlw	low STR_31
  4045   001F50  6FD0               	movwf	sprintf@fmt& (0+255),b
  4046   001F52  0EFE               	movlw	high STR_31
  4047   001F54  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4048   001F56  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4049   001F5A  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4050   001F5E  ECE1  F027         	call	_sprintf	;wreg free
  4051   001F62                     
  4052                           ;GAME.c: 68:     LCD_ShowString((char)1, approxText);
  4053   001F62  0EAC               	movlw	low runGAME@approxText
  4054   001F64  6E07               	movwf	LCD_ShowString@textData^0,c
  4055   001F66  0E01               	movlw	high runGAME@approxText
  4056   001F68  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4057   001F6A  0E01               	movlw	1
  4058   001F6C  EC69  F024         	call	_LCD_ShowString
  4059   001F70                     
  4060                           ;GAME.c: 69:     keepStateGAME = 1;
  4061   001F70  0E01               	movlw	1
  4062   001F72  0101               	movlb	1	; () banked
  4063   001F74  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4064                           
  4065                           ;GAME.c: 72:     while(keepStateGAME){
  4066   001F76  EF35  F011         	goto	l662
  4067   001F7A                     l8290:
  4068                           
  4069                           ; BSR set to: 1
  4070                           ;GAME.c: 74:         ADCON0bits.CHS = 4;
  4071   001F7A  50C2               	movf	194,w,c	;volatile
  4072   001F7C  0B83               	andlw	-125
  4073   001F7E  0910               	iorlw	16
  4074   001F80  6EC2               	movwf	194,c	;volatile
  4075   001F82                     
  4076                           ; BSR set to: 1
  4077                           ;GAME.c: 75:         GODONE = 1;
  4078   001F82  82C2               	bsf	4034,1,c	;volatile
  4079   001F84                     l664:
  4080   001F84  B2C2               	btfsc	4034,1,c	;volatile
  4081   001F86  EFC7  F00F         	goto	u10181
  4082   001F8A  EFC9  F00F         	goto	u10180
  4083   001F8E                     u10181:
  4084   001F8E  EFC2  F00F         	goto	l664
  4085   001F92                     u10180:
  4086   001F92                     
  4087                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4088   001F92  50C3               	movf	195,w,c	;volatile
  4089   001F94  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  4090   001F98  0100               	movlb	0	; () banked
  4091   001F9A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  4092   001F9C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  4093   001FA0  6BE7               	clrf	??_runGAME& (0+255),b
  4094   001FA2  11E7               	iorwf	??_runGAME& (0+255),w,b
  4095   001FA4  0101               	movlb	1	; () banked
  4096   001FA6  6FC9               	movwf	runGAME@pot1& (0+255),b
  4097   001FA8  0100               	movlb	0	; () banked
  4098   001FAA  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4099   001FAC  0101               	movlb	1	; () banked
  4100   001FAE  6FCA               	movwf	(runGAME@pot1+1)& (0+255),b
  4101   001FB0                     
  4102                           ; BSR set to: 1
  4103                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  4104   001FB0  0E9B               	movlw	low runGAME@text
  4105   001FB2  0100               	movlb	0	; () banked
  4106   001FB4  6FCE               	movwf	sprintf@s& (0+255),b
  4107   001FB6  0E01               	movlw	high runGAME@text
  4108   001FB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4109   001FBA  0EAF               	movlw	low STR_32
  4110   001FBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  4111   001FBE  0EFE               	movlw	high STR_32
  4112   001FC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4113   001FC2  C1C9  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4114   001FC6  C1CA  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4115   001FCA  ECE1  F027         	call	_sprintf	;wreg free
  4116   001FCE                     
  4117                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4118   001FCE  0E9B               	movlw	low runGAME@text
  4119   001FD0  6E07               	movwf	LCD_ShowString@textData^0,c
  4120   001FD2  0E01               	movlw	high runGAME@text
  4121   001FD4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4122   001FD6  0E02               	movlw	2
  4123   001FD8  EC69  F024         	call	_LCD_ShowString
  4124                           
  4125                           ;GAME.c: 82:         switch(GAMEround){
  4126   001FDC  EF04  F010         	goto	l8312
  4127   001FE0                     l8300:
  4128                           
  4129                           ; BSR set to: 1
  4130                           ;GAME.c: 84:                 GAMEdivider = 26;
  4131   001FE0  0E1A               	movlw	26
  4132   001FE2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4133                           
  4134                           ;GAME.c: 85:                 break;
  4135   001FE4  EF18  F010         	goto	l8314
  4136   001FE8                     l8302:
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;GAME.c: 87:                 GAMEdivider = 24;
  4140   001FE8  0E18               	movlw	24
  4141   001FEA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4142                           
  4143                           ;GAME.c: 88:                 break;
  4144   001FEC  EF18  F010         	goto	l8314
  4145   001FF0                     l8304:
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;GAME.c: 90:                 GAMEdivider = 18;
  4149   001FF0  0E12               	movlw	18
  4150   001FF2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4151                           
  4152                           ;GAME.c: 91:                 break;
  4153   001FF4  EF18  F010         	goto	l8314
  4154   001FF8                     l8306:
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;GAME.c: 93:                 GAMEdivider = 16;
  4158   001FF8  0E10               	movlw	16
  4159   001FFA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4160                           
  4161                           ;GAME.c: 94:                 break;
  4162   001FFC  EF18  F010         	goto	l8314
  4163   002000                     l8308:
  4164                           
  4165                           ; BSR set to: 1
  4166                           ;GAME.c: 96:                 GAMEdivider = 15;
  4167   002000  0E0F               	movlw	15
  4168   002002  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4169                           
  4170                           ;GAME.c: 97:                 break;
  4171   002004  EF18  F010         	goto	l8314
  4172   002008                     l8312:
  4173   002008  0101               	movlb	1	; () banked
  4174   00200A  51C7               	movf	runGAME@GAMEround& (0+255),w,b
  4175                           
  4176                           ; Switch size 1, requested type "simple"
  4177                           ; Number of cases is 4, Range of values is 1 to 4
  4178                           ; switch strategies available:
  4179                           ; Name         Instructions Cycles
  4180                           ; simple_byte           13     7 (average)
  4181                           ;	Chosen strategy is simple_byte
  4182   00200C  0A01               	xorlw	1	; case 1
  4183   00200E  B4D8               	btfsc	status,2,c
  4184   002010  EFF0  F00F         	goto	l8300
  4185   002014  0A03               	xorlw	3	; case 2
  4186   002016  B4D8               	btfsc	status,2,c
  4187   002018  EFF4  F00F         	goto	l8302
  4188   00201C  0A01               	xorlw	1	; case 3
  4189   00201E  B4D8               	btfsc	status,2,c
  4190   002020  EFF8  F00F         	goto	l8304
  4191   002024  0A07               	xorlw	7	; case 4
  4192   002026  B4D8               	btfsc	status,2,c
  4193   002028  EFFC  F00F         	goto	l8306
  4194   00202C  EF00  F010         	goto	l8308
  4195   002030                     l8314:
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4199   002030  C1C8  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4200   002034  5123               	movf	_GAMEtime& (0+255),w,b
  4201   002036  ECED  F026         	call	___lbdiv
  4202   00203A  0101               	movlb	1	; () banked
  4203   00203C  6FC5               	movwf	runGAME@GAMEpart& (0+255),b
  4204                           
  4205                           ;GAME.c: 101:         switch(GAMEpart){
  4206   00203E  EFEE  F010         	goto	l8344
  4207   002042                     l675:
  4208                           
  4209                           ; BSR set to: 1
  4210                           ;GAME.c: 103:                 LATDbits.LD2 = 1;
  4211   002042  848C               	bsf	140,2,c	;volatile
  4212                           
  4213                           ;GAME.c: 104:                 LATDbits.LD3 = 1;
  4214   002044  868C               	bsf	140,3,c	;volatile
  4215                           
  4216                           ;GAME.c: 105:                 LATCbits.LC4 = 1;
  4217   002046  888B               	bsf	139,4,c	;volatile
  4218                           
  4219                           ;GAME.c: 106:                 LATDbits.LD4 = 1;
  4220   002048  888C               	bsf	140,4,c	;volatile
  4221                           
  4222                           ;GAME.c: 107:                 LATDbits.LD5 = 1;
  4223   00204A  8A8C               	bsf	140,5,c	;volatile
  4224                           
  4225                           ;GAME.c: 108:                 LATDbits.LD6 = 1;
  4226   00204C  8C8C               	bsf	140,6,c	;volatile
  4227                           
  4228                           ;GAME.c: 109:                 break;
  4229   00204E  EF11  F011         	goto	l676
  4230   002052                     l677:
  4231                           
  4232                           ; BSR set to: 1
  4233                           ;GAME.c: 111:                 LATDbits.LD2 = 0;
  4234   002052  948C               	bcf	140,2,c	;volatile
  4235                           
  4236                           ;GAME.c: 112:                 LATDbits.LD3 = 1;
  4237   002054  868C               	bsf	140,3,c	;volatile
  4238                           
  4239                           ;GAME.c: 113:                 LATCbits.LC4 = 1;
  4240   002056  888B               	bsf	139,4,c	;volatile
  4241                           
  4242                           ;GAME.c: 114:                 LATDbits.LD4 = 1;
  4243   002058  888C               	bsf	140,4,c	;volatile
  4244                           
  4245                           ;GAME.c: 115:                 LATDbits.LD5 = 1;
  4246   00205A  8A8C               	bsf	140,5,c	;volatile
  4247                           
  4248                           ;GAME.c: 116:                 LATDbits.LD6 = 1;
  4249   00205C  8C8C               	bsf	140,6,c	;volatile
  4250                           
  4251                           ;GAME.c: 117:                 break;
  4252   00205E  EF11  F011         	goto	l676
  4253   002062                     l678:
  4254                           
  4255                           ; BSR set to: 1
  4256                           ;GAME.c: 119:                 LATDbits.LD2 = 0;
  4257   002062  948C               	bcf	140,2,c	;volatile
  4258                           
  4259                           ;GAME.c: 120:                 LATDbits.LD3 = 0;
  4260   002064  968C               	bcf	140,3,c	;volatile
  4261                           
  4262                           ;GAME.c: 121:                 LATCbits.LC4 = 1;
  4263   002066  888B               	bsf	139,4,c	;volatile
  4264                           
  4265                           ;GAME.c: 122:                 LATDbits.LD4 = 1;
  4266   002068  888C               	bsf	140,4,c	;volatile
  4267                           
  4268                           ;GAME.c: 123:                 LATDbits.LD5 = 1;
  4269   00206A  8A8C               	bsf	140,5,c	;volatile
  4270                           
  4271                           ;GAME.c: 124:                 LATDbits.LD6 = 1;
  4272   00206C  8C8C               	bsf	140,6,c	;volatile
  4273                           
  4274                           ;GAME.c: 125:                 break;
  4275   00206E  EF11  F011         	goto	l676
  4276   002072                     l679:
  4277                           
  4278                           ; BSR set to: 1
  4279                           ;GAME.c: 127:                 LATDbits.LD2 = 0;
  4280   002072  948C               	bcf	140,2,c	;volatile
  4281                           
  4282                           ;GAME.c: 128:                 LATDbits.LD3 = 0;
  4283   002074  968C               	bcf	140,3,c	;volatile
  4284                           
  4285                           ;GAME.c: 129:                 LATCbits.LC4 = 0;
  4286   002076  988B               	bcf	139,4,c	;volatile
  4287                           
  4288                           ;GAME.c: 130:                 LATDbits.LD4 = 1;
  4289   002078  888C               	bsf	140,4,c	;volatile
  4290                           
  4291                           ;GAME.c: 131:                 LATDbits.LD5 = 1;
  4292   00207A  8A8C               	bsf	140,5,c	;volatile
  4293                           
  4294                           ;GAME.c: 132:                 LATDbits.LD6 = 1;
  4295   00207C  8C8C               	bsf	140,6,c	;volatile
  4296                           
  4297                           ;GAME.c: 133:                 break;
  4298   00207E  EF11  F011         	goto	l676
  4299   002082                     l680:
  4300                           
  4301                           ; BSR set to: 1
  4302                           ;GAME.c: 135:                 LATDbits.LD2 = 0;
  4303   002082  948C               	bcf	140,2,c	;volatile
  4304                           
  4305                           ;GAME.c: 136:                 LATDbits.LD3 = 0;
  4306   002084  968C               	bcf	140,3,c	;volatile
  4307                           
  4308                           ;GAME.c: 137:                 LATCbits.LC4 = 0;
  4309   002086  988B               	bcf	139,4,c	;volatile
  4310                           
  4311                           ;GAME.c: 138:                 LATDbits.LD4 = 0;
  4312   002088  988C               	bcf	140,4,c	;volatile
  4313                           
  4314                           ;GAME.c: 139:                 LATDbits.LD5 = 1;
  4315   00208A  8A8C               	bsf	140,5,c	;volatile
  4316                           
  4317                           ;GAME.c: 140:                 LATDbits.LD6 = 1;
  4318   00208C  8C8C               	bsf	140,6,c	;volatile
  4319                           
  4320                           ;GAME.c: 141:                 break;
  4321   00208E  EF11  F011         	goto	l676
  4322   002092                     l681:
  4323                           
  4324                           ; BSR set to: 1
  4325                           ;GAME.c: 143:                 LATDbits.LD2 = 0;
  4326   002092  948C               	bcf	140,2,c	;volatile
  4327                           
  4328                           ;GAME.c: 144:                 LATDbits.LD3 = 0;
  4329   002094  968C               	bcf	140,3,c	;volatile
  4330                           
  4331                           ;GAME.c: 145:                 LATCbits.LC4 = 0;
  4332   002096  988B               	bcf	139,4,c	;volatile
  4333                           
  4334                           ;GAME.c: 146:                 LATDbits.LD4 = 0;
  4335   002098  988C               	bcf	140,4,c	;volatile
  4336                           
  4337                           ;GAME.c: 147:                 LATDbits.LD5 = 0;
  4338   00209A  9A8C               	bcf	140,5,c	;volatile
  4339                           
  4340                           ;GAME.c: 148:                 LATDbits.LD6 = 1;
  4341   00209C  8C8C               	bsf	140,6,c	;volatile
  4342                           
  4343                           ;GAME.c: 149:                 break;
  4344   00209E  EF11  F011         	goto	l676
  4345   0020A2                     l682:
  4346                           
  4347                           ; BSR set to: 1
  4348                           ;GAME.c: 151:                 LATDbits.LD2 = 0;
  4349   0020A2  948C               	bcf	140,2,c	;volatile
  4350                           
  4351                           ;GAME.c: 152:                 LATDbits.LD3 = 0;
  4352   0020A4  968C               	bcf	140,3,c	;volatile
  4353                           
  4354                           ;GAME.c: 153:                 LATCbits.LC4 = 0;
  4355   0020A6  988B               	bcf	139,4,c	;volatile
  4356                           
  4357                           ;GAME.c: 154:                 LATDbits.LD4 = 0;
  4358   0020A8  988C               	bcf	140,4,c	;volatile
  4359                           
  4360                           ;GAME.c: 155:                 LATDbits.LD5 = 0;
  4361   0020AA  9A8C               	bcf	140,5,c	;volatile
  4362                           
  4363                           ;GAME.c: 156:                 LATDbits.LD6 = 0;
  4364   0020AC  9C8C               	bcf	140,6,c	;volatile
  4365                           
  4366                           ;GAME.c: 157:                 break;
  4367   0020AE  EF11  F011         	goto	l676
  4368   0020B2                     l8316:
  4369                           
  4370                           ; BSR set to: 1
  4371                           ;GAME.c: 159:                 GAMEtime = 0;
  4372   0020B2  0E00               	movlw	0
  4373   0020B4  6F23               	movwf	_GAMEtime& (0+255),b
  4374   0020B6                     
  4375                           ; BSR set to: 1
  4376                           ;GAME.c: 160:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4377   0020B6  0EFE               	movlw	254
  4378   0020B8  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4379   0020BA  0100               	movlb	0	; () banked
  4380   0020BC  6FE7               	movwf	??_runGAME& (0+255),b
  4381   0020BE  0EFF               	movlw	255
  4382   0020C0  0101               	movlb	1	; () banked
  4383   0020C2  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4384   0020C4  0100               	movlb	0	; () banked
  4385   0020C6  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4386   0020C8  51E7               	movf	??_runGAME& (0+255),w,b
  4387   0020CA  0101               	movlb	1	; () banked
  4388   0020CC  5DC9               	subwf	runGAME@pot1& (0+255),w,b
  4389   0020CE  0100               	movlb	0	; () banked
  4390   0020D0  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4391   0020D2  0101               	movlb	1	; () banked
  4392   0020D4  59CA               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4393   0020D6  A0D8               	btfss	status,0,c
  4394   0020D8  EF70  F010         	goto	u10191
  4395   0020DC  EF72  F010         	goto	u10190
  4396   0020E0                     u10191:
  4397   0020E0  EFBA  F010         	goto	l684
  4398   0020E4                     u10190:
  4399   0020E4                     
  4400                           ; BSR set to: 1
  4401   0020E4  0E02               	movlw	2
  4402   0020E6  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4403   0020E8  0100               	movlb	0	; () banked
  4404   0020EA  6FE7               	movwf	??_runGAME& (0+255),b
  4405   0020EC  0E00               	movlw	0
  4406   0020EE  0101               	movlb	1	; () banked
  4407   0020F0  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4408   0020F2  0100               	movlb	0	; () banked
  4409   0020F4  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4410   0020F6  0101               	movlb	1	; () banked
  4411   0020F8  51C9               	movf	runGAME@pot1& (0+255),w,b
  4412   0020FA  0100               	movlb	0	; () banked
  4413   0020FC  5DE7               	subwf	??_runGAME& (0+255),w,b
  4414   0020FE  0101               	movlb	1	; () banked
  4415   002100  51CA               	movf	(runGAME@pot1+1)& (0+255),w,b
  4416   002102  0100               	movlb	0	; () banked
  4417   002104  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4418   002106  A0D8               	btfss	status,0,c
  4419   002108  EF88  F010         	goto	u10201
  4420   00210C  EF8A  F010         	goto	u10200
  4421   002110                     u10201:
  4422   002110  EFBA  F010         	goto	l684
  4423   002114                     u10200:
  4424   002114                     
  4425                           ; BSR set to: 0
  4426                           ;GAME.c: 161:                     GAMEround += 1;
  4427   002114  0101               	movlb	1	; () banked
  4428   002116  2BC7               	incf	runGAME@GAMEround& (0+255),f,b
  4429   002118                     
  4430                           ; BSR set to: 1
  4431                           ;GAME.c: 162:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4432   002118  EC4F  F026         	call	_rand	;wreg free
  4433   00211C  C012  F018         	movff	?_rand,___awdiv@dividend
  4434   002120  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4435   002124  0E00               	movlw	0
  4436   002126  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4437   002128  0E21               	movlw	33
  4438   00212A  6E1A               	movwf	___awdiv@divisor^0,c
  4439   00212C  EC07  F024         	call	___awdiv	;wreg free
  4440   002130  0E02               	movlw	2
  4441   002132  2418               	addwf	?___awdiv^0,w,c
  4442   002134  0101               	movlb	1	; () banked
  4443   002136  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4444   002138  0E00               	movlw	0
  4445   00213A  2019               	addwfc	(?___awdiv+1)^0,w,c
  4446   00213C  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4447   00213E                     
  4448                           ; BSR set to: 1
  4449                           ;GAME.c: 163:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4450   00213E  0EAC               	movlw	low runGAME@approxText
  4451   002140  0100               	movlb	0	; () banked
  4452   002142  6FCE               	movwf	sprintf@s& (0+255),b
  4453   002144  0E01               	movlw	high runGAME@approxText
  4454   002146  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4455   002148  0E77               	movlw	low STR_31
  4456   00214A  6FD0               	movwf	sprintf@fmt& (0+255),b
  4457   00214C  0EFE               	movlw	high STR_31
  4458   00214E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4459   002150  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4460   002154  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4461   002158  ECE1  F027         	call	_sprintf	;wreg free
  4462   00215C                     
  4463                           ;GAME.c: 164:                     keepStateGAME = 1;
  4464   00215C  0E01               	movlw	1
  4465   00215E  0101               	movlb	1	; () banked
  4466   002160  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4467   002162                     
  4468                           ; BSR set to: 1
  4469                           ;GAME.c: 165:                     LCD_ShowString((char)1, approxText);
  4470   002162  0EAC               	movlw	low runGAME@approxText
  4471   002164  6E07               	movwf	LCD_ShowString@textData^0,c
  4472   002166  0E01               	movlw	high runGAME@approxText
  4473   002168  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4474   00216A  0E01               	movlw	1
  4475   00216C  EC69  F024         	call	_LCD_ShowString
  4476                           
  4477                           ;GAME.c: 166:                 } else {
  4478   002170  EF11  F011         	goto	l676
  4479   002174                     l684:
  4480                           
  4481                           ;GAME.c: 167:                     ADCON0bits.ADON = 0;
  4482   002174  90C2               	bcf	194,0,c	;volatile
  4483   002176                     
  4484                           ;GAME.c: 168:                     sprintf(approxText, "Skore: %u        ", GAMEround - 1
      +                          );
  4485   002176  0EAC               	movlw	low runGAME@approxText
  4486   002178  0100               	movlb	0	; () banked
  4487   00217A  6FCE               	movwf	sprintf@s& (0+255),b
  4488   00217C  0E01               	movlw	high runGAME@approxText
  4489   00217E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4490   002180  0E9D               	movlw	low STR_34
  4491   002182  6FD0               	movwf	sprintf@fmt& (0+255),b
  4492   002184  0EFE               	movlw	high STR_34
  4493   002186  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4494   002188  0EFF               	movlw	255
  4495   00218A  0101               	movlb	1	; () banked
  4496   00218C  25C7               	addwf	runGAME@GAMEround& (0+255),w,b
  4497   00218E  0100               	movlb	0	; () banked
  4498   002190  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  4499   002192  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4500   002194  0EFF               	movlw	255
  4501   002196  23D3               	addwfc	(?_sprintf+5)& (0+255),f,b
  4502   002198  ECE1  F027         	call	_sprintf	;wreg free
  4503   00219C                     
  4504                           ;GAME.c: 169:                     LCD_ShowString((char)1, "GAME OVER       ");
  4505   00219C  0EC0               	movlw	low STR_35
  4506   00219E  6E07               	movwf	LCD_ShowString@textData^0,c
  4507   0021A0  0EFE               	movlw	high STR_35
  4508   0021A2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4509   0021A4  0E01               	movlw	1
  4510   0021A6  EC69  F024         	call	_LCD_ShowString
  4511   0021AA                     
  4512                           ;GAME.c: 170:                     LCD_ShowString((char)2, approxText);
  4513   0021AA  0EAC               	movlw	low runGAME@approxText
  4514   0021AC  6E07               	movwf	LCD_ShowString@textData^0,c
  4515   0021AE  0E01               	movlw	high runGAME@approxText
  4516   0021B0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4517   0021B2  0E02               	movlw	2
  4518   0021B4  EC69  F024         	call	_LCD_ShowString
  4519   0021B8                     
  4520                           ;GAME.c: 171:                     keepStateGAME = 0;
  4521   0021B8  0E00               	movlw	0
  4522   0021BA  0101               	movlb	1	; () banked
  4523   0021BC  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4524   0021BE                     
  4525                           ; BSR set to: 1
  4526                           ;GAME.c: 172:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4527   0021BE  0E52               	movlw	82
  4528   0021C0  0100               	movlb	0	; () banked
  4529   0021C2  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4530   0021C4  0E2B               	movlw	43
  4531   0021C6  6FE7               	movwf	??_runGAME& (0+255),b
  4532   0021C8  0E00               	movlw	0
  4533   0021CA                     u10477:
  4534   0021CA  2EE8               	decfsz	wreg,f,c
  4535   0021CC  D7FE               	bra	u10477
  4536   0021CE  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4537   0021D0  D7FC               	bra	u10477
  4538   0021D2  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4539   0021D4  D7FA               	bra	u10477
  4540   0021D6  0000               	nop	
  4541   0021D8  EF11  F011         	goto	l676
  4542   0021DC                     l8344:
  4543                           
  4544                           ; BSR set to: 1
  4545   0021DC  51C5               	movf	runGAME@GAMEpart& (0+255),w,b
  4546                           
  4547                           ; Switch size 1, requested type "simple"
  4548                           ; Number of cases is 8, Range of values is 0 to 7
  4549                           ; switch strategies available:
  4550                           ; Name         Instructions Cycles
  4551                           ; simple_byte           25    13 (average)
  4552                           ;	Chosen strategy is simple_byte
  4553   0021DE  0A00               	xorlw	0	; case 0
  4554   0021E0  B4D8               	btfsc	status,2,c
  4555   0021E2  EF21  F010         	goto	l675
  4556   0021E6  0A01               	xorlw	1	; case 1
  4557   0021E8  B4D8               	btfsc	status,2,c
  4558   0021EA  EF29  F010         	goto	l677
  4559   0021EE  0A03               	xorlw	3	; case 2
  4560   0021F0  B4D8               	btfsc	status,2,c
  4561   0021F2  EF31  F010         	goto	l678
  4562   0021F6  0A01               	xorlw	1	; case 3
  4563   0021F8  B4D8               	btfsc	status,2,c
  4564   0021FA  EF39  F010         	goto	l679
  4565   0021FE  0A07               	xorlw	7	; case 4
  4566   002200  B4D8               	btfsc	status,2,c
  4567   002202  EF41  F010         	goto	l680
  4568   002206  0A01               	xorlw	1	; case 5
  4569   002208  B4D8               	btfsc	status,2,c
  4570   00220A  EF49  F010         	goto	l681
  4571   00220E  0A03               	xorlw	3	; case 6
  4572   002210  B4D8               	btfsc	status,2,c
  4573   002212  EF51  F010         	goto	l682
  4574   002216  0A01               	xorlw	1	; case 7
  4575   002218  B4D8               	btfsc	status,2,c
  4576   00221A  EF59  F010         	goto	l8316
  4577   00221E  EF11  F011         	goto	l676
  4578   002222                     l676:
  4579                           
  4580                           ;GAME.c: 177:         if(PORTAbits.RA2){
  4581   002222  A480               	btfss	128,2,c	;volatile
  4582   002224  EF16  F011         	goto	u10211
  4583   002228  EF18  F011         	goto	u10210
  4584   00222C                     u10211:
  4585   00222C  EF35  F011         	goto	l662
  4586   002230                     u10210:
  4587   002230                     
  4588                           ;GAME.c: 178:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4589   002230  0E03               	movlw	3
  4590   002232  0100               	movlb	0	; () banked
  4591   002234  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4592   002236  0E08               	movlw	8
  4593   002238  6FE7               	movwf	??_runGAME& (0+255),b
  4594   00223A  0E77               	movlw	119
  4595   00223C                     u10487:
  4596   00223C  2EE8               	decfsz	wreg,f,c
  4597   00223E  D7FE               	bra	u10487
  4598   002240  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4599   002242  D7FC               	bra	u10487
  4600   002244  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4601   002246  D7FA               	bra	u10487
  4602   002248                     
  4603                           ;GAME.c: 179:             if(PORTAbits.RA2){
  4604   002248  A480               	btfss	128,2,c	;volatile
  4605   00224A  EF29  F011         	goto	u10221
  4606   00224E  EF2B  F011         	goto	u10220
  4607   002252                     u10221:
  4608   002252  EF35  F011         	goto	l662
  4609   002256                     u10220:
  4610   002256                     l688:
  4611   002256  B480               	btfsc	128,2,c	;volatile
  4612   002258  EF30  F011         	goto	u10231
  4613   00225C  EF32  F011         	goto	u10230
  4614   002260                     u10231:
  4615   002260  EF2B  F011         	goto	l688
  4616   002264                     u10230:
  4617   002264                     
  4618                           ;GAME.c: 181:                 keepStateGAME = 0;
  4619   002264  0E00               	movlw	0
  4620   002266  0101               	movlb	1	; () banked
  4621   002268  6FC6               	movwf	runGAME@keepStateGAME& (0+255),b
  4622   00226A                     l662:
  4623                           
  4624                           ;GAME.c: 72:     while(keepStateGAME){
  4625   00226A  0101               	movlb	1	; () banked
  4626   00226C  51C6               	movf	runGAME@keepStateGAME& (0+255),w,b
  4627   00226E  A4D8               	btfss	status,2,c
  4628   002270  EF3C  F011         	goto	u10241
  4629   002274  EF3E  F011         	goto	u10240
  4630   002278                     u10241:
  4631   002278  EFBD  F00F         	goto	l8290
  4632   00227C                     u10240:
  4633   00227C                     
  4634                           ; BSR set to: 1
  4635                           ;GAME.c: 187:     LATDbits.LD2 = 1;
  4636   00227C  848C               	bsf	140,2,c	;volatile
  4637                           
  4638                           ;GAME.c: 188:     LATDbits.LD3 = 1;
  4639   00227E  868C               	bsf	140,3,c	;volatile
  4640                           
  4641                           ;GAME.c: 189:     LATCbits.LC4 = 1;
  4642   002280  888B               	bsf	139,4,c	;volatile
  4643                           
  4644                           ;GAME.c: 190:     LATDbits.LD4 = 1;
  4645   002282  888C               	bsf	140,4,c	;volatile
  4646                           
  4647                           ;GAME.c: 191:     LATDbits.LD5 = 1;
  4648   002284  8A8C               	bsf	140,5,c	;volatile
  4649                           
  4650                           ;GAME.c: 192:     LATDbits.LD6 = 1;
  4651   002286  8C8C               	bsf	140,6,c	;volatile
  4652                           
  4653                           ;GAME.c: 193:     TMR1ON = 0;
  4654   002288  90CD               	bcf	4045,0,c	;volatile
  4655                           
  4656                           ;GAME.c: 194:     TMR1IE = 0;
  4657   00228A  909D               	bcf	3997,0,c	;volatile
  4658   00228C                     
  4659                           ; BSR set to: 1
  4660                           ;GAME.c: 195:     GAMEIE = 0;
  4661   00228C  0E00               	movlw	0
  4662   00228E  6F24               	movwf	_GAMEIE& (0+255),b
  4663   002290                     
  4664                           ; BSR set to: 1
  4665   002290  0012               	return		;funcret
  4666   002292                     __end_of_runGAME:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _rand *****************
  4670 ;; Defined at:
  4671 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  2   17[COMRAM] int 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;Total ram usage:        6 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 2
  4692 ;; This function calls:
  4693 ;;		___lmul
  4694 ;; This function is called by:
  4695 ;;		_runGAME
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text13
  4700   004C9E                     __ptext13:
  4701                           	callstack 0
  4702   004C9E                     _rand:
  4703                           	callstack 27
  4704   004C9E  C197  F006         	movff	_seed,___lmul@multiplier
  4705   004CA2  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4706   004CA6  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4707   004CAA  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4708   004CAE  0E2D               	movlw	45
  4709   004CB0  6E0A               	movwf	___lmul@multiplicand^0,c
  4710   004CB2  0E7F               	movlw	127
  4711   004CB4  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4712   004CB6  0E95               	movlw	149
  4713   004CB8  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4714   004CBA  0E4C               	movlw	76
  4715   004CBC  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4716   004CBE  EC86  F026         	call	___lmul	;wreg free
  4717   004CC2  0E01               	movlw	1
  4718   004CC4  2406               	addwf	?___lmul^0,w,c
  4719   004CC6  0101               	movlb	1	; () banked
  4720   004CC8  6F97               	movwf	_seed& (0+255),b
  4721   004CCA  0E00               	movlw	0
  4722   004CCC  2007               	addwfc	(?___lmul+1)^0,w,c
  4723   004CCE  6F98               	movwf	(_seed+1)& (0+255),b
  4724   004CD0  0E00               	movlw	0
  4725   004CD2  2008               	addwfc	(?___lmul+2)^0,w,c
  4726   004CD4  6F99               	movwf	(_seed+2)& (0+255),b
  4727   004CD6  0E00               	movlw	0
  4728   004CD8  2009               	addwfc	(?___lmul+3)^0,w,c
  4729   004CDA  6F9A               	movwf	(_seed+3)& (0+255),b
  4730   004CDC                     
  4731                           ; BSR set to: 1
  4732   004CDC  C197  F014         	movff	_seed,??_rand
  4733   004CE0  C198  F015         	movff	_seed+1,??_rand+1
  4734   004CE4  C199  F016         	movff	_seed+2,??_rand+2
  4735   004CE8  C19A  F017         	movff	_seed+3,??_rand+3
  4736   004CEC  0E12               	movlw	18
  4737   004CEE  EF7E  F026         	goto	u9660
  4738   004CF2                     u9665:
  4739   004CF2  90D8               	bcf	status,0,c
  4740   004CF4  3217               	rrcf	(??_rand+3)^0,f,c
  4741   004CF6  3216               	rrcf	(??_rand+2)^0,f,c
  4742   004CF8  3215               	rrcf	(??_rand+1)^0,f,c
  4743   004CFA  3214               	rrcf	??_rand^0,f,c
  4744   004CFC                     u9660:
  4745   004CFC  2EE8               	decfsz	wreg,f,c
  4746   004CFE  EF79  F026         	goto	u9665
  4747   004D02  C014  F012         	movff	??_rand,?_rand
  4748   004D06  C015  F013         	movff	??_rand+1,?_rand+1
  4749   004D0A                     
  4750                           ; BSR set to: 1
  4751   004D0A  0012               	return		;funcret
  4752   004D0C                     __end_of_rand:
  4753                           	callstack 0
  4754                           
  4755 ;; *************** function ___lmul *****************
  4756 ;; Defined at:
  4757 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  multiplier      4    5[COMRAM] unsigned long 
  4760 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  product         4   13[COMRAM] unsigned long 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  4    5[COMRAM] unsigned long 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:       12 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; Hardware stack levels required when called: 1
  4779 ;; This function calls:
  4780 ;;		Nothing
  4781 ;; This function is called by:
  4782 ;;		_rand
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text14
  4787   004D0C                     __ptext14:
  4788                           	callstack 0
  4789   004D0C                     ___lmul:
  4790                           	callstack 27
  4791   004D0C  0E00               	movlw	0
  4792   004D0E  6E0E               	movwf	___lmul@product^0,c
  4793   004D10  0E00               	movlw	0
  4794   004D12  6E0F               	movwf	(___lmul@product+1)^0,c
  4795   004D14  0E00               	movlw	0
  4796   004D16  6E10               	movwf	(___lmul@product+2)^0,c
  4797   004D18  0E00               	movlw	0
  4798   004D1A  6E11               	movwf	(___lmul@product+3)^0,c
  4799   004D1C                     l7656:
  4800   004D1C  A006               	btfss	___lmul@multiplier^0,0,c
  4801   004D1E  EF93  F026         	goto	u9281
  4802   004D22  EF95  F026         	goto	u9280
  4803   004D26                     u9281:
  4804   004D26  EF9D  F026         	goto	l7660
  4805   004D2A                     u9280:
  4806   004D2A  500A               	movf	___lmul@multiplicand^0,w,c
  4807   004D2C  260E               	addwf	___lmul@product^0,f,c
  4808   004D2E  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4809   004D30  220F               	addwfc	(___lmul@product+1)^0,f,c
  4810   004D32  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4811   004D34  2210               	addwfc	(___lmul@product+2)^0,f,c
  4812   004D36  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4813   004D38  2211               	addwfc	(___lmul@product+3)^0,f,c
  4814   004D3A                     l7660:
  4815   004D3A  90D8               	bcf	status,0,c
  4816   004D3C  360A               	rlcf	___lmul@multiplicand^0,f,c
  4817   004D3E  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4818   004D40  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4819   004D42  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4820   004D44  90D8               	bcf	status,0,c
  4821   004D46  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4822   004D48  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4823   004D4A  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4824   004D4C  3206               	rrcf	___lmul@multiplier^0,f,c
  4825   004D4E  5006               	movf	___lmul@multiplier^0,w,c
  4826   004D50  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4827   004D52  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4828   004D54  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4829   004D56  A4D8               	btfss	status,2,c
  4830   004D58  EFB0  F026         	goto	u9291
  4831   004D5C  EFB2  F026         	goto	u9290
  4832   004D60                     u9291:
  4833   004D60  EF8E  F026         	goto	l7656
  4834   004D64                     u9290:
  4835   004D64  C00E  F006         	movff	___lmul@product,?___lmul
  4836   004D68  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4837   004D6C  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4838   004D70  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4839   004D74  0012               	return		;funcret
  4840   004D76                     __end_of___lmul:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function ___lbdiv *****************
  4844 ;; Defined at:
  4845 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  dividend        1    wreg     unsigned char 
  4848 ;;  divisor         1    5[COMRAM] unsigned char 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;  dividend        1    6[COMRAM] unsigned char 
  4851 ;;  quotient        1    8[COMRAM] unsigned char 
  4852 ;;  counter         1    7[COMRAM] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      unsigned char 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4862 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;Total ram usage:        4 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 1
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_runGAME
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text15
  4877   004DDA                     __ptext15:
  4878                           	callstack 0
  4879   004DDA                     ___lbdiv:
  4880                           	callstack 28
  4881                           
  4882                           ;incstack = 0
  4883                           ;___lbdiv@dividend stored from wreg
  4884   004DDA  6E07               	movwf	___lbdiv@dividend^0,c
  4885   004DDC  0E00               	movlw	0
  4886   004DDE  6E09               	movwf	___lbdiv@quotient^0,c
  4887   004DE0  5006               	movf	___lbdiv@divisor^0,w,c
  4888   004DE2  B4D8               	btfsc	status,2,c
  4889   004DE4  EFF6  F026         	goto	u9671
  4890   004DE8  EFF8  F026         	goto	u9670
  4891   004DEC                     u9671:
  4892   004DEC  EF19  F027         	goto	l7938
  4893   004DF0                     u9670:
  4894   004DF0  0E01               	movlw	1
  4895   004DF2  6E08               	movwf	___lbdiv@counter^0,c
  4896   004DF4  EFFF  F026         	goto	l7926
  4897   004DF8                     l7922:
  4898   004DF8  90D8               	bcf	status,0,c
  4899   004DFA  3606               	rlcf	___lbdiv@divisor^0,f,c
  4900   004DFC  2A08               	incf	___lbdiv@counter^0,f,c
  4901   004DFE                     l7926:
  4902   004DFE  AE06               	btfss	___lbdiv@divisor^0,7,c
  4903   004E00  EF04  F027         	goto	u9681
  4904   004E04  EF06  F027         	goto	u9680
  4905   004E08                     u9681:
  4906   004E08  EFFC  F026         	goto	l7922
  4907   004E0C                     u9680:
  4908   004E0C                     l7928:
  4909   004E0C  90D8               	bcf	status,0,c
  4910   004E0E  3609               	rlcf	___lbdiv@quotient^0,f,c
  4911   004E10  5006               	movf	___lbdiv@divisor^0,w,c
  4912   004E12  5C07               	subwf	___lbdiv@dividend^0,w,c
  4913   004E14  A0D8               	btfss	status,0,c
  4914   004E16  EF0F  F027         	goto	u9691
  4915   004E1A  EF11  F027         	goto	u9690
  4916   004E1E                     u9691:
  4917   004E1E  EF14  F027         	goto	l7934
  4918   004E22                     u9690:
  4919   004E22  5006               	movf	___lbdiv@divisor^0,w,c
  4920   004E24  5E07               	subwf	___lbdiv@dividend^0,f,c
  4921   004E26  8009               	bsf	___lbdiv@quotient^0,0,c
  4922   004E28                     l7934:
  4923   004E28  90D8               	bcf	status,0,c
  4924   004E2A  3206               	rrcf	___lbdiv@divisor^0,f,c
  4925   004E2C  2E08               	decfsz	___lbdiv@counter^0,f,c
  4926   004E2E  EF06  F027         	goto	l7928
  4927   004E32                     l7938:
  4928   004E32  5009               	movf	___lbdiv@quotient^0,w,c
  4929   004E34  0012               	return		;funcret
  4930   004E36                     __end_of___lbdiv:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _runDAC *****************
  4934 ;; Defined at:
  4935 ;;		line 10 in file "DAC.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  DACindex        1  125[BANK0 ] unsigned char 
  4940 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  4941 ;;  keepState       1  123[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;Total ram usage:       12 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 9
  4958 ;; This function calls:
  4959 ;;		_SPI_write
  4960 ;;		___fladd
  4961 ;;		___fldiv
  4962 ;;		___flmul
  4963 ;;		___fltol
  4964 ;;		___xxtofl
  4965 ;;		_printf
  4966 ;;		_sinf
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text16
  4973   002D32                     __ptext16:
  4974                           	callstack 0
  4975   002D32                     _runDAC:
  4976                           	callstack 21
  4977   002D32                     
  4978                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  4979   002D32  8094               	bsf	148,0,c	;volatile
  4980                           
  4981                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  4982   002D34  8892               	bsf	146,4,c	;volatile
  4983                           
  4984                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  4985   002D36  8692               	bsf	146,3,c	;volatile
  4986                           
  4987                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  4988   002D38  8492               	bsf	146,2,c	;volatile
  4989                           
  4990                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  4991   002D3A  010F               	movlb	15	; () banked
  4992   002D3C  9738               	bcf	56,3,b	;volatile
  4993                           
  4994                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  4995   002D3E  9538               	bcf	56,2,b	;volatile
  4996                           
  4997                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  4998   002D40  9693               	bcf	147,3,c	;volatile
  4999                           
  5000                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  5001   002D42  9694               	bcf	148,3,c	;volatile
  5002                           
  5003                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  5004   002D44  9A94               	bcf	148,5,c	;volatile
  5005   002D46                     
  5006                           ; BSR set to: 15
  5007                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  5008   002D46  50C6               	movf	198,w,c	;volatile
  5009   002D48  0BF0               	andlw	-16
  5010   002D4A  0902               	iorlw	2
  5011   002D4C  6EC6               	movwf	198,c	;volatile
  5012   002D4E                     
  5013                           ; BSR set to: 15
  5014                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  5015   002D4E  98C6               	bcf	198,4,c	;volatile
  5016   002D50                     
  5017                           ; BSR set to: 15
  5018                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  5019   002D50  8CC7               	bsf	199,6,c	;volatile
  5020   002D52                     
  5021                           ; BSR set to: 15
  5022                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  5023   002D52  8AC6               	bsf	198,5,c	;volatile
  5024   002D54                     
  5025                           ; BSR set to: 15
  5026                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  5027   002D54  8139               	bsf	57,0,b	;volatile
  5028   002D56                     
  5029                           ; BSR set to: 15
  5030                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  5031   002D56  9EC0               	bcf	192,7,c	;volatile
  5032                           
  5033                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  5034   002D58  50C0               	movf	192,w,c	;volatile
  5035   002D5A  0BF8               	andlw	-8
  5036   002D5C  0906               	iorlw	6
  5037   002D5E  6EC0               	movwf	192,c	;volatile
  5038                           
  5039                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  5040   002D60  50C0               	movf	192,w,c	;volatile
  5041   002D62  0BC7               	andlw	-57
  5042   002D64  0930               	iorlw	48
  5043   002D66  6EC0               	movwf	192,c	;volatile
  5044   002D68                     
  5045                           ; BSR set to: 15
  5046                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  5047   002D68  80C2               	bsf	194,0,c	;volatile
  5048                           
  5049                           ;DAC.c: 38:     SPBRG1 = 25;
  5050   002D6A  0E19               	movlw	25
  5051   002D6C  6EAF               	movwf	175,c	;volatile
  5052   002D6E                     
  5053                           ; BSR set to: 15
  5054                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  5055   002D6E  8EAB               	bsf	171,7,c	;volatile
  5056   002D70                     
  5057                           ; BSR set to: 15
  5058                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  5059   002D70  98AC               	bcf	172,4,c	;volatile
  5060   002D72                     
  5061                           ; BSR set to: 15
  5062                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  5063   002D72  8AAC               	bsf	172,5,c	;volatile
  5064   002D74                     
  5065                           ; BSR set to: 15
  5066                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  5067   002D74  88AB               	bsf	171,4,c	;volatile
  5068   002D76                     
  5069                           ; BSR set to: 15
  5070                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  5071   002D76  868A               	bsf	138,3,c	;volatile
  5072                           
  5073                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  5074   002D78  50C2               	movf	194,w,c	;volatile
  5075   002D7A  0B83               	andlw	-125
  5076   002D7C  0930               	iorlw	48
  5077   002D7E  6EC2               	movwf	194,c	;volatile
  5078                           
  5079                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  5080   002D80  0E01               	movlw	1
  5081   002D82  0100               	movlb	0	; () banked
  5082   002D84  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5083                           
  5084                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  5085   002D86  0E01               	movlw	1
  5086   002D88  6FDB               	movwf	runDAC@keepState& (0+255),b
  5087                           
  5088                           ;DAC.c: 52:     uint8_t DACindex = 0;
  5089   002D8A  0E00               	movlw	0
  5090   002D8C  6FDD               	movwf	runDAC@DACindex& (0+255),b
  5091                           
  5092                           ;DAC.c: 54:     while(keepState){
  5093   002D8E  EF03  F018         	goto	l8244
  5094   002D92                     l8202:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;DAC.c: 57:                 if(DACindex<255/2){
  5098   002D92  0E7F               	movlw	127
  5099   002D94  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  5100   002D96  EFCF  F016         	goto	u10081
  5101   002D9A  EFD1  F016         	goto	u10080
  5102   002D9E                     u10081:
  5103   002D9E  EFF9  F016         	goto	l8206
  5104   002DA2                     u10080:
  5105   002DA2                     
  5106                           ; BSR set to: 0
  5107                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  5108   002DA2  0E33               	movlw	51
  5109   002DA4  6E18               	movwf	___flmul@a^0,c
  5110   002DA6  0E33               	movlw	51
  5111   002DA8  6E19               	movwf	(___flmul@a+1)^0,c
  5112   002DAA  0EF3               	movlw	243
  5113   002DAC  6E1A               	movwf	(___flmul@a+2)^0,c
  5114   002DAE  0E3F               	movlw	63
  5115   002DB0  6E1B               	movwf	(___flmul@a+3)^0,c
  5116   002DB2  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5117   002DB4  6E06               	movwf	___xxtofl@val^0,c
  5118   002DB6  6A07               	clrf	(___xxtofl@val+1)^0,c
  5119   002DB8  6A08               	clrf	(___xxtofl@val+2)^0,c
  5120   002DBA  6A09               	clrf	(___xxtofl@val+3)^0,c
  5121   002DBC  0E01               	movlw	1
  5122   002DBE  EC39  F01C         	call	___xxtofl
  5123   002DC2  C006  F014         	movff	?___xxtofl,___flmul@b
  5124   002DC6  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5125   002DCA  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5126   002DCE  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5127   002DD2  EC3A  F00D         	call	___flmul	;wreg free
  5128   002DD6  C014  F064         	movff	?___flmul,___fltol@f1
  5129   002DDA  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5130   002DDE  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5131   002DE2  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5132   002DE6  EC38  F021         	call	___fltol	;wreg free
  5133   002DEA  0100               	movlb	0	; () banked
  5134   002DEC  5164               	movf	?___fltol& (0+255),w,b
  5135   002DEE  EC26  F028         	call	_SPI_write
  5136   002DF2                     l8206:
  5137                           
  5138                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5139   002DF2  0E7E               	movlw	126
  5140   002DF4  0100               	movlb	0	; () banked
  5141   002DF6  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5142   002DF8  EF00  F017         	goto	u10091
  5143   002DFC  EF02  F017         	goto	u10090
  5144   002E00                     u10091:
  5145   002E00  EFBE  F017         	goto	l231
  5146   002E04                     u10090:
  5147   002E04                     
  5148                           ; BSR set to: 0
  5149                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5150   002E04  0E33               	movlw	51
  5151   002E06  6E18               	movwf	___flmul@a^0,c
  5152   002E08  0E33               	movlw	51
  5153   002E0A  6E19               	movwf	(___flmul@a+1)^0,c
  5154   002E0C  0EF3               	movlw	243
  5155   002E0E  6E1A               	movwf	(___flmul@a+2)^0,c
  5156   002E10  0E3F               	movlw	63
  5157   002E12  6E1B               	movwf	(___flmul@a+3)^0,c
  5158   002E14  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5159   002E16  0AFF               	xorlw	255
  5160   002E18  6FD2               	movwf	??_runDAC& (0+255),b
  5161   002E1A  51D2               	movf	??_runDAC& (0+255),w,b
  5162   002E1C  6E06               	movwf	___xxtofl@val^0,c
  5163   002E1E  6A07               	clrf	(___xxtofl@val+1)^0,c
  5164   002E20  6A08               	clrf	(___xxtofl@val+2)^0,c
  5165   002E22  6A09               	clrf	(___xxtofl@val+3)^0,c
  5166   002E24  0E01               	movlw	1
  5167   002E26  EC39  F01C         	call	___xxtofl
  5168   002E2A  C006  F014         	movff	?___xxtofl,___flmul@b
  5169   002E2E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5170   002E32  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5171   002E36  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5172   002E3A  EC3A  F00D         	call	___flmul	;wreg free
  5173   002E3E  C014  F064         	movff	?___flmul,___fltol@f1
  5174   002E42  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5175   002E46  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5176   002E4A  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5177   002E4E  EC38  F021         	call	___fltol	;wreg free
  5178   002E52  0100               	movlb	0	; () banked
  5179   002E54  5164               	movf	?___fltol& (0+255),w,b
  5180   002E56  EC26  F028         	call	_SPI_write
  5181   002E5A  EFBE  F017         	goto	l231
  5182   002E5E                     l8210:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5186   002E5E  0E00               	movlw	0
  5187   002E60  6E31               	movwf	___fldiv@a^0,c
  5188   002E62  0E00               	movlw	0
  5189   002E64  6E32               	movwf	(___fldiv@a+1)^0,c
  5190   002E66  0E7F               	movlw	127
  5191   002E68  6E33               	movwf	(___fldiv@a+2)^0,c
  5192   002E6A  0E43               	movlw	67
  5193   002E6C  6E34               	movwf	(___fldiv@a+3)^0,c
  5194   002E6E  0EC3               	movlw	195
  5195   002E70  6E18               	movwf	___flmul@a^0,c
  5196   002E72  0EF5               	movlw	245
  5197   002E74  6E19               	movwf	(___flmul@a+1)^0,c
  5198   002E76  0EC8               	movlw	200
  5199   002E78  6E1A               	movwf	(___flmul@a+2)^0,c
  5200   002E7A  0E40               	movlw	64
  5201   002E7C  6E1B               	movwf	(___flmul@a+3)^0,c
  5202   002E7E  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5203   002E80  6E06               	movwf	___xxtofl@val^0,c
  5204   002E82  6A07               	clrf	(___xxtofl@val+1)^0,c
  5205   002E84  6A08               	clrf	(___xxtofl@val+2)^0,c
  5206   002E86  6A09               	clrf	(___xxtofl@val+3)^0,c
  5207   002E88  0E01               	movlw	1
  5208   002E8A  EC39  F01C         	call	___xxtofl
  5209   002E8E  C006  F014         	movff	?___xxtofl,___flmul@b
  5210   002E92  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5211   002E96  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5212   002E9A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5213   002E9E  EC3A  F00D         	call	___flmul	;wreg free
  5214   002EA2  C014  F02D         	movff	?___flmul,___fldiv@b
  5215   002EA6  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5216   002EAA  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5217   002EAE  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5218   002EB2  EC2A  F013         	call	___fldiv	;wreg free
  5219   002EB6  C02D  F0D3         	movff	?___fldiv,_runDAC$4526
  5220   002EBA  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4526+1
  5221   002EBE  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4526+2
  5222   002EC2  C030  F0D6         	movff	?___fldiv+3,_runDAC$4526+3
  5223   002EC6                     
  5224                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5225   002EC6  C0D3  F0A4         	movff	_runDAC$4526,sinf@x
  5226   002ECA  C0D4  F0A5         	movff	_runDAC$4526+1,sinf@x+1
  5227   002ECE  C0D5  F0A6         	movff	_runDAC$4526+2,sinf@x+2
  5228   002ED2  C0D6  F0A7         	movff	_runDAC$4526+3,sinf@x+3
  5229   002ED6  EC54  F008         	call	_sinf	;wreg free
  5230   002EDA  C0A4  F0D7         	movff	?_sinf,_runDAC$4527
  5231   002EDE  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4527+1
  5232   002EE2  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4527+2
  5233   002EE6  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4527+3
  5234   002EEA                     
  5235                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5236   002EEA  0E00               	movlw	0
  5237   002EEC  6E4A               	movwf	___fladd@a^0,c
  5238   002EEE  0E00               	movlw	0
  5239   002EF0  6E4B               	movwf	(___fladd@a+1)^0,c
  5240   002EF2  0EFE               	movlw	254
  5241   002EF4  6E4C               	movwf	(___fladd@a+2)^0,c
  5242   002EF6  0E42               	movlw	66
  5243   002EF8  6E4D               	movwf	(___fladd@a+3)^0,c
  5244   002EFA  0E00               	movlw	0
  5245   002EFC  6E18               	movwf	___flmul@a^0,c
  5246   002EFE  0E00               	movlw	0
  5247   002F00  6E19               	movwf	(___flmul@a+1)^0,c
  5248   002F02  0EFE               	movlw	254
  5249   002F04  6E1A               	movwf	(___flmul@a+2)^0,c
  5250   002F06  0E42               	movlw	66
  5251   002F08  6E1B               	movwf	(___flmul@a+3)^0,c
  5252   002F0A  C0D7  F014         	movff	_runDAC$4527,___flmul@b
  5253   002F0E  C0D8  F015         	movff	_runDAC$4527+1,___flmul@b+1
  5254   002F12  C0D9  F016         	movff	_runDAC$4527+2,___flmul@b+2
  5255   002F16  C0DA  F017         	movff	_runDAC$4527+3,___flmul@b+3
  5256   002F1A  EC3A  F00D         	call	___flmul	;wreg free
  5257   002F1E  C014  F046         	movff	?___flmul,___fladd@b
  5258   002F22  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5259   002F26  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5260   002F2A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5261   002F2E  ECD9  F00A         	call	___fladd	;wreg free
  5262   002F32  C046  F064         	movff	?___fladd,___fltol@f1
  5263   002F36  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5264   002F3A  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5265   002F3E  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5266   002F42  EC38  F021         	call	___fltol	;wreg free
  5267   002F46  0100               	movlb	0	; () banked
  5268   002F48  5164               	movf	?___fltol& (0+255),w,b
  5269   002F4A  EC26  F028         	call	_SPI_write
  5270                           
  5271                           ;DAC.c: 66:                 break;
  5272   002F4E  EFBE  F017         	goto	l231
  5273   002F52                     l8216:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5277   002F52  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5278   002F54  0AFF               	xorlw	255
  5279   002F56  EC26  F028         	call	_SPI_write
  5280                           
  5281                           ;DAC.c: 69:                 break;
  5282   002F5A  EFBE  F017         	goto	l231
  5283   002F5E                     l8220:
  5284                           
  5285                           ; BSR set to: 0
  5286   002F5E  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5287                           
  5288                           ; Switch size 1, requested type "simple"
  5289                           ; Number of cases is 3, Range of values is 1 to 3
  5290                           ; switch strategies available:
  5291                           ; Name         Instructions Cycles
  5292                           ; simple_byte           10     6 (average)
  5293                           ;	Chosen strategy is simple_byte
  5294   002F60  0A01               	xorlw	1	; case 1
  5295   002F62  B4D8               	btfsc	status,2,c
  5296   002F64  EFC9  F016         	goto	l8202
  5297   002F68  0A03               	xorlw	3	; case 2
  5298   002F6A  B4D8               	btfsc	status,2,c
  5299   002F6C  EF2F  F017         	goto	l8210
  5300   002F70  0A01               	xorlw	1	; case 3
  5301   002F72  B4D8               	btfsc	status,2,c
  5302   002F74  EFA9  F017         	goto	l8216
  5303   002F78  EFBE  F017         	goto	l231
  5304   002F7C                     l231:
  5305                           
  5306                           ;DAC.c: 71:         GODONE = 1;
  5307   002F7C  82C2               	bsf	4034,1,c	;volatile
  5308   002F7E                     l234:
  5309   002F7E  B2C2               	btfsc	4034,1,c	;volatile
  5310   002F80  EFC4  F017         	goto	u10101
  5311   002F84  EFC6  F017         	goto	u10100
  5312   002F88                     u10101:
  5313   002F88  EFBF  F017         	goto	l234
  5314   002F8C                     u10100:
  5315   002F8C                     
  5316                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5317   002F8C  0EE6               	movlw	low STR_18
  5318   002F8E  0100               	movlb	0	; () banked
  5319   002F90  6FCE               	movwf	printf@fmt& (0+255),b
  5320   002F92  0EFF               	movlw	high STR_18
  5321   002F94  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5322   002F96  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5323   002F9A  6BD1               	clrf	(?_printf+3)& (0+255),b
  5324   002F9C  EC22  F029         	call	_printf	;wreg free
  5325   002FA0                     
  5326                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5327   002FA0  A082               	btfss	130,0,c	;volatile
  5328   002FA2  EFD5  F017         	goto	u10111
  5329   002FA6  EFD7  F017         	goto	u10110
  5330   002FAA                     u10111:
  5331   002FAA  EFDA  F017         	goto	l8228
  5332   002FAE                     u10110:
  5333   002FAE                     
  5334                           ;DAC.c: 76:             selectModeDAC = 1;
  5335   002FAE  0E01               	movlw	1
  5336   002FB0  0100               	movlb	0	; () banked
  5337   002FB2  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5338   002FB4                     l8228:
  5339                           
  5340                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5341   002FB4  A880               	btfss	128,4,c	;volatile
  5342   002FB6  EFDF  F017         	goto	u10121
  5343   002FBA  EFE1  F017         	goto	u10120
  5344   002FBE                     u10121:
  5345   002FBE  EFE4  F017         	goto	l8232
  5346   002FC2                     u10120:
  5347   002FC2                     
  5348                           ;DAC.c: 79:             selectModeDAC = 2;
  5349   002FC2  0E02               	movlw	2
  5350   002FC4  0100               	movlb	0	; () banked
  5351   002FC6  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5352   002FC8                     l8232:
  5353                           
  5354                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5355   002FC8  A680               	btfss	128,3,c	;volatile
  5356   002FCA  EFE9  F017         	goto	u10131
  5357   002FCE  EFEB  F017         	goto	u10130
  5358   002FD2                     u10131:
  5359   002FD2  EFEE  F017         	goto	l8236
  5360   002FD6                     u10130:
  5361   002FD6                     
  5362                           ;DAC.c: 82:             selectModeDAC = 3;
  5363   002FD6  0E03               	movlw	3
  5364   002FD8  0100               	movlb	0	; () banked
  5365   002FDA  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5366   002FDC                     l8236:
  5367                           
  5368                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5369   002FDC  A480               	btfss	128,2,c	;volatile
  5370   002FDE  EFF3  F017         	goto	u10141
  5371   002FE2  EFF5  F017         	goto	u10140
  5372   002FE6                     u10141:
  5373   002FE6  EFF8  F017         	goto	l8240
  5374   002FEA                     u10140:
  5375   002FEA                     
  5376                           ;DAC.c: 85:             keepState = 0;
  5377   002FEA  0E00               	movlw	0
  5378   002FEC  0100               	movlb	0	; () banked
  5379   002FEE  6FDB               	movwf	runDAC@keepState& (0+255),b
  5380   002FF0                     l8240:
  5381                           
  5382                           ;DAC.c: 87:         DACindex++;
  5383   002FF0  0100               	movlb	0	; () banked
  5384   002FF2  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5385   002FF4                     
  5386                           ; BSR set to: 0
  5387                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5388   002FF4  0E68               	movlw	104
  5389   002FF6  0100               	movlb	0	; () banked
  5390   002FF8  6FD2               	movwf	??_runDAC& (0+255),b
  5391   002FFA  0EE4               	movlw	228
  5392   002FFC                     u10497:
  5393   002FFC  2EE8               	decfsz	wreg,f,c
  5394   002FFE  D7FE               	bra	u10497
  5395   003000  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5396   003002  D7FC               	bra	u10497
  5397   003004  0000               	nop	
  5398   003006                     l8244:
  5399                           
  5400                           ;DAC.c: 54:     while(keepState){
  5401   003006  0100               	movlb	0	; () banked
  5402   003008  51DB               	movf	runDAC@keepState& (0+255),w,b
  5403   00300A  A4D8               	btfss	status,2,c
  5404   00300C  EF0A  F018         	goto	u10151
  5405   003010  EF0C  F018         	goto	u10150
  5406   003014                     u10151:
  5407   003014  EFAF  F017         	goto	l8220
  5408   003018                     u10150:
  5409   003018                     
  5410                           ; BSR set to: 0
  5411   003018  0012               	return		;funcret
  5412   00301A                     __end_of_runDAC:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _sinf *****************
  5416 ;; Defined at:
  5417 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  x               4   68[BANK0 ] float 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  ux              4   90[BANK0 ] struct .
  5422 ;;  y               4   86[BANK0 ] struct .
  5423 ;;  sign            1   81[BANK0 ] _Bool 
  5424 ;;  n               1   80[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  4   68[BANK0 ] float 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;Total ram usage:       26 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 4
  5441 ;; This function calls:
  5442 ;;		___cosdf
  5443 ;;		___fladd
  5444 ;;		___flneg
  5445 ;;		___rem_pio2f
  5446 ;;		___sindf
  5447 ;; This function is called by:
  5448 ;;		_runDAC
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text17
  5453   0010A8                     __ptext17:
  5454                           	callstack 0
  5455   0010A8                     _sinf:
  5456                           	callstack 25
  5457   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5458   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5459   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5460   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5461   0010B8  0100               	movlb	0	; () banked
  5462   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5463   0010BC  EF62  F008         	goto	u9461
  5464   0010C0  EF65  F008         	goto	u9460
  5465   0010C4                     u9461:
  5466   0010C4  0E01               	movlw	1
  5467   0010C6  EF66  F008         	goto	u9470
  5468   0010CA                     u9460:
  5469   0010CA  0E00               	movlw	0
  5470   0010CC                     u9470:
  5471   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5472   0010CE                     
  5473                           ; BSR set to: 0
  5474   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5475   0010D0                     
  5476                           ; BSR set to: 0
  5477   0010D0  0EDB               	movlw	219
  5478   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5479   0010D4  0E0F               	movlw	15
  5480   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5481   0010D8  0E49               	movlw	73
  5482   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5483   0010DC  0E3F               	movlw	63
  5484   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5485   0010E0  B0D8               	btfsc	status,0,c
  5486   0010E2  EF75  F008         	goto	u9481
  5487   0010E6  EF77  F008         	goto	u9480
  5488   0010EA                     u9481:
  5489   0010EA  EFA0  F008         	goto	l7782
  5490   0010EE                     u9480:
  5491   0010EE                     
  5492                           ; BSR set to: 0
  5493   0010EE  0E80               	movlw	128
  5494   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5495   0010F2  0E39               	movlw	57
  5496   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5497   0010F6  B0D8               	btfsc	status,0,c
  5498   0010F8  EF80  F008         	goto	u9491
  5499   0010FC  EF82  F008         	goto	u9490
  5500   001100                     u9491:
  5501   001100  EF8C  F008         	goto	l7778
  5502   001104                     u9490:
  5503   001104                     
  5504                           ; BSR set to: 0
  5505   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5506   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5507   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5508   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5509   001114  EFD8  F00A         	goto	l1694
  5510   001118                     l7778:
  5511                           
  5512                           ; BSR set to: 0
  5513   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5514   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5515   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5516   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5517   001128  EC0D  F018         	call	___sindf	;wreg free
  5518   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5519   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5520   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5521   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5522   00113C  EFD8  F00A         	goto	l1694
  5523   001140                     l7782:
  5524                           
  5525                           ; BSR set to: 0
  5526   001140  0ED2               	movlw	210
  5527   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5528   001144  0E53               	movlw	83
  5529   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5530   001148  0E7B               	movlw	123
  5531   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5532   00114C  0E40               	movlw	64
  5533   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5534   001150  B0D8               	btfsc	status,0,c
  5535   001152  EFAD  F008         	goto	u9501
  5536   001156  EFAF  F008         	goto	u9500
  5537   00115A                     u9501:
  5538   00115A  EF92  F009         	goto	l7812
  5539   00115E                     u9500:
  5540   00115E                     
  5541                           ; BSR set to: 0
  5542   00115E  0EE4               	movlw	228
  5543   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5544   001162  0ECB               	movlw	203
  5545   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5546   001166  0E16               	movlw	22
  5547   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5548   00116A  0E40               	movlw	64
  5549   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5550   00116E  B0D8               	btfsc	status,0,c
  5551   001170  EFBC  F008         	goto	u9511
  5552   001174  EFBE  F008         	goto	u9510
  5553   001178                     u9511:
  5554   001178  EF2C  F009         	goto	l7802
  5555   00117C                     u9510:
  5556   00117C                     
  5557                           ; BSR set to: 0
  5558   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5559   00117E  B4D8               	btfsc	status,2,c
  5560   001180  EFC4  F008         	goto	u9521
  5561   001184  EFC6  F008         	goto	u9520
  5562   001188                     u9521:
  5563   001188  EFFE  F008         	goto	l7796
  5564   00118C                     u9520:
  5565   00118C                     
  5566                           ; BSR set to: 0
  5567   00118C  0EDB               	movlw	219
  5568   00118E  6E4A               	movwf	___fladd@a^0,c
  5569   001190  0E0F               	movlw	15
  5570   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5571   001194  0EC9               	movlw	201
  5572   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5573   001198  0E3F               	movlw	63
  5574   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5575   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5576   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5577   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5578   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5579   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5580   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4529
  5581   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5582   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5583   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5584   0011C0                     l7790:
  5585   0011C0  C0B2  F064         	movff	_sinf$4529,___cosdf@x
  5586   0011C4  C0B3  F065         	movff	_sinf$4529+1,___cosdf@x+1
  5587   0011C8  C0B4  F066         	movff	_sinf$4529+2,___cosdf@x+2
  5588   0011CC  C0B5  F067         	movff	_sinf$4529+3,___cosdf@x+3
  5589   0011D0  EC3A  F01B         	call	___cosdf	;wreg free
  5590   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5591   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5592   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5593   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5594   0011E4  EC45  F028         	call	___flneg	;wreg free
  5595   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5596   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5597   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5598   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5599   0011F8  EFD8  F00A         	goto	l1694
  5600   0011FC                     l7796:
  5601                           
  5602                           ; BSR set to: 0
  5603   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5604   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5605   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5606   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5607   00120C  0EDB               	movlw	219
  5608   00120E  6E4A               	movwf	___fladd@a^0,c
  5609   001210  0E0F               	movlw	15
  5610   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5611   001214  0EC9               	movlw	201
  5612   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5613   001218  0EBF               	movlw	191
  5614   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5615   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5616   001220  C046  F0B2         	movff	?___fladd,_sinf$4529
  5617   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5618   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5619   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5620   001230                     l7798:
  5621   001230  C0B2  F064         	movff	_sinf$4529,___cosdf@x
  5622   001234  C0B3  F065         	movff	_sinf$4529+1,___cosdf@x+1
  5623   001238  C0B4  F066         	movff	_sinf$4529+2,___cosdf@x+2
  5624   00123C  C0B5  F067         	movff	_sinf$4529+3,___cosdf@x+3
  5625   001240  EC3A  F01B         	call	___cosdf	;wreg free
  5626   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5627   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5628   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5629   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5630   001254  EFD8  F00A         	goto	l1694
  5631   001258                     l7802:
  5632                           
  5633                           ; BSR set to: 0
  5634   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5635   00125A  A4D8               	btfss	status,2,c
  5636   00125C  EF32  F009         	goto	u9531
  5637   001260  EF34  F009         	goto	u9530
  5638   001264                     u9531:
  5639   001264  EF5A  F009         	goto	l7806
  5640   001268                     u9530:
  5641   001268                     
  5642                           ; BSR set to: 0
  5643   001268  0EDB               	movlw	219
  5644   00126A  6E4A               	movwf	___fladd@a^0,c
  5645   00126C  0E0F               	movlw	15
  5646   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5647   001270  0E49               	movlw	73
  5648   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5649   001274  0EC0               	movlw	192
  5650   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5651   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5652   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5653   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5654   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5655   001288  ECD9  F00A         	call	___fladd	;wreg free
  5656   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5657   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5658   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5659   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5660   00129C  EC45  F028         	call	___flneg	;wreg free
  5661   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4245
  5662   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4245+1
  5663   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4245+2
  5664   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4245+3
  5665   0012B0  EF7E  F009         	goto	l7808
  5666   0012B4                     l7806:
  5667                           
  5668                           ; BSR set to: 0
  5669   0012B4  0EDB               	movlw	219
  5670   0012B6  6E4A               	movwf	___fladd@a^0,c
  5671   0012B8  0E0F               	movlw	15
  5672   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5673   0012BC  0E49               	movlw	73
  5674   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5675   0012C0  0E40               	movlw	64
  5676   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5677   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5678   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5679   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5680   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5681   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5682   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5683   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5684   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5685   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5686   0012E8  EC45  F028         	call	___flneg	;wreg free
  5687   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4245
  5688   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4245+1
  5689   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4245+2
  5690   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4245+3
  5691   0012FC                     l7808:
  5692   0012FC  C0A8  F064         	movff	_sinf$4245,___sindf@x
  5693   001300  C0A9  F065         	movff	_sinf$4245+1,___sindf@x+1
  5694   001304  C0AA  F066         	movff	_sinf$4245+2,___sindf@x+2
  5695   001308  C0AB  F067         	movff	_sinf$4245+3,___sindf@x+3
  5696   00130C  EC0D  F018         	call	___sindf	;wreg free
  5697   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5698   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5699   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5700   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5701   001320  EFD8  F00A         	goto	l1694
  5702   001324                     l7812:
  5703                           
  5704                           ; BSR set to: 0
  5705   001324  0ED6               	movlw	214
  5706   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5707   001328  0E31               	movlw	49
  5708   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5709   00132C  0EE2               	movlw	226
  5710   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5711   001330  0E40               	movlw	64
  5712   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5713   001334  B0D8               	btfsc	status,0,c
  5714   001336  EF9F  F009         	goto	u9541
  5715   00133A  EFA1  F009         	goto	u9540
  5716   00133E                     u9541:
  5717   00133E  EF42  F00A         	goto	l7842
  5718   001342                     u9540:
  5719   001342                     
  5720                           ; BSR set to: 0
  5721   001342  0EE0               	movlw	224
  5722   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5723   001346  0EED               	movlw	237
  5724   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5725   00134A  0EAF               	movlw	175
  5726   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5727   00134E  0E40               	movlw	64
  5728   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5729   001352  B0D8               	btfsc	status,0,c
  5730   001354  EFAE  F009         	goto	u9551
  5731   001358  EFB0  F009         	goto	u9550
  5732   00135C                     u9551:
  5733   00135C  EFF0  F009         	goto	l7832
  5734   001360                     u9550:
  5735   001360                     
  5736                           ; BSR set to: 0
  5737   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5738   001362  B4D8               	btfsc	status,2,c
  5739   001364  EFB6  F009         	goto	u9561
  5740   001368  EFB8  F009         	goto	u9560
  5741   00136C                     u9561:
  5742   00136C  EFD4  F009         	goto	l7826
  5743   001370                     u9560:
  5744   001370                     
  5745                           ; BSR set to: 0
  5746   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5747   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5748   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5749   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5750   001380  0EE4               	movlw	228
  5751   001382  6E4A               	movwf	___fladd@a^0,c
  5752   001384  0ECB               	movlw	203
  5753   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5754   001388  0E96               	movlw	150
  5755   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5756   00138C  0E40               	movlw	64
  5757   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5758   001390  ECD9  F00A         	call	___fladd	;wreg free
  5759   001394  C046  F0B2         	movff	?___fladd,_sinf$4529
  5760   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5761   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5762   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5763   0013A4  EF18  F009         	goto	l7798
  5764   0013A8                     l7826:
  5765                           
  5766                           ; BSR set to: 0
  5767   0013A8  0EE4               	movlw	228
  5768   0013AA  6E4A               	movwf	___fladd@a^0,c
  5769   0013AC  0ECB               	movlw	203
  5770   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5771   0013B0  0E96               	movlw	150
  5772   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5773   0013B4  0EC0               	movlw	192
  5774   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5775   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5776   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5777   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5778   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5779   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5780   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4529
  5781   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4529+1
  5782   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4529+2
  5783   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4529+3
  5784   0013DC  EFE0  F008         	goto	l7790
  5785   0013E0                     l7832:
  5786                           
  5787                           ; BSR set to: 0
  5788   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5789   0013E2  A4D8               	btfss	status,2,c
  5790   0013E4  EFF6  F009         	goto	u9571
  5791   0013E8  EFF8  F009         	goto	u9570
  5792   0013EC                     u9571:
  5793   0013EC  EF14  F00A         	goto	l7836
  5794   0013F0                     u9570:
  5795   0013F0                     
  5796                           ; BSR set to: 0
  5797   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5798   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5799   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5800   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5801   001400  0EDB               	movlw	219
  5802   001402  6E4A               	movwf	___fladd@a^0,c
  5803   001404  0E0F               	movlw	15
  5804   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5805   001408  0EC9               	movlw	201
  5806   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5807   00140C  0EC0               	movlw	192
  5808   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5809   001410  ECD9  F00A         	call	___fladd	;wreg free
  5810   001414  C046  F0AC         	movff	?___fladd,_sinf$4246
  5811   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4246+1
  5812   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4246+2
  5813   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4246+3
  5814   001424  EF2E  F00A         	goto	l7838
  5815   001428                     l7836:
  5816                           
  5817                           ; BSR set to: 0
  5818   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5819   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5820   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5821   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5822   001438  0EDB               	movlw	219
  5823   00143A  6E4A               	movwf	___fladd@a^0,c
  5824   00143C  0E0F               	movlw	15
  5825   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5826   001440  0EC9               	movlw	201
  5827   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5828   001444  0E40               	movlw	64
  5829   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5830   001448  ECD9  F00A         	call	___fladd	;wreg free
  5831   00144C  C046  F0AC         	movff	?___fladd,_sinf$4246
  5832   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4246+1
  5833   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4246+2
  5834   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4246+3
  5835   00145C                     l7838:
  5836   00145C  C0AC  F064         	movff	_sinf$4246,___sindf@x
  5837   001460  C0AD  F065         	movff	_sinf$4246+1,___sindf@x+1
  5838   001464  C0AE  F066         	movff	_sinf$4246+2,___sindf@x+2
  5839   001468  C0AF  F067         	movff	_sinf$4246+3,___sindf@x+3
  5840   00146C  EC0D  F018         	call	___sindf	;wreg free
  5841   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5842   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5843   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5844   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5845   001480  EFD8  F00A         	goto	l1694
  5846   001484                     l7842:
  5847                           
  5848                           ; BSR set to: 0
  5849   001484  0E80               	movlw	128
  5850   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5851   001488  0E7F               	movlw	127
  5852   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5853   00148C  A0D8               	btfss	status,0,c
  5854   00148E  EF4B  F00A         	goto	u9581
  5855   001492  EF4D  F00A         	goto	u9580
  5856   001496                     u9581:
  5857   001496  EF5F  F00A         	goto	l7850
  5858   00149A                     u9580:
  5859   00149A                     
  5860                           ; BSR set to: 0
  5861   00149A  0EFF               	movlw	255
  5862   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  5863   00149E  0EFF               	movlw	255
  5864   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  5865   0014A2  0EFF               	movlw	255
  5866   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  5867   0014A6  0E00               	movlw	0
  5868   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  5869   0014AA                     
  5870                           ; BSR set to: 0
  5871   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  5872   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  5873   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  5874   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  5875   0014BA  EFD8  F00A         	goto	l1694
  5876   0014BE                     l7850:
  5877                           
  5878                           ; BSR set to: 0
  5879   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  5880   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  5881   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  5882   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  5883   0014CE  0EB6               	movlw	low sinf@y
  5884   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  5885   0014D2  EC49  F011         	call	___rem_pio2f	;wreg free
  5886   0014D6  0100               	movlb	0	; () banked
  5887   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  5888   0014DA  0B03               	andlw	3
  5889   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  5890   0014DE  EFC9  F00A         	goto	l7868
  5891   0014E2                     l7852:
  5892                           
  5893                           ; BSR set to: 0
  5894   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  5895   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  5896   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  5897   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  5898   0014F2  EC45  F028         	call	___flneg	;wreg free
  5899   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  5900   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  5901   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  5902   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  5903   001506                     l7854:
  5904   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  5905   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  5906   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  5907   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  5908   001516  EC0D  F018         	call	___sindf	;wreg free
  5909   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  5910   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5911   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5912   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5913   00152A  EFD8  F00A         	goto	l1694
  5914   00152E                     l7858:
  5915                           
  5916                           ; BSR set to: 0
  5917   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  5918   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5919   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5920   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5921   00153E  EC3A  F01B         	call	___cosdf	;wreg free
  5922   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  5923   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5924   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5925   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5926   001552  EFD8  F00A         	goto	l1694
  5927   001556                     l7862:
  5928                           
  5929                           ; BSR set to: 0
  5930   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  5931   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5932   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5933   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5934   001566  EC3A  F01B         	call	___cosdf	;wreg free
  5935   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  5936   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5937   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5938   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5939   00157A  EC45  F028         	call	___flneg	;wreg free
  5940   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  5941   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5942   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5943   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5944   00158E  EFD8  F00A         	goto	l1694
  5945   001592                     l7868:
  5946                           
  5947                           ; BSR set to: 0
  5948   001592  51B0               	movf	sinf@n& (0+255),w,b
  5949                           
  5950                           ; Switch size 1, requested type "simple"
  5951                           ; Number of cases is 3, Range of values is 0 to 2
  5952                           ; switch strategies available:
  5953                           ; Name         Instructions Cycles
  5954                           ; simple_byte           10     6 (average)
  5955                           ;	Chosen strategy is simple_byte
  5956   001594  0A00               	xorlw	0	; case 0
  5957   001596  B4D8               	btfsc	status,2,c
  5958   001598  EF83  F00A         	goto	l7854
  5959   00159C  0A01               	xorlw	1	; case 1
  5960   00159E  B4D8               	btfsc	status,2,c
  5961   0015A0  EF97  F00A         	goto	l7858
  5962   0015A4  0A03               	xorlw	3	; case 2
  5963   0015A6  B4D8               	btfsc	status,2,c
  5964   0015A8  EF71  F00A         	goto	l7852
  5965   0015AC  EFAB  F00A         	goto	l7862
  5966   0015B0                     l1694:
  5967   0015B0  0012               	return		;funcret
  5968   0015B2                     __end_of_sinf:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function ___sindf *****************
  5972 ;; Defined at:
  5973 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  x               4    4[BANK0 ] float 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  z               4   32[BANK0 ] float 
  5978 ;;  s               4   28[BANK0 ] float 
  5979 ;;  w               4   12[BANK0 ] float 
  5980 ;;  r               4    8[BANK0 ] float 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  4    4[BANK0 ] float 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;Total ram usage:       32 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 2
  5997 ;; This function calls:
  5998 ;;		___fladd
  5999 ;;		___flmul
  6000 ;; This function is called by:
  6001 ;;		_sinf
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text18
  6006   00301A                     __ptext18:
  6007                           	callstack 0
  6008   00301A                     ___sindf:
  6009                           	callstack 26
  6010   00301A  C064  F014         	movff	___sindf@x,___flmul@b
  6011   00301E  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  6012   003022  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  6013   003026  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  6014   00302A  C064  F018         	movff	___sindf@x,___flmul@a
  6015   00302E  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6016   003032  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6017   003036  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6018   00303A  EC3A  F00D         	call	___flmul	;wreg free
  6019   00303E  C014  F080         	movff	?___flmul,___sindf@z
  6020   003042  C015  F081         	movff	?___flmul+1,___sindf@z+1
  6021   003046  C016  F082         	movff	?___flmul+2,___sindf@z+2
  6022   00304A  C017  F083         	movff	?___flmul+3,___sindf@z+3
  6023   00304E  C080  F014         	movff	___sindf@z,___flmul@b
  6024   003052  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6025   003056  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6026   00305A  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6027   00305E  C080  F018         	movff	___sindf@z,___flmul@a
  6028   003062  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  6029   003066  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  6030   00306A  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  6031   00306E  EC3A  F00D         	call	___flmul	;wreg free
  6032   003072  C014  F06C         	movff	?___flmul,___sindf@w
  6033   003076  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  6034   00307A  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  6035   00307E  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  6036   003082  0E3C               	movlw	60
  6037   003084  6E18               	movwf	___flmul@a^0,c
  6038   003086  0E6C               	movlw	108
  6039   003088  6E19               	movwf	(___flmul@a+1)^0,c
  6040   00308A  0E36               	movlw	54
  6041   00308C  6E1A               	movwf	(___flmul@a+2)^0,c
  6042   00308E  0E36               	movlw	54
  6043   003090  6E1B               	movwf	(___flmul@a+3)^0,c
  6044   003092  C080  F014         	movff	___sindf@z,___flmul@b
  6045   003096  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6046   00309A  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6047   00309E  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6048   0030A2  EC3A  F00D         	call	___flmul	;wreg free
  6049   0030A6  C014  F046         	movff	?___flmul,___fladd@b
  6050   0030AA  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6051   0030AE  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6052   0030B2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6053   0030B6  0ECF               	movlw	207
  6054   0030B8  6E4A               	movwf	___fladd@a^0,c
  6055   0030BA  0E07               	movlw	7
  6056   0030BC  6E4B               	movwf	(___fladd@a+1)^0,c
  6057   0030BE  0E50               	movlw	80
  6058   0030C0  6E4C               	movwf	(___fladd@a+2)^0,c
  6059   0030C2  0EB9               	movlw	185
  6060   0030C4  6E4D               	movwf	(___fladd@a+3)^0,c
  6061   0030C6  ECD9  F00A         	call	___fladd	;wreg free
  6062   0030CA  C046  F068         	movff	?___fladd,___sindf@r
  6063   0030CE  C047  F069         	movff	?___fladd+1,___sindf@r+1
  6064   0030D2  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  6065   0030D6  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  6066   0030DA  C080  F014         	movff	___sindf@z,___flmul@b
  6067   0030DE  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6068   0030E2  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6069   0030E6  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6070   0030EA  C064  F018         	movff	___sindf@x,___flmul@a
  6071   0030EE  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6072   0030F2  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6073   0030F6  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6074   0030FA  EC3A  F00D         	call	___flmul	;wreg free
  6075   0030FE  C014  F07C         	movff	?___flmul,___sindf@s
  6076   003102  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  6077   003106  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  6078   00310A  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  6079   00310E  0EAB               	movlw	171
  6080   003110  6E4A               	movwf	___fladd@a^0,c
  6081   003112  0EAA               	movlw	170
  6082   003114  6E4B               	movwf	(___fladd@a+1)^0,c
  6083   003116  0E2A               	movlw	42
  6084   003118  6E4C               	movwf	(___fladd@a+2)^0,c
  6085   00311A  0EBE               	movlw	190
  6086   00311C  6E4D               	movwf	(___fladd@a+3)^0,c
  6087   00311E  0E84               	movlw	132
  6088   003120  6E18               	movwf	___flmul@a^0,c
  6089   003122  0E88               	movlw	136
  6090   003124  6E19               	movwf	(___flmul@a+1)^0,c
  6091   003126  0E08               	movlw	8
  6092   003128  6E1A               	movwf	(___flmul@a+2)^0,c
  6093   00312A  0E3C               	movlw	60
  6094   00312C  6E1B               	movwf	(___flmul@a+3)^0,c
  6095   00312E  C080  F014         	movff	___sindf@z,___flmul@b
  6096   003132  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6097   003136  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6098   00313A  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6099   00313E  EC3A  F00D         	call	___flmul	;wreg free
  6100   003142  C014  F046         	movff	?___flmul,___fladd@b
  6101   003146  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6102   00314A  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6103   00314E  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6104   003152  ECD9  F00A         	call	___fladd	;wreg free
  6105   003156  C046  F070         	movff	?___fladd,___sindf$4534
  6106   00315A  C047  F071         	movff	?___fladd+1,___sindf$4534+1
  6107   00315E  C048  F072         	movff	?___fladd+2,___sindf$4534+2
  6108   003162  C049  F073         	movff	?___fladd+3,___sindf$4534+3
  6109   003166  C06C  F018         	movff	___sindf@w,___flmul@a
  6110   00316A  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  6111   00316E  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  6112   003172  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  6113   003176  C07C  F014         	movff	___sindf@s,___flmul@b
  6114   00317A  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6115   00317E  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6116   003182  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6117   003186  EC3A  F00D         	call	___flmul	;wreg free
  6118   00318A  C014  F074         	movff	?___flmul,___sindf$4535
  6119   00318E  C015  F075         	movff	?___flmul+1,___sindf$4535+1
  6120   003192  C016  F076         	movff	?___flmul+2,___sindf$4535+2
  6121   003196  C017  F077         	movff	?___flmul+3,___sindf$4535+3
  6122   00319A  C064  F04A         	movff	___sindf@x,___fladd@a
  6123   00319E  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6124   0031A2  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6125   0031A6  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6126   0031AA  C07C  F018         	movff	___sindf@s,___flmul@a
  6127   0031AE  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6128   0031B2  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6129   0031B6  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6130   0031BA  C070  F014         	movff	___sindf$4534,___flmul@b
  6131   0031BE  C071  F015         	movff	___sindf$4534+1,___flmul@b+1
  6132   0031C2  C072  F016         	movff	___sindf$4534+2,___flmul@b+2
  6133   0031C6  C073  F017         	movff	___sindf$4534+3,___flmul@b+3
  6134   0031CA  EC3A  F00D         	call	___flmul	;wreg free
  6135   0031CE  C014  F046         	movff	?___flmul,___fladd@b
  6136   0031D2  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6137   0031D6  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6138   0031DA  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6139   0031DE  ECD9  F00A         	call	___fladd	;wreg free
  6140   0031E2  C046  F078         	movff	?___fladd,___sindf$4536
  6141   0031E6  C047  F079         	movff	?___fladd+1,___sindf$4536+1
  6142   0031EA  C048  F07A         	movff	?___fladd+2,___sindf$4536+2
  6143   0031EE  C049  F07B         	movff	?___fladd+3,___sindf$4536+3
  6144   0031F2  C078  F046         	movff	___sindf$4536,___fladd@b
  6145   0031F6  C079  F047         	movff	___sindf$4536+1,___fladd@b+1
  6146   0031FA  C07A  F048         	movff	___sindf$4536+2,___fladd@b+2
  6147   0031FE  C07B  F049         	movff	___sindf$4536+3,___fladd@b+3
  6148   003202  C068  F018         	movff	___sindf@r,___flmul@a
  6149   003206  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6150   00320A  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6151   00320E  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6152   003212  C074  F014         	movff	___sindf$4535,___flmul@b
  6153   003216  C075  F015         	movff	___sindf$4535+1,___flmul@b+1
  6154   00321A  C076  F016         	movff	___sindf$4535+2,___flmul@b+2
  6155   00321E  C077  F017         	movff	___sindf$4535+3,___flmul@b+3
  6156   003222  EC3A  F00D         	call	___flmul	;wreg free
  6157   003226  C014  F04A         	movff	?___flmul,___fladd@a
  6158   00322A  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6159   00322E  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6160   003232  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6161   003236  ECD9  F00A         	call	___fladd	;wreg free
  6162   00323A  C046  F064         	movff	?___fladd,?___sindf
  6163   00323E  C047  F065         	movff	?___fladd+1,?___sindf+1
  6164   003242  C048  F066         	movff	?___fladd+2,?___sindf+2
  6165   003246  C049  F067         	movff	?___fladd+3,?___sindf+3
  6166   00324A  0012               	return		;funcret
  6167   00324C                     __end_of___sindf:
  6168                           	callstack 0
  6169                           
  6170 ;; *************** function ___rem_pio2f *****************
  6171 ;; Defined at:
  6172 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  x               4   36[BANK0 ] float 
  6175 ;;  y               1   40[BANK0 ] PTR 
  6176 ;;		 -> sinf@y(4), 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  n               4   64[BANK0 ] long 
  6179 ;;  t               4   60[BANK0 ] float 
  6180 ;;  fn              4   56[BANK0 ] float 
  6181 ;;  ux              4   52[BANK0 ] struct .
  6182 ;;  ty              4   43[BANK0 ] [1]
  6183 ;;  sign            1   51[BANK0 ] _Bool 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  2   36[BANK0 ] int 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6193 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;Total ram usage:       32 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 3
  6200 ;; This function calls:
  6201 ;;		___fladd
  6202 ;;		___flmul
  6203 ;;		___flneg
  6204 ;;		___flsub
  6205 ;;		___fltol
  6206 ;;		___xxtofl
  6207 ;;		_fabsf
  6208 ;; This function is called by:
  6209 ;;		_sinf
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text19
  6214   002292                     __ptext19:
  6215                           	callstack 0
  6216   002292                     ___rem_pio2f:
  6217                           	callstack 25
  6218   002292  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6219   002296  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6220   00229A  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6221   00229E  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6222   0022A2  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6223   0022A6  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6224   0022AA  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6225   0022AE  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6226   0022B2  0100               	movlb	0	; () banked
  6227   0022B4  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6228   0022B6  EF5F  F011         	goto	u9311
  6229   0022BA  EF62  F011         	goto	u9310
  6230   0022BE                     u9311:
  6231   0022BE  0E01               	movlw	1
  6232   0022C0  EF63  F011         	goto	u9320
  6233   0022C4                     u9310:
  6234   0022C4  0E00               	movlw	0
  6235   0022C6                     u9320:
  6236   0022C6  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6237   0022C8                     
  6238                           ; BSR set to: 0
  6239   0022C8  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6240   0022CA                     
  6241                           ; BSR set to: 0
  6242   0022CA  0EDB               	movlw	219
  6243   0022CC  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6244   0022CE  0E0F               	movlw	15
  6245   0022D0  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6246   0022D2  0EC9               	movlw	201
  6247   0022D4  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6248   0022D6  0E4D               	movlw	77
  6249   0022D8  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6250   0022DA  B0D8               	btfsc	status,0,c
  6251   0022DC  EF72  F011         	goto	u9331
  6252   0022E0  EF74  F011         	goto	u9330
  6253   0022E4                     u9331:
  6254   0022E4  EF60  F012         	goto	l7708
  6255   0022E8                     u9330:
  6256   0022E8                     
  6257                           ; BSR set to: 0
  6258   0022E8  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6259   0022EC  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6260   0022F0  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6261   0022F4  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6262   0022F8  ECB4  F028         	call	_fabsf	;wreg free
  6263   0022FC  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6264   002300  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6265   002304  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6266   002308  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6267   00230C  0E00               	movlw	0
  6268   00230E  6E4A               	movwf	___fladd@a^0,c
  6269   002310  0E00               	movlw	0
  6270   002312  6E4B               	movwf	(___fladd@a+1)^0,c
  6271   002314  0E00               	movlw	0
  6272   002316  6E4C               	movwf	(___fladd@a+2)^0,c
  6273   002318  0E3F               	movlw	63
  6274   00231A  6E4D               	movwf	(___fladd@a+3)^0,c
  6275   00231C  0E83               	movlw	131
  6276   00231E  6E18               	movwf	___flmul@a^0,c
  6277   002320  0EF9               	movlw	249
  6278   002322  6E19               	movwf	(___flmul@a+1)^0,c
  6279   002324  0E22               	movlw	34
  6280   002326  6E1A               	movwf	(___flmul@a+2)^0,c
  6281   002328  0E3F               	movlw	63
  6282   00232A  6E1B               	movwf	(___flmul@a+3)^0,c
  6283   00232C  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6284   002330  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6285   002334  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6286   002338  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6287   00233C  EC3A  F00D         	call	___flmul	;wreg free
  6288   002340  C014  F046         	movff	?___flmul,___fladd@b
  6289   002344  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6290   002348  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6291   00234C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6292   002350  ECD9  F00A         	call	___fladd	;wreg free
  6293   002354  C046  F064         	movff	?___fladd,___fltol@f1
  6294   002358  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6295   00235C  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6296   002360  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6297   002364  EC38  F021         	call	___fltol	;wreg free
  6298   002368  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6299   00236C  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6300   002370  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6301   002374  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6302   002378  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6303   00237C  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6304   002380  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6305   002384  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6306   002388  0E01               	movlw	1
  6307   00238A  EC39  F01C         	call	___xxtofl
  6308   00238E  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6309   002392  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6310   002396  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6311   00239A  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6312   00239E  0EDA               	movlw	218
  6313   0023A0  6E18               	movwf	___flmul@a^0,c
  6314   0023A2  0E0F               	movlw	15
  6315   0023A4  6E19               	movwf	(___flmul@a+1)^0,c
  6316   0023A6  0EC9               	movlw	201
  6317   0023A8  6E1A               	movwf	(___flmul@a+2)^0,c
  6318   0023AA  0E3F               	movlw	63
  6319   0023AC  6E1B               	movwf	(___flmul@a+3)^0,c
  6320   0023AE  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6321   0023B2  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6322   0023B6  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6323   0023BA  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6324   0023BE  EC3A  F00D         	call	___flmul	;wreg free
  6325   0023C2  C014  F068         	movff	?___flmul,___flsub@a
  6326   0023C6  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6327   0023CA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6328   0023CE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6329   0023D2  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6330   0023D6  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6331   0023DA  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6332   0023DE  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6333   0023E2  ECBD  F027         	call	___flsub	;wreg free
  6334   0023E6  C064  F08F         	movff	?___flsub,___rem_pio2f$4533
  6335   0023EA  C065  F090         	movff	?___flsub+1,___rem_pio2f$4533+1
  6336   0023EE  C066  F091         	movff	?___flsub+2,___rem_pio2f$4533+2
  6337   0023F2  C067  F092         	movff	?___flsub+3,___rem_pio2f$4533+3
  6338   0023F6  C08F  F064         	movff	___rem_pio2f$4533,___flsub@b
  6339   0023FA  C090  F065         	movff	___rem_pio2f$4533+1,___flsub@b+1
  6340   0023FE  C091  F066         	movff	___rem_pio2f$4533+2,___flsub@b+2
  6341   002402  C092  F067         	movff	___rem_pio2f$4533+3,___flsub@b+3
  6342   002406  0EA3               	movlw	163
  6343   002408  6E18               	movwf	___flmul@a^0,c
  6344   00240A  0E85               	movlw	133
  6345   00240C  6E19               	movwf	(___flmul@a+1)^0,c
  6346   00240E  0E88               	movlw	136
  6347   002410  6E1A               	movwf	(___flmul@a+2)^0,c
  6348   002412  0E32               	movlw	50
  6349   002414  6E1B               	movwf	(___flmul@a+3)^0,c
  6350   002416  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6351   00241A  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6352   00241E  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6353   002422  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6354   002426  EC3A  F00D         	call	___flmul	;wreg free
  6355   00242A  C014  F068         	movff	?___flmul,___flsub@a
  6356   00242E  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6357   002432  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6358   002436  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6359   00243A  ECBD  F027         	call	___flsub	;wreg free
  6360   00243E  0100               	movlb	0	; () banked
  6361   002440  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6362   002442  6ED9               	movwf	fsr2l,c
  6363   002444  6ADA               	clrf	fsr2h,c
  6364   002446  C064  FFDE         	movff	?___flsub,postinc2
  6365   00244A  C065  FFDE         	movff	?___flsub+1,postinc2
  6366   00244E  C066  FFDE         	movff	?___flsub+2,postinc2
  6367   002452  C067  FFDE         	movff	?___flsub+3,postinc2
  6368   002456                     
  6369                           ; BSR set to: 0
  6370   002456  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6371   002458  B4D8               	btfsc	status,2,c
  6372   00245A  EF31  F012         	goto	u9341
  6373   00245E  EF33  F012         	goto	u9340
  6374   002462                     u9341:
  6375   002462  EF5A  F012         	goto	l1744
  6376   002466                     u9340:
  6377   002466                     l7702:
  6378                           
  6379                           ; BSR set to: 0
  6380   002466  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6381   002468  6ED9               	movwf	fsr2l,c
  6382   00246A  6ADA               	clrf	fsr2h,c
  6383   00246C  CFDE F080          	movff	postinc2,___flneg@f1
  6384   002470  CFDE F081          	movff	postinc2,___flneg@f1+1
  6385   002474  CFDE F082          	movff	postinc2,___flneg@f1+2
  6386   002478  CFDE F083          	movff	postinc2,___flneg@f1+3
  6387   00247C  EC45  F028         	call	___flneg	;wreg free
  6388   002480  0100               	movlb	0	; () banked
  6389   002482  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6390   002484  6ED9               	movwf	fsr2l,c
  6391   002486  6ADA               	clrf	fsr2h,c
  6392   002488  C080  FFDE         	movff	?___flneg,postinc2
  6393   00248C  C081  FFDE         	movff	?___flneg+1,postinc2
  6394   002490  C082  FFDE         	movff	?___flneg+2,postinc2
  6395   002494  C083  FFDE         	movff	?___flneg+3,postinc2
  6396   002498                     
  6397                           ; BSR set to: 0
  6398   002498  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6399   00249C  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6400   0024A0  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6401   0024A2  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6402   0024A4  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6403   0024A6  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6404   0024A8  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6405   0024AC  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6406   0024B0  EF29  F013         	goto	l1745
  6407   0024B4                     l1744:
  6408                           
  6409                           ; BSR set to: 0
  6410   0024B4  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6411   0024B8  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6412   0024BC  EF29  F013         	goto	l1745
  6413   0024C0                     l7708:
  6414                           
  6415                           ; BSR set to: 0
  6416   0024C0  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6417   0024C4  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6418   0024C8  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6419   0024CC  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6420   0024D0  ECB4  F028         	call	_fabsf	;wreg free
  6421   0024D4  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6422   0024D8  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6423   0024DC  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6424   0024E0  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6425   0024E4  0E00               	movlw	0
  6426   0024E6  6E4A               	movwf	___fladd@a^0,c
  6427   0024E8  0E00               	movlw	0
  6428   0024EA  6E4B               	movwf	(___fladd@a+1)^0,c
  6429   0024EC  0E00               	movlw	0
  6430   0024EE  6E4C               	movwf	(___fladd@a+2)^0,c
  6431   0024F0  0E3F               	movlw	63
  6432   0024F2  6E4D               	movwf	(___fladd@a+3)^0,c
  6433   0024F4  0E83               	movlw	131
  6434   0024F6  6E18               	movwf	___flmul@a^0,c
  6435   0024F8  0EF9               	movlw	249
  6436   0024FA  6E19               	movwf	(___flmul@a+1)^0,c
  6437   0024FC  0E22               	movlw	34
  6438   0024FE  6E1A               	movwf	(___flmul@a+2)^0,c
  6439   002500  0E3F               	movlw	63
  6440   002502  6E1B               	movwf	(___flmul@a+3)^0,c
  6441   002504  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6442   002508  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6443   00250C  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6444   002510  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6445   002514  EC3A  F00D         	call	___flmul	;wreg free
  6446   002518  C014  F046         	movff	?___flmul,___fladd@b
  6447   00251C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6448   002520  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6449   002524  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6450   002528  ECD9  F00A         	call	___fladd	;wreg free
  6451   00252C  C046  F064         	movff	?___fladd,___fltol@f1
  6452   002530  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6453   002534  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6454   002538  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6455   00253C  EC38  F021         	call	___fltol	;wreg free
  6456   002540  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6457   002544  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6458   002548  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6459   00254C  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6460   002550  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6461   002554  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6462   002558  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6463   00255C  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6464   002560  0E01               	movlw	1
  6465   002562  EC39  F01C         	call	___xxtofl
  6466   002566  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6467   00256A  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6468   00256E  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6469   002572  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6470   002576  0EDA               	movlw	218
  6471   002578  6E18               	movwf	___flmul@a^0,c
  6472   00257A  0E0F               	movlw	15
  6473   00257C  6E19               	movwf	(___flmul@a+1)^0,c
  6474   00257E  0EC9               	movlw	201
  6475   002580  6E1A               	movwf	(___flmul@a+2)^0,c
  6476   002582  0E3F               	movlw	63
  6477   002584  6E1B               	movwf	(___flmul@a+3)^0,c
  6478   002586  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6479   00258A  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6480   00258E  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6481   002592  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6482   002596  EC3A  F00D         	call	___flmul	;wreg free
  6483   00259A  C014  F068         	movff	?___flmul,___flsub@a
  6484   00259E  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6485   0025A2  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6486   0025A6  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6487   0025AA  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6488   0025AE  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6489   0025B2  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6490   0025B6  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6491   0025BA  ECBD  F027         	call	___flsub	;wreg free
  6492   0025BE  C064  F08F         	movff	?___flsub,___rem_pio2f$4533
  6493   0025C2  C065  F090         	movff	?___flsub+1,___rem_pio2f$4533+1
  6494   0025C6  C066  F091         	movff	?___flsub+2,___rem_pio2f$4533+2
  6495   0025CA  C067  F092         	movff	?___flsub+3,___rem_pio2f$4533+3
  6496   0025CE  C08F  F064         	movff	___rem_pio2f$4533,___flsub@b
  6497   0025D2  C090  F065         	movff	___rem_pio2f$4533+1,___flsub@b+1
  6498   0025D6  C091  F066         	movff	___rem_pio2f$4533+2,___flsub@b+2
  6499   0025DA  C092  F067         	movff	___rem_pio2f$4533+3,___flsub@b+3
  6500   0025DE  0EA3               	movlw	163
  6501   0025E0  6E18               	movwf	___flmul@a^0,c
  6502   0025E2  0E85               	movlw	133
  6503   0025E4  6E19               	movwf	(___flmul@a+1)^0,c
  6504   0025E6  0E88               	movlw	136
  6505   0025E8  6E1A               	movwf	(___flmul@a+2)^0,c
  6506   0025EA  0E32               	movlw	50
  6507   0025EC  6E1B               	movwf	(___flmul@a+3)^0,c
  6508   0025EE  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6509   0025F2  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6510   0025F6  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6511   0025FA  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6512   0025FE  EC3A  F00D         	call	___flmul	;wreg free
  6513   002602  C014  F068         	movff	?___flmul,___flsub@a
  6514   002606  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6515   00260A  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6516   00260E  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6517   002612  ECBD  F027         	call	___flsub	;wreg free
  6518   002616  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6519   00261A  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6520   00261E  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6521   002622  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6522   002626  0100               	movlb	0	; () banked
  6523   002628  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6524   00262A  6ED9               	movwf	fsr2l,c
  6525   00262C  6ADA               	clrf	fsr2h,c
  6526   00262E  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6527   002632  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6528   002636  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6529   00263A  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6530   00263E                     
  6531                           ; BSR set to: 0
  6532   00263E  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6533   002640  B4D8               	btfsc	status,2,c
  6534   002642  EF25  F013         	goto	u9351
  6535   002646  EF27  F013         	goto	u9350
  6536   00264A                     u9351:
  6537   00264A  EF5A  F012         	goto	l1744
  6538   00264E                     u9350:
  6539   00264E  EF33  F012         	goto	l7702
  6540   002652                     l1745:
  6541                           
  6542                           ; BSR set to: 0
  6543   002652  0012               	return		;funcret
  6544   002654                     __end_of___rem_pio2f:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _fabsf *****************
  6548 ;; Defined at:
  6549 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  x               4    5[COMRAM] float 
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;  u               4    9[COMRAM] struct .
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  4    5[COMRAM] float 
  6556 ;; Registers used:
  6557 ;;		status,2, status,0
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;Total ram usage:        8 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; Hardware stack levels required when called: 1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		___rem_pio2f
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text20
  6578   005168                     __ptext20:
  6579                           	callstack 0
  6580   005168                     _fabsf:
  6581                           	callstack 26
  6582   005168  C111  F00A         	movff	fabsf@F465,fabsf@u
  6583   00516C  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6584   005170  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6585   005174  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6586   005178  C006  F00A         	movff	fabsf@x,fabsf@u
  6587   00517C  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6588   005180  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6589   005184  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6590   005188  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6591   00518A  C00A  F006         	movff	fabsf@u,?_fabsf
  6592   00518E  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6593   005192  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6594   005196  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6595   00519A  0012               	return		;funcret
  6596   00519C                     __end_of_fabsf:
  6597                           	callstack 0
  6598                           
  6599 ;; *************** function ___cosdf *****************
  6600 ;; Defined at:
  6601 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  x               4    4[BANK0 ] float 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  z               4   28[BANK0 ] float 
  6606 ;;  w               4   24[BANK0 ] float 
  6607 ;;  r               4    8[BANK0 ] float 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  4    4[BANK0 ] float 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6617 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;Total ram usage:       28 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; Hardware stack levels required when called: 2
  6624 ;; This function calls:
  6625 ;;		___fladd
  6626 ;;		___flmul
  6627 ;; This function is called by:
  6628 ;;		_sinf
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text21
  6633   003674                     __ptext21:
  6634                           	callstack 0
  6635   003674                     ___cosdf:
  6636                           	callstack 26
  6637   003674  C064  F014         	movff	___cosdf@x,___flmul@b
  6638   003678  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6639   00367C  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6640   003680  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6641   003684  C064  F018         	movff	___cosdf@x,___flmul@a
  6642   003688  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6643   00368C  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6644   003690  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6645   003694  EC3A  F00D         	call	___flmul	;wreg free
  6646   003698  C014  F07C         	movff	?___flmul,___cosdf@z
  6647   00369C  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6648   0036A0  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6649   0036A4  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6650   0036A8  C07C  F014         	movff	___cosdf@z,___flmul@b
  6651   0036AC  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6652   0036B0  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6653   0036B4  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6654   0036B8  C07C  F018         	movff	___cosdf@z,___flmul@a
  6655   0036BC  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6656   0036C0  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6657   0036C4  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6658   0036C8  EC3A  F00D         	call	___flmul	;wreg free
  6659   0036CC  C014  F078         	movff	?___flmul,___cosdf@w
  6660   0036D0  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6661   0036D4  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6662   0036D8  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6663   0036DC  0E17               	movlw	23
  6664   0036DE  6E18               	movwf	___flmul@a^0,c
  6665   0036E0  0E9A               	movlw	154
  6666   0036E2  6E19               	movwf	(___flmul@a+1)^0,c
  6667   0036E4  0ECC               	movlw	204
  6668   0036E6  6E1A               	movwf	(___flmul@a+2)^0,c
  6669   0036E8  0E37               	movlw	55
  6670   0036EA  6E1B               	movwf	(___flmul@a+3)^0,c
  6671   0036EC  C07C  F014         	movff	___cosdf@z,___flmul@b
  6672   0036F0  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6673   0036F4  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6674   0036F8  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6675   0036FC  EC3A  F00D         	call	___flmul	;wreg free
  6676   003700  C014  F046         	movff	?___flmul,___fladd@b
  6677   003704  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6678   003708  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6679   00370C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6680   003710  0E3F               	movlw	63
  6681   003712  6E4A               	movwf	___fladd@a^0,c
  6682   003714  0E04               	movlw	4
  6683   003716  6E4B               	movwf	(___fladd@a+1)^0,c
  6684   003718  0EB6               	movlw	182
  6685   00371A  6E4C               	movwf	(___fladd@a+2)^0,c
  6686   00371C  0EBA               	movlw	186
  6687   00371E  6E4D               	movwf	(___fladd@a+3)^0,c
  6688   003720  ECD9  F00A         	call	___fladd	;wreg free
  6689   003724  C046  F068         	movff	?___fladd,___cosdf@r
  6690   003728  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6691   00372C  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6692   003730  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6693   003734  0E00               	movlw	0
  6694   003736  6E4A               	movwf	___fladd@a^0,c
  6695   003738  0E00               	movlw	0
  6696   00373A  6E4B               	movwf	(___fladd@a+1)^0,c
  6697   00373C  0E80               	movlw	128
  6698   00373E  6E4C               	movwf	(___fladd@a+2)^0,c
  6699   003740  0E3F               	movlw	63
  6700   003742  6E4D               	movwf	(___fladd@a+3)^0,c
  6701   003744  0E00               	movlw	0
  6702   003746  6E18               	movwf	___flmul@a^0,c
  6703   003748  0E00               	movlw	0
  6704   00374A  6E19               	movwf	(___flmul@a+1)^0,c
  6705   00374C  0E00               	movlw	0
  6706   00374E  6E1A               	movwf	(___flmul@a+2)^0,c
  6707   003750  0EBF               	movlw	191
  6708   003752  6E1B               	movwf	(___flmul@a+3)^0,c
  6709   003754  C07C  F014         	movff	___cosdf@z,___flmul@b
  6710   003758  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6711   00375C  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6712   003760  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6713   003764  EC3A  F00D         	call	___flmul	;wreg free
  6714   003768  C014  F046         	movff	?___flmul,___fladd@b
  6715   00376C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6716   003770  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6717   003774  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6718   003778  ECD9  F00A         	call	___fladd	;wreg free
  6719   00377C  C046  F06C         	movff	?___fladd,___cosdf$4530
  6720   003780  C047  F06D         	movff	?___fladd+1,___cosdf$4530+1
  6721   003784  C048  F06E         	movff	?___fladd+2,___cosdf$4530+2
  6722   003788  C049  F06F         	movff	?___fladd+3,___cosdf$4530+3
  6723   00378C  C07C  F018         	movff	___cosdf@z,___flmul@a
  6724   003790  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6725   003794  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6726   003798  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6727   00379C  C078  F014         	movff	___cosdf@w,___flmul@b
  6728   0037A0  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6729   0037A4  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6730   0037A8  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6731   0037AC  EC3A  F00D         	call	___flmul	;wreg free
  6732   0037B0  C014  F070         	movff	?___flmul,___cosdf$4531
  6733   0037B4  C015  F071         	movff	?___flmul+1,___cosdf$4531+1
  6734   0037B8  C016  F072         	movff	?___flmul+2,___cosdf$4531+2
  6735   0037BC  C017  F073         	movff	?___flmul+3,___cosdf$4531+3
  6736   0037C0  0E9F               	movlw	159
  6737   0037C2  6E18               	movwf	___flmul@a^0,c
  6738   0037C4  0EAA               	movlw	170
  6739   0037C6  6E19               	movwf	(___flmul@a+1)^0,c
  6740   0037C8  0E2A               	movlw	42
  6741   0037CA  6E1A               	movwf	(___flmul@a+2)^0,c
  6742   0037CC  0E3D               	movlw	61
  6743   0037CE  6E1B               	movwf	(___flmul@a+3)^0,c
  6744   0037D0  C078  F014         	movff	___cosdf@w,___flmul@b
  6745   0037D4  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6746   0037D8  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6747   0037DC  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6748   0037E0  EC3A  F00D         	call	___flmul	;wreg free
  6749   0037E4  C014  F04A         	movff	?___flmul,___fladd@a
  6750   0037E8  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6751   0037EC  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6752   0037F0  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6753   0037F4  C06C  F046         	movff	___cosdf$4530,___fladd@b
  6754   0037F8  C06D  F047         	movff	___cosdf$4530+1,___fladd@b+1
  6755   0037FC  C06E  F048         	movff	___cosdf$4530+2,___fladd@b+2
  6756   003800  C06F  F049         	movff	___cosdf$4530+3,___fladd@b+3
  6757   003804  ECD9  F00A         	call	___fladd	;wreg free
  6758   003808  C046  F074         	movff	?___fladd,___cosdf$4532
  6759   00380C  C047  F075         	movff	?___fladd+1,___cosdf$4532+1
  6760   003810  C048  F076         	movff	?___fladd+2,___cosdf$4532+2
  6761   003814  C049  F077         	movff	?___fladd+3,___cosdf$4532+3
  6762   003818  C074  F046         	movff	___cosdf$4532,___fladd@b
  6763   00381C  C075  F047         	movff	___cosdf$4532+1,___fladd@b+1
  6764   003820  C076  F048         	movff	___cosdf$4532+2,___fladd@b+2
  6765   003824  C077  F049         	movff	___cosdf$4532+3,___fladd@b+3
  6766   003828  C068  F018         	movff	___cosdf@r,___flmul@a
  6767   00382C  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6768   003830  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6769   003834  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6770   003838  C070  F014         	movff	___cosdf$4531,___flmul@b
  6771   00383C  C071  F015         	movff	___cosdf$4531+1,___flmul@b+1
  6772   003840  C072  F016         	movff	___cosdf$4531+2,___flmul@b+2
  6773   003844  C073  F017         	movff	___cosdf$4531+3,___flmul@b+3
  6774   003848  EC3A  F00D         	call	___flmul	;wreg free
  6775   00384C  C014  F04A         	movff	?___flmul,___fladd@a
  6776   003850  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6777   003854  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6778   003858  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6779   00385C  ECD9  F00A         	call	___fladd	;wreg free
  6780   003860  C046  F064         	movff	?___fladd,?___cosdf
  6781   003864  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6782   003868  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6783   00386C  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6784   003870  0012               	return		;funcret
  6785   003872                     __end_of___cosdf:
  6786                           	callstack 0
  6787                           
  6788 ;; *************** function _printf *****************
  6789 ;; Defined at:
  6790 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6793 ;;		 -> STR_30(5), STR_18(5), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  ret             2    0        int 
  6796 ;;  ap              1   83[COMRAM] PTR void [1]
  6797 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6798 ;; Return value:  Size  Location     Type
  6799 ;;                  2  110[BANK0 ] int 
  6800 ;; Registers used:
  6801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6807 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6810 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;Total ram usage:        5 bytes
  6812 ;; Hardware stack levels used: 1
  6813 ;; Hardware stack levels required when called: 8
  6814 ;; This function calls:
  6815 ;;		_vfprintf
  6816 ;; This function is called by:
  6817 ;;		_runDAC
  6818 ;;		_runUART
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text22
  6823   005244                     __ptext22:
  6824                           	callstack 0
  6825   005244                     _printf:
  6826                           	callstack 21
  6827   005244  0ED0               	movlw	low (?_printf+2)
  6828   005246  6E54               	movwf	printf@ap^0,c
  6829   005248  0E00               	movlw	0
  6830   00524A  0100               	movlb	0	; () banked
  6831   00524C  6FC7               	movwf	vfprintf@fp& (0+255),b
  6832   00524E  0E00               	movlw	0
  6833   005250  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6834   005252  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6835   005256  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6836   00525A  0E54               	movlw	low printf@ap
  6837   00525C  6FCB               	movwf	vfprintf@ap& (0+255),b
  6838   00525E  EC98  F027         	call	_vfprintf	;wreg free
  6839   005262  0012               	return		;funcret
  6840   005264                     __end_of_printf:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function _SPI_write *****************
  6844 ;; Defined at:
  6845 ;;		line 93 in file "DAC.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  data            1    wreg     unsigned char 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  data            1    7[COMRAM] unsigned char 
  6850 ;;  LSB             1    6[COMRAM] unsigned char 
  6851 ;;  MSB             1    5[COMRAM] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;Total ram usage:        3 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; Hardware stack levels required when called: 1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_runDAC
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text23
  6876   00504C                     __ptext23:
  6877                           	callstack 0
  6878   00504C                     _SPI_write:
  6879                           	callstack 28
  6880                           
  6881                           ;incstack = 0
  6882                           ;SPI_write@data stored from wreg
  6883   00504C  6E08               	movwf	SPI_write@data^0,c
  6884   00504E                     
  6885                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6886   00504E  3808               	swapf	SPI_write@data^0,w,c
  6887   005050  0B0F               	andlw	15
  6888   005052  0930               	iorlw	48
  6889   005054  6E06               	movwf	SPI_write@MSB^0,c
  6890                           
  6891                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6892   005056  3808               	swapf	SPI_write@data^0,w,c
  6893   005058  0BF0               	andlw	240
  6894   00505A  6E07               	movwf	SPI_write@LSB^0,c
  6895   00505C                     
  6896                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6897   00505C  968A               	bcf	138,3,c	;volatile
  6898   00505E                     
  6899                           ;DAC.c: 101:     SSP1BUF = MSB;
  6900   00505E  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6901   005062                     l245:
  6902   005062  A69E               	btfss	3998,3,c	;volatile
  6903   005064  EF36  F028         	goto	u9441
  6904   005068  EF38  F028         	goto	u9440
  6905   00506C                     u9441:
  6906   00506C  EF31  F028         	goto	l245
  6907   005070                     u9440:
  6908   005070                     
  6909                           ;DAC.c: 103:     SSP1IF = 0;
  6910   005070  969E               	bcf	3998,3,c	;volatile
  6911                           
  6912                           ;DAC.c: 105:     SSP1BUF = LSB;
  6913   005072  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6914   005076                     l248:
  6915   005076  A69E               	btfss	3998,3,c	;volatile
  6916   005078  EF40  F028         	goto	u9451
  6917   00507C  EF42  F028         	goto	u9450
  6918   005080                     u9451:
  6919   005080  EF3B  F028         	goto	l248
  6920   005084                     u9450:
  6921   005084                     
  6922                           ;DAC.c: 107:     SSP1IF = 0;
  6923   005084  969E               	bcf	3998,3,c	;volatile
  6924                           
  6925                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6926   005086  868A               	bsf	138,3,c	;volatile
  6927   005088  0012               	return		;funcret
  6928   00508A                     __end_of_SPI_write:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _runADC *****************
  6932 ;; Defined at:
  6933 ;;		line 13 in file "ADC.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;		None
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  text           17    0[BANK1 ] unsigned char [17]
  6938 ;;  voltage2        4   21[BANK1 ] float 
  6939 ;;  voltage1        4   17[BANK1 ] float 
  6940 ;;  pot2            2   27[BANK1 ] unsigned short 
  6941 ;;  pot1            2   25[BANK1 ] unsigned short 
  6942 ;;  keepState       1   29[BANK1 ] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:       32 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; Hardware stack levels required when called: 9
  6959 ;; This function calls:
  6960 ;;		_LCD_ShowString
  6961 ;;		___fldiv
  6962 ;;		___flmul
  6963 ;;		___xxtofl
  6964 ;;		_sprintf
  6965 ;; This function is called by:
  6966 ;;		_main
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text24
  6971   003462                     __ptext24:
  6972                           	callstack 0
  6973   003462                     _runADC:
  6974                           	callstack 21
  6975   003462                     
  6976                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  6977   003462  010F               	movlb	15	; () banked
  6978   003464  8B38               	bsf	56,5,b	;volatile
  6979                           
  6980                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  6981   003466  813C               	bsf	60,0,b	;volatile
  6982                           
  6983                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  6984   003468  8EC0               	bsf	192,7,c	;volatile
  6985   00346A                     
  6986                           ; BSR set to: 15
  6987                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  6988   00346A  50C0               	movf	192,w,c	;volatile
  6989   00346C  0BF8               	andlw	-8
  6990   00346E  0906               	iorlw	6
  6991   003470  6EC0               	movwf	192,c	;volatile
  6992                           
  6993                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  6994   003472  50C0               	movf	192,w,c	;volatile
  6995   003474  0BC7               	andlw	-57
  6996   003476  0930               	iorlw	48
  6997   003478  6EC0               	movwf	192,c	;volatile
  6998   00347A                     
  6999                           ; BSR set to: 15
  7000                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  7001   00347A  80C2               	bsf	194,0,c	;volatile
  7002   00347C                     
  7003                           ; BSR set to: 15
  7004                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  7005   00347C  EE21  F09B         	lfsr	2,runADC@text
  7006   003480  0E10               	movlw	16
  7007   003482                     u10011:
  7008   003482  6ADE               	clrf	postinc2,c
  7009   003484  06E8               	decf	wreg,f,c
  7010   003486  E2FD               	bc	u10011
  7011   003488                     
  7012                           ; BSR set to: 15
  7013                           ;ADC.c: 28: uint8_t keepState = 1;
  7014   003488  0E01               	movlw	1
  7015   00348A  0101               	movlb	1	; () banked
  7016   00348C  6FB8               	movwf	runADC@keepState& (0+255),b
  7017                           
  7018                           ;ADC.c: 30: while(keepState){
  7019   00348E  EF2F  F01B         	goto	l462
  7020   003492                     l8146:
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  7024   003492  50C2               	movf	194,w,c	;volatile
  7025   003494  0B83               	andlw	-125
  7026   003496  0914               	iorlw	20
  7027   003498  6EC2               	movwf	194,c	;volatile
  7028   00349A                     
  7029                           ; BSR set to: 1
  7030                           ;ADC.c: 33:     GODONE = 1;
  7031   00349A  82C2               	bsf	4034,1,c	;volatile
  7032   00349C                     l464:
  7033   00349C  B2C2               	btfsc	4034,1,c	;volatile
  7034   00349E  EF53  F01A         	goto	u10021
  7035   0034A2  EF55  F01A         	goto	u10020
  7036   0034A6                     u10021:
  7037   0034A6  EF4E  F01A         	goto	l464
  7038   0034AA                     u10020:
  7039   0034AA                     
  7040                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  7041   0034AA  50C3               	movf	195,w,c	;volatile
  7042   0034AC  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7043   0034B0  0100               	movlb	0	; () banked
  7044   0034B2  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7045   0034B4  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7046   0034B8  6BE7               	clrf	??_runADC& (0+255),b
  7047   0034BA  11E7               	iorwf	??_runADC& (0+255),w,b
  7048   0034BC  0101               	movlb	1	; () banked
  7049   0034BE  6FB4               	movwf	runADC@pot1& (0+255),b
  7050   0034C0  0100               	movlb	0	; () banked
  7051   0034C2  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7052   0034C4  0101               	movlb	1	; () banked
  7053   0034C6  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  7054   0034C8                     
  7055                           ; BSR set to: 1
  7056                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  7057   0034C8  0E00               	movlw	0
  7058   0034CA  6E31               	movwf	___fldiv@a^0,c
  7059   0034CC  0EC0               	movlw	192
  7060   0034CE  6E32               	movwf	(___fldiv@a+1)^0,c
  7061   0034D0  0E7F               	movlw	127
  7062   0034D2  6E33               	movwf	(___fldiv@a+2)^0,c
  7063   0034D4  0E44               	movlw	68
  7064   0034D6  6E34               	movwf	(___fldiv@a+3)^0,c
  7065   0034D8  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  7066   0034DC  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  7067   0034E0  6A08               	clrf	(___xxtofl@val+2)^0,c
  7068   0034E2  6A09               	clrf	(___xxtofl@val+3)^0,c
  7069   0034E4  0E00               	movlw	0
  7070   0034E6  EC39  F01C         	call	___xxtofl
  7071   0034EA  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7072   0034EE  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7073   0034F2  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7074   0034F6  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7075   0034FA  EC2A  F013         	call	___fldiv	;wreg free
  7076   0034FE  C02D  F014         	movff	?___fldiv,___flmul@b
  7077   003502  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7078   003506  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7079   00350A  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7080   00350E  0E33               	movlw	51
  7081   003510  6E18               	movwf	___flmul@a^0,c
  7082   003512  0E33               	movlw	51
  7083   003514  6E19               	movwf	(___flmul@a+1)^0,c
  7084   003516  0E53               	movlw	83
  7085   003518  6E1A               	movwf	(___flmul@a+2)^0,c
  7086   00351A  0E40               	movlw	64
  7087   00351C  6E1B               	movwf	(___flmul@a+3)^0,c
  7088   00351E  EC3A  F00D         	call	___flmul	;wreg free
  7089   003522  C014  F1AC         	movff	?___flmul,runADC@voltage1
  7090   003526  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  7091   00352A  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  7092   00352E  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  7093   003532                     
  7094                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  7095   003532  50C2               	movf	194,w,c	;volatile
  7096   003534  0B83               	andlw	-125
  7097   003536  0910               	iorlw	16
  7098   003538  6EC2               	movwf	194,c	;volatile
  7099   00353A                     
  7100                           ;ADC.c: 40:     GODONE = 1;
  7101   00353A  82C2               	bsf	4034,1,c	;volatile
  7102   00353C                     l467:
  7103   00353C  B2C2               	btfsc	4034,1,c	;volatile
  7104   00353E  EFA3  F01A         	goto	u10031
  7105   003542  EFA5  F01A         	goto	u10030
  7106   003546                     u10031:
  7107   003546  EF9E  F01A         	goto	l467
  7108   00354A                     u10030:
  7109   00354A                     
  7110                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  7111   00354A  50C3               	movf	195,w,c	;volatile
  7112   00354C  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7113   003550  0100               	movlb	0	; () banked
  7114   003552  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7115   003554  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7116   003558  6BE7               	clrf	??_runADC& (0+255),b
  7117   00355A  11E7               	iorwf	??_runADC& (0+255),w,b
  7118   00355C  0101               	movlb	1	; () banked
  7119   00355E  6FB6               	movwf	runADC@pot2& (0+255),b
  7120   003560  0100               	movlb	0	; () banked
  7121   003562  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7122   003564  0101               	movlb	1	; () banked
  7123   003566  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7124   003568                     
  7125                           ; BSR set to: 1
  7126                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7127   003568  0E00               	movlw	0
  7128   00356A  6E31               	movwf	___fldiv@a^0,c
  7129   00356C  0EC0               	movlw	192
  7130   00356E  6E32               	movwf	(___fldiv@a+1)^0,c
  7131   003570  0E7F               	movlw	127
  7132   003572  6E33               	movwf	(___fldiv@a+2)^0,c
  7133   003574  0E44               	movlw	68
  7134   003576  6E34               	movwf	(___fldiv@a+3)^0,c
  7135   003578  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7136   00357C  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7137   003580  6A08               	clrf	(___xxtofl@val+2)^0,c
  7138   003582  6A09               	clrf	(___xxtofl@val+3)^0,c
  7139   003584  0E00               	movlw	0
  7140   003586  EC39  F01C         	call	___xxtofl
  7141   00358A  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7142   00358E  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7143   003592  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7144   003596  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7145   00359A  EC2A  F013         	call	___fldiv	;wreg free
  7146   00359E  C02D  F014         	movff	?___fldiv,___flmul@b
  7147   0035A2  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7148   0035A6  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7149   0035AA  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7150   0035AE  0E33               	movlw	51
  7151   0035B0  6E18               	movwf	___flmul@a^0,c
  7152   0035B2  0E33               	movlw	51
  7153   0035B4  6E19               	movwf	(___flmul@a+1)^0,c
  7154   0035B6  0E53               	movlw	83
  7155   0035B8  6E1A               	movwf	(___flmul@a+2)^0,c
  7156   0035BA  0E40               	movlw	64
  7157   0035BC  6E1B               	movwf	(___flmul@a+3)^0,c
  7158   0035BE  EC3A  F00D         	call	___flmul	;wreg free
  7159   0035C2  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7160   0035C6  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7161   0035CA  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7162   0035CE  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7163   0035D2                     
  7164                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7165   0035D2  0E9B               	movlw	low runADC@text
  7166   0035D4  0100               	movlb	0	; () banked
  7167   0035D6  6FCE               	movwf	sprintf@s& (0+255),b
  7168   0035D8  0E01               	movlw	high runADC@text
  7169   0035DA  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7170   0035DC  0E8A               	movlw	low STR_29
  7171   0035DE  6FD0               	movwf	sprintf@fmt& (0+255),b
  7172   0035E0  0EFE               	movlw	high STR_29
  7173   0035E2  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7174   0035E4  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7175   0035E8  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7176   0035EC  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7177   0035F0  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7178   0035F4  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7179   0035F8  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7180   0035FC  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7181   003600  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7182   003604  ECE1  F027         	call	_sprintf	;wreg free
  7183   003608                     
  7184                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7185   003608  0E9B               	movlw	low runADC@text
  7186   00360A  6E07               	movwf	LCD_ShowString@textData^0,c
  7187   00360C  0E01               	movlw	high runADC@text
  7188   00360E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7189   003610  0E02               	movlw	2
  7190   003612  EC69  F024         	call	_LCD_ShowString
  7191   003616                     
  7192                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7193   003616  A480               	btfss	128,2,c	;volatile
  7194   003618  EF10  F01B         	goto	u10041
  7195   00361C  EF12  F01B         	goto	u10040
  7196   003620                     u10041:
  7197   003620  EF2F  F01B         	goto	l462
  7198   003624                     u10040:
  7199   003624                     
  7200                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7201   003624  0E03               	movlw	3
  7202   003626  0100               	movlb	0	; () banked
  7203   003628  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7204   00362A  0E08               	movlw	8
  7205   00362C  6FE7               	movwf	??_runADC& (0+255),b
  7206   00362E  0E77               	movlw	119
  7207   003630                     u10507:
  7208   003630  2EE8               	decfsz	wreg,f,c
  7209   003632  D7FE               	bra	u10507
  7210   003634  2FE7               	decfsz	??_runADC& (0+255),f,b
  7211   003636  D7FC               	bra	u10507
  7212   003638  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7213   00363A  D7FA               	bra	u10507
  7214   00363C                     
  7215                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7216   00363C  A480               	btfss	128,2,c	;volatile
  7217   00363E  EF23  F01B         	goto	u10051
  7218   003642  EF25  F01B         	goto	u10050
  7219   003646                     u10051:
  7220   003646  EF2F  F01B         	goto	l462
  7221   00364A                     u10050:
  7222   00364A                     l472:
  7223   00364A  B480               	btfsc	128,2,c	;volatile
  7224   00364C  EF2A  F01B         	goto	u10061
  7225   003650  EF2C  F01B         	goto	u10060
  7226   003654                     u10061:
  7227   003654  EF25  F01B         	goto	l472
  7228   003658                     u10060:
  7229   003658                     
  7230                           ;ADC.c: 52:             keepState = 0;
  7231   003658  0E00               	movlw	0
  7232   00365A  0101               	movlb	1	; () banked
  7233   00365C  6FB8               	movwf	runADC@keepState& (0+255),b
  7234   00365E                     l462:
  7235                           
  7236                           ;ADC.c: 30: while(keepState){
  7237   00365E  0101               	movlb	1	; () banked
  7238   003660  51B8               	movf	runADC@keepState& (0+255),w,b
  7239   003662  A4D8               	btfss	status,2,c
  7240   003664  EF36  F01B         	goto	u10071
  7241   003668  EF38  F01B         	goto	u10070
  7242   00366C                     u10071:
  7243   00366C  EF49  F01A         	goto	l8146
  7244   003670                     u10070:
  7245   003670                     
  7246                           ; BSR set to: 1
  7247                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7248   003670  90C2               	bcf	194,0,c	;volatile
  7249   003672                     
  7250                           ; BSR set to: 1
  7251   003672  0012               	return		;funcret
  7252   003674                     __end_of_runADC:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function ___xxtofl *****************
  7256 ;; Defined at:
  7257 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  sign            1    wreg     unsigned char 
  7260 ;;  val             4    5[COMRAM] long 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  sign            1   13[COMRAM] unsigned char 
  7263 ;;  arg             4   15[COMRAM] unsigned long 
  7264 ;;  exp             1   14[COMRAM] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  4    5[COMRAM] unsigned char 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7278 ;;Total ram usage:       14 bytes
  7279 ;; Hardware stack levels used: 1
  7280 ;; Hardware stack levels required when called: 1
  7281 ;; This function calls:
  7282 ;;		Nothing
  7283 ;; This function is called by:
  7284 ;;		_runDAC
  7285 ;;		_runADC
  7286 ;;		___rem_pio2f
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text25
  7291   003872                     __ptext25:
  7292                           	callstack 0
  7293   003872                     ___xxtofl:
  7294                           	callstack 26
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;incstack = 0
  7298                           ;___xxtofl@sign stored from wreg
  7299   003872  6E0E               	movwf	___xxtofl@sign^0,c
  7300   003874  500E               	movf	___xxtofl@sign^0,w,c
  7301   003876  B4D8               	btfsc	status,2,c
  7302   003878  EF40  F01C         	goto	u9031
  7303   00387C  EF42  F01C         	goto	u9030
  7304   003880                     u9031:
  7305   003880  EF64  F01C         	goto	l1365
  7306   003884                     u9030:
  7307   003884  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7308   003886  EF49  F01C         	goto	u9040
  7309   00388A  EF47  F01C         	goto	u9041
  7310   00388E                     u9041:
  7311   00388E  EF64  F01C         	goto	l1365
  7312   003892                     u9040:
  7313   003892  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7314   003896  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7315   00389A  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7316   00389E  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7317   0038A2  1E0A               	comf	??___xxtofl^0,f,c
  7318   0038A4  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7319   0038A6  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7320   0038A8  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7321   0038AA  2A0A               	incf	??___xxtofl^0,f,c
  7322   0038AC  0E00               	movlw	0
  7323   0038AE  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7324   0038B0  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7325   0038B2  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7326   0038B4  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7327   0038B8  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7328   0038BC  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7329   0038C0  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7330   0038C4  EF6C  F01C         	goto	l7450
  7331   0038C8                     l1365:
  7332   0038C8  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7333   0038CC  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7334   0038D0  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7335   0038D4  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7336   0038D8                     l7450:
  7337   0038D8  5006               	movf	___xxtofl@val^0,w,c
  7338   0038DA  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7339   0038DC  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7340   0038DE  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7341   0038E0  A4D8               	btfss	status,2,c
  7342   0038E2  EF75  F01C         	goto	u9051
  7343   0038E6  EF77  F01C         	goto	u9050
  7344   0038EA                     u9051:
  7345   0038EA  EF81  F01C         	goto	l7456
  7346   0038EE                     u9050:
  7347   0038EE  0E00               	movlw	0
  7348   0038F0  6E06               	movwf	?___xxtofl^0,c
  7349   0038F2  0E00               	movlw	0
  7350   0038F4  6E07               	movwf	(?___xxtofl+1)^0,c
  7351   0038F6  0E00               	movlw	0
  7352   0038F8  6E08               	movwf	(?___xxtofl+2)^0,c
  7353   0038FA  0E00               	movlw	0
  7354   0038FC  6E09               	movwf	(?___xxtofl+3)^0,c
  7355   0038FE  EF12  F01D         	goto	l1368
  7356   003902                     l7456:
  7357   003902  0E96               	movlw	150
  7358   003904  6E0F               	movwf	___xxtofl@exp^0,c
  7359   003906  EF8B  F01C         	goto	l7460
  7360   00390A                     l7458:
  7361   00390A  2A0F               	incf	___xxtofl@exp^0,f,c
  7362   00390C  90D8               	bcf	status,0,c
  7363   00390E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7364   003910  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7365   003912  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7366   003914  3210               	rrcf	___xxtofl@arg^0,f,c
  7367   003916                     l7460:
  7368   003916  0E00               	movlw	0
  7369   003918  1410               	andwf	___xxtofl@arg^0,w,c
  7370   00391A  6E0A               	movwf	??___xxtofl^0,c
  7371   00391C  0E00               	movlw	0
  7372   00391E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7373   003920  6E0B               	movwf	(??___xxtofl+1)^0,c
  7374   003922  0E00               	movlw	0
  7375   003924  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7376   003926  6E0C               	movwf	(??___xxtofl+2)^0,c
  7377   003928  0EFE               	movlw	254
  7378   00392A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7379   00392C  6E0D               	movwf	(??___xxtofl+3)^0,c
  7380   00392E  500A               	movf	??___xxtofl^0,w,c
  7381   003930  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7382   003932  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7383   003934  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7384   003936  A4D8               	btfss	status,2,c
  7385   003938  EFA0  F01C         	goto	u9061
  7386   00393C  EFA2  F01C         	goto	u9060
  7387   003940                     u9061:
  7388   003940  EF85  F01C         	goto	l7458
  7389   003944                     u9060:
  7390   003944  EFB0  F01C         	goto	l1372
  7391   003948                     l7462:
  7392   003948  2A0F               	incf	___xxtofl@exp^0,f,c
  7393   00394A  0E01               	movlw	1
  7394   00394C  2610               	addwf	___xxtofl@arg^0,f,c
  7395   00394E  0E00               	movlw	0
  7396   003950  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7397   003952  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7398   003954  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7399   003956  90D8               	bcf	status,0,c
  7400   003958  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7401   00395A  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7402   00395C  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7403   00395E  3210               	rrcf	___xxtofl@arg^0,f,c
  7404   003960                     l1372:
  7405   003960  0E00               	movlw	0
  7406   003962  1410               	andwf	___xxtofl@arg^0,w,c
  7407   003964  6E0A               	movwf	??___xxtofl^0,c
  7408   003966  0E00               	movlw	0
  7409   003968  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7410   00396A  6E0B               	movwf	(??___xxtofl+1)^0,c
  7411   00396C  0E00               	movlw	0
  7412   00396E  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7413   003970  6E0C               	movwf	(??___xxtofl+2)^0,c
  7414   003972  0EFF               	movlw	255
  7415   003974  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7416   003976  6E0D               	movwf	(??___xxtofl+3)^0,c
  7417   003978  500A               	movf	??___xxtofl^0,w,c
  7418   00397A  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7419   00397C  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7420   00397E  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7421   003980  A4D8               	btfss	status,2,c
  7422   003982  EFC5  F01C         	goto	u9071
  7423   003986  EFC7  F01C         	goto	u9070
  7424   00398A                     u9071:
  7425   00398A  EFA4  F01C         	goto	l7462
  7426   00398E                     u9070:
  7427   00398E  EFCF  F01C         	goto	l7470
  7428   003992                     l7468:
  7429   003992  060F               	decf	___xxtofl@exp^0,f,c
  7430   003994  90D8               	bcf	status,0,c
  7431   003996  3610               	rlcf	___xxtofl@arg^0,f,c
  7432   003998  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7433   00399A  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7434   00399C  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7435   00399E                     l7470:
  7436   00399E  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7437   0039A0  EFD4  F01C         	goto	u9081
  7438   0039A4  EFD6  F01C         	goto	u9080
  7439   0039A8                     u9081:
  7440   0039A8  EFDE  F01C         	goto	l1379
  7441   0039AC                     u9080:
  7442   0039AC  0E02               	movlw	2
  7443   0039AE  600F               	cpfslt	___xxtofl@exp^0,c
  7444   0039B0  EFDC  F01C         	goto	u9091
  7445   0039B4  EFDE  F01C         	goto	u9090
  7446   0039B8                     u9091:
  7447   0039B8  EFC9  F01C         	goto	l7468
  7448   0039BC                     u9090:
  7449   0039BC                     l1379:
  7450   0039BC  B00F               	btfsc	___xxtofl@exp^0,0,c
  7451   0039BE  EFE3  F01C         	goto	u9101
  7452   0039C2  EFE5  F01C         	goto	u9100
  7453   0039C6                     u9101:
  7454   0039C6  EFE6  F01C         	goto	l7476
  7455   0039CA                     u9100:
  7456   0039CA  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7457   0039CC                     l7476:
  7458   0039CC  90D8               	bcf	status,0,c
  7459   0039CE  320F               	rrcf	___xxtofl@exp^0,f,c
  7460   0039D0  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7461   0039D4  6A0B               	clrf	(??___xxtofl+1)^0,c
  7462   0039D6  6A0C               	clrf	(??___xxtofl+2)^0,c
  7463   0039D8  6A0D               	clrf	(??___xxtofl+3)^0,c
  7464   0039DA  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7465   0039DE  6A0C               	clrf	(??___xxtofl+2)^0,c
  7466   0039E0  6A0B               	clrf	(??___xxtofl+1)^0,c
  7467   0039E2  6A0A               	clrf	??___xxtofl^0,c
  7468   0039E4  500A               	movf	??___xxtofl^0,w,c
  7469   0039E6  1210               	iorwf	___xxtofl@arg^0,f,c
  7470   0039E8  500B               	movf	(??___xxtofl+1)^0,w,c
  7471   0039EA  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7472   0039EC  500C               	movf	(??___xxtofl+2)^0,w,c
  7473   0039EE  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7474   0039F0  500D               	movf	(??___xxtofl+3)^0,w,c
  7475   0039F2  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7476   0039F4  500E               	movf	___xxtofl@sign^0,w,c
  7477   0039F6  B4D8               	btfsc	status,2,c
  7478   0039F8  EF00  F01D         	goto	u9111
  7479   0039FC  EF02  F01D         	goto	u9110
  7480   003A00                     u9111:
  7481   003A00  EF0A  F01D         	goto	l7486
  7482   003A04                     u9110:
  7483   003A04  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7484   003A06  EF09  F01D         	goto	u9120
  7485   003A0A  EF07  F01D         	goto	u9121
  7486   003A0E                     u9121:
  7487   003A0E  EF0A  F01D         	goto	l7486
  7488   003A12                     u9120:
  7489   003A12  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7490   003A14                     l7486:
  7491   003A14  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7492   003A18  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7493   003A1C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7494   003A20  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7495   003A24                     l1368:
  7496   003A24  0012               	return		;funcret
  7497   003A26                     __end_of___xxtofl:
  7498                           	callstack 0
  7499                           
  7500 ;; *************** function _moveDisplay *****************
  7501 ;; Defined at:
  7502 ;;		line 11 in file "menu.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  menuI           1    wreg     unsigned char 
  7505 ;;  where           1  135[BANK0 ] unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  menuI           1   50[BANK1 ] unsigned char 
  7508 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7509 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7510 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7511 ;;		 -> STR_26(1), STR_25(6), STR_24(5), STR_23(4), 
  7512 ;;		 -> STR_22(4), STR_21(4), STR_20(5), STR_19(5), 
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      unsigned char 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7522 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;Total ram usage:       54 bytes
  7527 ;; Hardware stack levels used: 1
  7528 ;; Hardware stack levels required when called: 9
  7529 ;; This function calls:
  7530 ;;		_LCD_Clear
  7531 ;;		_LCD_ShowString
  7532 ;;		_sprintf
  7533 ;; This function is called by:
  7534 ;;		_main
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text26
  7539   00415E                     __ptext26:
  7540                           	callstack 0
  7541   00415E                     _moveDisplay:
  7542                           	callstack 21
  7543                           
  7544                           ;incstack = 0
  7545                           ;moveDisplay@menuI stored from wreg
  7546   00415E  0101               	movlb	1	; () banked
  7547   004160  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7548   004162                     
  7549                           ;menu.c: 12:     LCD_Clear();
  7550   004162  EC99  F028         	call	_LCD_Clear	;wreg free
  7551   004166                     
  7552                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7553   004166  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7554   00416A  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7555   00416E  0E0F               	movlw	15
  7556   004170                     u9721:
  7557   004170  CFDB FFE3          	movff	plusw2,plusw1
  7558   004174  06E8               	decf	wreg,f,c
  7559   004176  E2FC               	bc	u9721
  7560                           
  7561                           ;menu.c: 14:     switch (where){
  7562   004178  EFD6  F020         	goto	l7972
  7563   00417C                     l7962:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;menu.c: 18:             if(menuI<6){
  7567   00417C  0E06               	movlw	6
  7568   00417E  0101               	movlb	1	; () banked
  7569   004180  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7570   004182  EFC5  F020         	goto	u9731
  7571   004186  EFC7  F020         	goto	u9730
  7572   00418A                     u9731:
  7573   00418A  EFE6  F020         	goto	l7974
  7574   00418E                     u9730:
  7575   00418E                     
  7576                           ; BSR set to: 1
  7577                           ;menu.c: 19:             menuI++;
  7578   00418E  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7579   004190  EFE6  F020         	goto	l7974
  7580   004194                     l7966:
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;menu.c: 23:             if(menuI>0){
  7584   004194  0101               	movlb	1	; () banked
  7585   004196  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7586   004198  B4D8               	btfsc	status,2,c
  7587   00419A  EFD1  F020         	goto	u9741
  7588   00419E  EFD3  F020         	goto	u9740
  7589   0041A2                     u9741:
  7590   0041A2  EFE6  F020         	goto	l7974
  7591   0041A6                     u9740:
  7592   0041A6                     
  7593                           ; BSR set to: 1
  7594                           ;menu.c: 24:             menuI--;
  7595   0041A6  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7596   0041A8  EFE6  F020         	goto	l7974
  7597   0041AC                     l7972:
  7598   0041AC  0100               	movlb	0	; () banked
  7599   0041AE  51E7               	movf	moveDisplay@where& (0+255),w,b
  7600                           
  7601                           ; Switch size 1, requested type "simple"
  7602                           ; Number of cases is 3, Range of values is 0 to 2
  7603                           ; switch strategies available:
  7604                           ; Name         Instructions Cycles
  7605                           ; simple_byte           10     6 (average)
  7606                           ;	Chosen strategy is simple_byte
  7607   0041B0  0A00               	xorlw	0	; case 0
  7608   0041B2  B4D8               	btfsc	status,2,c
  7609   0041B4  EFE6  F020         	goto	l7974
  7610   0041B8  0A01               	xorlw	1	; case 1
  7611   0041BA  B4D8               	btfsc	status,2,c
  7612   0041BC  EFBE  F020         	goto	l7962
  7613   0041C0  0A03               	xorlw	3	; case 2
  7614   0041C2  B4D8               	btfsc	status,2,c
  7615   0041C4  EFCA  F020         	goto	l7966
  7616   0041C8  EFE6  F020         	goto	l7974
  7617   0041CC                     l7974:
  7618                           
  7619                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7620   0041CC  0E9B               	movlw	low moveDisplay@menuItem1
  7621   0041CE  0100               	movlb	0	; () banked
  7622   0041D0  6FCE               	movwf	sprintf@s& (0+255),b
  7623   0041D2  0E01               	movlw	high moveDisplay@menuItem1
  7624   0041D4  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7625   0041D6  0ECC               	movlw	low STR_27
  7626   0041D8  6FD0               	movwf	sprintf@fmt& (0+255),b
  7627   0041DA  0EFF               	movlw	high STR_27
  7628   0041DC  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7629   0041DE  0E00               	movlw	0
  7630   0041E0  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7631   0041E2  0E0F               	movlw	15
  7632   0041E4  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7633   0041E6  0101               	movlb	1	; () banked
  7634   0041E8  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7635   0041EA  0D02               	mullw	2
  7636   0041EC  0EBD               	movlw	low moveDisplay@menuItems
  7637   0041EE  24F3               	addwf	243,w,c
  7638   0041F0  6ED9               	movwf	fsr2l,c
  7639   0041F2  0E01               	movlw	high moveDisplay@menuItems
  7640   0041F4  20F4               	addwfc	prodh,w,c
  7641   0041F6  6EDA               	movwf	fsr2h,c
  7642   0041F8  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7643   0041FC  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7644   004200  ECE1  F027         	call	_sprintf	;wreg free
  7645                           
  7646                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7647   004204  0EAC               	movlw	low moveDisplay@menuItem2
  7648   004206  0100               	movlb	0	; () banked
  7649   004208  6FCE               	movwf	sprintf@s& (0+255),b
  7650   00420A  0E01               	movlw	high moveDisplay@menuItem2
  7651   00420C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7652   00420E  0ECD               	movlw	low (STR_27+1)
  7653   004210  6FD0               	movwf	sprintf@fmt& (0+255),b
  7654   004212  0EFF               	movlw	high (STR_27+1)
  7655   004214  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7656   004216  0E00               	movlw	0
  7657   004218  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7658   00421A  0E10               	movlw	16
  7659   00421C  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7660   00421E  0101               	movlb	1	; () banked
  7661   004220  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7662   004222  0100               	movlb	0	; () banked
  7663   004224  6FE8               	movwf	??_moveDisplay& (0+255),b
  7664   004226  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7665   004228  90D8               	bcf	status,0,c
  7666   00422A  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7667   00422C  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7668   00422E  0E02               	movlw	2
  7669   004230  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7670   004232  0E00               	movlw	0
  7671   004234  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7672   004236  0EBD               	movlw	low moveDisplay@menuItems
  7673   004238  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7674   00423A  6ED9               	movwf	fsr2l,c
  7675   00423C  0E01               	movlw	high moveDisplay@menuItems
  7676   00423E  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7677   004240  6EDA               	movwf	fsr2h,c
  7678   004242  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7679   004246  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7680   00424A  ECE1  F027         	call	_sprintf	;wreg free
  7681   00424E                     
  7682                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7683   00424E  0E9B               	movlw	low moveDisplay@menuItem1
  7684   004250  6E07               	movwf	LCD_ShowString@textData^0,c
  7685   004252  0E01               	movlw	high moveDisplay@menuItem1
  7686   004254  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7687   004256  0E01               	movlw	1
  7688   004258  EC69  F024         	call	_LCD_ShowString
  7689   00425C                     
  7690                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7691   00425C  0EAC               	movlw	low moveDisplay@menuItem2
  7692   00425E  6E07               	movwf	LCD_ShowString@textData^0,c
  7693   004260  0E01               	movlw	high moveDisplay@menuItem2
  7694   004262  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7695   004264  0E02               	movlw	2
  7696   004266  EC69  F024         	call	_LCD_ShowString
  7697   00426A                     
  7698                           ;menu.c: 35:     return menuI;
  7699   00426A  0101               	movlb	1	; () banked
  7700   00426C  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7701   00426E                     
  7702                           ; BSR set to: 1
  7703   00426E  0012               	return		;funcret
  7704   004270                     __end_of_moveDisplay:
  7705                           	callstack 0
  7706                           
  7707 ;; *************** function _sprintf *****************
  7708 ;; Defined at:
  7709 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7712 ;;		 -> runGAME@approxText(25), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7713 ;;		 -> moveDisplay@menuItem1(17), 
  7714 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7715 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7716 ;;		 -> STR_29(19), STR_28(5), STR_27(6), 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7719 ;;  ret             2    0        int 
  7720 ;;  ap              1  122[BANK0 ] PTR void [1]
  7721 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  2  110[BANK0 ] int 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7731 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7734 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7735 ;;Total ram usage:       25 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 8
  7738 ;; This function calls:
  7739 ;;		_vfprintf
  7740 ;; This function is called by:
  7741 ;;		_moveDisplay
  7742 ;;		_runADC
  7743 ;;		_runGAME
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text27
  7748   004FC2                     __ptext27:
  7749                           	callstack 0
  7750   004FC2                     _sprintf:
  7751                           	callstack 21
  7752   004FC2  0ED2               	movlw	low (?_sprintf+4)
  7753   004FC4  0100               	movlb	0	; () banked
  7754   004FC6  6FDA               	movwf	sprintf@ap& (0+255),b
  7755   004FC8  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7756   004FCC  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7757   004FD0                     
  7758                           ; BSR set to: 0
  7759   004FD0  0E00               	movlw	0
  7760   004FD2  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7761   004FD4  0E00               	movlw	0
  7762   004FD6  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7763   004FD8                     
  7764                           ; BSR set to: 0
  7765   004FD8  0E00               	movlw	0
  7766   004FDA  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7767   004FDC  0E00               	movlw	0
  7768   004FDE  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7769   004FE0                     
  7770                           ; BSR set to: 0
  7771   004FE0  0EDB               	movlw	low sprintf@f
  7772   004FE2  6FC7               	movwf	vfprintf@fp& (0+255),b
  7773   004FE4  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7774   004FE6  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7775   004FEA  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7776   004FEE  0EDA               	movlw	low sprintf@ap
  7777   004FF0  6FCB               	movwf	vfprintf@ap& (0+255),b
  7778   004FF2  EC98  F027         	call	_vfprintf	;wreg free
  7779   004FF6  0100               	movlb	0	; () banked
  7780   004FF8  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7781   004FFA  25CE               	addwf	sprintf@s& (0+255),w,b
  7782   004FFC  6ED9               	movwf	fsr2l,c
  7783   004FFE  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7784   005000  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7785   005002  6EDA               	movwf	fsr2h,c
  7786   005004  6ADF               	clrf	indf2,c
  7787   005006                     
  7788                           ; BSR set to: 0
  7789   005006  0012               	return		;funcret
  7790   005008                     __end_of_sprintf:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function _vfprintf *****************
  7794 ;; Defined at:
  7795 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7798 ;;		 -> NULL(0), sprintf@f(12), 
  7799 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7800 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7801 ;;		 -> STR_30(5), STR_29(19), STR_28(5), STR_27(6), 
  7802 ;;		 -> STR_18(5), 
  7803 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7804 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7807 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7808 ;;		 -> STR_30(5), STR_29(19), STR_28(5), STR_27(6), 
  7809 ;;		 -> STR_18(5), 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2  103[BANK0 ] int 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7819 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7822 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7823 ;;Total ram usage:        7 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; Hardware stack levels required when called: 7
  7826 ;; This function calls:
  7827 ;;		_vfpfcnvrt
  7828 ;; This function is called by:
  7829 ;;		_sprintf
  7830 ;;		_printf
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           	psect	text28
  7835   004F30                     __ptext28:
  7836                           	callstack 0
  7837   004F30                     _vfprintf:
  7838                           	callstack 21
  7839   004F30                     
  7840                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7841   004F30  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7842   004F34  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7843                           
  7844                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7845   004F38  EFA9  F027         	goto	l7668
  7846   004F3C                     l7666:
  7847                           
  7848                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  7849   004F3C  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  7850   004F40  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7851   004F44  0ECC               	movlw	low vfprintf@cfmt
  7852   004F46  0100               	movlb	0	; () banked
  7853   004F48  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  7854   004F4A  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  7855   004F4E  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  7856   004F52                     l7668:
  7857                           
  7858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7859   004F52  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  7860   004F56  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7861   004F5A                     	if	0	;tblptru may be non-zero
  7862   004F5A                     	endif
  7863   004F5A                     	if	0	;tblptru may be non-zero
  7864   004F5A                     	endif
  7865   004F5A  0008               	tblrd		*
  7866   004F5C  50F5               	movf	tablat,w,c
  7867   004F5E  0900               	iorlw	0
  7868   004F60  A4D8               	btfss	status,2,c
  7869   004F62  EFB5  F027         	goto	u9301
  7870   004F66  EFB7  F027         	goto	u9300
  7871   004F6A                     u9301:
  7872   004F6A  EF9E  F027         	goto	l7666
  7873   004F6E                     u9300:
  7874   004F6E                     
  7875                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7876   004F6E  0E00               	movlw	0
  7877   004F70  0100               	movlb	0	; () banked
  7878   004F72  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  7879   004F74  0E00               	movlw	0
  7880   004F76  6FC7               	movwf	?_vfprintf& (0+255),b
  7881   004F78                     
  7882                           ; BSR set to: 0
  7883   004F78  0012               	return		;funcret
  7884   004F7A                     __end_of_vfprintf:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function _vfpfcnvrt *****************
  7888 ;; Defined at:
  7889 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  7892 ;;		 -> NULL(0), sprintf@f(12), 
  7893 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  7894 ;;		 -> vfprintf@cfmt(2), 
  7895 ;;  ap              1   92[BANK0 ] PTR PTR void 
  7896 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  convarg         4   96[BANK0 ] struct .
  7899 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  7900 ;;		 -> STR_34(18), STR_33(19), STR_32(17), STR_31(19), 
  7901 ;;		 -> STR_30(5), STR_29(19), STR_28(5), STR_27(6), 
  7902 ;;		 -> STR_18(5), 
  7903 ;;  c               1  100[BANK0 ] unsigned char 
  7904 ;;  done            1   95[BANK0 ] _Bool 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7914 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;Total ram usage:       14 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 6
  7921 ;; This function calls:
  7922 ;;		_dtoa
  7923 ;;		_efgtoa
  7924 ;;		_fputc
  7925 ;;		_read_prec_or_width
  7926 ;;		_stoa
  7927 ;;		_utoa
  7928 ;; This function is called by:
  7929 ;;		_vfprintf
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text29
  7934   000B4C                     __ptext29:
  7935                           	callstack 0
  7936   000B4C                     _vfpfcnvrt:
  7937                           	callstack 21
  7938   000B4C                     
  7939                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  7940   000B4C  0100               	movlb	0	; () banked
  7941   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7942   000B50  6ED9               	movwf	fsr2l,c
  7943   000B52  6ADA               	clrf	fsr2h,c
  7944   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  7945   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  7946   000B5C                     	if	0	;tblptru may be non-zero
  7947   000B5C                     	endif
  7948   000B5C                     	if	0	;tblptru may be non-zero
  7949   000B5C                     	endif
  7950   000B5C  0008               	tblrd		*
  7951   000B5E  50F5               	movf	tablat,w,c
  7952   000B60  0A25               	xorlw	37
  7953   000B62  A4D8               	btfss	status,2,c
  7954   000B64  EFB6  F005         	goto	u9131
  7955   000B68  EFB8  F005         	goto	u9130
  7956   000B6C                     u9131:
  7957   000B6C  EF40  F008         	goto	l7638
  7958   000B70                     u9130:
  7959   000B70                     
  7960                           ; BSR set to: 0
  7961                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  7962   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7963   000B72  6ED9               	movwf	fsr2l,c
  7964   000B74  6ADA               	clrf	fsr2h,c
  7965   000B76  2ADE               	incf	postinc2,f,c
  7966   000B78  0E00               	movlw	0
  7967   000B7A  22DD               	addwfc	postdec2,f,c
  7968   000B7C                     
  7969                           ; BSR set to: 0
  7970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  7971   000B7C  0E00               	movlw	0
  7972   000B7E  6E56               	movwf	(_width+1)^0,c
  7973   000B80  0E00               	movlw	0
  7974   000B82  6E55               	movwf	_width^0,c
  7975   000B84  C055  F059         	movff	_width,_flags
  7976   000B88                     
  7977                           ; BSR set to: 0
  7978                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  7979   000B88  6857               	setf	_prec^0,c
  7980   000B8A  6858               	setf	(_prec+1)^0,c
  7981   000B8C                     
  7982                           ; BSR set to: 0
  7983                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  7984   000B8C  0E00               	movlw	0
  7985   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7986                           
  7987                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7988   000B90  EFE6  F005         	goto	l7510
  7989   000B94                     l7500:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  7993   000B94  8059               	bsf	_flags^0,0,c
  7994   000B96                     
  7995                           ; BSR set to: 0
  7996                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  7997   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7998   000B98  6ED9               	movwf	fsr2l,c
  7999   000B9A  6ADA               	clrf	fsr2h,c
  8000   000B9C  2ADE               	incf	postinc2,f,c
  8001   000B9E  0E00               	movlw	0
  8002   000BA0  22DD               	addwfc	postdec2,f,c
  8003                           
  8004                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  8005   000BA2  EFE6  F005         	goto	l7510
  8006   000BA6                     l7504:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  8010   000BA6  0E01               	movlw	1
  8011   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8012                           
  8013                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  8014   000BAA  EFE6  F005         	goto	l7510
  8015   000BAE                     l7508:
  8016                           
  8017                           ; BSR set to: 0
  8018   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8019   000BB0  6ED9               	movwf	fsr2l,c
  8020   000BB2  6ADA               	clrf	fsr2h,c
  8021   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  8022   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  8023   000BBC                     	if	0	;tblptru may be non-zero
  8024   000BBC                     	endif
  8025   000BBC                     	if	0	;tblptru may be non-zero
  8026   000BBC                     	endif
  8027   000BBC  0008               	tblrd		*
  8028   000BBE  50F5               	movf	tablat,w,c
  8029                           
  8030                           ; Switch size 1, requested type "simple"
  8031                           ; Number of cases is 1, Range of values is 45 to 45
  8032                           ; switch strategies available:
  8033                           ; Name         Instructions Cycles
  8034                           ; simple_byte            4     3 (average)
  8035                           ;	Chosen strategy is simple_byte
  8036   000BC0  0A2D               	xorlw	45	; case 45
  8037   000BC2  B4D8               	btfsc	status,2,c
  8038   000BC4  EFCA  F005         	goto	l7500
  8039   000BC8  EFD3  F005         	goto	l7504
  8040   000BCC                     l7510:
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8044   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8045   000BCE  B4D8               	btfsc	status,2,c
  8046   000BD0  EFEC  F005         	goto	u9141
  8047   000BD4  EFEE  F005         	goto	u9140
  8048   000BD8                     u9141:
  8049   000BD8  EFD7  F005         	goto	l7508
  8050   000BDC                     u9140:
  8051   000BDC                     
  8052                           ; BSR set to: 0
  8053                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  8054   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8055   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8056   000BE4  EC1A  F025         	call	_read_prec_or_width	;wreg free
  8057   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  8058   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  8059   000BF0                     
  8060                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  8061   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  8062   000BF2  EFFF  F005         	goto	u9150
  8063   000BF6  EFFD  F005         	goto	u9151
  8064   000BFA                     u9151:
  8065   000BFA  EF04  F006         	goto	l7518
  8066   000BFE                     u9150:
  8067   000BFE                     
  8068                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  8069   000BFE  8059               	bsf	_flags^0,0,c
  8070                           
  8071                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  8072   000C00  6C55               	negf	_width^0,c
  8073   000C02  1E56               	comf	(_width+1)^0,f,c
  8074   000C04  B0D8               	btfsc	status,0,c
  8075   000C06  2A56               	incf	(_width+1)^0,f,c
  8076   000C08                     l7518:
  8077                           
  8078                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  8079   000C08  0100               	movlb	0	; () banked
  8080   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8081   000C0C  6ED9               	movwf	fsr2l,c
  8082   000C0E  6ADA               	clrf	fsr2h,c
  8083   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  8084   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  8085   000C18                     	if	0	;tblptru may be non-zero
  8086   000C18                     	endif
  8087   000C18                     	if	0	;tblptru may be non-zero
  8088   000C18                     	endif
  8089   000C18  0008               	tblrd		*
  8090   000C1A  50F5               	movf	tablat,w,c
  8091   000C1C  0A2E               	xorlw	46
  8092   000C1E  A4D8               	btfss	status,2,c
  8093   000C20  EF14  F006         	goto	u9161
  8094   000C24  EF16  F006         	goto	u9160
  8095   000C28                     u9161:
  8096   000C28  EF26  F006         	goto	l7524
  8097   000C2C                     u9160:
  8098   000C2C                     
  8099                           ; BSR set to: 0
  8100                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  8101   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8102   000C2E  6ED9               	movwf	fsr2l,c
  8103   000C30  6ADA               	clrf	fsr2h,c
  8104   000C32  2ADE               	incf	postinc2,f,c
  8105   000C34  0E00               	movlw	0
  8106   000C36  22DD               	addwfc	postdec2,f,c
  8107   000C38                     
  8108                           ; BSR set to: 0
  8109                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  8110   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8111   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8112   000C40  EC1A  F025         	call	_read_prec_or_width	;wreg free
  8113   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8114   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8115   000C4C                     l7524:
  8116                           
  8117                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8118   000C4C  0100               	movlb	0	; () banked
  8119   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8120   000C50  6ED9               	movwf	fsr2l,c
  8121   000C52  6ADA               	clrf	fsr2h,c
  8122   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8123   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8124   000C5C                     
  8125                           ; BSR set to: 0
  8126                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8127   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8128   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8129   000C64                     	if	0	;tblptru may be non-zero
  8130   000C64                     	endif
  8131   000C64                     	if	0	;tblptru may be non-zero
  8132   000C64                     	endif
  8133   000C64  0008               	tblrd		*
  8134   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8135                           
  8136                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8137   000C6A  EF43  F006         	goto	l7536
  8138   000C6E                     l7528:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8142   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8143   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8144                           
  8145                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8146   000C72  EF56  F006         	goto	l7538
  8147   000C76                     l7530:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8151   000C76  0E69               	movlw	105
  8152   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8153                           
  8154                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8155   000C7A  EF56  F006         	goto	l7538
  8156   000C7E                     l7532:
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8160   000C7E  0E00               	movlw	0
  8161   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8162                           
  8163                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8164   000C82  EF56  F006         	goto	l7538
  8165   000C86                     l7536:
  8166                           
  8167                           ; BSR set to: 0
  8168   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8169                           
  8170                           ; Switch size 1, requested type "simple"
  8171                           ; Number of cases is 4, Range of values is 100 to 117
  8172                           ; switch strategies available:
  8173                           ; Name         Instructions Cycles
  8174                           ; simple_byte           13     7 (average)
  8175                           ;	Chosen strategy is simple_byte
  8176   000C88  0A64               	xorlw	100	; case 100
  8177   000C8A  B4D8               	btfsc	status,2,c
  8178   000C8C  EF3B  F006         	goto	l7530
  8179   000C90  0A0C               	xorlw	12	; case 104
  8180   000C92  B4D8               	btfsc	status,2,c
  8181   000C94  EF37  F006         	goto	l7528
  8182   000C98  0A01               	xorlw	1	; case 105
  8183   000C9A  B4D8               	btfsc	status,2,c
  8184   000C9C  EF3B  F006         	goto	l7530
  8185   000CA0  0A1C               	xorlw	28	; case 117
  8186   000CA2  B4D8               	btfsc	status,2,c
  8187   000CA4  EF3B  F006         	goto	l7530
  8188   000CA8  EF3F  F006         	goto	l7532
  8189   000CAC                     l7538:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8193   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8194   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8195   000CB4                     	if	0	;tblptru may be non-zero
  8196   000CB4                     	endif
  8197   000CB4                     	if	0	;tblptru may be non-zero
  8198   000CB4                     	endif
  8199   000CB4  0008               	tblrd		*
  8200   000CB6  50F5               	movf	tablat,w,c
  8201   000CB8  0A64               	xorlw	100
  8202   000CBA  B4D8               	btfsc	status,2,c
  8203   000CBC  EF62  F006         	goto	u9171
  8204   000CC0  EF64  F006         	goto	u9170
  8205   000CC4                     u9171:
  8206   000CC4  EF90  F006         	goto	l7548
  8207   000CC8                     u9170:
  8208   000CC8                     
  8209                           ; BSR set to: 0
  8210   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8211   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8212   000CD0                     	if	0	;tblptru may be non-zero
  8213   000CD0                     	endif
  8214   000CD0                     	if	0	;tblptru may be non-zero
  8215   000CD0                     	endif
  8216   000CD0  0008               	tblrd		*
  8217   000CD2  50F5               	movf	tablat,w,c
  8218   000CD4  0A69               	xorlw	105
  8219   000CD6  A4D8               	btfss	status,2,c
  8220   000CD8  EF70  F006         	goto	u9181
  8221   000CDC  EF72  F006         	goto	u9180
  8222   000CE0                     u9181:
  8223   000CE0  EFB4  F006         	goto	l7556
  8224   000CE4                     u9180:
  8225   000CE4  EF90  F006         	goto	l7548
  8226   000CE8                     l7542:
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8230   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8231   000CEA  6ED9               	movwf	fsr2l,c
  8232   000CEC  6ADA               	clrf	fsr2h,c
  8233   000CEE  0E02               	movlw	2
  8234   000CF0  26DF               	addwf	indf2,f,c
  8235   000CF2  5CDF               	subwf	indf2,w,c
  8236   000CF4  6ED9               	movwf	fsr2l,c
  8237   000CF6  6ADA               	clrf	fsr2h,c
  8238   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8239   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8240                           
  8241                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8242   000D00  EF9B  F006         	goto	l7550
  8243   000D04                     l7544:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8247   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8248   000D06  6ED9               	movwf	fsr2l,c
  8249   000D08  6ADA               	clrf	fsr2h,c
  8250   000D0A  0E02               	movlw	2
  8251   000D0C  26DF               	addwf	indf2,f,c
  8252   000D0E  5CDF               	subwf	indf2,w,c
  8253   000D10  6ED9               	movwf	fsr2l,c
  8254   000D12  6ADA               	clrf	fsr2h,c
  8255   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8256   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8257                           
  8258                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8259   000D1C  EF9B  F006         	goto	l7550
  8260   000D20                     l7548:
  8261                           
  8262                           ; BSR set to: 0
  8263   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8264                           
  8265                           ; Switch size 1, requested type "simple"
  8266                           ; Number of cases is 2, Range of values is 104 to 105
  8267                           ; switch strategies available:
  8268                           ; Name         Instructions Cycles
  8269                           ; simple_byte            7     4 (average)
  8270                           ;	Chosen strategy is simple_byte
  8271   000D22  0A68               	xorlw	104	; case 104
  8272   000D24  B4D8               	btfsc	status,2,c
  8273   000D26  EF82  F006         	goto	l7544
  8274   000D2A  0A01               	xorlw	1	; case 105
  8275   000D2C  B4D8               	btfsc	status,2,c
  8276   000D2E  EF74  F006         	goto	l7542
  8277   000D32  EF9B  F006         	goto	l7550
  8278   000D36                     l7550:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8282   000D36  0E01               	movlw	1
  8283   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8284   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8285   000D3C  0E00               	movlw	0
  8286   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8287   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8288   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8289   000D44  6ED9               	movwf	fsr2l,c
  8290   000D46  6ADA               	clrf	fsr2h,c
  8291   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8292   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8293   000D50                     
  8294                           ; BSR set to: 0
  8295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8296   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8297   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8298   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8299   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8300   000D60  ECE2  F01D         	call	_dtoa	;wreg free
  8301   000D64  EF53  F008         	goto	l1560
  8302   000D68                     l7556:
  8303                           
  8304                           ; BSR set to: 0
  8305   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8306   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8307   000D70                     	if	0	;tblptru may be non-zero
  8308   000D70                     	endif
  8309   000D70                     	if	0	;tblptru may be non-zero
  8310   000D70                     	endif
  8311   000D70  0008               	tblrd		*
  8312   000D72  50F5               	movf	tablat,w,c
  8313   000D74  0A75               	xorlw	117
  8314   000D76  A4D8               	btfss	status,2,c
  8315   000D78  EFC0  F006         	goto	u9191
  8316   000D7C  EFC2  F006         	goto	u9190
  8317   000D80                     u9191:
  8318   000D80  EF12  F007         	goto	l7576
  8319   000D84                     u9190:
  8320   000D84  EFE0  F006         	goto	l7564
  8321   000D88                     l7558:
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8325   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8326   000D8A  6ED9               	movwf	fsr2l,c
  8327   000D8C  6ADA               	clrf	fsr2h,c
  8328   000D8E  0E02               	movlw	2
  8329   000D90  26DF               	addwf	indf2,f,c
  8330   000D92  5CDF               	subwf	indf2,w,c
  8331   000D94  6ED9               	movwf	fsr2l,c
  8332   000D96  6ADA               	clrf	fsr2h,c
  8333   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8334   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8335                           
  8336                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8337   000DA0  EFEB  F006         	goto	l7566
  8338   000DA4                     l7560:
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8342   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8343   000DA6  6ED9               	movwf	fsr2l,c
  8344   000DA8  6ADA               	clrf	fsr2h,c
  8345   000DAA  0E02               	movlw	2
  8346   000DAC  26DF               	addwf	indf2,f,c
  8347   000DAE  5CDF               	subwf	indf2,w,c
  8348   000DB0  6ED9               	movwf	fsr2l,c
  8349   000DB2  6ADA               	clrf	fsr2h,c
  8350   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8351   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8352                           
  8353                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8354   000DBC  EFEB  F006         	goto	l7566
  8355   000DC0                     l7564:
  8356                           
  8357                           ; BSR set to: 0
  8358   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8359                           
  8360                           ; Switch size 1, requested type "simple"
  8361                           ; Number of cases is 2, Range of values is 104 to 105
  8362                           ; switch strategies available:
  8363                           ; Name         Instructions Cycles
  8364                           ; simple_byte            7     4 (average)
  8365                           ;	Chosen strategy is simple_byte
  8366   000DC2  0A68               	xorlw	104	; case 104
  8367   000DC4  B4D8               	btfsc	status,2,c
  8368   000DC6  EFD2  F006         	goto	l7560
  8369   000DCA  0A01               	xorlw	1	; case 105
  8370   000DCC  B4D8               	btfsc	status,2,c
  8371   000DCE  EFC4  F006         	goto	l7558
  8372   000DD2  EFEB  F006         	goto	l7566
  8373   000DD6                     l7566:
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8377   000DD6  0E01               	movlw	1
  8378   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8379   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8380   000DDC  0E00               	movlw	0
  8381   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8382   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8383   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8384   000DE4  6ED9               	movwf	fsr2l,c
  8385   000DE6  6ADA               	clrf	fsr2h,c
  8386   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8387   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8388                           
  8389                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8390   000DF0  EF06  F007         	goto	l7574
  8391   000DF4                     l7568:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8395   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8396   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8397   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8398   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8399   000E04  ECBD  F022         	call	_utoa	;wreg free
  8400   000E08  EF53  F008         	goto	l1560
  8401   000E0C                     l7574:
  8402                           
  8403                           ; BSR set to: 0
  8404   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8405   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8406   000E14                     	if	0	;tblptru may be non-zero
  8407   000E14                     	endif
  8408   000E14                     	if	0	;tblptru may be non-zero
  8409   000E14                     	endif
  8410   000E14  0008               	tblrd		*
  8411   000E16  50F5               	movf	tablat,w,c
  8412                           
  8413                           ; Switch size 1, requested type "simple"
  8414                           ; Number of cases is 1, Range of values is 117 to 117
  8415                           ; switch strategies available:
  8416                           ; Name         Instructions Cycles
  8417                           ; simple_byte            4     3 (average)
  8418                           ;	Chosen strategy is simple_byte
  8419   000E18  0A75               	xorlw	117	; case 117
  8420   000E1A  B4D8               	btfsc	status,2,c
  8421   000E1C  EFFA  F006         	goto	l7568
  8422   000E20  EF12  F007         	goto	l7576
  8423   000E24                     l7576:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8427   000E24  0E00               	movlw	0
  8428   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8429   000E28                     
  8430                           ; BSR set to: 0
  8431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8432   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8433   000E2A  6ED9               	movwf	fsr2l,c
  8434   000E2C  6ADA               	clrf	fsr2h,c
  8435   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8436   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8437   000E36                     	if	0	;tblptru may be non-zero
  8438   000E36                     	endif
  8439   000E36                     	if	0	;tblptru may be non-zero
  8440   000E36                     	endif
  8441   000E36  0008               	tblrd		*
  8442   000E38  50F5               	movf	tablat,w,c
  8443   000E3A  0A73               	xorlw	115
  8444   000E3C  A4D8               	btfss	status,2,c
  8445   000E3E  EF23  F007         	goto	u9201
  8446   000E42  EF25  F007         	goto	u9200
  8447   000E46                     u9201:
  8448   000E46  EF2F  F007         	goto	l7584
  8449   000E4A                     u9200:
  8450   000E4A                     
  8451                           ; BSR set to: 0
  8452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8453   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8454   000E4C  6ED9               	movwf	fsr2l,c
  8455   000E4E  6ADA               	clrf	fsr2h,c
  8456   000E50  2ADE               	incf	postinc2,f,c
  8457   000E52  0E00               	movlw	0
  8458   000E54  22DD               	addwfc	postdec2,f,c
  8459   000E56                     l7582:
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8463   000E56  0E01               	movlw	1
  8464   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8465                           
  8466                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8467   000E5A  EF7B  F007         	goto	l7594
  8468   000E5E                     l7584:
  8469                           
  8470                           ; BSR set to: 0
  8471   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8472   000E60  6ED9               	movwf	fsr2l,c
  8473   000E62  6ADA               	clrf	fsr2h,c
  8474   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8475   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8476   000E6C                     	if	0	;tblptru may be non-zero
  8477   000E6C                     	endif
  8478   000E6C                     	if	0	;tblptru may be non-zero
  8479   000E6C                     	endif
  8480   000E6C  0008               	tblrd		*
  8481   000E6E  50F5               	movf	tablat,w,c
  8482   000E70  0A6C               	xorlw	108
  8483   000E72  A4D8               	btfss	status,2,c
  8484   000E74  EF3E  F007         	goto	u9211
  8485   000E78  EF40  F007         	goto	u9210
  8486   000E7C                     u9211:
  8487   000E7C  EF7B  F007         	goto	l7594
  8488   000E80                     u9210:
  8489   000E80                     
  8490                           ; BSR set to: 0
  8491   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8492   000E82  6ED9               	movwf	fsr2l,c
  8493   000E84  6ADA               	clrf	fsr2h,c
  8494   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8495   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8496   000E8E  0E01               	movlw	1
  8497   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8498   000E92  0E00               	movlw	0
  8499   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8500   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8501   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8502   000E9E                     	if	0	;tblptru may be non-zero
  8503   000E9E                     	endif
  8504   000E9E                     	if	0	;tblptru may be non-zero
  8505   000E9E                     	endif
  8506   000E9E  0008               	tblrd		*
  8507   000EA0  50F5               	movf	tablat,w,c
  8508   000EA2  0A6C               	xorlw	108
  8509   000EA4  A4D8               	btfss	status,2,c
  8510   000EA6  EF57  F007         	goto	u9221
  8511   000EAA  EF59  F007         	goto	u9220
  8512   000EAE                     u9221:
  8513   000EAE  EF7B  F007         	goto	l7594
  8514   000EB2                     u9220:
  8515   000EB2                     
  8516                           ; BSR set to: 0
  8517   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8518   000EB4  6ED9               	movwf	fsr2l,c
  8519   000EB6  6ADA               	clrf	fsr2h,c
  8520   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8521   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8522   000EC0  0E02               	movlw	2
  8523   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8524   000EC4  0E00               	movlw	0
  8525   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8526   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8527   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8528   000ED0                     	if	0	;tblptru may be non-zero
  8529   000ED0                     	endif
  8530   000ED0                     	if	0	;tblptru may be non-zero
  8531   000ED0                     	endif
  8532   000ED0  0008               	tblrd		*
  8533   000ED2  50F5               	movf	tablat,w,c
  8534   000ED4  0A73               	xorlw	115
  8535   000ED6  A4D8               	btfss	status,2,c
  8536   000ED8  EF70  F007         	goto	u9231
  8537   000EDC  EF72  F007         	goto	u9230
  8538   000EE0                     u9231:
  8539   000EE0  EF7B  F007         	goto	l7594
  8540   000EE4                     u9230:
  8541   000EE4                     
  8542                           ; BSR set to: 0
  8543                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8544   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8545   000EE6  6ED9               	movwf	fsr2l,c
  8546   000EE8  6ADA               	clrf	fsr2h,c
  8547   000EEA  0E03               	movlw	3
  8548   000EEC  26DE               	addwf	postinc2,f,c
  8549   000EEE  0E00               	movlw	0
  8550   000EF0  22DD               	addwfc	postdec2,f,c
  8551   000EF2  EF2B  F007         	goto	l7582
  8552   000EF6                     l7594:
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8556   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8557   000EF8  B4D8               	btfsc	status,2,c
  8558   000EFA  EF81  F007         	goto	u9241
  8559   000EFE  EF83  F007         	goto	u9240
  8560   000F02                     u9241:
  8561   000F02  EF97  F007         	goto	l7600
  8562   000F06                     u9240:
  8563   000F06                     
  8564                           ; BSR set to: 0
  8565                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8566   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8567   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8568   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8569   000F10  6ED9               	movwf	fsr2l,c
  8570   000F12  6ADA               	clrf	fsr2h,c
  8571   000F14  0E02               	movlw	2
  8572   000F16  26DF               	addwf	indf2,f,c
  8573   000F18  5CDF               	subwf	indf2,w,c
  8574   000F1A  6ED9               	movwf	fsr2l,c
  8575   000F1C  6ADA               	clrf	fsr2h,c
  8576   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8577   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8578   000F26  EC13  F01D         	call	_stoa	;wreg free
  8579   000F2A  EF53  F008         	goto	l1560
  8580   000F2E                     l7600:
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8584   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8585   000F30  6ED9               	movwf	fsr2l,c
  8586   000F32  6ADA               	clrf	fsr2h,c
  8587   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8588   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8589   000F3C                     
  8590                           ; BSR set to: 0
  8591                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8592   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8593   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8594   000F44                     	if	0	;tblptru may be non-zero
  8595   000F44                     	endif
  8596   000F44                     	if	0	;tblptru may be non-zero
  8597   000F44                     	endif
  8598   000F44  0008               	tblrd		*
  8599   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8600                           
  8601                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8602   000F4A  EFB3  F007         	goto	l7612
  8603   000F4E                     l7604:
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8607   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8608   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8609                           
  8610                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8611   000F52  EFC2  F007         	goto	l7614
  8612   000F56                     l7606:
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8616   000F56  0E6C               	movlw	108
  8617   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8618                           
  8619                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8620   000F5A  EFC2  F007         	goto	l7614
  8621   000F5E                     l7608:
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8625   000F5E  0E00               	movlw	0
  8626   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8627                           
  8628                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8629   000F62  EFC2  F007         	goto	l7614
  8630   000F66                     l7612:
  8631                           
  8632                           ; BSR set to: 0
  8633   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8634                           
  8635                           ; Switch size 1, requested type "simple"
  8636                           ; Number of cases is 3, Range of values is 76 to 108
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte           10     6 (average)
  8640                           ;	Chosen strategy is simple_byte
  8641   000F68  0A4C               	xorlw	76	; case 76
  8642   000F6A  B4D8               	btfsc	status,2,c
  8643   000F6C  EFA7  F007         	goto	l7604
  8644   000F70  0A2A               	xorlw	42	; case 102
  8645   000F72  B4D8               	btfsc	status,2,c
  8646   000F74  EFAB  F007         	goto	l7606
  8647   000F78  0A0A               	xorlw	10	; case 108
  8648   000F7A  B4D8               	btfsc	status,2,c
  8649   000F7C  EFA7  F007         	goto	l7604
  8650   000F80  EFAF  F007         	goto	l7608
  8651   000F84                     l7614:
  8652                           
  8653                           ; BSR set to: 0
  8654   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8655   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8656   000F8C                     	if	0	;tblptru may be non-zero
  8657   000F8C                     	endif
  8658   000F8C                     	if	0	;tblptru may be non-zero
  8659   000F8C                     	endif
  8660   000F8C  0008               	tblrd		*
  8661   000F8E  50F5               	movf	tablat,w,c
  8662   000F90  0A66               	xorlw	102
  8663   000F92  A4D8               	btfss	status,2,c
  8664   000F94  EFCE  F007         	goto	u9251
  8665   000F98  EFD0  F007         	goto	u9250
  8666   000F9C                     u9251:
  8667   000F9C  EF37  F008         	goto	l7634
  8668   000FA0                     u9250:
  8669   000FA0  EFFA  F007         	goto	l7622
  8670   000FA4                     l7616:
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8674   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8675   000FA6  6ED9               	movwf	fsr2l,c
  8676   000FA8  6ADA               	clrf	fsr2h,c
  8677   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8678   000FAE  0E04               	movlw	4
  8679   000FB0  26DF               	addwf	indf2,f,c
  8680   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8681   000FB4  6ED9               	movwf	fsr2l,c
  8682   000FB6  6ADA               	clrf	fsr2h,c
  8683   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8684   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8685   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8686   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8687                           
  8688                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8689   000FC8  EF05  F008         	goto	l7624
  8690   000FCC                     l7618:
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8694   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8695   000FCE  6ED9               	movwf	fsr2l,c
  8696   000FD0  6ADA               	clrf	fsr2h,c
  8697   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8698   000FD6  0E04               	movlw	4
  8699   000FD8  26DF               	addwf	indf2,f,c
  8700   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8701   000FDC  6ED9               	movwf	fsr2l,c
  8702   000FDE  6ADA               	clrf	fsr2h,c
  8703   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8704   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8705   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8706   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8707                           
  8708                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8709   000FF0  EF05  F008         	goto	l7624
  8710   000FF4                     l7622:
  8711                           
  8712                           ; BSR set to: 0
  8713   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8714                           
  8715                           ; Switch size 1, requested type "simple"
  8716                           ; Number of cases is 2, Range of values is 76 to 108
  8717                           ; switch strategies available:
  8718                           ; Name         Instructions Cycles
  8719                           ; simple_byte            7     4 (average)
  8720                           ;	Chosen strategy is simple_byte
  8721   000FF6  0A4C               	xorlw	76	; case 76
  8722   000FF8  B4D8               	btfsc	status,2,c
  8723   000FFA  EFE6  F007         	goto	l7618
  8724   000FFE  0A20               	xorlw	32	; case 108
  8725   001000  B4D8               	btfsc	status,2,c
  8726   001002  EFD2  F007         	goto	l7616
  8727   001006  EF05  F008         	goto	l7624
  8728   00100A                     l7624:
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8732   00100A  0E01               	movlw	1
  8733   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8734   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8735   001010  0E00               	movlw	0
  8736   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8737   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8738   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8739   001018  6ED9               	movwf	fsr2l,c
  8740   00101A  6ADA               	clrf	fsr2h,c
  8741   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8742   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8743                           
  8744                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8745   001024  EF2B  F008         	goto	l7632
  8746   001028                     l7626:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8750   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8751   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8752   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8753   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8754   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8755   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8756   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8757   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8758   001048                     	if	0	;tblptru may be non-zero
  8759   001048                     	endif
  8760   001048                     	if	0	;tblptru may be non-zero
  8761   001048                     	endif
  8762   001048  0008               	tblrd		*
  8763   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8764   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8765   001052  EF53  F008         	goto	l1560
  8766   001056                     l7632:
  8767                           
  8768                           ; BSR set to: 0
  8769   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8770   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8771   00105E                     	if	0	;tblptru may be non-zero
  8772   00105E                     	endif
  8773   00105E                     	if	0	;tblptru may be non-zero
  8774   00105E                     	endif
  8775   00105E  0008               	tblrd		*
  8776   001060  50F5               	movf	tablat,w,c
  8777                           
  8778                           ; Switch size 1, requested type "simple"
  8779                           ; Number of cases is 1, Range of values is 102 to 102
  8780                           ; switch strategies available:
  8781                           ; Name         Instructions Cycles
  8782                           ; simple_byte            4     3 (average)
  8783                           ;	Chosen strategy is simple_byte
  8784   001062  0A66               	xorlw	102	; case 102
  8785   001064  B4D8               	btfsc	status,2,c
  8786   001066  EF14  F008         	goto	l7626
  8787   00106A  EF37  F008         	goto	l7634
  8788   00106E                     l7634:
  8789                           
  8790                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8791   00106E  0100               	movlb	0	; () banked
  8792   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8793   001072  6ED9               	movwf	fsr2l,c
  8794   001074  6ADA               	clrf	fsr2h,c
  8795   001076  2ADE               	incf	postinc2,f,c
  8796   001078  0E00               	movlw	0
  8797   00107A  22DD               	addwfc	postdec2,f,c
  8798   00107C  EF53  F008         	goto	l1560
  8799   001080                     l7638:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8803   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8804   001082  6ED9               	movwf	fsr2l,c
  8805   001084  6ADA               	clrf	fsr2h,c
  8806   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8807   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8808   00108E                     	if	0	;tblptru may be non-zero
  8809   00108E                     	endif
  8810   00108E                     	if	0	;tblptru may be non-zero
  8811   00108E                     	endif
  8812   00108E  0008               	tblrd		*
  8813   001090  50F5               	movf	tablat,w,c
  8814   001092  6E07               	movwf	fputc@c^0,c
  8815   001094  6A08               	clrf	(fputc@c+1)^0,c
  8816   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8817   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8818   00109E  ECA2  F023         	call	_fputc	;wreg free
  8819   0010A2  EF37  F008         	goto	l7634
  8820   0010A6                     l1560:
  8821   0010A6  0012               	return		;funcret
  8822   0010A8                     __end_of_vfpfcnvrt:
  8823                           	callstack 0
  8824                           
  8825 ;; *************** function _utoa *****************
  8826 ;; Defined at:
  8827 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8830 ;;		 -> NULL(0), sprintf@f(12), 
  8831 ;;  d               2   33[COMRAM] unsigned int 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  i               2   39[COMRAM] int 
  8834 ;;  p               2   37[COMRAM] int 
  8835 ;;  w               2   35[COMRAM] int 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8846 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;Total ram usage:       10 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 5
  8852 ;; This function calls:
  8853 ;;		___lwdiv
  8854 ;;		___lwmod
  8855 ;;		_pad
  8856 ;; This function is called by:
  8857 ;;		_vfpfcnvrt
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text30
  8862   00457A                     __ptext30:
  8863                           	callstack 0
  8864   00457A                     _utoa:
  8865                           	callstack 21
  8866   00457A                     
  8867                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  8868   00457A  BE58               	btfsc	(_prec+1)^0,7,c
  8869   00457C  EFC4  F022         	goto	u8970
  8870   004580  EFC2  F022         	goto	u8971
  8871   004584                     u8971:
  8872   004584  EFCA  F022         	goto	l1517
  8873   004588                     u8970:
  8874   004588  0E00               	movlw	0
  8875   00458A  6E27               	movwf	(utoa@p+1)^0,c
  8876   00458C  0E01               	movlw	1
  8877   00458E  6E26               	movwf	utoa@p^0,c
  8878   004590  EFCE  F022         	goto	l1519
  8879   004594                     l1517:
  8880   004594  C057  F026         	movff	_prec,utoa@p
  8881   004598  C058  F027         	movff	_prec+1,utoa@p+1
  8882   00459C                     l1519:
  8883                           
  8884                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  8885   00459C  C055  F024         	movff	_width,utoa@w
  8886   0045A0  C056  F025         	movff	_width+1,utoa@w+1
  8887   0045A4                     
  8888                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  8889   0045A4  0E00               	movlw	0
  8890   0045A6  6E29               	movwf	(utoa@i+1)^0,c
  8891   0045A8  0E4F               	movlw	79
  8892   0045AA  6E28               	movwf	utoa@i^0,c
  8893   0045AC                     
  8894                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  8895   0045AC  0E00               	movlw	0
  8896   0045AE  0101               	movlb	1	; () banked
  8897   0045B0  6F76               	movwf	(_dbuf+79)& (0+255),b
  8898                           
  8899                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8900   0045B2  EF05  F023         	goto	l7420
  8901   0045B6                     l7410:
  8902                           
  8903                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  8904   0045B6  0628               	decf	utoa@i^0,f,c
  8905   0045B8  A0D8               	btfss	status,0,c
  8906   0045BA  0629               	decf	(utoa@i+1)^0,f,c
  8907   0045BC                     
  8908                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  8909   0045BC  0E27               	movlw	low _dbuf
  8910   0045BE  2428               	addwf	utoa@i^0,w,c
  8911   0045C0  6ED9               	movwf	fsr2l,c
  8912   0045C2  0E01               	movlw	high _dbuf
  8913   0045C4  2029               	addwfc	(utoa@i+1)^0,w,c
  8914   0045C6  6EDA               	movwf	fsr2h,c
  8915   0045C8  C022  F006         	movff	utoa@d,___lwmod@dividend
  8916   0045CC  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  8917   0045D0  0E00               	movlw	0
  8918   0045D2  6E09               	movwf	(___lwmod@divisor+1)^0,c
  8919   0045D4  0E0A               	movlw	10
  8920   0045D6  6E08               	movwf	___lwmod@divisor^0,c
  8921   0045D8  ECBB  F026         	call	___lwmod	;wreg free
  8922   0045DC  5006               	movf	?___lwmod^0,w,c
  8923   0045DE  0F30               	addlw	48
  8924   0045E0  6EDF               	movwf	indf2,c
  8925   0045E2                     
  8926                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  8927   0045E2  0626               	decf	utoa@p^0,f,c
  8928   0045E4  A0D8               	btfss	status,0,c
  8929   0045E6  0627               	decf	(utoa@p+1)^0,f,c
  8930   0045E8                     
  8931                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  8932   0045E8  0624               	decf	utoa@w^0,f,c
  8933   0045EA  A0D8               	btfss	status,0,c
  8934   0045EC  0625               	decf	(utoa@w+1)^0,f,c
  8935   0045EE                     
  8936                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  8937   0045EE  C022  F006         	movff	utoa@d,___lwdiv@dividend
  8938   0045F2  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  8939   0045F6  0E00               	movlw	0
  8940   0045F8  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  8941   0045FA  0E0A               	movlw	10
  8942   0045FC  6E08               	movwf	___lwdiv@divisor^0,c
  8943   0045FE  EC15  F026         	call	___lwdiv	;wreg free
  8944   004602  C006  F022         	movff	?___lwdiv,utoa@d
  8945   004606  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  8946   00460A                     l7420:
  8947                           
  8948                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8949   00460A  5028               	movf	utoa@i^0,w,c
  8950   00460C  1029               	iorwf	(utoa@i+1)^0,w,c
  8951   00460E  B4D8               	btfsc	status,2,c
  8952   004610  EF0C  F023         	goto	u8981
  8953   004614  EF0E  F023         	goto	u8980
  8954   004618                     u8981:
  8955   004618  EF24  F023         	goto	l7426
  8956   00461C                     u8980:
  8957   00461C  5022               	movf	utoa@d^0,w,c
  8958   00461E  1023               	iorwf	(utoa@d+1)^0,w,c
  8959   004620  A4D8               	btfss	status,2,c
  8960   004622  EF15  F023         	goto	u8991
  8961   004626  EF17  F023         	goto	u8990
  8962   00462A                     u8991:
  8963   00462A  EFDB  F022         	goto	l7410
  8964   00462E                     u8990:
  8965   00462E  BE27               	btfsc	(utoa@p+1)^0,7,c
  8966   004630  EF24  F023         	goto	u9000
  8967   004634  5027               	movf	(utoa@p+1)^0,w,c
  8968   004636  E106               	bnz	u9001
  8969   004638  0426               	decf	utoa@p^0,w,c
  8970   00463A  B0D8               	btfsc	status,0,c
  8971   00463C  EF22  F023         	goto	u9001
  8972   004640  EF24  F023         	goto	u9000
  8973   004644                     u9001:
  8974   004644  EFDB  F022         	goto	l7410
  8975   004648                     u9000:
  8976   004648                     l7426:
  8977                           
  8978                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  8979   004648  C020  F017         	movff	utoa@fp,pad@fp
  8980   00464C  C021  F018         	movff	utoa@fp+1,pad@fp+1
  8981   004650  0E27               	movlw	low _dbuf
  8982   004652  2428               	addwf	utoa@i^0,w,c
  8983   004654  6E19               	movwf	pad@buf^0,c
  8984   004656  0E01               	movlw	high _dbuf
  8985   004658  2029               	addwfc	(utoa@i+1)^0,w,c
  8986   00465A  6E1A               	movwf	(pad@buf+1)^0,c
  8987   00465C  C024  F01B         	movff	utoa@w,pad@p
  8988   004660  C025  F01C         	movff	utoa@w+1,pad@p+1
  8989   004664  ECC6  F025         	call	_pad	;wreg free
  8990   004668  0012               	return		;funcret
  8991   00466A                     __end_of_utoa:
  8992                           	callstack 0
  8993                           
  8994 ;; *************** function ___lwmod *****************
  8995 ;; Defined at:
  8996 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  dividend        2    5[COMRAM] unsigned int 
  8999 ;;  divisor         2    7[COMRAM] unsigned int 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  counter         1    9[COMRAM] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  2    5[COMRAM] unsigned int 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;Total ram usage:        5 bytes
  9016 ;; Hardware stack levels used: 1
  9017 ;; Hardware stack levels required when called: 1
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_utoa
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text31
  9026   004D76                     __ptext31:
  9027                           	callstack 0
  9028   004D76                     ___lwmod:
  9029                           	callstack 24
  9030   004D76  5008               	movf	___lwmod@divisor^0,w,c
  9031   004D78  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  9032   004D7A  B4D8               	btfsc	status,2,c
  9033   004D7C  EFC2  F026         	goto	u8171
  9034   004D80  EFC4  F026         	goto	u8170
  9035   004D84                     u8171:
  9036   004D84  EFE8  F026         	goto	l1211
  9037   004D88                     u8170:
  9038   004D88  0E01               	movlw	1
  9039   004D8A  6E0A               	movwf	___lwmod@counter^0,c
  9040   004D8C  EFCC  F026         	goto	l6994
  9041   004D90                     l6992:
  9042   004D90  90D8               	bcf	status,0,c
  9043   004D92  3608               	rlcf	___lwmod@divisor^0,f,c
  9044   004D94  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  9045   004D96  2A0A               	incf	___lwmod@counter^0,f,c
  9046   004D98                     l6994:
  9047   004D98  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  9048   004D9A  EFD1  F026         	goto	u8181
  9049   004D9E  EFD3  F026         	goto	u8180
  9050   004DA2                     u8181:
  9051   004DA2  EFC8  F026         	goto	l6992
  9052   004DA6                     u8180:
  9053   004DA6                     l6996:
  9054   004DA6  5008               	movf	___lwmod@divisor^0,w,c
  9055   004DA8  5C06               	subwf	___lwmod@dividend^0,w,c
  9056   004DAA  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9057   004DAC  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  9058   004DAE  A0D8               	btfss	status,0,c
  9059   004DB0  EFDC  F026         	goto	u8191
  9060   004DB4  EFDE  F026         	goto	u8190
  9061   004DB8                     u8191:
  9062   004DB8  EFE2  F026         	goto	l7000
  9063   004DBC                     u8190:
  9064   004DBC  5008               	movf	___lwmod@divisor^0,w,c
  9065   004DBE  5E06               	subwf	___lwmod@dividend^0,f,c
  9066   004DC0  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9067   004DC2  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  9068   004DC4                     l7000:
  9069   004DC4  90D8               	bcf	status,0,c
  9070   004DC6  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  9071   004DC8  3208               	rrcf	___lwmod@divisor^0,f,c
  9072   004DCA  2E0A               	decfsz	___lwmod@counter^0,f,c
  9073   004DCC  EFD3  F026         	goto	l6996
  9074   004DD0                     l1211:
  9075   004DD0  C006  F006         	movff	___lwmod@dividend,?___lwmod
  9076   004DD4  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  9077   004DD8  0012               	return		;funcret
  9078   004DDA                     __end_of___lwmod:
  9079                           	callstack 0
  9080                           
  9081 ;; *************** function ___lwdiv *****************
  9082 ;; Defined at:
  9083 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  dividend        2    5[COMRAM] unsigned int 
  9086 ;;  divisor         2    7[COMRAM] unsigned int 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;  quotient        2   10[COMRAM] unsigned int 
  9089 ;;  counter         1    9[COMRAM] unsigned char 
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  2    5[COMRAM] unsigned int 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9100 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9102 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9103 ;;Total ram usage:        7 bytes
  9104 ;; Hardware stack levels used: 1
  9105 ;; Hardware stack levels required when called: 1
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_utoa
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text32
  9114   004C2A                     __ptext32:
  9115                           	callstack 0
  9116   004C2A                     ___lwdiv:
  9117                           	callstack 24
  9118   004C2A  0E00               	movlw	0
  9119   004C2C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9120   004C2E  0E00               	movlw	0
  9121   004C30  6E0B               	movwf	___lwdiv@quotient^0,c
  9122   004C32  5008               	movf	___lwdiv@divisor^0,w,c
  9123   004C34  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9124   004C36  B4D8               	btfsc	status,2,c
  9125   004C38  EF20  F026         	goto	u8141
  9126   004C3C  EF22  F026         	goto	u8140
  9127   004C40                     u8141:
  9128   004C40  EF4A  F026         	goto	l1201
  9129   004C44                     u8140:
  9130   004C44  0E01               	movlw	1
  9131   004C46  6E0A               	movwf	___lwdiv@counter^0,c
  9132   004C48  EF2A  F026         	goto	l6974
  9133   004C4C                     l6972:
  9134   004C4C  90D8               	bcf	status,0,c
  9135   004C4E  3608               	rlcf	___lwdiv@divisor^0,f,c
  9136   004C50  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9137   004C52  2A0A               	incf	___lwdiv@counter^0,f,c
  9138   004C54                     l6974:
  9139   004C54  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9140   004C56  EF2F  F026         	goto	u8151
  9141   004C5A  EF31  F026         	goto	u8150
  9142   004C5E                     u8151:
  9143   004C5E  EF26  F026         	goto	l6972
  9144   004C62                     u8150:
  9145   004C62                     l6976:
  9146   004C62  90D8               	bcf	status,0,c
  9147   004C64  360B               	rlcf	___lwdiv@quotient^0,f,c
  9148   004C66  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9149   004C68  5008               	movf	___lwdiv@divisor^0,w,c
  9150   004C6A  5C06               	subwf	___lwdiv@dividend^0,w,c
  9151   004C6C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9152   004C6E  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9153   004C70  A0D8               	btfss	status,0,c
  9154   004C72  EF3D  F026         	goto	u8161
  9155   004C76  EF3F  F026         	goto	u8160
  9156   004C7A                     u8161:
  9157   004C7A  EF44  F026         	goto	l6984
  9158   004C7E                     u8160:
  9159   004C7E  5008               	movf	___lwdiv@divisor^0,w,c
  9160   004C80  5E06               	subwf	___lwdiv@dividend^0,f,c
  9161   004C82  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9162   004C84  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9163   004C86  800B               	bsf	___lwdiv@quotient^0,0,c
  9164   004C88                     l6984:
  9165   004C88  90D8               	bcf	status,0,c
  9166   004C8A  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9167   004C8C  3208               	rrcf	___lwdiv@divisor^0,f,c
  9168   004C8E  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9169   004C90  EF31  F026         	goto	l6976
  9170   004C94                     l1201:
  9171   004C94  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9172   004C98  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9173   004C9C  0012               	return		;funcret
  9174   004C9E                     __end_of___lwdiv:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _stoa *****************
  9178 ;; Defined at:
  9179 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9182 ;;		 -> NULL(0), sprintf@f(12), 
  9183 ;;  s               2   17[COMRAM] PTR unsigned char 
  9184 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_26(1), 
  9185 ;;		 -> STR_25(6), STR_24(5), STR_23(4), STR_22(4), 
  9186 ;;		 -> STR_21(4), STR_20(5), STR_19(5), 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;  l               2   27[COMRAM] int 
  9189 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9190 ;;		 -> ?_printf(2), STR_42(7), ?_sprintf(2), runUART@reversed(31), 
  9191 ;;		 -> STR_26(1), STR_25(6), STR_24(5), STR_23(4), 
  9192 ;;		 -> STR_22(4), STR_21(4), STR_20(5), STR_19(5), 
  9193 ;;  w               2   23[COMRAM] int 
  9194 ;;  p               2   21[COMRAM] int 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;Total ram usage:       14 bytes
  9209 ;; Hardware stack levels used: 1
  9210 ;; Hardware stack levels required when called: 3
  9211 ;; This function calls:
  9212 ;;		_fputc
  9213 ;; This function is called by:
  9214 ;;		_vfpfcnvrt
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           	psect	text33
  9219   003A26                     __ptext33:
  9220                           	callstack 0
  9221   003A26                     _stoa:
  9222                           	callstack 23
  9223   003A26                     
  9224                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9225   003A26  C012  F01A         	movff	stoa@s,stoa@cp
  9226   003A2A  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9227                           
  9228                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9229   003A2E  501A               	movf	stoa@cp^0,w,c
  9230   003A30  101B               	iorwf	(stoa@cp+1)^0,w,c
  9231   003A32  A4D8               	btfss	status,2,c
  9232   003A34  EF1E  F01D         	goto	u8861
  9233   003A38  EF20  F01D         	goto	u8860
  9234   003A3C                     u8861:
  9235   003A3C  EF24  F01D         	goto	l7368
  9236   003A40                     u8860:
  9237   003A40                     
  9238                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9239   003A40  0EBF               	movlw	low STR_42
  9240   003A42  6E1A               	movwf	stoa@cp^0,c
  9241   003A44  0EFF               	movlw	high STR_42
  9242   003A46  6E1B               	movwf	(stoa@cp+1)^0,c
  9243   003A48                     l7368:
  9244                           
  9245                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9246   003A48  0E00               	movlw	0
  9247   003A4A  6E1D               	movwf	(stoa@l+1)^0,c
  9248   003A4C  0E00               	movlw	0
  9249   003A4E  6E1C               	movwf	stoa@l^0,c
  9250   003A50  EF2C  F01D         	goto	l7372
  9251   003A54                     l7370:
  9252   003A54  4A1C               	infsnz	stoa@l^0,f,c
  9253   003A56  2A1D               	incf	(stoa@l+1)^0,f,c
  9254   003A58                     l7372:
  9255   003A58  501C               	movf	stoa@l^0,w,c
  9256   003A5A  241A               	addwf	stoa@cp^0,w,c
  9257   003A5C  6E14               	movwf	??_stoa^0,c
  9258   003A5E  501D               	movf	(stoa@l+1)^0,w,c
  9259   003A60  201B               	addwfc	(stoa@cp+1)^0,w,c
  9260   003A62  6E15               	movwf	(??_stoa+1)^0,c
  9261   003A64  C014  FFF6         	movff	??_stoa,tblptrl
  9262   003A68  C015  FFF7         	movff	??_stoa+1,tblptrh
  9263   003A6C  0E00               	movlw	low (__mediumconst shr (0+16))
  9264   003A6E  6EF8               	movwf	tblptru,c
  9265   003A70  0E0F               	movlw	(high __ramtop+-1)
  9266   003A72  64F7               	cpfsgt	tblptrh,c
  9267   003A74  D003               	bra	u8877
  9268   003A76  0008               	tblrd		*
  9269   003A78  50F5               	movf	tablat,w,c
  9270   003A7A  D005               	bra	u8870
  9271   003A7C                     u8877:
  9272   003A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9273   003A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  9274   003A84  50E7               	movf	indf1,w,c
  9275   003A86                     u8870:
  9276   003A86  0900               	iorlw	0
  9277   003A88  A4D8               	btfss	status,2,c
  9278   003A8A  EF49  F01D         	goto	u8881
  9279   003A8E  EF4B  F01D         	goto	u8880
  9280   003A92                     u8881:
  9281   003A92  EF2A  F01D         	goto	l7370
  9282   003A96                     u8880:
  9283   003A96                     
  9284                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9285   003A96  BE58               	btfsc	(_prec+1)^0,7,c
  9286   003A98  EF50  F01D         	goto	u8891
  9287   003A9C  EF52  F01D         	goto	u8890
  9288   003AA0                     u8891:
  9289   003AA0  EF65  F01D         	goto	l1501
  9290   003AA4                     u8890:
  9291   003AA4  501C               	movf	stoa@l^0,w,c
  9292   003AA6  5C57               	subwf	_prec^0,w,c
  9293   003AA8  5058               	movf	(_prec+1)^0,w,c
  9294   003AAA  0A80               	xorlw	128
  9295   003AAC  6E14               	movwf	??_stoa^0,c
  9296   003AAE  501D               	movf	(stoa@l+1)^0,w,c
  9297   003AB0  0A80               	xorlw	128
  9298   003AB2  5814               	subwfb	??_stoa^0,w,c
  9299   003AB4  B0D8               	btfsc	status,0,c
  9300   003AB6  EF5F  F01D         	goto	u8901
  9301   003ABA  EF61  F01D         	goto	u8900
  9302   003ABE                     u8901:
  9303   003ABE  EF65  F01D         	goto	l1501
  9304   003AC2                     u8900:
  9305   003AC2                     
  9306                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9307   003AC2  C057  F01C         	movff	_prec,stoa@l
  9308   003AC6  C058  F01D         	movff	_prec+1,stoa@l+1
  9309   003ACA                     l1501:
  9310                           
  9311                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9312   003ACA  C01C  F016         	movff	stoa@l,stoa@p
  9313   003ACE  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9314                           
  9315                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9316   003AD2  C055  F018         	movff	_width,stoa@w
  9317   003AD6  C056  F019         	movff	_width+1,stoa@w+1
  9318                           
  9319                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9320   003ADA  B059               	btfsc	_flags^0,0,c
  9321   003ADC  EF72  F01D         	goto	u8911
  9322   003AE0  EF74  F01D         	goto	u8910
  9323   003AE4                     u8911:
  9324   003AE4  EFB0  F01D         	goto	l7392
  9325   003AE8                     u8910:
  9326   003AE8  EF82  F01D         	goto	l7386
  9327   003AEC                     l7382:
  9328                           
  9329                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9330   003AEC  0E00               	movlw	0
  9331   003AEE  6E08               	movwf	(fputc@c+1)^0,c
  9332   003AF0  0E20               	movlw	32
  9333   003AF2  6E07               	movwf	fputc@c^0,c
  9334   003AF4  C010  F009         	movff	stoa@fp,fputc@fp
  9335   003AF8  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9336   003AFC  ECA2  F023         	call	_fputc	;wreg free
  9337   003B00                     
  9338                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9339   003B00  4A1C               	infsnz	stoa@l^0,f,c
  9340   003B02  2A1D               	incf	(stoa@l+1)^0,f,c
  9341   003B04                     l7386:
  9342                           
  9343                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9344   003B04  5018               	movf	stoa@w^0,w,c
  9345   003B06  5C1C               	subwf	stoa@l^0,w,c
  9346   003B08  501D               	movf	(stoa@l+1)^0,w,c
  9347   003B0A  0A80               	xorlw	128
  9348   003B0C  6E14               	movwf	??_stoa^0,c
  9349   003B0E  5019               	movf	(stoa@w+1)^0,w,c
  9350   003B10  0A80               	xorlw	128
  9351   003B12  5814               	subwfb	??_stoa^0,w,c
  9352   003B14  A0D8               	btfss	status,0,c
  9353   003B16  EF8F  F01D         	goto	u8921
  9354   003B1A  EF91  F01D         	goto	u8920
  9355   003B1E                     u8921:
  9356   003B1E  EF76  F01D         	goto	l7382
  9357   003B22                     u8920:
  9358   003B22  EFB0  F01D         	goto	l7392
  9359   003B26                     l7388:
  9360                           
  9361                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9362   003B26  C01A  FFF6         	movff	stoa@cp,tblptrl
  9363   003B2A  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9364   003B2E  0E00               	movlw	low (__mediumconst shr (0+16))
  9365   003B30  6EF8               	movwf	tblptru,c
  9366   003B32  0E0F               	movlw	(high __ramtop+-1)
  9367   003B34  64F7               	cpfsgt	tblptrh,c
  9368   003B36  D003               	bra	u8937
  9369   003B38  0008               	tblrd		*
  9370   003B3A  50F5               	movf	tablat,w,c
  9371   003B3C  D005               	bra	u8930
  9372   003B3E                     u8937:
  9373   003B3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9374   003B42  CFF7 FFE2          	movff	tblptrh,fsr1h
  9375   003B46  50E7               	movf	indf1,w,c
  9376   003B48                     u8930:
  9377   003B48  6E14               	movwf	??_stoa^0,c
  9378   003B4A  5014               	movf	??_stoa^0,w,c
  9379   003B4C  6E07               	movwf	fputc@c^0,c
  9380   003B4E  6A08               	clrf	(fputc@c+1)^0,c
  9381   003B50  C010  F009         	movff	stoa@fp,fputc@fp
  9382   003B54  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9383   003B58  ECA2  F023         	call	_fputc	;wreg free
  9384   003B5C                     
  9385                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9386   003B5C  4A1A               	infsnz	stoa@cp^0,f,c
  9387   003B5E  2A1B               	incf	(stoa@cp+1)^0,f,c
  9388   003B60                     l7392:
  9389                           
  9390                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9391   003B60  0616               	decf	stoa@p^0,f,c
  9392   003B62  A0D8               	btfss	status,0,c
  9393   003B64  0617               	decf	(stoa@p+1)^0,f,c
  9394   003B66  2816               	incf	stoa@p^0,w,c
  9395   003B68  E106               	bnz	u8941
  9396   003B6A  2817               	incf	(stoa@p+1)^0,w,c
  9397   003B6C  A4D8               	btfss	status,2,c
  9398   003B6E  EFBB  F01D         	goto	u8941
  9399   003B72  EFBD  F01D         	goto	u8940
  9400   003B76                     u8941:
  9401   003B76  EF93  F01D         	goto	l7388
  9402   003B7A                     u8940:
  9403   003B7A                     
  9404                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9405   003B7A  A059               	btfss	_flags^0,0,c
  9406   003B7C  EFC2  F01D         	goto	u8951
  9407   003B80  EFC4  F01D         	goto	u8950
  9408   003B84                     u8951:
  9409   003B84  EFE1  F01D         	goto	l1513
  9410   003B88                     u8950:
  9411   003B88  EFD2  F01D         	goto	l7400
  9412   003B8C                     l7396:
  9413                           
  9414                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9415   003B8C  0E00               	movlw	0
  9416   003B8E  6E08               	movwf	(fputc@c+1)^0,c
  9417   003B90  0E20               	movlw	32
  9418   003B92  6E07               	movwf	fputc@c^0,c
  9419   003B94  C010  F009         	movff	stoa@fp,fputc@fp
  9420   003B98  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9421   003B9C  ECA2  F023         	call	_fputc	;wreg free
  9422   003BA0                     
  9423                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9424   003BA0  4A1C               	infsnz	stoa@l^0,f,c
  9425   003BA2  2A1D               	incf	(stoa@l+1)^0,f,c
  9426   003BA4                     l7400:
  9427                           
  9428                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9429   003BA4  5018               	movf	stoa@w^0,w,c
  9430   003BA6  5C1C               	subwf	stoa@l^0,w,c
  9431   003BA8  501D               	movf	(stoa@l+1)^0,w,c
  9432   003BAA  0A80               	xorlw	128
  9433   003BAC  6E14               	movwf	??_stoa^0,c
  9434   003BAE  5019               	movf	(stoa@w+1)^0,w,c
  9435   003BB0  0A80               	xorlw	128
  9436   003BB2  5814               	subwfb	??_stoa^0,w,c
  9437   003BB4  A0D8               	btfss	status,0,c
  9438   003BB6  EFDF  F01D         	goto	u8961
  9439   003BBA  EFE1  F01D         	goto	u8960
  9440   003BBE                     u8961:
  9441   003BBE  EFC6  F01D         	goto	l7396
  9442   003BC2                     u8960:
  9443   003BC2                     l1513:
  9444   003BC2  0012               	return		;funcret
  9445   003BC4                     __end_of_stoa:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _read_prec_or_width *****************
  9449 ;; Defined at:
  9450 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9453 ;;		 -> vfprintf@cfmt(2), 
  9454 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9455 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;  c               1   13[COMRAM] unsigned char 
  9458 ;;  n               2   14[COMRAM] int 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  2   11[COMRAM] int 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;Total ram usage:        5 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; Hardware stack levels required when called: 2
  9475 ;; This function calls:
  9476 ;;		___wmul
  9477 ;; This function is called by:
  9478 ;;		_vfpfcnvrt
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text34
  9483   004A34                     __ptext34:
  9484                           	callstack 0
  9485   004A34                     _read_prec_or_width:
  9486                           	callstack 24
  9487   004A34                     
  9488                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9489   004A34  0E00               	movlw	0
  9490   004A36  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9491   004A38  0E00               	movlw	0
  9492   004A3A  6E0F               	movwf	read_prec_or_width@n^0,c
  9493   004A3C                     
  9494                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9495   004A3C  500C               	movf	read_prec_or_width@fmt^0,w,c
  9496   004A3E  6ED9               	movwf	fsr2l,c
  9497   004A40  6ADA               	clrf	fsr2h,c
  9498   004A42  CFDE FFF6          	movff	postinc2,tblptrl
  9499   004A46  CFDD FFF7          	movff	postdec2,tblptrh
  9500   004A4A                     	if	0	;tblptru may be non-zero
  9501   004A4A                     	endif
  9502   004A4A                     	if	0	;tblptru may be non-zero
  9503   004A4A                     	endif
  9504   004A4A  0008               	tblrd		*
  9505   004A4C  50F5               	movf	tablat,w,c
  9506   004A4E  0A2A               	xorlw	42
  9507   004A50  A4D8               	btfss	status,2,c
  9508   004A52  EF2D  F025         	goto	u9011
  9509   004A56  EF2F  F025         	goto	u9010
  9510   004A5A                     u9011:
  9511   004A5A  EF59  F025         	goto	l7442
  9512   004A5E                     u9010:
  9513   004A5E                     
  9514                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9515   004A5E  500C               	movf	read_prec_or_width@fmt^0,w,c
  9516   004A60  6ED9               	movwf	fsr2l,c
  9517   004A62  6ADA               	clrf	fsr2h,c
  9518   004A64  2ADE               	incf	postinc2,f,c
  9519   004A66  0E00               	movlw	0
  9520   004A68  22DD               	addwfc	postdec2,f,c
  9521   004A6A                     
  9522                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9523   004A6A  500D               	movf	read_prec_or_width@ap^0,w,c
  9524   004A6C  6ED9               	movwf	fsr2l,c
  9525   004A6E  6ADA               	clrf	fsr2h,c
  9526   004A70  0E02               	movlw	2
  9527   004A72  26DF               	addwf	indf2,f,c
  9528   004A74  5CDF               	subwf	indf2,w,c
  9529   004A76  6ED9               	movwf	fsr2l,c
  9530   004A78  6ADA               	clrf	fsr2h,c
  9531   004A7A  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9532   004A7E  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9533                           
  9534                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9535   004A82  EF6C  F025         	goto	l1529
  9536   004A86                     l7438:
  9537                           
  9538                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9539   004A86  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9540   004A8A  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9541   004A8E  0E00               	movlw	0
  9542   004A90  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9543   004A92  0E0A               	movlw	10
  9544   004A94  6E08               	movwf	___wmul@multiplicand^0,c
  9545   004A96  ECFC  F028         	call	___wmul	;wreg free
  9546   004A9A  500E               	movf	read_prec_or_width@c^0,w,c
  9547   004A9C  2406               	addwf	?___wmul^0,w,c
  9548   004A9E  6E0F               	movwf	read_prec_or_width@n^0,c
  9549   004AA0  0E00               	movlw	0
  9550   004AA2  2007               	addwfc	(?___wmul+1)^0,w,c
  9551   004AA4  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9552   004AA6                     
  9553                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9554   004AA6  500C               	movf	read_prec_or_width@fmt^0,w,c
  9555   004AA8  6ED9               	movwf	fsr2l,c
  9556   004AAA  6ADA               	clrf	fsr2h,c
  9557   004AAC  2ADE               	incf	postinc2,f,c
  9558   004AAE  0E00               	movlw	0
  9559   004AB0  22DD               	addwfc	postdec2,f,c
  9560   004AB2                     l7442:
  9561                           
  9562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9563   004AB2  500C               	movf	read_prec_or_width@fmt^0,w,c
  9564   004AB4  6ED9               	movwf	fsr2l,c
  9565   004AB6  6ADA               	clrf	fsr2h,c
  9566   004AB8  CFDE FFF6          	movff	postinc2,tblptrl
  9567   004ABC  CFDD FFF7          	movff	postdec2,tblptrh
  9568   004AC0                     	if	0	;tblptru may be non-zero
  9569   004AC0                     	endif
  9570   004AC0                     	if	0	;tblptru may be non-zero
  9571   004AC0                     	endif
  9572   004AC0  0008               	tblrd		*
  9573   004AC2  50F5               	movf	tablat,w,c
  9574   004AC4  0FD0               	addlw	208
  9575   004AC6  6E0E               	movwf	read_prec_or_width@c^0,c
  9576   004AC8  0E09               	movlw	9
  9577   004ACA  640E               	cpfsgt	read_prec_or_width@c^0,c
  9578   004ACC  EF6A  F025         	goto	u9021
  9579   004AD0  EF6C  F025         	goto	u9020
  9580   004AD4                     u9021:
  9581   004AD4  EF43  F025         	goto	l7438
  9582   004AD8                     u9020:
  9583   004AD8                     l1529:
  9584                           
  9585                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9586   004AD8  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9587   004ADC  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9588   004AE0  0012               	return		;funcret
  9589   004AE2                     __end_of_read_prec_or_width:
  9590                           	callstack 0
  9591                           
  9592 ;; *************** function ___wmul *****************
  9593 ;; Defined at:
  9594 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  multiplier      2    5[COMRAM] unsigned int 
  9597 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  product         2    9[COMRAM] unsigned int 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  2    5[COMRAM] unsigned int 
  9602 ;; Registers used:
  9603 ;;		wreg, status,2, status,0, prodl, prodh
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;Total ram usage:        6 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; Hardware stack levels required when called: 1
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_read_prec_or_width
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text35
  9624   0051F8                     __ptext35:
  9625                           	callstack 0
  9626   0051F8                     ___wmul:
  9627                           	callstack 24
  9628   0051F8  5006               	movf	___wmul@multiplier^0,w,c
  9629   0051FA  0208               	mulwf	___wmul@multiplicand^0,c
  9630   0051FC  CFF3 F00A          	movff	prodl,___wmul@product
  9631   005200  CFF4 F00B          	movff	prodh,___wmul@product+1
  9632   005204  5006               	movf	___wmul@multiplier^0,w,c
  9633   005206  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9634   005208  50F3               	movf	243,w,c
  9635   00520A  260B               	addwf	(___wmul@product+1)^0,f,c
  9636   00520C  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9637   00520E  0208               	mulwf	___wmul@multiplicand^0,c
  9638   005210  50F3               	movf	243,w,c
  9639   005212  260B               	addwf	(___wmul@product+1)^0,f,c
  9640   005214  C00A  F006         	movff	___wmul@product,?___wmul
  9641   005218  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9642   00521C  0012               	return		;funcret
  9643   00521E                     __end_of___wmul:
  9644                           	callstack 0
  9645                           
  9646 ;; *************** function _efgtoa *****************
  9647 ;; Defined at:
  9648 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9651 ;;		 -> NULL(0), sprintf@f(12), 
  9652 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9653 ;;  c               1   42[BANK0 ] unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;  u               4   85[BANK0 ] struct flui
  9656 ;;  g               4   79[BANK0 ] struct flui
  9657 ;;  l               4   74[BANK0 ] struct flui
  9658 ;;  h               4   70[BANK0 ] struct flui
  9659 ;;  ou              4   64[BANK0 ] struct flui
  9660 ;;  n               2   83[BANK0 ] int 
  9661 ;;  i               2   68[BANK0 ] int 
  9662 ;;  w               2   62[BANK0 ] int 
  9663 ;;  e               2   60[BANK0 ] int 
  9664 ;;  m               2   58[BANK0 ] int 
  9665 ;;  d               2   56[BANK0 ] int 
  9666 ;;  t               2   49[BANK0 ] int 
  9667 ;;  p               2   47[BANK0 ] int 
  9668 ;;  ne              2   45[BANK0 ] int 
  9669 ;;  sign            1   78[BANK0 ] unsigned char 
  9670 ;;  nmode           1   55[BANK0 ] unsigned char 
  9671 ;;  mode            1   54[BANK0 ] unsigned char 
  9672 ;;  pp              1   53[BANK0 ] unsigned char 
  9673 ;;  esign           1    0        unsigned char 
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      void 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9683 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;Total ram usage:       53 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; Hardware stack levels required when called: 5
  9690 ;; This function calls:
  9691 ;;		___fladd
  9692 ;;		___fldiv
  9693 ;;		___fleq
  9694 ;;		___flge
  9695 ;;		___flmul
  9696 ;;		___flneg
  9697 ;;		___flsub
  9698 ;;		___fltol
  9699 ;;		___fpclassifyf
  9700 ;;		_floorf
  9701 ;;		_labs
  9702 ;;		_memcpy
  9703 ;;		_pad
  9704 ;;		_strcpy
  9705 ;; This function is called by:
  9706 ;;		_vfpfcnvrt
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text36
  9711   000152                     __ptext36:
  9712                           	callstack 0
  9713   000152                     _efgtoa:
  9714                           	callstack 21
  9715   000152                     
  9716                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9717   000152  0E00               	movlw	0
  9718   000154  0100               	movlb	0	; () banked
  9719   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9720   000158                     
  9721                           ; BSR set to: 0
  9722                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9723   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9724   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9725   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9726   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9727   000168                     
  9728                           ; BSR set to: 0
  9729                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9730   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9731   00016A  EFBB  F000         	goto	u8540
  9732   00016E  EFB9  F000         	goto	u8541
  9733   000172                     u8541:
  9734   000172  EFCF  F000         	goto	l7152
  9735   000176                     u8540:
  9736   000176                     
  9737                           ; BSR set to: 0
  9738                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9739   000176  0E01               	movlw	1
  9740   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9741   00017A                     
  9742                           ; BSR set to: 0
  9743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9744   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9745   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9746   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9747   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9748   00018A  EC45  F028         	call	___flneg	;wreg free
  9749   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9750   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9751   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9752   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9753   00019E                     l7152:
  9754                           
  9755                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9756   00019E  0E00               	movlw	0
  9757   0001A0  0100               	movlb	0	; () banked
  9758   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9759   0001A4  0E00               	movlw	0
  9760   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9761   0001A8                     
  9762                           ; BSR set to: 0
  9763                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9764   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9765   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9766   0001B0                     
  9767                           ; BSR set to: 0
  9768                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9769   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9770   0001B2  B4D8               	btfsc	status,2,c
  9771   0001B4  EFDE  F000         	goto	u8551
  9772   0001B8  EFE0  F000         	goto	u8550
  9773   0001BC                     u8551:
  9774   0001BC  EFF4  F000         	goto	l7166
  9775   0001C0                     u8550:
  9776   0001C0                     
  9777                           ; BSR set to: 0
  9778                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9779   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9780   0001C2  A4D8               	btfss	status,2,c
  9781   0001C4  EFE6  F000         	goto	u8561
  9782   0001C8  EFE8  F000         	goto	u8560
  9783   0001CC                     u8561:
  9784   0001CC  EFEE  F000         	goto	l7162
  9785   0001D0                     u8560:
  9786   0001D0                     
  9787                           ; BSR set to: 0
  9788   0001D0  0E00               	movlw	0
  9789   0001D2  6F94               	movwf	(_efgtoa$4070+1)& (0+255),b
  9790   0001D4  0E2B               	movlw	43
  9791   0001D6  6F93               	movwf	_efgtoa$4070& (0+255),b
  9792   0001D8  EFF2  F000         	goto	l7164
  9793   0001DC                     l7162:
  9794                           
  9795                           ; BSR set to: 0
  9796   0001DC  0E00               	movlw	0
  9797   0001DE  6F94               	movwf	(_efgtoa$4070+1)& (0+255),b
  9798   0001E0  0E2D               	movlw	45
  9799   0001E2  6F93               	movwf	_efgtoa$4070& (0+255),b
  9800   0001E4                     l7164:
  9801                           
  9802                           ; BSR set to: 0
  9803   0001E4  C093  F0AE         	movff	_efgtoa$4070,efgtoa@sign
  9804   0001E8                     l7166:
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9808   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9809   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9810   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9811   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9812   0001F8  EC3E  F022         	call	___fpclassifyf	;wreg free
  9813   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9814   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9815   000200  A4D8               	btfss	status,2,c
  9816   000202  EF05  F001         	goto	u8571
  9817   000206  EF07  F001         	goto	u8570
  9818   00020A                     u8571:
  9819   00020A  EF3A  F001         	goto	l7184
  9820   00020E                     u8570:
  9821   00020E                     
  9822                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9823   00020E  0100               	movlb	0	; () banked
  9824   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9825   000212  B4D8               	btfsc	status,2,c
  9826   000214  EF0E  F001         	goto	u8581
  9827   000218  EF10  F001         	goto	u8580
  9828   00021C                     u8581:
  9829   00021C  EF19  F001         	goto	l7176
  9830   000220                     u8580:
  9831   000220                     
  9832                           ; BSR set to: 0
  9833                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9834   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9835   000224                     
  9836                           ; BSR set to: 0
  9837                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9838   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9839   000226  A0D8               	btfss	status,0,c
  9840   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9841   00022A                     
  9842                           ; BSR set to: 0
  9843                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9844   00022A  0E00               	movlw	0
  9845   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9846   00022E  0E01               	movlw	1
  9847   000230  6FB3               	movwf	efgtoa@n& (0+255),b
  9848   000232                     l7176:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  9852   000232  0E27               	movlw	low _dbuf
  9853   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
  9854   000236  6E06               	movwf	strcpy@dest^0,c
  9855   000238  0E01               	movlw	high _dbuf
  9856   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9857   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
  9858   00023E  0EEB               	movlw	low STR_36
  9859   000240  6E08               	movwf	strcpy@src^0,c
  9860   000242  0EFF               	movlw	high STR_36
  9861   000244  6E09               	movwf	(strcpy@src+1)^0,c
  9862   000246  EC62  F028         	call	_strcpy	;wreg free
  9863   00024A                     l7178:
  9864                           
  9865                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9866   00024A  0100               	movlb	0	; () banked
  9867   00024C  0EFD               	movlw	253
  9868   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
  9869   000250  0EFF               	movlw	255
  9870   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9871   000254                     
  9872                           ; BSR set to: 0
  9873                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  9874   000254  C084  F017         	movff	efgtoa@fp,pad@fp
  9875   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9876   00025C  0E27               	movlw	low _dbuf
  9877   00025E  6E19               	movwf	pad@buf^0,c
  9878   000260  0E01               	movlw	high _dbuf
  9879   000262  6E1A               	movwf	(pad@buf+1)^0,c
  9880   000264  C09E  F01B         	movff	efgtoa@w,pad@p
  9881   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9882   00026C  ECC6  F025         	call	_pad	;wreg free
  9883   000270  EFA5  F005         	goto	l1452
  9884   000274                     l7184:
  9885                           
  9886                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  9887   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9888   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9889   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9890   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9891   000284  EC3E  F022         	call	___fpclassifyf	;wreg free
  9892   000288  5006               	movf	?___fpclassifyf^0,w,c
  9893   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9894   00028C  A4D8               	btfss	status,2,c
  9895   00028E  EF4B  F001         	goto	u8591
  9896   000292  EF4D  F001         	goto	u8590
  9897   000296                     u8591:
  9898   000296  EF6D  F001         	goto	l7202
  9899   00029A                     u8590:
  9900   00029A                     
  9901                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  9902   00029A  0100               	movlb	0	; () banked
  9903   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
  9904   00029E  B4D8               	btfsc	status,2,c
  9905   0002A0  EF54  F001         	goto	u8601
  9906   0002A4  EF56  F001         	goto	u8600
  9907   0002A8                     u8601:
  9908   0002A8  EF5F  F001         	goto	l7194
  9909   0002AC                     u8600:
  9910   0002AC                     
  9911                           ; BSR set to: 0
  9912                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  9913   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9914   0002B0                     
  9915                           ; BSR set to: 0
  9916                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  9917   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
  9918   0002B2  A0D8               	btfss	status,0,c
  9919   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9920   0002B6                     
  9921                           ; BSR set to: 0
  9922                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  9923   0002B6  0E00               	movlw	0
  9924   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9925   0002BA  0E01               	movlw	1
  9926   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
  9927   0002BE                     l7194:
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  9931   0002BE  0E27               	movlw	low _dbuf
  9932   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
  9933   0002C2  6E06               	movwf	strcpy@dest^0,c
  9934   0002C4  0E01               	movlw	high _dbuf
  9935   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9936   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
  9937   0002CA  0EEF               	movlw	low STR_39
  9938   0002CC  6E08               	movwf	strcpy@src^0,c
  9939   0002CE  0EFF               	movlw	high STR_39
  9940   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
  9941   0002D2  EC62  F028         	call	_strcpy	;wreg free
  9942   0002D6  EF25  F001         	goto	l7178
  9943   0002DA                     l7202:
  9944                           
  9945                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9946   0002DA  0E00               	movlw	0
  9947   0002DC  0100               	movlb	0	; () banked
  9948   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
  9949   0002E0  0E00               	movlw	0
  9950   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9951   0002E4  0E80               	movlw	128
  9952   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9953   0002E8  0E3F               	movlw	63
  9954   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9955                           
  9956                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9957   0002EC  0E00               	movlw	0
  9958   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9959   0002F0  0E00               	movlw	0
  9960   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
  9961   0002F4                     
  9962                           ; BSR set to: 0
  9963                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  9964   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  9965   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9966   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9967   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9968   000304  0E00               	movlw	0
  9969   000306  6E0A               	movwf	___fleq@ff2^0,c
  9970   000308  0E00               	movlw	0
  9971   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9972   00030C  0E00               	movlw	0
  9973   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9974   000310  0E00               	movlw	0
  9975   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9976   000314  EC71  F025         	call	___fleq	;wreg free
  9977   000318  B0D8               	btfsc	status,0,c
  9978   00031A  EF91  F001         	goto	u8611
  9979   00031E  EF93  F001         	goto	u8610
  9980   000322                     u8611:
  9981   000322  EF72  F002         	goto	l1455
  9982   000326                     u8610:
  9983   000326  EFA0  F001         	goto	l7210
  9984   00032A                     l1457:
  9985                           
  9986                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9987   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  9988   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  9989   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  9990   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  9991   00033A                     
  9992                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9993   00033A  0100               	movlb	0	; () banked
  9994   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  9995   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  9996   000340                     l7210:
  9997                           
  9998                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9999   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10000   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10001   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10002   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10003   000350  0E00               	movlw	0
 10004   000352  6E18               	movwf	___flmul@a^0,c
 10005   000354  0E00               	movlw	0
 10006   000356  6E19               	movwf	(___flmul@a+1)^0,c
 10007   000358  0E20               	movlw	32
 10008   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
 10009   00035C  0E41               	movlw	65
 10010   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
 10011   000360  EC3A  F00D         	call	___flmul	;wreg free
 10012   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10013   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10014   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10015   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10016   000374  0100               	movlb	0	; () banked
 10017   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
 10018   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10019   00037A  6E06               	movwf	labs@a^0,c
 10020   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
 10021   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10022   000380  6E07               	movwf	(labs@a+1)^0,c
 10023   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
 10024   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10025   000386  6E08               	movwf	(labs@a+2)^0,c
 10026   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
 10027   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10028   00038C  6E09               	movwf	(labs@a+3)^0,c
 10029   00038E  EC1B  F027         	call	_labs	;wreg free
 10030   000392  BE09               	btfsc	(?_labs+3)^0,7,c
 10031   000394  EFD7  F001         	goto	u8621
 10032   000398  5009               	movf	(?_labs+3)^0,w,c
 10033   00039A  1008               	iorwf	(?_labs+2)^0,w,c
 10034   00039C  1007               	iorwf	(?_labs+1)^0,w,c
 10035   00039E  E109               	bnz	u8620
 10036   0003A0  0E02               	movlw	2
 10037   0003A2  5C06               	subwf	?_labs^0,w,c
 10038   0003A4  A0D8               	btfss	status,0,c
 10039   0003A6  EFD7  F001         	goto	u8621
 10040   0003AA  EFD9  F001         	goto	u8620
 10041   0003AE                     u8621:
 10042   0003AE  EF95  F001         	goto	l1457
 10043   0003B2                     u8620:
 10044   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
 10045   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
 10046   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
 10047   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
 10048   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
 10049   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
 10050   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
 10051   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
 10052   0003D2  ECBC  F021         	call	___flge	;wreg free
 10053   0003D6  A0D8               	btfss	status,0,c
 10054   0003D8  EFF0  F001         	goto	u8631
 10055   0003DC  EFF2  F001         	goto	u8630
 10056   0003E0                     u8631:
 10057   0003E0  EF95  F001         	goto	l1457
 10058   0003E4                     u8630:
 10059   0003E4                     
 10060                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
 10061   0003E4  0100               	movlb	0	; () banked
 10062   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
 10063   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10064   0003EA  6E06               	movwf	labs@a^0,c
 10065   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10066   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10067   0003F0  6E07               	movwf	(labs@a+1)^0,c
 10068   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10069   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10070   0003F6  6E08               	movwf	(labs@a+2)^0,c
 10071   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10072   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10073   0003FC  6E09               	movwf	(labs@a+3)^0,c
 10074   0003FE  EC1B  F027         	call	_labs	;wreg free
 10075   000402  BE09               	btfsc	(?_labs+3)^0,7,c
 10076   000404  EF11  F002         	goto	u8640
 10077   000408  5009               	movf	(?_labs+3)^0,w,c
 10078   00040A  1008               	iorwf	(?_labs+2)^0,w,c
 10079   00040C  1007               	iorwf	(?_labs+1)^0,w,c
 10080   00040E  E107               	bnz	u8641
 10081   000410  0E02               	movlw	2
 10082   000412  5C06               	subwf	?_labs^0,w,c
 10083   000414  B0D8               	btfsc	status,0,c
 10084   000416  EF0F  F002         	goto	u8641
 10085   00041A  EF11  F002         	goto	u8640
 10086   00041E                     u8641:
 10087   00041E  EF59  F002         	goto	l7228
 10088   000422                     u8640:
 10089   000422                     l7218:
 10090                           
 10091                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10092   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
 10093   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
 10094   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
 10095   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
 10096                           
 10097                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
 10098   000432  EF72  F002         	goto	l1455
 10099   000436                     l7220:
 10100                           
 10101                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
 10102   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10103   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10104   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10105   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10106   000446  0E00               	movlw	0
 10107   000448  6E31               	movwf	___fldiv@a^0,c
 10108   00044A  0E00               	movlw	0
 10109   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
 10110   00044E  0E20               	movlw	32
 10111   000450  6E33               	movwf	(___fldiv@a+2)^0,c
 10112   000452  0E41               	movlw	65
 10113   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10114   000456  EC2A  F013         	call	___fldiv	;wreg free
 10115   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10116   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10117   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10118   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10119   00046A                     
 10120                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10121   00046A  0100               	movlb	0	; () banked
 10122   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10123   00046E  A0D8               	btfss	status,0,c
 10124   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10125   000472                     
 10126                           ; BSR set to: 0
 10127                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10128   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10129   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10130   000476  6E06               	movwf	labs@a^0,c
 10131   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10132   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10133   00047C  6E07               	movwf	(labs@a+1)^0,c
 10134   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10135   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10136   000482  6E08               	movwf	(labs@a+2)^0,c
 10137   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10138   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10139   000488  6E09               	movwf	(labs@a+3)^0,c
 10140   00048A  EC1B  F027         	call	_labs	;wreg free
 10141   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10142   000490  EF57  F002         	goto	u8650
 10143   000494  5009               	movf	(?_labs+3)^0,w,c
 10144   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10145   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10146   00049A  E107               	bnz	u8651
 10147   00049C  0E02               	movlw	2
 10148   00049E  5C06               	subwf	?_labs^0,w,c
 10149   0004A0  B0D8               	btfsc	status,0,c
 10150   0004A2  EF55  F002         	goto	u8651
 10151   0004A6  EF57  F002         	goto	u8650
 10152   0004AA                     u8651:
 10153   0004AA  EF59  F002         	goto	l7228
 10154   0004AE                     u8650:
 10155   0004AE  EF11  F002         	goto	l7218
 10156   0004B2                     l7228:
 10157                           
 10158                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10159   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10160   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10161   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10162   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10163   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10164   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10165   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10166   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10167   0004D2  ECBC  F021         	call	___flge	;wreg free
 10168   0004D6  A0D8               	btfss	status,0,c
 10169   0004D8  EF70  F002         	goto	u8661
 10170   0004DC  EF72  F002         	goto	u8660
 10171   0004E0                     u8661:
 10172   0004E0  EF1B  F002         	goto	l7220
 10173   0004E4                     u8660:
 10174   0004E4                     l1455:
 10175                           
 10176                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10177   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10178                           
 10179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10180   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10181   0004EC                     
 10182                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10183   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10184   0004EE  EF7B  F002         	goto	u8671
 10185   0004F2  EF7D  F002         	goto	u8670
 10186   0004F6                     u8671:
 10187   0004F6  EF83  F002         	goto	l7234
 10188   0004FA                     u8670:
 10189   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10190   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10191   000502  EF88  F002         	goto	l7236
 10192   000506                     l7234:
 10193   000506  0E00               	movlw	0
 10194   000508  0100               	movlb	0	; () banked
 10195   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10196   00050C  0E06               	movlw	6
 10197   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10198   000510                     l7236:
 10199                           
 10200                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10201   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10202   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10203   000518                     
 10204                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10205   000518  0100               	movlb	0	; () banked
 10206   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10207   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10208   00051E                     
 10209                           ; BSR set to: 0
 10210                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10211   00051E  0E66               	movlw	102
 10212   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10213   000522  A4D8               	btfss	status,2,c
 10214   000524  EF96  F002         	goto	u8681
 10215   000528  EF98  F002         	goto	u8680
 10216   00052C                     u8681:
 10217   00052C  EFB8  F002         	goto	l7250
 10218   000530                     u8680:
 10219   000530                     
 10220                           ; BSR set to: 0
 10221                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10222   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10223   000532  EF9F  F002         	goto	u8690
 10224   000536  EF9D  F002         	goto	u8691
 10225   00053A                     u8691:
 10226   00053A  EFAB  F002         	goto	l7246
 10227   00053E                     u8690:
 10228   00053E                     
 10229                           ; BSR set to: 0
 10230                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10231   00053E  0E00               	movlw	0
 10232   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10233   000542  0E00               	movlw	0
 10234   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10235   000546  0E80               	movlw	128
 10236   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10237   00054A  0E3F               	movlw	63
 10238   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10239                           
 10240                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10241   00054E  0E00               	movlw	0
 10242   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10243   000552  0E00               	movlw	0
 10244   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10245   000556                     l7246:
 10246                           
 10247                           ; BSR set to: 0
 10248                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10249   000556  0E67               	movlw	103
 10250   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10251   00055A  B4D8               	btfsc	status,2,c
 10252   00055C  EFB2  F002         	goto	u8701
 10253   000560  EFB4  F002         	goto	u8700
 10254   000564                     u8701:
 10255   000564  EFB8  F002         	goto	l7250
 10256   000568                     u8700:
 10257   000568                     
 10258                           ; BSR set to: 0
 10259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10260   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10261   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10262   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10263   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10264   000570                     l7250:
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10268   000570  0E00               	movlw	0
 10269   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10270   000574  0E00               	movlw	0
 10271   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10272   000578                     
 10273                           ; BSR set to: 0
 10274                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10275   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10276   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10277   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10278   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10279   000588                     
 10280                           ; BSR set to: 0
 10281                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10282   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10283   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10284   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10285   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10286                           
 10287                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10288   000598  EF49  F003         	goto	l7264
 10289   00059C                     l7256:
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10293   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10294   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10295   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10296   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10297   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10298   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10299   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10300   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10301   0005BC  EC2A  F013         	call	___fldiv	;wreg free
 10302   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10303   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10304   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10305   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10306   0005D0  EC26  F019         	call	_floorf	;wreg free
 10307   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10308   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10309   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10310   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10311                           
 10312                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10313   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10314   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10315   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10316   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10317   0005F4  EC38  F021         	call	___fltol	;wreg free
 10318   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10319   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10320   000600                     
 10321                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10322   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10323   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10324   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10325   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10326   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10327   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10328   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10329   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10330   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10331   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10332   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10333   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10334   000630  EC3A  F00D         	call	___flmul	;wreg free
 10335   000634  C014  F068         	movff	?___flmul,___flsub@a
 10336   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10337   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10338   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10339   000644  ECBD  F027         	call	___flsub	;wreg free
 10340   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10341   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10342   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10343   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10344   000658                     
 10345                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10346   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10347   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10348   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10349   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10350   000668  0E00               	movlw	0
 10351   00066A  6E31               	movwf	___fldiv@a^0,c
 10352   00066C  0E00               	movlw	0
 10353   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10354   000670  0E20               	movlw	32
 10355   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10356   000674  0E41               	movlw	65
 10357   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10358   000678  EC2A  F013         	call	___fldiv	;wreg free
 10359   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10360   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10361   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10362   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10363   00068C                     
 10364                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10365   00068C  0100               	movlb	0	; () banked
 10366   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10367   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10368   000692                     l7264:
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10372   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10373   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10374   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10375   000698  0A80               	xorlw	128
 10376   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10377   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10378   00069E  0A80               	xorlw	128
 10379   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10380   0006A2  A0D8               	btfss	status,0,c
 10381   0006A4  EF56  F003         	goto	u8711
 10382   0006A8  EF58  F003         	goto	u8710
 10383   0006AC                     u8711:
 10384   0006AC  EFCE  F002         	goto	l7256
 10385   0006B0                     u8710:
 10386   0006B0                     
 10387                           ; BSR set to: 0
 10388                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10389   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10390   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10391   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10392   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10393   0006C0  0E00               	movlw	0
 10394   0006C2  6E18               	movwf	___flmul@a^0,c
 10395   0006C4  0E00               	movlw	0
 10396   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10397   0006C8  0EA0               	movlw	160
 10398   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10399   0006CC  0E40               	movlw	64
 10400   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10401   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10402   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10403   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10404   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10405   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10406   0006E4                     
 10407                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10408   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10409   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10410   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10411   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10412   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10413   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10414   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10415   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10416   000704  ECBC  F021         	call	___flge	;wreg free
 10417   000708  B0D8               	btfsc	status,0,c
 10418   00070A  EF89  F003         	goto	u8721
 10419   00070E  EF8B  F003         	goto	u8720
 10420   000712                     u8721:
 10421   000712  EF96  F003         	goto	l7272
 10422   000716                     u8720:
 10423   000716                     
 10424                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10425   000716  0E00               	movlw	0
 10426   000718  0100               	movlb	0	; () banked
 10427   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10428   00071C  0E00               	movlw	0
 10429   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10430   000720  0E00               	movlw	0
 10431   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10432   000724  0E00               	movlw	0
 10433   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10434                           
 10435                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10436   000728  EFBF  F003         	goto	l7278
 10437   00072C                     l7272:
 10438                           
 10439                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10440   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10441   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10442   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10443   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10444   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10445   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10446   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10447   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10448   00074C  EC71  F025         	call	___fleq	;wreg free
 10449   000750  A0D8               	btfss	status,0,c
 10450   000752  EFAD  F003         	goto	u8731
 10451   000756  EFAF  F003         	goto	u8730
 10452   00075A                     u8731:
 10453   00075A  EFBF  F003         	goto	l7278
 10454   00075E                     u8730:
 10455   00075E  0100               	movlb	0	; () banked
 10456   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10457   000762  EFB5  F003         	goto	u8741
 10458   000766  EFB7  F003         	goto	u8740
 10459   00076A                     u8741:
 10460   00076A  EFBF  F003         	goto	l7278
 10461   00076E                     u8740:
 10462   00076E                     
 10463                           ; BSR set to: 0
 10464                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10465   00076E  0E00               	movlw	0
 10466   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10467   000772  0E00               	movlw	0
 10468   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10469   000776  0E00               	movlw	0
 10470   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10471   00077A  0E00               	movlw	0
 10472   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10473   00077E                     l7278:
 10474                           
 10475                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10476   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10477   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10478   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10479   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10480   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10481   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10482   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10483   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10484   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10485   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10486   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10487   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10488   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10489   0007B2                     
 10490                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10491   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10492   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10493   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10494   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10495   0007C2  0E00               	movlw	0
 10496   0007C4  6E18               	movwf	___flmul@a^0,c
 10497   0007C6  0E00               	movlw	0
 10498   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10499   0007CA  0E20               	movlw	32
 10500   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10501   0007CE  0E41               	movlw	65
 10502   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10503   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10504   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10505   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10506   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10507   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10508   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10509   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10510   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10511   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10512   0007F6  ECBC  F021         	call	___flge	;wreg free
 10513   0007FA  A0D8               	btfss	status,0,c
 10514   0007FC  EF02  F004         	goto	u8751
 10515   000800  EF04  F004         	goto	u8750
 10516   000804                     u8751:
 10517   000804  EF2D  F004         	goto	l7290
 10518   000808                     u8750:
 10519   000808                     
 10520                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10521   000808  0100               	movlb	0	; () banked
 10522   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10523   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10524   00080E                     
 10525                           ; BSR set to: 0
 10526                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10527   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10528   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10529   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10530   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10531   00081E  0E00               	movlw	0
 10532   000820  6E18               	movwf	___flmul@a^0,c
 10533   000822  0E00               	movlw	0
 10534   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10535   000826  0E20               	movlw	32
 10536   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10537   00082A  0E41               	movlw	65
 10538   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10539   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10540   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10541   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10542   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10543   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10544   000842                     
 10545                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10546   000842  0E66               	movlw	102
 10547   000844  0100               	movlb	0	; () banked
 10548   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10549   000848  A4D8               	btfss	status,2,c
 10550   00084A  EF29  F004         	goto	u8761
 10551   00084E  EF2B  F004         	goto	u8760
 10552   000852                     u8761:
 10553   000852  EF2D  F004         	goto	l7290
 10554   000856                     u8760:
 10555   000856                     
 10556                           ; BSR set to: 0
 10557                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10558   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10559   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10560   00085A                     l7290:
 10561                           
 10562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10563   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10564   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10565   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10566   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10567   00086A                     
 10568                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10569   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10570   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10571   000872                     
 10572                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10573   000872  0E00               	movlw	0
 10574   000874  0100               	movlb	0	; () banked
 10575   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10576   000878                     
 10577                           ; BSR set to: 0
 10578                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10579   000878  0E00               	movlw	0
 10580   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10581   00087C  0E00               	movlw	0
 10582   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10583   000880                     
 10584                           ; BSR set to: 0
 10585                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10586   000880  0E00               	movlw	0
 10587   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10588   000884  0E00               	movlw	0
 10589   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10590                           
 10591                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10592   000888  EF2B  F005         	goto	l7340
 10593   00088C                     l7300:
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10597   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10598   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10599   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10600   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10601   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10602   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10603   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10604   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10605   0008AC  EC2A  F013         	call	___fldiv	;wreg free
 10606   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10607   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10608   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10609   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10610   0008C0  EC26  F019         	call	_floorf	;wreg free
 10611   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10612   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10613   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10614   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10615                           
 10616                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10617   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10618   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10619   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10620   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10621   0008E4  EC38  F021         	call	___fltol	;wreg free
 10622   0008E8  0100               	movlb	0	; () banked
 10623   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10624   0008EC  EF83  F004         	goto	u8770
 10625   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10626   0008F2  E107               	bnz	u8771
 10627   0008F4  0E0A               	movlw	10
 10628   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10629   0008F8  B0D8               	btfsc	status,0,c
 10630   0008FA  EF81  F004         	goto	u8771
 10631   0008FE  EF83  F004         	goto	u8770
 10632   000902                     u8771:
 10633   000902  EF93  F004         	goto	l7304
 10634   000906                     u8770:
 10635   000906                     
 10636                           ; BSR set to: 0
 10637   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10638   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10639   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10640   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10641   000916  EC38  F021         	call	___fltol	;wreg free
 10642   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10643   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10644   000922  EF97  F004         	goto	l1485
 10645   000926                     l7304:
 10646                           
 10647                           ; BSR set to: 0
 10648   000926  0E00               	movlw	0
 10649   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10650   00092A  0E09               	movlw	9
 10651   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10652   00092E                     l1485:
 10653                           
 10654                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10655   00092E  0100               	movlb	0	; () banked
 10656   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10657   000932  A4D8               	btfss	status,2,c
 10658   000934  EF9E  F004         	goto	u8781
 10659   000938  EFA0  F004         	goto	u8780
 10660   00093C                     u8781:
 10661   00093C  EFC8  F004         	goto	l7324
 10662   000940                     u8780:
 10663   000940                     
 10664                           ; BSR set to: 0
 10665   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10666   000942  EFA7  F004         	goto	u8790
 10667   000946  EFA5  F004         	goto	u8791
 10668   00094A                     u8791:
 10669   00094A  EFC8  F004         	goto	l7324
 10670   00094E                     u8790:
 10671   00094E                     
 10672                           ; BSR set to: 0
 10673                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10674   00094E  0E27               	movlw	low _dbuf
 10675   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10676   000952  6ED9               	movwf	fsr2l,c
 10677   000954  0E01               	movlw	high _dbuf
 10678   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10679   000958  6EDA               	movwf	fsr2h,c
 10680   00095A  0E2E               	movlw	46
 10681   00095C  6EDF               	movwf	indf2,c
 10682   00095E                     
 10683                           ; BSR set to: 0
 10684   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10685   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10686   000962                     
 10687                           ; BSR set to: 0
 10688                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10689   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10690   000964  A0D8               	btfss	status,0,c
 10691   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10692   000968                     
 10693                           ; BSR set to: 0
 10694                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10695   000968  0E01               	movlw	1
 10696   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10697   00096C  EFC8  F004         	goto	l7324
 10698   000970                     l7316:
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10702   000970  0E27               	movlw	low _dbuf
 10703   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10704   000974  6ED9               	movwf	fsr2l,c
 10705   000976  0E01               	movlw	high _dbuf
 10706   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10707   00097A  6EDA               	movwf	fsr2h,c
 10708   00097C  0E30               	movlw	48
 10709   00097E  6EDF               	movwf	indf2,c
 10710   000980                     
 10711                           ; BSR set to: 0
 10712   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10713   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10714   000984                     
 10715                           ; BSR set to: 0
 10716                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10717   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10718   000986  A0D8               	btfss	status,0,c
 10719   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10720   00098A                     
 10721                           ; BSR set to: 0
 10722                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10723   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10724   00098C  A0D8               	btfss	status,0,c
 10725   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10726   000990                     l7324:
 10727                           
 10728                           ; BSR set to: 0
 10729                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10730   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10731   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10732   000994  A4D8               	btfss	status,2,c
 10733   000996  EFCF  F004         	goto	u8801
 10734   00099A  EFD1  F004         	goto	u8800
 10735   00099E                     u8801:
 10736   00099E  EFB8  F004         	goto	l7316
 10737   0009A2                     u8800:
 10738   0009A2                     
 10739                           ; BSR set to: 0
 10740                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10741   0009A2  0E27               	movlw	low _dbuf
 10742   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10743   0009A6  6ED9               	movwf	fsr2l,c
 10744   0009A8  0E01               	movlw	high _dbuf
 10745   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10746   0009AC  6EDA               	movwf	fsr2h,c
 10747   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10748   0009B0  0F30               	addlw	48
 10749   0009B2  6EDF               	movwf	indf2,c
 10750   0009B4                     
 10751                           ; BSR set to: 0
 10752   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10753   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10754   0009B8                     
 10755                           ; BSR set to: 0
 10756                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10757   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10758   0009BA  A0D8               	btfss	status,0,c
 10759   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10760   0009BE                     
 10761                           ; BSR set to: 0
 10762                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10763   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10764   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10765   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10766   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10767   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10768   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10769   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10770   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10771   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10772   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10773   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10774   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10775   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10776   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10777   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10778   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10779   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10780   000A02  ECBD  F027         	call	___flsub	;wreg free
 10781   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10782   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10783   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10784   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10785   000A16                     
 10786                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10787   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10788   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10789   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10790   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10791   000A26  0E00               	movlw	0
 10792   000A28  6E31               	movwf	___fldiv@a^0,c
 10793   000A2A  0E00               	movlw	0
 10794   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10795   000A2E  0E20               	movlw	32
 10796   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10797   000A32  0E41               	movlw	65
 10798   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10799   000A36  EC2A  F013         	call	___fldiv	;wreg free
 10800   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10801   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10802   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10803   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10804   000A4A                     
 10805                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10806   000A4A  0100               	movlb	0	; () banked
 10807   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10808   000A4E  A0D8               	btfss	status,0,c
 10809   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10810   000A52                     
 10811                           ; BSR set to: 0
 10812                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10813   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10814   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10815   000A56                     l7340:
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10819   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10820   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10821   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10822   000A5C  0A80               	xorlw	128
 10823   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10824   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10825   000A62  0A80               	xorlw	128
 10826   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10827   000A66  B0D8               	btfsc	status,0,c
 10828   000A68  EF38  F005         	goto	u8811
 10829   000A6C  EF3A  F005         	goto	u8810
 10830   000A70                     u8811:
 10831   000A70  EF48  F005         	goto	l7344
 10832   000A74                     u8810:
 10833   000A74                     
 10834                           ; BSR set to: 0
 10835   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10836   000A76  EF46  F005         	goto	u8821
 10837   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10838   000A7C  E109               	bnz	u8820
 10839   000A7E  0E4B               	movlw	75
 10840   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10841   000A82  A0D8               	btfss	status,0,c
 10842   000A84  EF46  F005         	goto	u8821
 10843   000A88  EF48  F005         	goto	u8820
 10844   000A8C                     u8821:
 10845   000A8C  EF46  F004         	goto	l7300
 10846   000A90                     u8820:
 10847   000A90                     l7344:
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 10851   000A90  0E00               	movlw	0
 10852   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10853   000A94  0E4F               	movlw	79
 10854   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 10855   000A98                     
 10856                           ; BSR set to: 0
 10857                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 10858   000A98  0E27               	movlw	low _dbuf
 10859   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 10860   000A9C  6ED9               	movwf	fsr2l,c
 10861   000A9E  0E01               	movlw	high _dbuf
 10862   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10863   000AA2  6EDA               	movwf	fsr2h,c
 10864   000AA4  6ADF               	clrf	indf2,c
 10865   000AA6                     
 10866                           ; BSR set to: 0
 10867                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 10868   000AA6  0E27               	movlw	low _dbuf
 10869   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 10870   000AAA  0E01               	movlw	high _dbuf
 10871   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 10872   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 10873   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 10874   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10875   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 10876   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 10877   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 10878   000ABA  6E06               	movwf	memcpy@d1^0,c
 10879   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10880   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 10881   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 10882   000AC2  0E27               	movlw	low _dbuf
 10883   000AC4  6E08               	movwf	memcpy@s1^0,c
 10884   000AC6  0E01               	movlw	high _dbuf
 10885   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 10886   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 10887   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 10888   000AD2  EC70  F027         	call	_memcpy	;wreg free
 10889   000AD6                     
 10890                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10891   000AD6  0100               	movlb	0	; () banked
 10892   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 10893   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10894   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 10895   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10896   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 10897   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10898   000AE4                     
 10899                           ; BSR set to: 0
 10900                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 10901   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 10902   000AE6  A4D8               	btfss	status,2,c
 10903   000AE8  EF78  F005         	goto	u8831
 10904   000AEC  EF7B  F005         	goto	u8830
 10905   000AF0                     u8831:
 10906   000AF0  0E01               	movlw	1
 10907   000AF2  EF7C  F005         	goto	u8840
 10908   000AF6                     u8830:
 10909   000AF6  0E00               	movlw	0
 10910   000AF8                     u8840:
 10911   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 10912   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 10913   000AFC                     
 10914                           ; BSR set to: 0
 10915                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10916   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 10917   000AFE  B4D8               	btfsc	status,2,c
 10918   000B00  EF84  F005         	goto	u8851
 10919   000B04  EF86  F005         	goto	u8850
 10920   000B08                     u8851:
 10921   000B08  EF91  F005         	goto	l7358
 10922   000B0C                     u8850:
 10923   000B0C                     
 10924                           ; BSR set to: 0
 10925                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 10926   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 10927   000B0E  A0D8               	btfss	status,0,c
 10928   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 10929   000B12  0E27               	movlw	low _dbuf
 10930   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 10931   000B16  6ED9               	movwf	fsr2l,c
 10932   000B18  0E01               	movlw	high _dbuf
 10933   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10934   000B1C  6EDA               	movwf	fsr2h,c
 10935   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 10936   000B22                     l7358:
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10940   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 10941   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 10942   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10943   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 10944   000B2A                     
 10945                           ; BSR set to: 0
 10946                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 10947   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 10948   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10949   000B32  0E27               	movlw	low _dbuf
 10950   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 10951   000B36  6E19               	movwf	pad@buf^0,c
 10952   000B38  0E01               	movlw	high _dbuf
 10953   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10954   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 10955   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 10956   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10957   000B46  ECC6  F025         	call	_pad	;wreg free
 10958   000B4A                     l1452:
 10959   000B4A  0012               	return		;funcret
 10960   000B4C                     __end_of_efgtoa:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _strcpy *****************
 10964 ;; Defined at:
 10965 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10968 ;;		 -> dbuf(80), 
 10969 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10970 ;;		 -> STR_39(4), STR_36(4), 
 10971 ;; Auto vars:     Size  Location     Type
 10972 ;;  d               2    9[COMRAM] PTR unsigned char 
 10973 ;;		 -> dbuf(80), 
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  2    5[COMRAM] PTR unsigned char 
 10976 ;; Registers used:
 10977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10987 ;;Total ram usage:        6 bytes
 10988 ;; Hardware stack levels used: 1
 10989 ;; Hardware stack levels required when called: 1
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		_efgtoa
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text37
 10998   0050C4                     __ptext37:
 10999                           	callstack 0
 11000   0050C4                     _strcpy:
 11001                           	callstack 24
 11002   0050C4  C006  F00A         	movff	strcpy@dest,strcpy@d
 11003   0050C8  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 11004   0050CC                     l7048:
 11005   0050CC  C008  FFF6         	movff	strcpy@src,tblptrl
 11006   0050D0  C009  FFF7         	movff	strcpy@src+1,tblptrh
 11007   0050D4  4A08               	infsnz	strcpy@src^0,f,c
 11008   0050D6  2A09               	incf	(strcpy@src+1)^0,f,c
 11009   0050D8                     	if	0	;tblptru may be non-zero
 11010   0050D8                     	endif
 11011   0050D8                     	if	0	;tblptru may be non-zero
 11012   0050D8                     	endif
 11013   0050D8  C00A  FFD9         	movff	strcpy@d,fsr2l
 11014   0050DC  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 11015   0050E0  4A0A               	infsnz	strcpy@d^0,f,c
 11016   0050E2  2A0B               	incf	(strcpy@d+1)^0,f,c
 11017   0050E4  0008               	tblrd		*
 11018   0050E6  CFF5 FFDF          	movff	tablat,indf2
 11019   0050EA  50DF               	movf	indf2,w,c
 11020   0050EC  A4D8               	btfss	status,2,c
 11021   0050EE  EF7B  F028         	goto	u8321
 11022   0050F2  EF7D  F028         	goto	u8320
 11023   0050F6                     u8321:
 11024   0050F6  EF66  F028         	goto	l7048
 11025   0050FA                     u8320:
 11026   0050FA  0012               	return		;funcret
 11027   0050FC                     __end_of_strcpy:
 11028                           	callstack 0
 11029                           
 11030 ;; *************** function _memcpy *****************
 11031 ;; Defined at:
 11032 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  d1              2    5[COMRAM] PTR void 
 11035 ;;		 -> dbuf(80), 
 11036 ;;  s1              2    7[COMRAM] PTR const void 
 11037 ;;		 -> dbuf(80), 
 11038 ;;  n               2    9[COMRAM] unsigned int 
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;  s               2   14[COMRAM] PTR const unsigned char 
 11041 ;;		 -> dbuf(80), 
 11042 ;;  d               2   12[COMRAM] PTR unsigned char 
 11043 ;;		 -> dbuf(80), 
 11044 ;;  tmp             1   11[COMRAM] unsigned char 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  2    5[COMRAM] PTR void 
 11047 ;; Registers used:
 11048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11054 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11055 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11057 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11058 ;;Total ram usage:       11 bytes
 11059 ;; Hardware stack levels used: 1
 11060 ;; Hardware stack levels required when called: 1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_efgtoa
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text38
 11069   004EE0                     __ptext38:
 11070                           	callstack 0
 11071   004EE0                     _memcpy:
 11072                           	callstack 24
 11073   004EE0  C008  F00F         	movff	memcpy@s1,memcpy@s
 11074   004EE4  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 11075   004EE8  C006  F00D         	movff	memcpy@d1,memcpy@d
 11076   004EEC  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 11077   004EF0  EF8A  F027         	goto	l7096
 11078   004EF4                     l7088:
 11079   004EF4  C00F  FFD9         	movff	memcpy@s,fsr2l
 11080   004EF8  C010  FFDA         	movff	memcpy@s+1,fsr2h
 11081   004EFC  50DF               	movf	indf2,w,c
 11082   004EFE  6E0C               	movwf	memcpy@tmp^0,c
 11083   004F00  4A0F               	infsnz	memcpy@s^0,f,c
 11084   004F02  2A10               	incf	(memcpy@s+1)^0,f,c
 11085   004F04  C00D  FFD9         	movff	memcpy@d,fsr2l
 11086   004F08  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 11087   004F0C  C00C  FFDF         	movff	memcpy@tmp,indf2
 11088   004F10  4A0D               	infsnz	memcpy@d^0,f,c
 11089   004F12  2A0E               	incf	(memcpy@d+1)^0,f,c
 11090   004F14                     l7096:
 11091   004F14  060A               	decf	memcpy@n^0,f,c
 11092   004F16  A0D8               	btfss	status,0,c
 11093   004F18  060B               	decf	(memcpy@n+1)^0,f,c
 11094   004F1A  280A               	incf	memcpy@n^0,w,c
 11095   004F1C  E106               	bnz	u8441
 11096   004F1E  280B               	incf	(memcpy@n+1)^0,w,c
 11097   004F20  A4D8               	btfss	status,2,c
 11098   004F22  EF95  F027         	goto	u8441
 11099   004F26  EF97  F027         	goto	u8440
 11100   004F2A                     u8441:
 11101   004F2A  EF7A  F027         	goto	l7088
 11102   004F2E                     u8440:
 11103   004F2E  0012               	return		;funcret
 11104   004F30                     __end_of_memcpy:
 11105                           	callstack 0
 11106                           
 11107 ;; *************** function _labs *****************
 11108 ;; Defined at:
 11109 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 11110 ;; Parameters:    Size  Location     Type
 11111 ;;  a               4    5[COMRAM] long 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;		None
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  4    5[COMRAM] long 
 11116 ;; Registers used:
 11117 ;;		wreg, status,2, status,0
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11125 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11127 ;;Total ram usage:        8 bytes
 11128 ;; Hardware stack levels used: 1
 11129 ;; Hardware stack levels required when called: 1
 11130 ;; This function calls:
 11131 ;;		Nothing
 11132 ;; This function is called by:
 11133 ;;		_efgtoa
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           	psect	text39
 11138   004E36                     __ptext39:
 11139                           	callstack 0
 11140   004E36                     _labs:
 11141                           	callstack 24
 11142   004E36  BE09               	btfsc	(labs@a+3)^0,7,c
 11143   004E38  EF20  F027         	goto	u8331
 11144   004E3C  EF22  F027         	goto	u8330
 11145   004E40                     u8331:
 11146   004E40  EF2C  F027         	goto	l7054
 11147   004E44                     u8330:
 11148   004E44  C006  F006         	movff	labs@a,?_labs
 11149   004E48  C007  F007         	movff	labs@a+1,?_labs+1
 11150   004E4C  C008  F008         	movff	labs@a+2,?_labs+2
 11151   004E50  C009  F009         	movff	labs@a+3,?_labs+3
 11152   004E54  EF45  F027         	goto	l1634
 11153   004E58                     l7054:
 11154   004E58  C006  F00A         	movff	labs@a,??_labs
 11155   004E5C  C007  F00B         	movff	labs@a+1,??_labs+1
 11156   004E60  C008  F00C         	movff	labs@a+2,??_labs+2
 11157   004E64  C009  F00D         	movff	labs@a+3,??_labs+3
 11158   004E68  1E0A               	comf	??_labs^0,f,c
 11159   004E6A  1E0B               	comf	(??_labs+1)^0,f,c
 11160   004E6C  1E0C               	comf	(??_labs+2)^0,f,c
 11161   004E6E  1E0D               	comf	(??_labs+3)^0,f,c
 11162   004E70  2A0A               	incf	??_labs^0,f,c
 11163   004E72  0E00               	movlw	0
 11164   004E74  220B               	addwfc	(??_labs+1)^0,f,c
 11165   004E76  220C               	addwfc	(??_labs+2)^0,f,c
 11166   004E78  220D               	addwfc	(??_labs+3)^0,f,c
 11167   004E7A  C00A  F006         	movff	??_labs,?_labs
 11168   004E7E  C00B  F007         	movff	??_labs+1,?_labs+1
 11169   004E82  C00C  F008         	movff	??_labs+2,?_labs+2
 11170   004E86  C00D  F009         	movff	??_labs+3,?_labs+3
 11171   004E8A                     l1634:
 11172   004E8A  0012               	return		;funcret
 11173   004E8C                     __end_of_labs:
 11174                           	callstack 0
 11175                           
 11176 ;; *************** function _floorf *****************
 11177 ;; Defined at:
 11178 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  x               4   69[COMRAM] float 
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;  u               4    6[BANK0 ] struct .
 11183 ;;  m               4    0[BANK0 ] unsigned long 
 11184 ;;  e               2    4[BANK0 ] int 
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  4   69[COMRAM] float 
 11187 ;; Registers used:
 11188 ;;		wreg, status,2, status,0
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11195 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11196 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11197 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;Total ram usage:       20 bytes
 11199 ;; Hardware stack levels used: 1
 11200 ;; Hardware stack levels required when called: 1
 11201 ;; This function calls:
 11202 ;;		Nothing
 11203 ;; This function is called by:
 11204 ;;		_efgtoa
 11205 ;; This function uses a non-reentrant model
 11206 ;;
 11207                           
 11208                           	psect	text40
 11209   00324C                     __ptext40:
 11210                           	callstack 0
 11211   00324C                     _floorf:
 11212                           	callstack 24
 11213   00324C  C119  F066         	movff	floorf@F521,floorf@u
 11214   003250  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11215   003254  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11216   003258  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11217   00325C  C046  F066         	movff	floorf@x,floorf@u
 11218   003260  C047  F067         	movff	floorf@x+1,floorf@u+1
 11219   003264  C048  F068         	movff	floorf@x+2,floorf@u+2
 11220   003268  C049  F069         	movff	floorf@x+3,floorf@u+3
 11221   00326C  0E81               	movlw	129
 11222   00326E  6E4A               	movwf	??_floorf^0,c
 11223   003270  0EFF               	movlw	255
 11224   003272  6E4B               	movwf	(??_floorf+1)^0,c
 11225   003274  C066  F04C         	movff	floorf@u,??_floorf+2
 11226   003278  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11227   00327C  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11228   003280  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11229   003284  0E18               	movlw	24
 11230   003286  EF4A  F019         	goto	u8340
 11231   00328A                     u8345:
 11232   00328A  90D8               	bcf	status,0,c
 11233   00328C  324F               	rrcf	(??_floorf+5)^0,f,c
 11234   00328E  324E               	rrcf	(??_floorf+4)^0,f,c
 11235   003290  324D               	rrcf	(??_floorf+3)^0,f,c
 11236   003292  324C               	rrcf	(??_floorf+2)^0,f,c
 11237   003294                     u8340:
 11238   003294  2EE8               	decfsz	wreg,f,c
 11239   003296  EF45  F019         	goto	u8345
 11240   00329A  504C               	movf	(??_floorf+2)^0,w,c
 11241   00329C  244A               	addwf	??_floorf^0,w,c
 11242   00329E  0100               	movlb	0	; () banked
 11243   0032A0  6F64               	movwf	floorf@e& (0+255),b
 11244   0032A2  0E00               	movlw	0
 11245   0032A4  204B               	addwfc	(??_floorf+1)^0,w,c
 11246   0032A6  6F65               	movwf	(floorf@e+1)& (0+255),b
 11247   0032A8  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11248   0032AA  EF60  F019         	goto	u8351
 11249   0032AE  5165               	movf	(floorf@e+1)& (0+255),w,b
 11250   0032B0  E109               	bnz	u8350
 11251   0032B2  0E17               	movlw	23
 11252   0032B4  5D64               	subwf	floorf@e& (0+255),w,b
 11253   0032B6  A0D8               	btfss	status,0,c
 11254   0032B8  EF60  F019         	goto	u8351
 11255   0032BC  EF62  F019         	goto	u8350
 11256   0032C0                     u8351:
 11257   0032C0  EF6C  F019         	goto	l7064
 11258   0032C4                     u8350:
 11259   0032C4                     l7062:
 11260                           
 11261                           ; BSR set to: 0
 11262   0032C4  C046  F046         	movff	floorf@x,?_floorf
 11263   0032C8  C047  F047         	movff	floorf@x+1,?_floorf+1
 11264   0032CC  C048  F048         	movff	floorf@x+2,?_floorf+2
 11265   0032D0  C049  F049         	movff	floorf@x+3,?_floorf+3
 11266   0032D4  EF30  F01A         	goto	l1620
 11267   0032D8                     l7064:
 11268                           
 11269                           ; BSR set to: 0
 11270   0032D8  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11271   0032DA  EF71  F019         	goto	u8361
 11272   0032DE  EF73  F019         	goto	u8360
 11273   0032E2                     u8361:
 11274   0032E2  EFE4  F019         	goto	l7074
 11275   0032E6                     u8360:
 11276   0032E6                     
 11277                           ; BSR set to: 0
 11278   0032E6  C064  F04A         	movff	floorf@e,??_floorf
 11279   0032EA  0EFF               	movlw	255
 11280   0032EC  6E4B               	movwf	(??_floorf+1)^0,c
 11281   0032EE  0EFF               	movlw	255
 11282   0032F0  6E4C               	movwf	(??_floorf+2)^0,c
 11283   0032F2  0E7F               	movlw	127
 11284   0032F4  6E4D               	movwf	(??_floorf+3)^0,c
 11285   0032F6  0E00               	movlw	0
 11286   0032F8  6E4E               	movwf	(??_floorf+4)^0,c
 11287   0032FA                     u8375:
 11288   0032FA  664A               	tstfsz	??_floorf^0,c
 11289   0032FC  EF82  F019         	goto	u8376
 11290   003300  EF8A  F019         	goto	u8377
 11291   003304                     u8376:
 11292   003304  344E               	rlcf	(??_floorf+4)^0,w,c
 11293   003306  324E               	rrcf	(??_floorf+4)^0,f,c
 11294   003308  324D               	rrcf	(??_floorf+3)^0,f,c
 11295   00330A  324C               	rrcf	(??_floorf+2)^0,f,c
 11296   00330C  324B               	rrcf	(??_floorf+1)^0,f,c
 11297   00330E  2E4A               	decfsz	??_floorf^0,f,c
 11298   003310  EF7D  F019         	goto	u8375
 11299   003314                     u8377:
 11300   003314  C04B  F060         	movff	??_floorf+1,floorf@m
 11301   003318  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11302   00331C  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11303   003320  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11304   003324  0100               	movlb	0	; () banked
 11305   003326  5160               	movf	floorf@m& (0+255),w,b
 11306   003328  1566               	andwf	floorf@u& (0+255),w,b
 11307   00332A  6E4A               	movwf	??_floorf^0,c
 11308   00332C  5161               	movf	(floorf@m+1)& (0+255),w,b
 11309   00332E  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11310   003330  6E4B               	movwf	(??_floorf+1)^0,c
 11311   003332  5162               	movf	(floorf@m+2)& (0+255),w,b
 11312   003334  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11313   003336  6E4C               	movwf	(??_floorf+2)^0,c
 11314   003338  5163               	movf	(floorf@m+3)& (0+255),w,b
 11315   00333A  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11316   00333C  6E4D               	movwf	(??_floorf+3)^0,c
 11317   00333E  504A               	movf	??_floorf^0,w,c
 11318   003340  104B               	iorwf	(??_floorf+1)^0,w,c
 11319   003342  104C               	iorwf	(??_floorf+2)^0,w,c
 11320   003344  104D               	iorwf	(??_floorf+3)^0,w,c
 11321   003346  A4D8               	btfss	status,2,c
 11322   003348  EFA8  F019         	goto	u8381
 11323   00334C  EFAA  F019         	goto	u8380
 11324   003350                     u8381:
 11325   003350  EFAC  F019         	goto	l7070
 11326   003354                     u8380:
 11327   003354  EF62  F019         	goto	l7062
 11328   003358                     l7070:
 11329                           
 11330                           ; BSR set to: 0
 11331   003358  C066  F04A         	movff	floorf@u,??_floorf
 11332   00335C  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11333   003360  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11334   003364  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11335   003368  0E20               	movlw	32
 11336   00336A  EFBC  F019         	goto	u8390
 11337   00336E                     u8395:
 11338   00336E  90D8               	bcf	status,0,c
 11339   003370  324D               	rrcf	(??_floorf+3)^0,f,c
 11340   003372  324C               	rrcf	(??_floorf+2)^0,f,c
 11341   003374  324B               	rrcf	(??_floorf+1)^0,f,c
 11342   003376  324A               	rrcf	??_floorf^0,f,c
 11343   003378                     u8390:
 11344   003378  2EE8               	decfsz	wreg,f,c
 11345   00337A  EFB7  F019         	goto	u8395
 11346   00337E  504A               	movf	??_floorf^0,w,c
 11347   003380  104B               	iorwf	(??_floorf+1)^0,w,c
 11348   003382  104C               	iorwf	(??_floorf+2)^0,w,c
 11349   003384  104D               	iorwf	(??_floorf+3)^0,w,c
 11350   003386  B4D8               	btfsc	status,2,c
 11351   003388  EFC8  F019         	goto	u8401
 11352   00338C  EFCA  F019         	goto	u8400
 11353   003390                     u8401:
 11354   003390  EFD2  F019         	goto	l1623
 11355   003394                     u8400:
 11356   003394                     
 11357                           ; BSR set to: 0
 11358   003394  5160               	movf	floorf@m& (0+255),w,b
 11359   003396  2766               	addwf	floorf@u& (0+255),f,b
 11360   003398  5161               	movf	(floorf@m+1)& (0+255),w,b
 11361   00339A  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11362   00339C  5162               	movf	(floorf@m+2)& (0+255),w,b
 11363   00339E  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11364   0033A0  5163               	movf	(floorf@m+3)& (0+255),w,b
 11365   0033A2  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11366   0033A4                     l1623:
 11367                           
 11368                           ; BSR set to: 0
 11369   0033A4  1D60               	comf	floorf@m& (0+255),w,b
 11370   0033A6  6E4A               	movwf	??_floorf^0,c
 11371   0033A8  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11372   0033AA  6E4B               	movwf	(??_floorf+1)^0,c
 11373   0033AC  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11374   0033AE  6E4C               	movwf	(??_floorf+2)^0,c
 11375   0033B0  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11376   0033B2  6E4D               	movwf	(??_floorf+3)^0,c
 11377   0033B4  504A               	movf	??_floorf^0,w,c
 11378   0033B6  1766               	andwf	floorf@u& (0+255),f,b
 11379   0033B8  504B               	movf	(??_floorf+1)^0,w,c
 11380   0033BA  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11381   0033BC  504C               	movf	(??_floorf+2)^0,w,c
 11382   0033BE  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11383   0033C0  504D               	movf	(??_floorf+3)^0,w,c
 11384   0033C2  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11385   0033C4  EF28  F01A         	goto	l7082
 11386   0033C8                     l7074:
 11387                           
 11388                           ; BSR set to: 0
 11389   0033C8  C066  F04A         	movff	floorf@u,??_floorf
 11390   0033CC  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11391   0033D0  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11392   0033D4  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11393   0033D8  0E20               	movlw	32
 11394   0033DA  EFF4  F019         	goto	u8410
 11395   0033DE                     u8415:
 11396   0033DE  90D8               	bcf	status,0,c
 11397   0033E0  324D               	rrcf	(??_floorf+3)^0,f,c
 11398   0033E2  324C               	rrcf	(??_floorf+2)^0,f,c
 11399   0033E4  324B               	rrcf	(??_floorf+1)^0,f,c
 11400   0033E6  324A               	rrcf	??_floorf^0,f,c
 11401   0033E8                     u8410:
 11402   0033E8  2EE8               	decfsz	wreg,f,c
 11403   0033EA  EFEF  F019         	goto	u8415
 11404   0033EE  504A               	movf	??_floorf^0,w,c
 11405   0033F0  104B               	iorwf	(??_floorf+1)^0,w,c
 11406   0033F2  104C               	iorwf	(??_floorf+2)^0,w,c
 11407   0033F4  104D               	iorwf	(??_floorf+3)^0,w,c
 11408   0033F6  A4D8               	btfss	status,2,c
 11409   0033F8  EF00  F01A         	goto	u8421
 11410   0033FC  EF02  F01A         	goto	u8420
 11411   003400                     u8421:
 11412   003400  EF0C  F01A         	goto	l7078
 11413   003404                     u8420:
 11414   003404                     
 11415                           ; BSR set to: 0
 11416   003404  0E00               	movlw	0
 11417   003406  6F66               	movwf	floorf@u& (0+255),b
 11418   003408  0E00               	movlw	0
 11419   00340A  6F67               	movwf	(floorf@u+1)& (0+255),b
 11420   00340C  0E00               	movlw	0
 11421   00340E  6F68               	movwf	(floorf@u+2)& (0+255),b
 11422   003410  0E00               	movlw	0
 11423   003412  6F69               	movwf	(floorf@u+3)& (0+255),b
 11424   003414  EF28  F01A         	goto	l7082
 11425   003418                     l7078:
 11426                           
 11427                           ; BSR set to: 0
 11428   003418  90D8               	bcf	status,0,c
 11429   00341A  3566               	rlcf	floorf@u& (0+255),w,b
 11430   00341C  6E4A               	movwf	??_floorf^0,c
 11431   00341E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11432   003420  6E4B               	movwf	(??_floorf+1)^0,c
 11433   003422  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11434   003424  6E4C               	movwf	(??_floorf+2)^0,c
 11435   003426  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11436   003428  6E4D               	movwf	(??_floorf+3)^0,c
 11437   00342A  504A               	movf	??_floorf^0,w,c
 11438   00342C  104B               	iorwf	(??_floorf+1)^0,w,c
 11439   00342E  104C               	iorwf	(??_floorf+2)^0,w,c
 11440   003430  104D               	iorwf	(??_floorf+3)^0,w,c
 11441   003432  B4D8               	btfsc	status,2,c
 11442   003434  EF1E  F01A         	goto	u8431
 11443   003438  EF20  F01A         	goto	u8430
 11444   00343C                     u8431:
 11445   00343C  EF28  F01A         	goto	l7082
 11446   003440                     u8430:
 11447   003440                     
 11448                           ; BSR set to: 0
 11449   003440  0E00               	movlw	0
 11450   003442  6F66               	movwf	floorf@u& (0+255),b
 11451   003444  0E00               	movlw	0
 11452   003446  6F67               	movwf	(floorf@u+1)& (0+255),b
 11453   003448  0E80               	movlw	128
 11454   00344A  6F68               	movwf	(floorf@u+2)& (0+255),b
 11455   00344C  0EBF               	movlw	191
 11456   00344E  6F69               	movwf	(floorf@u+3)& (0+255),b
 11457   003450                     l7082:
 11458                           
 11459                           ; BSR set to: 0
 11460   003450  C066  F046         	movff	floorf@u,?_floorf
 11461   003454  C067  F047         	movff	floorf@u+1,?_floorf+1
 11462   003458  C068  F048         	movff	floorf@u+2,?_floorf+2
 11463   00345C  C069  F049         	movff	floorf@u+3,?_floorf+3
 11464   003460                     l1620:
 11465                           
 11466                           ; BSR set to: 0
 11467   003460  0012               	return		;funcret
 11468   003462                     __end_of_floorf:
 11469                           	callstack 0
 11470                           
 11471 ;; *************** function ___fpclassifyf *****************
 11472 ;; Defined at:
 11473 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;  x               4    5[COMRAM] float 
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;  u               4   15[COMRAM] struct .
 11478 ;;  e               2   13[COMRAM] int 
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  2    5[COMRAM] int 
 11481 ;; Registers used:
 11482 ;;		wreg, status,2, status,0
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11489 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11491 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11492 ;;Total ram usage:       14 bytes
 11493 ;; Hardware stack levels used: 1
 11494 ;; Hardware stack levels required when called: 1
 11495 ;; This function calls:
 11496 ;;		Nothing
 11497 ;; This function is called by:
 11498 ;;		_efgtoa
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           	psect	text41
 11503   00447C                     __ptext41:
 11504                           	callstack 0
 11505   00447C                     ___fpclassifyf:
 11506                           	callstack 24
 11507   00447C  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11508   004480  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11509   004484  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11510   004488  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11511   00448C  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11512   004490  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11513   004494  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11514   004498  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11515   00449C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11516   0044A0  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11517   0044A4  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11518   0044A8  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11519   0044AC  0E18               	movlw	24
 11520   0044AE  EF5E  F022         	goto	u8250
 11521   0044B2                     u8255:
 11522   0044B2  90D8               	bcf	status,0,c
 11523   0044B4  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11524   0044B6  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11525   0044B8  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11526   0044BA  320A               	rrcf	??___fpclassifyf^0,f,c
 11527   0044BC                     u8250:
 11528   0044BC  2EE8               	decfsz	wreg,f,c
 11529   0044BE  EF59  F022         	goto	u8255
 11530   0044C2  500A               	movf	??___fpclassifyf^0,w,c
 11531   0044C4  6E0E               	movwf	___fpclassifyf@e^0,c
 11532   0044C6  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11533   0044C8  500E               	movf	___fpclassifyf@e^0,w,c
 11534   0044CA  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11535   0044CC  A4D8               	btfss	status,2,c
 11536   0044CE  EF6B  F022         	goto	u8261
 11537   0044D2  EF6D  F022         	goto	u8260
 11538   0044D6                     u8261:
 11539   0044D6  EF8D  F022         	goto	l7036
 11540   0044DA                     u8260:
 11541   0044DA  90D8               	bcf	status,0,c
 11542   0044DC  3410               	rlcf	___fpclassifyf@u^0,w,c
 11543   0044DE  6E0A               	movwf	??___fpclassifyf^0,c
 11544   0044E0  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11545   0044E2  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11546   0044E4  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11547   0044E6  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11548   0044E8  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11549   0044EA  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11550   0044EC  500A               	movf	??___fpclassifyf^0,w,c
 11551   0044EE  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11552   0044F0  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11553   0044F2  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11554   0044F4  A4D8               	btfss	status,2,c
 11555   0044F6  EF7F  F022         	goto	u8271
 11556   0044FA  EF81  F022         	goto	u8270
 11557   0044FE                     u8271:
 11558   0044FE  EF87  F022         	goto	l7032
 11559   004502                     u8270:
 11560   004502  0E00               	movlw	0
 11561   004504  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11562   004506  0E02               	movlw	2
 11563   004508  6E06               	movwf	?___fpclassifyf^0,c
 11564   00450A  EFBC  F022         	goto	l1606
 11565   00450E                     l7032:
 11566   00450E  0E00               	movlw	0
 11567   004510  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11568   004512  0E03               	movlw	3
 11569   004514  6E06               	movwf	?___fpclassifyf^0,c
 11570   004516  EFBC  F022         	goto	l1606
 11571   00451A                     l7036:
 11572   00451A  280E               	incf	___fpclassifyf@e^0,w,c
 11573   00451C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11574   00451E  A4D8               	btfss	status,2,c
 11575   004520  EF94  F022         	goto	u8281
 11576   004524  EF96  F022         	goto	u8280
 11577   004528                     u8281:
 11578   004528  EFB8  F022         	goto	l7042
 11579   00452C                     u8280:
 11580   00452C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11581   004530  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11582   004534  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11583   004538  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11584   00453C  0E09               	movlw	9
 11585   00453E                     u8295:
 11586   00453E  90D8               	bcf	status,0,c
 11587   004540  360A               	rlcf	??___fpclassifyf^0,f,c
 11588   004542  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11589   004544  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11590   004546  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11591   004548  2EE8               	decfsz	wreg,f,c
 11592   00454A  EF9F  F022         	goto	u8295
 11593   00454E  500A               	movf	??___fpclassifyf^0,w,c
 11594   004550  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11595   004552  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11596   004554  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11597   004556  B4D8               	btfsc	status,2,c
 11598   004558  EFB0  F022         	goto	u8301
 11599   00455C  EFB3  F022         	goto	u8300
 11600   004560                     u8301:
 11601   004560  0E01               	movlw	1
 11602   004562  EFB4  F022         	goto	u8310
 11603   004566                     u8300:
 11604   004566  0E00               	movlw	0
 11605   004568                     u8310:
 11606   004568  6E06               	movwf	?___fpclassifyf^0,c
 11607   00456A  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11608   00456C  EFBC  F022         	goto	l1606
 11609   004570                     l7042:
 11610   004570  0E00               	movlw	0
 11611   004572  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11612   004574  0E04               	movlw	4
 11613   004576  6E06               	movwf	?___fpclassifyf^0,c
 11614   004578                     l1606:
 11615   004578  0012               	return		;funcret
 11616   00457A                     __end_of___fpclassifyf:
 11617                           	callstack 0
 11618                           
 11619 ;; *************** function ___fltol *****************
 11620 ;; Defined at:
 11621 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11622 ;; Parameters:    Size  Location     Type
 11623 ;;  f1              4    4[BANK0 ] int 
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;  exp1            1   82[COMRAM] unsigned char 
 11626 ;;  sign1           1   81[COMRAM] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  4    4[BANK0 ] long 
 11629 ;; Registers used:
 11630 ;;		wreg, status,2, status,0
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;Total ram usage:       10 bytes
 11641 ;; Hardware stack levels used: 1
 11642 ;; Hardware stack levels required when called: 1
 11643 ;; This function calls:
 11644 ;;		Nothing
 11645 ;; This function is called by:
 11646 ;;		_runDAC
 11647 ;;		_efgtoa
 11648 ;;		___rem_pio2f
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text42
 11653   004270                     __ptext42:
 11654                           	callstack 0
 11655   004270                     ___fltol:
 11656                           	callstack 24
 11657   004270  0100               	movlb	0	; () banked
 11658   004272  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11659   004274  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11660   004276  6E53               	movwf	___fltol@exp1^0,c
 11661   004278  5053               	movf	___fltol@exp1^0,w,c
 11662   00427A  A4D8               	btfss	status,2,c
 11663   00427C  EF42  F021         	goto	u8071
 11664   004280  EF44  F021         	goto	u8070
 11665   004284                     u8071:
 11666   004284  EF4E  F021         	goto	l6928
 11667   004288                     u8070:
 11668   004288                     l6924:
 11669                           
 11670                           ; BSR set to: 0
 11671   004288  0E00               	movlw	0
 11672   00428A  6F64               	movwf	?___fltol& (0+255),b
 11673   00428C  0E00               	movlw	0
 11674   00428E  6F65               	movwf	(?___fltol+1)& (0+255),b
 11675   004290  0E00               	movlw	0
 11676   004292  6F66               	movwf	(?___fltol+2)& (0+255),b
 11677   004294  0E00               	movlw	0
 11678   004296  6F67               	movwf	(?___fltol+3)& (0+255),b
 11679   004298  EFBB  F021         	goto	l1007
 11680   00429C                     l6928:
 11681                           
 11682                           ; BSR set to: 0
 11683   00429C  C064  F068         	movff	___fltol@f1,??___fltol
 11684   0042A0  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11685   0042A4  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11686   0042A8  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11687   0042AC  0E20               	movlw	32
 11688   0042AE  EF5E  F021         	goto	u8080
 11689   0042B2                     u8085:
 11690   0042B2  90D8               	bcf	status,0,c
 11691   0042B4  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11692   0042B6  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11693   0042B8  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11694   0042BA  3368               	rrcf	??___fltol& (0+255),f,b
 11695   0042BC                     u8080:
 11696   0042BC  2EE8               	decfsz	wreg,f,c
 11697   0042BE  EF59  F021         	goto	u8085
 11698   0042C2  5168               	movf	??___fltol& (0+255),w,b
 11699   0042C4  6E52               	movwf	___fltol@sign1^0,c
 11700   0042C6                     
 11701                           ; BSR set to: 0
 11702   0042C6  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11703   0042C8                     
 11704                           ; BSR set to: 0
 11705   0042C8  0EFF               	movlw	255
 11706   0042CA  1764               	andwf	___fltol@f1& (0+255),f,b
 11707   0042CC  0EFF               	movlw	255
 11708   0042CE  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11709   0042D0  0EFF               	movlw	255
 11710   0042D2  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11711   0042D4  0E00               	movlw	0
 11712   0042D6  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11713   0042D8                     
 11714                           ; BSR set to: 0
 11715   0042D8  0E96               	movlw	150
 11716   0042DA  5E53               	subwf	___fltol@exp1^0,f,c
 11717   0042DC                     
 11718                           ; BSR set to: 0
 11719   0042DC  BE53               	btfsc	___fltol@exp1^0,7,c
 11720   0042DE  EF75  F021         	goto	u8090
 11721   0042E2  EF73  F021         	goto	u8091
 11722   0042E6                     u8091:
 11723   0042E6  EF8B  F021         	goto	l6948
 11724   0042EA                     u8090:
 11725   0042EA                     
 11726                           ; BSR set to: 0
 11727   0042EA  5053               	movf	___fltol@exp1^0,w,c
 11728   0042EC  0A80               	xorlw	128
 11729   0042EE  0F97               	addlw	151
 11730   0042F0  B0D8               	btfsc	status,0,c
 11731   0042F2  EF7D  F021         	goto	u8101
 11732   0042F6  EF7F  F021         	goto	u8100
 11733   0042FA                     u8101:
 11734   0042FA  EF81  F021         	goto	l6944
 11735   0042FE                     u8100:
 11736   0042FE  EF44  F021         	goto	l6924
 11737   004302                     l6944:
 11738                           
 11739                           ; BSR set to: 0
 11740   004302  90D8               	bcf	status,0,c
 11741   004304  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11742   004306  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11743   004308  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11744   00430A  3364               	rrcf	___fltol@f1& (0+255),f,b
 11745   00430C                     
 11746                           ; BSR set to: 0
 11747   00430C  3E53               	incfsz	___fltol@exp1^0,f,c
 11748   00430E  EF81  F021         	goto	l6944
 11749   004312  EFA3  F021         	goto	l6958
 11750   004316                     l6948:
 11751                           
 11752                           ; BSR set to: 0
 11753   004316  0E1F               	movlw	31
 11754   004318  6453               	cpfsgt	___fltol@exp1^0,c
 11755   00431A  EF91  F021         	goto	u8111
 11756   00431E  EF93  F021         	goto	u8110
 11757   004322                     u8111:
 11758   004322  EF9B  F021         	goto	l6956
 11759   004326                     u8110:
 11760   004326  EF44  F021         	goto	l6924
 11761   00432A                     l6954:
 11762                           
 11763                           ; BSR set to: 0
 11764   00432A  90D8               	bcf	status,0,c
 11765   00432C  3764               	rlcf	___fltol@f1& (0+255),f,b
 11766   00432E  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11767   004330  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11768   004332  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11769   004334  0653               	decf	___fltol@exp1^0,f,c
 11770   004336                     l6956:
 11771                           
 11772                           ; BSR set to: 0
 11773   004336  5053               	movf	___fltol@exp1^0,w,c
 11774   004338  A4D8               	btfss	status,2,c
 11775   00433A  EFA1  F021         	goto	u8121
 11776   00433E  EFA3  F021         	goto	u8120
 11777   004342                     u8121:
 11778   004342  EF95  F021         	goto	l6954
 11779   004346                     u8120:
 11780   004346                     l6958:
 11781                           
 11782                           ; BSR set to: 0
 11783   004346  5052               	movf	___fltol@sign1^0,w,c
 11784   004348  B4D8               	btfsc	status,2,c
 11785   00434A  EFA9  F021         	goto	u8131
 11786   00434E  EFAB  F021         	goto	u8130
 11787   004352                     u8131:
 11788   004352  EFB3  F021         	goto	l6962
 11789   004356                     u8130:
 11790   004356                     
 11791                           ; BSR set to: 0
 11792   004356  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11793   004358  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11794   00435A  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11795   00435C  6D64               	negf	___fltol@f1& (0+255),b
 11796   00435E  0E00               	movlw	0
 11797   004360  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11798   004362  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11799   004364  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11800   004366                     l6962:
 11801                           
 11802                           ; BSR set to: 0
 11803   004366  C064  F064         	movff	___fltol@f1,?___fltol
 11804   00436A  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11805   00436E  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11806   004372  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11807   004376                     l1007:
 11808                           
 11809                           ; BSR set to: 0
 11810   004376  0012               	return		;funcret
 11811   004378                     __end_of___fltol:
 11812                           	callstack 0
 11813                           
 11814 ;; *************** function ___flsub *****************
 11815 ;; Defined at:
 11816 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;  b               4    4[BANK0 ] long 
 11819 ;;  a               4    8[BANK0 ] long 
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;		None
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  4    4[BANK0 ] long 
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0, cstack
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11831 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11835 ;;Total ram usage:        8 bytes
 11836 ;; Hardware stack levels used: 1
 11837 ;; Hardware stack levels required when called: 2
 11838 ;; This function calls:
 11839 ;;		___fladd
 11840 ;; This function is called by:
 11841 ;;		_efgtoa
 11842 ;;		___rem_pio2f
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           	psect	text43
 11847   004F7A                     __ptext43:
 11848                           	callstack 0
 11849   004F7A                     ___flsub:
 11850                           	callstack 23
 11851   004F7A  0E00               	movlw	0
 11852   004F7C  0100               	movlb	0	; () banked
 11853   004F7E  1B68               	xorwf	___flsub@a& (0+255),f,b
 11854   004F80  0E00               	movlw	0
 11855   004F82  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 11856   004F84  0E00               	movlw	0
 11857   004F86  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 11858   004F88  0E80               	movlw	128
 11859   004F8A  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 11860   004F8C                     
 11861                           ; BSR set to: 0
 11862   004F8C  C064  F046         	movff	___flsub@b,___fladd@b
 11863   004F90  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 11864   004F94  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 11865   004F98  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 11866   004F9C  C068  F04A         	movff	___flsub@a,___fladd@a
 11867   004FA0  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 11868   004FA4  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 11869   004FA8  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 11870   004FAC  ECD9  F00A         	call	___fladd	;wreg free
 11871   004FB0  C046  F064         	movff	?___fladd,?___flsub
 11872   004FB4  C047  F065         	movff	?___fladd+1,?___flsub+1
 11873   004FB8  C048  F066         	movff	?___fladd+2,?___flsub+2
 11874   004FBC  C049  F067         	movff	?___fladd+3,?___flsub+3
 11875   004FC0  0012               	return		;funcret
 11876   004FC2                     __end_of___flsub:
 11877                           	callstack 0
 11878                           
 11879 ;; *************** function ___fladd *****************
 11880 ;; Defined at:
 11881 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  b               4   69[COMRAM] long 
 11884 ;;  a               4   73[COMRAM] long 
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;  grs             1    3[BANK0 ] unsigned char 
 11887 ;;  bexp            1    2[BANK0 ] unsigned char 
 11888 ;;  aexp            1    1[BANK0 ] unsigned char 
 11889 ;;  signs           1    0[BANK0 ] unsigned char 
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  4   69[COMRAM] unsigned char 
 11892 ;; Registers used:
 11893 ;;		wreg, status,2, status,0
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11899 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;Total ram usage:       16 bytes
 11904 ;; Hardware stack levels used: 1
 11905 ;; Hardware stack levels required when called: 1
 11906 ;; This function calls:
 11907 ;;		Nothing
 11908 ;; This function is called by:
 11909 ;;		_runDAC
 11910 ;;		___flsub
 11911 ;;		_efgtoa
 11912 ;;		_sinf
 11913 ;;		___cosdf
 11914 ;;		___rem_pio2f
 11915 ;;		___sindf
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text44
 11920   0015B2                     __ptext44:
 11921                           	callstack 0
 11922   0015B2                     ___fladd:
 11923                           	callstack 23
 11924   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 11925   0015B4  0B80               	andlw	128
 11926   0015B6  0100               	movlb	0	; () banked
 11927   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 11928   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 11929   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 11930   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 11931   0015C0                     
 11932                           ; BSR set to: 0
 11933   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 11934   0015C2  EFE5  F00A         	goto	u7041
 11935   0015C6  EFE7  F00A         	goto	u7040
 11936   0015CA                     u7041:
 11937   0015CA  EFE8  F00A         	goto	l6312
 11938   0015CE                     u7040:
 11939   0015CE                     
 11940                           ; BSR set to: 0
 11941   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 11942   0015D0                     l6312:
 11943                           
 11944                           ; BSR set to: 0
 11945   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 11946   0015D2  B4D8               	btfsc	status,2,c
 11947   0015D4  EFEE  F00A         	goto	u7051
 11948   0015D8  EFF0  F00A         	goto	u7050
 11949   0015DC                     u7051:
 11950   0015DC  EF05  F00B         	goto	l6322
 11951   0015E0                     u7050:
 11952   0015E0                     
 11953                           ; BSR set to: 0
 11954   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 11955   0015E2  A4D8               	btfss	status,2,c
 11956   0015E4  EFF6  F00A         	goto	u7061
 11957   0015E8  EFF8  F00A         	goto	u7060
 11958   0015EC                     u7061:
 11959   0015EC  EF00  F00B         	goto	l6318
 11960   0015F0                     u7060:
 11961   0015F0                     
 11962                           ; BSR set to: 0
 11963   0015F0  0E00               	movlw	0
 11964   0015F2  6E46               	movwf	___fladd@b^0,c
 11965   0015F4  0E00               	movlw	0
 11966   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 11967   0015F8  0E00               	movlw	0
 11968   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 11969   0015FC  0E00               	movlw	0
 11970   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 11971   001600                     l6318:
 11972                           
 11973                           ; BSR set to: 0
 11974   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 11975   001602                     
 11976                           ; BSR set to: 0
 11977   001602  0E00               	movlw	0
 11978   001604  6E49               	movwf	(___fladd@b+3)^0,c
 11979   001606  EF0D  F00B         	goto	l6324
 11980   00160A                     l6322:
 11981                           
 11982                           ; BSR set to: 0
 11983   00160A  0E00               	movlw	0
 11984   00160C  6E46               	movwf	___fladd@b^0,c
 11985   00160E  0E00               	movlw	0
 11986   001610  6E47               	movwf	(___fladd@b+1)^0,c
 11987   001612  0E00               	movlw	0
 11988   001614  6E48               	movwf	(___fladd@b+2)^0,c
 11989   001616  0E00               	movlw	0
 11990   001618  6E49               	movwf	(___fladd@b+3)^0,c
 11991   00161A                     l6324:
 11992                           
 11993                           ; BSR set to: 0
 11994   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 11995   00161C  0B80               	andlw	128
 11996   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 11997   001620                     
 11998                           ; BSR set to: 0
 11999   001620  5160               	movf	___fladd@signs& (0+255),w,b
 12000   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 12001   001624  B4D8               	btfsc	status,2,c
 12002   001626  EF17  F00B         	goto	u7071
 12003   00162A  EF19  F00B         	goto	u7070
 12004   00162E                     u7071:
 12005   00162E  EF1A  F00B         	goto	l6330
 12006   001632                     u7070:
 12007   001632                     
 12008                           ; BSR set to: 0
 12009   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 12010   001634                     l6330:
 12011                           
 12012                           ; BSR set to: 0
 12013   001634  504D               	movf	(___fladd@a+3)^0,w,c
 12014   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 12015   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 12016   00163A                     
 12017                           ; BSR set to: 0
 12018   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 12019   00163C  EF22  F00B         	goto	u7081
 12020   001640  EF24  F00B         	goto	u7080
 12021   001644                     u7081:
 12022   001644  EF25  F00B         	goto	l6336
 12023   001648                     u7080:
 12024   001648                     
 12025                           ; BSR set to: 0
 12026   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 12027   00164A                     l6336:
 12028                           
 12029                           ; BSR set to: 0
 12030   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 12031   00164C  B4D8               	btfsc	status,2,c
 12032   00164E  EF2B  F00B         	goto	u7091
 12033   001652  EF2D  F00B         	goto	u7090
 12034   001656                     u7091:
 12035   001656  EF42  F00B         	goto	l6346
 12036   00165A                     u7090:
 12037   00165A                     
 12038                           ; BSR set to: 0
 12039   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 12040   00165C  A4D8               	btfss	status,2,c
 12041   00165E  EF33  F00B         	goto	u7101
 12042   001662  EF35  F00B         	goto	u7100
 12043   001666                     u7101:
 12044   001666  EF3D  F00B         	goto	l6342
 12045   00166A                     u7100:
 12046   00166A                     
 12047                           ; BSR set to: 0
 12048   00166A  0E00               	movlw	0
 12049   00166C  6E4A               	movwf	___fladd@a^0,c
 12050   00166E  0E00               	movlw	0
 12051   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 12052   001672  0E00               	movlw	0
 12053   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 12054   001676  0E00               	movlw	0
 12055   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 12056   00167A                     l6342:
 12057                           
 12058                           ; BSR set to: 0
 12059   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 12060   00167C                     
 12061                           ; BSR set to: 0
 12062   00167C  0E00               	movlw	0
 12063   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 12064   001680  EF4A  F00B         	goto	l6348
 12065   001684                     l6346:
 12066                           
 12067                           ; BSR set to: 0
 12068   001684  0E00               	movlw	0
 12069   001686  6E4A               	movwf	___fladd@a^0,c
 12070   001688  0E00               	movlw	0
 12071   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 12072   00168C  0E00               	movlw	0
 12073   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 12074   001690  0E00               	movlw	0
 12075   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 12076   001694                     l6348:
 12077                           
 12078                           ; BSR set to: 0
 12079   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 12080   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 12081   001698  B0D8               	btfsc	status,0,c
 12082   00169A  EF51  F00B         	goto	u7111
 12083   00169E  EF53  F00B         	goto	u7110
 12084   0016A2                     u7111:
 12085   0016A2  EF7A  F00B         	goto	l6384
 12086   0016A6                     u7110:
 12087   0016A6                     
 12088                           ; BSR set to: 0
 12089   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 12090   0016A8  EF58  F00B         	goto	u7121
 12091   0016AC  EF5A  F00B         	goto	u7120
 12092   0016B0                     u7121:
 12093   0016B0  EF5C  F00B         	goto	l6354
 12094   0016B4                     u7120:
 12095   0016B4                     
 12096                           ; BSR set to: 0
 12097   0016B4  0E80               	movlw	128
 12098   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12099   0016B8                     l6354:
 12100                           
 12101                           ; BSR set to: 0
 12102   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 12103   0016BC                     
 12104                           ; BSR set to: 0
 12105   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12106   0016C0                     
 12107                           ; BSR set to: 0
 12108   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 12109   0016C4                     
 12110                           ; BSR set to: 0
 12111   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 12112   0016C8                     
 12113                           ; BSR set to: 0
 12114   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12115   0016CC                     
 12116                           ; BSR set to: 0
 12117   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12118   0016D0                     
 12119                           ; BSR set to: 0
 12120   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12121   0016D4                     
 12122                           ; BSR set to: 0
 12123   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12124   0016D8                     
 12125                           ; BSR set to: 0
 12126   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12127   0016DC                     
 12128                           ; BSR set to: 0
 12129   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12130   0016E0                     
 12131                           ; BSR set to: 0
 12132   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12133   0016E4                     
 12134                           ; BSR set to: 0
 12135   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12136   0016E8                     
 12137                           ; BSR set to: 0
 12138   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12139   0016EC                     
 12140                           ; BSR set to: 0
 12141   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12142   0016F0                     
 12143                           ; BSR set to: 0
 12144   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12145   0016F4                     l6384:
 12146                           
 12147                           ; BSR set to: 0
 12148   0016F4  0E00               	movlw	0
 12149   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12150   0016F8                     
 12151                           ; BSR set to: 0
 12152   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12153   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12154   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12155   001700  5E4E               	subwf	??___fladd^0,f,c
 12156   001702  0E00               	movlw	0
 12157   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12158   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12159   001708  EF8F  F00B         	goto	u7131
 12160   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12161   00170E  E109               	bnz	u7130
 12162   001710  0E1A               	movlw	26
 12163   001712  5C4E               	subwf	??___fladd^0,w,c
 12164   001714  A0D8               	btfss	status,0,c
 12165   001716  EF8F  F00B         	goto	u7131
 12166   00171A  EF91  F00B         	goto	u7130
 12167   00171E                     u7131:
 12168   00171E  EFC8  F00B         	goto	l1239
 12169   001722                     u7130:
 12170   001722                     
 12171                           ; BSR set to: 0
 12172   001722  5046               	movf	___fladd@b^0,w,c
 12173   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12174   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12175   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12176   00172A  A4D8               	btfss	status,2,c
 12177   00172C  EF9A  F00B         	goto	u7141
 12178   001730  EF9D  F00B         	goto	u7140
 12179   001734                     u7141:
 12180   001734  0E01               	movlw	1
 12181   001736  EF9E  F00B         	goto	u7150
 12182   00173A                     u7140:
 12183   00173A  0E00               	movlw	0
 12184   00173C                     u7150:
 12185   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12186   00173E                     
 12187                           ; BSR set to: 0
 12188   00173E  0E00               	movlw	0
 12189   001740  6E46               	movwf	___fladd@b^0,c
 12190   001742  0E00               	movlw	0
 12191   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12192   001746  0E00               	movlw	0
 12193   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12194   00174A  0E00               	movlw	0
 12195   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12196   00174E                     
 12197                           ; BSR set to: 0
 12198   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12199   001752  EFD1  F00B         	goto	l1238
 12200   001756                     l1240:
 12201                           
 12202                           ; BSR set to: 0
 12203   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12204   001758  EFB0  F00B         	goto	u7161
 12205   00175C  EFB2  F00B         	goto	u7160
 12206   001760                     u7161:
 12207   001760  EFB8  F00B         	goto	l6396
 12208   001764                     u7160:
 12209   001764                     
 12210                           ; BSR set to: 0
 12211   001764  90D8               	bcf	status,0,c
 12212   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12213   001768  0901               	iorlw	1
 12214   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12215   00176C  EFBA  F00B         	goto	l6398
 12216   001770                     l6396:
 12217                           
 12218                           ; BSR set to: 0
 12219   001770  90D8               	bcf	status,0,c
 12220   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12221   001774                     l6398:
 12222                           
 12223                           ; BSR set to: 0
 12224   001774  A046               	btfss	___fladd@b^0,0,c
 12225   001776  EFBF  F00B         	goto	u7171
 12226   00177A  EFC1  F00B         	goto	u7170
 12227   00177E                     u7171:
 12228   00177E  EFC2  F00B         	goto	l6402
 12229   001782                     u7170:
 12230   001782                     
 12231                           ; BSR set to: 0
 12232   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12233   001784                     l6402:
 12234                           
 12235                           ; BSR set to: 0
 12236   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12237   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12238   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12239   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12240   00178C  3246               	rrcf	___fladd@b^0,f,c
 12241   00178E                     
 12242                           ; BSR set to: 0
 12243   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12244   001790                     l1239:
 12245                           
 12246                           ; BSR set to: 0
 12247   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12248   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12249   001794  A0D8               	btfss	status,0,c
 12250   001796  EFCF  F00B         	goto	u7181
 12251   00179A  EFD1  F00B         	goto	u7180
 12252   00179E                     u7181:
 12253   00179E  EFAB  F00B         	goto	l1240
 12254   0017A2                     u7180:
 12255   0017A2                     l1238:
 12256                           
 12257                           ; BSR set to: 0
 12258   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12259   0017A4  EFD6  F00B         	goto	u7191
 12260   0017A8  EFD8  F00B         	goto	u7190
 12261   0017AC                     u7191:
 12262   0017AC  EF18  F00C         	goto	l6430
 12263   0017B0                     u7190:
 12264   0017B0                     
 12265                           ; BSR set to: 0
 12266   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12267   0017B2  A4D8               	btfss	status,2,c
 12268   0017B4  EFDE  F00B         	goto	u7201
 12269   0017B8  EFE0  F00B         	goto	u7200
 12270   0017BC                     u7201:
 12271   0017BC  EFEA  F00B         	goto	l6412
 12272   0017C0                     u7200:
 12273   0017C0                     
 12274                           ; BSR set to: 0
 12275   0017C0  0E00               	movlw	0
 12276   0017C2  6E46               	movwf	?___fladd^0,c
 12277   0017C4  0E00               	movlw	0
 12278   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12279   0017C8  0E00               	movlw	0
 12280   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12281   0017CC  0E00               	movlw	0
 12282   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12283   0017D0  EF39  F00D         	goto	l1247
 12284   0017D4                     l6412:
 12285                           
 12286                           ; BSR set to: 0
 12287   0017D4  504A               	movf	___fladd@a^0,w,c
 12288   0017D6  2646               	addwf	___fladd@b^0,f,c
 12289   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12290   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12291   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12292   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12293   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12294   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12295   0017E4                     
 12296                           ; BSR set to: 0
 12297   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12298   0017E6  EFF7  F00B         	goto	u7211
 12299   0017EA  EFF9  F00B         	goto	u7210
 12300   0017EE                     u7211:
 12301   0017EE  EFA5  F00C         	goto	l6466
 12302   0017F2                     u7210:
 12303   0017F2                     
 12304                           ; BSR set to: 0
 12305   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12306   0017F4  EFFE  F00B         	goto	u7221
 12307   0017F8  EF00  F00C         	goto	u7220
 12308   0017FC                     u7221:
 12309   0017FC  EF06  F00C         	goto	l6420
 12310   001800                     u7220:
 12311   001800                     
 12312                           ; BSR set to: 0
 12313   001800  90D8               	bcf	status,0,c
 12314   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12315   001804  0901               	iorlw	1
 12316   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12317   001808  EF08  F00C         	goto	l6422
 12318   00180C                     l6420:
 12319                           
 12320                           ; BSR set to: 0
 12321   00180C  90D8               	bcf	status,0,c
 12322   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12323   001810                     l6422:
 12324                           
 12325                           ; BSR set to: 0
 12326   001810  A046               	btfss	___fladd@b^0,0,c
 12327   001812  EF0D  F00C         	goto	u7231
 12328   001816  EF0F  F00C         	goto	u7230
 12329   00181A                     u7231:
 12330   00181A  EF10  F00C         	goto	l6426
 12331   00181E                     u7230:
 12332   00181E                     
 12333                           ; BSR set to: 0
 12334   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12335   001820                     l6426:
 12336                           
 12337                           ; BSR set to: 0
 12338   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12339   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12340   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12341   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12342   001828  3246               	rrcf	___fladd@b^0,f,c
 12343   00182A                     
 12344                           ; BSR set to: 0
 12345   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12346   00182C  EFA5  F00C         	goto	l6466
 12347   001830                     l6430:
 12348                           
 12349                           ; BSR set to: 0
 12350   001830  504A               	movf	___fladd@a^0,w,c
 12351   001832  5C46               	subwf	___fladd@b^0,w,c
 12352   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12353   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12354   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12355   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12356   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12357   00183E  0A80               	xorlw	128
 12358   001840  6E4E               	movwf	??___fladd^0,c
 12359   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12360   001844  0A80               	xorlw	128
 12361   001846  584E               	subwfb	??___fladd^0,w,c
 12362   001848  B0D8               	btfsc	status,0,c
 12363   00184A  EF29  F00C         	goto	u7241
 12364   00184E  EF2B  F00C         	goto	u7240
 12365   001852                     u7241:
 12366   001852  EF56  F00C         	goto	l6440
 12367   001856                     u7240:
 12368   001856                     
 12369                           ; BSR set to: 0
 12370   001856  5046               	movf	___fladd@b^0,w,c
 12371   001858  5C4A               	subwf	___fladd@a^0,w,c
 12372   00185A  6E4E               	movwf	??___fladd^0,c
 12373   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12374   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12375   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12376   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12377   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12378   001866  6E50               	movwf	(??___fladd+2)^0,c
 12379   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12380   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12381   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12382   00186E  0EFF               	movlw	255
 12383   001870  244E               	addwf	??___fladd^0,w,c
 12384   001872  6E46               	movwf	___fladd@b^0,c
 12385   001874  0EFF               	movlw	255
 12386   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12387   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12388   00187A  0EFF               	movlw	255
 12389   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12390   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12391   001880  0EFF               	movlw	255
 12392   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12393   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12394   001886  0E80               	movlw	128
 12395   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12396   00188A                     
 12397                           ; BSR set to: 0
 12398   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12399   00188C                     
 12400                           ; BSR set to: 0
 12401   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12402   00188E  A4D8               	btfss	status,2,c
 12403   001890  EF4C  F00C         	goto	u7251
 12404   001894  EF4E  F00C         	goto	u7250
 12405   001898                     u7251:
 12406   001898  EF5E  F00C         	goto	l1255
 12407   00189C                     u7250:
 12408   00189C                     
 12409                           ; BSR set to: 0
 12410   00189C  0E01               	movlw	1
 12411   00189E  2646               	addwf	___fladd@b^0,f,c
 12412   0018A0  0E00               	movlw	0
 12413   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12414   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12415   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12416   0018A8  EF5E  F00C         	goto	l1255
 12417   0018AC                     l6440:
 12418                           
 12419                           ; BSR set to: 0
 12420   0018AC  504A               	movf	___fladd@a^0,w,c
 12421   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12422   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12423   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12424   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12425   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12426   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12427   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12428   0018BC                     l1255:
 12429                           
 12430                           ; BSR set to: 0
 12431   0018BC  5046               	movf	___fladd@b^0,w,c
 12432   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12433   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12434   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12435   0018C4  A4D8               	btfss	status,2,c
 12436   0018C6  EF67  F00C         	goto	u7261
 12437   0018CA  EF69  F00C         	goto	u7260
 12438   0018CE                     u7261:
 12439   0018CE  EF9E  F00C         	goto	l6464
 12440   0018D2                     u7260:
 12441   0018D2                     
 12442                           ; BSR set to: 0
 12443   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12444   0018D4  A4D8               	btfss	status,2,c
 12445   0018D6  EF6F  F00C         	goto	u7271
 12446   0018DA  EF71  F00C         	goto	u7270
 12447   0018DE                     u7271:
 12448   0018DE  EF9E  F00C         	goto	l6464
 12449   0018E2                     u7270:
 12450   0018E2                     
 12451                           ; BSR set to: 0
 12452   0018E2  0E00               	movlw	0
 12453   0018E4  6E46               	movwf	?___fladd^0,c
 12454   0018E6  0E00               	movlw	0
 12455   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12456   0018EA  0E00               	movlw	0
 12457   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12458   0018EE  0E00               	movlw	0
 12459   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12460   0018F2  EF39  F00D         	goto	l1247
 12461   0018F6                     l6448:
 12462                           
 12463                           ; BSR set to: 0
 12464   0018F6  90D8               	bcf	status,0,c
 12465   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12466   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12467   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12468   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12469   001900                     
 12470                           ; BSR set to: 0
 12471   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12472   001902  EF85  F00C         	goto	u7281
 12473   001906  EF87  F00C         	goto	u7280
 12474   00190A                     u7281:
 12475   00190A  EF88  F00C         	goto	l6454
 12476   00190E                     u7280:
 12477   00190E                     
 12478                           ; BSR set to: 0
 12479   00190E  8046               	bsf	___fladd@b^0,0,c
 12480   001910                     l6454:
 12481                           
 12482                           ; BSR set to: 0
 12483   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12484   001912  EF8D  F00C         	goto	u7291
 12485   001916  EF8F  F00C         	goto	u7290
 12486   00191A                     u7291:
 12487   00191A  EF93  F00C         	goto	l6458
 12488   00191E                     u7290:
 12489   00191E                     
 12490                           ; BSR set to: 0
 12491   00191E  80D8               	bsf	status,0,c
 12492   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12493   001922  EF95  F00C         	goto	l6460
 12494   001926                     l6458:
 12495                           
 12496                           ; BSR set to: 0
 12497   001926  90D8               	bcf	status,0,c
 12498   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12499   00192A                     l6460:
 12500                           
 12501                           ; BSR set to: 0
 12502   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12503   00192C  B4D8               	btfsc	status,2,c
 12504   00192E  EF9B  F00C         	goto	u7301
 12505   001932  EF9D  F00C         	goto	u7300
 12506   001936                     u7301:
 12507   001936  EF9E  F00C         	goto	l6464
 12508   00193A                     u7300:
 12509   00193A                     
 12510                           ; BSR set to: 0
 12511   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12512   00193C                     l6464:
 12513                           
 12514                           ; BSR set to: 0
 12515   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12516   00193E  EFA3  F00C         	goto	u7311
 12517   001942  EFA5  F00C         	goto	u7310
 12518   001946                     u7311:
 12519   001946  EF7B  F00C         	goto	l6448
 12520   00194A                     u7310:
 12521   00194A                     l6466:
 12522                           
 12523                           ; BSR set to: 0
 12524   00194A  0E00               	movlw	0
 12525   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12526   00194E                     
 12527                           ; BSR set to: 0
 12528   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12529   001950  EFAC  F00C         	goto	u7321
 12530   001954  EFAE  F00C         	goto	u7320
 12531   001958                     u7321:
 12532   001958  EFC6  F00C         	goto	l1264
 12533   00195C                     u7320:
 12534   00195C                     
 12535                           ; BSR set to: 0
 12536   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12537   001960  0E7F               	movlw	127
 12538   001962  164E               	andwf	??___fladd^0,f,c
 12539   001964  B4D8               	btfsc	status,2,c
 12540   001966  EFB7  F00C         	goto	u7331
 12541   00196A  EFB9  F00C         	goto	u7330
 12542   00196E                     u7331:
 12543   00196E  EFBD  F00C         	goto	l1265
 12544   001972                     u7330:
 12545   001972                     l6472:
 12546                           
 12547                           ; BSR set to: 0
 12548   001972  0E01               	movlw	1
 12549   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12550   001976  EFC6  F00C         	goto	l1264
 12551   00197A                     l1265:
 12552                           
 12553                           ; BSR set to: 0
 12554   00197A  A046               	btfss	___fladd@b^0,0,c
 12555   00197C  EFC2  F00C         	goto	u7341
 12556   001980  EFC4  F00C         	goto	u7340
 12557   001984                     u7341:
 12558   001984  EFC6  F00C         	goto	l1264
 12559   001988                     u7340:
 12560   001988  EFB9  F00C         	goto	l6472
 12561   00198C                     l1264:
 12562                           
 12563                           ; BSR set to: 0
 12564   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12565   00198E  B4D8               	btfsc	status,2,c
 12566   001990  EFCC  F00C         	goto	u7351
 12567   001994  EFCE  F00C         	goto	u7350
 12568   001998                     u7351:
 12569   001998  EFF9  F00C         	goto	l6484
 12570   00199C                     u7350:
 12571   00199C                     
 12572                           ; BSR set to: 0
 12573   00199C  0E01               	movlw	1
 12574   00199E  2646               	addwf	___fladd@b^0,f,c
 12575   0019A0  0E00               	movlw	0
 12576   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12577   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12578   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12579   0019A8                     
 12580                           ; BSR set to: 0
 12581   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12582   0019AA  EFD9  F00C         	goto	u7361
 12583   0019AE  EFDB  F00C         	goto	u7360
 12584   0019B2                     u7361:
 12585   0019B2  EFF9  F00C         	goto	l6484
 12586   0019B6                     u7360:
 12587   0019B6                     
 12588                           ; BSR set to: 0
 12589   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12590   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12591   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12592   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12593   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12594   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12595   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12596   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12597   0019CE  324E               	rrcf	??___fladd^0,f,c
 12598   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12599   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12600   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12601   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12602   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12603   0019E2  B4D8               	btfsc	status,2,c
 12604   0019E4  EFF6  F00C         	goto	u7371
 12605   0019E8  EFF8  F00C         	goto	u7370
 12606   0019EC                     u7371:
 12607   0019EC  EFF9  F00C         	goto	l6484
 12608   0019F0                     u7370:
 12609   0019F0                     
 12610                           ; BSR set to: 0
 12611   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12612   0019F2                     l6484:
 12613                           
 12614                           ; BSR set to: 0
 12615   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12616   0019F4  B4D8               	btfsc	status,2,c
 12617   0019F6  EFFF  F00C         	goto	u7381
 12618   0019FA  EF01  F00D         	goto	u7380
 12619   0019FE                     u7381:
 12620   0019FE  EF09  F00D         	goto	l6488
 12621   001A02                     u7380:
 12622   001A02                     
 12623                           ; BSR set to: 0
 12624   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12625   001A04  A4D8               	btfss	status,2,c
 12626   001A06  EF07  F00D         	goto	u7391
 12627   001A0A  EF09  F00D         	goto	u7390
 12628   001A0E                     u7391:
 12629   001A0E  EF1B  F00D         	goto	l6492
 12630   001A12                     u7390:
 12631   001A12                     l6488:
 12632                           
 12633                           ; BSR set to: 0
 12634   001A12  0E00               	movlw	0
 12635   001A14  6E46               	movwf	___fladd@b^0,c
 12636   001A16  0E00               	movlw	0
 12637   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12638   001A1A  0E00               	movlw	0
 12639   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12640   001A1E  0E00               	movlw	0
 12641   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12642   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12643   001A24  A4D8               	btfss	status,2,c
 12644   001A26  EF17  F00D         	goto	u7401
 12645   001A2A  EF19  F00D         	goto	u7400
 12646   001A2E                     u7401:
 12647   001A2E  EF1B  F00D         	goto	l6492
 12648   001A32                     u7400:
 12649   001A32                     
 12650                           ; BSR set to: 0
 12651   001A32  0E00               	movlw	0
 12652   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12653   001A36                     l6492:
 12654                           
 12655                           ; BSR set to: 0
 12656   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12657   001A38  EF20  F00D         	goto	u7411
 12658   001A3C  EF22  F00D         	goto	u7410
 12659   001A40                     u7411:
 12660   001A40  EF25  F00D         	goto	l6496
 12661   001A44                     u7410:
 12662   001A44                     
 12663                           ; BSR set to: 0
 12664   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12665   001A46  EF26  F00D         	goto	l6498
 12666   001A4A                     l6496:
 12667                           
 12668                           ; BSR set to: 0
 12669   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12670   001A4C                     l6498:
 12671                           
 12672                           ; BSR set to: 0
 12673   001A4C  90D8               	bcf	status,0,c
 12674   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12675   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12676   001A52                     
 12677                           ; BSR set to: 0
 12678   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12679   001A54  EF2E  F00D         	goto	u7421
 12680   001A58  EF30  F00D         	goto	u7420
 12681   001A5C                     u7421:
 12682   001A5C  EF31  F00D         	goto	l6504
 12683   001A60                     u7420:
 12684   001A60                     
 12685                           ; BSR set to: 0
 12686   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12687   001A62                     l6504:
 12688                           
 12689                           ; BSR set to: 0
 12690   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12691   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12692   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12693   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12694   001A72                     l1247:
 12695                           
 12696                           ; BSR set to: 0
 12697   001A72  0012               	return		;funcret
 12698   001A74                     __end_of___fladd:
 12699                           	callstack 0
 12700                           
 12701 ;; *************** function ___flneg *****************
 12702 ;; Defined at:
 12703 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  f1              4   32[BANK0 ] unsigned char 
 12706 ;; Auto vars:     Size  Location     Type
 12707 ;;		None
 12708 ;; Return value:  Size  Location     Type
 12709 ;;                  4   32[BANK0 ] unsigned char 
 12710 ;; Registers used:
 12711 ;;		wreg, status,2, status,0
 12712 ;; Tracked objects:
 12713 ;;		On entry : 0/0
 12714 ;;		On exit  : 0/0
 12715 ;;		Unchanged: 0/0
 12716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12720 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12721 ;;Total ram usage:        4 bytes
 12722 ;; Hardware stack levels used: 1
 12723 ;; Hardware stack levels required when called: 1
 12724 ;; This function calls:
 12725 ;;		Nothing
 12726 ;; This function is called by:
 12727 ;;		_efgtoa
 12728 ;;		_sinf
 12729 ;;		___rem_pio2f
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           	psect	text45
 12734   00508A                     __ptext45:
 12735                           	callstack 0
 12736   00508A                     ___flneg:
 12737                           	callstack 24
 12738   00508A  0100               	movlb	0	; () banked
 12739   00508C  5180               	movf	___flneg@f1& (0+255),w,b
 12740   00508E  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12741   005090  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12742   005092  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12743   005094  B4D8               	btfsc	status,2,c
 12744   005096  EF4F  F028         	goto	u8061
 12745   00509A  EF51  F028         	goto	u8060
 12746   00509E                     u8061:
 12747   00509E  EF59  F028         	goto	l6918
 12748   0050A2                     u8060:
 12749   0050A2                     
 12750                           ; BSR set to: 0
 12751   0050A2  0E00               	movlw	0
 12752   0050A4  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12753   0050A6  0E00               	movlw	0
 12754   0050A8  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12755   0050AA  0E00               	movlw	0
 12756   0050AC  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12757   0050AE  0E80               	movlw	128
 12758   0050B0  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12759   0050B2                     l6918:
 12760                           
 12761                           ; BSR set to: 0
 12762   0050B2  C080  F080         	movff	___flneg@f1,?___flneg
 12763   0050B6  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12764   0050BA  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12765   0050BE  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12766   0050C2                     
 12767                           ; BSR set to: 0
 12768   0050C2  0012               	return		;funcret
 12769   0050C4                     __end_of___flneg:
 12770                           	callstack 0
 12771                           
 12772 ;; *************** function ___flmul *****************
 12773 ;; Defined at:
 12774 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  b               4   19[COMRAM] unsigned char 
 12777 ;;  a               4   23[COMRAM] unsigned char 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;  prod            4   38[COMRAM] struct .
 12780 ;;  grs             4   33[COMRAM] unsigned long 
 12781 ;;  temp            2   42[COMRAM] struct .
 12782 ;;  bexp            1   37[COMRAM] unsigned char 
 12783 ;;  aexp            1   32[COMRAM] unsigned char 
 12784 ;;  sign            1   31[COMRAM] unsigned char 
 12785 ;; Return value:  Size  Location     Type
 12786 ;;                  4   19[COMRAM] unsigned char 
 12787 ;; Registers used:
 12788 ;;		wreg, status,2, status,0, prodl, prodh
 12789 ;; Tracked objects:
 12790 ;;		On entry : 0/0
 12791 ;;		On exit  : 0/0
 12792 ;;		Unchanged: 0/0
 12793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12794 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12795 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12796 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12797 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12798 ;;Total ram usage:       25 bytes
 12799 ;; Hardware stack levels used: 1
 12800 ;; Hardware stack levels required when called: 1
 12801 ;; This function calls:
 12802 ;;		Nothing
 12803 ;; This function is called by:
 12804 ;;		_runDAC
 12805 ;;		_runADC
 12806 ;;		_efgtoa
 12807 ;;		___cosdf
 12808 ;;		___rem_pio2f
 12809 ;;		___sindf
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text46
 12814   001A74                     __ptext46:
 12815                           	callstack 0
 12816   001A74                     ___flmul:
 12817                           	callstack 24
 12818   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12819   001A76  0B80               	andlw	128
 12820   001A78  6E20               	movwf	___flmul@sign^0,c
 12821   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12822   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12823   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12824   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12825   001A82  EF45  F00D         	goto	u7671
 12826   001A86  EF47  F00D         	goto	u7670
 12827   001A8A                     u7671:
 12828   001A8A  EF48  F00D         	goto	l6666
 12829   001A8E                     u7670:
 12830   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12831   001A90                     l6666:
 12832   001A90  5026               	movf	___flmul@bexp^0,w,c
 12833   001A92  B4D8               	btfsc	status,2,c
 12834   001A94  EF4E  F00D         	goto	u7681
 12835   001A98  EF50  F00D         	goto	u7680
 12836   001A9C                     u7681:
 12837   001A9C  EF63  F00D         	goto	l6674
 12838   001AA0                     u7680:
 12839   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12840   001AA2  A4D8               	btfss	status,2,c
 12841   001AA4  EF56  F00D         	goto	u7691
 12842   001AA8  EF58  F00D         	goto	u7690
 12843   001AAC                     u7691:
 12844   001AAC  EF60  F00D         	goto	l6672
 12845   001AB0                     u7690:
 12846   001AB0  0E00               	movlw	0
 12847   001AB2  6E14               	movwf	___flmul@b^0,c
 12848   001AB4  0E00               	movlw	0
 12849   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 12850   001AB8  0E00               	movlw	0
 12851   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 12852   001ABC  0E00               	movlw	0
 12853   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 12854   001AC0                     l6672:
 12855   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 12856   001AC2  EF6B  F00D         	goto	l6676
 12857   001AC6                     l6674:
 12858   001AC6  0E00               	movlw	0
 12859   001AC8  6E14               	movwf	___flmul@b^0,c
 12860   001ACA  0E00               	movlw	0
 12861   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 12862   001ACE  0E00               	movlw	0
 12863   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 12864   001AD2  0E00               	movlw	0
 12865   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 12866   001AD6                     l6676:
 12867   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 12868   001AD8  0B80               	andlw	128
 12869   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 12870   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 12871   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 12872   001AE0  6E21               	movwf	___flmul@aexp^0,c
 12873   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 12874   001AE4  EF76  F00D         	goto	u7701
 12875   001AE8  EF78  F00D         	goto	u7700
 12876   001AEC                     u7701:
 12877   001AEC  EF79  F00D         	goto	l6684
 12878   001AF0                     u7700:
 12879   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 12880   001AF2                     l6684:
 12881   001AF2  5021               	movf	___flmul@aexp^0,w,c
 12882   001AF4  B4D8               	btfsc	status,2,c
 12883   001AF6  EF7F  F00D         	goto	u7711
 12884   001AFA  EF81  F00D         	goto	u7710
 12885   001AFE                     u7711:
 12886   001AFE  EF94  F00D         	goto	l6692
 12887   001B02                     u7710:
 12888   001B02  2821               	incf	___flmul@aexp^0,w,c
 12889   001B04  A4D8               	btfss	status,2,c
 12890   001B06  EF87  F00D         	goto	u7721
 12891   001B0A  EF89  F00D         	goto	u7720
 12892   001B0E                     u7721:
 12893   001B0E  EF91  F00D         	goto	l6690
 12894   001B12                     u7720:
 12895   001B12  0E00               	movlw	0
 12896   001B14  6E18               	movwf	___flmul@a^0,c
 12897   001B16  0E00               	movlw	0
 12898   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 12899   001B1A  0E00               	movlw	0
 12900   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 12901   001B1E  0E00               	movlw	0
 12902   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 12903   001B22                     l6690:
 12904   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 12905   001B24  EF9C  F00D         	goto	l1324
 12906   001B28                     l6692:
 12907   001B28  0E00               	movlw	0
 12908   001B2A  6E18               	movwf	___flmul@a^0,c
 12909   001B2C  0E00               	movlw	0
 12910   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 12911   001B30  0E00               	movlw	0
 12912   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 12913   001B34  0E00               	movlw	0
 12914   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 12915   001B38                     l1324:
 12916   001B38  5021               	movf	___flmul@aexp^0,w,c
 12917   001B3A  B4D8               	btfsc	status,2,c
 12918   001B3C  EFA2  F00D         	goto	u7731
 12919   001B40  EFA4  F00D         	goto	u7730
 12920   001B44                     u7731:
 12921   001B44  EFAC  F00D         	goto	l6696
 12922   001B48                     u7730:
 12923   001B48  5026               	movf	___flmul@bexp^0,w,c
 12924   001B4A  A4D8               	btfss	status,2,c
 12925   001B4C  EFAA  F00D         	goto	u7741
 12926   001B50  EFAC  F00D         	goto	u7740
 12927   001B54                     u7741:
 12928   001B54  EFB6  F00D         	goto	l6700
 12929   001B58                     u7740:
 12930   001B58                     l6696:
 12931   001B58  0E00               	movlw	0
 12932   001B5A  6E14               	movwf	?___flmul^0,c
 12933   001B5C  0E00               	movlw	0
 12934   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 12935   001B60  0E00               	movlw	0
 12936   001B62  6E16               	movwf	(?___flmul+2)^0,c
 12937   001B64  0E00               	movlw	0
 12938   001B66  6E17               	movwf	(?___flmul+3)^0,c
 12939   001B68  EF4E  F00F         	goto	l1328
 12940   001B6C                     l6700:
 12941   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 12942   001B6E  0214               	mulwf	___flmul@b^0,c
 12943   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 12944   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12945   001B78  502B               	movf	___flmul@temp^0,w,c
 12946   001B7A  6E22               	movwf	___flmul@grs^0,c
 12947   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 12948   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 12949   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 12950   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 12951   001B84  6E27               	movwf	___flmul@prod^0,c
 12952   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 12953   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 12954   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 12955   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 12956   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 12957   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 12958   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12959   001B98  502B               	movf	___flmul@temp^0,w,c
 12960   001B9A  2622               	addwf	___flmul@grs^0,f,c
 12961   001B9C  0E00               	movlw	0
 12962   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12963   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12964   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12965   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 12966   001BA6  2627               	addwf	___flmul@prod^0,f,c
 12967   001BA8  0E00               	movlw	0
 12968   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12969   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12970   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12971   001BB0  5018               	movf	___flmul@a^0,w,c
 12972   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 12973   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 12974   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12975   001BBC  502B               	movf	___flmul@temp^0,w,c
 12976   001BBE  2622               	addwf	___flmul@grs^0,f,c
 12977   001BC0  0E00               	movlw	0
 12978   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12979   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12980   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12981   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 12982   001BCA  2627               	addwf	___flmul@prod^0,f,c
 12983   001BCC  0E00               	movlw	0
 12984   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12985   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12986   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12987   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12988   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12989   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12990   001BE0  6A22               	clrf	___flmul@grs^0,c
 12991   001BE2  5018               	movf	___flmul@a^0,w,c
 12992   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 12993   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 12994   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12995   001BEE  502B               	movf	___flmul@temp^0,w,c
 12996   001BF0  2622               	addwf	___flmul@grs^0,f,c
 12997   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 12998   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12999   001BF6  0E00               	movlw	0
 13000   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13001   001BFA  0E00               	movlw	0
 13002   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13003   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 13004   001C00  0214               	mulwf	___flmul@b^0,c
 13005   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 13006   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13007   001C0A  502B               	movf	___flmul@temp^0,w,c
 13008   001C0C  2622               	addwf	___flmul@grs^0,f,c
 13009   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 13010   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13011   001C12  0E00               	movlw	0
 13012   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13013   001C16  0E00               	movlw	0
 13014   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13015   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13016   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13017   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13018   001C26  6A22               	clrf	___flmul@grs^0,c
 13019   001C28  5018               	movf	___flmul@a^0,w,c
 13020   001C2A  0214               	mulwf	___flmul@b^0,c
 13021   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 13022   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13023   001C34  502B               	movf	___flmul@temp^0,w,c
 13024   001C36  2622               	addwf	___flmul@grs^0,f,c
 13025   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 13026   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13027   001C3C  0E00               	movlw	0
 13028   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13029   001C40  0E00               	movlw	0
 13030   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13031   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 13032   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 13033   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 13034   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13035   001C50  502B               	movf	___flmul@temp^0,w,c
 13036   001C52  2627               	addwf	___flmul@prod^0,f,c
 13037   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 13038   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13039   001C58  0E00               	movlw	0
 13040   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13041   001C5C  0E00               	movlw	0
 13042   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13043   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 13044   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 13045   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 13046   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13047   001C6C  502B               	movf	___flmul@temp^0,w,c
 13048   001C6E  2627               	addwf	___flmul@prod^0,f,c
 13049   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 13050   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13051   001C74  0E00               	movlw	0
 13052   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13053   001C78  0E00               	movlw	0
 13054   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13055   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 13056   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 13057   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 13058   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13059   001C88  502B               	movf	___flmul@temp^0,w,c
 13060   001C8A  6E1C               	movwf	??___flmul^0,c
 13061   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 13062   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 13063   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 13064   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 13065   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 13066   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 13067   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 13068   001CA0  6A1C               	clrf	??___flmul^0,c
 13069   001CA2  501C               	movf	??___flmul^0,w,c
 13070   001CA4  2627               	addwf	___flmul@prod^0,f,c
 13071   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 13072   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13073   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 13074   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13075   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 13076   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13077   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 13078   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 13079   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 13080   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 13081   001CC2  0E19               	movlw	25
 13082   001CC4  EF69  F00E         	goto	u7750
 13083   001CC8                     u7755:
 13084   001CC8  90D8               	bcf	status,0,c
 13085   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 13086   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 13087   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 13088   001CD0  321C               	rrcf	??___flmul^0,f,c
 13089   001CD2                     u7750:
 13090   001CD2  2EE8               	decfsz	wreg,f,c
 13091   001CD4  EF64  F00E         	goto	u7755
 13092   001CD8  501C               	movf	??___flmul^0,w,c
 13093   001CDA  2627               	addwf	___flmul@prod^0,f,c
 13094   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 13095   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13096   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 13097   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13098   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 13099   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13100   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13101   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13102   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13103   001CF4  6A22               	clrf	___flmul@grs^0,c
 13104   001CF6  5021               	movf	___flmul@aexp^0,w,c
 13105   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 13106   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 13107   001CFE  261C               	addwf	??___flmul^0,f,c
 13108   001D00  0E00               	movlw	0
 13109   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 13110   001D04  0E82               	movlw	130
 13111   001D06  241C               	addwf	??___flmul^0,w,c
 13112   001D08  6E2B               	movwf	___flmul@temp^0,c
 13113   001D0A  0EFF               	movlw	255
 13114   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13115   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13116   001D10  EF9F  F00E         	goto	l6748
 13117   001D14                     l6742:
 13118   001D14  90D8               	bcf	status,0,c
 13119   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13120   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13121   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13122   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13123   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13124   001D20  EF94  F00E         	goto	u7761
 13125   001D24  EF96  F00E         	goto	u7760
 13126   001D28                     u7761:
 13127   001D28  EF97  F00E         	goto	l1331
 13128   001D2C                     u7760:
 13129   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13130   001D2E                     l1331:
 13131   001D2E  90D8               	bcf	status,0,c
 13132   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13133   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13134   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13135   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13136   001D38  062B               	decf	___flmul@temp^0,f,c
 13137   001D3A  A0D8               	btfss	status,0,c
 13138   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13139   001D3E                     l6748:
 13140   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13141   001D40  EFA4  F00E         	goto	u7771
 13142   001D44  EFA6  F00E         	goto	u7770
 13143   001D48                     u7771:
 13144   001D48  EF8A  F00E         	goto	l6742
 13145   001D4C                     u7770:
 13146   001D4C  0E00               	movlw	0
 13147   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13148   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13149   001D52  EFAD  F00E         	goto	u7781
 13150   001D56  EFAF  F00E         	goto	u7780
 13151   001D5A                     u7781:
 13152   001D5A  EFD3  F00E         	goto	l1333
 13153   001D5E                     u7780:
 13154   001D5E  0EFF               	movlw	255
 13155   001D60  1422               	andwf	___flmul@grs^0,w,c
 13156   001D62  6E1C               	movwf	??___flmul^0,c
 13157   001D64  0EFF               	movlw	255
 13158   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13159   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13160   001D6A  0EFF               	movlw	255
 13161   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13162   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13163   001D70  0E7F               	movlw	127
 13164   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13165   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13166   001D76  501C               	movf	??___flmul^0,w,c
 13167   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13168   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13169   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13170   001D7E  B4D8               	btfsc	status,2,c
 13171   001D80  EFC4  F00E         	goto	u7791
 13172   001D84  EFC6  F00E         	goto	u7790
 13173   001D88                     u7791:
 13174   001D88  EFCA  F00E         	goto	l1334
 13175   001D8C                     u7790:
 13176   001D8C                     l6756:
 13177   001D8C  0E01               	movlw	1
 13178   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13179   001D90  EFD3  F00E         	goto	l1333
 13180   001D94                     l1334:
 13181   001D94  A027               	btfss	___flmul@prod^0,0,c
 13182   001D96  EFCF  F00E         	goto	u7801
 13183   001D9A  EFD1  F00E         	goto	u7800
 13184   001D9E                     u7801:
 13185   001D9E  EFD3  F00E         	goto	l1333
 13186   001DA2                     u7800:
 13187   001DA2  EFC6  F00E         	goto	l6756
 13188   001DA6                     l1333:
 13189   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13190   001DA8  B4D8               	btfsc	status,2,c
 13191   001DAA  EFD9  F00E         	goto	u7811
 13192   001DAE  EFDB  F00E         	goto	u7810
 13193   001DB2                     u7811:
 13194   001DB2  EFFF  F00E         	goto	l6768
 13195   001DB6                     u7810:
 13196   001DB6  0E01               	movlw	1
 13197   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13198   001DBA  0E00               	movlw	0
 13199   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13200   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13201   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13202   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13203   001DC4  EFE6  F00E         	goto	u7821
 13204   001DC8  EFE8  F00E         	goto	u7820
 13205   001DCC                     u7821:
 13206   001DCC  EFFF  F00E         	goto	l6768
 13207   001DD0                     u7820:
 13208   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13209   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13210   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13211   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13212   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13213   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13214   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13215   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13216   001DE8  321C               	rrcf	??___flmul^0,f,c
 13217   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13218   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13219   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13220   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13221   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13222   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13223   001DFE                     l6768:
 13224   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13225   001E00  EF0A  F00F         	goto	u7831
 13226   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13227   001E06  E108               	bnz	u7830
 13228   001E08  282B               	incf	___flmul@temp^0,w,c
 13229   001E0A  A0D8               	btfss	status,0,c
 13230   001E0C  EF0A  F00F         	goto	u7831
 13231   001E10  EF0C  F00F         	goto	u7830
 13232   001E14                     u7831:
 13233   001E14  EF16  F00F         	goto	l6772
 13234   001E18                     u7830:
 13235   001E18  0E00               	movlw	0
 13236   001E1A  6E27               	movwf	___flmul@prod^0,c
 13237   001E1C  0E00               	movlw	0
 13238   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13239   001E20  0E80               	movlw	128
 13240   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13241   001E24  0E7F               	movlw	127
 13242   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13243   001E28  EF44  F00F         	goto	l6784
 13244   001E2C                     l6772:
 13245   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13246   001E2E  EF23  F00F         	goto	u7840
 13247   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13248   001E34  E106               	bnz	u7841
 13249   001E36  042B               	decf	___flmul@temp^0,w,c
 13250   001E38  B0D8               	btfsc	status,0,c
 13251   001E3A  EF21  F00F         	goto	u7841
 13252   001E3E  EF23  F00F         	goto	u7840
 13253   001E42                     u7841:
 13254   001E42  EF2F  F00F         	goto	l1341
 13255   001E46                     u7840:
 13256   001E46  0E00               	movlw	0
 13257   001E48  6E27               	movwf	___flmul@prod^0,c
 13258   001E4A  0E00               	movlw	0
 13259   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13260   001E4E  0E00               	movlw	0
 13261   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13262   001E52  0E00               	movlw	0
 13263   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13264   001E56  0E00               	movlw	0
 13265   001E58  6E20               	movwf	___flmul@sign^0,c
 13266   001E5A  EF44  F00F         	goto	l6784
 13267   001E5E                     l1341:
 13268   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13269   001E62  0EFF               	movlw	255
 13270   001E64  1627               	andwf	___flmul@prod^0,f,c
 13271   001E66  0EFF               	movlw	255
 13272   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13273   001E6A  0E7F               	movlw	127
 13274   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13275   001E6E  0E00               	movlw	0
 13276   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13277   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13278   001E74  EF3E  F00F         	goto	u7851
 13279   001E78  EF40  F00F         	goto	u7850
 13280   001E7C                     u7851:
 13281   001E7C  EF41  F00F         	goto	l6782
 13282   001E80                     u7850:
 13283   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13284   001E82                     l6782:
 13285   001E82  90D8               	bcf	status,0,c
 13286   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13287   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13288   001E88                     l6784:
 13289   001E88  5020               	movf	___flmul@sign^0,w,c
 13290   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13291   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13292   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13293   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13294   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13295   001E9C                     l1328:
 13296   001E9C  0012               	return		;funcret
 13297   001E9E                     __end_of___flmul:
 13298                           	callstack 0
 13299                           
 13300 ;; *************** function ___flge *****************
 13301 ;; Defined at:
 13302 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;  ff1             4   44[COMRAM] unsigned char 
 13305 ;;  ff2             4   48[COMRAM] unsigned char 
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;		None
 13308 ;; Return value:  Size  Location     Type
 13309 ;;		None               void
 13310 ;; Registers used:
 13311 ;;		wreg, status,2, status,0
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13317 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;Total ram usage:       12 bytes
 13322 ;; Hardware stack levels used: 1
 13323 ;; Hardware stack levels required when called: 1
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_efgtoa
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           	psect	text47
 13332   004378                     __ptext47:
 13333                           	callstack 0
 13334   004378                     ___flge:
 13335                           	callstack 24
 13336   004378  0E00               	movlw	0
 13337   00437A  142D               	andwf	___flge@ff1^0,w,c
 13338   00437C  6E35               	movwf	??___flge^0,c
 13339   00437E  0E00               	movlw	0
 13340   004380  142E               	andwf	(___flge@ff1+1)^0,w,c
 13341   004382  6E36               	movwf	(??___flge+1)^0,c
 13342   004384  0E80               	movlw	128
 13343   004386  142F               	andwf	(___flge@ff1+2)^0,w,c
 13344   004388  6E37               	movwf	(??___flge+2)^0,c
 13345   00438A  0E7F               	movlw	127
 13346   00438C  1430               	andwf	(___flge@ff1+3)^0,w,c
 13347   00438E  6E38               	movwf	(??___flge+3)^0,c
 13348   004390  5035               	movf	??___flge^0,w,c
 13349   004392  1036               	iorwf	(??___flge+1)^0,w,c
 13350   004394  1037               	iorwf	(??___flge+2)^0,w,c
 13351   004396  1038               	iorwf	(??___flge+3)^0,w,c
 13352   004398  A4D8               	btfss	status,2,c
 13353   00439A  EFD1  F021         	goto	u8011
 13354   00439E  EFD3  F021         	goto	u8010
 13355   0043A2                     u8011:
 13356   0043A2  EFDB  F021         	goto	l6896
 13357   0043A6                     u8010:
 13358   0043A6  0E00               	movlw	0
 13359   0043A8  6E2D               	movwf	___flge@ff1^0,c
 13360   0043AA  0E00               	movlw	0
 13361   0043AC  6E2E               	movwf	(___flge@ff1+1)^0,c
 13362   0043AE  0E00               	movlw	0
 13363   0043B0  6E2F               	movwf	(___flge@ff1+2)^0,c
 13364   0043B2  0E00               	movlw	0
 13365   0043B4  6E30               	movwf	(___flge@ff1+3)^0,c
 13366   0043B6                     l6896:
 13367   0043B6  0E00               	movlw	0
 13368   0043B8  1431               	andwf	___flge@ff2^0,w,c
 13369   0043BA  6E35               	movwf	??___flge^0,c
 13370   0043BC  0E00               	movlw	0
 13371   0043BE  1432               	andwf	(___flge@ff2+1)^0,w,c
 13372   0043C0  6E36               	movwf	(??___flge+1)^0,c
 13373   0043C2  0E80               	movlw	128
 13374   0043C4  1433               	andwf	(___flge@ff2+2)^0,w,c
 13375   0043C6  6E37               	movwf	(??___flge+2)^0,c
 13376   0043C8  0E7F               	movlw	127
 13377   0043CA  1434               	andwf	(___flge@ff2+3)^0,w,c
 13378   0043CC  6E38               	movwf	(??___flge+3)^0,c
 13379   0043CE  5035               	movf	??___flge^0,w,c
 13380   0043D0  1036               	iorwf	(??___flge+1)^0,w,c
 13381   0043D2  1037               	iorwf	(??___flge+2)^0,w,c
 13382   0043D4  1038               	iorwf	(??___flge+3)^0,w,c
 13383   0043D6  A4D8               	btfss	status,2,c
 13384   0043D8  EFF0  F021         	goto	u8021
 13385   0043DC  EFF2  F021         	goto	u8020
 13386   0043E0                     u8021:
 13387   0043E0  EFFA  F021         	goto	l6900
 13388   0043E4                     u8020:
 13389   0043E4  0E00               	movlw	0
 13390   0043E6  6E31               	movwf	___flge@ff2^0,c
 13391   0043E8  0E00               	movlw	0
 13392   0043EA  6E32               	movwf	(___flge@ff2+1)^0,c
 13393   0043EC  0E00               	movlw	0
 13394   0043EE  6E33               	movwf	(___flge@ff2+2)^0,c
 13395   0043F0  0E00               	movlw	0
 13396   0043F2  6E34               	movwf	(___flge@ff2+3)^0,c
 13397   0043F4                     l6900:
 13398   0043F4  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13399   0043F6  EFFF  F021         	goto	u8031
 13400   0043FA  EF01  F022         	goto	u8030
 13401   0043FE                     u8031:
 13402   0043FE  EF0A  F022         	goto	l6904
 13403   004402                     u8030:
 13404   004402  6C2D               	negf	___flge@ff1^0,c
 13405   004404  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13406   004406  B0D8               	btfsc	status,0,c
 13407   004408  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13408   00440A  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13409   00440C  B0D8               	btfsc	status,0,c
 13410   00440E  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13411   004410  0E80               	movlw	128
 13412   004412  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13413   004414                     l6904:
 13414   004414  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13415   004416  EF0F  F022         	goto	u8041
 13416   00441A  EF11  F022         	goto	u8040
 13417   00441E                     u8041:
 13418   00441E  EF1A  F022         	goto	l975
 13419   004422                     u8040:
 13420   004422  6C31               	negf	___flge@ff2^0,c
 13421   004424  1E32               	comf	(___flge@ff2+1)^0,f,c
 13422   004426  B0D8               	btfsc	status,0,c
 13423   004428  2A32               	incf	(___flge@ff2+1)^0,f,c
 13424   00442A  1E33               	comf	(___flge@ff2+2)^0,f,c
 13425   00442C  B0D8               	btfsc	status,0,c
 13426   00442E  2A33               	incf	(___flge@ff2+2)^0,f,c
 13427   004430  0E80               	movlw	128
 13428   004432  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13429   004434                     l975:
 13430   004434  0E00               	movlw	0
 13431   004436  1A2D               	xorwf	___flge@ff1^0,f,c
 13432   004438  0E00               	movlw	0
 13433   00443A  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13434   00443C  0E00               	movlw	0
 13435   00443E  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13436   004440  0E80               	movlw	128
 13437   004442  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13438   004444  0E00               	movlw	0
 13439   004446  1A31               	xorwf	___flge@ff2^0,f,c
 13440   004448  0E00               	movlw	0
 13441   00444A  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13442   00444C  0E00               	movlw	0
 13443   00444E  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13444   004450  0E80               	movlw	128
 13445   004452  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13446   004454  5031               	movf	___flge@ff2^0,w,c
 13447   004456  5C2D               	subwf	___flge@ff1^0,w,c
 13448   004458  5032               	movf	(___flge@ff2+1)^0,w,c
 13449   00445A  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13450   00445C  5033               	movf	(___flge@ff2+2)^0,w,c
 13451   00445E  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13452   004460  5034               	movf	(___flge@ff2+3)^0,w,c
 13453   004462  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13454   004464  B0D8               	btfsc	status,0,c
 13455   004466  EF37  F022         	goto	u8051
 13456   00446A  EF39  F022         	goto	u8050
 13457   00446E                     u8051:
 13458   00446E  EF3C  F022         	goto	l6910
 13459   004472                     u8050:
 13460   004472  90D8               	bcf	status,0,c
 13461   004474  EF3D  F022         	goto	l980
 13462   004478                     l6910:
 13463   004478  80D8               	bsf	status,0,c
 13464   00447A                     l980:
 13465   00447A  0012               	return		;funcret
 13466   00447C                     __end_of___flge:
 13467                           	callstack 0
 13468                           
 13469 ;; *************** function ___fleq *****************
 13470 ;; Defined at:
 13471 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  ff1             4    5[COMRAM] unsigned char 
 13474 ;;  ff2             4    9[COMRAM] unsigned char 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;		None               void
 13479 ;; Registers used:
 13480 ;;		wreg, status,2, status,0
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13486 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;Total ram usage:       12 bytes
 13491 ;; Hardware stack levels used: 1
 13492 ;; Hardware stack levels required when called: 1
 13493 ;; This function calls:
 13494 ;;		Nothing
 13495 ;; This function is called by:
 13496 ;;		_efgtoa
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           
 13500                           	psect	text48
 13501   004AE2                     __ptext48:
 13502                           	callstack 0
 13503   004AE2                     ___fleq:
 13504                           	callstack 24
 13505   004AE2  0E00               	movlw	0
 13506   004AE4  1406               	andwf	___fleq@ff1^0,w,c
 13507   004AE6  6E0E               	movwf	??___fleq^0,c
 13508   004AE8  0E00               	movlw	0
 13509   004AEA  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13510   004AEC  6E0F               	movwf	(??___fleq+1)^0,c
 13511   004AEE  0E80               	movlw	128
 13512   004AF0  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13513   004AF2  6E10               	movwf	(??___fleq+2)^0,c
 13514   004AF4  0E7F               	movlw	127
 13515   004AF6  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13516   004AF8  6E11               	movwf	(??___fleq+3)^0,c
 13517   004AFA  500E               	movf	??___fleq^0,w,c
 13518   004AFC  100F               	iorwf	(??___fleq+1)^0,w,c
 13519   004AFE  1010               	iorwf	(??___fleq+2)^0,w,c
 13520   004B00  1011               	iorwf	(??___fleq+3)^0,w,c
 13521   004B02  A4D8               	btfss	status,2,c
 13522   004B04  EF86  F025         	goto	u7981
 13523   004B08  EF88  F025         	goto	u7980
 13524   004B0C                     u7981:
 13525   004B0C  EF90  F025         	goto	l6880
 13526   004B10                     u7980:
 13527   004B10  0E00               	movlw	0
 13528   004B12  6E06               	movwf	___fleq@ff1^0,c
 13529   004B14  0E00               	movlw	0
 13530   004B16  6E07               	movwf	(___fleq@ff1+1)^0,c
 13531   004B18  0E00               	movlw	0
 13532   004B1A  6E08               	movwf	(___fleq@ff1+2)^0,c
 13533   004B1C  0E00               	movlw	0
 13534   004B1E  6E09               	movwf	(___fleq@ff1+3)^0,c
 13535   004B20                     l6880:
 13536   004B20  0E00               	movlw	0
 13537   004B22  140A               	andwf	___fleq@ff2^0,w,c
 13538   004B24  6E0E               	movwf	??___fleq^0,c
 13539   004B26  0E00               	movlw	0
 13540   004B28  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13541   004B2A  6E0F               	movwf	(??___fleq+1)^0,c
 13542   004B2C  0E80               	movlw	128
 13543   004B2E  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13544   004B30  6E10               	movwf	(??___fleq+2)^0,c
 13545   004B32  0E7F               	movlw	127
 13546   004B34  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13547   004B36  6E11               	movwf	(??___fleq+3)^0,c
 13548   004B38  500E               	movf	??___fleq^0,w,c
 13549   004B3A  100F               	iorwf	(??___fleq+1)^0,w,c
 13550   004B3C  1010               	iorwf	(??___fleq+2)^0,w,c
 13551   004B3E  1011               	iorwf	(??___fleq+3)^0,w,c
 13552   004B40  A4D8               	btfss	status,2,c
 13553   004B42  EFA5  F025         	goto	u7991
 13554   004B46  EFA7  F025         	goto	u7990
 13555   004B4A                     u7991:
 13556   004B4A  EFAF  F025         	goto	l6884
 13557   004B4E                     u7990:
 13558   004B4E  0E00               	movlw	0
 13559   004B50  6E0A               	movwf	___fleq@ff2^0,c
 13560   004B52  0E00               	movlw	0
 13561   004B54  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13562   004B56  0E00               	movlw	0
 13563   004B58  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13564   004B5A  0E00               	movlw	0
 13565   004B5C  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13566   004B5E                     l6884:
 13567   004B5E  500A               	movf	___fleq@ff2^0,w,c
 13568   004B60  1806               	xorwf	___fleq@ff1^0,w,c
 13569   004B62  E10F               	bnz	u8000
 13570   004B64  500B               	movf	(___fleq@ff2+1)^0,w,c
 13571   004B66  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13572   004B68  E10C               	bnz	u8000
 13573   004B6A  500C               	movf	(___fleq@ff2+2)^0,w,c
 13574   004B6C  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13575   004B6E  E109               	bnz	u8000
 13576   004B70  500D               	movf	(___fleq@ff2+3)^0,w,c
 13577   004B72  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13578   004B74  B4D8               	btfsc	status,2,c
 13579   004B76  EFBF  F025         	goto	u8001
 13580   004B7A  EFC1  F025         	goto	u8000
 13581   004B7E                     u8001:
 13582   004B7E  EFC4  F025         	goto	l6888
 13583   004B82                     u8000:
 13584   004B82  90D8               	bcf	status,0,c
 13585   004B84  EFC5  F025         	goto	l969
 13586   004B88                     l6888:
 13587   004B88  80D8               	bsf	status,0,c
 13588   004B8A                     l969:
 13589   004B8A  0012               	return		;funcret
 13590   004B8C                     __end_of___fleq:
 13591                           	callstack 0
 13592                           
 13593 ;; *************** function ___fldiv *****************
 13594 ;; Defined at:
 13595 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13596 ;; Parameters:    Size  Location     Type
 13597 ;;  b               4   44[COMRAM] unsigned char 
 13598 ;;  a               4   48[COMRAM] unsigned char 
 13599 ;; Auto vars:     Size  Location     Type
 13600 ;;  grs             4   63[COMRAM] unsigned long 
 13601 ;;  rem             4   56[COMRAM] unsigned long 
 13602 ;;  new_exp         2   61[COMRAM] short 
 13603 ;;  aexp            1   68[COMRAM] unsigned char 
 13604 ;;  bexp            1   67[COMRAM] unsigned char 
 13605 ;;  sign            1   60[COMRAM] unsigned char 
 13606 ;; Return value:  Size  Location     Type
 13607 ;;                  4   44[COMRAM] unsigned char 
 13608 ;; Registers used:
 13609 ;;		wreg, status,2, status,0
 13610 ;; Tracked objects:
 13611 ;;		On entry : 0/0
 13612 ;;		On exit  : 0/0
 13613 ;;		Unchanged: 0/0
 13614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13615 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13616 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13618 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13619 ;;Total ram usage:       25 bytes
 13620 ;; Hardware stack levels used: 1
 13621 ;; Hardware stack levels required when called: 1
 13622 ;; This function calls:
 13623 ;;		Nothing
 13624 ;; This function is called by:
 13625 ;;		_runDAC
 13626 ;;		_runADC
 13627 ;;		_efgtoa
 13628 ;; This function uses a non-reentrant model
 13629 ;;
 13630                           
 13631                           	psect	text49
 13632   002654                     __ptext49:
 13633                           	callstack 0
 13634   002654                     ___fldiv:
 13635                           	callstack 24
 13636   002654  5030               	movf	(___fldiv@b+3)^0,w,c
 13637   002656  0B80               	andlw	128
 13638   002658  6E3D               	movwf	___fldiv@sign^0,c
 13639   00265A  5030               	movf	(___fldiv@b+3)^0,w,c
 13640   00265C  2430               	addwf	(___fldiv@b+3)^0,w,c
 13641   00265E  6E44               	movwf	___fldiv@bexp^0,c
 13642   002660  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13643   002662  EF35  F013         	goto	u7441
 13644   002666  EF37  F013         	goto	u7440
 13645   00266A                     u7441:
 13646   00266A  EF38  F013         	goto	l6528
 13647   00266E                     u7440:
 13648   00266E  8044               	bsf	___fldiv@bexp^0,0,c
 13649   002670                     l6528:
 13650   002670  5044               	movf	___fldiv@bexp^0,w,c
 13651   002672  B4D8               	btfsc	status,2,c
 13652   002674  EF3E  F013         	goto	u7451
 13653   002678  EF40  F013         	goto	u7450
 13654   00267C                     u7451:
 13655   00267C  EF55  F013         	goto	l6538
 13656   002680                     u7450:
 13657   002680  2844               	incf	___fldiv@bexp^0,w,c
 13658   002682  A4D8               	btfss	status,2,c
 13659   002684  EF46  F013         	goto	u7461
 13660   002688  EF48  F013         	goto	u7460
 13661   00268C                     u7461:
 13662   00268C  EF50  F013         	goto	l6534
 13663   002690                     u7460:
 13664   002690  0E00               	movlw	0
 13665   002692  6E2D               	movwf	___fldiv@b^0,c
 13666   002694  0E00               	movlw	0
 13667   002696  6E2E               	movwf	(___fldiv@b+1)^0,c
 13668   002698  0E00               	movlw	0
 13669   00269A  6E2F               	movwf	(___fldiv@b+2)^0,c
 13670   00269C  0E00               	movlw	0
 13671   00269E  6E30               	movwf	(___fldiv@b+3)^0,c
 13672   0026A0                     l6534:
 13673   0026A0  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13674   0026A2  0E00               	movlw	0
 13675   0026A4  6E30               	movwf	(___fldiv@b+3)^0,c
 13676   0026A6  EF5D  F013         	goto	l6540
 13677   0026AA                     l6538:
 13678   0026AA  0E00               	movlw	0
 13679   0026AC  6E2D               	movwf	___fldiv@b^0,c
 13680   0026AE  0E00               	movlw	0
 13681   0026B0  6E2E               	movwf	(___fldiv@b+1)^0,c
 13682   0026B2  0E00               	movlw	0
 13683   0026B4  6E2F               	movwf	(___fldiv@b+2)^0,c
 13684   0026B6  0E00               	movlw	0
 13685   0026B8  6E30               	movwf	(___fldiv@b+3)^0,c
 13686   0026BA                     l6540:
 13687   0026BA  5034               	movf	(___fldiv@a+3)^0,w,c
 13688   0026BC  0B80               	andlw	128
 13689   0026BE  1A3D               	xorwf	___fldiv@sign^0,f,c
 13690   0026C0  5034               	movf	(___fldiv@a+3)^0,w,c
 13691   0026C2  2434               	addwf	(___fldiv@a+3)^0,w,c
 13692   0026C4  6E45               	movwf	___fldiv@aexp^0,c
 13693   0026C6  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13694   0026C8  EF68  F013         	goto	u7471
 13695   0026CC  EF6A  F013         	goto	u7470
 13696   0026D0                     u7471:
 13697   0026D0  EF6B  F013         	goto	l6548
 13698   0026D4                     u7470:
 13699   0026D4  8045               	bsf	___fldiv@aexp^0,0,c
 13700   0026D6                     l6548:
 13701   0026D6  5045               	movf	___fldiv@aexp^0,w,c
 13702   0026D8  B4D8               	btfsc	status,2,c
 13703   0026DA  EF71  F013         	goto	u7481
 13704   0026DE  EF73  F013         	goto	u7480
 13705   0026E2                     u7481:
 13706   0026E2  EF88  F013         	goto	l6558
 13707   0026E6                     u7480:
 13708   0026E6  2845               	incf	___fldiv@aexp^0,w,c
 13709   0026E8  A4D8               	btfss	status,2,c
 13710   0026EA  EF79  F013         	goto	u7491
 13711   0026EE  EF7B  F013         	goto	u7490
 13712   0026F2                     u7491:
 13713   0026F2  EF83  F013         	goto	l6554
 13714   0026F6                     u7490:
 13715   0026F6  0E00               	movlw	0
 13716   0026F8  6E31               	movwf	___fldiv@a^0,c
 13717   0026FA  0E00               	movlw	0
 13718   0026FC  6E32               	movwf	(___fldiv@a+1)^0,c
 13719   0026FE  0E00               	movlw	0
 13720   002700  6E33               	movwf	(___fldiv@a+2)^0,c
 13721   002702  0E00               	movlw	0
 13722   002704  6E34               	movwf	(___fldiv@a+3)^0,c
 13723   002706                     l6554:
 13724   002706  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13725   002708  0E00               	movlw	0
 13726   00270A  6E34               	movwf	(___fldiv@a+3)^0,c
 13727   00270C  EF90  F013         	goto	l6560
 13728   002710                     l6558:
 13729   002710  0E00               	movlw	0
 13730   002712  6E31               	movwf	___fldiv@a^0,c
 13731   002714  0E00               	movlw	0
 13732   002716  6E32               	movwf	(___fldiv@a+1)^0,c
 13733   002718  0E00               	movlw	0
 13734   00271A  6E33               	movwf	(___fldiv@a+2)^0,c
 13735   00271C  0E00               	movlw	0
 13736   00271E  6E34               	movwf	(___fldiv@a+3)^0,c
 13737   002720                     l6560:
 13738   002720  5031               	movf	___fldiv@a^0,w,c
 13739   002722  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13740   002724  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13741   002726  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13742   002728  A4D8               	btfss	status,2,c
 13743   00272A  EF99  F013         	goto	u7501
 13744   00272E  EF9B  F013         	goto	u7500
 13745   002732                     u7501:
 13746   002732  EFB3  F013         	goto	l6572
 13747   002736                     u7500:
 13748   002736  0E00               	movlw	0
 13749   002738  6E2D               	movwf	___fldiv@b^0,c
 13750   00273A  0E00               	movlw	0
 13751   00273C  6E2E               	movwf	(___fldiv@b+1)^0,c
 13752   00273E  0E00               	movlw	0
 13753   002740  6E2F               	movwf	(___fldiv@b+2)^0,c
 13754   002742  0E00               	movlw	0
 13755   002744  6E30               	movwf	(___fldiv@b+3)^0,c
 13756   002746  0E80               	movlw	128
 13757   002748  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13758   00274A  0E7F               	movlw	127
 13759   00274C  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13760   00274E                     l6566:
 13761   00274E  503D               	movf	___fldiv@sign^0,w,c
 13762   002750  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13763   002752  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13764   002756  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13765   00275A  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13766   00275E  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13767   002762  EFF6  F014         	goto	l1292
 13768   002766                     l6572:
 13769   002766  5044               	movf	___fldiv@bexp^0,w,c
 13770   002768  A4D8               	btfss	status,2,c
 13771   00276A  EFB9  F013         	goto	u7511
 13772   00276E  EFBB  F013         	goto	u7510
 13773   002772                     u7511:
 13774   002772  EFC5  F013         	goto	l6580
 13775   002776                     u7510:
 13776   002776  0E00               	movlw	0
 13777   002778  6E2D               	movwf	?___fldiv^0,c
 13778   00277A  0E00               	movlw	0
 13779   00277C  6E2E               	movwf	(?___fldiv+1)^0,c
 13780   00277E  0E00               	movlw	0
 13781   002780  6E2F               	movwf	(?___fldiv+2)^0,c
 13782   002782  0E00               	movlw	0
 13783   002784  6E30               	movwf	(?___fldiv+3)^0,c
 13784   002786  EFF6  F014         	goto	l1292
 13785   00278A                     l6580:
 13786   00278A  5045               	movf	___fldiv@aexp^0,w,c
 13787   00278C  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13788   002790  6A36               	clrf	(??___fldiv+1)^0,c
 13789   002792  5E35               	subwf	??___fldiv^0,f,c
 13790   002794  0E00               	movlw	0
 13791   002796  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13792   002798  0E7F               	movlw	127
 13793   00279A  2435               	addwf	??___fldiv^0,w,c
 13794   00279C  6E3E               	movwf	___fldiv@new_exp^0,c
 13795   00279E  0E00               	movlw	0
 13796   0027A0  2036               	addwfc	(??___fldiv+1)^0,w,c
 13797   0027A2  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13798   0027A4  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13799   0027A8  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13800   0027AC  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13801   0027B0  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13802   0027B4  0E00               	movlw	0
 13803   0027B6  6E2D               	movwf	___fldiv@b^0,c
 13804   0027B8  0E00               	movlw	0
 13805   0027BA  6E2E               	movwf	(___fldiv@b+1)^0,c
 13806   0027BC  0E00               	movlw	0
 13807   0027BE  6E2F               	movwf	(___fldiv@b+2)^0,c
 13808   0027C0  0E00               	movlw	0
 13809   0027C2  6E30               	movwf	(___fldiv@b+3)^0,c
 13810   0027C4  0E00               	movlw	0
 13811   0027C6  6E40               	movwf	___fldiv@grs^0,c
 13812   0027C8  0E00               	movlw	0
 13813   0027CA  6E41               	movwf	(___fldiv@grs+1)^0,c
 13814   0027CC  0E00               	movlw	0
 13815   0027CE  6E42               	movwf	(___fldiv@grs+2)^0,c
 13816   0027D0  0E00               	movlw	0
 13817   0027D2  6E43               	movwf	(___fldiv@grs+3)^0,c
 13818   0027D4  0E00               	movlw	0
 13819   0027D6  6E45               	movwf	___fldiv@aexp^0,c
 13820   0027D8  EF26  F014         	goto	l1294
 13821   0027DC                     l6590:
 13822   0027DC  5045               	movf	___fldiv@aexp^0,w,c
 13823   0027DE  B4D8               	btfsc	status,2,c
 13824   0027E0  EFF4  F013         	goto	u7521
 13825   0027E4  EFF6  F013         	goto	u7520
 13826   0027E8                     u7521:
 13827   0027E8  EF0D  F014         	goto	l6598
 13828   0027EC                     u7520:
 13829   0027EC  90D8               	bcf	status,0,c
 13830   0027EE  3639               	rlcf	___fldiv@rem^0,f,c
 13831   0027F0  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13832   0027F2  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13833   0027F4  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13834   0027F6  90D8               	bcf	status,0,c
 13835   0027F8  362D               	rlcf	___fldiv@b^0,f,c
 13836   0027FA  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13837   0027FC  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13838   0027FE  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13839   002800  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13840   002802  EF05  F014         	goto	u7531
 13841   002806  EF07  F014         	goto	u7530
 13842   00280A                     u7531:
 13843   00280A  EF08  F014         	goto	l1297
 13844   00280E                     u7530:
 13845   00280E  802D               	bsf	___fldiv@b^0,0,c
 13846   002810                     l1297:
 13847   002810  90D8               	bcf	status,0,c
 13848   002812  3640               	rlcf	___fldiv@grs^0,f,c
 13849   002814  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13850   002816  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13851   002818  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13852   00281A                     l6598:
 13853   00281A  5031               	movf	___fldiv@a^0,w,c
 13854   00281C  5C39               	subwf	___fldiv@rem^0,w,c
 13855   00281E  5032               	movf	(___fldiv@a+1)^0,w,c
 13856   002820  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 13857   002822  5033               	movf	(___fldiv@a+2)^0,w,c
 13858   002824  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 13859   002826  5034               	movf	(___fldiv@a+3)^0,w,c
 13860   002828  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 13861   00282A  A0D8               	btfss	status,0,c
 13862   00282C  EF1A  F014         	goto	u7541
 13863   002830  EF1C  F014         	goto	u7540
 13864   002834                     u7541:
 13865   002834  EF25  F014         	goto	l6604
 13866   002838                     u7540:
 13867   002838  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 13868   00283A  5031               	movf	___fldiv@a^0,w,c
 13869   00283C  5E39               	subwf	___fldiv@rem^0,f,c
 13870   00283E  5032               	movf	(___fldiv@a+1)^0,w,c
 13871   002840  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 13872   002842  5033               	movf	(___fldiv@a+2)^0,w,c
 13873   002844  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 13874   002846  5034               	movf	(___fldiv@a+3)^0,w,c
 13875   002848  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 13876   00284A                     l6604:
 13877   00284A  2A45               	incf	___fldiv@aexp^0,f,c
 13878   00284C                     l1294:
 13879   00284C  0E19               	movlw	25
 13880   00284E  6445               	cpfsgt	___fldiv@aexp^0,c
 13881   002850  EF2C  F014         	goto	u7551
 13882   002854  EF2E  F014         	goto	u7550
 13883   002858                     u7551:
 13884   002858  EFEE  F013         	goto	l6590
 13885   00285C                     u7550:
 13886   00285C  5039               	movf	___fldiv@rem^0,w,c
 13887   00285E  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 13888   002860  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 13889   002862  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 13890   002864  B4D8               	btfsc	status,2,c
 13891   002866  EF37  F014         	goto	u7561
 13892   00286A  EF39  F014         	goto	u7560
 13893   00286E                     u7561:
 13894   00286E  EF51  F014         	goto	l6616
 13895   002872                     u7560:
 13896   002872  8040               	bsf	___fldiv@grs^0,0,c
 13897   002874  EF51  F014         	goto	l6616
 13898   002878                     l6610:
 13899   002878  90D8               	bcf	status,0,c
 13900   00287A  362D               	rlcf	___fldiv@b^0,f,c
 13901   00287C  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13902   00287E  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13903   002880  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13904   002882  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13905   002884  EF46  F014         	goto	u7571
 13906   002888  EF48  F014         	goto	u7570
 13907   00288C                     u7571:
 13908   00288C  EF49  F014         	goto	l1303
 13909   002890                     u7570:
 13910   002890  802D               	bsf	___fldiv@b^0,0,c
 13911   002892                     l1303:
 13912   002892  90D8               	bcf	status,0,c
 13913   002894  3640               	rlcf	___fldiv@grs^0,f,c
 13914   002896  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13915   002898  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13916   00289A  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13917   00289C  063E               	decf	___fldiv@new_exp^0,f,c
 13918   00289E  A0D8               	btfss	status,0,c
 13919   0028A0  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 13920   0028A2                     l6616:
 13921   0028A2  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13922   0028A4  EF56  F014         	goto	u7581
 13923   0028A8  EF58  F014         	goto	u7580
 13924   0028AC                     u7581:
 13925   0028AC  EF3C  F014         	goto	l6610
 13926   0028B0                     u7580:
 13927   0028B0  0E00               	movlw	0
 13928   0028B2  6E45               	movwf	___fldiv@aexp^0,c
 13929   0028B4  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13930   0028B6  EF5F  F014         	goto	u7591
 13931   0028BA  EF61  F014         	goto	u7590
 13932   0028BE                     u7591:
 13933   0028BE  EF85  F014         	goto	l1305
 13934   0028C2                     u7590:
 13935   0028C2  0EFF               	movlw	255
 13936   0028C4  1440               	andwf	___fldiv@grs^0,w,c
 13937   0028C6  6E35               	movwf	??___fldiv^0,c
 13938   0028C8  0EFF               	movlw	255
 13939   0028CA  1441               	andwf	(___fldiv@grs+1)^0,w,c
 13940   0028CC  6E36               	movwf	(??___fldiv+1)^0,c
 13941   0028CE  0EFF               	movlw	255
 13942   0028D0  1442               	andwf	(___fldiv@grs+2)^0,w,c
 13943   0028D2  6E37               	movwf	(??___fldiv+2)^0,c
 13944   0028D4  0E7F               	movlw	127
 13945   0028D6  1443               	andwf	(___fldiv@grs+3)^0,w,c
 13946   0028D8  6E38               	movwf	(??___fldiv+3)^0,c
 13947   0028DA  5035               	movf	??___fldiv^0,w,c
 13948   0028DC  1036               	iorwf	(??___fldiv+1)^0,w,c
 13949   0028DE  1037               	iorwf	(??___fldiv+2)^0,w,c
 13950   0028E0  1038               	iorwf	(??___fldiv+3)^0,w,c
 13951   0028E2  B4D8               	btfsc	status,2,c
 13952   0028E4  EF76  F014         	goto	u7601
 13953   0028E8  EF78  F014         	goto	u7600
 13954   0028EC                     u7601:
 13955   0028EC  EF7C  F014         	goto	l1306
 13956   0028F0                     u7600:
 13957   0028F0                     l6624:
 13958   0028F0  0E01               	movlw	1
 13959   0028F2  6E45               	movwf	___fldiv@aexp^0,c
 13960   0028F4  EF85  F014         	goto	l1305
 13961   0028F8                     l1306:
 13962   0028F8  A02D               	btfss	___fldiv@b^0,0,c
 13963   0028FA  EF81  F014         	goto	u7611
 13964   0028FE  EF83  F014         	goto	u7610
 13965   002902                     u7611:
 13966   002902  EF85  F014         	goto	l1305
 13967   002906                     u7610:
 13968   002906  EF78  F014         	goto	l6624
 13969   00290A                     l1305:
 13970   00290A  5045               	movf	___fldiv@aexp^0,w,c
 13971   00290C  B4D8               	btfsc	status,2,c
 13972   00290E  EF8B  F014         	goto	u7621
 13973   002912  EF8D  F014         	goto	u7620
 13974   002916                     u7621:
 13975   002916  EFB1  F014         	goto	l6636
 13976   00291A                     u7620:
 13977   00291A  0E01               	movlw	1
 13978   00291C  262D               	addwf	___fldiv@b^0,f,c
 13979   00291E  0E00               	movlw	0
 13980   002920  222E               	addwfc	(___fldiv@b+1)^0,f,c
 13981   002922  222F               	addwfc	(___fldiv@b+2)^0,f,c
 13982   002924  2230               	addwfc	(___fldiv@b+3)^0,f,c
 13983   002926  A030               	btfss	(___fldiv@b+3)^0,0,c
 13984   002928  EF98  F014         	goto	u7631
 13985   00292C  EF9A  F014         	goto	u7630
 13986   002930                     u7631:
 13987   002930  EFB1  F014         	goto	l6636
 13988   002934                     u7630:
 13989   002934  C02D  F035         	movff	___fldiv@b,??___fldiv
 13990   002938  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 13991   00293C  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 13992   002940  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 13993   002944  3438               	rlcf	(??___fldiv+3)^0,w,c
 13994   002946  3238               	rrcf	(??___fldiv+3)^0,f,c
 13995   002948  3237               	rrcf	(??___fldiv+2)^0,f,c
 13996   00294A  3236               	rrcf	(??___fldiv+1)^0,f,c
 13997   00294C  3235               	rrcf	??___fldiv^0,f,c
 13998   00294E  C035  F02D         	movff	??___fldiv,___fldiv@b
 13999   002952  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 14000   002956  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 14001   00295A  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 14002   00295E  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 14003   002960  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 14004   002962                     l6636:
 14005   002962  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14006   002964  EFBC  F014         	goto	u7641
 14007   002968  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14008   00296A  E108               	bnz	u7640
 14009   00296C  283E               	incf	___fldiv@new_exp^0,w,c
 14010   00296E  A0D8               	btfss	status,0,c
 14011   002970  EFBC  F014         	goto	u7641
 14012   002974  EFBE  F014         	goto	u7640
 14013   002978                     u7641:
 14014   002978  EFC9  F014         	goto	l6640
 14015   00297C                     u7640:
 14016   00297C  0E00               	movlw	0
 14017   00297E  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14018   002980  683E               	setf	___fldiv@new_exp^0,c
 14019   002982  0E00               	movlw	0
 14020   002984  6E2D               	movwf	___fldiv@b^0,c
 14021   002986  0E00               	movlw	0
 14022   002988  6E2E               	movwf	(___fldiv@b+1)^0,c
 14023   00298A  0E00               	movlw	0
 14024   00298C  6E2F               	movwf	(___fldiv@b+2)^0,c
 14025   00298E  0E00               	movlw	0
 14026   002990  6E30               	movwf	(___fldiv@b+3)^0,c
 14027   002992                     l6640:
 14028   002992  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14029   002994  EFD6  F014         	goto	u7650
 14030   002998  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14031   00299A  E106               	bnz	u7651
 14032   00299C  043E               	decf	___fldiv@new_exp^0,w,c
 14033   00299E  B0D8               	btfsc	status,0,c
 14034   0029A0  EFD4  F014         	goto	u7651
 14035   0029A4  EFD6  F014         	goto	u7650
 14036   0029A8                     u7651:
 14037   0029A8  EFE4  F014         	goto	l6644
 14038   0029AC                     u7650:
 14039   0029AC  0E00               	movlw	0
 14040   0029AE  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14041   0029B0  0E00               	movlw	0
 14042   0029B2  6E3E               	movwf	___fldiv@new_exp^0,c
 14043   0029B4  0E00               	movlw	0
 14044   0029B6  6E2D               	movwf	___fldiv@b^0,c
 14045   0029B8  0E00               	movlw	0
 14046   0029BA  6E2E               	movwf	(___fldiv@b+1)^0,c
 14047   0029BC  0E00               	movlw	0
 14048   0029BE  6E2F               	movwf	(___fldiv@b+2)^0,c
 14049   0029C0  0E00               	movlw	0
 14050   0029C2  6E30               	movwf	(___fldiv@b+3)^0,c
 14051   0029C4  0E00               	movlw	0
 14052   0029C6  6E3D               	movwf	___fldiv@sign^0,c
 14053   0029C8                     l6644:
 14054   0029C8  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 14055   0029CC  A044               	btfss	___fldiv@bexp^0,0,c
 14056   0029CE  EFEB  F014         	goto	u7661
 14057   0029D2  EFED  F014         	goto	u7660
 14058   0029D6                     u7661:
 14059   0029D6  EFF0  F014         	goto	l6650
 14060   0029DA                     u7660:
 14061   0029DA  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 14062   0029DC  EFF1  F014         	goto	l6652
 14063   0029E0                     l6650:
 14064   0029E0  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 14065   0029E2                     l6652:
 14066   0029E2  90D8               	bcf	status,0,c
 14067   0029E4  3044               	rrcf	___fldiv@bexp^0,w,c
 14068   0029E6  6E30               	movwf	(___fldiv@b+3)^0,c
 14069   0029E8  EFA7  F013         	goto	l6566
 14070   0029EC                     l1292:
 14071   0029EC  0012               	return		;funcret
 14072   0029EE                     __end_of___fldiv:
 14073                           	callstack 0
 14074                           
 14075 ;; *************** function _dtoa *****************
 14076 ;; Defined at:
 14077 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 14080 ;;		 -> NULL(0), sprintf@f(12), 
 14081 ;;  d               2   33[COMRAM] int 
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;  i               2   42[COMRAM] int 
 14084 ;;  p               2   39[COMRAM] int 
 14085 ;;  w               2   37[COMRAM] int 
 14086 ;;  s               1   41[COMRAM] unsigned char 
 14087 ;; Return value:  Size  Location     Type
 14088 ;;                  1    wreg      void 
 14089 ;; Registers used:
 14090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14091 ;; Tracked objects:
 14092 ;;		On entry : 0/0
 14093 ;;		On exit  : 0/0
 14094 ;;		Unchanged: 0/0
 14095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14097 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14099 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;Total ram usage:       13 bytes
 14101 ;; Hardware stack levels used: 1
 14102 ;; Hardware stack levels required when called: 5
 14103 ;; This function calls:
 14104 ;;		___awdiv
 14105 ;;		___awmod
 14106 ;;		_abs
 14107 ;;		_pad
 14108 ;; This function is called by:
 14109 ;;		_vfpfcnvrt
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text50
 14114   003BC4                     __ptext50:
 14115                           	callstack 0
 14116   003BC4                     _dtoa:
 14117                           	callstack 21
 14118   003BC4                     
 14119                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14120   003BC4  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14121   003BC6  EFE7  F01D         	goto	u8451
 14122   003BCA  EFEA  F01D         	goto	u8450
 14123   003BCE                     u8451:
 14124   003BCE  0E01               	movlw	1
 14125   003BD0  EFEB  F01D         	goto	u8460
 14126   003BD4                     u8450:
 14127   003BD4  0E00               	movlw	0
 14128   003BD6                     u8460:
 14129   003BD6  6E2A               	movwf	dtoa@s^0,c
 14130                           
 14131                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14132   003BD8  BE58               	btfsc	(_prec+1)^0,7,c
 14133   003BDA  EFF3  F01D         	goto	u8470
 14134   003BDE  EFF1  F01D         	goto	u8471
 14135   003BE2                     u8471:
 14136   003BE2  EFF9  F01D         	goto	l1427
 14137   003BE6                     u8470:
 14138   003BE6  0E00               	movlw	0
 14139   003BE8  6E29               	movwf	(dtoa@p+1)^0,c
 14140   003BEA  0E01               	movlw	1
 14141   003BEC  6E28               	movwf	dtoa@p^0,c
 14142   003BEE  EFFD  F01D         	goto	l1429
 14143   003BF2                     l1427:
 14144   003BF2  C057  F028         	movff	_prec,dtoa@p
 14145   003BF6  C058  F029         	movff	_prec+1,dtoa@p+1
 14146   003BFA                     l1429:
 14147                           
 14148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14149   003BFA  C055  F026         	movff	_width,dtoa@w
 14150   003BFE  C056  F027         	movff	_width+1,dtoa@w+1
 14151   003C02                     
 14152                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14153   003C02  502A               	movf	dtoa@s^0,w,c
 14154   003C04  B4D8               	btfsc	status,2,c
 14155   003C06  EF07  F01E         	goto	u8481
 14156   003C0A  EF09  F01E         	goto	u8480
 14157   003C0E                     u8481:
 14158   003C0E  EF20  F01E         	goto	l1430
 14159   003C12                     u8480:
 14160   003C12                     
 14161                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14162   003C12  0626               	decf	dtoa@w^0,f,c
 14163   003C14  A0D8               	btfss	status,0,c
 14164   003C16  0627               	decf	(dtoa@w+1)^0,f,c
 14165   003C18                     
 14166                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14167   003C18  502A               	movf	dtoa@s^0,w,c
 14168   003C1A  A4D8               	btfss	status,2,c
 14169   003C1C  EF12  F01E         	goto	u8491
 14170   003C20  EF14  F01E         	goto	u8490
 14171   003C24                     u8491:
 14172   003C24  EF1A  F01E         	goto	l7110
 14173   003C28                     u8490:
 14174   003C28  0E00               	movlw	0
 14175   003C2A  6E25               	movwf	(_dtoa$4039+1)^0,c
 14176   003C2C  0E2B               	movlw	43
 14177   003C2E  6E24               	movwf	_dtoa$4039^0,c
 14178   003C30  EF1E  F01E         	goto	l7112
 14179   003C34                     l7110:
 14180   003C34  0E00               	movlw	0
 14181   003C36  6E25               	movwf	(_dtoa$4039+1)^0,c
 14182   003C38  0E2D               	movlw	45
 14183   003C3A  6E24               	movwf	_dtoa$4039^0,c
 14184   003C3C                     l7112:
 14185   003C3C  C024  F02A         	movff	_dtoa$4039,dtoa@s
 14186   003C40                     l1430:
 14187                           
 14188                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14189   003C40  0E00               	movlw	0
 14190   003C42  6E2C               	movwf	(dtoa@i+1)^0,c
 14191   003C44  0E4F               	movlw	79
 14192   003C46  6E2B               	movwf	dtoa@i^0,c
 14193   003C48                     
 14194                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14195   003C48  0E00               	movlw	0
 14196   003C4A  0101               	movlb	1	; () banked
 14197   003C4C  6F76               	movwf	(_dbuf+79)& (0+255),b
 14198                           
 14199                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14200   003C4E  EF59  F01E         	goto	l7126
 14201   003C52                     l7116:
 14202                           
 14203                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14204   003C52  062B               	decf	dtoa@i^0,f,c
 14205   003C54  A0D8               	btfss	status,0,c
 14206   003C56  062C               	decf	(dtoa@i+1)^0,f,c
 14207   003C58                     
 14208                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14209   003C58  0E27               	movlw	low _dbuf
 14210   003C5A  242B               	addwf	dtoa@i^0,w,c
 14211   003C5C  6ED9               	movwf	fsr2l,c
 14212   003C5E  0E01               	movlw	high _dbuf
 14213   003C60  202C               	addwfc	(dtoa@i+1)^0,w,c
 14214   003C62  6EDA               	movwf	fsr2h,c
 14215   003C64  C022  F006         	movff	dtoa@d,___awmod@dividend
 14216   003C68  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14217   003C6C  0E00               	movlw	0
 14218   003C6E  6E09               	movwf	(___awmod@divisor+1)^0,c
 14219   003C70  0E0A               	movlw	10
 14220   003C72  6E08               	movwf	___awmod@divisor^0,c
 14221   003C74  ECC2  F024         	call	___awmod	;wreg free
 14222   003C78  C006  F00C         	movff	?___awmod,abs@a
 14223   003C7C  C007  F00D         	movff	?___awmod+1,abs@a+1
 14224   003C80  ECCE  F028         	call	_abs	;wreg free
 14225   003C84  500C               	movf	?_abs^0,w,c
 14226   003C86  0F30               	addlw	48
 14227   003C88  6EDF               	movwf	indf2,c
 14228   003C8A                     
 14229                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14230   003C8A  0628               	decf	dtoa@p^0,f,c
 14231   003C8C  A0D8               	btfss	status,0,c
 14232   003C8E  0629               	decf	(dtoa@p+1)^0,f,c
 14233   003C90                     
 14234                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14235   003C90  0626               	decf	dtoa@w^0,f,c
 14236   003C92  A0D8               	btfss	status,0,c
 14237   003C94  0627               	decf	(dtoa@w+1)^0,f,c
 14238   003C96                     
 14239                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14240   003C96  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14241   003C9A  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14242   003C9E  0E00               	movlw	0
 14243   003CA0  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14244   003CA2  0E0A               	movlw	10
 14245   003CA4  6E1A               	movwf	___awdiv@divisor^0,c
 14246   003CA6  EC07  F024         	call	___awdiv	;wreg free
 14247   003CAA  C018  F022         	movff	?___awdiv,dtoa@d
 14248   003CAE  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14249   003CB2                     l7126:
 14250                           
 14251                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14252   003CB2  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14253   003CB4  EF64  F01E         	goto	u8501
 14254   003CB8  502C               	movf	(dtoa@i+1)^0,w,c
 14255   003CBA  E108               	bnz	u8500
 14256   003CBC  042B               	decf	dtoa@i^0,w,c
 14257   003CBE  A0D8               	btfss	status,0,c
 14258   003CC0  EF64  F01E         	goto	u8501
 14259   003CC4  EF66  F01E         	goto	u8500
 14260   003CC8                     u8501:
 14261   003CC8  EF7C  F01E         	goto	l7132
 14262   003CCC                     u8500:
 14263   003CCC  5022               	movf	dtoa@d^0,w,c
 14264   003CCE  1023               	iorwf	(dtoa@d+1)^0,w,c
 14265   003CD0  A4D8               	btfss	status,2,c
 14266   003CD2  EF6D  F01E         	goto	u8511
 14267   003CD6  EF6F  F01E         	goto	u8510
 14268   003CDA                     u8511:
 14269   003CDA  EF29  F01E         	goto	l7116
 14270   003CDE                     u8510:
 14271   003CDE  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14272   003CE0  EF7C  F01E         	goto	u8520
 14273   003CE4  5029               	movf	(dtoa@p+1)^0,w,c
 14274   003CE6  E106               	bnz	u8521
 14275   003CE8  0428               	decf	dtoa@p^0,w,c
 14276   003CEA  B0D8               	btfsc	status,0,c
 14277   003CEC  EF7A  F01E         	goto	u8521
 14278   003CF0  EF7C  F01E         	goto	u8520
 14279   003CF4                     u8521:
 14280   003CF4  EF29  F01E         	goto	l7116
 14281   003CF8                     u8520:
 14282   003CF8                     l7132:
 14283                           
 14284                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14285   003CF8  502A               	movf	dtoa@s^0,w,c
 14286   003CFA  B4D8               	btfsc	status,2,c
 14287   003CFC  EF82  F01E         	goto	u8531
 14288   003D00  EF84  F01E         	goto	u8530
 14289   003D04                     u8531:
 14290   003D04  EF8F  F01E         	goto	l7138
 14291   003D08                     u8530:
 14292   003D08                     
 14293                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14294   003D08  062B               	decf	dtoa@i^0,f,c
 14295   003D0A  A0D8               	btfss	status,0,c
 14296   003D0C  062C               	decf	(dtoa@i+1)^0,f,c
 14297   003D0E                     
 14298                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14299   003D0E  0E27               	movlw	low _dbuf
 14300   003D10  242B               	addwf	dtoa@i^0,w,c
 14301   003D12  6ED9               	movwf	fsr2l,c
 14302   003D14  0E01               	movlw	high _dbuf
 14303   003D16  202C               	addwfc	(dtoa@i+1)^0,w,c
 14304   003D18  6EDA               	movwf	fsr2h,c
 14305   003D1A  C02A  FFDF         	movff	dtoa@s,indf2
 14306   003D1E                     l7138:
 14307                           
 14308                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14309   003D1E  C020  F017         	movff	dtoa@fp,pad@fp
 14310   003D22  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14311   003D26  0E27               	movlw	low _dbuf
 14312   003D28  242B               	addwf	dtoa@i^0,w,c
 14313   003D2A  6E19               	movwf	pad@buf^0,c
 14314   003D2C  0E01               	movlw	high _dbuf
 14315   003D2E  202C               	addwfc	(dtoa@i+1)^0,w,c
 14316   003D30  6E1A               	movwf	(pad@buf+1)^0,c
 14317   003D32  C026  F01B         	movff	dtoa@w,pad@p
 14318   003D36  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14319   003D3A  ECC6  F025         	call	_pad	;wreg free
 14320   003D3E  0012               	return		;funcret
 14321   003D40                     __end_of_dtoa:
 14322                           	callstack 0
 14323                           
 14324 ;; *************** function _pad *****************
 14325 ;; Defined at:
 14326 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14327 ;; Parameters:    Size  Location     Type
 14328 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14329 ;;		 -> NULL(0), sprintf@f(12), 
 14330 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14331 ;;		 -> dbuf(80), 
 14332 ;;  p               2   26[COMRAM] int 
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;  i               2   29[COMRAM] int 
 14335 ;; Return value:  Size  Location     Type
 14336 ;;                  1    wreg      void 
 14337 ;; Registers used:
 14338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14339 ;; Tracked objects:
 14340 ;;		On entry : 0/0
 14341 ;;		On exit  : 0/0
 14342 ;;		Unchanged: 0/0
 14343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14346 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14348 ;;Total ram usage:        9 bytes
 14349 ;; Hardware stack levels used: 1
 14350 ;; Hardware stack levels required when called: 4
 14351 ;; This function calls:
 14352 ;;		_fputc
 14353 ;;		_fputs
 14354 ;; This function is called by:
 14355 ;;		_dtoa
 14356 ;;		_efgtoa
 14357 ;;		_utoa
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text51
 14362   004B8C                     __ptext51:
 14363                           	callstack 0
 14364   004B8C                     _pad:
 14365                           	callstack 21
 14366   004B8C                     
 14367                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14368   004B8C  A059               	btfss	_flags^0,0,c
 14369   004B8E  EFCB  F025         	goto	u8201
 14370   004B92  EFCD  F025         	goto	u8200
 14371   004B96                     u8201:
 14372   004B96  EFD7  F025         	goto	l7008
 14373   004B9A                     u8200:
 14374   004B9A                     
 14375                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14376   004B9A  C019  F010         	movff	pad@buf,fputs@s
 14377   004B9E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14378   004BA2  C017  F012         	movff	pad@fp,fputs@fp
 14379   004BA6  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14380   004BAA  EC04  F028         	call	_fputs	;wreg free
 14381   004BAE                     l7008:
 14382                           
 14383                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14384   004BAE  BE1C               	btfsc	(pad@p+1)^0,7,c
 14385   004BB0  EFDE  F025         	goto	u8210
 14386   004BB4  EFDC  F025         	goto	u8211
 14387   004BB8                     u8211:
 14388   004BB8  EFE2  F025         	goto	l1418
 14389   004BBC                     u8210:
 14390   004BBC                     
 14391                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14392   004BBC  0E00               	movlw	0
 14393   004BBE  6E1C               	movwf	(pad@p+1)^0,c
 14394   004BC0  0E00               	movlw	0
 14395   004BC2  6E1B               	movwf	pad@p^0,c
 14396   004BC4                     l1418:
 14397                           
 14398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14399   004BC4  0E00               	movlw	0
 14400   004BC6  6E1F               	movwf	(pad@i+1)^0,c
 14401   004BC8  0E00               	movlw	0
 14402   004BCA  6E1E               	movwf	pad@i^0,c
 14403                           
 14404                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14405   004BCC  EFF4  F025         	goto	l7016
 14406   004BD0                     l7012:
 14407                           
 14408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14409   004BD0  0E00               	movlw	0
 14410   004BD2  6E08               	movwf	(fputc@c+1)^0,c
 14411   004BD4  0E20               	movlw	32
 14412   004BD6  6E07               	movwf	fputc@c^0,c
 14413   004BD8  C017  F009         	movff	pad@fp,fputc@fp
 14414   004BDC  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14415   004BE0  ECA2  F023         	call	_fputc	;wreg free
 14416   004BE4                     
 14417                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14418   004BE4  4A1E               	infsnz	pad@i^0,f,c
 14419   004BE6  2A1F               	incf	(pad@i+1)^0,f,c
 14420   004BE8                     l7016:
 14421                           
 14422                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14423   004BE8  501B               	movf	pad@p^0,w,c
 14424   004BEA  5C1E               	subwf	pad@i^0,w,c
 14425   004BEC  501F               	movf	(pad@i+1)^0,w,c
 14426   004BEE  0A80               	xorlw	128
 14427   004BF0  6E1D               	movwf	??_pad^0,c
 14428   004BF2  501C               	movf	(pad@p+1)^0,w,c
 14429   004BF4  0A80               	xorlw	128
 14430   004BF6  581D               	subwfb	??_pad^0,w,c
 14431   004BF8  A0D8               	btfss	status,0,c
 14432   004BFA  EF01  F026         	goto	u8221
 14433   004BFE  EF03  F026         	goto	u8220
 14434   004C02                     u8221:
 14435   004C02  EFE8  F025         	goto	l7012
 14436   004C06                     u8220:
 14437   004C06                     
 14438                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14439   004C06  B059               	btfsc	_flags^0,0,c
 14440   004C08  EF08  F026         	goto	u8231
 14441   004C0C  EF0A  F026         	goto	u8230
 14442   004C10                     u8231:
 14443   004C10  EF14  F026         	goto	l1423
 14444   004C14                     u8230:
 14445   004C14                     
 14446                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14447   004C14  C019  F010         	movff	pad@buf,fputs@s
 14448   004C18  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14449   004C1C  C017  F012         	movff	pad@fp,fputs@fp
 14450   004C20  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14451   004C24  EC04  F028         	call	_fputs	;wreg free
 14452   004C28                     l1423:
 14453   004C28  0012               	return		;funcret
 14454   004C2A                     __end_of_pad:
 14455                           	callstack 0
 14456                           
 14457 ;; *************** function _fputs *****************
 14458 ;; Defined at:
 14459 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14460 ;; Parameters:    Size  Location     Type
 14461 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14462 ;;		 -> dbuf(80), 
 14463 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14464 ;;		 -> NULL(0), sprintf@f(12), 
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;  i               2   20[COMRAM] int 
 14467 ;;  c               1   19[COMRAM] unsigned char 
 14468 ;; Return value:  Size  Location     Type
 14469 ;;                  2   15[COMRAM] int 
 14470 ;; Registers used:
 14471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14472 ;; Tracked objects:
 14473 ;;		On entry : 0/0
 14474 ;;		On exit  : 0/0
 14475 ;;		Unchanged: 0/0
 14476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14478 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14480 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14481 ;;Total ram usage:        7 bytes
 14482 ;; Hardware stack levels used: 1
 14483 ;; Hardware stack levels required when called: 3
 14484 ;; This function calls:
 14485 ;;		_fputc
 14486 ;; This function is called by:
 14487 ;;		_pad
 14488 ;; This function uses a non-reentrant model
 14489 ;;
 14490                           
 14491                           	psect	text52
 14492   005008                     __ptext52:
 14493                           	callstack 0
 14494   005008                     _fputs:
 14495                           	callstack 21
 14496   005008  0E00               	movlw	0
 14497   00500A  6E16               	movwf	(fputs@i+1)^0,c
 14498   00500C  0E00               	movlw	0
 14499   00500E  6E15               	movwf	fputs@i^0,c
 14500   005010  EF15  F028         	goto	l6514
 14501   005014                     l6510:
 14502   005014  C014  F007         	movff	fputs@c,fputc@c
 14503   005018  6A08               	clrf	(fputc@c+1)^0,c
 14504   00501A  C012  F009         	movff	fputs@fp,fputc@fp
 14505   00501E  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14506   005022  ECA2  F023         	call	_fputc	;wreg free
 14507   005026  4A15               	infsnz	fputs@i^0,f,c
 14508   005028  2A16               	incf	(fputs@i+1)^0,f,c
 14509   00502A                     l6514:
 14510   00502A  5015               	movf	fputs@i^0,w,c
 14511   00502C  2410               	addwf	fputs@s^0,w,c
 14512   00502E  6ED9               	movwf	fsr2l,c
 14513   005030  5016               	movf	(fputs@i+1)^0,w,c
 14514   005032  2011               	addwfc	(fputs@s+1)^0,w,c
 14515   005034  6EDA               	movwf	fsr2h,c
 14516   005036  50DF               	movf	indf2,w,c
 14517   005038  6E14               	movwf	fputs@c^0,c
 14518   00503A  5014               	movf	fputs@c^0,w,c
 14519   00503C  A4D8               	btfss	status,2,c
 14520   00503E  EF23  F028         	goto	u7431
 14521   005042  EF25  F028         	goto	u7430
 14522   005046                     u7431:
 14523   005046  EF0A  F028         	goto	l6510
 14524   00504A                     u7430:
 14525   00504A  0012               	return		;funcret
 14526   00504C                     __end_of_fputs:
 14527                           	callstack 0
 14528                           
 14529 ;; *************** function _fputc *****************
 14530 ;; Defined at:
 14531 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  c               2    6[COMRAM] int 
 14534 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14535 ;;		 -> NULL(0), sprintf@f(12), 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;		None
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  2    6[COMRAM] int 
 14540 ;; Registers used:
 14541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14550 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14551 ;;Total ram usage:        9 bytes
 14552 ;; Hardware stack levels used: 1
 14553 ;; Hardware stack levels required when called: 2
 14554 ;; This function calls:
 14555 ;;		_putch
 14556 ;; This function is called by:
 14557 ;;		_pad
 14558 ;;		_stoa
 14559 ;;		_vfpfcnvrt
 14560 ;;		_fputs
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text53
 14565   004744                     __ptext53:
 14566                           	callstack 0
 14567   004744                     _fputc:
 14568                           	callstack 21
 14569   004744  5009               	movf	fputc@fp^0,w,c
 14570   004746  100A               	iorwf	(fputc@fp+1)^0,w,c
 14571   004748  B4D8               	btfsc	status,2,c
 14572   00474A  EFA9  F023         	goto	u7001
 14573   00474E  EFAB  F023         	goto	u7000
 14574   004752                     u7001:
 14575   004752  EFB4  F023         	goto	l6296
 14576   004756                     u7000:
 14577   004756  5009               	movf	fputc@fp^0,w,c
 14578   004758  100A               	iorwf	(fputc@fp+1)^0,w,c
 14579   00475A  A4D8               	btfss	status,2,c
 14580   00475C  EFB2  F023         	goto	u7011
 14581   004760  EFB4  F023         	goto	u7010
 14582   004764                     u7011:
 14583   004764  EFB9  F023         	goto	l6298
 14584   004768                     u7010:
 14585   004768                     l6296:
 14586   004768  5007               	movf	fputc@c^0,w,c
 14587   00476A  EC32  F029         	call	_putch
 14588   00476E  EF06  F024         	goto	l1652
 14589   004772                     l6298:
 14590   004772  EE20 F00A          	lfsr	2,10
 14591   004776  5009               	movf	fputc@fp^0,w,c
 14592   004778  26D9               	addwf	fsr2l,f,c
 14593   00477A  500A               	movf	(fputc@fp+1)^0,w,c
 14594   00477C  22DA               	addwfc	fsr2h,f,c
 14595   00477E  50DE               	movf	postinc2,w,c
 14596   004780  10DE               	iorwf	postinc2,w,c
 14597   004782  B4D8               	btfsc	status,2,c
 14598   004784  EFC6  F023         	goto	u7021
 14599   004788  EFC8  F023         	goto	u7020
 14600   00478C                     u7021:
 14601   00478C  EFE3  F023         	goto	l6302
 14602   004790                     u7020:
 14603   004790  EE20 F00A          	lfsr	2,10
 14604   004794  5009               	movf	fputc@fp^0,w,c
 14605   004796  26D9               	addwf	fsr2l,f,c
 14606   004798  500A               	movf	(fputc@fp+1)^0,w,c
 14607   00479A  22DA               	addwfc	fsr2h,f,c
 14608   00479C  EE10 F003          	lfsr	1,3
 14609   0047A0  5009               	movf	fputc@fp^0,w,c
 14610   0047A2  26E1               	addwf	fsr1l,f,c
 14611   0047A4  500A               	movf	(fputc@fp+1)^0,w,c
 14612   0047A6  22E2               	addwfc	fsr1h,f,c
 14613   0047A8  50DE               	movf	postinc2,w,c
 14614   0047AA  5CE6               	subwf	postinc1,w,c
 14615   0047AC  50E6               	movf	postinc1,w,c
 14616   0047AE  0A80               	xorlw	128
 14617   0047B0  6E0F               	movwf	(??_fputc+4)^0,c
 14618   0047B2  50DE               	movf	postinc2,w,c
 14619   0047B4  0A80               	xorlw	128
 14620   0047B6  580F               	subwfb	(??_fputc+4)^0,w,c
 14621   0047B8  B0D8               	btfsc	status,0,c
 14622   0047BA  EFE1  F023         	goto	u7031
 14623   0047BE  EFE3  F023         	goto	u7030
 14624   0047C2                     u7031:
 14625   0047C2  EF06  F024         	goto	l1652
 14626   0047C6                     u7030:
 14627   0047C6                     l6302:
 14628   0047C6  EE20 F003          	lfsr	2,3
 14629   0047CA  5009               	movf	fputc@fp^0,w,c
 14630   0047CC  26D9               	addwf	fsr2l,f,c
 14631   0047CE  500A               	movf	(fputc@fp+1)^0,w,c
 14632   0047D0  22DA               	addwfc	fsr2h,f,c
 14633   0047D2  CFDE F00B          	movff	postinc2,??_fputc
 14634   0047D6  CFDD F00C          	movff	postdec2,??_fputc+1
 14635   0047DA  C009  FFD9         	movff	fputc@fp,fsr2l
 14636   0047DE  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14637   0047E2  CFDE F00D          	movff	postinc2,??_fputc+2
 14638   0047E6  CFDD F00E          	movff	postdec2,??_fputc+3
 14639   0047EA  500B               	movf	??_fputc^0,w,c
 14640   0047EC  240D               	addwf	(??_fputc+2)^0,w,c
 14641   0047EE  6ED9               	movwf	fsr2l,c
 14642   0047F0  500C               	movf	(??_fputc+1)^0,w,c
 14643   0047F2  200E               	addwfc	(??_fputc+3)^0,w,c
 14644   0047F4  6EDA               	movwf	fsr2h,c
 14645   0047F6  C007  FFDF         	movff	fputc@c,indf2
 14646   0047FA  EE20 F003          	lfsr	2,3
 14647   0047FE  5009               	movf	fputc@fp^0,w,c
 14648   004800  26D9               	addwf	fsr2l,f,c
 14649   004802  500A               	movf	(fputc@fp+1)^0,w,c
 14650   004804  22DA               	addwfc	fsr2h,f,c
 14651   004806  2ADE               	incf	postinc2,f,c
 14652   004808  0E00               	movlw	0
 14653   00480A  22DD               	addwfc	postdec2,f,c
 14654   00480C                     l1652:
 14655   00480C  0012               	return		;funcret
 14656   00480E                     __end_of_fputc:
 14657                           	callstack 0
 14658                           
 14659 ;; *************** function _putch *****************
 14660 ;; Defined at:
 14661 ;;		line 11 in file "putch.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;  data            1    wreg     unsigned char 
 14664 ;; Auto vars:     Size  Location     Type
 14665 ;;  data            1    5[COMRAM] unsigned char 
 14666 ;; Return value:  Size  Location     Type
 14667 ;;                  1    wreg      void 
 14668 ;; Registers used:
 14669 ;;		wreg
 14670 ;; Tracked objects:
 14671 ;;		On entry : 0/0
 14672 ;;		On exit  : 0/0
 14673 ;;		Unchanged: 0/0
 14674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14679 ;;Total ram usage:        1 bytes
 14680 ;; Hardware stack levels used: 1
 14681 ;; Hardware stack levels required when called: 1
 14682 ;; This function calls:
 14683 ;;		Nothing
 14684 ;; This function is called by:
 14685 ;;		_fputc
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text54
 14690   005264                     __ptext54:
 14691                           	callstack 0
 14692   005264                     _putch:
 14693                           	callstack 21
 14694                           
 14695                           ;incstack = 0
 14696                           ;putch@data stored from wreg
 14697   005264  6E06               	movwf	putch@data^0,c
 14698   005266                     l270:
 14699   005266  A89E               	btfss	3998,4,c	;volatile
 14700   005268  EF38  F029         	goto	u6991
 14701   00526C  EF3A  F029         	goto	u6990
 14702   005270                     u6991:
 14703   005270  EF33  F029         	goto	l270
 14704   005274                     u6990:
 14705   005274                     
 14706                           ;putch.c: 13:     TXREG1 = data;
 14707   005274  C006  FFAD         	movff	putch@data,4013	;volatile
 14708   005278  0012               	return		;funcret
 14709   00527A                     __end_of_putch:
 14710                           	callstack 0
 14711                           
 14712 ;; *************** function _abs *****************
 14713 ;; Defined at:
 14714 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;  a               2   11[COMRAM] int 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  2   11[COMRAM] int 
 14721 ;; Registers used:
 14722 ;;		wreg, status,2, status,0
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;Total ram usage:        4 bytes
 14733 ;; Hardware stack levels used: 1
 14734 ;; Hardware stack levels required when called: 1
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		_dtoa
 14739 ;; This function uses a non-reentrant model
 14740 ;;
 14741                           
 14742                           	psect	text55
 14743   00519C                     __ptext55:
 14744                           	callstack 0
 14745   00519C                     _abs:
 14746                           	callstack 24
 14747   00519C  BE0D               	btfsc	(abs@a+1)^0,7,c
 14748   00519E  EFD3  F028         	goto	u8241
 14749   0051A2  EFD5  F028         	goto	u8240
 14750   0051A6                     u8241:
 14751   0051A6  EFDB  F028         	goto	l1611
 14752   0051AA                     u8240:
 14753   0051AA  C00C  F00C         	movff	abs@a,?_abs
 14754   0051AE  C00D  F00D         	movff	abs@a+1,?_abs+1
 14755   0051B2  EFE7  F028         	goto	l1614
 14756   0051B6                     l1611:
 14757   0051B6  C00C  F00E         	movff	abs@a,??_abs
 14758   0051BA  C00D  F00F         	movff	abs@a+1,??_abs+1
 14759   0051BE  1E0E               	comf	??_abs^0,f,c
 14760   0051C0  1E0F               	comf	(??_abs+1)^0,f,c
 14761   0051C2  4A0E               	infsnz	??_abs^0,f,c
 14762   0051C4  2A0F               	incf	(??_abs+1)^0,f,c
 14763   0051C6  C00E  F00C         	movff	??_abs,?_abs
 14764   0051CA  C00F  F00D         	movff	??_abs+1,?_abs+1
 14765   0051CE                     l1614:
 14766   0051CE  0012               	return		;funcret
 14767   0051D0                     __end_of_abs:
 14768                           	callstack 0
 14769                           
 14770 ;; *************** function ___awmod *****************
 14771 ;; Defined at:
 14772 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;  dividend        2    5[COMRAM] int 
 14775 ;;  divisor         2    7[COMRAM] int 
 14776 ;; Auto vars:     Size  Location     Type
 14777 ;;  sign            1   10[COMRAM] unsigned char 
 14778 ;;  counter         1    9[COMRAM] unsigned char 
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  2    5[COMRAM] int 
 14781 ;; Registers used:
 14782 ;;		wreg, status,2, status,0
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14792 ;;Total ram usage:        6 bytes
 14793 ;; Hardware stack levels used: 1
 14794 ;; Hardware stack levels required when called: 1
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		_dtoa
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text56
 14803   004984                     __ptext56:
 14804                           	callstack 0
 14805   004984                     ___awmod:
 14806                           	callstack 24
 14807   004984  0E00               	movlw	0
 14808   004986  6E0B               	movwf	___awmod@sign^0,c
 14809   004988  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14810   00498A  EFCB  F024         	goto	u7920
 14811   00498E  EFC9  F024         	goto	u7921
 14812   004992                     u7921:
 14813   004992  EFD1  F024         	goto	l6848
 14814   004996                     u7920:
 14815   004996  6C06               	negf	___awmod@dividend^0,c
 14816   004998  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14817   00499A  B0D8               	btfsc	status,0,c
 14818   00499C  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14819   00499E  0E01               	movlw	1
 14820   0049A0  6E0B               	movwf	___awmod@sign^0,c
 14821   0049A2                     l6848:
 14822   0049A2  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14823   0049A4  EFD8  F024         	goto	u7930
 14824   0049A8  EFD6  F024         	goto	u7931
 14825   0049AC                     u7931:
 14826   0049AC  EFDC  F024         	goto	l6852
 14827   0049B0                     u7930:
 14828   0049B0  6C08               	negf	___awmod@divisor^0,c
 14829   0049B2  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14830   0049B4  B0D8               	btfsc	status,0,c
 14831   0049B6  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14832   0049B8                     l6852:
 14833   0049B8  5008               	movf	___awmod@divisor^0,w,c
 14834   0049BA  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14835   0049BC  B4D8               	btfsc	status,2,c
 14836   0049BE  EFE3  F024         	goto	u7941
 14837   0049C2  EFE5  F024         	goto	u7940
 14838   0049C6                     u7941:
 14839   0049C6  EF09  F025         	goto	l6868
 14840   0049CA                     u7940:
 14841   0049CA  0E01               	movlw	1
 14842   0049CC  6E0A               	movwf	___awmod@counter^0,c
 14843   0049CE  EFED  F024         	goto	l6858
 14844   0049D2                     l6856:
 14845   0049D2  90D8               	bcf	status,0,c
 14846   0049D4  3608               	rlcf	___awmod@divisor^0,f,c
 14847   0049D6  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14848   0049D8  2A0A               	incf	___awmod@counter^0,f,c
 14849   0049DA                     l6858:
 14850   0049DA  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 14851   0049DC  EFF2  F024         	goto	u7951
 14852   0049E0  EFF4  F024         	goto	u7950
 14853   0049E4                     u7951:
 14854   0049E4  EFE9  F024         	goto	l6856
 14855   0049E8                     u7950:
 14856   0049E8                     l6860:
 14857   0049E8  5008               	movf	___awmod@divisor^0,w,c
 14858   0049EA  5C06               	subwf	___awmod@dividend^0,w,c
 14859   0049EC  5009               	movf	(___awmod@divisor+1)^0,w,c
 14860   0049EE  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 14861   0049F0  A0D8               	btfss	status,0,c
 14862   0049F2  EFFD  F024         	goto	u7961
 14863   0049F6  EFFF  F024         	goto	u7960
 14864   0049FA                     u7961:
 14865   0049FA  EF03  F025         	goto	l6864
 14866   0049FE                     u7960:
 14867   0049FE  5008               	movf	___awmod@divisor^0,w,c
 14868   004A00  5E06               	subwf	___awmod@dividend^0,f,c
 14869   004A02  5009               	movf	(___awmod@divisor+1)^0,w,c
 14870   004A04  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 14871   004A06                     l6864:
 14872   004A06  90D8               	bcf	status,0,c
 14873   004A08  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 14874   004A0A  3208               	rrcf	___awmod@divisor^0,f,c
 14875   004A0C  2E0A               	decfsz	___awmod@counter^0,f,c
 14876   004A0E  EFF4  F024         	goto	l6860
 14877   004A12                     l6868:
 14878   004A12  500B               	movf	___awmod@sign^0,w,c
 14879   004A14  B4D8               	btfsc	status,2,c
 14880   004A16  EF0F  F025         	goto	u7971
 14881   004A1A  EF11  F025         	goto	u7970
 14882   004A1E                     u7971:
 14883   004A1E  EF15  F025         	goto	l6872
 14884   004A22                     u7970:
 14885   004A22  6C06               	negf	___awmod@dividend^0,c
 14886   004A24  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14887   004A26  B0D8               	btfsc	status,0,c
 14888   004A28  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14889   004A2A                     l6872:
 14890   004A2A  C006  F006         	movff	___awmod@dividend,?___awmod
 14891   004A2E  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 14892   004A32  0012               	return		;funcret
 14893   004A34                     __end_of___awmod:
 14894                           	callstack 0
 14895                           
 14896 ;; *************** function ___awdiv *****************
 14897 ;; Defined at:
 14898 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;  dividend        2   23[COMRAM] int 
 14901 ;;  divisor         2   25[COMRAM] int 
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;  quotient        2   29[COMRAM] int 
 14904 ;;  sign            1   28[COMRAM] unsigned char 
 14905 ;;  counter         1   27[COMRAM] unsigned char 
 14906 ;; Return value:  Size  Location     Type
 14907 ;;                  2   23[COMRAM] int 
 14908 ;; Registers used:
 14909 ;;		wreg, status,2, status,0
 14910 ;; Tracked objects:
 14911 ;;		On entry : 0/0
 14912 ;;		On exit  : 0/0
 14913 ;;		Unchanged: 0/0
 14914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14918 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14919 ;;Total ram usage:        8 bytes
 14920 ;; Hardware stack levels used: 1
 14921 ;; Hardware stack levels required when called: 1
 14922 ;; This function calls:
 14923 ;;		Nothing
 14924 ;; This function is called by:
 14925 ;;		_runPWM
 14926 ;;		_runGAME
 14927 ;;		_dtoa
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           	psect	text57
 14932   00480E                     __ptext57:
 14933                           	callstack 0
 14934   00480E                     ___awdiv:
 14935                           	callstack 24
 14936   00480E  0E00               	movlw	0
 14937   004810  6E1D               	movwf	___awdiv@sign^0,c
 14938   004812  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 14939   004814  EF10  F024         	goto	u7860
 14940   004818  EF0E  F024         	goto	u7861
 14941   00481C                     u7861:
 14942   00481C  EF16  F024         	goto	l6804
 14943   004820                     u7860:
 14944   004820  6C1A               	negf	___awdiv@divisor^0,c
 14945   004822  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 14946   004824  B0D8               	btfsc	status,0,c
 14947   004826  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 14948   004828  0E01               	movlw	1
 14949   00482A  6E1D               	movwf	___awdiv@sign^0,c
 14950   00482C                     l6804:
 14951   00482C  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 14952   00482E  EF1D  F024         	goto	u7870
 14953   004832  EF1B  F024         	goto	u7871
 14954   004836                     u7871:
 14955   004836  EF23  F024         	goto	l6810
 14956   00483A                     u7870:
 14957   00483A  6C18               	negf	___awdiv@dividend^0,c
 14958   00483C  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 14959   00483E  B0D8               	btfsc	status,0,c
 14960   004840  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 14961   004842  0E01               	movlw	1
 14962   004844  1A1D               	xorwf	___awdiv@sign^0,f,c
 14963   004846                     l6810:
 14964   004846  0E00               	movlw	0
 14965   004848  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 14966   00484A  0E00               	movlw	0
 14967   00484C  6E1E               	movwf	___awdiv@quotient^0,c
 14968   00484E  501A               	movf	___awdiv@divisor^0,w,c
 14969   004850  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 14970   004852  B4D8               	btfsc	status,2,c
 14971   004854  EF2E  F024         	goto	u7881
 14972   004858  EF30  F024         	goto	u7880
 14973   00485C                     u7881:
 14974   00485C  EF58  F024         	goto	l6832
 14975   004860                     u7880:
 14976   004860  0E01               	movlw	1
 14977   004862  6E1C               	movwf	___awdiv@counter^0,c
 14978   004864  EF38  F024         	goto	l6818
 14979   004868                     l6816:
 14980   004868  90D8               	bcf	status,0,c
 14981   00486A  361A               	rlcf	___awdiv@divisor^0,f,c
 14982   00486C  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 14983   00486E  2A1C               	incf	___awdiv@counter^0,f,c
 14984   004870                     l6818:
 14985   004870  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 14986   004872  EF3D  F024         	goto	u7891
 14987   004876  EF3F  F024         	goto	u7890
 14988   00487A                     u7891:
 14989   00487A  EF34  F024         	goto	l6816
 14990   00487E                     u7890:
 14991   00487E                     l6820:
 14992   00487E  90D8               	bcf	status,0,c
 14993   004880  361E               	rlcf	___awdiv@quotient^0,f,c
 14994   004882  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 14995   004884  501A               	movf	___awdiv@divisor^0,w,c
 14996   004886  5C18               	subwf	___awdiv@dividend^0,w,c
 14997   004888  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14998   00488A  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 14999   00488C  A0D8               	btfss	status,0,c
 15000   00488E  EF4B  F024         	goto	u7901
 15001   004892  EF4D  F024         	goto	u7900
 15002   004896                     u7901:
 15003   004896  EF52  F024         	goto	l6828
 15004   00489A                     u7900:
 15005   00489A  501A               	movf	___awdiv@divisor^0,w,c
 15006   00489C  5E18               	subwf	___awdiv@dividend^0,f,c
 15007   00489E  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15008   0048A0  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 15009   0048A2  801E               	bsf	___awdiv@quotient^0,0,c
 15010   0048A4                     l6828:
 15011   0048A4  90D8               	bcf	status,0,c
 15012   0048A6  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 15013   0048A8  321A               	rrcf	___awdiv@divisor^0,f,c
 15014   0048AA  2E1C               	decfsz	___awdiv@counter^0,f,c
 15015   0048AC  EF3F  F024         	goto	l6820
 15016   0048B0                     l6832:
 15017   0048B0  501D               	movf	___awdiv@sign^0,w,c
 15018   0048B2  B4D8               	btfsc	status,2,c
 15019   0048B4  EF5E  F024         	goto	u7911
 15020   0048B8  EF60  F024         	goto	u7910
 15021   0048BC                     u7911:
 15022   0048BC  EF64  F024         	goto	l6836
 15023   0048C0                     u7910:
 15024   0048C0  6C1E               	negf	___awdiv@quotient^0,c
 15025   0048C2  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 15026   0048C4  B0D8               	btfsc	status,0,c
 15027   0048C6  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 15028   0048C8                     l6836:
 15029   0048C8  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 15030   0048CC  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 15031   0048D0  0012               	return		;funcret
 15032   0048D2                     __end_of___awdiv:
 15033                           	callstack 0
 15034                           
 15035 ;; *************** function _LCD_ShowString *****************
 15036 ;; Defined at:
 15037 ;;		line 55 in file "lcd.c"
 15038 ;; Parameters:    Size  Location     Type
 15039 ;;  lineNum         1    wreg     unsigned char 
 15040 ;;  textData        2    6[COMRAM] PTR unsigned char 
 15041 ;;		 -> STR_35(17), runGAME@approxText(25), runGAME@text(17), runADC@text(17), 
 15042 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_17(17), STR_16(17), 
 15043 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
 15044 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
 15045 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 15046 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;  lineNum         1   10[COMRAM] unsigned char 
 15049 ;;  i               1   11[COMRAM] unsigned char 
 15050 ;; Return value:  Size  Location     Type
 15051 ;;                  1    wreg      void 
 15052 ;; Registers used:
 15053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15054 ;; Tracked objects:
 15055 ;;		On entry : 0/0
 15056 ;;		On exit  : 0/0
 15057 ;;		Unchanged: 0/0
 15058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15063 ;;Total ram usage:        6 bytes
 15064 ;; Hardware stack levels used: 1
 15065 ;; Hardware stack levels required when called: 2
 15066 ;; This function calls:
 15067 ;;		_LCD_Send
 15068 ;; This function is called by:
 15069 ;;		_main
 15070 ;;		_moveDisplay
 15071 ;;		_runADC
 15072 ;;		_runGAME
 15073 ;; This function uses a non-reentrant model
 15074 ;;
 15075                           
 15076                           	psect	text58
 15077   0048D2                     __ptext58:
 15078                           	callstack 0
 15079   0048D2                     _LCD_ShowString:
 15080                           	callstack 27
 15081                           
 15082                           ;incstack = 0
 15083                           ;LCD_ShowString@lineNum stored from wreg
 15084   0048D2  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 15085   0048D4                     
 15086                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 15087   0048D4  806B               	bsf	107,0,c	;volatile
 15088   0048D6                     l132:
 15089   0048D6  B06B               	btfsc	107,0,c	;volatile
 15090   0048D8  EF70  F024         	goto	u9361
 15091   0048DC  EF72  F024         	goto	u9360
 15092   0048E0                     u9361:
 15093   0048E0  EF6B  F024         	goto	l132
 15094   0048E4                     u9360:
 15095   0048E4                     
 15096                           ;lcd.c: 62:     SSP2IF = 0;
 15097   0048E4  9EA4               	bcf	4004,7,c	;volatile
 15098   0048E6                     
 15099                           ;lcd.c: 64:     LCD_Send(0x7c);
 15100   0048E6  0E7C               	movlw	124
 15101   0048E8  EC0F  F029         	call	_LCD_Send
 15102                           
 15103                           ;lcd.c: 66:     LCD_Send(0x80);
 15104   0048EC  0E80               	movlw	128
 15105   0048EE  EC0F  F029         	call	_LCD_Send
 15106   0048F2                     
 15107                           ;lcd.c: 68:     if(lineNum == 1){
 15108   0048F2  040B               	decf	LCD_ShowString@lineNum^0,w,c
 15109   0048F4  A4D8               	btfss	status,2,c
 15110   0048F6  EF7F  F024         	goto	u9371
 15111   0048FA  EF81  F024         	goto	u9370
 15112   0048FE                     u9371:
 15113   0048FE  EF86  F024         	goto	l7738
 15114   004902                     u9370:
 15115   004902                     
 15116                           ;lcd.c: 69:         LCD_Send(0x80);
 15117   004902  0E80               	movlw	128
 15118   004904  EC0F  F029         	call	_LCD_Send
 15119                           
 15120                           ;lcd.c: 70:     }
 15121   004908  EF92  F024         	goto	l136
 15122   00490C                     l7738:
 15123   00490C  0E02               	movlw	2
 15124   00490E  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15125   004910  A4D8               	btfss	status,2,c
 15126   004912  EF8D  F024         	goto	u9381
 15127   004916  EF8F  F024         	goto	u9380
 15128   00491A                     u9381:
 15129   00491A  EF92  F024         	goto	l136
 15130   00491E                     u9380:
 15131   00491E                     
 15132                           ;lcd.c: 72:         LCD_Send(0xC0);
 15133   00491E  0EC0               	movlw	192
 15134   004920  EC0F  F029         	call	_LCD_Send
 15135   004924                     l136:
 15136                           
 15137                           ;lcd.c: 75:     LCD_Send(0x40);
 15138   004924  0E40               	movlw	64
 15139   004926  EC0F  F029         	call	_LCD_Send
 15140   00492A                     
 15141                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15142   00492A  0E00               	movlw	0
 15143   00492C  6E0C               	movwf	LCD_ShowString@i^0,c
 15144   00492E                     l7748:
 15145                           
 15146                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15147   00492E  500C               	movf	LCD_ShowString@i^0,w,c
 15148   004930  2407               	addwf	LCD_ShowString@textData^0,w,c
 15149   004932  6E09               	movwf	??_LCD_ShowString^0,c
 15150   004934  0E00               	movlw	0
 15151   004936  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15152   004938  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15153   00493A  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15154   00493E  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15155   004942  0E00               	movlw	low (__mediumconst shr (0+16))
 15156   004944  6EF8               	movwf	tblptru,c
 15157   004946  0E0F               	movlw	(high __ramtop+-1)
 15158   004948  64F7               	cpfsgt	tblptrh,c
 15159   00494A  D003               	bra	u9397
 15160   00494C  0008               	tblrd		*
 15161   00494E  50F5               	movf	tablat,w,c
 15162   004950  D005               	bra	u9390
 15163   004952                     u9397:
 15164   004952  CFF6 FFE1          	movff	tblptrl,fsr1l
 15165   004956  CFF7 FFE2          	movff	tblptrh,fsr1h
 15166   00495A  50E7               	movf	indf1,w,c
 15167   00495C                     u9390:
 15168   00495C  EC0F  F029         	call	_LCD_Send
 15169   004960                     
 15170                           ;lcd.c: 79:     }
 15171   004960  2A0C               	incf	LCD_ShowString@i^0,f,c
 15172   004962  0E0F               	movlw	15
 15173   004964  640C               	cpfsgt	LCD_ShowString@i^0,c
 15174   004966  EFB7  F024         	goto	u9401
 15175   00496A  EFB9  F024         	goto	u9400
 15176   00496E                     u9401:
 15177   00496E  EF97  F024         	goto	l7748
 15178   004972                     u9400:
 15179   004972                     
 15180                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15181   004972  846B               	bsf	107,2,c	;volatile
 15182   004974                     l140:
 15183   004974  B46B               	btfsc	107,2,c	;volatile
 15184   004976  EFBF  F024         	goto	u9411
 15185   00497A  EFC1  F024         	goto	u9410
 15186   00497E                     u9411:
 15187   00497E  EFBA  F024         	goto	l140
 15188   004982                     u9410:
 15189   004982  0012               	return		;funcret
 15190   004984                     __end_of_LCD_ShowString:
 15191                           	callstack 0
 15192                           
 15193 ;; *************** function _LCD_Clear *****************
 15194 ;; Defined at:
 15195 ;;		line 94 in file "lcd.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;		None
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;		None
 15200 ;; Return value:  Size  Location     Type
 15201 ;;                  1    wreg      void 
 15202 ;; Registers used:
 15203 ;;		wreg, cstack
 15204 ;; Tracked objects:
 15205 ;;		On entry : 0/0
 15206 ;;		On exit  : 0/0
 15207 ;;		Unchanged: 0/0
 15208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15213 ;;Total ram usage:        0 bytes
 15214 ;; Hardware stack levels used: 1
 15215 ;; Hardware stack levels required when called: 2
 15216 ;; This function calls:
 15217 ;;		_LCD_Send
 15218 ;; This function is called by:
 15219 ;;		_moveDisplay
 15220 ;; This function uses a non-reentrant model
 15221 ;;
 15222                           
 15223                           	psect	text59
 15224   005132                     __ptext59:
 15225                           	callstack 0
 15226   005132                     _LCD_Clear:
 15227                           	callstack 27
 15228   005132                     
 15229                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15230   005132  806B               	bsf	107,0,c	;volatile
 15231   005134                     l155:
 15232   005134  B06B               	btfsc	107,0,c	;volatile
 15233   005136  EF9F  F028         	goto	u9421
 15234   00513A  EFA1  F028         	goto	u9420
 15235   00513E                     u9421:
 15236   00513E  EF9A  F028         	goto	l155
 15237   005142                     u9420:
 15238   005142                     
 15239                           ;lcd.c: 97:     SSP2IF = 0;
 15240   005142  9EA4               	bcf	4004,7,c	;volatile
 15241   005144                     
 15242                           ;lcd.c: 99:     LCD_Send(0x7C);
 15243   005144  0E7C               	movlw	124
 15244   005146  EC0F  F029         	call	_LCD_Send
 15245                           
 15246                           ;lcd.c: 100:     LCD_Send(0x80);
 15247   00514A  0E80               	movlw	128
 15248   00514C  EC0F  F029         	call	_LCD_Send
 15249                           
 15250                           ;lcd.c: 101:     LCD_Send(0x01);
 15251   005150  0E01               	movlw	1
 15252   005152  EC0F  F029         	call	_LCD_Send
 15253   005156                     
 15254                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15255   005156  846B               	bsf	107,2,c	;volatile
 15256   005158                     l158:
 15257   005158  B46B               	btfsc	107,2,c	;volatile
 15258   00515A  EFB1  F028         	goto	u9431
 15259   00515E  EFB3  F028         	goto	u9430
 15260   005162                     u9431:
 15261   005162  EFAC  F028         	goto	l158
 15262   005166                     u9430:
 15263   005166  0012               	return		;funcret
 15264   005168                     __end_of_LCD_Clear:
 15265                           	callstack 0
 15266                           
 15267 ;; *************** function _LCD_Init *****************
 15268 ;; Defined at:
 15269 ;;		line 3 in file "lcd.c"
 15270 ;; Parameters:    Size  Location     Type
 15271 ;;		None
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;		None
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1    wreg      void 
 15276 ;; Registers used:
 15277 ;;		wreg, status,2, cstack
 15278 ;; Tracked objects:
 15279 ;;		On entry : 0/0
 15280 ;;		On exit  : 0/0
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15285 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15287 ;;Total ram usage:        1 bytes
 15288 ;; Hardware stack levels used: 1
 15289 ;; Hardware stack levels required when called: 2
 15290 ;; This function calls:
 15291 ;;		_LCD_Send
 15292 ;; This function is called by:
 15293 ;;		_main
 15294 ;; This function uses a non-reentrant model
 15295 ;;
 15296                           
 15297                           	psect	text60
 15298   00466A                     __ptext60:
 15299                           	callstack 0
 15300   00466A                     _LCD_Init:
 15301                           	callstack 28
 15302   00466A                     
 15303                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15304   00466A  010F               	movlb	15	; () banked
 15305   00466C  913B               	bcf	59,0,b	;volatile
 15306                           
 15307                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15308   00466E  933B               	bcf	59,1,b	;volatile
 15309                           
 15310                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15311   004670  8095               	bsf	149,0,c	;volatile
 15312                           
 15313                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15314   004672  8295               	bsf	149,1,c	;volatile
 15315                           
 15316                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15317   004674  9092               	bcf	146,0,c	;volatile
 15318                           
 15319                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15320   004676  8089               	bsf	137,0,c	;volatile
 15321   004678                     
 15322                           ; BSR set to: 15
 15323                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15324   004678  506C               	movf	108,w,c	;volatile
 15325   00467A  0BF0               	andlw	-16
 15326   00467C  0908               	iorlw	8
 15327   00467E  6E6C               	movwf	108,c	;volatile
 15328                           
 15329                           ;lcd.c: 15:     SSP2ADD = 19;
 15330   004680  0E13               	movlw	19
 15331   004682  6E6E               	movwf	110,c	;volatile
 15332   004684                     
 15333                           ; BSR set to: 15
 15334                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15335   004684  8A6C               	bsf	108,5,c	;volatile
 15336   004686                     
 15337                           ; BSR set to: 15
 15338                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15339   004686  0E34               	movlw	52
 15340   004688  6E07               	movwf	??_LCD_Init^0,c
 15341   00468A  0EF2               	movlw	242
 15342   00468C                     u10517:
 15343   00468C  2EE8               	decfsz	wreg,f,c
 15344   00468E  D7FE               	bra	u10517
 15345   004690  2E07               	decfsz	??_LCD_Init^0,f,c
 15346   004692  D7FC               	bra	u10517
 15347   004694                     
 15348                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15349   004694  806B               	bsf	107,0,c	;volatile
 15350   004696                     l123:
 15351   004696  B06B               	btfsc	107,0,c	;volatile
 15352   004698  EF50  F023         	goto	u9701
 15353   00469C  EF52  F023         	goto	u9700
 15354   0046A0                     u9701:
 15355   0046A0  EF4B  F023         	goto	l123
 15356   0046A4                     u9700:
 15357   0046A4                     
 15358                           ;lcd.c: 22:     SSP2IF = 0;
 15359   0046A4  9EA4               	bcf	4004,7,c	;volatile
 15360   0046A6                     
 15361                           ;lcd.c: 27:     LCD_Send(0x7C);
 15362   0046A6  0E7C               	movlw	124
 15363   0046A8  EC0F  F029         	call	_LCD_Send
 15364                           
 15365                           ;lcd.c: 28:     LCD_Send(0x80);
 15366   0046AC  0E80               	movlw	128
 15367   0046AE  EC0F  F029         	call	_LCD_Send
 15368                           
 15369                           ;lcd.c: 29:     LCD_Send(0x38);
 15370   0046B2  0E38               	movlw	56
 15371   0046B4  EC0F  F029         	call	_LCD_Send
 15372                           
 15373                           ;lcd.c: 30:     LCD_Send(0x80);
 15374   0046B8  0E80               	movlw	128
 15375   0046BA  EC0F  F029         	call	_LCD_Send
 15376                           
 15377                           ;lcd.c: 31:     LCD_Send(0x39);
 15378   0046BE  0E39               	movlw	57
 15379   0046C0  EC0F  F029         	call	_LCD_Send
 15380                           
 15381                           ;lcd.c: 32:     LCD_Send(0x80);
 15382   0046C4  0E80               	movlw	128
 15383   0046C6  EC0F  F029         	call	_LCD_Send
 15384                           
 15385                           ;lcd.c: 33:     LCD_Send(0x17);
 15386   0046CA  0E17               	movlw	23
 15387   0046CC  EC0F  F029         	call	_LCD_Send
 15388                           
 15389                           ;lcd.c: 34:     LCD_Send(0x80);
 15390   0046D0  0E80               	movlw	128
 15391   0046D2  EC0F  F029         	call	_LCD_Send
 15392                           
 15393                           ;lcd.c: 35:     LCD_Send(0x7A);
 15394   0046D6  0E7A               	movlw	122
 15395   0046D8  EC0F  F029         	call	_LCD_Send
 15396                           
 15397                           ;lcd.c: 36:     LCD_Send(0x80);
 15398   0046DC  0E80               	movlw	128
 15399   0046DE  EC0F  F029         	call	_LCD_Send
 15400                           
 15401                           ;lcd.c: 37:     LCD_Send(0x5E);
 15402   0046E2  0E5E               	movlw	94
 15403   0046E4  EC0F  F029         	call	_LCD_Send
 15404                           
 15405                           ;lcd.c: 38:     LCD_Send(0x80);
 15406   0046E8  0E80               	movlw	128
 15407   0046EA  EC0F  F029         	call	_LCD_Send
 15408                           
 15409                           ;lcd.c: 39:     LCD_Send(0x6B);
 15410   0046EE  0E6B               	movlw	107
 15411   0046F0  EC0F  F029         	call	_LCD_Send
 15412                           
 15413                           ;lcd.c: 40:     LCD_Send(0x80);
 15414   0046F4  0E80               	movlw	128
 15415   0046F6  EC0F  F029         	call	_LCD_Send
 15416                           
 15417                           ;lcd.c: 41:     LCD_Send(0x0C);
 15418   0046FA  0E0C               	movlw	12
 15419   0046FC  EC0F  F029         	call	_LCD_Send
 15420                           
 15421                           ;lcd.c: 42:     LCD_Send(0x80);
 15422   004700  0E80               	movlw	128
 15423   004702  EC0F  F029         	call	_LCD_Send
 15424                           
 15425                           ;lcd.c: 43:     LCD_Send(0x01);
 15426   004706  0E01               	movlw	1
 15427   004708  EC0F  F029         	call	_LCD_Send
 15428                           
 15429                           ;lcd.c: 44:     LCD_Send(0x80);
 15430   00470C  0E80               	movlw	128
 15431   00470E  EC0F  F029         	call	_LCD_Send
 15432                           
 15433                           ;lcd.c: 45:     LCD_Send(0x06);
 15434   004712  0E06               	movlw	6
 15435   004714  EC0F  F029         	call	_LCD_Send
 15436                           
 15437                           ;lcd.c: 46:     LCD_Send(0x80);
 15438   004718  0E80               	movlw	128
 15439   00471A  EC0F  F029         	call	_LCD_Send
 15440                           
 15441                           ;lcd.c: 47:     LCD_Send(0x02);
 15442   00471E  0E02               	movlw	2
 15443   004720  EC0F  F029         	call	_LCD_Send
 15444   004724                     
 15445                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15446   004724  846B               	bsf	107,2,c	;volatile
 15447   004726                     l126:
 15448   004726  B46B               	btfsc	107,2,c	;volatile
 15449   004728  EF98  F023         	goto	u9711
 15450   00472C  EF9A  F023         	goto	u9710
 15451   004730                     u9711:
 15452   004730  EF93  F023         	goto	l126
 15453   004734                     u9710:
 15454   004734                     
 15455                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15456   004734  0E34               	movlw	52
 15457   004736  6E07               	movwf	??_LCD_Init^0,c
 15458   004738  0EF2               	movlw	242
 15459   00473A                     u10527:
 15460   00473A  2EE8               	decfsz	wreg,f,c
 15461   00473C  D7FE               	bra	u10527
 15462   00473E  2E07               	decfsz	??_LCD_Init^0,f,c
 15463   004740  D7FC               	bra	u10527
 15464   004742  0012               	return		;funcret
 15465   004744                     __end_of_LCD_Init:
 15466                           	callstack 0
 15467                           
 15468 ;; *************** function _LCD_Send *****************
 15469 ;; Defined at:
 15470 ;;		line 85 in file "lcd.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;  data            1    wreg     unsigned char 
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;  data            1    5[COMRAM] unsigned char 
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      void 
 15477 ;; Registers used:
 15478 ;;		wreg
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15488 ;;Total ram usage:        1 bytes
 15489 ;; Hardware stack levels used: 1
 15490 ;; Hardware stack levels required when called: 1
 15491 ;; This function calls:
 15492 ;;		Nothing
 15493 ;; This function is called by:
 15494 ;;		_LCD_Init
 15495 ;;		_LCD_ShowString
 15496 ;;		_LCD_Clear
 15497 ;; This function uses a non-reentrant model
 15498 ;;
 15499                           
 15500                           	psect	text61
 15501   00521E                     __ptext61:
 15502                           	callstack 0
 15503   00521E                     _LCD_Send:
 15504                           	callstack 27
 15505                           
 15506                           ;incstack = 0
 15507                           ;LCD_Send@data stored from wreg
 15508   00521E  6E06               	movwf	LCD_Send@data^0,c
 15509   005220                     
 15510                           ;lcd.c: 87:     SSP2BUF = data;
 15511   005220  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15512   005224                     l146:
 15513   005224  B06D               	btfsc	109,0,c	;volatile
 15514   005226  EF17  F029         	goto	u9261
 15515   00522A  EF19  F029         	goto	u9260
 15516   00522E                     u9261:
 15517   00522E  EF12  F029         	goto	l146
 15518   005232                     u9260:
 15519   005232                     l149:
 15520   005232  AEA4               	btfss	4004,7,c	;volatile
 15521   005234  EF1E  F029         	goto	u9271
 15522   005238  EF20  F029         	goto	u9270
 15523   00523C                     u9271:
 15524   00523C  EF19  F029         	goto	l149
 15525   005240                     u9270:
 15526   005240                     
 15527                           ;lcd.c: 90:     SSP2IF = 0;
 15528   005240  9EA4               	bcf	4004,7,c	;volatile
 15529   005242  0012               	return		;funcret
 15530   005244                     __end_of_LCD_Send:
 15531                           	callstack 0
 15532                           
 15533 ;; *************** function _ISR *****************
 15534 ;; Defined at:
 15535 ;;		line 11 in file "interrupt.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;		None
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;  temp            1    4[COMRAM] unsigned char 
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      void 
 15542 ;; Registers used:
 15543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;Total ram usage:        5 bytes
 15554 ;; Hardware stack levels used: 1
 15555 ;; This function calls:
 15556 ;;		Nothing
 15557 ;; This function is called by:
 15558 ;;		Interrupt level 2
 15559 ;; This function uses a non-reentrant model
 15560 ;;
 15561                           
 15562                           	psect	intcode
 15563   000008                     __pintcode:
 15564                           	callstack 0
 15565   000008                     _ISR:
 15566                           	callstack 21
 15567                           
 15568                           ;incstack = 0
 15569   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15570   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15571   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15572   000012                     
 15573                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15574   000012  A09D               	btfss	3997,0,c	;volatile
 15575   000014  EF0E  F000         	goto	i2u686_41
 15576   000018  EF10  F000         	goto	i2u686_40
 15577   00001C                     i2u686_41:
 15578   00001C  EF49  F000         	goto	i2l6256
 15579   000020                     i2u686_40:
 15580   000020  A09E               	btfss	3998,0,c	;volatile
 15581   000022  EF15  F000         	goto	i2u687_41
 15582   000026  EF17  F000         	goto	i2u687_40
 15583   00002A                     i2u687_41:
 15584   00002A  EF49  F000         	goto	i2l6256
 15585   00002E                     i2u687_40:
 15586   00002E  0101               	movlb	1	; () banked
 15587   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15588   000032  B4D8               	btfsc	status,2,c
 15589   000034  EF1E  F000         	goto	i2u688_41
 15590   000038  EF20  F000         	goto	i2u688_40
 15591   00003C                     i2u688_41:
 15592   00003C  EF49  F000         	goto	i2l6256
 15593   000040                     i2u688_40:
 15594   000040                     
 15595                           ; BSR set to: 1
 15596                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15597   000040  A480               	btfss	128,2,c	;volatile
 15598   000042  EF25  F000         	goto	i2u689_41
 15599   000046  EF27  F000         	goto	i2u689_40
 15600   00004A                     i2u689_41:
 15601   00004A  EF44  F000         	goto	i2l412
 15602   00004E                     i2u689_40:
 15603   00004E                     
 15604                           ; BSR set to: 1
 15605                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15606   00004E  0E03               	movlw	3
 15607   000050  6E02               	movwf	(??_ISR+1)^0,c
 15608   000052  0E08               	movlw	8
 15609   000054  6E01               	movwf	??_ISR^0,c
 15610   000056  0E77               	movlw	119
 15611   000058                     i2u1053_47:
 15612   000058  2EE8               	decfsz	wreg,f,c
 15613   00005A  D7FE               	bra	i2u1053_47
 15614   00005C  2E01               	decfsz	??_ISR^0,f,c
 15615   00005E  D7FC               	bra	i2u1053_47
 15616   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15617   000062  D7FA               	bra	i2u1053_47
 15618   000064  0000               	nop	
 15619   000066                     
 15620                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15621   000066  A480               	btfss	128,2,c	;volatile
 15622   000068  EF38  F000         	goto	i2u690_41
 15623   00006C  EF3A  F000         	goto	i2u690_40
 15624   000070                     i2u690_41:
 15625   000070  EF44  F000         	goto	i2l412
 15626   000074                     i2u690_40:
 15627   000074                     i2l414:
 15628   000074  B480               	btfsc	128,2,c	;volatile
 15629   000076  EF3F  F000         	goto	i2u691_41
 15630   00007A  EF41  F000         	goto	i2u691_40
 15631   00007E                     i2u691_41:
 15632   00007E  EF3A  F000         	goto	i2l414
 15633   000082                     i2u691_40:
 15634   000082                     
 15635                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15636   000082  0E00               	movlw	0
 15637   000084  0100               	movlb	0	; () banked
 15638   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15639   000088                     i2l412:
 15640                           
 15641                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15642   000088  0E9E               	movlw	158
 15643   00008A  6ECF               	movwf	207,c	;volatile
 15644   00008C  0E58               	movlw	88
 15645   00008E  6ECE               	movwf	206,c	;volatile
 15646   000090                     
 15647                           ;interrupt.c: 23:         TMR1IF = 0;
 15648   000090  909E               	bcf	3998,0,c	;volatile
 15649   000092                     i2l6256:
 15650                           
 15651                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15652   000092  A09D               	btfss	3997,0,c	;volatile
 15653   000094  EF4E  F000         	goto	i2u692_41
 15654   000098  EF50  F000         	goto	i2u692_40
 15655   00009C                     i2u692_41:
 15656   00009C  EF66  F000         	goto	i2l6268
 15657   0000A0                     i2u692_40:
 15658   0000A0  A09E               	btfss	3998,0,c	;volatile
 15659   0000A2  EF55  F000         	goto	i2u693_41
 15660   0000A6  EF57  F000         	goto	i2u693_40
 15661   0000AA                     i2u693_41:
 15662   0000AA  EF66  F000         	goto	i2l6268
 15663   0000AE                     i2u693_40:
 15664   0000AE  0101               	movlb	1	; () banked
 15665   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15666   0000B2  B4D8               	btfsc	status,2,c
 15667   0000B4  EF5E  F000         	goto	i2u694_41
 15668   0000B8  EF60  F000         	goto	i2u694_40
 15669   0000BC                     i2u694_41:
 15670   0000BC  EF66  F000         	goto	i2l6268
 15671   0000C0                     i2u694_40:
 15672   0000C0                     
 15673                           ; BSR set to: 1
 15674                           ;interrupt.c: 27:         GAMEtime += 1;
 15675   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15676   0000C2                     
 15677                           ; BSR set to: 1
 15678                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15679   0000C2  0E0B               	movlw	11
 15680   0000C4  6ECF               	movwf	207,c	;volatile
 15681   0000C6  0EDC               	movlw	220
 15682   0000C8  6ECE               	movwf	206,c	;volatile
 15683   0000CA                     
 15684                           ; BSR set to: 1
 15685                           ;interrupt.c: 30:         TMR1IF = 0;
 15686   0000CA  909E               	bcf	3998,0,c	;volatile
 15687   0000CC                     i2l6268:
 15688                           
 15689                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15690   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15691   0000CE  EF6B  F000         	goto	i2u695_41
 15692   0000D2  EF6D  F000         	goto	i2u695_40
 15693   0000D6                     i2u695_41:
 15694   0000D6  EFA1  F000         	goto	i2l423
 15695   0000DA                     i2u695_40:
 15696   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15697   0000DC  EF72  F000         	goto	i2u696_41
 15698   0000E0  EF74  F000         	goto	i2u696_40
 15699   0000E4                     i2u696_41:
 15700   0000E4  EFA1  F000         	goto	i2l423
 15701   0000E8                     i2u696_40:
 15702   0000E8  0101               	movlb	1	; () banked
 15703   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15704   0000EC  B4D8               	btfsc	status,2,c
 15705   0000EE  EF7B  F000         	goto	i2u697_41
 15706   0000F2  EF7D  F000         	goto	i2u697_40
 15707   0000F6                     i2u697_41:
 15708   0000F6  EFA1  F000         	goto	i2l423
 15709   0000FA                     i2u697_40:
 15710   0000FA                     
 15711                           ; BSR set to: 1
 15712                           ;interrupt.c: 34:         char temp = RCREG1;
 15713   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15714   0000FE                     
 15715                           ; BSR set to: 1
 15716                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15717   0000FE  0E0A               	movlw	10
 15718   000100  1805               	xorwf	ISR@temp^0,w,c
 15719   000102  B4D8               	btfsc	status,2,c
 15720   000104  EF86  F000         	goto	i2u698_41
 15721   000108  EF88  F000         	goto	i2u698_40
 15722   00010C                     i2u698_41:
 15723   00010C  EF94  F000         	goto	i2l6282
 15724   000110                     i2u698_40:
 15725   000110                     
 15726                           ; BSR set to: 1
 15727                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15728   000110  0E77               	movlw	low _gmail
 15729   000112  2521               	addwf	ISR@i& (0+255),w,b
 15730   000114  6ED9               	movwf	fsr2l,c
 15731   000116  0E01               	movlw	high _gmail
 15732   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15733   00011A  6EDA               	movwf	fsr2h,c
 15734   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15735   000120                     
 15736                           ; BSR set to: 1
 15737                           ;interrupt.c: 39:             i++;
 15738   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15739   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15740                           
 15741                           ;interrupt.c: 40:         } else {
 15742   000124  EFA1  F000         	goto	i2l423
 15743   000128                     i2l6282:
 15744                           
 15745                           ; BSR set to: 1
 15746                           ;interrupt.c: 41:             gmail.full = 1;
 15747   000128  0E01               	movlw	1
 15748   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15749   00012C                     
 15750                           ; BSR set to: 1
 15751                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15752   00012C  0E77               	movlw	low _gmail
 15753   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15754   000130  6ED9               	movwf	fsr2l,c
 15755   000132  0E01               	movlw	high _gmail
 15756   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15757   000136  6EDA               	movwf	fsr2h,c
 15758   000138  6ADF               	clrf	indf2,c
 15759   00013A                     
 15760                           ; BSR set to: 1
 15761                           ;interrupt.c: 43:             i = 0;
 15762   00013A  0E00               	movlw	0
 15763   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15764   00013E  0E00               	movlw	0
 15765   000140  6F21               	movwf	ISR@i& (0+255),b
 15766   000142                     i2l423:
 15767   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15768   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15769   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15770   00014C  0011               	retfie		f
 15771   00014E                     __end_of_ISR:
 15772                           	callstack 0
 15773                           
 15774                           	psect	rparam
 15775   000000                     
 15776                           	psect	temp
 15777   00005A                     btemp:
 15778                           	callstack 0
 15779   00005A                     	ds	1
 15780   000000                     int$flags	set	btemp
 15781   000000                     wtemp8	set	btemp+1
 15782   000000                     ttemp5	set	btemp+1
 15783   000000                     ttemp6	set	btemp+4
 15784   000000                     ttemp7	set	btemp+8
 15785                           
 15786                           	psect	config
 15787                           
 15788                           ; Padding undefined space
 15789   300000                     	org	3145728
 15790   300000  FF                 	db	255
 15791                           
 15792                           ;Config register CONFIG1H @ 0x300001
 15793                           ;	Oscillator Selection bits
 15794                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15795                           ;	4X PLL Enable
 15796                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15797                           ;	Primary clock enable bit
 15798                           ;	PRICLKEN = 0x1, unprogrammed default
 15799                           ;	Fail-Safe Clock Monitor Enable bit
 15800                           ;	FCMEN = 0x0, unprogrammed default
 15801                           ;	Internal/External Oscillator Switchover bit
 15802                           ;	IESO = 0x0, unprogrammed default
 15803   300001                     	org	3145729
 15804   300001  33                 	db	51
 15805                           
 15806                           ;Config register CONFIG2L @ 0x300002
 15807                           ;	unspecified, using default values
 15808                           ;	Power-up Timer Enable bit
 15809                           ;	PWRTEN = 0x1, unprogrammed default
 15810                           ;	Brown-out Reset Enable bits
 15811                           ;	BOREN = 0x3, unprogrammed default
 15812                           ;	Brown Out Reset Voltage bits
 15813                           ;	BORV = 0x3, unprogrammed default
 15814   300002                     	org	3145730
 15815   300002  1F                 	db	31
 15816                           
 15817                           ;Config register CONFIG2H @ 0x300003
 15818                           ;	Watchdog Timer Enable bits
 15819                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15820                           ;	Watchdog Timer Postscale Select bits
 15821                           ;	WDTPS = 0xF, unprogrammed default
 15822   300003                     	org	3145731
 15823   300003  3C                 	db	60
 15824                           tosu	equ	0xFFF
 15825                           tosh	equ	0xFFE
 15826                           tosl	equ	0xFFD
 15827                           stkptr	equ	0xFFC
 15828                           pclatu	equ	0xFFB
 15829                           pclath	equ	0xFFA
 15830                           pcl	equ	0xFF9
 15831                           tblptru	equ	0xFF8
 15832                           tblptrh	equ	0xFF7
 15833                           tblptrl	equ	0xFF6
 15834                           tablat	equ	0xFF5
 15835                           prodh	equ	0xFF4
 15836                           prodl	equ	0xFF3
 15837                           indf0	equ	0xFEF
 15838                           postinc0	equ	0xFEE
 15839                           postdec0	equ	0xFED
 15840                           preinc0	equ	0xFEC
 15841                           plusw0	equ	0xFEB
 15842                           fsr0h	equ	0xFEA
 15843                           fsr0l	equ	0xFE9
 15844                           wreg	equ	0xFE8
 15845                           indf1	equ	0xFE7
 15846                           postinc1	equ	0xFE6
 15847                           postdec1	equ	0xFE5
 15848                           preinc1	equ	0xFE4
 15849                           plusw1	equ	0xFE3
 15850                           fsr1h	equ	0xFE2
 15851                           fsr1l	equ	0xFE1
 15852                           bsr	equ	0xFE0
 15853                           indf2	equ	0xFDF
 15854                           postinc2	equ	0xFDE
 15855                           postdec2	equ	0xFDD
 15856                           preinc2	equ	0xFDC
 15857                           plusw2	equ	0xFDB
 15858                           fsr2h	equ	0xFDA
 15859                           fsr2l	equ	0xFD9
 15860                           status	equ	0xFD8

Data Sizes:
    Strings     392
    Constant    64
    Data        40
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[17]), STR_17(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 
		 -> STR_35(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), STR_6(CODE[17]), 
		 -> STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4528	PTR unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), 
		 -> STR_23(CODE[4]), STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), 
		 -> STR_23(CODE[4]), STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_19(CODE[5]), STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), 
		 -> STR_23(CODE[4]), STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_30(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3929$buffer	PTR unsigned char  size(2) Largest target is 0

    S3929$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), STR_31(CODE[19]), 
		 -> STR_32(CODE[17]), STR_33(CODE[19]), STR_34(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_19(CODE[5]), 
		 -> STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), STR_23(CODE[4]), 
		 -> STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), STR_42(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_19(CODE[5]), 
		 -> STR_20(CODE[5]), STR_21(CODE[4]), STR_22(CODE[4]), STR_23(CODE[4]), 
		 -> STR_24(CODE[5]), STR_25(CODE[6]), STR_26(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_36(CODE[4]), STR_39(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[5]), STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), 
		 -> STR_30(CODE[5]), STR_31(CODE[19]), STR_32(CODE[17]), STR_33(CODE[19]), 
		 -> STR_34(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[5]), STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), 
		 -> STR_30(CODE[5]), STR_31(CODE[19]), STR_32(CODE[17]), STR_33(CODE[19]), 
		 -> STR_34(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_18(CODE[5]), STR_27(CODE[6]), STR_28(CODE[5]), STR_29(CODE[19]), 
		 -> STR_30(CODE[5]), STR_31(CODE[19]), STR_32(CODE[17]), STR_33(CODE[19]), 
		 -> STR_34(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  438761
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             52    52      0   69631
                                            135 BANK0      2     2      0
                                              0 BANK1     50    50      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   79867
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   67780
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2476
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      2A       9       16.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      54        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 21:53:20 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FE63                          _C1 FE5F                          _C2 FE5B  
                        _C3 FE57                          l61 2B24                          l63 2B16  
                        l56 2AD2                          l66 2D04                          l58 2AC4  
                        _S1 FE43                          l68 2B58                          _S2 FE3F  
                        _S3 FE3B                          _S4 FE37                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 4696                         l140 4974  
                       l132 48D6                         l125 46A4                         l126 4726  
                       l134 48E4                         l151 5240                         l143 4982  
                       l303 426E                         l231 2F7C                         l152 5242  
                       l136 4924                         l129 4742                         l161 5166  
                       l146 5224                         l250 5084                         l242 3018  
                       l234 2F7E                         l155 5134                         l139 4972  
                       l251 5088                         l149 5232                         l157 5142  
                       l245 5062                         l158 5158                         l270 5266  
                       l350 52BE                         l247 5070                         l248 5076  
                       l273 5278                         l353 52B0                         l521 4046  
                       l362 5286                         l522 4144                         l356 52A2  
                       l372 3FEE                         l365 52CC                         l525 40FE  
                       l710 521C                         l462 365E                         l534 4132  
                       l526 40C0                         l359 5294                         l519 4038  
                       l472 364A                         l464 349C                         l721 4D64  
                       l377 4000                         l722 4D74                         l378 4016  
                       l538 415C                         l475 3670                         l467 353C  
                       l707 52CE                         l476 3672                         l581 3E3E  
                       l662 226A                         l680 2082                         l664 1F84  
                       l592 3E98                         l681 2092                         l593 3EAA  
                       l682 20A2                         l691 227C                         l675 2042  
                       l579 3E86                         l692 2290                         l684 2174  
                       l676 2222                         l941 48D0                         l677 2052  
                       l589 3E72                         l678 2062                         l679 2072  
                       l688 2256                         l954 4A32                         l980 447A  
                       l975 4434                         l984 50C2                         l969 4B8A  
                       _GIE 7F97                         _PR2 0FBB                         _ISR 0008  
                       _abs 519C                         _pad 4B8C                ___awmod@sign 000B  
                       prod 0FF3                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0021                ___flmul@bexp 0026  
              ___flmul@sign 0020                ___flmul@temp 002B                ___flmul@prod 0027  
                      ?_ISR 0001                        ISR@i 0121                ___fltol@exp1 0053  
                      l1007 4376                        l1201 4C94                        l1211 4DD0  
                      ?_abs 000C                        l1116 4E34                        l1303 2892  
                      l1240 1756                        l1208 4C9C                        l1305 290A  
                      l1306 28F8                        l1218 4DD8                        l1331 1D2E  
                      l1324 1B38                        l1421 4C06                        l1341 1E5E  
                      l1333 1DA6                        l1501 3ACA                        l1430 3C40  
                      l1334 1D94                        l1238 17A2                        l1423 4C28  
                      l1255 18BC                        l1247 1A72                        l1239 1790  
                      l1328 1E9C                        l1264 198C                        l1280 4FC0  
                      l1441 3D3E                        l1265 197A                        l1513 3BC2  
                      l1418 4BC4                        l1611 51B6                        l1427 3BF2  
                      l1292 29EC                        l1620 3460                        l1452 0B4A  
                      l1508 3B7A                        l1372 3960                        l1429 3BFA  
                      l1533 4AE0                        l1525 4668                        l1517 4594  
                      l1365 38C8                        l1614 51CE                        l1294 284C  
                      l1606 4578                        l1623 33A4                        l1455 04E4  
                      l1519 459C                        l1640 4F2E                        l1560 10A6  
                      l1368 3A24                        l1297 2810                        l1457 032A  
                      l1529 4AD8                        l1634 4E8A                        l1379 39BC  
                      l1652 480C                        l1660 504A                        l1388 5006  
                      l1485 092E                        l1728 3870                        l1744 24B4  
                      l1745 2652                        l1762 519A                        l1667 5262  
                      l1675 4D0A                        l1596 4F78                        l1757 324A  
                      l1694 15B0                        l1774 5130                        l1768 50FA  
                      l7000 4DC4                        l7010 4BBC                        l7002 4DCA  
                      l7020 519C                        l6300 4790                        l7012 4BD0  
                      l7004 4B8C                        l7100 3BE6                        l7022 51AA  
                      l6302 47C6                        l7014 4BE4                        l7006 4B9A  
                      l7110 3C34                        l7102 3C02                        l6310 15CE  
                      l7030 4502                        ?_pad 0017                        l7016 4BE8  
                      l7008 4BAE                        l7120 3C8A                        l7112 3C3C  
                      l7104 3C12                        l6400 1782                        l6320 1602  
                      l6312 15D0                        l7032 450E                        l7024 447C  
                      l8000 3F0E                        l7018 4C14                        l7130 3CDE  
                      l7122 3C90                        l7114 3C48                        l7106 3C18  
                      l6402 1784                        l6330 1634                        l6314 15E0  
                      l6322 160A                        l6306 15B2                        l7042 4570  
                      l7026 449C                        l7050 4E36                        l7210 0340  
                      l7202 02DA                        l8010 3F92                        l8002 3F30  
                      l7132 3CF8                        l7124 3C96                        l7116 3C52  
                      l7108 3C28                        l6500 1A52                        l6420 180C  
                      l6412 17D4                        l6404 178E                        l6340 166A  
                      l6332 163A                        l6324 161A                        l6316 15F0  
                      l6308 15C0                        l7028 44DA                        l7036 451A  
                      l7060 326C                        l7052 4E44                        l7300 088C  
                      l7220 0436                        l7212 0374                        l7204 02F4  
                      l8020 4010                        l8012 3F96                        l8100 4070  
                      l6510 5014                        l7134 3D08                        l7118 3C58  
                      l7126 3CB2                        l6502 1A60                        l6422 1810  
                      l6414 17E4                        l6406 17B0                        l6430 1830  
                      l6350 16A6                        l6342 167A                        l6334 1648  
                      l6326 1620                        l6318 1600                        l7038 452C  
                      l7070 3358                        l7062 32C4                        l7054 4E58  
                      l7046 50C4                        l7310 095E                        l7302 0906  
                      l7230 04EC                        l7222 046A                        l7214 03B2  
                      l7150 017A                        l7142 0152                        l8014 3FB2  
                      l8110 40CE                        l8102 408C                        l8030 3D52  
                      l6512 5026                        l7136 3D0E                        l7128 3CCC  
                      l6600 2838                        l6504 1A62                        l6432 1856  
                      l6440 18AC                        l6424 181E                        l6416 17F2  
                      l6408 17C0                        l6360 16C4                        l6352 16B4  
                      l6344 167C                        l6336 164A                        l6328 1632  
                      l7080 3440                        l7072 3394                        l7064 32D8  
                      l7048 50CC                        l7320 0984                        l7312 0962  
                      l7304 0926                        l7240 051E                        l7232 04FA  
                      l7224 0472                        l7216 03E4                        l7208 033A  
                      l7160 01D0                        l7152 019E                        l7144 0158  
                      l7400 3BA4                        l8200 2D76                        l8016 3FCA  
                      l8008 3F38                        l8120 410C                        l8112 40E0  
                      l8104 409A                        l8040 3D62                        l8032 3D54  
                      l8024 3D40                        l6290 5274                        l6514 502A  
                      l7138 3D1E                        l6610 2878                        l6602 283A  
                      l6530 2680                        l6522 2654                        l6450 1900  
                      l6442 18D2                        l6434 188A                        l6426 1820  
                      l6418 1800                        l6370 16D8                        l6362 16C8  
                      l6354 16B8                        l6338 165A                        l6346 1684  
                      l7082 3450                        l7066 32E6                        l7074 33C8  
                      l7058 324C                        l7090 4F00                        l7330 09B8  
                      l7322 098A                        l7314 0968                        l7306 0940  
                      l7242 0530                        l7250 0570                        l7234 0506  
                      l7218 0422                        l7170 0220                        l7162 01DC  
                      l7154 01A8                        l7146 0168                        l7410 45B6  
                      l7402 457A                        l8210 2E5E                        l8202 2D92  
                      l8018 3FEA                        l8130 4158                        l8122 4124  
                      l8114 40E8                        l8106 40B2                        l8050 3DCA  
                      l8042 3D6E                        l8034 3D56                        l8026 3D4C  
                      l6292 4744                        l6508 5008                        l6620 28B4  
                      l6612 2882                        l6604 284A                        l6540 26BA  
                      l6532 2690                        l6524 2660                        l6700 1B6C  
                      l6460 192A                        l6452 190E                        l6444 18E2  
                      l6436 188C                        l6428 182A                        l6380 16EC  
                      l6372 16DC                        l6364 16CC                        l6356 16BC  
                      l6348 1694                        l7076 3404                        l7092 4F04  
                      l7332 09BE                        l7316 0970                        l7308 094E  
                      l7324 0990                        l7340 0A56                        l7260 0658  
                      l7252 0578                        l7244 053E                        l7236 0510  
                      l7228 04B2                        l7180 0254                        l7172 0224  
                      l7164 01E4                        l7156 01B0                        l7148 0176  
                      l6516 51F8                        l7412 45BC                        l7420 460A  
                      l7404 4588                        l7500 0B94                        l8140 347A  
                      l8220 2F5E                        l8212 2EC6                        l8204 2DA2  
                      l8300 1FE0                        l8132 415A                        l8116 40F8  
                      l8060 3E06                        l8052 3DCE                        l8044 3D80  
                      l8036 3D5E                        l8028 3D50                        l6294 4756  
                      l6630 2926                        l6622 28C2                        l6614 2890  
                      l6606 285C                        l6550 26E6                        l6542 26C0  
                      l6534 26A0                        l6526 266E                        l6710 1BBC  
                      l6702 1B78                        l6470 195C                        l6462 193A  
                      l6454 1910                        l6438 189C                        l6390 173E  
                      l6382 16F0                        l6374 16E0                        l6366 16D0  
                      l6358 16C0                        l7078 3418                        l7094 4F10  
                      l7086 4EE0                        l7350 0AD6                        l7342 0A74  
                      l7334 0A16                        l7326 09A2                        l7318 0980  
                      l7270 0716                        l7262 068C                        l7254 0588  
                      l7246 0556                        l7238 0518                        l7190 02B0  
                      l7174 022A                        l7158 01C0                        l7166 01E8  
                      l6518 5214                        l7430 4A34                        l7422 461C  
                      l7414 45E2                        l7406 45A4                        l7502 0B96  
                      l7510 0BCC                        l8150 34AA                        l8142 347C  
                      l8230 2FC2                        l8222 2F8C                        l8214 2EEA  
                      l8206 2DF2                        l8302 1FE8                        l8126 4140  
                      l8118 40FE                        l8070 3E22                        l8054 3DE4  
                      l8046 3D94                        l8038 3D60                        l6800 4820  
                      l6288 5266                        l6296 4768                        l6640 2992  
                      l6632 2934                        l6624 28F0                        l6608 2872  
                      l6616 28A2                        l6560 2720                        l6552 26F6  
                      l6544 26C6                        l6536 26A2                        l6528 2670  
                      l6720 1BFE                        l6712 1BC8                        l6704 1B82  
                      l6480 19B6                        l6472 1972                        l6456 191E  
                      l6448 18F6                        l6464 193C                        l6392 174E  
                      l6376 16E4                        l6368 16D4                        l6384 16F4  
                      l7088 4EF4                        l7096 4F14                        l7360 0B2A  
                      l7352 0AE4                        l7344 0A90                        l7336 0A4A  
                      l7328 09B4                        l7280 07B2                        l7272 072C  
                      l7256 059C                        l7264 0692                        l7248 0568  
                      l7192 02B6                        l7176 0232                        l7168 020E  
                      l7184 0274                        l7440 4AA6                        l7432 4A3C  
                      l7424 462E                        l7416 45E8                        l7408 45AC  
                      l7600 0F2E                        l7520 0C2C                        l7512 0BDC  
                      l7504 0BA6                        l8160 3568                        l8152 34C8  
                      l8144 3488                        l8136 3462                        l8240 2FF0  
                      l8232 2FC8                        l8224 2FA0                        l8216 2F52  
                      l8208 2E04                        l8320 20E4                        l8304 1FF0  
                      l8312 2008                        l8128 4154                        l8080 3E9E  
                      l8072 3E4C                        l8056 3DEE                        l8048 3DA2  
                      l8400 2A30                        l6810 4846                        l6802 4828  
                      l6298 4772                        l7098 3BC4                        l6650 29E0  
                      l6642 29AC                        l6634 295E                        l6618 28B0  
                      l6562 2736                        l6554 2706                        l6546 26D4  
                      l6538 26AA                        l6730 1C60                        l6722 1C0A  
                      l6714 1BD4                        l6706 1B98                        l6490 1A32  
                      l6482 19F0                        l6458 1926                        l6466 194A  
                      l6394 1764                        l6386 16F8                        l6378 16E8  
                      l7354 0AFC                        l7346 0A98                        l7338 0A52  
                      l7282 0808                        l7290 085A                        l7274 075E  
                      l7266 06B0                        l7258 0600                        l7194 02BE  
                      l7186 029A                        l7178 024A                        l7434 4A5E  
                      l7442 4AB2                        l7370 3A54                        l7426 4648  
                      l7418 45EE                        l7602 0F3C                        l7530 0C76  
                      l7522 0C38                        l7514 0BF0                        l7450 38D8  
                      l8170 363C                        l8162 35D2                        l8154 3532  
                      l8146 3492                        l8138 346A                        l8242 2FF4  
                      l8234 2FD6                        l8226 2FAE                        l8330 2162  
                      l8322 2114                        l8306 1FF8                        l8314 2030  
                      l8250 1EDC                        l8090 4018                        l8082 3EA4  
                      l8074 3E64                        l8066 3E10                        l8058 3E00  
                      l8410 2A70                        l8402 2A36                        l6820 487E  
                      l6812 484E                        l6804 482C                        l6652 29E2  
                      l6644 29C8                        l6628 291A                        l6636 2962  
                      l6580 278A                        l6564 2746                        l6572 2766  
                      l6556 2708                        l6548 26D6                        l6900 43F4  
                      l6740 1CF6                        l6732 1C6C                        l6724 1C1A  
                      l6716 1BE2                        l6708 1BA4                        l6660 1A74  
                      l6492 1A36                        l6476 199C                        l6484 19F2  
                      l6468 194E                        l6396 1770                        l6388 1722  
                      l7356 0B0C                        l7348 0AA6                        l7292 086A  
                      l7284 080E                        l7276 076E                        l7268 06E4  
                      l7188 02AC                        l7436 4A6A                        l7372 3A58  
                      l7364 3A26                        l7604 0F4E                        l7612 0F66  
                      l7540 0CC8                        l7532 0C7E                        l7524 0C4C  
                      l7516 0BFE                        l7508 0BAE                        l7460 3916  
                      l7452 38EE                        l7444 3874                        l8164 3608  
                      l8156 353A                        l8148 349A                        l7700 2456  
                      l8236 2FDC                        l8228 2FB4                        l8244 3006  
                      l8180 2D4E                        l8340 21BE                        l8332 2176  
                      l8324 2118                        l8316 20B2                        l8308 2000  
                      l8260 1EF4                        l8252 1EDE                        l8092 401A  
                      l8084 3EA6                        l8068 3E1E                        l8420 2AE0  
                      l8412 2A80                        l8404 2A3A                        l6830 48AA  
                      l6822 4884                        l6814 4860                        l6806 483A  
                      l6646 29CC                        l6638 297C                        l6590 27DC  
                      l6582 27A4                        l6574 2776                        l6566 274E  
                      l6558 2710                        l6910 4478                        l6902 4402  
                      l6750 1D4C                        l6742 1D14                        l6734 1C88  
                      l6726 1C34                        l6718 1BEE                        l6670 1AB0  
                      l6662 1A80                        l6494 1A44                        l6486 1A02  
                      l6478 19A8                        l6398 1774                        l7358 0B22  
                      l7294 0872                        l7286 0842                        l7278 077E  
                      l7438 4A86                        l7390 3B5C                        l7382 3AEC  
                      l7374 3A96                        l7366 3A40                        l7622 0FF4  
                      l7606 0F56                        l7614 0F84                        l7550 0D36  
                      l7542 0CE8                        l7526 0C5C                        l7518 0C08  
                      l7470 399E                        l7462 3948                        l7446 3884  
                      l8174 3658                        l8166 3616                        l8158 354A  
                      l7710 24E4                        l7702 2466                        l8238 2FEA  
                      l8190 2D68                        l8182 2D50                        l8334 219C  
                      l8326 213E                        l8318 20B6                        l8270 1F08  
                      l8262 1EF6                        l8254 1EEA                        l8246 1E9E  
                      l8094 4034                        l8086 3EA8                        l8078 3E80  
                      l8422 2AF8                        l8414 2A8E                        l8406 2A48  
                      l6824 489A                        l6816 4868                        l6832 48B0  
                      l6808 4842                        l6840 4984                        l6648 29DA  
                      l6592 27EC                        l6584 27B4                        l6576 2776  
                      l6568 2752                        l6904 4414                        l6760 1DB6  
                      l6752 1D50                        l6744 1D1E                        l6736 1CB2  
                      l6728 1C44                        l6680 1AE2                        l6672 1AC0  
                      l6664 1A8E                        l6496 1A4A                        l6488 1A12  
                      l7296 0878                        l7288 0856                        l7384 3B00  
                      l7392 3B60                        l7376 3AA4                        l7368 3A48  
                      l7632 1056                        l7624 100A                        l7616 0FA4  
                      l7608 0F5E                        l7560 0DA4                        l7552 0D50  
                      l7544 0D04                        l7528 0C6E                        l7536 0C86  
                      l7480 39F4                        l7472 39AC                        l7464 394A  
                      l7456 3902                        l7448 3892                        l8168 3624  
                      l7720 263E                        l7712 2550                        l7704 2498  
                      l8192 2D6E                        l8184 2D52                        l8176 2D32  
                      l8352 2264                        l8336 21AA                        l8328 215C  
                      l8344 21DC                        l8280 1F12                        l8272 1F0A  
                      l8264 1EF8                        l8256 1EEE                        l8248 1ECC  
                      l8096 4036                        l8440 2BB0                        l8432 2B6A  
                      l8424 2B06                        l8416 2AA6                        l8408 2A56  
                      l8360 29EE                        l7730 48D4                        l6834 48C0  
                      l6826 48A2                        l6818 4870                        l6850 49B0  
                      l6842 4988                        l6594 2800                        l6586 27C4  
                      l6906 4422                        l6770 1E18                        l6762 1DC2  
                      l6754 1D5E                        l6746 1D2C                        l6738 1CE8  
                      l6690 1B22                        l6682 1AF0                        l6674 1AC6  
                      l6666 1A90                        l6914 508A                        l6498 1A4C  
                      l6930 42C6                        l6922 4270                        l7298 0880  
                      l7386 3B04                        l7378 3AC2                        l7626 1028  
                      l7618 0FCC                        l7634 106E                        l7538 0CAC  
                      l7490 0B4C                        l7482 3A04                        l7474 39CA  
                      l7466 3956                        l7458 390A                        l7714 2576  
                      l7802 1258                        l8194 2D70                        l8186 2D54  
                      l8178 2D46                        l8354 228C                        l8346 2230  
                      l8338 21B8                        l8290 1F7A                        l8282 1F1E  
                      l8274 1F0E                        l8266 1EFE                        l8258 1EF2  
                      l8098 4064                        l8450 2BDC                        l8434 2B86  
                      l8426 2B32                        l8418 2AB4                        l8370 2A0E  
                      l8362 2A06                        l7652 5220                        l7740 491E  
                      l7732 48E6                        l6836 48C8                        l6828 48A4  
                      l6860 49E8                        l6852 49B8                        l6844 4996  
                      l6596 280E                        l6588 27D4                        l6908 4472  
                      l6780 1E80                        l6772 1E2C                        l6764 1DD0  
                      l6756 1D8C                        l6748 1D3E                        l6692 1B28  
                      l6684 1AF2                        l6676 1AD6                        l6668 1AA0  
                      l6916 50A2                        l6932 42C8                        l6924 4288  
                      l7396 3B8C                        l7388 3B26                        l7580 0E4A  
                      l7564 0DC0                        l7556 0D68                        l7548 0D20  
                      l7492 0B70                        l7484 3A12                        l7476 39CC  
                      l7468 3992                        l7644 5168                        l7716 25CE  
                      l7708 24C0                        l7804 1268                        l7812 1324  
                      l8196 2D72                        l8188 2D56                        l7660 4D3A  
                      l8348 2248                        l8292 1F82                        l8284 1F44  
                      l8276 1F12                        l8268 1F00                        l7900 50FC  
                      l8452 2BEA                        l8444 2BB8                        l8436 2B8A  
                      l8428 2B4A                        l8380 2A1A                        l8372 2A12  
                      l8364 2A08                        l7750 4960                        l7742 492A  
                      l7734 48F2                        l6870 4A22                        l6862 49FE  
                      l6854 49CA                        l6846 499E                        l6598 281A  
                      l6782 1E82                        l6774 1E46                        l6766 1DFA  
                      l6694 1B48                        l6686 1B02                        l6678 1ADC  
                      l6918 50B2                        l6790 4F7A                        l6934 42D8  
                      l7398 3BA0                        l7590 0EE4                        l7582 0E56  
                      l7574 0E0C                        l7566 0DD6                        l7558 0D88  
                      l7494 0B7C                        l7638 1080                        l7670 4F6E  
                      l7486 3A14                        l7478 39D0                        l7646 5188  
                      l7718 2626                        l7814 1342                        l7806 12B4  
                      l8198 2D74                        l7662 4D44                        l7654 4D0C  
                      l7910 4C9E                        l8294 1F92                        l8286 1F62  
                      l8278 1F12                        l8358 52CE                        l7902 5108  
                      l8470 2C7E                        l8462 2C16                        l8446 2BD4  
                      l8438 2B94                        l8390 2A24                        l8382 2A1C  
                      l8374 2A14                        l8366 2A0A                        l7752 4962  
                      l7736 4902                        l7728 48D4                        l6872 4A2A  
                      l6864 4A06                        l6856 49D2                        l6848 49A2  
                      l6880 4B20                        l6776 1E62                        l6784 1E88  
                      l6768 1DFE                        l6696 1B58                        l6688 1B12  
                      l6792 4F8C                        l6960 4356                        l6944 4302  
                      l6936 42DC                        l6928 429C                        l7584 0E5E  
                      l7568 0DF4                        l7576 0E24                        l7496 0B88  
                      l7664 4F30                        l7760 504E                        l7648 518A  
                      l7816 1360                        l7832 13E0                        l7808 12FC  
                      l7920 4DF0                        l7656 4D1C                        l7912 4CDC  
                      l8296 1FB0                        l8288 1F70                        l7904 510C  
                      l8472 2C98                        l8464 2C32                        l8456 2BF2  
                      l8392 2A26                        l8384 2A1E                        l8376 2A16  
                      l8368 2A0C                        l7754 5132                        l7738 490C  
                      l6866 4A0C                        l6858 49DA                        l6882 4B4E  
                      l6786 1E8C                        l6778 1E72                        l6962 4366  
                      l6954 432A                        l6946 430C                        l6938 42EA  
                      l6970 4C44                        l7586 0E80                        l7594 0EF6  
                      l7578 0E28                        l7498 0B8C                        l7666 4F3C  
                      l7762 505C                        l7690 22E8                        l7682 2292  
                      l7674 301A                        l7850 14BE                        l7834 13F0  
                      l7818 1370                        l7826 13A8                        l7842 1484  
                      l7770 10CE                        l7930 4E22                        l7922 4DF8  
                      l7658 4D2A                        l8298 1FCE                        l7906 5124  
                      l8490 2D26                        l8466 2C4A                        l8458 2C0E  
                      l8394 2A28                        l8386 2A20                        l8378 2A18  
                      l7756 5144                        l7748 492E                        l6796 480E  
                      l6868 4A12                        l6884 4B5E                        l6876 4AE2  
                      l6892 4378                        l6956 4336                        l6948 4316  
                      l6980 4C7E                        l6972 4C4C                        l7596 0F06  
                      l7588 0EB2                        l7668 4F52                        l7764 505E  
                      l7692 230C                        l7684 22B2                        l7852 14E2  
                      l7844 149A                        l7836 1428                        l7772 10D0  
                      l7932 4E26                        l7924 4DFC                        l7916 4DDC  
                      l8476 2CA0                        l8468 2C70                        l8484 2CC4  
                      l8396 2A2A                        l8388 2A22                        l7950 4694  
                      l7942 466A                        l7758 5156                        l6798 4812  
                      l6886 4B82                        l6878 4B10                        l6894 43A6  
                      l6958 4346                        l6982 4C86                        l6974 4C54  
                      l6966 4C2A                        l6990 4D88                        l7870 5244  
                      l7678 3674                        l7694 2378                        l7686 22C8  
                      l7862 1556                        l7854 1506                        l7846 14AA  
                      l7838 145C                        l7790 11C0                        l7774 10EE  
                      l7782 1140                        l7766 10A8                        l7934 4E28  
                      l7926 4DFE                        l7918 4DE0                        l8486 2D06  
                      l8478 2CBC                        l8398 2A2C                        l7952 46A6  
                      l7944 4678                        l6888 4B88                        l6896 43B6  
                      l6984 4C88                        l6976 4C62                        l6968 4C32  
                      l6992 4D90                        l7880 4FD8                        l7960 4166  
                      l7872 5248                        l7696 239E                        l7688 22CA  
                      l7784 115E                        l7776 1104                        l7768 10B8  
                      l7936 4E2C                        l7928 4E0C                        l8488 2D18  
                      l7954 4724                        l7946 4684                        l6898 43E4  
                      l6986 4C8E                        l6978 4C68                        l6994 4D98  
                      l7882 4FE0                        l7962 417C                        l7698 23F6  
                      l7858 152E                        l7786 117C                        l7778 1118  
                      l7938 4E32                        l7890 52A6                        l7956 4734  
                      l7948 4686                        l6996 4DA6                        l6988 4D76  
                      l7884 4FF6                        l7876 4FC2                        l7980 426A  
                      l7964 418E                        l7972 41AC                        l7868 1592  
                      l7788 118C                        l7796 11FC                        l7892 5298  
                      l6998 4DBC                        l7878 4FD0                        l7966 4194  
                      l7974 41CC                        l7958 4162                        l7798 1230  
                      l7894 528A                        l7990 3EE0                        l7976 424E  
                      l7968 41A6                        l7888 52B4                        l7896 527C  
                      l7992 3EE2                        l7984 3EAC                        l7978 425C  
                      l7898 52C2                        l7994 3EEA                        l7986 3ED6  
                      l7996 3EF4                        l7988 3EDE                        l7998 3EFC  
                      STR_1 FEF3                        STR_2 FF26                        STR_3 FF15  
                      STR_4 FE79                        STR_5 FEE2                        STR_6 FF8C  
                      STR_7 FF48                        STR_8 FE79                        STR_9 FF7B  
                      u7000 4756                        u7001 4752                        u7010 4768  
                      u7011 4764                        _PEIE 7F96                        u7020 4790  
                      u7100 166A                        u7021 478C                        u7101 1666  
                      u7030 47C6                        u7110 16A6                        u7031 47C2  
                      u7111 16A2                        u8000 4B82                        u7200 17C0  
                      u7120 16B4                        u7040 15CE                        u8001 4B7E  
                      u7201 17BC                        u7121 16B0                        u7041 15CA  
                      u8010 43A6                        u7210 17F2                        u7130 1722  
                      u7050 15E0                        u8011 43A2                        u7211 17EE  
                      u7131 171E                        u7051 15DC                        u8020 43E4  
                      u7300 193A                        u7220 1800                        u7140 173A  
                      u7060 15F0                        u8100 42FE                        u8021 43E0  
                      u7301 1936                        u7221 17FC                        u7141 1734  
                      u7061 15EC                        u8101 42FA                        u8030 4402  
                      u7310 194A                        u7230 181E                        u7150 173C  
                      u7070 1632                        u8110 4326                        u8031 43FE  
                      u7311 1946                        u7231 181A                        u7071 162E  
                      u8111 4322                        u8200 4B9A                        u8040 4422  
                      u7400 1A32                        u7320 195C                        u7240 1856  
                      u7160 1764                        u7080 1648                        u8120 4346  
                      u9000 4648                        u8201 4B96                        u8041 441E  
                      u7401 1A2E                        u7321 1958                        u7241 1852  
                      u7161 1760                        u7081 1644                        u8121 4342  
                      u9001 4644                        u8210 4BBC                        u8050 4472  
                      u7410 1A44                        u7330 1972                        u7250 189C  
                      u7170 1782                        u7090 165A                        u8130 4356  
                      u9010 4A5E                        u8211 4BB8                        u8051 446E  
                      u7411 1A40                        u7331 196E                        u7251 1898  
                      u7171 177E                        u7091 1656                        u8131 4352  
                      u9011 4A5A                        u8220 4C06                        u7500 2736  
                      u8060 50A2                        u7420 1A60                        u7340 1988  
                      u7260 18D2                        u7180 17A2                        u8300 4566  
                      u9020 4AD8                        u8140 4C44                        u9100 39CA  
                      u8221 4C02                        u7501 2732                        u8061 509E  
                      u7421 1A5C                        u7341 1984                        u7261 18CE  
                      u7181 179E                        u8301 4560                        u9021 4AD4  
                      u8141 4C40                        u9101 39C6                        u7430 504A  
                      u8230 4C14                        u7510 2776                        u7350 199C  
                      u7270 18E2                        u7190 17B0                        u8070 4288  
                      u8310 4568                        u8150 4C62                        u9110 3A04  
                      u9030 3884                        u7431 5046                        u8231 4C10  
                      u7511 2772                        u7351 1998                        u7271 18DE  
                      u7191 17AC                        u8071 4284                        u8151 4C5E  
                      u9111 3A00                        u9031 3880                        u8240 51AA  
                      u7600 28F0                        u7520 27EC                        u7440 266E  
                      u7360 19B6                        u7280 190E                        u8080 42BC  
                      u8400 3394                        u8320 50FA                        u8160 4C7E  
                      u9200 0E4A                        u9120 3A12                        u9040 3892  
                      u8241 51A6                        u7601 28EC                        u7521 27E8  
                      u7441 266A                        u7361 19B2                        u7281 190A  
                      u8401 3390                        u8321 50F6                        u8161 4C7A  
                      u9201 0E46                        u9121 3A0E                        u9041 388E  
                      u7610 2906                        u7530 280E                        u7450 2680  
                      u7370 19F0                        u7290 191E                        u8090 42EA  
                      u8250 44BC                        u8410 33E8                        u8330 4E44  
                      u8170 4D88                        u9210 0E80                        u9130 0B70  
                      u9050 38EE                        u7611 2902                        u7531 280A  
                      u7451 267C                        u7371 19EC                        u7291 191A  
                      u8091 42E6                        u8331 4E40                        u8171 4D84  
                      u9211 0E7C                        u9131 0B6C                        u9051 38EA  
                      u8500 3CCC                        u7620 291A                        u7540 2838  
                      u7460 2690                        u7700 1AF0                        u7380 1A02  
                      u8260 44DA                        u8420 3404                        u8340 3294  
                      u8180 4DA6                        u9220 0EB2                        u9140 0BDC  
                      u9300 4F6E                        u9060 3944                        u8501 3CC8  
                      u7621 2916                        u7541 2834                        u7461 268C  
                      u7701 1AEC                        u7381 19FE                        u8085 42B2  
                      u8261 44D6                        u8421 3400                        u8181 4DA2  
                      u9221 0EAE                        u9141 0BD8                        u9301 4F6A  
                      u9061 3940                        u8510 3CDE                        u7630 2934  
                      u7550 285C                        u7470 26D4                        u7710 1B02  
                      u7390 1A12                        u8270 4502                        u8430 3440  
                      u8350 32C4                        u8190 4DBC                        u9230 0EE4  
                      u9150 0BFE                        u9070 398E                        u9310 22C4  
                      u8511 3CDA                        u7631 2930                        u7551 2858  
                      u7471 26D0                        u7711 1AFE                        u7391 1A0E  
                      u8271 44FE                        u8255 44B2                        u8431 343C  
                      u8415 33DE                        u8351 32C0                        u8191 4DB8  
                      u9231 0EE0                        u9151 0BFA                        u9071 398A  
                      u9311 22BE                        u9400 4972                        u8520 3CF8  
                      u7640 297C                        u7560 2872                        u7480 26E6  
                      u7800 1DA2                        u7720 1B12                        u8280 452C  
                      u8360 32E6                        u8440 4F2E                        u8600 02AC  
                      u9240 0F06                        u9160 0C2C                        u9080 39AC  
                      u9320 22C6                        u9401 496E                        u8521 3CF4  
                      u7641 2978                        u7561 286E                        u7481 26E2  
                      u7801 1D9E                        u7721 1B0E                        u8281 4528  
                      u8361 32E2                        u8345 328A                        u8441 4F2A  
                      u8601 02A8                        u9241 0F02                        u9161 0C28  
                      u9081 39A8                        u9410 4982                        u8530 3D08  
                      u8450 3BD4                        u7650 29AC                        u7570 2890  
                      u7490 26F6                        u7810 1DB6                        u7730 1B48  
                      u8610 0326                        u9250 0FA0                        u9170 0CC8  
                      u9090 39BC                        u9330 22E8                        u9411 497E  
                      u8531 3D04                        u8451 3BCE                        u7651 29A8  
                      u7571 288C                        u7491 26F2                        u7811 1DB2  
                      u7731 1B44                        u8611 0322                        u9251 0F9C  
                      u9171 0CC4                        u9091 39B8                        u9331 22E4  
                      u9260 5232                        u9420 5142                        u7900 489A  
                      u8460 3BD6                        u7660 29DA                        u7580 28B0  
                      u7820 1DD0                        u7740 1B58                        u8380 3354  
                      u8700 0568                        u8620 03B2                        u8540 0176  
                      u9180 0CE4                        u9340 2466                        u9500 115E  
                      u9261 522E                        u9421 513E                        u7901 4896  
                      u7661 29D6                        u7581 28AC                        u7821 1DCC  
                      u7741 1B54                        u8381 3350                        u8701 0564  
                      u8621 03AE                        u8541 0172                        u9181 0CE0  
                      u9341 2462                        u9501 115A                        u9270 5240  
                      u9430 5166                        u7910 48C0                        u8470 3BE6  
                      u7590 28C2                        u7830 1E18                        u7750 1CD2  
                      u7670 1A8E                        u8390 3378                        u8710 06B0  
                      u8630 03E4                        u8550 01C0                        u9190 0D84  
                      u9350 264E                        u9510 117C                        u9271 523C  
                      u9431 5162                        u7911 48BC                        u8471 3BE2  
                      u7591 28BE                        u7831 1E14                        u7671 1A8A  
                      u8295 453E                        u8375 32FA                        u8711 06AC  
                      u8631 03E0                        u8551 01BC                        u9191 0D80  
                      u9351 264A                        u9511 1178                        u9360 48E4  
                      u7920 4996                        u8480 3C12                        u7840 1E46  
                      u7760 1D2C                        u7680 1AA0                        u8376 3304  
                      u8800 09A2                        u8720 0716                        u8640 0422  
                      u8560 01D0                        u9440 5070                        u9520 118C  
                      u9280 4D2A                        u9361 48E0                        u7921 4992  
                      u8481 3C0E                        u7841 1E42                        u7761 1D28  
                      u7681 1A9C                        u8377 3314                        u8801 099E  
                      u8721 0712                        u8641 041E                        u8561 01CC  
                      u9441 506C                        u9521 1188                        u9281 4D26  
                      u9370 4902                        u7930 49B0                        u8490 3C28  
                      u7850 1E80                        u7770 1D4C                        u7690 1AB0  
                      u8810 0A74                        u8730 075E                        u8650 04AE  
                      u8570 020E                        u9450 5084                        u9530 1268  
                      u9290 4D64                        u9371 48FE                        u7931 49AC  
                      u8491 3C24                        u7851 1E7C                        u7771 1D48  
                      u7755 1CC8                        u7691 1AAC                        u8395 336E  
                      u8811 0A70                        u8731 075A                        u8651 04AA  
                      u8571 020A                        u9451 5080                        u9531 1264  
                      u9291 4D60                        u9700 46A4                        u9380 491E  
                      u7860 4820                        u7940 49CA                        u7780 1D5E  
                      u8820 0A90                        u8740 076E                        u8660 04E4  
                      u8580 0220                        u8900 3AC2                        u9540 1342  
                      u9460 10CA                        u9701 46A0                        u9381 491A  
                      u7861 481C                        u7941 49C6                        u7781 1D5A  
                      u8821 0A8C                        u8741 076A                        u8661 04E0  
                      u8581 021C                        u8901 3ABE                        u9541 133E  
                      u9461 10C4                        u9605 52AE                        u9710 4734  
                      u9390 495C                        u7870 483A                        u7950 49E8  
                      u6990 5274                        u7790 1D8C                        u8830 0AF6  
                      u8750 0808                        u8670 04FA                        u8590 029A  
                      u8910 3AE8                        u9550 1360                        u9470 10CC  
                      u9606 52B0                        u9711 4730                        u7871 4836  
                      u7951 49E4                        u6991 5270                        u7791 1D88  
                      u8831 0AF0                        u8751 0804                        u8671 04F6  
                      u8591 0296                        u8911 3AE4                        u9551 135C  
                      u9615 52A0                        u7880 4860                        u7960 49FE  
                      u8840 0AF8                        u8760 0856                        u8680 0530  
                      u8920 3B22                        u9560 1370                        u9480 10EE  
                      u9616 52A2                        u9800 3F90                        u7881 485C  
                      u7961 49FA                        u8761 0852                        u8681 052C  
                      u8921 3B1E                        u9721 4170                        u9561 136C  
                      u9481 10EA                        u9625 5292                        u7890 487E  
                      u7970 4A22                        u8850 0B0C                        u8770 0906  
                      u8690 053E                        u8930 3B48                        u9730 418E  
                      u9570 13F0                        u9490 1104                        u9626 5294  
                      u9810 3FB2                        u9650 5124                        u7891 487A  
                      u7971 4A1E                        u8851 0B08                        u8771 0902  
                      u8691 053A                        u9731 418A                        u9571 13EC  
                      u9491 1100                        u9635 5284                        u9811 3FAE  
                      u9651 5120                        u7980 4B10                        u8780 0940  
                      u8940 3B7A                        u8860 3A40                        u9740 41A6  
                      u9580 149A                        u9660 4CFC                        u9636 5286  
                      u9820 3FEA                        u9900 3E98                        u9397 4952  
                      u7981 4B0C                        u8781 093C                        u8941 3B76  
                      u8861 3A3C                        u9741 41A2                        u9581 1496  
                      u9645 52CA                        u9821 3FE6                        u9901 3E94  
                      u7990 4B4E                        u8790 094E                        u8950 3B88  
                      u8870 3A86                        u9670 4DF0                        u9646 52CC  
                      u9830 4000                        u9910 4046                        u7991 4B4A  
                      u8791 094A                        u8951 3B84                        u9671 4DEC  
                      u9831 3FFC                        u9751 3F06                        u9911 4042  
                      u8960 3BC2                        u8880 3A96                        u9680 4E0C  
                      u9920 409A                        u9840 3D80                        u8961 3BBE  
                      u8937 3B3E                        u8881 3A92                        u9681 4E08  
                      u9665 4CF2                        u9761 3F18                        u9921 4096  
                      u9841 3D7C                        u8890 3AA4                        u8970 4588  
                      u9690 4E22                        u9930 40C0                        u9850 3DE4  
                      u8891 3AA0                        u8971 4584                        u9691 4E1E  
                      u9595 52BC                        u9931 40BC                        u9851 3DE0  
                      u8980 461C                        u9596 52BE                        u9940 40CE  
                      u9860 3E3E                        u8877 3A7C                        u8981 4618  
                      u9941 40CA                        u9861 3E3A                        u8990 462E  
                      u9790 3F8E                        u9950 40E0                        u9870 3E4C  
                      u8991 462A                        u9791 3F88                        u9951 40DC  
                      u9871 3E48                        u9784 3F78                        u9960 40F8  
                      u9880 3E72                        u9785 3F74                        u9961 40F4  
                      u9881 3E6E                        _TMR1 0FCE                        u9778 3F4A  
                      u9970 410C                        u9890 3E80                        u9779 3F92  
                      u9971 4108                        u9891 3E7C                        u9980 4132  
                      u9981 412E                        u9990 4140                        u9991 413C  
                      abs@a 000C                        _dbuf 0127                        _half FE53  
                      _labs 4E36                        _main 29EE                        _dtoa 3BC4  
                      _rand 4C9E                        _seed 0197                        _prec 0057  
                      _sinf 10A8                        pad@i 001E                        pad@p 001B  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _stoa 3A26                        btemp 005A                        _utoa 457A  
             ___fpclassifyf 447C                        prodh 0FF4                        prodl 0FF3  
                      start 014E             ___fldiv@new_exp 003E                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 48D2                       ??_abs 000E  
                     ??_pad 001D            __end_of_LCD_Init 4744            __end_of_LCD_Send 5244  
             ___fltol@sign1 0052                       ?_labs 0006             __end_of___fladd 1A74  
                     ?_main 0001                       ?_dtoa 0020             __end_of___fldiv 29EE  
                     ?_rand 0012             __end_of___awdiv 48D2             __end_of___cosdf 3872  
           __end_of___lbdiv 4E36             __end_of___flneg 50C4                       STR_10 FF6A  
                     STR_11 FF9D                       STR_12 FF37                       STR_20 FFE1  
                     STR_13 FE79                       STR_21 FFFB                       STR_30 FFD2  
                     STR_14 FF04                       STR_22 FFF7                       STR_15 FFAE  
                     STR_31 FE77                       STR_23 FFF3                       STR_16 FED1  
                     STR_32 FEAF                       STR_24 FFD7                       STR_33 FE77  
                     STR_17 FF59                       STR_25 FFC6                       STR_18 FFE6  
                     STR_42 FFBF                       STR_34 FE9D                       STR_26 FFD6  
                     STR_27 FFCC                       STR_35 FEC0                       STR_19 FFDC  
                     STR_28 FFCD                       STR_36 FFEB             __end_of___awmod 4A34  
                     STR_29 FE8A                       STR_39 FFEF                       ?_sinf 00A4  
           __end_of___flmul 1E9E             __end_of___flsub 4FC2             __end_of___fltol 4378  
                     ?_stoa 0010                       u10000 4154                       u10001 4150  
                     u10011 3482                       u10020 34AA                       u10100 2F8C  
                     u10021 34A6                       u10101 2F88                       u10030 354A  
                     u10110 2FAE                       u10031 3546                       u10111 2FAA  
                     ?_utoa 0020                       u10040 3624                       u10120 2FC2  
                     u10200 2114                       u10041 3620                       u10121 2FBE  
                     u10201 2110                       u10050 364A                       u10130 2FD6  
                     u10210 2230                       u10051 3646                       u10131 2FD2  
                     u10211 222C                       u10060 3658                       u10140 2FEA  
                     u10220 2256                       u10300 2B24                       u10061 3654  
                     u10141 2FE6                       u10221 2252                       u10301 2B20  
                     u10070 3670                       u10150 3018                       u10230 2264  
                     u10310 2B32                       u10071 366C                       u10151 3014  
                     u10231 2260                       u10311 2B2E                       u10080 2DA2  
                     u10240 227C                       u10320 2B58                       u10081 2D9E  
                     u10241 2278                       u10161 1EE4                       u10321 2B54  
                     u10090 2E04                       u10330 2B66                       u10250 2A8E  
                     u10091 2E00                       u10171 1F18                       u10331 2B62  
                     u10251 2A8A                       u10180 1F92                       u10340 2D18  
                     u10260 2AB4                       u10181 1F8E                       u10341 2D14  
                     u10261 2AB0                       u10190 20E4                       u10270 2AD2  
                     u10191 20E0                       u10407 2C3E                       u10271 2ACE  
                     u10280 2AE0                       u10417 2C64                       u10281 2ADC  
                     u10290 2B06                       u10507 3630                       u10427 2C8A  
                     u10291 2B02             ___awdiv@divisor 001A                       u10517 468C  
                     u10437 3E58                       u10357 29FA                       u10527 473A  
                     u10447 40A4                       u10367 2A62                       u10457 4116  
                     u10377 2A9A                       u10467 3FBC                       u10387 2AEC  
                     u10477 21CA                       u10397 2B3E                       u10487 223C  
                     u10497 2FFC                       _RC1IE 7CED                       _RC1IF 7CF5  
           __end_of___lwdiv 4C9E             __end_of___sindf 324C             __end_of___lwmod 4DDA  
                     i2l412 0088                       i2l414 0074                       i2l423 0142  
           ___awdiv@counter 001C                ___sindf$4534 0070                ___sindf$4535 0074  
              ___sindf$4536 0078                vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4  
       ___lmul@multiplicand 000A             __end_of_pio2_1t FE4B                       _fabsf 5168  
                     _flags 0059                       _gmail 0177         read_prec_or_width@c 000E  
       read_prec_or_width@n 000F                       _fputc 4744                       _fputs 5008  
                     labs@a 0006                       pad@fp 0017                       _width 0055  
           __end_of_invpio2 FE53                       _putch 5264                       dtoa@d 0022  
                     dtoa@i 002B                       dtoa@p 0028                       dtoa@s 002A  
                     dtoa@w 0026        __end_of_LED1_Control 52C0             __end_of_runGAME 2292  
           __end_of_runGPIO 4018                       pclath 0FFA                       tablat 0FF5  
           __end_of_runUART 3EAC        __end_of_LED2_Control 52B2                       sinf@n 00B0  
                     sinf@x 00A4                       sinf@y 00B6                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 001C                       stoa@p 0016  
                     stoa@s 0012                       stoa@w 0018                       ttemp5 005B  
                     ttemp6 005E                       ttemp7 0062                       utoa@d 0022  
      __end_of_LED3_Control 52A4                       utoa@i 0028                       utoa@p 0026  
                     utoa@w 0024                       status 0FD8                       wtemp8 005B  
           __end_of_sprintf 5008              ?___fpclassifyf 0006             ___lbdiv@divisor 0006  
      __end_of_LED4_Control 5296             ___lbdiv@counter 0008        __end_of_LED5_Control 5288  
           runUART@reversed 00D4        __end_of_LED6_Control 52CE             __initialization 4E8C  
    __end_of_LCD_ShowString 4984                __end_of_half FE57                __end_of_labs 4E8C  
              __end_of_main 2D32                __end_of_dtoa 3D40                __end_of_rand 4D0C  
              __end_of_sinf 15B2                __end_of_stoa 3BC4                __end_of_utoa 466A  
              LCD_Send@data 0006                      ??_labs 000A                      ??_main 00FA  
                    ??_dtoa 0024                      ??_rand 0014                      ??_sinf 0054  
                    ??_stoa 0014                      ??_utoa 0024           __end_of_LCD_Clear 5168  
             __activetblptr 0002  __end_of_read_prec_or_width 4AE2                ?_moveDisplay 00E7  
                    ?_fabsf 0006                      ?_fputc 0007                      ?_fputs 0010  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      _CCPR1L 0FBE  
          ___awdiv@dividend 0018                      _GAMEIE 0124                      ?_putch 0001  
                    _GODONE 7E11                      _GPIOIE 0126                      i2l6240 0020  
                    i2l6242 002E                      i2l6260 00AE                      i2l6252 0082  
                    i2l6244 0040                      i2l6270 00DA                      i2l6262 00C0  
                    i2l6254 0090                      i2l6246 004E                      i2l6238 0012  
                    i2l6280 0120                      i2l6272 00E8                      i2l6264 00C2  
                    i2l6248 0066                      i2l6256 0092                      i2l6282 0128  
                    i2l6274 00FA                      i2l6266 00CA                      i2l6258 00A0  
                    i2l6284 012C                      i2l6276 00FE                      i2l6268 00CC  
                    i2l6286 013A                      i2l6278 0110                      _RCREG1 0FAE  
             ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C               ___rem_pio2f@x 0084  
             ___rem_pio2f@y 0088               vfpfcnvrt@done 00BF                      _UARTIE 0125  
                    _SPBRG1 0FAF                      _TMR1IE 7CE8                      _TMR1IF 7CF0  
                    _TMR2IE 7CE9                      _TMR2IF 7CF1                      _TMR1ON 7E68  
                    _TMR2ON 7DD2                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 3A26                _CCPTMRS0bits 0F49  
              vfprintf@cfmt 00CC             ?_LCD_ShowString 0007                      _s1pio2 FE73  
                    _s2pio2 FE6F                      _s3pio2 FE6B                      _s4pio2 FE67  
                    ___flge 4378                      ___fleq 4AE2                      ___lmul 4D0C  
                 ??___fladd 004E                      ___wmul 51F8                   ??___fldiv 0035  
                 ??___awdiv 001C                   ??___cosdf 0052                   ??___lbdiv 0007  
                 ??___flneg 0052                   ??___awmod 000A                   ??___flmul 001C  
                 ??___flsub 0052                   ??___fltol 0068            runUART@keepState 00F3  
                    _efgtoa 0152                   ??___lwdiv 000A                   ??___sindf 0052  
                 ??___lwmod 000A                      _pio2_1 FE4B                      _floorf 324C  
                    fabsf@u 000A                      fabsf@x 0006                      _memcpy 4EE0  
      read_prec_or_width@ap 000D                      clear_0 4EB2                      clear_1 4EBE  
          ___awdiv@quotient 001E                      _runADC 3462                      _runDAC 2D32  
           ___awmod@divisor 0008                      isa$std 0001                      _runPWM 4018  
      runGAME@keepStateGAME 01C6             ___awmod@counter 000A                      _printf 5244  
                    pad@buf 0019                      dtoa@fp 0020                      _strcpy 50C4  
                    _strlen 50FC                      fputc@c 0007                      fputs@c 0014  
                    fputs@i 0015                      fputs@s 0010            __end_of_runMUSIC 52D0  
           ___fpclassifyf@e 000E             ___fpclassifyf@u 0010             ___fpclassifyf@x 0006  
              __mediumconst FE36                   ??_runGAME 00E7                      sinf@ux 00BA  
                 ??_runGPIO 0007                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_SPI_write 508A                   ??_runUART 00D2  
                    stoa@cp 001A                      stoa@fp 0010            __end_of_vfprintf 4F7A  
                    utoa@fp 0020                   ??_sprintf 0054            ___lbdiv@dividend 0007  
                ___flge@ff1 002D                  ___flge@ff2 0031             ??___fpclassifyf 000A  
              ___xxtofl@arg 0010                ___xxtofl@exp 000F                ___xxtofl@val 0006  
                ___fleq@ff1 0006                  ___fleq@ff2 000A                  __accesstop 0060  
   __end_of__initialization 4ED2                   ?_LCD_Init 0001                   ?_LCD_Send 0001  
                ___flneg@f1 0080               ___rparam_used 0001                  ___fltol@f1 0064  
            __pcstackCOMRAM 0001           LED4_Control@state 0006                __pidataBANK1 51D0  
             __end_of_fabsf 519C               __end_of_fputc 480E               __end_of_fputs 504C  
             __end_of_putch 527A                  __end_of_C0 FE67                  __end_of_C1 FE63  
                __end_of_C2 FE5F                  __end_of_C3 FE5B                  __end_of_S1 FE47  
                __end_of_S2 FE43                  __end_of_S3 FE3F                  __end_of_S4 FE3B  
          ___lbdiv@quotient 0009                     ??_fabsf 000A                     ??_fputc 000B  
                   ??_fputs 0014                     ??_putch 0006                  __pbssBANK0 00FE  
                __pbssBANK1 0100                  __pbssBANK2 0200                  ??_LCD_Init 0007  
                ??_LCD_Send 0006                 runADC@F6967 0100                SPI_write@LSB 0007  
              SPI_write@MSB 0006                     ISR@temp 0005                     ?___flge 002D  
                   ?___fleq 0006                     ?___lmul 0006                     ?___wmul 0006  
                   ?_efgtoa 0084               ??___rem_pio2f 0089                     ?_floorf 0046  
              _LED1_Control 52B2                     ?_memcpy 0006              ___lmul@product 000E  
                   ?_runADC 0001                     ?_runDAC 0001                _LED2_Control 52A4  
       runGAME@randomNumber 01CB                     ?_runPWM 0001                     ?_printf 00CE  
                   ?_strcpy 0006                     ?_strlen 0006                _LED3_Control 5296  
              _LED4_Control 5288                   ?___xxtofl 0006                _LED5_Control 527A  
            ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094  
              _LED6_Control 52C0                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F                 runGAME@pot1 01C9                 runGAME@text 019B  
         runGPIO@LEDControl 0015             LCD_ShowString@i 000C                     __Hparam 0000  
                   __Lparam 0000                   ?_runMUSIC 0001                     ___fladd 15B2  
                   ___fldiv 2654                     ___awdiv 480E                     ___cosdf 3674  
                   ___lbdiv 4DDA                     ___flneg 508A                     ___awmod 4984  
                   ___flmul 1A74                     ___flsub 4F7A                     ___fltol 4270  
                   ___lwdiv 4C2A                     ___sindf 301A                     ___lwmod 4D76  
                 ?_vfprintf 00C7              main@setUpAgain 00FC                     __pcinit 4E8C  
                   __ramtop 1000                     __ptext0 29EE                     __ptext1 3D40  
                   __ptext2 50FC                     __ptext3 4018                     __ptext4 52CE  
                   __ptext5 3EAC                     __ptext6 527A                     __ptext7 5288  
                   __ptext8 5296                     __ptext9 52A4                     _pio2_1t FE47  
                 _T1CONbits 0FCD             runPWM@keepState 0022       read_prec_or_width@fmt 000C  
                ??___xxtofl 000A         __end_of___rem_pio2f 2654            ___awmod@dividend 0006  
                   _invpio2 FE4F                     _runGAME 1E9E                     _runGPIO 3EAC  
                   efgtoa@c 008A                     efgtoa@d 0098                     efgtoa@e 009C  
                   efgtoa@f 0086                     efgtoa@g 00AF                     efgtoa@h 00A6  
                   efgtoa@i 00A4                     efgtoa@l 00AA                     efgtoa@m 009A  
                   efgtoa@n 00B3                     efgtoa@p 008F                     efgtoa@t 0091  
                   efgtoa@u 00B5                     efgtoa@w 009E                     _runUART 3D40  
                 _LCD_Clear 5132                     _sprintf 4FC2            ___rem_pio2f$4533 008F  
      end_of_initialization 4ED2                     floorf@e 0064                     floorf@m 0060  
                   floorf@u 0066                     floorf@x 0046                     memcpy@d 000D  
                   memcpy@n 000A                     memcpy@s 000F                     fputc@fp 0009  
          ___rem_pio2f@F526 0115               __Lmediumconst FE36                     fputs@fp 0012  
          ??_LCD_ShowString 0009          _read_prec_or_width 4A34                   i2u1053_47 0058  
         LED1_Control@state 0006       LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093  
        runGAME@GAMEdivider 01C8                  ??_runMUSIC 0006           __end_of_vfpfcnvrt 10A8  
                efgtoa@mode 0096                  efgtoa@sign 00AE                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 000C                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 00C0  
                ??_vfprintf 0054                     strcpy@d 000A                     strlen@a 0008  
                   strlen@s 0006                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0063               ___xxtofl@sign 000E                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000E                 ___fldiv@grs 0040  
               ___fldiv@rem 0039                   _SPI_write 504C                 ___flmul@grs 0022  
               _CCP1CONbits 0FBD           LED5_Control@state 0006              __end_of_s1pio2 FE77  
            __end_of_s2pio2 FE73              __end_of_s3pio2 FE6F              __end_of_s4pio2 FE6B  
            __end_of___flge 447C              __end_of___fleq 4B8C              __end_of___lmul 4D76  
               vfpfcnvrt@ap 00BC                 vfpfcnvrt@cp 00C5                 ___rem_pio2f 2292  
               vfpfcnvrt@fp 00B9              __end_of___wmul 521E              __end_of_efgtoa 0B4C  
            __end_of_pio2_1 FE4F        moveDisplay@menuItem1 019B        moveDisplay@menuItem2 01AC  
            __end_of_floorf 3462        moveDisplay@menuItems 01BD              __end_of_memcpy 4F30  
                floorf@F521 0119              __end_of_runADC 3674              __end_of_runDAC 301A  
            __end_of_runPWM 415E              __end_of_printf 5264              __end_of_strcpy 50FC  
            __end_of_strlen 5132         start_initialization 4E8C                 __end_of_ISR 014E  
               __end_of_abs 51D0                 __end_of_pad 4C2A                  ?_SPI_write 0001  
     __end_of___fpclassifyf 457A             runADC@keepState 01B8                 vfprintf@fmt 00C9  
                  ??___flge 0035                    ??___fleq 000E                    ??___lmul 000E  
                  ??___wmul 000A                    ??_efgtoa 008B                 __pdataBANK1 01CE  
                  ??_floorf 004A                    ??_memcpy 000C                    ??_runADC 00E7  
                  ??_runDAC 00D2                    ??_runPWM 0020                    ??_printf 0054  
                  ??_strcpy 000A                    ??_strlen 0008            runGAME@GAMEround 01C7  
                 ___fladd@a 004A                   ___fladd@b 0046                   ___fldiv@a 0031  
                 ___fldiv@b 002D               runGPIO@states 0009                   ___cosdf@r 0068  
                 ___cosdf@w 0078                   ___cosdf@x 0064                   ___cosdf@z 007C  
                 ___flmul@a 0018                   ___flmul@b 0014                 __pbssCOMRAM 0055  
                 ___flsub@a 0068                   ___flsub@b 0064               __pcstackBANK0 0060  
             __pcstackBANK1 019B                 ??_LCD_Clear 0007                   ___sindf@r 0068  
                 ___sindf@s 007C                   ___sindf@w 006C                   ___sindf@x 0064  
                 ___sindf@z 0080       runGPIO@numberOfStates 0021                 _efgtoa$4070 0093  
          ___lwdiv@dividend 0006                   _dtoa$4039 0024               SPI_write@data 0008  
                 __pintcode 0008               __pmediumconst FE36                    ?___fladd 0046  
                  ?___fldiv 002D                    ?___awdiv 0018                    ?___cosdf 0064  
                  ?___lbdiv 0006                    ?___flneg 0080                    ?___awmod 0006  
                  ?___flmul 0014                    ?___flsub 0064                    ?___fltol 0064  
                runADC@pot1 01B4                  runADC@pot2 01B6                    ?___lwdiv 0006  
                  ?___sindf 0064                    ?___lwmod 0006                  runADC@text 019B  
                 fabsf@F465 0111               ??_moveDisplay 00E8                    ?_runGAME 0001  
                  ?_runGPIO 0001                    ?_runUART 0001             runDAC@keepState 00DB  
          ___lwdiv@quotient 000B                    ?_sprintf 00CE                   _sinf$4245 00A8  
                 _sinf$4246 00AC                   _sinf$4529 00B2                    _GAMEtime 0123  
               ??_SPI_write 0006              runDAC@DACindex 00DD                    _LCD_Init 466A  
                  _LCD_Send 521E              ___wmul@product 000A                    _LATAbits 0F89  
                  _LATBbits 0F8A                    _LATCbits 0F8B                    _LATDbits 0F8C  
              runGAME@F6970 0200                runGAME@F6964 0219                  runUART@len 00F4  
         LED2_Control@state 0006                    i2u690_40 0074                    i2u690_41 0070  
                  i2u691_40 0082                    i2u691_41 007E                    i2u692_40 00A0  
                  i2u692_41 009C                    i2u693_40 00AE                    i2u693_41 00AA  
                  i2u694_40 00C0                    i2u686_40 0020                    i2u694_41 00BC  
                  i2u686_41 001C                    i2u695_40 00DA                    i2u687_40 002E  
                  i2u695_41 00D6                    i2u687_41 002A                    i2u696_40 00E8  
                  i2u688_40 0040                    i2u696_41 00E4                    i2u688_41 003C  
                  i2u697_40 00FA                    i2u689_40 004E                    i2u697_41 00F6  
                  i2u689_41 004A                    i2u698_40 0110                    i2u698_41 010C  
                 _vfpfcnvrt 0B4C                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0006                   main@menuI 00FD            moveDisplay@F6965 01CE  
                vfpfcnvrt@c 00C4           ___lmul@multiplier 0006                   copy_data0 4EA0  
         runGAME@approxText 01AC         __end_of_moveDisplay 4270            moveDisplay@menuI 01CD  
          moveDisplay@where 00E7                runGPIO@F6975 01EA                runGPIO@F6993 01DE  
              runGPIO@GPIOi 0023                    __Hrparam 0000                   memcpy@tmp 000C  
                vfprintf@ap 00CB                    __Lrparam 0000                  vfprintf@fp 00C7  
           runGAME@GAMEpart 01C5           LED6_Control@state 0006                ?___rem_pio2f 0084  
                ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38  
                _ANSELBbits 0F39                  _ANSELCbits 0F3A                  _ANSELDbits 0F3B  
                _ANSELEbits 0F3C          ___fpclassifyf@F465 011D                  sprintf@fmt 00D0  
                  ___xxtofl 3872             ___lwdiv@divisor 0008             ___lwdiv@counter 000A  
                  __ptext10 52B2                    __ptext11 52C0                    __ptext20 5168  
                  __ptext12 1E9E                    __ptext21 3674                    __ptext13 4C9E  
                  __ptext30 457A                    __ptext22 5244                    __ptext14 4D0C  
                  __ptext31 4D76                    __ptext23 504C                    __ptext15 4DDA  
                  __ptext40 324C                    __ptext32 4C2A                    __ptext24 3462  
                  __ptext16 2D32                    __ptext41 447C                    __ptext33 3A26  
                  __ptext25 3872                    __ptext17 10A8                    __ptext50 3BC4  
                  __ptext42 4270                    __ptext34 4A34                    __ptext26 415E  
                  __ptext18 301A                    __ptext51 4B8C                    __ptext43 4F7A  
                  __ptext35 51F8                    __ptext27 4FC2                    __ptext19 2292  
                  __ptext60 466A                    __ptext52 5008                    __ptext44 15B2  
                  __ptext36 0152                    __ptext28 4F30                    __ptext61 521E  
                  __ptext53 4744                    __ptext45 508A                    __ptext37 50C4  
                  __ptext29 0B4C                    __ptext54 5264                    __ptext46 1A74  
                  __ptext38 4EE0                    __ptext55 519C                    __ptext47 4378  
                  __ptext39 4E36                    __ptext56 4984                    __ptext48 4AE2  
                  __ptext57 480E                    __ptext49 2654                    __ptext58 48D2  
                  __ptext59 5132              runADC@voltage1 01AC              runADC@voltage2 01B0  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                strcpy@dest 0006                    efgtoa@fp 0084                    efgtoa@ne 008D  
                  efgtoa@pp 0095                    efgtoa@ou 00A0                    _runMUSIC 52CE  
                  isa$xinst 0000                    int$flags 005A                 _runDAC$4526 00D3  
               _runDAC$4527 00D7                    _vfprintf 4F30               ?_LED1_Control 0001  
                 printf@fmt 00CE                _SSP1STATbits 0FC7               ?_LED2_Control 0001  
              _SSP2STATbits 0F6D               ?_LED3_Control 0001               ?_LED4_Control 0001  
                 putch@data 0006               ?_LED5_Control 0001                    memcpy@d1 0006  
             ?_LED6_Control 0001                    memcpy@s1 0008                 _moveDisplay 415E  
                  intlevel2 0000                   sprintf@ap 00DA            ___lwmod@dividend 0006  
                 strcpy@src 0008                  _RCSTA1bits 0FAB                    sinf@sign 00B1  
                  runGPIO@j 0024                    runUART@i 00F6                    runUART@p 00F8  
               efgtoa@nmode 0097                    printf@ap 0054              ??_LED1_Control 0006  
            ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007  
            ??_LED3_Control 0006              ??_LED4_Control 0006                    sprintf@f 00DB  
                  sprintf@s 00CE              ??_LED5_Control 0006             ___lwmod@divisor 0008  
            ??_LED6_Control 0006             ___lwmod@counter 000A            runPWM@multiplier 0023  
             ___fladd@signs 0060                ___fladd@aexp 0061                ___fladd@bexp 0062  
              ___cosdf$4530 006C                ___cosdf$4531 0070                ___cosdf$4532 0074  
             _keepStateGPIO 00FE           LED3_Control@state 0006  
