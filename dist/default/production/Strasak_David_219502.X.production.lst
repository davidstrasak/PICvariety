

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 22:05:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   005266                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   005266  DC                 	db	low STR_24
   125   005267  FF                 	db	high STR_24
   126   005268  E1                 	db	low STR_25
   127   005269  FF                 	db	high STR_25
   128   00526A  FB                 	db	low STR_26
   129   00526B  FF                 	db	high STR_26
   130   00526C  F7                 	db	low STR_27
   131   00526D  FF                 	db	high STR_27
   132   00526E  F3                 	db	low STR_28
   133   00526F  FF                 	db	high STR_28
   134   005270  D7                 	db	low STR_29
   135   005271  FF                 	db	high STR_29
   136   005272  C6                 	db	low STR_30
   137   005273  FF                 	db	high STR_30
   138   005274  D6                 	db	low (STR_35+4)
   139   005275  FF                 	db	high (STR_35+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   005276  20                 	db	32
   143   005277  30                 	db	48
   144   005278  18                 	db	24
   145   005279  0C                 	db	12
   146   00527A  06                 	db	6
   147   00527B  03                 	db	3
   148   00527C  01                 	db	1
   149   00527D  03                 	db	3
   150   00527E  06                 	db	6
   151   00527F  0C                 	db	12
   152   005280  18                 	db	24
   153   005281  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   005282  48                 	db	low _LED1_Control
   157   005283  53                 	db	high _LED1_Control
   158   005284  3A                 	db	low _LED2_Control
   159   005285  53                 	db	high _LED2_Control
   160   005286  2C                 	db	low _LED3_Control
   161   005287  53                 	db	high _LED3_Control
   162   005288  1E                 	db	low _LED4_Control
   163   005289  53                 	db	high _LED4_Control
   164   00528A  10                 	db	low _LED5_Control
   165   00528B  53                 	db	high _LED5_Control
   166   00528C  56                 	db	low _LED6_Control
   167   00528D  53                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FDF2                     __pmediumconst:
   171                           	callstack 0
   172   00FDF2  00                 	db	0
   173   00FDF3  6C3C               	dw	27708
   174   00FDF5  3636               	dw	13878
   175   00FDF7                     __end_of_S4:
   176                           	callstack 0
   177   00FDF7  07CF               	dw	1999
   178   00FDF9  B950               	dw	47440
   179   00FDFB                     __end_of_S3:
   180                           	callstack 0
   181   00FDFB  8884               	dw	34948
   182   00FDFD  3C08               	dw	15368
   183   00FDFF                     __end_of_S2:
   184                           	callstack 0
   185   00FDFF  AAAB               	dw	43691
   186   00FE01  BE2A               	dw	48682
   187   00FE03                     __end_of_S1:
   188                           	callstack 0
   189   00FE03  85A3               	dw	34211
   190   00FE05  3288               	dw	12936
   191   00FE07                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE07  0FDA               	dw	4058
   194   00FE09  3FC9               	dw	16329
   195   00FE0B                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE0B  F983               	dw	63875
   198   00FE0D  3F22               	dw	16162
   199   00FE0F                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE0F  0000               	dw	0
   202   00FE11  3F00               	dw	16128
   203   00FE13                     __end_of_half:
   204                           	callstack 0
   205   00FE13  9A17               	dw	39447
   206   00FE15  37CC               	dw	14284
   207   00FE17                     __end_of_C3:
   208                           	callstack 0
   209   00FE17  043F               	dw	1087
   210   00FE19  BAB6               	dw	47798
   211   00FE1B                     __end_of_C2:
   212                           	callstack 0
   213   00FE1B  AA9F               	dw	43679
   214   00FE1D  3D2A               	dw	15658
   215   00FE1F                     __end_of_C1:
   216                           	callstack 0
   217   00FE1F  0000               	dw	0
   218   00FE21  BF00               	dw	48896
   219   00FE23                     __end_of_C0:
   220                           	callstack 0
   221   00FE23  0FDB               	dw	4059
   222   00FE25  40C9               	dw	16585
   223   00FE27                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FE27  CBE4               	dw	52196
   226   00FE29  4096               	dw	16534
   227   00FE2B                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FE2B  0FDB               	dw	4059
   230   00FE2D  4049               	dw	16457
   231   00FE2F                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FE2F  0FDB               	dw	4059
   234   00FE31  3FC9               	dw	16329
   235   00FE33                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FE33                     STR_36:
   290   00FE33  25                 	db	37
   291   00FE34  75                 	db	117	;'u'
   292   00FE35  20                 	db	32
   293   00FE36  20                 	db	32
   294   00FE37  20                 	db	32
   295   00FE38  20                 	db	32
   296   00FE39  20                 	db	32
   297   00FE3A  20                 	db	32
   298   00FE3B  20                 	db	32
   299   00FE3C  20                 	db	32
   300   00FE3D  20                 	db	32
   301   00FE3E  20                 	db	32
   302   00FE3F  20                 	db	32
   303   00FE40  20                 	db	32
   304   00FE41  20                 	db	32
   305   00FE42  20                 	db	32
   306   00FE43  20                 	db	32
   307   00FE44  20                 	db	32
   308   00FE45  00                 	db	0
   309   00FE46                     STR_34:
   310   00FE46  50                 	db	80	;'P'
   311   00FE47  4F                 	db	79	;'O'
   312   00FE48  54                 	db	84	;'T'
   313   00FE49  31                 	db	49	;'1'
   314   00FE4A  3A                 	db	58	;':'
   315   00FE4B  25                 	db	37
   316   00FE4C  2E                 	db	46
   317   00FE4D  31                 	db	49	;'1'
   318   00FE4E  66                 	db	102	;'f'
   319   00FE4F  50                 	db	80	;'P'
   320   00FE50  4F                 	db	79	;'O'
   321   00FE51  54                 	db	84	;'T'
   322   00FE52  32                 	db	50	;'2'
   323   00FE53  3A                 	db	58	;':'
   324   00FE54  25                 	db	37
   325   00FE55  2E                 	db	46
   326   00FE56  31                 	db	49	;'1'
   327   00FE57  66                 	db	102	;'f'
   328   00FE58  00                 	db	0
   329   00FE59                     STR_39:
   330   00FE59  53                 	db	83	;'S'
   331   00FE5A  6B                 	db	107	;'k'
   332   00FE5B  6F                 	db	111	;'o'
   333   00FE5C  72                 	db	114	;'r'
   334   00FE5D  65                 	db	101	;'e'
   335   00FE5E  3A                 	db	58	;':'
   336   00FE5F  20                 	db	32
   337   00FE60  25                 	db	37
   338   00FE61  75                 	db	117	;'u'
   339   00FE62  20                 	db	32
   340   00FE63  20                 	db	32
   341   00FE64  20                 	db	32
   342   00FE65  20                 	db	32
   343   00FE66  20                 	db	32
   344   00FE67  20                 	db	32
   345   00FE68  20                 	db	32
   346   00FE69  20                 	db	32
   347   00FE6A  00                 	db	0
   348   00FE6B                     STR_37:
   349   00FE6B  25                 	db	37
   350   00FE6C  68                 	db	104	;'h'
   351   00FE6D  75                 	db	117	;'u'
   352   00FE6E  20                 	db	32
   353   00FE6F  20                 	db	32
   354   00FE70  20                 	db	32
   355   00FE71  20                 	db	32
   356   00FE72  20                 	db	32
   357   00FE73  20                 	db	32
   358   00FE74  20                 	db	32
   359   00FE75  20                 	db	32
   360   00FE76  20                 	db	32
   361   00FE77  20                 	db	32
   362   00FE78  20                 	db	32
   363   00FE79  20                 	db	32
   364   00FE7A  20                 	db	32
   365   00FE7B  00                 	db	0
   366   00FE7C                     STR_40:
   367   00FE7C  47                 	db	71	;'G'
   368   00FE7D  41                 	db	65	;'A'
   369   00FE7E  4D                 	db	77	;'M'
   370   00FE7F  45                 	db	69	;'E'
   371   00FE80  20                 	db	32
   372   00FE81  4F                 	db	79	;'O'
   373   00FE82  56                 	db	86	;'V'
   374   00FE83  45                 	db	69	;'E'
   375   00FE84  52                 	db	82	;'R'
   376   00FE85  20                 	db	32
   377   00FE86  20                 	db	32
   378   00FE87  20                 	db	32
   379   00FE88  20                 	db	32
   380   00FE89  20                 	db	32
   381   00FE8A  20                 	db	32
   382   00FE8B  20                 	db	32
   383   00FE8C  00                 	db	0
   384   00FE8D                     STR_15:
   385   00FE8D  50                 	db	80	;'P'
   386   00FE8E  4F                 	db	79	;'O'
   387   00FE8F  54                 	db	84	;'T'
   388   00FE90  31                 	db	49	;'1'
   389   00FE91  20                 	db	32
   390   00FE92  20                 	db	32
   391   00FE93  20                 	db	32
   392   00FE94  20                 	db	32
   393   00FE95  20                 	db	32
   394   00FE96  20                 	db	32
   395   00FE97  20                 	db	32
   396   00FE98  20                 	db	32
   397   00FE99  20                 	db	32
   398   00FE9A  20                 	db	32
   399   00FE9B  20                 	db	32
   400   00FE9C  20                 	db	32
   401   00FE9D  00                 	db	0
   402   00FE9E                     STR_21:
   403   00FE9E  4E                 	db	78	;'N'
   404   00FE9F  65                 	db	101	;'e'
   405   00FEA0  62                 	db	98	;'b'
   406   00FEA1  79                 	db	121	;'y'
   407   00FEA2  6C                 	db	108	;'l'
   408   00FEA3  6F                 	db	111	;'o'
   409   00FEA4  20                 	db	32
   410   00FEA5  20                 	db	32
   411   00FEA6  20                 	db	32
   412   00FEA7  20                 	db	32
   413   00FEA8  20                 	db	32
   414   00FEA9  20                 	db	32
   415   00FEAA  20                 	db	32
   416   00FEAB  20                 	db	32
   417   00FEAC  20                 	db	32
   418   00FEAD  20                 	db	32
   419   00FEAE  00                 	db	0
   420   00FEAF                     STR_5:
   421   00FEAF  42                 	db	66	;'B'
   422   00FEB0  52                 	db	82	;'R'
   423   00FEB1  3A                 	db	58	;':'
   424   00FEB2  20                 	db	32
   425   00FEB3  31                 	db	49	;'1'
   426   00FEB4  39                 	db	57	;'9'
   427   00FEB5  32                 	db	50	;'2'
   428   00FEB6  30                 	db	48	;'0'
   429   00FEB7  30                 	db	48	;'0'
   430   00FEB8  20                 	db	32
   431   00FEB9  20                 	db	32
   432   00FEBA  20                 	db	32
   433   00FEBB  20                 	db	32
   434   00FEBC  20                 	db	32
   435   00FEBD  20                 	db	32
   436   00FEBE  20                 	db	32
   437   00FEBF  00                 	db	0
   438   00FEC0                     STR_1:
   439   00FEC0  56                 	db	86	;'V'
   440   00FEC1  79                 	db	121	;'y'
   441   00FEC2  74                 	db	116	;'t'
   442   00FEC3  76                 	db	118	;'v'
   443   00FEC4  6F                 	db	111	;'o'
   444   00FEC5  72                 	db	114	;'r'
   445   00FEC6  69                 	db	105	;'i'
   446   00FEC7  6C                 	db	108	;'l'
   447   00FEC8  3A                 	db	58	;':'
   448   00FEC9  20                 	db	32
   449   00FECA  20                 	db	32
   450   00FECB  20                 	db	32
   451   00FECC  20                 	db	32
   452   00FECD  20                 	db	32
   453   00FECE  20                 	db	32
   454   00FECF  20                 	db	32
   455   00FED0  00                 	db	0
   456   00FED1                     STR_18:
   457   00FED1  50                 	db	80	;'P'
   458   00FED2  72                 	db	114	;'r'
   459   00FED3  69                 	db	105	;'i'
   460   00FED4  70                 	db	112	;'p'
   461   00FED5  72                 	db	114	;'r'
   462   00FED6  61                 	db	97	;'a'
   463   00FED7  76                 	db	118	;'v'
   464   00FED8  69                 	db	105	;'i'
   465   00FED9  74                 	db	116	;'t'
   466   00FEDA  20                 	db	32
   467   00FEDB  20                 	db	32
   468   00FEDC  20                 	db	32
   469   00FEDD  20                 	db	32
   470   00FEDE  20                 	db	32
   471   00FEDF  20                 	db	32
   472   00FEE0  20                 	db	32
   473   00FEE1  00                 	db	0
   474   00FEE2                     STR_16:
   475   00FEE2  5A                 	db	90	;'Z'
   476   00FEE3  72                 	db	114	;'r'
   477   00FEE4  79                 	db	121	;'y'
   478   00FEE5  63                 	db	99	;'c'
   479   00FEE6  68                 	db	104	;'h'
   480   00FEE7  6C                 	db	108	;'l'
   481   00FEE8  69                 	db	105	;'i'
   482   00FEE9  20                 	db	32
   483   00FEEA  74                 	db	116	;'t'
   484   00FEEB  6F                 	db	111	;'o'
   485   00FEEC  20                 	db	32
   486   00FEED  20                 	db	32
   487   00FEEE  20                 	db	32
   488   00FEEF  20                 	db	32
   489   00FEF0  20                 	db	32
   490   00FEF1  20                 	db	32
   491   00FEF2  00                 	db	0
   492   00FEF3                     STR_17:
   493   00FEF3  70                 	db	112	;'p'
   494   00FEF4  6F                 	db	111	;'o'
   495   00FEF5  6D                 	db	109	;'m'
   496   00FEF6  6F                 	db	111	;'o'
   497   00FEF7  63                 	db	99	;'c'
   498   00FEF8  69                 	db	105	;'i'
   499   00FEF9  20                 	db	32
   500   00FEFA  42                 	db	66	;'B'
   501   00FEFB  54                 	db	84	;'T'
   502   00FEFC  4E                 	db	78	;'N'
   503   00FEFD  34                 	db	52	;'4'
   504   00FEFE  20                 	db	32
   505   00FEFF  20                 	db	32
   506   00FF00  20                 	db	32
   507   00FF01  20                 	db	32
   508   00FF02  20                 	db	32
   509   00FF03  00                 	db	0
   510   00FF04                     STR_14:
   511   00FF04  48                 	db	72	;'H'
   512   00FF05  79                 	db	121	;'y'
   513   00FF06  62                 	db	98	;'b'
   514   00FF07  65                 	db	101	;'e'
   515   00FF08  6A                 	db	106	;'j'
   516   00FF09  20                 	db	32
   517   00FF0A  70                 	db	112	;'p'
   518   00FF0B  6F                 	db	111	;'o'
   519   00FF0C  6D                 	db	109	;'m'
   520   00FF0D  6F                 	db	111	;'o'
   521   00FF0E  63                 	db	99	;'c'
   522   00FF0F  69                 	db	105	;'i'
   523   00FF10  20                 	db	32
   524   00FF11  20                 	db	32
   525   00FF12  20                 	db	32
   526   00FF13  20                 	db	32
   527   00FF14  00                 	db	0
   528   00FF15                     STR_3:
   529   00FF15  50                 	db	80	;'P'
   530   00FF16  6F                 	db	111	;'o'
   531   00FF17  7A                 	db	122	;'z'
   532   00FF18  6F                 	db	111	;'o'
   533   00FF19  72                 	db	114	;'r'
   534   00FF1A  21                 	db	33
   535   00FF1B  20                 	db	32
   536   00FF1C  48                 	db	72	;'H'
   537   00FF1D  61                 	db	97	;'a'
   538   00FF1E  64                 	db	100	;'d'
   539   00FF1F  21                 	db	33
   540   00FF20  21                 	db	33
   541   00FF21  21                 	db	33
   542   00FF22  20                 	db	32
   543   00FF23  20                 	db	32
   544   00FF24  20                 	db	32
   545   00FF25  00                 	db	0
   546   00FF26                     STR_2:
   547   00FF26  44                 	db	68	;'D'
   548   00FF27  61                 	db	97	;'a'
   549   00FF28  76                 	db	118	;'v'
   550   00FF29  69                 	db	105	;'i'
   551   00FF2A  64                 	db	100	;'d'
   552   00FF2B  20                 	db	32
   553   00FF2C  53                 	db	83	;'S'
   554   00FF2D  74                 	db	116	;'t'
   555   00FF2E  72                 	db	114	;'r'
   556   00FF2F  61                 	db	97	;'a'
   557   00FF30  73                 	db	115	;'s'
   558   00FF31  61                 	db	97	;'a'
   559   00FF32  6B                 	db	107	;'k'
   560   00FF33  20                 	db	32
   561   00FF34  20                 	db	32
   562   00FF35  20                 	db	32
   563   00FF36  00                 	db	0
   564   00FF37                     STR_12:
   565   00FF37  4C                 	db	76	;'L'
   566   00FF38  61                 	db	97	;'a'
   567   00FF39  64                 	db	100	;'d'
   568   00FF3A  65                 	db	101	;'e'
   569   00FF3B  6E                 	db	110	;'n'
   570   00FF3C  69                 	db	105	;'i'
   571   00FF3D  20                 	db	32
   572   00FF3E  70                 	db	112	;'p'
   573   00FF3F  6F                 	db	111	;'o'
   574   00FF40  74                 	db	116	;'t'
   575   00FF41  61                 	db	97	;'a'
   576   00FF42  6B                 	db	107	;'k'
   577   00FF43  75                 	db	117	;'u'
   578   00FF44  20                 	db	32
   579   00FF45  20                 	db	32
   580   00FF46  20                 	db	32
   581   00FF47  00                 	db	0
   582   00FF48                     STR_7:
   583   00FF48  5A                 	db	90	;'Z'
   584   00FF49  6D                 	db	109	;'m'
   585   00FF4A  61                 	db	97	;'a'
   586   00FF4B  63                 	db	99	;'c'
   587   00FF4C  6B                 	db	107	;'k'
   588   00FF4D  6E                 	db	110	;'n'
   589   00FF4E  65                 	db	101	;'e'
   590   00FF4F  74                 	db	116	;'t'
   591   00FF50  65                 	db	101	;'e'
   592   00FF51  20                 	db	32
   593   00FF52  42                 	db	66	;'B'
   594   00FF53  54                 	db	84	;'T'
   595   00FF54  4E                 	db	78	;'N'
   596   00FF55  32                 	db	50	;'2'
   597   00FF56  20                 	db	32
   598   00FF57  20                 	db	32
   599   00FF58  00                 	db	0
   600   00FF59                     STR_22:
   601   00FF59  49                 	db	73	;'I'
   602   00FF5A  6D                 	db	109	;'m'
   603   00FF5B  70                 	db	112	;'p'
   604   00FF5C  6C                 	db	108	;'l'
   605   00FF5D  65                 	db	101	;'e'
   606   00FF5E  6D                 	db	109	;'m'
   607   00FF5F  65                 	db	101	;'e'
   608   00FF60  6E                 	db	110	;'n'
   609   00FF61  74                 	db	116	;'t'
   610   00FF62  6F                 	db	111	;'o'
   611   00FF63  76                 	db	118	;'v'
   612   00FF64  61                 	db	97	;'a'
   613   00FF65  6E                 	db	110	;'n'
   614   00FF66  6F                 	db	111	;'o'
   615   00FF67  20                 	db	32
   616   00FF68  20                 	db	32
   617   00FF69  00                 	db	0
   618   00FF6A                     STR_10:
   619   00FF6A  52                 	db	82	;'R'
   620   00FF6B  42                 	db	66	;'B'
   621   00FF6C  30                 	db	48	;'0'
   622   00FF6D  2D                 	db	45
   623   00FF6E  41                 	db	65	;'A'
   624   00FF6F  32                 	db	50	;'2'
   625   00FF70  2C                 	db	44
   626   00FF71  20                 	db	32
   627   00FF72  42                 	db	66	;'B'
   628   00FF73  52                 	db	82	;'R'
   629   00FF74  3A                 	db	58	;':'
   630   00FF75  31                 	db	49	;'1'
   631   00FF76  39                 	db	57	;'9'
   632   00FF77  32                 	db	50	;'2'
   633   00FF78  30                 	db	48	;'0'
   634   00FF79  30                 	db	48	;'0'
   635   00FF7A  00                 	db	0
   636   00FF7B                     STR_9:
   637   00FF7B  56                 	db	86	;'V'
   638   00FF7C  6F                 	db	111	;'o'
   639   00FF7D  6C                 	db	108	;'l'
   640   00FF7E  74                 	db	116	;'t'
   641   00FF7F  79                 	db	121	;'y'
   642   00FF80  20                 	db	32
   643   00FF81  6E                 	db	110	;'n'
   644   00FF82  61                 	db	97	;'a'
   645   00FF83  20                 	db	32
   646   00FF84  50                 	db	80	;'P'
   647   00FF85  4F                 	db	79	;'O'
   648   00FF86  54                 	db	84	;'T'
   649   00FF87  65                 	db	101	;'e'
   650   00FF88  63                 	db	99	;'c'
   651   00FF89  68                 	db	104	;'h'
   652   00FF8A  3A                 	db	58	;':'
   653   00FF8B  00                 	db	0
   654   00FF8C                     STR_6:
   655   00FF8C  4B                 	db	75	;'K'
   656   00FF8D  6F                 	db	111	;'o'
   657   00FF8E  6E                 	db	110	;'n'
   658   00FF8F  65                 	db	101	;'e'
   659   00FF90  63                 	db	99	;'c'
   660   00FF91  20                 	db	32
   661   00FF92  2D                 	db	45
   662   00FF93  20                 	db	32
   663   00FF94  6E                 	db	110	;'n'
   664   00FF95  65                 	db	101	;'e'
   665   00FF96  77                 	db	119	;'w'
   666   00FF97  20                 	db	32
   667   00FF98  6C                 	db	108	;'l'
   668   00FF99  69                 	db	105	;'i'
   669   00FF9A  6E                 	db	110	;'n'
   670   00FF9B  65                 	db	101	;'e'
   671   00FF9C  00                 	db	0
   672   00FF9D                     STR_11:
   673   00FF9D  31                 	db	49	;'1'
   674   00FF9E  3A                 	db	58	;':'
   675   00FF9F  74                 	db	116	;'t'
   676   00FFA0  72                 	db	114	;'r'
   677   00FFA1  2C                 	db	44
   678   00FFA2  32                 	db	50	;'2'
   679   00FFA3  3A                 	db	58	;':'
   680   00FFA4  73                 	db	115	;'s'
   681   00FFA5  69                 	db	105	;'i'
   682   00FFA6  6E                 	db	110	;'n'
   683   00FFA7  2C                 	db	44
   684   00FFA8  33                 	db	51	;'3'
   685   00FFA9  3A                 	db	58	;':'
   686   00FFAA  70                 	db	112	;'p'
   687   00FFAB  69                 	db	105	;'i'
   688   00FFAC  6C                 	db	108	;'l'
   689   00FFAD  00                 	db	0
   690   00FFAE                     STR_20:
   691   00FFAE  20                 	db	32
   692   00FFAF  20                 	db	32
   693   00FFB0  20                 	db	32
   694   00FFB1  20                 	db	32
   695   00FFB2  20                 	db	32
   696   00FFB3  20                 	db	32
   697   00FFB4  20                 	db	32
   698   00FFB5  20                 	db	32
   699   00FFB6  20                 	db	32
   700   00FFB7  20                 	db	32
   701   00FFB8  20                 	db	32
   702   00FFB9  50                 	db	80	;'P'
   703   00FFBA  6F                 	db	111	;'o'
   704   00FFBB  7A                 	db	122	;'z'
   705   00FFBC  6F                 	db	111	;'o'
   706   00FFBD  72                 	db	114	;'r'
   707   00FFBE  00                 	db	0
   708   00FFBF                     STR_47:
   709   00FFBF  28                 	db	40
   710   00FFC0  6E                 	db	110	;'n'
   711   00FFC1  75                 	db	117	;'u'
   712   00FFC2  6C                 	db	108	;'l'
   713   00FFC3  6C                 	db	108	;'l'
   714   00FFC4  29                 	db	41
   715   00FFC5  00                 	db	0
   716   00FFC6                     STR_30:
   717   00FFC6  4D                 	db	77	;'M'
   718   00FFC7  55                 	db	85	;'U'
   719   00FFC8  53                 	db	83	;'S'
   720   00FFC9  49                 	db	73	;'I'
   721   00FFCA  43                 	db	67	;'C'
   722   00FFCB  00                 	db	0
   723   00FFCC                     STR_32:
   724   00FFCC  3E                 	db	62	;'>'
   725   00FFCD  25                 	db	37
   726   00FFCE  2D                 	db	45
   727   00FFCF  2A                 	db	42
   728   00FFD0  73                 	db	115	;'s'
   729   00FFD1  00                 	db	0
   730   00FFD2                     STR_35:
   731   00FFD2  25                 	db	37
   732   00FFD3  73                 	db	115	;'s'
   733   00FFD4  20                 	db	32
   734   00FFD5  0A                 	db	10
   735   00FFD6  00                 	db	0
   736   00FFD7                     STR_29:
   737   00FFD7  47                 	db	71	;'G'
   738   00FFD8  41                 	db	65	;'A'
   739   00FFD9  4D                 	db	77	;'M'
   740   00FFDA  45                 	db	69	;'E'
   741   00FFDB  00                 	db	0
   742   00FFDC                     STR_24:
   743   00FFDC  47                 	db	71	;'G'
   744   00FFDD  50                 	db	80	;'P'
   745   00FFDE  49                 	db	73	;'I'
   746   00FFDF  4F                 	db	79	;'O'
   747   00FFE0  00                 	db	0
   748   00FFE1                     STR_25:
   749   00FFE1  55                 	db	85	;'U'
   750   00FFE2  41                 	db	65	;'A'
   751   00FFE3  52                 	db	82	;'R'
   752   00FFE4  54                 	db	84	;'T'
   753   00FFE5  00                 	db	0
   754   00FFE6                     STR_23:
   755   00FFE6  25                 	db	37
   756   00FFE7  64                 	db	100	;'d'
   757   00FFE8  20                 	db	32
   758   00FFE9  0D                 	db	13
   759   00FFEA  00                 	db	0
   760   00FFEB                     STR_41:
   761   00FFEB  69                 	db	105	;'i'
   762   00FFEC  6E                 	db	110	;'n'
   763   00FFED  66                 	db	102	;'f'
   764   00FFEE  00                 	db	0
   765   00FFEF                     STR_44:
   766   00FFEF  6E                 	db	110	;'n'
   767   00FFF0  61                 	db	97	;'a'
   768   00FFF1  6E                 	db	110	;'n'
   769   00FFF2  00                 	db	0
   770   00FFF3                     STR_28:
   771   00FFF3  44                 	db	68	;'D'
   772   00FFF4  41                 	db	65	;'A'
   773   00FFF5  43                 	db	67	;'C'
   774   00FFF6  00                 	db	0
   775   00FFF7                     STR_27:
   776   00FFF7  41                 	db	65	;'A'
   777   00FFF8  44                 	db	68	;'D'
   778   00FFF9  43                 	db	67	;'C'
   779   00FFFA  00                 	db	0
   780   00FFFB                     STR_26:
   781   00FFFB  50                 	db	80	;'P'
   782   00FFFC  57                 	db	87	;'W'
   783   00FFFD  4D                 	db	77	;'M'
   784   00FFFE  00                 	db	0
   785   00FFFF  00                 	db	0	; dummy byte at the end
   786   000000                     
   787                           ; #config settings
   788                           
   789                           	psect	cinit
   790   004F22                     __pcinit:
   791                           	callstack 0
   792   004F22                     start_initialization:
   793                           	callstack 0
   794   004F22                     __initialization:
   795                           	callstack 0
   796                           
   797                           ; Initialize objects allocated to BANK1 (40 bytes)
   798                           ; load TBLPTR registers with __pidataBANK1
   799   004F22  0E66               	movlw	low __pidataBANK1
   800   004F24  6EF6               	movwf	tblptrl,c
   801   004F26  0E52               	movlw	high __pidataBANK1
   802   004F28  6EF7               	movwf	tblptrh,c
   803   004F2A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   804   004F2C  6EF8               	movwf	tblptru,c
   805   004F2E  EE01  F0CE         	lfsr	0,__pdataBANK1
   806   004F32  EE10 F028          	lfsr	1,40
   807   004F36                     copy_data0:
   808   004F36  0009               	tblrd		*+
   809   004F38  CFF5 FFEE          	movff	tablat,postinc0
   810   004F3C  50E5               	movf	postdec1,w,c
   811   004F3E  50E1               	movf	fsr1l,w,c
   812   004F40  E1FA               	bnz	copy_data0
   813                           
   814                           ; Clear objects allocated to BANK2 (42 bytes)
   815   004F42  EE02  F000         	lfsr	0,__pbssBANK2
   816   004F46  0E2A               	movlw	42
   817   004F48                     clear_0:
   818   004F48  6AEE               	clrf	postinc0,c
   819   004F4A  06E8               	decf	wreg,f,c
   820   004F4C  E1FD               	bnz	clear_0
   821                           
   822                           ; Clear objects allocated to BANK1 (155 bytes)
   823   004F4E  EE01  F000         	lfsr	0,__pbssBANK1
   824   004F52  0E9B               	movlw	155
   825   004F54                     clear_1:
   826   004F54  6AEE               	clrf	postinc0,c
   827   004F56  06E8               	decf	wreg,f,c
   828   004F58  E1FD               	bnz	clear_1
   829                           
   830                           ; Clear objects allocated to BANK0 (1 bytes)
   831   004F5A  0100               	movlb	0
   832   004F5C  6BFE               	clrf	__pbssBANK0& (0+255),b
   833                           
   834                           ; Clear objects allocated to COMRAM (5 bytes)
   835   004F5E  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   836   004F60  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   837   004F62  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   838   004F64  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   839   004F66  6A55               	clrf	__pbssCOMRAM& (0+255),c
   840   004F68                     end_of_initialization:
   841                           	callstack 0
   842   004F68                     __end_of__initialization:
   843                           	callstack 0
   844   004F68  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   845   004F6A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   846   004F6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   847   004F6E  6EF8               	movwf	tblptru,c
   848   004F70  0100               	movlb	0
   849   004F72  EF4A  F011         	goto	_main	;jump to C main() function
   850                           
   851                           	psect	bssCOMRAM
   852   000055                     __pbssCOMRAM:
   853                           	callstack 0
   854   000055                     _width:
   855                           	callstack 0
   856   000055                     	ds	2
   857   000057                     _prec:
   858                           	callstack 0
   859   000057                     	ds	2
   860   000059                     _flags:
   861                           	callstack 0
   862   000059                     	ds	1
   863                           
   864                           	psect	bssBANK0
   865   0000FE                     __pbssBANK0:
   866                           	callstack 0
   867   0000FE                     _keepStateGPIO:
   868                           	callstack 0
   869   0000FE                     	ds	1
   870                           
   871                           	psect	bssBANK1
   872   000100                     __pbssBANK1:
   873                           	callstack 0
   874   000100                     	ds	17
   875   000111                     fabsf@F465:
   876                           	callstack 0
   877   000111                     	ds	4
   878   000115                     ___rem_pio2f@F526:
   879                           	callstack 0
   880   000115                     	ds	4
   881   000119                     floorf@F521:
   882                           	callstack 0
   883   000119                     	ds	4
   884   00011D                     ___fpclassifyf@F465:
   885                           	callstack 0
   886   00011D                     	ds	4
   887   000121                     ISR@i:
   888                           	callstack 0
   889   000121                     	ds	2
   890   000123                     _GAMEtime:
   891                           	callstack 0
   892   000123                     	ds	1
   893   000124                     _GAMEIE:
   894                           	callstack 0
   895   000124                     	ds	1
   896   000125                     _UARTIE:
   897                           	callstack 0
   898   000125                     	ds	1
   899   000126                     _GPIOIE:
   900                           	callstack 0
   901   000126                     	ds	1
   902   000127                     _dbuf:
   903                           	callstack 0
   904   000127                     	ds	80
   905   000177                     _gmail:
   906                           	callstack 0
   907   000177                     	ds	32
   908   000197                     _seed:
   909                           	callstack 0
   910   000197                     	ds	4
   911                           
   912                           	psect	dataBANK1
   913   0001CE                     __pdataBANK1:
   914                           	callstack 0
   915   0001CE                     moveDisplay@F6965:
   916                           	callstack 0
   917   0001CE                     	ds	16
   918   0001DE                     runGPIO@F6993:
   919                           	callstack 0
   920   0001DE                     	ds	12
   921   0001EA                     runGPIO@F6975:
   922                           	callstack 0
   923   0001EA                     	ds	12
   924                           
   925                           	psect	bssBANK2
   926   000200                     __pbssBANK2:
   927                           	callstack 0
   928   000200                     	ds	25
   929   000219                     	ds	17
   930                           
   931                           	psect	cstackBANK1
   932   00019B                     __pcstackBANK1:
   933                           	callstack 0
   934   00019B                     moveDisplay@menuItem1:
   935                           	callstack 0
   936   00019B                     runADC@text:
   937                           	callstack 0
   938   00019B                     runGAME@text:
   939                           	callstack 0
   940                           
   941                           ; 17 bytes @ 0x0
   942   00019B                     	ds	17
   943   0001AC                     runADC@voltage1:
   944                           	callstack 0
   945   0001AC                     moveDisplay@menuItem2:
   946                           	callstack 0
   947   0001AC                     runGAME@approxText:
   948                           	callstack 0
   949                           
   950                           ; 25 bytes @ 0x11
   951   0001AC                     	ds	4
   952   0001B0                     runADC@voltage2:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x15
   956   0001B0                     	ds	4
   957   0001B4                     runADC@pot1:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x19
   961   0001B4                     	ds	2
   962   0001B6                     runADC@pot2:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x1B
   966   0001B6                     	ds	2
   967   0001B8                     runADC@keepState:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x1D
   971   0001B8                     	ds	5
   972   0001BD                     moveDisplay@menuItems:
   973                           	callstack 0
   974                           
   975                           ; 16 bytes @ 0x22
   976   0001BD                     	ds	8
   977   0001C5                     runGAME@keepStateGAME:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x2A
   981   0001C5                     	ds	1
   982   0001C6                     runGAME@GAMEpart:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x2B
   986   0001C6                     	ds	1
   987   0001C7                     runGAME@GAMEround:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x2C
   991   0001C7                     	ds	1
   992   0001C8                     runGAME@GAMEdivider:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x2D
   996   0001C8                     	ds	1
   997   0001C9                     runGAME@pot1:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x2E
  1001   0001C9                     	ds	2
  1002   0001CB                     runGAME@randomNumber:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x30
  1006   0001CB                     	ds	2
  1007   0001CD                     moveDisplay@menuI:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x32
  1011   0001CD                     	ds	1
  1012                           
  1013                           	psect	cstackBANK0
  1014   000060                     __pcstackBANK0:
  1015                           	callstack 0
  1016   000060                     ___fladd@signs:
  1017                           	callstack 0
  1018   000060                     floorf@m:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022   000060                     	ds	1
  1023   000061                     ___fladd@aexp:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x1
  1027   000061                     	ds	1
  1028   000062                     ___fladd@bexp:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x2
  1032   000062                     	ds	1
  1033   000063                     ___fladd@grs:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x3
  1037   000063                     	ds	1
  1038   000064                     ?___flsub:
  1039                           	callstack 0
  1040   000064                     ?___sindf:
  1041                           	callstack 0
  1042   000064                     ?___cosdf:
  1043                           	callstack 0
  1044   000064                     ?___fltol:
  1045                           	callstack 0
  1046   000064                     floorf@e:
  1047                           	callstack 0
  1048   000064                     ___fltol@f1:
  1049                           	callstack 0
  1050   000064                     ___flsub@b:
  1051                           	callstack 0
  1052   000064                     ___cosdf@x:
  1053                           	callstack 0
  1054   000064                     ___sindf@x:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x4
  1058   000064                     	ds	2
  1059   000066                     floorf@u:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063   000066                     	ds	2
  1064   000068                     ??___fltol:
  1065   000068                     ___flsub@a:
  1066                           	callstack 0
  1067   000068                     ___cosdf@r:
  1068                           	callstack 0
  1069   000068                     ___sindf@r:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x8
  1073   000068                     	ds	4
  1074   00006C                     ___sindf@w:
  1075                           	callstack 0
  1076   00006C                     ___cosdf$4535:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0xC
  1080   00006C                     	ds	4
  1081   000070                     ___cosdf$4536:
  1082                           	callstack 0
  1083   000070                     ___sindf$4539:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x10
  1087   000070                     	ds	4
  1088   000074                     ___cosdf$4537:
  1089                           	callstack 0
  1090   000074                     ___sindf$4540:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x14
  1094   000074                     	ds	4
  1095   000078                     ___cosdf@w:
  1096                           	callstack 0
  1097   000078                     ___sindf$4541:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x18
  1101   000078                     	ds	4
  1102   00007C                     ___cosdf@z:
  1103                           	callstack 0
  1104   00007C                     ___sindf@s:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x1C
  1108   00007C                     	ds	4
  1109   000080                     ?___flneg:
  1110                           	callstack 0
  1111   000080                     ___flneg@f1:
  1112                           	callstack 0
  1113   000080                     ___sindf@z:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x20
  1117   000080                     	ds	4
  1118   000084                     ?___rem_pio2f:
  1119                           	callstack 0
  1120   000084                     efgtoa@fp:
  1121                           	callstack 0
  1122   000084                     ___rem_pio2f@x:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x24
  1126   000084                     	ds	2
  1127   000086                     efgtoa@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x26
  1131   000086                     	ds	2
  1132   000088                     ___rem_pio2f@y:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x28
  1136   000088                     	ds	1
  1137   000089                     ??___rem_pio2f:
  1138                           
  1139                           ; 1 bytes @ 0x29
  1140   000089                     	ds	1
  1141   00008A                     efgtoa@c:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x2A
  1145   00008A                     	ds	1
  1146   00008B                     ??_efgtoa:
  1147   00008B                     ___rem_pio2f@ty:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x2B
  1151   00008B                     	ds	2
  1152   00008D                     efgtoa@ne:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x2D
  1156   00008D                     	ds	2
  1157   00008F                     efgtoa@p:
  1158                           	callstack 0
  1159   00008F                     ___rem_pio2f$4538:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x2F
  1163   00008F                     	ds	2
  1164   000091                     efgtoa@t:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x31
  1168   000091                     	ds	2
  1169   000093                     ___rem_pio2f@sign:
  1170                           	callstack 0
  1171   000093                     _efgtoa$4075:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x33
  1175   000093                     	ds	1
  1176   000094                     ___rem_pio2f@ux:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x34
  1180   000094                     	ds	1
  1181   000095                     efgtoa@pp:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x35
  1185   000095                     	ds	1
  1186   000096                     efgtoa@mode:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x36
  1190   000096                     	ds	1
  1191   000097                     efgtoa@nmode:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x37
  1195   000097                     	ds	1
  1196   000098                     efgtoa@d:
  1197                           	callstack 0
  1198   000098                     ___rem_pio2f@fn:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x38
  1202   000098                     	ds	2
  1203   00009A                     efgtoa@m:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x3A
  1207   00009A                     	ds	2
  1208   00009C                     efgtoa@e:
  1209                           	callstack 0
  1210   00009C                     ___rem_pio2f@t:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x3C
  1214   00009C                     	ds	2
  1215   00009E                     efgtoa@w:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x3E
  1219   00009E                     	ds	2
  1220   0000A0                     efgtoa@ou:
  1221                           	callstack 0
  1222   0000A0                     ___rem_pio2f@n:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x40
  1226   0000A0                     	ds	4
  1227   0000A4                     ?_sinf:
  1228                           	callstack 0
  1229   0000A4                     efgtoa@i:
  1230                           	callstack 0
  1231   0000A4                     sinf@x:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x44
  1235   0000A4                     	ds	2
  1236   0000A6                     efgtoa@h:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x46
  1240   0000A6                     	ds	2
  1241   0000A8                     _sinf$4250:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x48
  1245   0000A8                     	ds	2
  1246   0000AA                     efgtoa@l:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x4A
  1250   0000AA                     	ds	2
  1251   0000AC                     _sinf$4251:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x4C
  1255   0000AC                     	ds	2
  1256   0000AE                     efgtoa@sign:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x4E
  1260   0000AE                     	ds	1
  1261   0000AF                     efgtoa@g:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x4F
  1265   0000AF                     	ds	1
  1266   0000B0                     sinf@n:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x50
  1270   0000B0                     	ds	1
  1271   0000B1                     sinf@sign:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x51
  1275   0000B1                     	ds	1
  1276   0000B2                     _sinf$4534:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x52
  1280   0000B2                     	ds	1
  1281   0000B3                     efgtoa@n:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x53
  1285   0000B3                     	ds	2
  1286   0000B5                     efgtoa@u:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x55
  1290   0000B5                     	ds	1
  1291   0000B6                     sinf@y:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x56
  1295   0000B6                     	ds	3
  1296   0000B9                     vfpfcnvrt@fp:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x59
  1300   0000B9                     	ds	1
  1301   0000BA                     sinf@ux:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x5A
  1305   0000BA                     	ds	1
  1306   0000BB                     vfpfcnvrt@fmt:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x5B
  1310   0000BB                     	ds	1
  1311   0000BC                     vfpfcnvrt@ap:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x5C
  1315   0000BC                     	ds	1
  1316   0000BD                     ??_vfpfcnvrt:
  1317                           
  1318                           ; 1 bytes @ 0x5D
  1319   0000BD                     	ds	2
  1320   0000BF                     vfpfcnvrt@done:
  1321                           	callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x5F
  1324   0000BF                     	ds	1
  1325   0000C0                     vfpfcnvrt@convarg:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x60
  1329   0000C0                     	ds	4
  1330   0000C4                     vfpfcnvrt@c:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x64
  1334   0000C4                     	ds	1
  1335   0000C5                     vfpfcnvrt@cp:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x65
  1339   0000C5                     	ds	2
  1340   0000C7                     ?_vfprintf:
  1341                           	callstack 0
  1342   0000C7                     vfprintf@fp:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x67
  1346   0000C7                     	ds	2
  1347   0000C9                     vfprintf@fmt:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x69
  1351   0000C9                     	ds	2
  1352   0000CB                     vfprintf@ap:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x6B
  1356   0000CB                     	ds	1
  1357   0000CC                     vfprintf@cfmt:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x6C
  1361   0000CC                     	ds	2
  1362   0000CE                     ?_printf:
  1363                           	callstack 0
  1364   0000CE                     ?_sprintf:
  1365                           	callstack 0
  1366   0000CE                     sprintf@s:
  1367                           	callstack 0
  1368   0000CE                     printf@fmt:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x6E
  1372   0000CE                     	ds	2
  1373   0000D0                     sprintf@fmt:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x70
  1377   0000D0                     	ds	2
  1378   0000D2                     ??_runUART:
  1379   0000D2                     ??_runDAC:
  1380                           
  1381                           ; 1 bytes @ 0x72
  1382   0000D2                     	ds	1
  1383   0000D3                     _runDAC$4531:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x73
  1387   0000D3                     	ds	1
  1388   0000D4                     runUART@reversed:
  1389                           	callstack 0
  1390                           
  1391                           ; 31 bytes @ 0x74
  1392   0000D4                     	ds	3
  1393   0000D7                     _runDAC$4532:
  1394                           	callstack 0
  1395                           
  1396                           ; 4 bytes @ 0x77
  1397   0000D7                     	ds	3
  1398   0000DA                     sprintf@ap:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x7A
  1402   0000DA                     	ds	1
  1403   0000DB                     runDAC@keepState:
  1404                           	callstack 0
  1405   0000DB                     sprintf@f:
  1406                           	callstack 0
  1407                           
  1408                           ; 12 bytes @ 0x7B
  1409   0000DB                     	ds	1
  1410   0000DC                     runDAC@selectModeDAC:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x7C
  1414   0000DC                     	ds	1
  1415   0000DD                     runDAC@DACindex:
  1416                           	callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x7D
  1419   0000DD                     	ds	10
  1420   0000E7                     ??_runADC:
  1421   0000E7                     ??_runGAME:
  1422   0000E7                     moveDisplay@where:
  1423                           	callstack 0
  1424                           
  1425                           ; 1 bytes @ 0x87
  1426   0000E7                     	ds	1
  1427   0000E8                     ??_moveDisplay:
  1428                           
  1429                           ; 1 bytes @ 0x88
  1430   0000E8                     	ds	11
  1431   0000F3                     runUART@keepState:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x93
  1435   0000F3                     	ds	1
  1436   0000F4                     runUART@len:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x94
  1440   0000F4                     	ds	2
  1441   0000F6                     runUART@i:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x96
  1445   0000F6                     	ds	2
  1446   0000F8                     runUART@p:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x98
  1450   0000F8                     	ds	2
  1451   0000FA                     ??_main:
  1452                           
  1453                           ; 1 bytes @ 0x9A
  1454   0000FA                     	ds	2
  1455   0000FC                     main@setUpAgain:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x9C
  1459   0000FC                     	ds	1
  1460   0000FD                     main@menuI:
  1461                           	callstack 0
  1462                           
  1463                           ; 1 bytes @ 0x9D
  1464   0000FD                     	ds	1
  1465                           
  1466                           	psect	cstackCOMRAM
  1467   000001                     __pcstackCOMRAM:
  1468                           	callstack 0
  1469   000001                     ??_ISR:
  1470                           
  1471                           ; 1 bytes @ 0x0
  1472   000001                     	ds	4
  1473   000005                     ISR@temp:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x4
  1477   000005                     	ds	1
  1478   000006                     ?_strlen:
  1479                           	callstack 0
  1480   000006                     ?___fpclassifyf:
  1481                           	callstack 0
  1482   000006                     ?___wmul:
  1483                           	callstack 0
  1484   000006                     ?___awmod:
  1485                           	callstack 0
  1486   000006                     ?___lwdiv:
  1487                           	callstack 0
  1488   000006                     ?___lwmod:
  1489                           	callstack 0
  1490   000006                     ?_labs:
  1491                           	callstack 0
  1492   000006                     ?_fabsf:
  1493                           	callstack 0
  1494   000006                     ?___lmul:
  1495                           	callstack 0
  1496   000006                     ?___xxtofl:
  1497                           	callstack 0
  1498   000006                     LCD_Send@data:
  1499                           	callstack 0
  1500   000006                     SPI_write@MSB:
  1501                           	callstack 0
  1502   000006                     putch@data:
  1503                           	callstack 0
  1504   000006                     LED1_Control@state:
  1505                           	callstack 0
  1506   000006                     LED2_Control@state:
  1507                           	callstack 0
  1508   000006                     LED3_Control@state:
  1509                           	callstack 0
  1510   000006                     LED4_Control@state:
  1511                           	callstack 0
  1512   000006                     LED5_Control@state:
  1513                           	callstack 0
  1514   000006                     LED6_Control@state:
  1515                           	callstack 0
  1516   000006                     ___lbdiv@divisor:
  1517                           	callstack 0
  1518   000006                     ___wmul@multiplier:
  1519                           	callstack 0
  1520   000006                     ___awmod@dividend:
  1521                           	callstack 0
  1522   000006                     ___lwdiv@dividend:
  1523                           	callstack 0
  1524   000006                     ___lwmod@dividend:
  1525                           	callstack 0
  1526   000006                     memcpy@d1:
  1527                           	callstack 0
  1528   000006                     strcpy@dest:
  1529                           	callstack 0
  1530   000006                     strlen@s:
  1531                           	callstack 0
  1532   000006                     ___lmul@multiplier:
  1533                           	callstack 0
  1534   000006                     ___fleq@ff1:
  1535                           	callstack 0
  1536   000006                     ___xxtofl@val:
  1537                           	callstack 0
  1538   000006                     ___fpclassifyf@x:
  1539                           	callstack 0
  1540   000006                     labs@a:
  1541                           	callstack 0
  1542   000006                     fabsf@x:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x5
  1546   000006                     	ds	1
  1547   000007                     ??_LCD_Init:
  1548   000007                     ??_runGPIO:
  1549   000007                     SPI_write@LSB:
  1550                           	callstack 0
  1551   000007                     ___lbdiv@dividend:
  1552                           	callstack 0
  1553   000007                     LCD_ShowString@textData:
  1554                           	callstack 0
  1555   000007                     fputc@c:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x6
  1559   000007                     	ds	1
  1560   000008                     SPI_write@data:
  1561                           	callstack 0
  1562   000008                     ___lbdiv@counter:
  1563                           	callstack 0
  1564   000008                     ___wmul@multiplicand:
  1565                           	callstack 0
  1566   000008                     ___awmod@divisor:
  1567                           	callstack 0
  1568   000008                     ___lwdiv@divisor:
  1569                           	callstack 0
  1570   000008                     ___lwmod@divisor:
  1571                           	callstack 0
  1572   000008                     memcpy@s1:
  1573                           	callstack 0
  1574   000008                     strcpy@src:
  1575                           	callstack 0
  1576   000008                     strlen@a:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x7
  1580   000008                     	ds	1
  1581   000009                     ??_LCD_ShowString:
  1582   000009                     ___lbdiv@quotient:
  1583                           	callstack 0
  1584   000009                     fputc@fp:
  1585                           	callstack 0
  1586   000009                     runGPIO@states:
  1587                           	callstack 0
  1588                           
  1589                           ; 12 bytes @ 0x8
  1590   000009                     	ds	1
  1591   00000A                     ??___fpclassifyf:
  1592   00000A                     ??_labs:
  1593   00000A                     ??___xxtofl:
  1594   00000A                     ___awmod@counter:
  1595                           	callstack 0
  1596   00000A                     ___lwdiv@counter:
  1597                           	callstack 0
  1598   00000A                     ___lwmod@counter:
  1599                           	callstack 0
  1600   00000A                     ___wmul@product:
  1601                           	callstack 0
  1602   00000A                     memcpy@n:
  1603                           	callstack 0
  1604   00000A                     strcpy@d:
  1605                           	callstack 0
  1606   00000A                     ___lmul@multiplicand:
  1607                           	callstack 0
  1608   00000A                     ___fleq@ff2:
  1609                           	callstack 0
  1610   00000A                     fabsf@u:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x9
  1614   00000A                     	ds	1
  1615   00000B                     ??_fputc:
  1616   00000B                     LCD_ShowString@lineNum:
  1617                           	callstack 0
  1618   00000B                     ___awmod@sign:
  1619                           	callstack 0
  1620   00000B                     ___lwdiv@quotient:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0xA
  1624   00000B                     	ds	1
  1625   00000C                     ?_abs:
  1626                           	callstack 0
  1627   00000C                     ?_read_prec_or_width:
  1628                           	callstack 0
  1629   00000C                     LCD_ShowString@i:
  1630                           	callstack 0
  1631   00000C                     read_prec_or_width@fmt:
  1632                           	callstack 0
  1633   00000C                     memcpy@tmp:
  1634                           	callstack 0
  1635   00000C                     abs@a:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0xB
  1639   00000C                     	ds	1
  1640   00000D                     read_prec_or_width@ap:
  1641                           	callstack 0
  1642   00000D                     memcpy@d:
  1643                           	callstack 0
  1644                           
  1645                           ; 2 bytes @ 0xC
  1646   00000D                     	ds	1
  1647   00000E                     ??_abs:
  1648   00000E                     ??___fleq:
  1649   00000E                     ___xxtofl@sign:
  1650                           	callstack 0
  1651   00000E                     read_prec_or_width@c:
  1652                           	callstack 0
  1653   00000E                     ___fpclassifyf@e:
  1654                           	callstack 0
  1655   00000E                     ___lmul@product:
  1656                           	callstack 0
  1657                           
  1658                           ; 4 bytes @ 0xD
  1659   00000E                     	ds	1
  1660   00000F                     ___xxtofl@exp:
  1661                           	callstack 0
  1662   00000F                     read_prec_or_width@n:
  1663                           	callstack 0
  1664   00000F                     memcpy@s:
  1665                           	callstack 0
  1666                           
  1667                           ; 2 bytes @ 0xE
  1668   00000F                     	ds	1
  1669   000010                     stoa@fp:
  1670                           	callstack 0
  1671   000010                     fputs@s:
  1672                           	callstack 0
  1673   000010                     ___xxtofl@arg:
  1674                           	callstack 0
  1675   000010                     ___fpclassifyf@u:
  1676                           	callstack 0
  1677                           
  1678                           ; 4 bytes @ 0xF
  1679   000010                     	ds	2
  1680   000012                     ?_rand:
  1681                           	callstack 0
  1682   000012                     stoa@s:
  1683                           	callstack 0
  1684   000012                     fputs@fp:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x11
  1688   000012                     	ds	2
  1689   000014                     ??_rand:
  1690   000014                     ??_stoa:
  1691   000014                     ?___flmul:
  1692                           	callstack 0
  1693   000014                     fputs@c:
  1694                           	callstack 0
  1695   000014                     ___flmul@b:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x13
  1699   000014                     	ds	1
  1700   000015                     fputs@i:
  1701                           	callstack 0
  1702   000015                     runGPIO@LEDControl:
  1703                           	callstack 0
  1704                           
  1705                           ; 12 bytes @ 0x14
  1706   000015                     	ds	1
  1707   000016                     stoa@p:
  1708                           	callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x15
  1711   000016                     	ds	1
  1712   000017                     pad@fp:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x16
  1716   000017                     	ds	1
  1717   000018                     ?___awdiv:
  1718                           	callstack 0
  1719   000018                     ___awdiv@dividend:
  1720                           	callstack 0
  1721   000018                     stoa@w:
  1722                           	callstack 0
  1723   000018                     ___flmul@a:
  1724                           	callstack 0
  1725                           
  1726                           ; 4 bytes @ 0x17
  1727   000018                     	ds	1
  1728   000019                     pad@buf:
  1729                           	callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x18
  1732   000019                     	ds	1
  1733   00001A                     ___awdiv@divisor:
  1734                           	callstack 0
  1735   00001A                     stoa@cp:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x19
  1739   00001A                     	ds	1
  1740   00001B                     pad@p:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x1A
  1744   00001B                     	ds	1
  1745   00001C                     ??___flmul:
  1746   00001C                     ___awdiv@counter:
  1747                           	callstack 0
  1748   00001C                     stoa@l:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x1B
  1752   00001C                     	ds	1
  1753   00001D                     ??_pad:
  1754   00001D                     ___awdiv@sign:
  1755                           	callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x1C
  1758   00001D                     	ds	1
  1759   00001E                     ___awdiv@quotient:
  1760                           	callstack 0
  1761   00001E                     pad@i:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x1D
  1765   00001E                     	ds	2
  1766   000020                     ??_runPWM:
  1767   000020                     ___flmul@sign:
  1768                           	callstack 0
  1769   000020                     dtoa@fp:
  1770                           	callstack 0
  1771   000020                     utoa@fp:
  1772                           	callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x1F
  1775   000020                     	ds	1
  1776   000021                     ___flmul@aexp:
  1777                           	callstack 0
  1778   000021                     runGPIO@numberOfStates:
  1779                           	callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x20
  1782   000021                     	ds	1
  1783   000022                     runPWM@keepState:
  1784                           	callstack 0
  1785   000022                     dtoa@d:
  1786                           	callstack 0
  1787   000022                     utoa@d:
  1788                           	callstack 0
  1789   000022                     ___flmul@grs:
  1790                           	callstack 0
  1791                           
  1792                           ; 4 bytes @ 0x21
  1793   000022                     	ds	1
  1794   000023                     runGPIO@GPIOi:
  1795                           	callstack 0
  1796   000023                     runPWM@multiplier:
  1797                           	callstack 0
  1798                           
  1799                           ; 1 bytes @ 0x22
  1800   000023                     	ds	1
  1801   000024                     runGPIO@j:
  1802                           	callstack 0
  1803   000024                     _dtoa$4044:
  1804                           	callstack 0
  1805   000024                     utoa@w:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x23
  1809   000024                     	ds	2
  1810   000026                     ___flmul@bexp:
  1811                           	callstack 0
  1812   000026                     dtoa@w:
  1813                           	callstack 0
  1814   000026                     utoa@p:
  1815                           	callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x25
  1818   000026                     	ds	1
  1819   000027                     ___flmul@prod:
  1820                           	callstack 0
  1821                           
  1822                           ; 4 bytes @ 0x26
  1823   000027                     	ds	1
  1824   000028                     dtoa@p:
  1825                           	callstack 0
  1826   000028                     utoa@i:
  1827                           	callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x27
  1830   000028                     	ds	2
  1831   00002A                     dtoa@s:
  1832                           	callstack 0
  1833                           
  1834                           ; 1 bytes @ 0x29
  1835   00002A                     	ds	1
  1836   00002B                     ___flmul@temp:
  1837                           	callstack 0
  1838   00002B                     dtoa@i:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x2A
  1842   00002B                     	ds	2
  1843   00002D                     ?___fldiv:
  1844                           	callstack 0
  1845   00002D                     ___flge@ff1:
  1846                           	callstack 0
  1847   00002D                     ___fldiv@b:
  1848                           	callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x2C
  1851   00002D                     	ds	4
  1852   000031                     ___flge@ff2:
  1853                           	callstack 0
  1854   000031                     ___fldiv@a:
  1855                           	callstack 0
  1856                           
  1857                           ; 4 bytes @ 0x30
  1858   000031                     	ds	4
  1859   000035                     ??___fldiv:
  1860   000035                     ??___flge:
  1861                           
  1862                           ; 1 bytes @ 0x34
  1863   000035                     	ds	4
  1864   000039                     ___fldiv@rem:
  1865                           	callstack 0
  1866                           
  1867                           ; 4 bytes @ 0x38
  1868   000039                     	ds	4
  1869   00003D                     ___fldiv@sign:
  1870                           	callstack 0
  1871                           
  1872                           ; 1 bytes @ 0x3C
  1873   00003D                     	ds	1
  1874   00003E                     ___fldiv@new_exp:
  1875                           	callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x3D
  1878   00003E                     	ds	2
  1879   000040                     ___fldiv@grs:
  1880                           	callstack 0
  1881                           
  1882                           ; 4 bytes @ 0x3F
  1883   000040                     	ds	4
  1884   000044                     ___fldiv@bexp:
  1885                           	callstack 0
  1886                           
  1887                           ; 1 bytes @ 0x43
  1888   000044                     	ds	1
  1889   000045                     ___fldiv@aexp:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x44
  1893   000045                     	ds	1
  1894   000046                     ?___fladd:
  1895                           	callstack 0
  1896   000046                     ?_floorf:
  1897                           	callstack 0
  1898   000046                     ___fladd@b:
  1899                           	callstack 0
  1900   000046                     floorf@x:
  1901                           	callstack 0
  1902                           
  1903                           ; 4 bytes @ 0x45
  1904   000046                     	ds	4
  1905   00004A                     ??_floorf:
  1906   00004A                     ___fladd@a:
  1907                           	callstack 0
  1908                           
  1909                           ; 4 bytes @ 0x49
  1910   00004A                     	ds	4
  1911   00004E                     ??___fladd:
  1912                           
  1913                           ; 1 bytes @ 0x4D
  1914   00004E                     	ds	4
  1915   000052                     ___fltol@sign1:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x51
  1919   000052                     	ds	1
  1920   000053                     ___fltol@exp1:
  1921                           	callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x52
  1924   000053                     	ds	1
  1925   000054                     printf@ap:
  1926                           	callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x53
  1929   000054                     	ds	1
  1930                           
  1931 ;;
  1932 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1933 ;;
  1934 ;; *************** function _main *****************
  1935 ;; Defined at:
  1936 ;;		line 10 in file "main.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  menuI           1  157[BANK0 ] unsigned char 
  1941 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels required when called: 10
  1957 ;; This function calls:
  1958 ;;		_LCD_Init
  1959 ;;		_LCD_ShowString
  1960 ;;		_moveDisplay
  1961 ;;		_runADC
  1962 ;;		_runDAC
  1963 ;;		_runGAME
  1964 ;;		_runGPIO
  1965 ;;		_runMUSIC
  1966 ;;		_runPWM
  1967 ;;		_runUART
  1968 ;; This function is called by:
  1969 ;;		Startup code after reset
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text0
  1974   002294                     __ptext0:
  1975                           	callstack 0
  1976   002294                     _main:
  1977                           	callstack 21
  1978   002294                     
  1979                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1980   002294  0E05               	movlw	5
  1981   002296  0100               	movlb	0	; () banked
  1982   002298  6FFB               	movwf	(??_main+1)& (0+255),b
  1983   00229A  0E0F               	movlw	15
  1984   00229C  6FFA               	movwf	??_main& (0+255),b
  1985   00229E  0EF1               	movlw	241
  1986   0022A0                     u10357:
  1987   0022A0  2EE8               	decfsz	wreg,f,c
  1988   0022A2  D7FE               	bra	u10357
  1989   0022A4  2FFA               	decfsz	??_main& (0+255),f,b
  1990   0022A6  D7FC               	bra	u10357
  1991   0022A8  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1992   0022AA  D7FA               	bra	u10357
  1993   0022AC                     
  1994                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1995   0022AC  8094               	bsf	148,0,c	;volatile
  1996   0022AE                     
  1997                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1998   0022AE  8892               	bsf	146,4,c	;volatile
  1999   0022B0                     
  2000                           ;main.c: 15:     TRISAbits.RA3 = 1;
  2001   0022B0  8692               	bsf	146,3,c	;volatile
  2002   0022B2                     
  2003                           ;main.c: 16:     TRISAbits.RA2 = 1;
  2004   0022B2  8492               	bsf	146,2,c	;volatile
  2005   0022B4                     
  2006                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  2007   0022B4  010F               	movlb	15	; () banked
  2008   0022B6  9738               	bcf	56,3,b	;volatile
  2009   0022B8                     
  2010                           ; BSR set to: 15
  2011                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  2012   0022B8  9538               	bcf	56,2,b	;volatile
  2013   0022BA                     
  2014                           ; BSR set to: 15
  2015                           ;main.c: 21:     TRISDbits.RD2 = 0;
  2016   0022BA  9495               	bcf	149,2,c	;volatile
  2017   0022BC                     
  2018                           ; BSR set to: 15
  2019                           ;main.c: 22:     TRISDbits.RD3 = 0;
  2020   0022BC  9695               	bcf	149,3,c	;volatile
  2021   0022BE                     
  2022                           ; BSR set to: 15
  2023                           ;main.c: 23:     TRISCbits.RC4 = 0;
  2024   0022BE  9894               	bcf	148,4,c	;volatile
  2025   0022C0                     
  2026                           ; BSR set to: 15
  2027                           ;main.c: 24:     TRISDbits.RD4 = 0;
  2028   0022C0  9895               	bcf	149,4,c	;volatile
  2029   0022C2                     
  2030                           ; BSR set to: 15
  2031                           ;main.c: 25:     TRISDbits.RD5 = 0;
  2032   0022C2  9A95               	bcf	149,5,c	;volatile
  2033   0022C4                     
  2034                           ; BSR set to: 15
  2035                           ;main.c: 26:     TRISDbits.RD6 = 0;
  2036   0022C4  9C95               	bcf	149,6,c	;volatile
  2037   0022C6                     
  2038                           ; BSR set to: 15
  2039                           ;main.c: 27:     LATDbits.LD2 = 1;
  2040   0022C6  848C               	bsf	140,2,c	;volatile
  2041   0022C8                     
  2042                           ; BSR set to: 15
  2043                           ;main.c: 28:     LATDbits.LD3 = 1;
  2044   0022C8  868C               	bsf	140,3,c	;volatile
  2045   0022CA                     
  2046                           ; BSR set to: 15
  2047                           ;main.c: 29:     LATCbits.LC4 = 1;
  2048   0022CA  888B               	bsf	139,4,c	;volatile
  2049   0022CC                     
  2050                           ; BSR set to: 15
  2051                           ;main.c: 30:     LATDbits.LD4 = 1;
  2052   0022CC  888C               	bsf	140,4,c	;volatile
  2053   0022CE                     
  2054                           ; BSR set to: 15
  2055                           ;main.c: 31:     LATDbits.LD5 = 1;
  2056   0022CE  8A8C               	bsf	140,5,c	;volatile
  2057   0022D0                     
  2058                           ; BSR set to: 15
  2059                           ;main.c: 32:     LATDbits.LD6 = 1;
  2060   0022D0  8C8C               	bsf	140,6,c	;volatile
  2061   0022D2                     
  2062                           ; BSR set to: 15
  2063                           ;main.c: 35:     LCD_Init();
  2064   0022D2  EC80  F023         	call	_LCD_Init	;wreg free
  2065   0022D6                     
  2066                           ;main.c: 36:     uint8_t menuI = 0;
  2067   0022D6  0E00               	movlw	0
  2068   0022D8  0100               	movlb	0	; () banked
  2069   0022DA  6FFD               	movwf	main@menuI& (0+255),b
  2070   0022DC                     
  2071                           ; BSR set to: 0
  2072                           ;main.c: 37:     uint8_t setUpAgain = 0;
  2073   0022DC  0E00               	movlw	0
  2074   0022DE  6FFC               	movwf	main@setUpAgain& (0+255),b
  2075   0022E0                     
  2076                           ; BSR set to: 0
  2077                           ;main.c: 39:     LCD_ShowString((char)1, "Vytvoril:       ");
  2078   0022E0  0EC0               	movlw	low STR_1
  2079   0022E2  6E07               	movwf	LCD_ShowString@textData^0,c
  2080   0022E4  0EFE               	movlw	high STR_1
  2081   0022E6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2082   0022E8  0E01               	movlw	1
  2083   0022EA  ECB4  F024         	call	_LCD_ShowString
  2084   0022EE                     
  2085                           ;main.c: 40:     LCD_ShowString((char)2, "David Strasak   ");
  2086   0022EE  0E26               	movlw	low STR_2
  2087   0022F0  6E07               	movwf	LCD_ShowString@textData^0,c
  2088   0022F2  0EFF               	movlw	high STR_2
  2089   0022F4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2090   0022F6  0E02               	movlw	2
  2091   0022F8  ECB4  F024         	call	_LCD_ShowString
  2092   0022FC                     
  2093                           ;main.c: 41:     _delay((unsigned long)((2000)*(32E6/4000.0)));
  2094   0022FC  0E52               	movlw	82
  2095   0022FE  0100               	movlb	0	; () banked
  2096   002300  6FFB               	movwf	(??_main+1)& (0+255),b
  2097   002302  0E2B               	movlw	43
  2098   002304  6FFA               	movwf	??_main& (0+255),b
  2099   002306  0E00               	movlw	0
  2100   002308                     u10367:
  2101   002308  2EE8               	decfsz	wreg,f,c
  2102   00230A  D7FE               	bra	u10367
  2103   00230C  2FFA               	decfsz	??_main& (0+255),f,b
  2104   00230E  D7FC               	bra	u10367
  2105   002310  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2106   002312  D7FA               	bra	u10367
  2107   002314  0000               	nop	
  2108   002316                     
  2109                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  2110   002316  0E00               	movlw	0
  2111   002318  0100               	movlb	0	; () banked
  2112   00231A  6FE7               	movwf	moveDisplay@where& (0+255),b
  2113   00231C  51FD               	movf	main@menuI& (0+255),w,b
  2114   00231E  ECFA  F020         	call	_moveDisplay
  2115   002322  0100               	movlb	0	; () banked
  2116   002324  6FFD               	movwf	main@menuI& (0+255),b
  2117   002326                     l8448:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 47:         if(PORTCbits.RC0){
  2121   002326  A082               	btfss	130,0,c	;volatile
  2122   002328  EF98  F011         	goto	u10251
  2123   00232C  EF9A  F011         	goto	u10250
  2124   002330                     u10251:
  2125   002330  EFBC  F011         	goto	l56
  2126   002334                     u10250:
  2127   002334                     
  2128                           ; BSR set to: 0
  2129                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2130   002334  0E03               	movlw	3
  2131   002336  0100               	movlb	0	; () banked
  2132   002338  6FFB               	movwf	(??_main+1)& (0+255),b
  2133   00233A  0E08               	movlw	8
  2134   00233C  6FFA               	movwf	??_main& (0+255),b
  2135   00233E  0E77               	movlw	119
  2136   002340                     u10377:
  2137   002340  2EE8               	decfsz	wreg,f,c
  2138   002342  D7FE               	bra	u10377
  2139   002344  2FFA               	decfsz	??_main& (0+255),f,b
  2140   002346  D7FC               	bra	u10377
  2141   002348  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2142   00234A  D7FA               	bra	u10377
  2143   00234C                     
  2144                           ;main.c: 49:             if(PORTCbits.RC0){
  2145   00234C  A082               	btfss	130,0,c	;volatile
  2146   00234E  EFAB  F011         	goto	u10261
  2147   002352  EFAD  F011         	goto	u10260
  2148   002356                     u10261:
  2149   002356  EFBC  F011         	goto	l56
  2150   00235A                     u10260:
  2151   00235A                     
  2152                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  2153   00235A  0E02               	movlw	2
  2154   00235C  0100               	movlb	0	; () banked
  2155   00235E  6FE7               	movwf	moveDisplay@where& (0+255),b
  2156   002360  51FD               	movf	main@menuI& (0+255),w,b
  2157   002362  ECFA  F020         	call	_moveDisplay
  2158   002366  0100               	movlb	0	; () banked
  2159   002368  6FFD               	movwf	main@menuI& (0+255),b
  2160   00236A                     l58:
  2161   00236A  B082               	btfsc	130,0,c	;volatile
  2162   00236C  EFBA  F011         	goto	u10271
  2163   002370  EFBC  F011         	goto	u10270
  2164   002374                     u10271:
  2165   002374  EFB5  F011         	goto	l58
  2166   002378                     u10270:
  2167   002378                     l56:
  2168                           
  2169                           ;main.c: 54:         if(PORTAbits.RA4){
  2170   002378  A880               	btfss	128,4,c	;volatile
  2171   00237A  EFC1  F011         	goto	u10281
  2172   00237E  EFC3  F011         	goto	u10280
  2173   002382                     u10281:
  2174   002382  EFE5  F011         	goto	l61
  2175   002386                     u10280:
  2176   002386                     
  2177                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2178   002386  0E03               	movlw	3
  2179   002388  0100               	movlb	0	; () banked
  2180   00238A  6FFB               	movwf	(??_main+1)& (0+255),b
  2181   00238C  0E08               	movlw	8
  2182   00238E  6FFA               	movwf	??_main& (0+255),b
  2183   002390  0E77               	movlw	119
  2184   002392                     u10387:
  2185   002392  2EE8               	decfsz	wreg,f,c
  2186   002394  D7FE               	bra	u10387
  2187   002396  2FFA               	decfsz	??_main& (0+255),f,b
  2188   002398  D7FC               	bra	u10387
  2189   00239A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2190   00239C  D7FA               	bra	u10387
  2191   00239E                     
  2192                           ;main.c: 56:             if(PORTAbits.RA4){
  2193   00239E  A880               	btfss	128,4,c	;volatile
  2194   0023A0  EFD4  F011         	goto	u10291
  2195   0023A4  EFD6  F011         	goto	u10290
  2196   0023A8                     u10291:
  2197   0023A8  EFE5  F011         	goto	l61
  2198   0023AC                     u10290:
  2199   0023AC                     
  2200                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2201   0023AC  0E01               	movlw	1
  2202   0023AE  0100               	movlb	0	; () banked
  2203   0023B0  6FE7               	movwf	moveDisplay@where& (0+255),b
  2204   0023B2  51FD               	movf	main@menuI& (0+255),w,b
  2205   0023B4  ECFA  F020         	call	_moveDisplay
  2206   0023B8  0100               	movlb	0	; () banked
  2207   0023BA  6FFD               	movwf	main@menuI& (0+255),b
  2208   0023BC                     l63:
  2209   0023BC  B880               	btfsc	128,4,c	;volatile
  2210   0023BE  EFE3  F011         	goto	u10301
  2211   0023C2  EFE5  F011         	goto	u10300
  2212   0023C6                     u10301:
  2213   0023C6  EFDE  F011         	goto	l63
  2214   0023CA                     u10300:
  2215   0023CA                     l61:
  2216                           
  2217                           ;main.c: 61:         if(PORTAbits.RA3){
  2218   0023CA  A680               	btfss	128,3,c	;volatile
  2219   0023CC  EFEA  F011         	goto	u10311
  2220   0023D0  EFEC  F011         	goto	u10310
  2221   0023D4                     u10311:
  2222   0023D4  EF1F  F013         	goto	l66
  2223   0023D8                     u10310:
  2224   0023D8                     
  2225                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2226   0023D8  0E03               	movlw	3
  2227   0023DA  0100               	movlb	0	; () banked
  2228   0023DC  6FFB               	movwf	(??_main+1)& (0+255),b
  2229   0023DE  0E08               	movlw	8
  2230   0023E0  6FFA               	movwf	??_main& (0+255),b
  2231   0023E2  0E77               	movlw	119
  2232   0023E4                     u10397:
  2233   0023E4  2EE8               	decfsz	wreg,f,c
  2234   0023E6  D7FE               	bra	u10397
  2235   0023E8  2FFA               	decfsz	??_main& (0+255),f,b
  2236   0023EA  D7FC               	bra	u10397
  2237   0023EC  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2238   0023EE  D7FA               	bra	u10397
  2239   0023F0                     
  2240                           ;main.c: 63:             if(PORTAbits.RA3){
  2241   0023F0  A680               	btfss	128,3,c	;volatile
  2242   0023F2  EFFD  F011         	goto	u10321
  2243   0023F6  EFFF  F011         	goto	u10320
  2244   0023FA                     u10321:
  2245   0023FA  EF1F  F013         	goto	l66
  2246   0023FE                     u10320:
  2247   0023FE                     l68:
  2248   0023FE  B680               	btfsc	128,3,c	;volatile
  2249   002400  EF04  F012         	goto	u10331
  2250   002404  EF06  F012         	goto	u10330
  2251   002408                     u10331:
  2252   002408  EFFF  F011         	goto	l68
  2253   00240C                     u10330:
  2254   00240C  EFFF  F012         	goto	l8532
  2255   002410                     l8468:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2259   002410  0E15               	movlw	low STR_3
  2260   002412  6E07               	movwf	LCD_ShowString@textData^0,c
  2261   002414  0EFF               	movlw	high STR_3
  2262   002416  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2263   002418  0E01               	movlw	1
  2264   00241A  ECB4  F024         	call	_LCD_ShowString
  2265                           
  2266                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2267   00241E  0E35               	movlw	low (STR_36+2)
  2268   002420  6E07               	movwf	LCD_ShowString@textData^0,c
  2269   002422  0EFE               	movlw	high (STR_36+2)
  2270   002424  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2271   002426  0E02               	movlw	2
  2272   002428  ECB4  F024         	call	_LCD_ShowString
  2273   00242C                     
  2274                           ;main.c: 69:                         runGPIO();
  2275   00242C  ECA1  F01F         	call	_runGPIO	;wreg free
  2276   002430                     l8472:
  2277                           
  2278                           ;main.c: 70:                         setUpAgain = 1;
  2279   002430  0E01               	movlw	1
  2280   002432  0100               	movlb	0	; () banked
  2281   002434  6FFC               	movwf	main@setUpAgain& (0+255),b
  2282                           
  2283                           ;main.c: 71:                         break;
  2284   002436  EF1F  F013         	goto	l66
  2285   00243A                     l8474:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2289   00243A  0EAF               	movlw	low STR_5
  2290   00243C  6E07               	movwf	LCD_ShowString@textData^0,c
  2291   00243E  0EFE               	movlw	high STR_5
  2292   002440  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2293   002442  0E01               	movlw	1
  2294   002444  ECB4  F024         	call	_LCD_ShowString
  2295                           
  2296                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2297   002448  0E8C               	movlw	low STR_6
  2298   00244A  6E07               	movwf	LCD_ShowString@textData^0,c
  2299   00244C  0EFF               	movlw	high STR_6
  2300   00244E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2301   002450  0E02               	movlw	2
  2302   002452  ECB4  F024         	call	_LCD_ShowString
  2303   002456                     
  2304                           ;main.c: 75:                         runUART();
  2305   002456  ECEB  F01E         	call	_runUART	;wreg free
  2306   00245A  EF18  F012         	goto	l8472
  2307   00245E                     l8480:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2311   00245E  0E48               	movlw	low STR_7
  2312   002460  6E07               	movwf	LCD_ShowString@textData^0,c
  2313   002462  0EFF               	movlw	high STR_7
  2314   002464  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2315   002466  0E01               	movlw	1
  2316   002468  ECB4  F024         	call	_LCD_ShowString
  2317                           
  2318                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2319   00246C  0E35               	movlw	low (STR_36+2)
  2320   00246E  6E07               	movwf	LCD_ShowString@textData^0,c
  2321   002470  0EFE               	movlw	high (STR_36+2)
  2322   002472  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2323   002474  0E02               	movlw	2
  2324   002476  ECB4  F024         	call	_LCD_ShowString
  2325   00247A                     
  2326                           ;main.c: 81:                         runPWM();
  2327   00247A  EC57  F020         	call	_runPWM	;wreg free
  2328   00247E  EF18  F012         	goto	l8472
  2329   002482                     l8486:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2333   002482  0E7B               	movlw	low STR_9
  2334   002484  6E07               	movwf	LCD_ShowString@textData^0,c
  2335   002486  0EFF               	movlw	high STR_9
  2336   002488  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2337   00248A  0E01               	movlw	1
  2338   00248C  ECB4  F024         	call	_LCD_ShowString
  2339   002490                     
  2340                           ;main.c: 86:                         runADC();
  2341   002490  EC7C  F01A         	call	_runADC	;wreg free
  2342   002494  EF18  F012         	goto	l8472
  2343   002498                     l8492:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2347   002498  0E6A               	movlw	low STR_10
  2348   00249A  6E07               	movwf	LCD_ShowString@textData^0,c
  2349   00249C  0EFF               	movlw	high STR_10
  2350   00249E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2351   0024A0  0E01               	movlw	1
  2352   0024A2  ECB4  F024         	call	_LCD_ShowString
  2353                           
  2354                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2355   0024A6  0E9D               	movlw	low STR_11
  2356   0024A8  6E07               	movwf	LCD_ShowString@textData^0,c
  2357   0024AA  0EFF               	movlw	high STR_11
  2358   0024AC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2359   0024AE  0E02               	movlw	2
  2360   0024B0  ECB4  F024         	call	_LCD_ShowString
  2361   0024B4                     
  2362                           ;main.c: 92:                         runDAC();
  2363   0024B4  ECE4  F016         	call	_runDAC	;wreg free
  2364   0024B8  EF18  F012         	goto	l8472
  2365   0024BC                     l8498:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2369   0024BC  0E37               	movlw	low STR_12
  2370   0024BE  6E07               	movwf	LCD_ShowString@textData^0,c
  2371   0024C0  0EFF               	movlw	high STR_12
  2372   0024C2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2373   0024C4  0E01               	movlw	1
  2374   0024C6  ECB4  F024         	call	_LCD_ShowString
  2375                           
  2376                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2377   0024CA  0E35               	movlw	low (STR_36+2)
  2378   0024CC  6E07               	movwf	LCD_ShowString@textData^0,c
  2379   0024CE  0EFE               	movlw	high (STR_36+2)
  2380   0024D0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2381   0024D2  0E02               	movlw	2
  2382   0024D4  ECB4  F024         	call	_LCD_ShowString
  2383   0024D8                     
  2384                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2385   0024D8  0E29               	movlw	41
  2386   0024DA  0100               	movlb	0	; () banked
  2387   0024DC  6FFB               	movwf	(??_main+1)& (0+255),b
  2388   0024DE  0E96               	movlw	150
  2389   0024E0  6FFA               	movwf	??_main& (0+255),b
  2390   0024E2  0E7F               	movlw	127
  2391   0024E4                     u10407:
  2392   0024E4  2EE8               	decfsz	wreg,f,c
  2393   0024E6  D7FE               	bra	u10407
  2394   0024E8  2FFA               	decfsz	??_main& (0+255),f,b
  2395   0024EA  D7FC               	bra	u10407
  2396   0024EC  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2397   0024EE  D7FA               	bra	u10407
  2398   0024F0                     
  2399                           ;main.c: 99:                         LCD_ShowString((char)1, "Hybej pomoci    ");
  2400   0024F0  0E04               	movlw	low STR_14
  2401   0024F2  6E07               	movwf	LCD_ShowString@textData^0,c
  2402   0024F4  0EFF               	movlw	high STR_14
  2403   0024F6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2404   0024F8  0E01               	movlw	1
  2405   0024FA  ECB4  F024         	call	_LCD_ShowString
  2406   0024FE                     
  2407                           ;main.c: 100:                         LCD_ShowString((char)2, "POT1            ");
  2408   0024FE  0E8D               	movlw	low STR_15
  2409   002500  6E07               	movwf	LCD_ShowString@textData^0,c
  2410   002502  0EFE               	movlw	high STR_15
  2411   002504  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2412   002506  0E02               	movlw	2
  2413   002508  ECB4  F024         	call	_LCD_ShowString
  2414   00250C                     
  2415                           ;main.c: 101:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2416   00250C  0E52               	movlw	82
  2417   00250E  0100               	movlb	0	; () banked
  2418   002510  6FFB               	movwf	(??_main+1)& (0+255),b
  2419   002512  0E2B               	movlw	43
  2420   002514  6FFA               	movwf	??_main& (0+255),b
  2421   002516  0E00               	movlw	0
  2422   002518                     u10417:
  2423   002518  2EE8               	decfsz	wreg,f,c
  2424   00251A  D7FE               	bra	u10417
  2425   00251C  2FFA               	decfsz	??_main& (0+255),f,b
  2426   00251E  D7FC               	bra	u10417
  2427   002520  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2428   002522  D7FA               	bra	u10417
  2429   002524  0000               	nop	
  2430                           
  2431                           ;main.c: 102:                         LCD_ShowString((char)1, "Zrychli to      ");
  2432   002526  0EE2               	movlw	low STR_16
  2433   002528  6E07               	movwf	LCD_ShowString@textData^0,c
  2434   00252A  0EFE               	movlw	high STR_16
  2435   00252C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2436   00252E  0E01               	movlw	1
  2437   002530  ECB4  F024         	call	_LCD_ShowString
  2438                           
  2439                           ;main.c: 103:                         LCD_ShowString((char)2, "pomoci BTN4     ");
  2440   002534  0EF3               	movlw	low STR_17
  2441   002536  6E07               	movwf	LCD_ShowString@textData^0,c
  2442   002538  0EFE               	movlw	high STR_17
  2443   00253A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2444   00253C  0E02               	movlw	2
  2445   00253E  ECB4  F024         	call	_LCD_ShowString
  2446   002542                     
  2447                           ;main.c: 104:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2448   002542  0E52               	movlw	82
  2449   002544  0100               	movlb	0	; () banked
  2450   002546  6FFB               	movwf	(??_main+1)& (0+255),b
  2451   002548  0E2B               	movlw	43
  2452   00254A  6FFA               	movwf	??_main& (0+255),b
  2453   00254C  0E00               	movlw	0
  2454   00254E                     u10427:
  2455   00254E  2EE8               	decfsz	wreg,f,c
  2456   002550  D7FE               	bra	u10427
  2457   002552  2FFA               	decfsz	??_main& (0+255),f,b
  2458   002554  D7FC               	bra	u10427
  2459   002556  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2460   002558  D7FA               	bra	u10427
  2461   00255A  0000               	nop	
  2462   00255C                     
  2463                           ;main.c: 105:                         LCD_ShowString((char)1, "Pripravit       ");
  2464   00255C  0ED1               	movlw	low STR_18
  2465   00255E  6E07               	movwf	LCD_ShowString@textData^0,c
  2466   002560  0EFE               	movlw	high STR_18
  2467   002562  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2468   002564  0E01               	movlw	1
  2469   002566  ECB4  F024         	call	_LCD_ShowString
  2470   00256A                     
  2471                           ;main.c: 106:                         LCD_ShowString((char)2, "                ");
  2472   00256A  0E35               	movlw	low (STR_36+2)
  2473   00256C  6E07               	movwf	LCD_ShowString@textData^0,c
  2474   00256E  0EFE               	movlw	high (STR_36+2)
  2475   002570  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2476   002572  0E02               	movlw	2
  2477   002574  ECB4  F024         	call	_LCD_ShowString
  2478   002578                     
  2479                           ;main.c: 107:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2480   002578  0E29               	movlw	41
  2481   00257A  0100               	movlb	0	; () banked
  2482   00257C  6FFB               	movwf	(??_main+1)& (0+255),b
  2483   00257E  0E96               	movlw	150
  2484   002580  6FFA               	movwf	??_main& (0+255),b
  2485   002582  0E7F               	movlw	127
  2486   002584                     u10437:
  2487   002584  2EE8               	decfsz	wreg,f,c
  2488   002586  D7FE               	bra	u10437
  2489   002588  2FFA               	decfsz	??_main& (0+255),f,b
  2490   00258A  D7FC               	bra	u10437
  2491   00258C  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2492   00258E  D7FA               	bra	u10437
  2493                           
  2494                           ;main.c: 108:                         LCD_ShowString((char)2, "           Pozor");
  2495   002590  0EAE               	movlw	low STR_20
  2496   002592  6E07               	movwf	LCD_ShowString@textData^0,c
  2497   002594  0EFF               	movlw	high STR_20
  2498   002596  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2499   002598  0E02               	movlw	2
  2500   00259A  ECB4  F024         	call	_LCD_ShowString
  2501   00259E                     
  2502                           ;main.c: 109:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2503   00259E  0E52               	movlw	82
  2504   0025A0  0100               	movlb	0	; () banked
  2505   0025A2  6FFB               	movwf	(??_main+1)& (0+255),b
  2506   0025A4  0E2B               	movlw	43
  2507   0025A6  6FFA               	movwf	??_main& (0+255),b
  2508   0025A8  0E00               	movlw	0
  2509   0025AA                     u10447:
  2510   0025AA  2EE8               	decfsz	wreg,f,c
  2511   0025AC  D7FE               	bra	u10447
  2512   0025AE  2FFA               	decfsz	??_main& (0+255),f,b
  2513   0025B0  D7FC               	bra	u10447
  2514   0025B2  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2515   0025B4  D7FA               	bra	u10447
  2516   0025B6  0000               	nop	
  2517   0025B8                     
  2518                           ;main.c: 110:                         runGAME();
  2519   0025B8  EC4F  F00F         	call	_runGAME	;wreg free
  2520   0025BC  EF18  F012         	goto	l8472
  2521   0025C0                     l8522:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 114:                         LCD_ShowString((char)1, "Nebylo          ");
  2525   0025C0  0E9E               	movlw	low STR_21
  2526   0025C2  6E07               	movwf	LCD_ShowString@textData^0,c
  2527   0025C4  0EFE               	movlw	high STR_21
  2528   0025C6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2529   0025C8  0E01               	movlw	1
  2530   0025CA  ECB4  F024         	call	_LCD_ShowString
  2531                           
  2532                           ;main.c: 115:                         LCD_ShowString((char)2, "Implementovano  ");
  2533   0025CE  0E59               	movlw	low STR_22
  2534   0025D0  6E07               	movwf	LCD_ShowString@textData^0,c
  2535   0025D2  0EFF               	movlw	high STR_22
  2536   0025D4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2537   0025D6  0E02               	movlw	2
  2538   0025D8  ECB4  F024         	call	_LCD_ShowString
  2539   0025DC                     
  2540                           ;main.c: 116:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2541   0025DC  0E52               	movlw	82
  2542   0025DE  0100               	movlb	0	; () banked
  2543   0025E0  6FFB               	movwf	(??_main+1)& (0+255),b
  2544   0025E2  0E2B               	movlw	43
  2545   0025E4  6FFA               	movwf	??_main& (0+255),b
  2546   0025E6  0E00               	movlw	0
  2547   0025E8                     u10457:
  2548   0025E8  2EE8               	decfsz	wreg,f,c
  2549   0025EA  D7FE               	bra	u10457
  2550   0025EC  2FFA               	decfsz	??_main& (0+255),f,b
  2551   0025EE  D7FC               	bra	u10457
  2552   0025F0  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2553   0025F2  D7FA               	bra	u10457
  2554   0025F4  0000               	nop	
  2555   0025F6                     
  2556                           ;main.c: 117:                         runMUSIC();
  2557   0025F6  ECB2  F029         	call	_runMUSIC	;wreg free
  2558   0025FA  EF18  F012         	goto	l8472
  2559   0025FE                     l8532:
  2560   0025FE  0100               	movlb	0	; () banked
  2561   002600  51FD               	movf	main@menuI& (0+255),w,b
  2562                           
  2563                           ; Switch size 1, requested type "simple"
  2564                           ; Number of cases is 7, Range of values is 0 to 6
  2565                           ; switch strategies available:
  2566                           ; Name         Instructions Cycles
  2567                           ; simple_byte           22    12 (average)
  2568                           ;	Chosen strategy is simple_byte
  2569   002602  0A00               	xorlw	0	; case 0
  2570   002604  B4D8               	btfsc	status,2,c
  2571   002606  EF08  F012         	goto	l8468
  2572   00260A  0A01               	xorlw	1	; case 1
  2573   00260C  B4D8               	btfsc	status,2,c
  2574   00260E  EF1D  F012         	goto	l8474
  2575   002612  0A03               	xorlw	3	; case 2
  2576   002614  B4D8               	btfsc	status,2,c
  2577   002616  EF2F  F012         	goto	l8480
  2578   00261A  0A01               	xorlw	1	; case 3
  2579   00261C  B4D8               	btfsc	status,2,c
  2580   00261E  EF41  F012         	goto	l8486
  2581   002622  0A07               	xorlw	7	; case 4
  2582   002624  B4D8               	btfsc	status,2,c
  2583   002626  EF4C  F012         	goto	l8492
  2584   00262A  0A01               	xorlw	1	; case 5
  2585   00262C  B4D8               	btfsc	status,2,c
  2586   00262E  EF5E  F012         	goto	l8498
  2587   002632  0A03               	xorlw	3	; case 6
  2588   002634  B4D8               	btfsc	status,2,c
  2589   002636  EFE0  F012         	goto	l8522
  2590   00263A  EF1F  F013         	goto	l66
  2591   00263E                     l66:
  2592                           
  2593                           ;main.c: 124:         if(PORTAbits.RA2){
  2594   00263E  5080               	movf	128,w,c	;volatile
  2595   002640                     
  2596                           ;main.c: 128:         if(setUpAgain){
  2597   002640  0100               	movlb	0	; () banked
  2598   002642  51FC               	movf	main@setUpAgain& (0+255),w,b
  2599   002644  B4D8               	btfsc	status,2,c
  2600   002646  EF27  F013         	goto	u10341
  2601   00264A  EF29  F013         	goto	u10340
  2602   00264E                     u10341:
  2603   00264E  EF93  F011         	goto	l8448
  2604   002652                     u10340:
  2605   002652                     
  2606                           ; BSR set to: 0
  2607                           ;main.c: 129:         menuI = moveDisplay(menuI,0);
  2608   002652  0E00               	movlw	0
  2609   002654  6FE7               	movwf	moveDisplay@where& (0+255),b
  2610   002656  51FD               	movf	main@menuI& (0+255),w,b
  2611   002658  ECFA  F020         	call	_moveDisplay
  2612   00265C  0100               	movlb	0	; () banked
  2613   00265E  6FFD               	movwf	main@menuI& (0+255),b
  2614   002660                     
  2615                           ; BSR set to: 0
  2616                           ;main.c: 130:         setUpAgain = 0;
  2617   002660  0E00               	movlw	0
  2618   002662  6FFC               	movwf	main@setUpAgain& (0+255),b
  2619   002664  EF93  F011         	goto	l8448
  2620   002668  EFA7  F000         	goto	start
  2621   00266C                     __end_of_main:
  2622                           	callstack 0
  2623                           
  2624 ;; *************** function _runUART *****************
  2625 ;; Defined at:
  2626 ;;		line 4 in file "UART.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  p               2  152[BANK0 ] int 
  2631 ;;  i               2  150[BANK0 ] unsigned int 
  2632 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2633 ;;  len             2  148[BANK0 ] unsigned int 
  2634 ;;  keepState       1  147[BANK0 ] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:       40 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 9
  2651 ;; This function calls:
  2652 ;;		_printf
  2653 ;;		_strlen
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text1
  2660   003DD6                     __ptext1:
  2661                           	callstack 0
  2662   003DD6                     _runUART:
  2663                           	callstack 21
  2664   003DD6                     
  2665                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2666   003DD6  8492               	bsf	146,2,c	;volatile
  2667                           
  2668                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2669   003DD8  010F               	movlb	15	; () banked
  2670   003DDA  9D3A               	bcf	58,6,b	;volatile
  2671                           
  2672                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2673   003DDC  9F3A               	bcf	58,7,b	;volatile
  2674                           
  2675                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2676   003DDE  8C94               	bsf	148,6,c	;volatile
  2677                           
  2678                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2679   003DE0  8E94               	bsf	148,7,c	;volatile
  2680   003DE2                     
  2681                           ; BSR set to: 15
  2682                           ;UART.c: 14:     SPBRG1 = 25;
  2683   003DE2  0E19               	movlw	25
  2684   003DE4  6EAF               	movwf	175,c	;volatile
  2685   003DE6                     
  2686                           ; BSR set to: 15
  2687                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2688   003DE6  98AC               	bcf	172,4,c	;volatile
  2689   003DE8                     
  2690                           ; BSR set to: 15
  2691                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2692   003DE8  8EAB               	bsf	171,7,c	;volatile
  2693   003DEA                     
  2694                           ; BSR set to: 15
  2695                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2696   003DEA  8AAC               	bsf	172,5,c	;volatile
  2697   003DEC                     
  2698                           ; BSR set to: 15
  2699                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2700   003DEC  88AB               	bsf	171,4,c	;volatile
  2701                           
  2702                           ;UART.c: 21:     UARTIE = 1;
  2703   003DEE  0E01               	movlw	1
  2704   003DF0  0101               	movlb	1	; () banked
  2705   003DF2  6F25               	movwf	_UARTIE& (0+255),b
  2706   003DF4                     
  2707                           ; BSR set to: 1
  2708                           ;UART.c: 22:     RC1IE = 1;
  2709   003DF4  8A9D               	bsf	3997,5,c	;volatile
  2710   003DF6                     
  2711                           ; BSR set to: 1
  2712                           ;UART.c: 23:     PEIE = 1;
  2713   003DF6  8CF2               	bsf	4082,6,c	;volatile
  2714   003DF8                     
  2715                           ; BSR set to: 1
  2716                           ;UART.c: 24:     GIE = 1;
  2717   003DF8  8EF2               	bsf	4082,7,c	;volatile
  2718                           
  2719                           ;UART.c: 26:     uint8_t keepState = 1;
  2720   003DFA  0E01               	movlw	1
  2721   003DFC  0100               	movlb	0	; () banked
  2722   003DFE  6FF3               	movwf	runUART@keepState& (0+255),b
  2723                           
  2724                           ;UART.c: 28:     while(keepState){
  2725   003E00  EF8E  F01F         	goto	l579
  2726   003E04                     l8074:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;UART.c: 29:         if(gmail.full){
  2730   003E04  0101               	movlb	1	; () banked
  2731   003E06  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2732   003E08  B4D8               	btfsc	status,2,c
  2733   003E0A  EF09  F01F         	goto	u9841
  2734   003E0E  EF0B  F01F         	goto	u9840
  2735   003E12                     u9841:
  2736   003E12  EF6A  F01F         	goto	l581
  2737   003E16                     u9840:
  2738   003E16                     
  2739                           ; BSR set to: 1
  2740                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2741   003E16  0E77               	movlw	low _gmail
  2742   003E18  6E06               	movwf	strlen@s^0,c
  2743   003E1A  0E01               	movlw	high _gmail
  2744   003E1C  6E07               	movwf	(strlen@s+1)^0,c
  2745   003E1E  ECC9  F028         	call	_strlen	;wreg free
  2746   003E22  C006  F0F4         	movff	?_strlen,runUART@len
  2747   003E26  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2748   003E2A                     
  2749                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2750   003E2A  0E00               	movlw	0
  2751   003E2C  0100               	movlb	0	; () banked
  2752   003E2E  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2753   003E30  0E00               	movlw	0
  2754   003E32  6FF6               	movwf	runUART@i& (0+255),b
  2755   003E34  EF32  F01F         	goto	l8084
  2756   003E38                     l8080:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2760   003E38  0E76               	movlw	low (_gmail+65535)
  2761   003E3A  6FD2               	movwf	??_runUART& (0+255),b
  2762   003E3C  0E01               	movlw	high (_gmail+65535)
  2763   003E3E  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2764   003E40  51F6               	movf	runUART@i& (0+255),w,b
  2765   003E42  5FD2               	subwf	??_runUART& (0+255),f,b
  2766   003E44  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2767   003E46  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2768   003E48  51F4               	movf	runUART@len& (0+255),w,b
  2769   003E4A  25D2               	addwf	??_runUART& (0+255),w,b
  2770   003E4C  6ED9               	movwf	fsr2l,c
  2771   003E4E  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2772   003E50  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2773   003E52  6EDA               	movwf	fsr2h,c
  2774   003E54  51F6               	movf	runUART@i& (0+255),w,b
  2775   003E56  0FD4               	addlw	low runUART@reversed
  2776   003E58  6EE1               	movwf	fsr1l,c
  2777   003E5A  6AE2               	clrf	fsr1h,c
  2778   003E5C  CFDF FFE7          	movff	indf2,indf1
  2779   003E60                     
  2780                           ; BSR set to: 0
  2781                           ;UART.c: 35:             }
  2782   003E60  4BF6               	infsnz	runUART@i& (0+255),f,b
  2783   003E62  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2784   003E64                     l8084:
  2785                           
  2786                           ; BSR set to: 0
  2787   003E64  51F4               	movf	runUART@len& (0+255),w,b
  2788   003E66  5DF6               	subwf	runUART@i& (0+255),w,b
  2789   003E68  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2790   003E6A  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2791   003E6C  A0D8               	btfss	status,0,c
  2792   003E6E  EF3B  F01F         	goto	u9851
  2793   003E72  EF3D  F01F         	goto	u9850
  2794   003E76                     u9851:
  2795   003E76  EF1C  F01F         	goto	l8080
  2796   003E7A                     u9850:
  2797   003E7A                     
  2798                           ; BSR set to: 0
  2799                           ;UART.c: 36:             reversed[len] = '\0';
  2800   003E7A  51F4               	movf	runUART@len& (0+255),w,b
  2801   003E7C  0FD4               	addlw	low runUART@reversed
  2802   003E7E  6ED9               	movwf	fsr2l,c
  2803   003E80  6ADA               	clrf	fsr2h,c
  2804   003E82  6ADF               	clrf	indf2,c
  2805   003E84                     
  2806                           ; BSR set to: 0
  2807                           ;UART.c: 37:             printf("%s \n", reversed);
  2808   003E84  0ED2               	movlw	low STR_35
  2809   003E86  6FCE               	movwf	printf@fmt& (0+255),b
  2810   003E88  0EFF               	movlw	high STR_35
  2811   003E8A  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2812   003E8C  0ED4               	movlw	low runUART@reversed
  2813   003E8E  6FD0               	movwf	(?_printf+2)& (0+255),b
  2814   003E90  6BD1               	clrf	(?_printf+3)& (0+255),b
  2815   003E92  EC6D  F029         	call	_printf	;wreg free
  2816   003E96                     
  2817                           ;UART.c: 39:             gmail.full = 0;
  2818   003E96  0E00               	movlw	0
  2819   003E98  0101               	movlb	1	; () banked
  2820   003E9A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2821   003E9C                     
  2822                           ; BSR set to: 1
  2823                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2824   003E9C  0E00               	movlw	0
  2825   003E9E  0100               	movlb	0	; () banked
  2826   003EA0  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2827   003EA2  0E00               	movlw	0
  2828   003EA4  6FF8               	movwf	runUART@p& (0+255),b
  2829   003EA6                     l8098:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2833   003EA6  0E77               	movlw	low _gmail
  2834   003EA8  25F8               	addwf	runUART@p& (0+255),w,b
  2835   003EAA  6ED9               	movwf	fsr2l,c
  2836   003EAC  0E01               	movlw	high _gmail
  2837   003EAE  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2838   003EB0  6EDA               	movwf	fsr2h,c
  2839   003EB2  6ADF               	clrf	indf2,c
  2840   003EB4                     
  2841                           ; BSR set to: 0
  2842                           ;UART.c: 43:             }
  2843   003EB4  4BF8               	infsnz	runUART@p& (0+255),f,b
  2844   003EB6  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2845   003EB8                     
  2846                           ; BSR set to: 0
  2847   003EB8  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2848   003EBA  EF68  F01F         	goto	u9861
  2849   003EBE  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2850   003EC0  E109               	bnz	u9860
  2851   003EC2  0E1F               	movlw	31
  2852   003EC4  5DF8               	subwf	runUART@p& (0+255),w,b
  2853   003EC6  A0D8               	btfss	status,0,c
  2854   003EC8  EF68  F01F         	goto	u9861
  2855   003ECC  EF6A  F01F         	goto	u9860
  2856   003ED0                     u9861:
  2857   003ED0  EF53  F01F         	goto	l8098
  2858   003ED4                     u9860:
  2859   003ED4                     l581:
  2860                           
  2861                           ;UART.c: 47:         if(PORTAbits.RA2){
  2862   003ED4  A480               	btfss	128,2,c	;volatile
  2863   003ED6  EF6F  F01F         	goto	u9871
  2864   003EDA  EF71  F01F         	goto	u9870
  2865   003EDE                     u9871:
  2866   003EDE  EF8E  F01F         	goto	l579
  2867   003EE2                     u9870:
  2868   003EE2                     
  2869                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2870   003EE2  0E03               	movlw	3
  2871   003EE4  0100               	movlb	0	; () banked
  2872   003EE6  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2873   003EE8  0E08               	movlw	8
  2874   003EEA  6FD2               	movwf	??_runUART& (0+255),b
  2875   003EEC  0E77               	movlw	119
  2876   003EEE                     u10467:
  2877   003EEE  2EE8               	decfsz	wreg,f,c
  2878   003EF0  D7FE               	bra	u10467
  2879   003EF2  2FD2               	decfsz	??_runUART& (0+255),f,b
  2880   003EF4  D7FC               	bra	u10467
  2881   003EF6  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2882   003EF8  D7FA               	bra	u10467
  2883   003EFA                     
  2884                           ;UART.c: 49:             if(PORTAbits.RA2){
  2885   003EFA  A480               	btfss	128,2,c	;volatile
  2886   003EFC  EF82  F01F         	goto	u9881
  2887   003F00  EF84  F01F         	goto	u9880
  2888   003F04                     u9881:
  2889   003F04  EF8E  F01F         	goto	l579
  2890   003F08                     u9880:
  2891   003F08                     l589:
  2892   003F08  B480               	btfsc	128,2,c	;volatile
  2893   003F0A  EF89  F01F         	goto	u9891
  2894   003F0E  EF8B  F01F         	goto	u9890
  2895   003F12                     u9891:
  2896   003F12  EF84  F01F         	goto	l589
  2897   003F16                     u9890:
  2898   003F16                     
  2899                           ;UART.c: 51:                 keepState = 0;
  2900   003F16  0E00               	movlw	0
  2901   003F18  0100               	movlb	0	; () banked
  2902   003F1A  6FF3               	movwf	runUART@keepState& (0+255),b
  2903   003F1C                     l579:
  2904                           
  2905                           ;UART.c: 28:     while(keepState){
  2906   003F1C  0100               	movlb	0	; () banked
  2907   003F1E  51F3               	movf	runUART@keepState& (0+255),w,b
  2908   003F20  A4D8               	btfss	status,2,c
  2909   003F22  EF95  F01F         	goto	u9901
  2910   003F26  EF97  F01F         	goto	u9900
  2911   003F2A                     u9901:
  2912   003F2A  EF02  F01F         	goto	l8074
  2913   003F2E                     u9900:
  2914   003F2E                     
  2915                           ; BSR set to: 0
  2916                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2917   003F2E  9EAB               	bcf	171,7,c	;volatile
  2918                           
  2919                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2920   003F30  9AAC               	bcf	172,5,c	;volatile
  2921                           
  2922                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2923   003F32  98AB               	bcf	171,4,c	;volatile
  2924   003F34                     
  2925                           ; BSR set to: 0
  2926                           ;UART.c: 61:     UARTIE = 0;
  2927   003F34  0E00               	movlw	0
  2928   003F36  0101               	movlb	1	; () banked
  2929   003F38  6F25               	movwf	_UARTIE& (0+255),b
  2930   003F3A                     
  2931                           ; BSR set to: 1
  2932                           ;UART.c: 62:     RC1IE = 0;
  2933   003F3A  9A9D               	bcf	3997,5,c	;volatile
  2934   003F3C                     
  2935                           ; BSR set to: 1
  2936                           ;UART.c: 63:     PEIE = 0;
  2937   003F3C  9CF2               	bcf	4082,6,c	;volatile
  2938   003F3E                     
  2939                           ; BSR set to: 1
  2940                           ;UART.c: 64:     GIE = 0;
  2941   003F3E  9EF2               	bcf	4082,7,c	;volatile
  2942   003F40                     
  2943                           ; BSR set to: 1
  2944   003F40  0012               	return		;funcret
  2945   003F42                     __end_of_runUART:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _strlen *****************
  2949 ;; Defined at:
  2950 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2953 ;;		 -> gmail$data(31), gmail(32), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2956 ;;		 -> gmail$data(31), gmail(32), 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2    5[COMRAM] unsigned int 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:        4 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_runUART
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text2
  2981   005192                     __ptext2:
  2982                           	callstack 0
  2983   005192                     _strlen:
  2984                           	callstack 28
  2985   005192  C006  F008         	movff	strlen@s,strlen@a
  2986   005196  C007  F009         	movff	strlen@s+1,strlen@a+1
  2987   00519A  EFD1  F028         	goto	l7936
  2988   00519E                     l7934:
  2989   00519E  4A06               	infsnz	strlen@s^0,f,c
  2990   0051A0  2A07               	incf	(strlen@s+1)^0,f,c
  2991   0051A2                     l7936:
  2992   0051A2  C006  FFD9         	movff	strlen@s,fsr2l
  2993   0051A6  C007  FFDA         	movff	strlen@s+1,fsr2h
  2994   0051AA  50DF               	movf	indf2,w,c
  2995   0051AC  A4D8               	btfss	status,2,c
  2996   0051AE  EFDB  F028         	goto	u9651
  2997   0051B2  EFDD  F028         	goto	u9650
  2998   0051B6                     u9651:
  2999   0051B6  EFCF  F028         	goto	l7934
  3000   0051BA                     u9650:
  3001   0051BA  5008               	movf	strlen@a^0,w,c
  3002   0051BC  5C06               	subwf	strlen@s^0,w,c
  3003   0051BE  6E06               	movwf	?_strlen^0,c
  3004   0051C0  5009               	movf	(strlen@a+1)^0,w,c
  3005   0051C2  5807               	subwfb	(strlen@s+1)^0,w,c
  3006   0051C4  6E07               	movwf	(?_strlen+1)^0,c
  3007   0051C6  0012               	return		;funcret
  3008   0051C8                     __end_of_strlen:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _runPWM *****************
  3012 ;; Defined at:
  3013 ;;		line 11 in file "PWM.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  multiplier      1   34[COMRAM] unsigned char 
  3018 ;;  keepState       1   33[COMRAM] unsigned char 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;Total ram usage:        4 bytes
  3033 ;; Hardware stack levels used: 1
  3034 ;; Hardware stack levels required when called: 2
  3035 ;; This function calls:
  3036 ;;		___awdiv
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text3
  3043   0040AE                     __ptext3:
  3044                           	callstack 0
  3045   0040AE                     _runPWM:
  3046                           	callstack 28
  3047   0040AE                     
  3048                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  3049   0040AE  8494               	bsf	148,2,c	;volatile
  3050   0040B0                     
  3051                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  3052   0040B0  0EFC               	movlw	-4
  3053   0040B2  010F               	movlb	15	; () banked
  3054   0040B4  1749               	andwf	73,f,b	;volatile
  3055                           
  3056                           ;PWM.c: 15:     PR2 = 199;
  3057   0040B6  0EC7               	movlw	199
  3058   0040B8  6EBB               	movwf	187,c	;volatile
  3059                           
  3060                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  3061   0040BA  0E0C               	movlw	12
  3062   0040BC  12BD               	iorwf	189,f,c	;volatile
  3063                           
  3064                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  3065   0040BE  50BD               	movf	189,w,c	;volatile
  3066   0040C0  0B3F               	andlw	-193
  3067   0040C2  0980               	iorlw	128
  3068   0040C4  6EBD               	movwf	189,c	;volatile
  3069                           
  3070                           ;PWM.c: 18:     CCPR1L = 0;
  3071   0040C6  0E00               	movlw	0
  3072   0040C8  6EBE               	movwf	190,c	;volatile
  3073   0040CA                     
  3074                           ; BSR set to: 15
  3075                           ;PWM.c: 19:     TMR2IF = 0;
  3076   0040CA  929E               	bcf	3998,1,c	;volatile
  3077   0040CC                     
  3078                           ; BSR set to: 15
  3079                           ;PWM.c: 20:     TMR2ON = 1;
  3080   0040CC  84BA               	bsf	4026,2,c	;volatile
  3081   0040CE                     l519:
  3082   0040CE  A29E               	btfss	3998,1,c	;volatile
  3083   0040D0  EF6C  F020         	goto	u9911
  3084   0040D4  EF6E  F020         	goto	u9910
  3085   0040D8                     u9911:
  3086   0040D8  EF67  F020         	goto	l519
  3087   0040DC                     u9910:
  3088   0040DC                     
  3089                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  3090   0040DC  8494               	bsf	148,2,c	;volatile
  3091                           
  3092                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  3093   0040DE  8892               	bsf	146,4,c	;volatile
  3094                           
  3095                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  3096   0040E0  8492               	bsf	146,2,c	;volatile
  3097                           
  3098                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  3099   0040E2  9495               	bcf	149,2,c	;volatile
  3100                           
  3101                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  3102   0040E4  9695               	bcf	149,3,c	;volatile
  3103                           
  3104                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  3105   0040E6  9894               	bcf	148,4,c	;volatile
  3106                           
  3107                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  3108   0040E8  9895               	bcf	149,4,c	;volatile
  3109                           
  3110                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  3111   0040EA  9A95               	bcf	149,5,c	;volatile
  3112                           
  3113                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  3114   0040EC  9C95               	bcf	149,6,c	;volatile
  3115                           
  3116                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  3117   0040EE  848C               	bsf	140,2,c	;volatile
  3118                           
  3119                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  3120   0040F0  868C               	bsf	140,3,c	;volatile
  3121                           
  3122                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  3123   0040F2  888B               	bsf	139,4,c	;volatile
  3124                           
  3125                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  3126   0040F4  888C               	bsf	140,4,c	;volatile
  3127                           
  3128                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  3129   0040F6  8A8C               	bsf	140,5,c	;volatile
  3130                           
  3131                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  3132   0040F8  8C8C               	bsf	140,6,c	;volatile
  3133   0040FA                     
  3134                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  3135   0040FA  0E01               	movlw	1
  3136   0040FC  6E22               	movwf	runPWM@keepState^0,c
  3137                           
  3138                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  3139   0040FE  0E00               	movlw	0
  3140   004100  6E23               	movwf	runPWM@multiplier^0,c
  3141                           
  3142                           ;PWM.c: 47:     while(keepState){
  3143   004102  EFED  F020         	goto	l522
  3144   004106                     l8132:
  3145                           
  3146                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  3147   004106  5023               	movf	runPWM@multiplier^0,w,c
  3148   004108  0DC7               	mullw	199
  3149   00410A  CFF3 F018          	movff	prodl,___awdiv@dividend
  3150   00410E  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  3151   004112  0E00               	movlw	0
  3152   004114  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3153   004116  0E05               	movlw	5
  3154   004118  6E1A               	movwf	___awdiv@divisor^0,c
  3155   00411A  EC52  F024         	call	___awdiv	;wreg free
  3156   00411E  5018               	movf	?___awdiv^0,w,c
  3157   004120  6EBE               	movwf	190,c	;volatile
  3158   004122                     
  3159                           ;PWM.c: 51:         if(PORTAbits.RA4){
  3160   004122  A880               	btfss	128,4,c	;volatile
  3161   004124  EF96  F020         	goto	u9921
  3162   004128  EF98  F020         	goto	u9920
  3163   00412C                     u9921:
  3164   00412C  EFCA  F020         	goto	l8150
  3165   004130                     u9920:
  3166   004130                     
  3167                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  3168   004130  0E03               	movlw	3
  3169   004132  6E21               	movwf	(??_runPWM+1)^0,c
  3170   004134  0E08               	movlw	8
  3171   004136  6E20               	movwf	??_runPWM^0,c
  3172   004138  0E77               	movlw	119
  3173   00413A                     u10477:
  3174   00413A  2EE8               	decfsz	wreg,f,c
  3175   00413C  D7FE               	bra	u10477
  3176   00413E  2E20               	decfsz	??_runPWM^0,f,c
  3177   004140  D7FC               	bra	u10477
  3178   004142  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3179   004144  D7FA               	bra	u10477
  3180   004146  0000               	nop	
  3181   004148                     
  3182                           ;PWM.c: 53:             if(PORTAbits.RA4){
  3183   004148  A880               	btfss	128,4,c	;volatile
  3184   00414A  EFA9  F020         	goto	u9931
  3185   00414E  EFAB  F020         	goto	u9930
  3186   004152                     u9931:
  3187   004152  EFCA  F020         	goto	l8150
  3188   004156                     u9930:
  3189   004156                     l526:
  3190   004156  B880               	btfsc	128,4,c	;volatile
  3191   004158  EFB0  F020         	goto	u9941
  3192   00415C  EFB2  F020         	goto	u9940
  3193   004160                     u9941:
  3194   004160  EFAB  F020         	goto	l526
  3195   004164                     u9940:
  3196   004164                     
  3197                           ;PWM.c: 55:                 if(multiplier == 5 ){
  3198   004164  0E05               	movlw	5
  3199   004166  1823               	xorwf	runPWM@multiplier^0,w,c
  3200   004168  A4D8               	btfss	status,2,c
  3201   00416A  EFB9  F020         	goto	u9951
  3202   00416E  EFBB  F020         	goto	u9950
  3203   004172                     u9951:
  3204   004172  EFBF  F020         	goto	l8146
  3205   004176                     u9950:
  3206   004176                     
  3207                           ;PWM.c: 56:                     multiplier = 0;
  3208   004176  0E00               	movlw	0
  3209   004178  6E23               	movwf	runPWM@multiplier^0,c
  3210                           
  3211                           ;PWM.c: 57:                 } else if(multiplier <5){
  3212   00417A  EFCA  F020         	goto	l8150
  3213   00417E                     l8146:
  3214   00417E  0E05               	movlw	5
  3215   004180  6023               	cpfslt	runPWM@multiplier^0,c
  3216   004182  EFC5  F020         	goto	u9961
  3217   004186  EFC7  F020         	goto	u9960
  3218   00418A                     u9961:
  3219   00418A  EFCA  F020         	goto	l525
  3220   00418E                     u9960:
  3221   00418E                     
  3222                           ;PWM.c: 58:                     multiplier++;
  3223   00418E  2A23               	incf	runPWM@multiplier^0,f,c
  3224   004190  EFCA  F020         	goto	l8150
  3225   004194                     l525:
  3226   004194                     l8150:
  3227                           
  3228                           ;PWM.c: 63:         if(PORTAbits.RA2){
  3229   004194  A480               	btfss	128,2,c	;volatile
  3230   004196  EFCF  F020         	goto	u9971
  3231   00419A  EFD1  F020         	goto	u9970
  3232   00419E                     u9971:
  3233   00419E  EFED  F020         	goto	l522
  3234   0041A2                     u9970:
  3235   0041A2                     
  3236                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3237   0041A2  0E03               	movlw	3
  3238   0041A4  6E21               	movwf	(??_runPWM+1)^0,c
  3239   0041A6  0E08               	movlw	8
  3240   0041A8  6E20               	movwf	??_runPWM^0,c
  3241   0041AA  0E77               	movlw	119
  3242   0041AC                     u10487:
  3243   0041AC  2EE8               	decfsz	wreg,f,c
  3244   0041AE  D7FE               	bra	u10487
  3245   0041B0  2E20               	decfsz	??_runPWM^0,f,c
  3246   0041B2  D7FC               	bra	u10487
  3247   0041B4  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3248   0041B6  D7FA               	bra	u10487
  3249   0041B8  0000               	nop	
  3250   0041BA                     
  3251                           ;PWM.c: 65:         if(PORTAbits.RA2){
  3252   0041BA  A480               	btfss	128,2,c	;volatile
  3253   0041BC  EFE2  F020         	goto	u9981
  3254   0041C0  EFE4  F020         	goto	u9980
  3255   0041C4                     u9981:
  3256   0041C4  EFED  F020         	goto	l522
  3257   0041C8                     u9980:
  3258   0041C8                     l534:
  3259   0041C8  B480               	btfsc	128,2,c	;volatile
  3260   0041CA  EFE9  F020         	goto	u9991
  3261   0041CE  EFEB  F020         	goto	u9990
  3262   0041D2                     u9991:
  3263   0041D2  EFE4  F020         	goto	l534
  3264   0041D6                     u9990:
  3265   0041D6                     
  3266                           ;PWM.c: 67:             keepState = 0;
  3267   0041D6  0E00               	movlw	0
  3268   0041D8  6E22               	movwf	runPWM@keepState^0,c
  3269   0041DA                     l522:
  3270                           
  3271                           ;PWM.c: 47:     while(keepState){
  3272   0041DA  5022               	movf	runPWM@keepState^0,w,c
  3273   0041DC  A4D8               	btfss	status,2,c
  3274   0041DE  EFF3  F020         	goto	u10001
  3275   0041E2  EFF5  F020         	goto	u10000
  3276   0041E6                     u10001:
  3277   0041E6  EF83  F020         	goto	l8132
  3278   0041EA                     u10000:
  3279   0041EA                     
  3280                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3281   0041EA  0EF0               	movlw	-16
  3282   0041EC  16BD               	andwf	189,f,c	;volatile
  3283   0041EE                     
  3284                           ;PWM.c: 75:     TMR2ON = 0;
  3285   0041EE  94BA               	bcf	4026,2,c	;volatile
  3286   0041F0                     
  3287                           ;PWM.c: 76:     TMR2IE = 0;
  3288   0041F0  929D               	bcf	3997,1,c	;volatile
  3289   0041F2  0012               	return		;funcret
  3290   0041F4                     __end_of_runPWM:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _runMUSIC *****************
  3294 ;; Defined at:
  3295 ;;		line 10 in file "MUSIC.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		None
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text4
  3324   005364                     __ptext4:
  3325                           	callstack 0
  3326   005364                     _runMUSIC:
  3327                           	callstack 29
  3328   005364  0012               	return		;funcret
  3329   005366                     __end_of_runMUSIC:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _runGPIO *****************
  3333 ;; Defined at:
  3334 ;;		line 19 in file "GPIO.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  j               2   35[COMRAM] int 
  3339 ;;  states         12    8[COMRAM] unsigned char [12]
  3340 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3341 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3342 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3343 ;;  numberOfStat    2   32[COMRAM] int 
  3344 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;Total ram usage:       31 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 2
  3361 ;; This function calls:
  3362 ;;		_LED1_Control
  3363 ;;		_LED2_Control
  3364 ;;		_LED3_Control
  3365 ;;		_LED4_Control
  3366 ;;		_LED5_Control
  3367 ;;		_LED6_Control
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text5
  3374   003F42                     __ptext5:
  3375                           	callstack 0
  3376   003F42                     _runGPIO:
  3377                           	callstack 28
  3378   003F42                     
  3379                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3380   003F42  9495               	bcf	149,2,c	;volatile
  3381                           
  3382                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3383   003F44  9695               	bcf	149,3,c	;volatile
  3384                           
  3385                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3386   003F46  9894               	bcf	148,4,c	;volatile
  3387                           
  3388                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3389   003F48  9895               	bcf	149,4,c	;volatile
  3390                           
  3391                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3392   003F4A  9A95               	bcf	149,5,c	;volatile
  3393                           
  3394                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3395   003F4C  9C95               	bcf	149,6,c	;volatile
  3396                           
  3397                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3398   003F4E  010F               	movlb	15	; () banked
  3399   003F50  953B               	bcf	59,2,b	;volatile
  3400                           
  3401                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3402   003F52  973B               	bcf	59,3,b	;volatile
  3403                           
  3404                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3405   003F54  993A               	bcf	58,4,b	;volatile
  3406                           
  3407                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3408   003F56  993B               	bcf	59,4,b	;volatile
  3409                           
  3410                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3411   003F58  9B3B               	bcf	59,5,b	;volatile
  3412                           
  3413                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3414   003F5A  9D3B               	bcf	59,6,b	;volatile
  3415                           
  3416                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3417   003F5C  848C               	bsf	140,2,c	;volatile
  3418                           
  3419                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3420   003F5E  868C               	bsf	140,3,c	;volatile
  3421                           
  3422                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3423   003F60  888B               	bsf	139,4,c	;volatile
  3424                           
  3425                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3426   003F62  888C               	bsf	140,4,c	;volatile
  3427                           
  3428                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3429   003F64  8A8C               	bsf	140,5,c	;volatile
  3430                           
  3431                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3432   003F66  8C8C               	bsf	140,6,c	;volatile
  3433                           
  3434                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3435   003F68  8492               	bsf	146,2,c	;volatile
  3436                           
  3437                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3438   003F6A  9538               	bcf	56,2,b	;volatile
  3439   003F6C                     
  3440                           ; BSR set to: 15
  3441                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3442   003F6C  0E3F               	movlw	-193
  3443   003F6E  16CD               	andwf	205,f,c	;volatile
  3444                           
  3445                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3446   003F70  0E30               	movlw	48
  3447   003F72  12CD               	iorwf	205,f,c	;volatile
  3448   003F74                     
  3449                           ; BSR set to: 15
  3450                           ;GPIO.c: 49:     TMR1IE = 1;
  3451   003F74  809D               	bsf	3997,0,c	;volatile
  3452   003F76                     
  3453                           ; BSR set to: 15
  3454                           ;GPIO.c: 50:     PEIE = 1;
  3455   003F76  8CF2               	bsf	4082,6,c	;volatile
  3456   003F78                     
  3457                           ; BSR set to: 15
  3458                           ;GPIO.c: 51:     GIE = 1;
  3459   003F78  8EF2               	bsf	4082,7,c	;volatile
  3460                           
  3461                           ;GPIO.c: 52:     GPIOIE = 1;
  3462   003F7A  0E01               	movlw	1
  3463   003F7C  0101               	movlb	1	; () banked
  3464   003F7E  6F26               	movwf	_GPIOIE& (0+255),b
  3465   003F80                     
  3466                           ; BSR set to: 1
  3467                           ;GPIO.c: 53:     TMR1IF = 1;
  3468   003F80  809E               	bsf	3998,0,c	;volatile
  3469                           
  3470                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3471   003F82  0E9E               	movlw	158
  3472   003F84  6ECF               	movwf	207,c	;volatile
  3473   003F86  0E58               	movlw	88
  3474   003F88  6ECE               	movwf	206,c	;volatile
  3475   003F8A                     
  3476                           ; BSR set to: 1
  3477                           ;GPIO.c: 55:     TMR1ON = 1;
  3478   003F8A  80CD               	bsf	4045,0,c	;volatile
  3479                           
  3480                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3481   003F8C  0E01               	movlw	1
  3482   003F8E  0100               	movlb	0	; () banked
  3483   003F90  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3484   003F92                     
  3485                           ; BSR set to: 0
  3486                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3487   003F92  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3488   003F96  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3489   003F9A  0E0B               	movlw	11
  3490   003F9C                     u9751:
  3491   003F9C  CFDB FFE3          	movff	plusw2,plusw1
  3492   003FA0  06E8               	decf	wreg,f,c
  3493   003FA2  E2FC               	bc	u9751
  3494   003FA4                     
  3495                           ; BSR set to: 0
  3496                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3497   003FA4  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3498   003FA8  EE10  F009         	lfsr	1,runGPIO@states
  3499   003FAC  0E0B               	movlw	11
  3500   003FAE                     u9761:
  3501   003FAE  CFDB FFE3          	movff	plusw2,plusw1
  3502   003FB2  06E8               	decf	wreg,f,c
  3503   003FB4  E2FC               	bc	u9761
  3504                           
  3505                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3506   003FB6  0E00               	movlw	0
  3507   003FB8  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3508   003FBA  0E0C               	movlw	12
  3509   003FBC  6E21               	movwf	runGPIO@numberOfStates^0,c
  3510                           
  3511                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3512   003FBE  0E00               	movlw	0
  3513   003FC0  6E23               	movwf	runGPIO@GPIOi^0,c
  3514                           
  3515                           ;GPIO.c: 66:     while(keepStateGPIO){
  3516   003FC2  EF42  F020         	goto	l372
  3517   003FC6                     l8034:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3521   003FC6  0E00               	movlw	0
  3522   003FC8  6E25               	movwf	(runGPIO@j+1)^0,c
  3523   003FCA  0E00               	movlw	0
  3524   003FCC  6E24               	movwf	runGPIO@j^0,c
  3525   003FCE                     l8040:
  3526                           
  3527                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3528   003FCE  5024               	movf	runGPIO@j^0,w,c
  3529   003FD0  0D02               	mullw	2
  3530   003FD2  50F3               	movf	243,w,c
  3531   003FD4  0F15               	addlw	low runGPIO@LEDControl
  3532   003FD6  6ED9               	movwf	fsr2l,c
  3533   003FD8  6ADA               	clrf	fsr2h,c
  3534   003FDA  D802               	call	u9778
  3535   003FDC  EF14  F020         	goto	u9779
  3536   003FE0                     u9778:
  3537   003FE0  0005               	push	
  3538   003FE2  6EFA               	movwf	pclath,c
  3539   003FE4  50DE               	movf	postinc2,w,c
  3540   003FE6  6EFD               	movwf	tosl,c
  3541   003FE8  50DE               	movf	postinc2,w,c
  3542   003FEA  6EFE               	movwf	tosh,c
  3543   003FEC  50F8               	movf	tblptru,w,c
  3544   003FEE  6EFF               	movwf	tosu,c
  3545   003FF0  50FA               	movf	pclath,w,c
  3546   003FF2  5024               	movf	runGPIO@j^0,w,c
  3547   003FF4  0805               	sublw	5
  3548   003FF6  6E07               	movwf	??_runGPIO^0,c
  3549   003FF8  5023               	movf	runGPIO@GPIOi^0,w,c
  3550   003FFA  0F09               	addlw	low runGPIO@states
  3551   003FFC  6ED9               	movwf	fsr2l,c
  3552   003FFE  6ADA               	clrf	fsr2h,c
  3553   004000  50DF               	movf	indf2,w,c
  3554   004002  6E08               	movwf	(??_runGPIO+1)^0,c
  3555   004004  2A07               	incf	??_runGPIO^0,f,c
  3556   004006  EF07  F020         	goto	u9784
  3557   00400A                     u9785:
  3558   00400A  90D8               	bcf	status,0,c
  3559   00400C  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3560   00400E                     u9784:
  3561   00400E  2E07               	decfsz	??_runGPIO^0,f,c
  3562   004010  EF05  F020         	goto	u9785
  3563   004014  A008               	btfss	(??_runGPIO+1)^0,0,c
  3564   004016  EF0F  F020         	goto	u9791
  3565   00401A  EF12  F020         	goto	u9790
  3566   00401E                     u9791:
  3567   00401E  0E01               	movlw	1
  3568   004020  EF13  F020         	goto	u9800
  3569   004024                     u9790:
  3570   004024  0E00               	movlw	0
  3571   004026                     u9800:
  3572   004026  0012               	return		;indir
  3573   004028                     u9779:
  3574   004028                     
  3575                           ;GPIO.c: 70:         }
  3576   004028  4A24               	infsnz	runGPIO@j^0,f,c
  3577   00402A  2A25               	incf	(runGPIO@j+1)^0,f,c
  3578   00402C  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3579   00402E  EF22  F020         	goto	u9811
  3580   004032  5025               	movf	(runGPIO@j+1)^0,w,c
  3581   004034  E109               	bnz	u9810
  3582   004036  0E06               	movlw	6
  3583   004038  5C24               	subwf	runGPIO@j^0,w,c
  3584   00403A  A0D8               	btfss	status,0,c
  3585   00403C  EF22  F020         	goto	u9811
  3586   004040  EF24  F020         	goto	u9810
  3587   004044                     u9811:
  3588   004044  EFE7  F01F         	goto	l8040
  3589   004048                     u9810:
  3590   004048                     
  3591                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3592   004048  0E11               	movlw	17
  3593   00404A  6E08               	movwf	(??_runGPIO+1)^0,c
  3594   00404C  0E3C               	movlw	60
  3595   00404E  6E07               	movwf	??_runGPIO^0,c
  3596   004050  0ECB               	movlw	203
  3597   004052                     u10497:
  3598   004052  2EE8               	decfsz	wreg,f,c
  3599   004054  D7FE               	bra	u10497
  3600   004056  2E07               	decfsz	??_runGPIO^0,f,c
  3601   004058  D7FC               	bra	u10497
  3602   00405A  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3603   00405C  D7FA               	bra	u10497
  3604   00405E  0000               	nop	
  3605   004060                     
  3606                           ;GPIO.c: 72:         GPIOi++;
  3607   004060  2A23               	incf	runGPIO@GPIOi^0,f,c
  3608                           
  3609                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3610   004062  5023               	movf	runGPIO@GPIOi^0,w,c
  3611   004064  6E07               	movwf	??_runGPIO^0,c
  3612   004066  6A08               	clrf	(??_runGPIO+1)^0,c
  3613   004068  5021               	movf	runGPIO@numberOfStates^0,w,c
  3614   00406A  1807               	xorwf	??_runGPIO^0,w,c
  3615   00406C  E107               	bnz	u9821
  3616   00406E  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3617   004070  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3618   004072  A4D8               	btfss	status,2,c
  3619   004074  EF3E  F020         	goto	u9821
  3620   004078  EF40  F020         	goto	u9820
  3621   00407C                     u9821:
  3622   00407C  EF42  F020         	goto	l372
  3623   004080                     u9820:
  3624   004080                     
  3625                           ;GPIO.c: 74:             GPIOi = 0;
  3626   004080  0E00               	movlw	0
  3627   004082  6E23               	movwf	runGPIO@GPIOi^0,c
  3628   004084                     l372:
  3629                           
  3630                           ;GPIO.c: 66:     while(keepStateGPIO){
  3631   004084  0100               	movlb	0	; () banked
  3632   004086  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3633   004088  A4D8               	btfss	status,2,c
  3634   00408A  EF49  F020         	goto	u9831
  3635   00408E  EF4B  F020         	goto	u9830
  3636   004092                     u9831:
  3637   004092  EFE3  F01F         	goto	l8034
  3638   004096                     u9830:
  3639   004096                     
  3640                           ; BSR set to: 0
  3641                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3642   004096  848C               	bsf	140,2,c	;volatile
  3643                           
  3644                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3645   004098  868C               	bsf	140,3,c	;volatile
  3646                           
  3647                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3648   00409A  888B               	bsf	139,4,c	;volatile
  3649                           
  3650                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3651   00409C  888C               	bsf	140,4,c	;volatile
  3652                           
  3653                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3654   00409E  8A8C               	bsf	140,5,c	;volatile
  3655                           
  3656                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3657   0040A0  8C8C               	bsf	140,6,c	;volatile
  3658                           
  3659                           ;GPIO.c: 85:     TMR1ON = 0;
  3660   0040A2  90CD               	bcf	4045,0,c	;volatile
  3661                           
  3662                           ;GPIO.c: 86:     TMR1IE = 0;
  3663   0040A4  909D               	bcf	3997,0,c	;volatile
  3664   0040A6                     
  3665                           ; BSR set to: 0
  3666                           ;GPIO.c: 87:     GPIOIE = 0;
  3667   0040A6  0E00               	movlw	0
  3668   0040A8  0101               	movlb	1	; () banked
  3669   0040AA  6F26               	movwf	_GPIOIE& (0+255),b
  3670   0040AC                     
  3671                           ; BSR set to: 1
  3672   0040AC  0012               	return		;funcret
  3673   0040AE                     __end_of_runGPIO:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _LED5_Control *****************
  3677 ;; Defined at:
  3678 ;;		line 14 in file "GPIO.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  state           1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  state           1    5[COMRAM] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;Total ram usage:        1 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_runGPIO
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text6
  3707   005310                     __ptext6:
  3708                           	callstack 0
  3709   005310                     _LED5_Control:
  3710                           	callstack 28
  3711                           
  3712                           ; BSR set to: 1
  3713                           ;incstack = 0
  3714                           ;LED5_Control@state stored from wreg
  3715   005310  6E06               	movwf	LED5_Control@state^0,c
  3716   005312  B006               	btfsc	LED5_Control@state^0,0,c
  3717   005314  D002               	bra	u9635
  3718   005316  9A8C               	bcf	140,5,c	;volatile
  3719   005318  D001               	bra	u9636
  3720   00531A                     u9635:
  3721   00531A  8A8C               	bsf	140,5,c	;volatile
  3722   00531C                     u9636:
  3723   00531C  0012               	return		;funcret
  3724   00531E                     __end_of_LED5_Control:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _LED4_Control *****************
  3728 ;; Defined at:
  3729 ;;		line 13 in file "GPIO.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  state           1    wreg     unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  state           1    5[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;Total ram usage:        1 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 1
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_runGPIO
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text7
  3758   00531E                     __ptext7:
  3759                           	callstack 0
  3760   00531E                     _LED4_Control:
  3761                           	callstack 28
  3762                           
  3763                           ;incstack = 0
  3764                           ;LED4_Control@state stored from wreg
  3765   00531E  6E06               	movwf	LED4_Control@state^0,c
  3766   005320  B006               	btfsc	LED4_Control@state^0,0,c
  3767   005322  D002               	bra	u9625
  3768   005324  988C               	bcf	140,4,c	;volatile
  3769   005326  D001               	bra	u9626
  3770   005328                     u9625:
  3771   005328  888C               	bsf	140,4,c	;volatile
  3772   00532A                     u9626:
  3773   00532A  0012               	return		;funcret
  3774   00532C                     __end_of_LED4_Control:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _LED3_Control *****************
  3778 ;; Defined at:
  3779 ;;		line 12 in file "GPIO.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  state           1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  state           1    5[COMRAM] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;Total ram usage:        1 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_runGPIO
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text8
  3808   00532C                     __ptext8:
  3809                           	callstack 0
  3810   00532C                     _LED3_Control:
  3811                           	callstack 28
  3812                           
  3813                           ;incstack = 0
  3814                           ;LED3_Control@state stored from wreg
  3815   00532C  6E06               	movwf	LED3_Control@state^0,c
  3816   00532E  B006               	btfsc	LED3_Control@state^0,0,c
  3817   005330  D002               	bra	u9615
  3818   005332  988B               	bcf	139,4,c	;volatile
  3819   005334  D001               	bra	u9616
  3820   005336                     u9615:
  3821   005336  888B               	bsf	139,4,c	;volatile
  3822   005338                     u9616:
  3823   005338  0012               	return		;funcret
  3824   00533A                     __end_of_LED3_Control:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _LED2_Control *****************
  3828 ;; Defined at:
  3829 ;;		line 11 in file "GPIO.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  state           1    wreg     unsigned char 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  state           1    5[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;Total ram usage:        1 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_runGPIO
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text9
  3858   00533A                     __ptext9:
  3859                           	callstack 0
  3860   00533A                     _LED2_Control:
  3861                           	callstack 28
  3862                           
  3863                           ;incstack = 0
  3864                           ;LED2_Control@state stored from wreg
  3865   00533A  6E06               	movwf	LED2_Control@state^0,c
  3866   00533C  B006               	btfsc	LED2_Control@state^0,0,c
  3867   00533E  D002               	bra	u9605
  3868   005340  968C               	bcf	140,3,c	;volatile
  3869   005342  D001               	bra	u9606
  3870   005344                     u9605:
  3871   005344  868C               	bsf	140,3,c	;volatile
  3872   005346                     u9606:
  3873   005346  0012               	return		;funcret
  3874   005348                     __end_of_LED2_Control:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function _LED1_Control *****************
  3878 ;; Defined at:
  3879 ;;		line 10 in file "GPIO.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  state           1    wreg     unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  state           1    5[COMRAM] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		wreg
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;Total ram usage:        1 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_runGPIO
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text10
  3908   005348                     __ptext10:
  3909                           	callstack 0
  3910   005348                     _LED1_Control:
  3911                           	callstack 28
  3912                           
  3913                           ;incstack = 0
  3914                           ;LED1_Control@state stored from wreg
  3915   005348  6E06               	movwf	LED1_Control@state^0,c
  3916   00534A  B006               	btfsc	LED1_Control@state^0,0,c
  3917   00534C  D002               	bra	u9595
  3918   00534E  948C               	bcf	140,2,c	;volatile
  3919   005350  D001               	bra	u9596
  3920   005352                     u9595:
  3921   005352  848C               	bsf	140,2,c	;volatile
  3922   005354                     u9596:
  3923   005354  0012               	return		;funcret
  3924   005356                     __end_of_LED1_Control:
  3925                           	callstack 0
  3926                           
  3927 ;; *************** function _LED6_Control *****************
  3928 ;; Defined at:
  3929 ;;		line 15 in file "GPIO.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  state           1    wreg     unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  state           1    5[COMRAM] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;Total ram usage:        1 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_runGPIO
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text11
  3958   005356                     __ptext11:
  3959                           	callstack 0
  3960   005356                     _LED6_Control:
  3961                           	callstack 28
  3962                           
  3963                           ;incstack = 0
  3964                           ;LED6_Control@state stored from wreg
  3965   005356  6E06               	movwf	LED6_Control@state^0,c
  3966   005358  B006               	btfsc	LED6_Control@state^0,0,c
  3967   00535A  D002               	bra	u9645
  3968   00535C  9C8C               	bcf	140,6,c	;volatile
  3969   00535E  D001               	bra	u9646
  3970   005360                     u9645:
  3971   005360  8C8C               	bsf	140,6,c	;volatile
  3972   005362                     u9646:
  3973   005362  0012               	return		;funcret
  3974   005364                     __end_of_LED6_Control:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _runGAME *****************
  3978 ;; Defined at:
  3979 ;;		line 10 in file "GAME.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  approxText     25   17[BANK1 ] unsigned char [25]
  3984 ;;  text           17    0[BANK1 ] unsigned char [17]
  3985 ;;  randomNumber    2   48[BANK1 ] unsigned short 
  3986 ;;  pot1            2   46[BANK1 ] unsigned short 
  3987 ;;  GAMEdivider     1   45[BANK1 ] unsigned char 
  3988 ;;  GAMEround       1   44[BANK1 ] unsigned char 
  3989 ;;  GAMEpart        1   43[BANK1 ] unsigned char 
  3990 ;;  keepStateGAM    1   42[BANK1 ] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4004 ;;Total ram usage:       52 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 9
  4007 ;; This function calls:
  4008 ;;		_LCD_ShowString
  4009 ;;		___awdiv
  4010 ;;		___lbdiv
  4011 ;;		_rand
  4012 ;;		_sprintf
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text12
  4019   001E9E                     __ptext12:
  4020                           	callstack 0
  4021   001E9E                     _runGAME:
  4022                           	callstack 21
  4023   001E9E                     
  4024                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  4025   001E9E  9495               	bcf	149,2,c	;volatile
  4026                           
  4027                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  4028   001EA0  9695               	bcf	149,3,c	;volatile
  4029                           
  4030                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  4031   001EA2  9894               	bcf	148,4,c	;volatile
  4032                           
  4033                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  4034   001EA4  9895               	bcf	149,4,c	;volatile
  4035                           
  4036                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  4037   001EA6  9A95               	bcf	149,5,c	;volatile
  4038                           
  4039                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  4040   001EA8  9C95               	bcf	149,6,c	;volatile
  4041                           
  4042                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  4043   001EAA  010F               	movlb	15	; () banked
  4044   001EAC  953B               	bcf	59,2,b	;volatile
  4045                           
  4046                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  4047   001EAE  973B               	bcf	59,3,b	;volatile
  4048                           
  4049                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  4050   001EB0  993A               	bcf	58,4,b	;volatile
  4051                           
  4052                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  4053   001EB2  993B               	bcf	59,4,b	;volatile
  4054                           
  4055                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  4056   001EB4  9B3B               	bcf	59,5,b	;volatile
  4057                           
  4058                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  4059   001EB6  9D3B               	bcf	59,6,b	;volatile
  4060                           
  4061                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  4062   001EB8  848C               	bsf	140,2,c	;volatile
  4063                           
  4064                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  4065   001EBA  868C               	bsf	140,3,c	;volatile
  4066                           
  4067                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  4068   001EBC  888B               	bsf	139,4,c	;volatile
  4069                           
  4070                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  4071   001EBE  888C               	bsf	140,4,c	;volatile
  4072                           
  4073                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  4074   001EC0  8A8C               	bsf	140,5,c	;volatile
  4075                           
  4076                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  4077   001EC2  8C8C               	bsf	140,6,c	;volatile
  4078                           
  4079                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  4080   001EC4  8492               	bsf	146,2,c	;volatile
  4081                           
  4082                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  4083   001EC6  9538               	bcf	56,2,b	;volatile
  4084                           
  4085                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  4086   001EC8  8B38               	bsf	56,5,b	;volatile
  4087                           
  4088                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  4089   001ECA  8EC0               	bsf	192,7,c	;volatile
  4090   001ECC                     
  4091                           ; BSR set to: 15
  4092                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  4093   001ECC  50C0               	movf	192,w,c	;volatile
  4094   001ECE  0BF8               	andlw	-8
  4095   001ED0  0906               	iorlw	6
  4096   001ED2  6EC0               	movwf	192,c	;volatile
  4097                           
  4098                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  4099   001ED4  50C0               	movf	192,w,c	;volatile
  4100   001ED6  0BC7               	andlw	-57
  4101   001ED8  0930               	iorlw	48
  4102   001EDA  6EC0               	movwf	192,c	;volatile
  4103   001EDC                     
  4104                           ; BSR set to: 15
  4105                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  4106   001EDC  80C2               	bsf	194,0,c	;volatile
  4107   001EDE                     
  4108                           ; BSR set to: 15
  4109                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  4110   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  4111   001EE2  0E10               	movlw	16
  4112   001EE4                     u10161:
  4113   001EE4  6ADE               	clrf	postinc2,c
  4114   001EE6  06E8               	decf	wreg,f,c
  4115   001EE8  E2FD               	bc	u10161
  4116   001EEA                     
  4117                           ; BSR set to: 15
  4118                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  4119   001EEA  0E3F               	movlw	-193
  4120   001EEC  16CD               	andwf	205,f,c	;volatile
  4121   001EEE                     
  4122                           ; BSR set to: 15
  4123                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  4124   001EEE  0E30               	movlw	48
  4125   001EF0  12CD               	iorwf	205,f,c	;volatile
  4126   001EF2                     
  4127                           ; BSR set to: 15
  4128                           ;GAME.c: 50:     TMR1IE = 1;
  4129   001EF2  809D               	bsf	3997,0,c	;volatile
  4130   001EF4                     
  4131                           ; BSR set to: 15
  4132                           ;GAME.c: 51:     PEIE = 1;
  4133   001EF4  8CF2               	bsf	4082,6,c	;volatile
  4134   001EF6                     
  4135                           ; BSR set to: 15
  4136                           ;GAME.c: 52:     GIE = 1;
  4137   001EF6  8EF2               	bsf	4082,7,c	;volatile
  4138   001EF8                     
  4139                           ; BSR set to: 15
  4140                           ;GAME.c: 53:     GAMEIE = 1;
  4141   001EF8  0E01               	movlw	1
  4142   001EFA  0101               	movlb	1	; () banked
  4143   001EFC  6F24               	movwf	_GAMEIE& (0+255),b
  4144   001EFE                     
  4145                           ; BSR set to: 1
  4146                           ;GAME.c: 54:     TMR1IF = 1;
  4147   001EFE  809E               	bsf	3998,0,c	;volatile
  4148   001F00                     
  4149                           ; BSR set to: 1
  4150                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  4151   001F00  0E0B               	movlw	11
  4152   001F02  6ECF               	movwf	207,c	;volatile
  4153   001F04  0EDC               	movlw	220
  4154   001F06  6ECE               	movwf	206,c	;volatile
  4155   001F08                     
  4156                           ; BSR set to: 1
  4157                           ;GAME.c: 56:     TMR1ON = 1;
  4158   001F08  80CD               	bsf	4045,0,c	;volatile
  4159   001F0A                     
  4160                           ; BSR set to: 1
  4161                           ;GAME.c: 58:     GAMEtime = 0;
  4162   001F0A  0E00               	movlw	0
  4163   001F0C  6F23               	movwf	_GAMEtime& (0+255),b
  4164   001F0E                     
  4165                           ; BSR set to: 1
  4166                           ;GAME.c: 59:     uint8_t GAMEround = 1;
  4167   001F0E  0E01               	movlw	1
  4168   001F10  6FC7               	movwf	runGAME@GAMEround& (0+255),b
  4169   001F12                     
  4170                           ; BSR set to: 1
  4171                           ;GAME.c: 62:     char approxText[25] = "";
  4172   001F12  EE21  F0AC         	lfsr	2,runGAME@approxText
  4173   001F16  0E18               	movlw	24
  4174   001F18                     u10171:
  4175   001F18  6ADE               	clrf	postinc2,c
  4176   001F1A  06E8               	decf	wreg,f,c
  4177   001F1C  E2FD               	bc	u10171
  4178   001F1E                     
  4179                           ; BSR set to: 1
  4180                           ;GAME.c: 65:     uint16_t randomNumber;;GAME.c: 66:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  4181   001F1E  EC9A  F026         	call	_rand
  4182   001F22  C012  F018         	movff	?_rand,___awdiv@dividend
  4183   001F26  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4184   001F2A  0E00               	movlw	0
  4185   001F2C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4186   001F2E  0E21               	movlw	33
  4187   001F30  6E1A               	movwf	___awdiv@divisor^0,c
  4188   001F32  EC52  F024         	call	___awdiv	;wreg free
  4189   001F36  0E02               	movlw	2
  4190   001F38  2418               	addwf	?___awdiv^0,w,c
  4191   001F3A  0101               	movlb	1	; () banked
  4192   001F3C  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4193   001F3E  0E00               	movlw	0
  4194   001F40  2019               	addwfc	(?___awdiv+1)^0,w,c
  4195   001F42  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4196   001F44                     
  4197                           ; BSR set to: 1
  4198                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  4199   001F44  0EAC               	movlw	low runGAME@approxText
  4200   001F46  0100               	movlb	0	; () banked
  4201   001F48  6FCE               	movwf	sprintf@s& (0+255),b
  4202   001F4A  0E01               	movlw	high runGAME@approxText
  4203   001F4C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4204   001F4E  0E33               	movlw	low STR_36
  4205   001F50  6FD0               	movwf	sprintf@fmt& (0+255),b
  4206   001F52  0EFE               	movlw	high STR_36
  4207   001F54  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4208   001F56  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4209   001F5A  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4210   001F5E  EC2C  F028         	call	_sprintf	;wreg free
  4211   001F62                     
  4212                           ;GAME.c: 68:     LCD_ShowString((char)1, approxText);
  4213   001F62  0EAC               	movlw	low runGAME@approxText
  4214   001F64  6E07               	movwf	LCD_ShowString@textData^0,c
  4215   001F66  0E01               	movlw	high runGAME@approxText
  4216   001F68  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4217   001F6A  0E01               	movlw	1
  4218   001F6C  ECB4  F024         	call	_LCD_ShowString
  4219   001F70                     
  4220                           ;GAME.c: 69:     keepStateGAME = 1;
  4221   001F70  0E01               	movlw	1
  4222   001F72  0101               	movlb	1	; () banked
  4223   001F74  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4224                           
  4225                           ;GAME.c: 72:     while(keepStateGAME){
  4226   001F76  EF36  F011         	goto	l8388
  4227   001F7A                     l8322:
  4228                           
  4229                           ; BSR set to: 1
  4230                           ;GAME.c: 74:         ADCON0bits.CHS = 4;
  4231   001F7A  50C2               	movf	194,w,c	;volatile
  4232   001F7C  0B83               	andlw	-125
  4233   001F7E  0910               	iorlw	16
  4234   001F80  6EC2               	movwf	194,c	;volatile
  4235   001F82                     
  4236                           ; BSR set to: 1
  4237                           ;GAME.c: 75:         GODONE = 1;
  4238   001F82  82C2               	bsf	4034,1,c	;volatile
  4239   001F84                     l664:
  4240   001F84  B2C2               	btfsc	4034,1,c	;volatile
  4241   001F86  EFC7  F00F         	goto	u10181
  4242   001F8A  EFC9  F00F         	goto	u10180
  4243   001F8E                     u10181:
  4244   001F8E  EFC2  F00F         	goto	l664
  4245   001F92                     u10180:
  4246   001F92                     
  4247                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4248   001F92  50C3               	movf	195,w,c	;volatile
  4249   001F94  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  4250   001F98  0100               	movlb	0	; () banked
  4251   001F9A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  4252   001F9C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  4253   001FA0  6BE7               	clrf	??_runGAME& (0+255),b
  4254   001FA2  11E7               	iorwf	??_runGAME& (0+255),w,b
  4255   001FA4  0101               	movlb	1	; () banked
  4256   001FA6  6FC9               	movwf	runGAME@pot1& (0+255),b
  4257   001FA8  0100               	movlb	0	; () banked
  4258   001FAA  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4259   001FAC  0101               	movlb	1	; () banked
  4260   001FAE  6FCA               	movwf	(runGAME@pot1+1)& (0+255),b
  4261   001FB0                     
  4262                           ; BSR set to: 1
  4263                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  4264   001FB0  0E9B               	movlw	low runGAME@text
  4265   001FB2  0100               	movlb	0	; () banked
  4266   001FB4  6FCE               	movwf	sprintf@s& (0+255),b
  4267   001FB6  0E01               	movlw	high runGAME@text
  4268   001FB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4269   001FBA  0E6B               	movlw	low STR_37
  4270   001FBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  4271   001FBE  0EFE               	movlw	high STR_37
  4272   001FC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4273   001FC2  C1C9  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4274   001FC6  C1CA  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4275   001FCA  EC2C  F028         	call	_sprintf	;wreg free
  4276   001FCE                     
  4277                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4278   001FCE  0E9B               	movlw	low runGAME@text
  4279   001FD0  6E07               	movwf	LCD_ShowString@textData^0,c
  4280   001FD2  0E01               	movlw	high runGAME@text
  4281   001FD4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4282   001FD6  0E02               	movlw	2
  4283   001FD8  ECB4  F024         	call	_LCD_ShowString
  4284                           
  4285                           ;GAME.c: 82:         switch(GAMEround){
  4286   001FDC  EF04  F010         	goto	l8344
  4287   001FE0                     l8332:
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;GAME.c: 84:                 GAMEdivider = 26;
  4291   001FE0  0E1A               	movlw	26
  4292   001FE2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4293                           
  4294                           ;GAME.c: 85:                 break;
  4295   001FE4  EF18  F010         	goto	l8346
  4296   001FE8                     l8334:
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;GAME.c: 87:                 GAMEdivider = 24;
  4300   001FE8  0E18               	movlw	24
  4301   001FEA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4302                           
  4303                           ;GAME.c: 88:                 break;
  4304   001FEC  EF18  F010         	goto	l8346
  4305   001FF0                     l8336:
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;GAME.c: 90:                 GAMEdivider = 18;
  4309   001FF0  0E12               	movlw	18
  4310   001FF2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4311                           
  4312                           ;GAME.c: 91:                 break;
  4313   001FF4  EF18  F010         	goto	l8346
  4314   001FF8                     l8338:
  4315                           
  4316                           ; BSR set to: 1
  4317                           ;GAME.c: 93:                 GAMEdivider = 16;
  4318   001FF8  0E10               	movlw	16
  4319   001FFA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4320                           
  4321                           ;GAME.c: 94:                 break;
  4322   001FFC  EF18  F010         	goto	l8346
  4323   002000                     l8340:
  4324                           
  4325                           ; BSR set to: 1
  4326                           ;GAME.c: 96:                 GAMEdivider = 15;
  4327   002000  0E0F               	movlw	15
  4328   002002  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4329                           
  4330                           ;GAME.c: 97:                 break;
  4331   002004  EF18  F010         	goto	l8346
  4332   002008                     l8344:
  4333   002008  0101               	movlb	1	; () banked
  4334   00200A  51C7               	movf	runGAME@GAMEround& (0+255),w,b
  4335                           
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 4, Range of values is 1 to 4
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte           13     7 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342   00200C  0A01               	xorlw	1	; case 1
  4343   00200E  B4D8               	btfsc	status,2,c
  4344   002010  EFF0  F00F         	goto	l8332
  4345   002014  0A03               	xorlw	3	; case 2
  4346   002016  B4D8               	btfsc	status,2,c
  4347   002018  EFF4  F00F         	goto	l8334
  4348   00201C  0A01               	xorlw	1	; case 3
  4349   00201E  B4D8               	btfsc	status,2,c
  4350   002020  EFF8  F00F         	goto	l8336
  4351   002024  0A07               	xorlw	7	; case 4
  4352   002026  B4D8               	btfsc	status,2,c
  4353   002028  EFFC  F00F         	goto	l8338
  4354   00202C  EF00  F010         	goto	l8340
  4355   002030                     l8346:
  4356                           
  4357                           ; BSR set to: 1
  4358                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4359   002030  C1C8  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4360   002034  5123               	movf	_GAMEtime& (0+255),w,b
  4361   002036  EC38  F027         	call	___lbdiv
  4362   00203A  0101               	movlb	1	; () banked
  4363   00203C  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4364   00203E                     
  4365                           ; BSR set to: 1
  4366                           ;GAME.c: 102:         if(PORTAbits.RA2){
  4367   00203E  A480               	btfss	128,2,c	;volatile
  4368   002040  EF24  F010         	goto	u10191
  4369   002044  EF26  F010         	goto	u10190
  4370   002048                     u10191:
  4371   002048  EF12  F011         	goto	l8386
  4372   00204C                     u10190:
  4373   00204C                     
  4374                           ; BSR set to: 1
  4375                           ;GAME.c: 103:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4376   00204C  0E03               	movlw	3
  4377   00204E  0100               	movlb	0	; () banked
  4378   002050  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4379   002052  0E08               	movlw	8
  4380   002054  6FE7               	movwf	??_runGAME& (0+255),b
  4381   002056  0E77               	movlw	119
  4382   002058                     u10507:
  4383   002058  2EE8               	decfsz	wreg,f,c
  4384   00205A  D7FE               	bra	u10507
  4385   00205C  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4386   00205E  D7FC               	bra	u10507
  4387   002060  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4388   002062  D7FA               	bra	u10507
  4389   002064                     
  4390                           ;GAME.c: 104:             if(PORTAbits.RA2){
  4391   002064  A480               	btfss	128,2,c	;volatile
  4392   002066  EF37  F010         	goto	u10201
  4393   00206A  EF39  F010         	goto	u10200
  4394   00206E                     u10201:
  4395   00206E  EF12  F011         	goto	l8386
  4396   002072                     u10200:
  4397   002072                     l676:
  4398   002072  B480               	btfsc	128,2,c	;volatile
  4399   002074  EF3E  F010         	goto	u10211
  4400   002078  EF40  F010         	goto	u10210
  4401   00207C                     u10211:
  4402   00207C  EF39  F010         	goto	l676
  4403   002080                     u10210:
  4404   002080                     
  4405                           ;GAME.c: 106:                 GAMEpart = 7;
  4406   002080  0E07               	movlw	7
  4407   002082  0101               	movlb	1	; () banked
  4408   002084  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4409   002086  EF12  F011         	goto	l8386
  4410   00208A                     l680:
  4411                           
  4412                           ; BSR set to: 1
  4413                           ;GAME.c: 112:                 LATDbits.LD2 = 1;
  4414   00208A  848C               	bsf	140,2,c	;volatile
  4415                           
  4416                           ;GAME.c: 113:                 LATDbits.LD3 = 1;
  4417   00208C  868C               	bsf	140,3,c	;volatile
  4418                           
  4419                           ;GAME.c: 114:                 LATCbits.LC4 = 1;
  4420   00208E  888B               	bsf	139,4,c	;volatile
  4421                           
  4422                           ;GAME.c: 115:                 LATDbits.LD4 = 1;
  4423   002090  888C               	bsf	140,4,c	;volatile
  4424                           
  4425                           ;GAME.c: 116:                 LATDbits.LD5 = 1;
  4426   002092  8A8C               	bsf	140,5,c	;volatile
  4427                           
  4428                           ;GAME.c: 117:                 LATDbits.LD6 = 1;
  4429   002094  8C8C               	bsf	140,6,c	;volatile
  4430                           
  4431                           ;GAME.c: 118:                 break;
  4432   002096  EF36  F011         	goto	l8388
  4433   00209A                     l682:
  4434                           
  4435                           ; BSR set to: 1
  4436                           ;GAME.c: 120:                 LATDbits.LD2 = 0;
  4437   00209A  948C               	bcf	140,2,c	;volatile
  4438                           
  4439                           ;GAME.c: 121:                 LATDbits.LD3 = 1;
  4440   00209C  868C               	bsf	140,3,c	;volatile
  4441                           
  4442                           ;GAME.c: 122:                 LATCbits.LC4 = 1;
  4443   00209E  888B               	bsf	139,4,c	;volatile
  4444                           
  4445                           ;GAME.c: 123:                 LATDbits.LD4 = 1;
  4446   0020A0  888C               	bsf	140,4,c	;volatile
  4447                           
  4448                           ;GAME.c: 124:                 LATDbits.LD5 = 1;
  4449   0020A2  8A8C               	bsf	140,5,c	;volatile
  4450                           
  4451                           ;GAME.c: 125:                 LATDbits.LD6 = 1;
  4452   0020A4  8C8C               	bsf	140,6,c	;volatile
  4453                           
  4454                           ;GAME.c: 126:                 break;
  4455   0020A6  EF36  F011         	goto	l8388
  4456   0020AA                     l683:
  4457                           
  4458                           ; BSR set to: 1
  4459                           ;GAME.c: 128:                 LATDbits.LD2 = 0;
  4460   0020AA  948C               	bcf	140,2,c	;volatile
  4461                           
  4462                           ;GAME.c: 129:                 LATDbits.LD3 = 0;
  4463   0020AC  968C               	bcf	140,3,c	;volatile
  4464                           
  4465                           ;GAME.c: 130:                 LATCbits.LC4 = 1;
  4466   0020AE  888B               	bsf	139,4,c	;volatile
  4467                           
  4468                           ;GAME.c: 131:                 LATDbits.LD4 = 1;
  4469   0020B0  888C               	bsf	140,4,c	;volatile
  4470                           
  4471                           ;GAME.c: 132:                 LATDbits.LD5 = 1;
  4472   0020B2  8A8C               	bsf	140,5,c	;volatile
  4473                           
  4474                           ;GAME.c: 133:                 LATDbits.LD6 = 1;
  4475   0020B4  8C8C               	bsf	140,6,c	;volatile
  4476                           
  4477                           ;GAME.c: 134:                 break;
  4478   0020B6  EF36  F011         	goto	l8388
  4479   0020BA                     l684:
  4480                           
  4481                           ; BSR set to: 1
  4482                           ;GAME.c: 136:                 LATDbits.LD2 = 0;
  4483   0020BA  948C               	bcf	140,2,c	;volatile
  4484                           
  4485                           ;GAME.c: 137:                 LATDbits.LD3 = 0;
  4486   0020BC  968C               	bcf	140,3,c	;volatile
  4487                           
  4488                           ;GAME.c: 138:                 LATCbits.LC4 = 0;
  4489   0020BE  988B               	bcf	139,4,c	;volatile
  4490                           
  4491                           ;GAME.c: 139:                 LATDbits.LD4 = 1;
  4492   0020C0  888C               	bsf	140,4,c	;volatile
  4493                           
  4494                           ;GAME.c: 140:                 LATDbits.LD5 = 1;
  4495   0020C2  8A8C               	bsf	140,5,c	;volatile
  4496                           
  4497                           ;GAME.c: 141:                 LATDbits.LD6 = 1;
  4498   0020C4  8C8C               	bsf	140,6,c	;volatile
  4499                           
  4500                           ;GAME.c: 142:                 break;
  4501   0020C6  EF36  F011         	goto	l8388
  4502   0020CA                     l685:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;GAME.c: 144:                 LATDbits.LD2 = 0;
  4506   0020CA  948C               	bcf	140,2,c	;volatile
  4507                           
  4508                           ;GAME.c: 145:                 LATDbits.LD3 = 0;
  4509   0020CC  968C               	bcf	140,3,c	;volatile
  4510                           
  4511                           ;GAME.c: 146:                 LATCbits.LC4 = 0;
  4512   0020CE  988B               	bcf	139,4,c	;volatile
  4513                           
  4514                           ;GAME.c: 147:                 LATDbits.LD4 = 0;
  4515   0020D0  988C               	bcf	140,4,c	;volatile
  4516                           
  4517                           ;GAME.c: 148:                 LATDbits.LD5 = 1;
  4518   0020D2  8A8C               	bsf	140,5,c	;volatile
  4519                           
  4520                           ;GAME.c: 149:                 LATDbits.LD6 = 1;
  4521   0020D4  8C8C               	bsf	140,6,c	;volatile
  4522                           
  4523                           ;GAME.c: 150:                 break;
  4524   0020D6  EF36  F011         	goto	l8388
  4525   0020DA                     l686:
  4526                           
  4527                           ; BSR set to: 1
  4528                           ;GAME.c: 152:                 LATDbits.LD2 = 0;
  4529   0020DA  948C               	bcf	140,2,c	;volatile
  4530                           
  4531                           ;GAME.c: 153:                 LATDbits.LD3 = 0;
  4532   0020DC  968C               	bcf	140,3,c	;volatile
  4533                           
  4534                           ;GAME.c: 154:                 LATCbits.LC4 = 0;
  4535   0020DE  988B               	bcf	139,4,c	;volatile
  4536                           
  4537                           ;GAME.c: 155:                 LATDbits.LD4 = 0;
  4538   0020E0  988C               	bcf	140,4,c	;volatile
  4539                           
  4540                           ;GAME.c: 156:                 LATDbits.LD5 = 0;
  4541   0020E2  9A8C               	bcf	140,5,c	;volatile
  4542                           
  4543                           ;GAME.c: 157:                 LATDbits.LD6 = 1;
  4544   0020E4  8C8C               	bsf	140,6,c	;volatile
  4545                           
  4546                           ;GAME.c: 158:                 break;
  4547   0020E6  EF36  F011         	goto	l8388
  4548   0020EA                     l687:
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;GAME.c: 160:                 LATDbits.LD2 = 0;
  4552   0020EA  948C               	bcf	140,2,c	;volatile
  4553                           
  4554                           ;GAME.c: 161:                 LATDbits.LD3 = 0;
  4555   0020EC  968C               	bcf	140,3,c	;volatile
  4556                           
  4557                           ;GAME.c: 162:                 LATCbits.LC4 = 0;
  4558   0020EE  988B               	bcf	139,4,c	;volatile
  4559                           
  4560                           ;GAME.c: 163:                 LATDbits.LD4 = 0;
  4561   0020F0  988C               	bcf	140,4,c	;volatile
  4562                           
  4563                           ;GAME.c: 164:                 LATDbits.LD5 = 0;
  4564   0020F2  9A8C               	bcf	140,5,c	;volatile
  4565                           
  4566                           ;GAME.c: 165:                 LATDbits.LD6 = 0;
  4567   0020F4  9C8C               	bcf	140,6,c	;volatile
  4568                           
  4569                           ;GAME.c: 166:                 break;
  4570   0020F6  EF36  F011         	goto	l8388
  4571   0020FA                     l8358:
  4572                           
  4573                           ; BSR set to: 1
  4574                           ;GAME.c: 168:                 GAMEtime = 0;
  4575   0020FA  0E00               	movlw	0
  4576   0020FC  6F23               	movwf	_GAMEtime& (0+255),b
  4577   0020FE                     
  4578                           ; BSR set to: 1
  4579                           ;GAME.c: 169:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4580   0020FE  0EFE               	movlw	254
  4581   002100  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4582   002102  0100               	movlb	0	; () banked
  4583   002104  6FE7               	movwf	??_runGAME& (0+255),b
  4584   002106  0EFF               	movlw	255
  4585   002108  0101               	movlb	1	; () banked
  4586   00210A  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4587   00210C  0100               	movlb	0	; () banked
  4588   00210E  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4589   002110  51E7               	movf	??_runGAME& (0+255),w,b
  4590   002112  0101               	movlb	1	; () banked
  4591   002114  5DC9               	subwf	runGAME@pot1& (0+255),w,b
  4592   002116  0100               	movlb	0	; () banked
  4593   002118  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4594   00211A  0101               	movlb	1	; () banked
  4595   00211C  59CA               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4596   00211E  A0D8               	btfss	status,0,c
  4597   002120  EF94  F010         	goto	u10221
  4598   002124  EF96  F010         	goto	u10220
  4599   002128                     u10221:
  4600   002128  EFDE  F010         	goto	l689
  4601   00212C                     u10220:
  4602   00212C                     
  4603                           ; BSR set to: 1
  4604   00212C  0E02               	movlw	2
  4605   00212E  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4606   002130  0100               	movlb	0	; () banked
  4607   002132  6FE7               	movwf	??_runGAME& (0+255),b
  4608   002134  0E00               	movlw	0
  4609   002136  0101               	movlb	1	; () banked
  4610   002138  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4611   00213A  0100               	movlb	0	; () banked
  4612   00213C  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4613   00213E  0101               	movlb	1	; () banked
  4614   002140  51C9               	movf	runGAME@pot1& (0+255),w,b
  4615   002142  0100               	movlb	0	; () banked
  4616   002144  5DE7               	subwf	??_runGAME& (0+255),w,b
  4617   002146  0101               	movlb	1	; () banked
  4618   002148  51CA               	movf	(runGAME@pot1+1)& (0+255),w,b
  4619   00214A  0100               	movlb	0	; () banked
  4620   00214C  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4621   00214E  A0D8               	btfss	status,0,c
  4622   002150  EFAC  F010         	goto	u10231
  4623   002154  EFAE  F010         	goto	u10230
  4624   002158                     u10231:
  4625   002158  EFDE  F010         	goto	l689
  4626   00215C                     u10230:
  4627   00215C                     
  4628                           ; BSR set to: 0
  4629                           ;GAME.c: 170:                     GAMEround += 1;
  4630   00215C  0101               	movlb	1	; () banked
  4631   00215E  2BC7               	incf	runGAME@GAMEround& (0+255),f,b
  4632   002160                     
  4633                           ; BSR set to: 1
  4634                           ;GAME.c: 171:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4635   002160  EC9A  F026         	call	_rand	;wreg free
  4636   002164  C012  F018         	movff	?_rand,___awdiv@dividend
  4637   002168  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4638   00216C  0E00               	movlw	0
  4639   00216E  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4640   002170  0E21               	movlw	33
  4641   002172  6E1A               	movwf	___awdiv@divisor^0,c
  4642   002174  EC52  F024         	call	___awdiv	;wreg free
  4643   002178  0E02               	movlw	2
  4644   00217A  2418               	addwf	?___awdiv^0,w,c
  4645   00217C  0101               	movlb	1	; () banked
  4646   00217E  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4647   002180  0E00               	movlw	0
  4648   002182  2019               	addwfc	(?___awdiv+1)^0,w,c
  4649   002184  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4650   002186                     
  4651                           ; BSR set to: 1
  4652                           ;GAME.c: 172:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4653   002186  0EAC               	movlw	low runGAME@approxText
  4654   002188  0100               	movlb	0	; () banked
  4655   00218A  6FCE               	movwf	sprintf@s& (0+255),b
  4656   00218C  0E01               	movlw	high runGAME@approxText
  4657   00218E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4658   002190  0E33               	movlw	low STR_36
  4659   002192  6FD0               	movwf	sprintf@fmt& (0+255),b
  4660   002194  0EFE               	movlw	high STR_36
  4661   002196  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4662   002198  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4663   00219C  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4664   0021A0  EC2C  F028         	call	_sprintf	;wreg free
  4665   0021A4                     
  4666                           ;GAME.c: 173:                     keepStateGAME = 1;
  4667   0021A4  0E01               	movlw	1
  4668   0021A6  0101               	movlb	1	; () banked
  4669   0021A8  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4670   0021AA                     
  4671                           ; BSR set to: 1
  4672                           ;GAME.c: 174:                     LCD_ShowString((char)1, approxText);
  4673   0021AA  0EAC               	movlw	low runGAME@approxText
  4674   0021AC  6E07               	movwf	LCD_ShowString@textData^0,c
  4675   0021AE  0E01               	movlw	high runGAME@approxText
  4676   0021B0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4677   0021B2  0E01               	movlw	1
  4678   0021B4  ECB4  F024         	call	_LCD_ShowString
  4679                           
  4680                           ;GAME.c: 175:                 } else {
  4681   0021B8  EF36  F011         	goto	l8388
  4682   0021BC                     l689:
  4683                           
  4684                           ;GAME.c: 176:                     ADCON0bits.ADON = 0;
  4685   0021BC  90C2               	bcf	194,0,c	;volatile
  4686   0021BE                     
  4687                           ;GAME.c: 177:                     sprintf(approxText, "Skore: %u        ", GAMEround - 1
      +                          );
  4688   0021BE  0EAC               	movlw	low runGAME@approxText
  4689   0021C0  0100               	movlb	0	; () banked
  4690   0021C2  6FCE               	movwf	sprintf@s& (0+255),b
  4691   0021C4  0E01               	movlw	high runGAME@approxText
  4692   0021C6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4693   0021C8  0E59               	movlw	low STR_39
  4694   0021CA  6FD0               	movwf	sprintf@fmt& (0+255),b
  4695   0021CC  0EFE               	movlw	high STR_39
  4696   0021CE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4697   0021D0  0EFF               	movlw	255
  4698   0021D2  0101               	movlb	1	; () banked
  4699   0021D4  25C7               	addwf	runGAME@GAMEround& (0+255),w,b
  4700   0021D6  0100               	movlb	0	; () banked
  4701   0021D8  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  4702   0021DA  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4703   0021DC  0EFF               	movlw	255
  4704   0021DE  23D3               	addwfc	(?_sprintf+5)& (0+255),f,b
  4705   0021E0  EC2C  F028         	call	_sprintf	;wreg free
  4706   0021E4                     
  4707                           ;GAME.c: 178:                     LCD_ShowString((char)1, "GAME OVER       ");
  4708   0021E4  0E7C               	movlw	low STR_40
  4709   0021E6  6E07               	movwf	LCD_ShowString@textData^0,c
  4710   0021E8  0EFE               	movlw	high STR_40
  4711   0021EA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4712   0021EC  0E01               	movlw	1
  4713   0021EE  ECB4  F024         	call	_LCD_ShowString
  4714   0021F2                     
  4715                           ;GAME.c: 179:                     LCD_ShowString((char)2, approxText);
  4716   0021F2  0EAC               	movlw	low runGAME@approxText
  4717   0021F4  6E07               	movwf	LCD_ShowString@textData^0,c
  4718   0021F6  0E01               	movlw	high runGAME@approxText
  4719   0021F8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4720   0021FA  0E02               	movlw	2
  4721   0021FC  ECB4  F024         	call	_LCD_ShowString
  4722   002200                     
  4723                           ;GAME.c: 180:                     keepStateGAME = 0;
  4724   002200  0E00               	movlw	0
  4725   002202  0101               	movlb	1	; () banked
  4726   002204  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4727   002206                     
  4728                           ; BSR set to: 1
  4729                           ;GAME.c: 181:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4730   002206  0E52               	movlw	82
  4731   002208  0100               	movlb	0	; () banked
  4732   00220A  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4733   00220C  0E2B               	movlw	43
  4734   00220E  6FE7               	movwf	??_runGAME& (0+255),b
  4735   002210  0E00               	movlw	0
  4736   002212                     u10517:
  4737   002212  2EE8               	decfsz	wreg,f,c
  4738   002214  D7FE               	bra	u10517
  4739   002216  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4740   002218  D7FC               	bra	u10517
  4741   00221A  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4742   00221C  D7FA               	bra	u10517
  4743   00221E  0000               	nop	
  4744   002220  EF36  F011         	goto	l8388
  4745   002224                     l8386:
  4746   002224  0101               	movlb	1	; () banked
  4747   002226  51C6               	movf	runGAME@GAMEpart& (0+255),w,b
  4748                           
  4749                           ; Switch size 1, requested type "simple"
  4750                           ; Number of cases is 8, Range of values is 0 to 7
  4751                           ; switch strategies available:
  4752                           ; Name         Instructions Cycles
  4753                           ; simple_byte           25    13 (average)
  4754                           ;	Chosen strategy is simple_byte
  4755   002228  0A00               	xorlw	0	; case 0
  4756   00222A  B4D8               	btfsc	status,2,c
  4757   00222C  EF45  F010         	goto	l680
  4758   002230  0A01               	xorlw	1	; case 1
  4759   002232  B4D8               	btfsc	status,2,c
  4760   002234  EF4D  F010         	goto	l682
  4761   002238  0A03               	xorlw	3	; case 2
  4762   00223A  B4D8               	btfsc	status,2,c
  4763   00223C  EF55  F010         	goto	l683
  4764   002240  0A01               	xorlw	1	; case 3
  4765   002242  B4D8               	btfsc	status,2,c
  4766   002244  EF5D  F010         	goto	l684
  4767   002248  0A07               	xorlw	7	; case 4
  4768   00224A  B4D8               	btfsc	status,2,c
  4769   00224C  EF65  F010         	goto	l685
  4770   002250  0A01               	xorlw	1	; case 5
  4771   002252  B4D8               	btfsc	status,2,c
  4772   002254  EF6D  F010         	goto	l686
  4773   002258  0A03               	xorlw	3	; case 6
  4774   00225A  B4D8               	btfsc	status,2,c
  4775   00225C  EF75  F010         	goto	l687
  4776   002260  0A01               	xorlw	1	; case 7
  4777   002262  B4D8               	btfsc	status,2,c
  4778   002264  EF7D  F010         	goto	l8358
  4779   002268  EF36  F011         	goto	l8388
  4780   00226C                     l8388:
  4781                           
  4782                           ;GAME.c: 72:     while(keepStateGAME){
  4783   00226C  0101               	movlb	1	; () banked
  4784   00226E  51C5               	movf	runGAME@keepStateGAME& (0+255),w,b
  4785   002270  A4D8               	btfss	status,2,c
  4786   002272  EF3D  F011         	goto	u10241
  4787   002276  EF3F  F011         	goto	u10240
  4788   00227A                     u10241:
  4789   00227A  EFBD  F00F         	goto	l8322
  4790   00227E                     u10240:
  4791   00227E                     
  4792                           ; BSR set to: 1
  4793                           ;GAME.c: 188:     LATDbits.LD2 = 1;
  4794   00227E  848C               	bsf	140,2,c	;volatile
  4795                           
  4796                           ;GAME.c: 189:     LATDbits.LD3 = 1;
  4797   002280  868C               	bsf	140,3,c	;volatile
  4798                           
  4799                           ;GAME.c: 190:     LATCbits.LC4 = 1;
  4800   002282  888B               	bsf	139,4,c	;volatile
  4801                           
  4802                           ;GAME.c: 191:     LATDbits.LD4 = 1;
  4803   002284  888C               	bsf	140,4,c	;volatile
  4804                           
  4805                           ;GAME.c: 192:     LATDbits.LD5 = 1;
  4806   002286  8A8C               	bsf	140,5,c	;volatile
  4807                           
  4808                           ;GAME.c: 193:     LATDbits.LD6 = 1;
  4809   002288  8C8C               	bsf	140,6,c	;volatile
  4810                           
  4811                           ;GAME.c: 194:     TMR1ON = 0;
  4812   00228A  90CD               	bcf	4045,0,c	;volatile
  4813                           
  4814                           ;GAME.c: 195:     TMR1IE = 0;
  4815   00228C  909D               	bcf	3997,0,c	;volatile
  4816   00228E                     
  4817                           ; BSR set to: 1
  4818                           ;GAME.c: 196:     GAMEIE = 0;
  4819   00228E  0E00               	movlw	0
  4820   002290  6F24               	movwf	_GAMEIE& (0+255),b
  4821   002292                     
  4822                           ; BSR set to: 1
  4823   002292  0012               	return		;funcret
  4824   002294                     __end_of_runGAME:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function _rand *****************
  4828 ;; Defined at:
  4829 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  2   17[COMRAM] int 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;Total ram usage:        6 bytes
  4848 ;; Hardware stack levels used: 1
  4849 ;; Hardware stack levels required when called: 2
  4850 ;; This function calls:
  4851 ;;		___lmul
  4852 ;; This function is called by:
  4853 ;;		_runGAME
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text13
  4858   004D34                     __ptext13:
  4859                           	callstack 0
  4860   004D34                     _rand:
  4861                           	callstack 27
  4862   004D34  C197  F006         	movff	_seed,___lmul@multiplier
  4863   004D38  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4864   004D3C  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4865   004D40  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4866   004D44  0E2D               	movlw	45
  4867   004D46  6E0A               	movwf	___lmul@multiplicand^0,c
  4868   004D48  0E7F               	movlw	127
  4869   004D4A  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4870   004D4C  0E95               	movlw	149
  4871   004D4E  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4872   004D50  0E4C               	movlw	76
  4873   004D52  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4874   004D54  ECD1  F026         	call	___lmul	;wreg free
  4875   004D58  0E01               	movlw	1
  4876   004D5A  2406               	addwf	?___lmul^0,w,c
  4877   004D5C  0101               	movlb	1	; () banked
  4878   004D5E  6F97               	movwf	_seed& (0+255),b
  4879   004D60  0E00               	movlw	0
  4880   004D62  2007               	addwfc	(?___lmul+1)^0,w,c
  4881   004D64  6F98               	movwf	(_seed+1)& (0+255),b
  4882   004D66  0E00               	movlw	0
  4883   004D68  2008               	addwfc	(?___lmul+2)^0,w,c
  4884   004D6A  6F99               	movwf	(_seed+2)& (0+255),b
  4885   004D6C  0E00               	movlw	0
  4886   004D6E  2009               	addwfc	(?___lmul+3)^0,w,c
  4887   004D70  6F9A               	movwf	(_seed+3)& (0+255),b
  4888   004D72                     
  4889                           ; BSR set to: 1
  4890   004D72  C197  F014         	movff	_seed,??_rand
  4891   004D76  C198  F015         	movff	_seed+1,??_rand+1
  4892   004D7A  C199  F016         	movff	_seed+2,??_rand+2
  4893   004D7E  C19A  F017         	movff	_seed+3,??_rand+3
  4894   004D82  0E12               	movlw	18
  4895   004D84  EFC9  F026         	goto	u9660
  4896   004D88                     u9665:
  4897   004D88  90D8               	bcf	status,0,c
  4898   004D8A  3217               	rrcf	(??_rand+3)^0,f,c
  4899   004D8C  3216               	rrcf	(??_rand+2)^0,f,c
  4900   004D8E  3215               	rrcf	(??_rand+1)^0,f,c
  4901   004D90  3214               	rrcf	??_rand^0,f,c
  4902   004D92                     u9660:
  4903   004D92  2EE8               	decfsz	wreg,f,c
  4904   004D94  EFC4  F026         	goto	u9665
  4905   004D98  C014  F012         	movff	??_rand,?_rand
  4906   004D9C  C015  F013         	movff	??_rand+1,?_rand+1
  4907   004DA0                     
  4908                           ; BSR set to: 1
  4909   004DA0  0012               	return		;funcret
  4910   004DA2                     __end_of_rand:
  4911                           	callstack 0
  4912                           
  4913 ;; *************** function ___lmul *****************
  4914 ;; Defined at:
  4915 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  multiplier      4    5[COMRAM] unsigned long 
  4918 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  product         4   13[COMRAM] unsigned long 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  4    5[COMRAM] unsigned long 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4930 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;Total ram usage:       12 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 1
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_rand
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text14
  4945   004DA2                     __ptext14:
  4946                           	callstack 0
  4947   004DA2                     ___lmul:
  4948                           	callstack 27
  4949   004DA2  0E00               	movlw	0
  4950   004DA4  6E0E               	movwf	___lmul@product^0,c
  4951   004DA6  0E00               	movlw	0
  4952   004DA8  6E0F               	movwf	(___lmul@product+1)^0,c
  4953   004DAA  0E00               	movlw	0
  4954   004DAC  6E10               	movwf	(___lmul@product+2)^0,c
  4955   004DAE  0E00               	movlw	0
  4956   004DB0  6E11               	movwf	(___lmul@product+3)^0,c
  4957   004DB2                     l7688:
  4958   004DB2  A006               	btfss	___lmul@multiplier^0,0,c
  4959   004DB4  EFDE  F026         	goto	u9281
  4960   004DB8  EFE0  F026         	goto	u9280
  4961   004DBC                     u9281:
  4962   004DBC  EFE8  F026         	goto	l7692
  4963   004DC0                     u9280:
  4964   004DC0  500A               	movf	___lmul@multiplicand^0,w,c
  4965   004DC2  260E               	addwf	___lmul@product^0,f,c
  4966   004DC4  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4967   004DC6  220F               	addwfc	(___lmul@product+1)^0,f,c
  4968   004DC8  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4969   004DCA  2210               	addwfc	(___lmul@product+2)^0,f,c
  4970   004DCC  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4971   004DCE  2211               	addwfc	(___lmul@product+3)^0,f,c
  4972   004DD0                     l7692:
  4973   004DD0  90D8               	bcf	status,0,c
  4974   004DD2  360A               	rlcf	___lmul@multiplicand^0,f,c
  4975   004DD4  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4976   004DD6  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4977   004DD8  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4978   004DDA  90D8               	bcf	status,0,c
  4979   004DDC  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4980   004DDE  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4981   004DE0  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4982   004DE2  3206               	rrcf	___lmul@multiplier^0,f,c
  4983   004DE4  5006               	movf	___lmul@multiplier^0,w,c
  4984   004DE6  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4985   004DE8  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4986   004DEA  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4987   004DEC  A4D8               	btfss	status,2,c
  4988   004DEE  EFFB  F026         	goto	u9291
  4989   004DF2  EFFD  F026         	goto	u9290
  4990   004DF6                     u9291:
  4991   004DF6  EFD9  F026         	goto	l7688
  4992   004DFA                     u9290:
  4993   004DFA  C00E  F006         	movff	___lmul@product,?___lmul
  4994   004DFE  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4995   004E02  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4996   004E06  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4997   004E0A  0012               	return		;funcret
  4998   004E0C                     __end_of___lmul:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function ___lbdiv *****************
  5002 ;; Defined at:
  5003 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  dividend        1    wreg     unsigned char 
  5006 ;;  divisor         1    5[COMRAM] unsigned char 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  dividend        1    6[COMRAM] unsigned char 
  5009 ;;  quotient        1    8[COMRAM] unsigned char 
  5010 ;;  counter         1    7[COMRAM] unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      unsigned char 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;Total ram usage:        4 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_runGAME
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text15
  5035   004E70                     __ptext15:
  5036                           	callstack 0
  5037   004E70                     ___lbdiv:
  5038                           	callstack 28
  5039                           
  5040                           ;incstack = 0
  5041                           ;___lbdiv@dividend stored from wreg
  5042   004E70  6E07               	movwf	___lbdiv@dividend^0,c
  5043   004E72  0E00               	movlw	0
  5044   004E74  6E09               	movwf	___lbdiv@quotient^0,c
  5045   004E76  5006               	movf	___lbdiv@divisor^0,w,c
  5046   004E78  B4D8               	btfsc	status,2,c
  5047   004E7A  EF41  F027         	goto	u9671
  5048   004E7E  EF43  F027         	goto	u9670
  5049   004E82                     u9671:
  5050   004E82  EF64  F027         	goto	l7970
  5051   004E86                     u9670:
  5052   004E86  0E01               	movlw	1
  5053   004E88  6E08               	movwf	___lbdiv@counter^0,c
  5054   004E8A  EF4A  F027         	goto	l7958
  5055   004E8E                     l7954:
  5056   004E8E  90D8               	bcf	status,0,c
  5057   004E90  3606               	rlcf	___lbdiv@divisor^0,f,c
  5058   004E92  2A08               	incf	___lbdiv@counter^0,f,c
  5059   004E94                     l7958:
  5060   004E94  AE06               	btfss	___lbdiv@divisor^0,7,c
  5061   004E96  EF4F  F027         	goto	u9681
  5062   004E9A  EF51  F027         	goto	u9680
  5063   004E9E                     u9681:
  5064   004E9E  EF47  F027         	goto	l7954
  5065   004EA2                     u9680:
  5066   004EA2                     l7960:
  5067   004EA2  90D8               	bcf	status,0,c
  5068   004EA4  3609               	rlcf	___lbdiv@quotient^0,f,c
  5069   004EA6  5006               	movf	___lbdiv@divisor^0,w,c
  5070   004EA8  5C07               	subwf	___lbdiv@dividend^0,w,c
  5071   004EAA  A0D8               	btfss	status,0,c
  5072   004EAC  EF5A  F027         	goto	u9691
  5073   004EB0  EF5C  F027         	goto	u9690
  5074   004EB4                     u9691:
  5075   004EB4  EF5F  F027         	goto	l7966
  5076   004EB8                     u9690:
  5077   004EB8  5006               	movf	___lbdiv@divisor^0,w,c
  5078   004EBA  5E07               	subwf	___lbdiv@dividend^0,f,c
  5079   004EBC  8009               	bsf	___lbdiv@quotient^0,0,c
  5080   004EBE                     l7966:
  5081   004EBE  90D8               	bcf	status,0,c
  5082   004EC0  3206               	rrcf	___lbdiv@divisor^0,f,c
  5083   004EC2  2E08               	decfsz	___lbdiv@counter^0,f,c
  5084   004EC4  EF51  F027         	goto	l7960
  5085   004EC8                     l7970:
  5086   004EC8  5009               	movf	___lbdiv@quotient^0,w,c
  5087   004ECA  0012               	return		;funcret
  5088   004ECC                     __end_of___lbdiv:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _runDAC *****************
  5092 ;; Defined at:
  5093 ;;		line 10 in file "DAC.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  DACindex        1  125[BANK0 ] unsigned char 
  5098 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  5099 ;;  keepState       1  123[BANK0 ] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;Total ram usage:       12 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; Hardware stack levels required when called: 9
  5116 ;; This function calls:
  5117 ;;		_SPI_write
  5118 ;;		___fladd
  5119 ;;		___fldiv
  5120 ;;		___flmul
  5121 ;;		___fltol
  5122 ;;		___xxtofl
  5123 ;;		_printf
  5124 ;;		_sinf
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           	psect	text16
  5131   002DC8                     __ptext16:
  5132                           	callstack 0
  5133   002DC8                     _runDAC:
  5134                           	callstack 21
  5135   002DC8                     
  5136                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  5137   002DC8  8094               	bsf	148,0,c	;volatile
  5138                           
  5139                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  5140   002DCA  8892               	bsf	146,4,c	;volatile
  5141                           
  5142                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  5143   002DCC  8692               	bsf	146,3,c	;volatile
  5144                           
  5145                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  5146   002DCE  8492               	bsf	146,2,c	;volatile
  5147                           
  5148                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  5149   002DD0  010F               	movlb	15	; () banked
  5150   002DD2  9738               	bcf	56,3,b	;volatile
  5151                           
  5152                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  5153   002DD4  9538               	bcf	56,2,b	;volatile
  5154                           
  5155                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  5156   002DD6  9693               	bcf	147,3,c	;volatile
  5157                           
  5158                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  5159   002DD8  9694               	bcf	148,3,c	;volatile
  5160                           
  5161                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  5162   002DDA  9A94               	bcf	148,5,c	;volatile
  5163   002DDC                     
  5164                           ; BSR set to: 15
  5165                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  5166   002DDC  50C6               	movf	198,w,c	;volatile
  5167   002DDE  0BF0               	andlw	-16
  5168   002DE0  0902               	iorlw	2
  5169   002DE2  6EC6               	movwf	198,c	;volatile
  5170   002DE4                     
  5171                           ; BSR set to: 15
  5172                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  5173   002DE4  98C6               	bcf	198,4,c	;volatile
  5174   002DE6                     
  5175                           ; BSR set to: 15
  5176                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  5177   002DE6  8CC7               	bsf	199,6,c	;volatile
  5178   002DE8                     
  5179                           ; BSR set to: 15
  5180                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  5181   002DE8  8AC6               	bsf	198,5,c	;volatile
  5182   002DEA                     
  5183                           ; BSR set to: 15
  5184                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  5185   002DEA  8139               	bsf	57,0,b	;volatile
  5186   002DEC                     
  5187                           ; BSR set to: 15
  5188                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  5189   002DEC  9EC0               	bcf	192,7,c	;volatile
  5190                           
  5191                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  5192   002DEE  50C0               	movf	192,w,c	;volatile
  5193   002DF0  0BF8               	andlw	-8
  5194   002DF2  0906               	iorlw	6
  5195   002DF4  6EC0               	movwf	192,c	;volatile
  5196                           
  5197                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  5198   002DF6  50C0               	movf	192,w,c	;volatile
  5199   002DF8  0BC7               	andlw	-57
  5200   002DFA  0930               	iorlw	48
  5201   002DFC  6EC0               	movwf	192,c	;volatile
  5202   002DFE                     
  5203                           ; BSR set to: 15
  5204                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  5205   002DFE  80C2               	bsf	194,0,c	;volatile
  5206                           
  5207                           ;DAC.c: 38:     SPBRG1 = 25;
  5208   002E00  0E19               	movlw	25
  5209   002E02  6EAF               	movwf	175,c	;volatile
  5210   002E04                     
  5211                           ; BSR set to: 15
  5212                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  5213   002E04  8EAB               	bsf	171,7,c	;volatile
  5214   002E06                     
  5215                           ; BSR set to: 15
  5216                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  5217   002E06  98AC               	bcf	172,4,c	;volatile
  5218   002E08                     
  5219                           ; BSR set to: 15
  5220                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  5221   002E08  8AAC               	bsf	172,5,c	;volatile
  5222   002E0A                     
  5223                           ; BSR set to: 15
  5224                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  5225   002E0A  88AB               	bsf	171,4,c	;volatile
  5226   002E0C                     
  5227                           ; BSR set to: 15
  5228                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  5229   002E0C  868A               	bsf	138,3,c	;volatile
  5230                           
  5231                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  5232   002E0E  50C2               	movf	194,w,c	;volatile
  5233   002E10  0B83               	andlw	-125
  5234   002E12  0930               	iorlw	48
  5235   002E14  6EC2               	movwf	194,c	;volatile
  5236                           
  5237                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  5238   002E16  0E01               	movlw	1
  5239   002E18  0100               	movlb	0	; () banked
  5240   002E1A  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5241                           
  5242                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  5243   002E1C  0E01               	movlw	1
  5244   002E1E  6FDB               	movwf	runDAC@keepState& (0+255),b
  5245                           
  5246                           ;DAC.c: 52:     uint8_t DACindex = 0;
  5247   002E20  0E00               	movlw	0
  5248   002E22  6FDD               	movwf	runDAC@DACindex& (0+255),b
  5249                           
  5250                           ;DAC.c: 54:     while(keepState){
  5251   002E24  EF4E  F018         	goto	l8276
  5252   002E28                     l8234:
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;DAC.c: 57:                 if(DACindex<255/2){
  5256   002E28  0E7F               	movlw	127
  5257   002E2A  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  5258   002E2C  EF1A  F017         	goto	u10081
  5259   002E30  EF1C  F017         	goto	u10080
  5260   002E34                     u10081:
  5261   002E34  EF44  F017         	goto	l8238
  5262   002E38                     u10080:
  5263   002E38                     
  5264                           ; BSR set to: 0
  5265                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  5266   002E38  0E33               	movlw	51
  5267   002E3A  6E18               	movwf	___flmul@a^0,c
  5268   002E3C  0E33               	movlw	51
  5269   002E3E  6E19               	movwf	(___flmul@a+1)^0,c
  5270   002E40  0EF3               	movlw	243
  5271   002E42  6E1A               	movwf	(___flmul@a+2)^0,c
  5272   002E44  0E3F               	movlw	63
  5273   002E46  6E1B               	movwf	(___flmul@a+3)^0,c
  5274   002E48  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5275   002E4A  6E06               	movwf	___xxtofl@val^0,c
  5276   002E4C  6A07               	clrf	(___xxtofl@val+1)^0,c
  5277   002E4E  6A08               	clrf	(___xxtofl@val+2)^0,c
  5278   002E50  6A09               	clrf	(___xxtofl@val+3)^0,c
  5279   002E52  0E01               	movlw	1
  5280   002E54  EC84  F01C         	call	___xxtofl
  5281   002E58  C006  F014         	movff	?___xxtofl,___flmul@b
  5282   002E5C  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5283   002E60  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5284   002E64  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5285   002E68  EC3A  F00D         	call	___flmul	;wreg free
  5286   002E6C  C014  F064         	movff	?___flmul,___fltol@f1
  5287   002E70  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5288   002E74  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5289   002E78  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5290   002E7C  EC83  F021         	call	___fltol	;wreg free
  5291   002E80  0100               	movlb	0	; () banked
  5292   002E82  5164               	movf	?___fltol& (0+255),w,b
  5293   002E84  EC71  F028         	call	_SPI_write
  5294   002E88                     l8238:
  5295                           
  5296                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5297   002E88  0E7E               	movlw	126
  5298   002E8A  0100               	movlb	0	; () banked
  5299   002E8C  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5300   002E8E  EF4B  F017         	goto	u10091
  5301   002E92  EF4D  F017         	goto	u10090
  5302   002E96                     u10091:
  5303   002E96  EF09  F018         	goto	l231
  5304   002E9A                     u10090:
  5305   002E9A                     
  5306                           ; BSR set to: 0
  5307                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5308   002E9A  0E33               	movlw	51
  5309   002E9C  6E18               	movwf	___flmul@a^0,c
  5310   002E9E  0E33               	movlw	51
  5311   002EA0  6E19               	movwf	(___flmul@a+1)^0,c
  5312   002EA2  0EF3               	movlw	243
  5313   002EA4  6E1A               	movwf	(___flmul@a+2)^0,c
  5314   002EA6  0E3F               	movlw	63
  5315   002EA8  6E1B               	movwf	(___flmul@a+3)^0,c
  5316   002EAA  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5317   002EAC  0AFF               	xorlw	255
  5318   002EAE  6FD2               	movwf	??_runDAC& (0+255),b
  5319   002EB0  51D2               	movf	??_runDAC& (0+255),w,b
  5320   002EB2  6E06               	movwf	___xxtofl@val^0,c
  5321   002EB4  6A07               	clrf	(___xxtofl@val+1)^0,c
  5322   002EB6  6A08               	clrf	(___xxtofl@val+2)^0,c
  5323   002EB8  6A09               	clrf	(___xxtofl@val+3)^0,c
  5324   002EBA  0E01               	movlw	1
  5325   002EBC  EC84  F01C         	call	___xxtofl
  5326   002EC0  C006  F014         	movff	?___xxtofl,___flmul@b
  5327   002EC4  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5328   002EC8  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5329   002ECC  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5330   002ED0  EC3A  F00D         	call	___flmul	;wreg free
  5331   002ED4  C014  F064         	movff	?___flmul,___fltol@f1
  5332   002ED8  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5333   002EDC  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5334   002EE0  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5335   002EE4  EC83  F021         	call	___fltol	;wreg free
  5336   002EE8  0100               	movlb	0	; () banked
  5337   002EEA  5164               	movf	?___fltol& (0+255),w,b
  5338   002EEC  EC71  F028         	call	_SPI_write
  5339   002EF0  EF09  F018         	goto	l231
  5340   002EF4                     l8242:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5344   002EF4  0E00               	movlw	0
  5345   002EF6  6E31               	movwf	___fldiv@a^0,c
  5346   002EF8  0E00               	movlw	0
  5347   002EFA  6E32               	movwf	(___fldiv@a+1)^0,c
  5348   002EFC  0E7F               	movlw	127
  5349   002EFE  6E33               	movwf	(___fldiv@a+2)^0,c
  5350   002F00  0E43               	movlw	67
  5351   002F02  6E34               	movwf	(___fldiv@a+3)^0,c
  5352   002F04  0EC3               	movlw	195
  5353   002F06  6E18               	movwf	___flmul@a^0,c
  5354   002F08  0EF5               	movlw	245
  5355   002F0A  6E19               	movwf	(___flmul@a+1)^0,c
  5356   002F0C  0EC8               	movlw	200
  5357   002F0E  6E1A               	movwf	(___flmul@a+2)^0,c
  5358   002F10  0E40               	movlw	64
  5359   002F12  6E1B               	movwf	(___flmul@a+3)^0,c
  5360   002F14  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5361   002F16  6E06               	movwf	___xxtofl@val^0,c
  5362   002F18  6A07               	clrf	(___xxtofl@val+1)^0,c
  5363   002F1A  6A08               	clrf	(___xxtofl@val+2)^0,c
  5364   002F1C  6A09               	clrf	(___xxtofl@val+3)^0,c
  5365   002F1E  0E01               	movlw	1
  5366   002F20  EC84  F01C         	call	___xxtofl
  5367   002F24  C006  F014         	movff	?___xxtofl,___flmul@b
  5368   002F28  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5369   002F2C  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5370   002F30  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5371   002F34  EC3A  F00D         	call	___flmul	;wreg free
  5372   002F38  C014  F02D         	movff	?___flmul,___fldiv@b
  5373   002F3C  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5374   002F40  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5375   002F44  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5376   002F48  EC17  F015         	call	___fldiv	;wreg free
  5377   002F4C  C02D  F0D3         	movff	?___fldiv,_runDAC$4531
  5378   002F50  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4531+1
  5379   002F54  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4531+2
  5380   002F58  C030  F0D6         	movff	?___fldiv+3,_runDAC$4531+3
  5381   002F5C                     
  5382                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5383   002F5C  C0D3  F0A4         	movff	_runDAC$4531,sinf@x
  5384   002F60  C0D4  F0A5         	movff	_runDAC$4531+1,sinf@x+1
  5385   002F64  C0D5  F0A6         	movff	_runDAC$4531+2,sinf@x+2
  5386   002F68  C0D6  F0A7         	movff	_runDAC$4531+3,sinf@x+3
  5387   002F6C  EC54  F008         	call	_sinf	;wreg free
  5388   002F70  C0A4  F0D7         	movff	?_sinf,_runDAC$4532
  5389   002F74  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4532+1
  5390   002F78  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4532+2
  5391   002F7C  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4532+3
  5392   002F80                     
  5393                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5394   002F80  0E00               	movlw	0
  5395   002F82  6E4A               	movwf	___fladd@a^0,c
  5396   002F84  0E00               	movlw	0
  5397   002F86  6E4B               	movwf	(___fladd@a+1)^0,c
  5398   002F88  0EFE               	movlw	254
  5399   002F8A  6E4C               	movwf	(___fladd@a+2)^0,c
  5400   002F8C  0E42               	movlw	66
  5401   002F8E  6E4D               	movwf	(___fladd@a+3)^0,c
  5402   002F90  0E00               	movlw	0
  5403   002F92  6E18               	movwf	___flmul@a^0,c
  5404   002F94  0E00               	movlw	0
  5405   002F96  6E19               	movwf	(___flmul@a+1)^0,c
  5406   002F98  0EFE               	movlw	254
  5407   002F9A  6E1A               	movwf	(___flmul@a+2)^0,c
  5408   002F9C  0E42               	movlw	66
  5409   002F9E  6E1B               	movwf	(___flmul@a+3)^0,c
  5410   002FA0  C0D7  F014         	movff	_runDAC$4532,___flmul@b
  5411   002FA4  C0D8  F015         	movff	_runDAC$4532+1,___flmul@b+1
  5412   002FA8  C0D9  F016         	movff	_runDAC$4532+2,___flmul@b+2
  5413   002FAC  C0DA  F017         	movff	_runDAC$4532+3,___flmul@b+3
  5414   002FB0  EC3A  F00D         	call	___flmul	;wreg free
  5415   002FB4  C014  F046         	movff	?___flmul,___fladd@b
  5416   002FB8  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5417   002FBC  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5418   002FC0  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5419   002FC4  ECD9  F00A         	call	___fladd	;wreg free
  5420   002FC8  C046  F064         	movff	?___fladd,___fltol@f1
  5421   002FCC  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5422   002FD0  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5423   002FD4  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5424   002FD8  EC83  F021         	call	___fltol	;wreg free
  5425   002FDC  0100               	movlb	0	; () banked
  5426   002FDE  5164               	movf	?___fltol& (0+255),w,b
  5427   002FE0  EC71  F028         	call	_SPI_write
  5428                           
  5429                           ;DAC.c: 66:                 break;
  5430   002FE4  EF09  F018         	goto	l231
  5431   002FE8                     l8248:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5435   002FE8  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5436   002FEA  0AFF               	xorlw	255
  5437   002FEC  EC71  F028         	call	_SPI_write
  5438                           
  5439                           ;DAC.c: 69:                 break;
  5440   002FF0  EF09  F018         	goto	l231
  5441   002FF4                     l8252:
  5442                           
  5443                           ; BSR set to: 0
  5444   002FF4  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5445                           
  5446                           ; Switch size 1, requested type "simple"
  5447                           ; Number of cases is 3, Range of values is 1 to 3
  5448                           ; switch strategies available:
  5449                           ; Name         Instructions Cycles
  5450                           ; simple_byte           10     6 (average)
  5451                           ;	Chosen strategy is simple_byte
  5452   002FF6  0A01               	xorlw	1	; case 1
  5453   002FF8  B4D8               	btfsc	status,2,c
  5454   002FFA  EF14  F017         	goto	l8234
  5455   002FFE  0A03               	xorlw	3	; case 2
  5456   003000  B4D8               	btfsc	status,2,c
  5457   003002  EF7A  F017         	goto	l8242
  5458   003006  0A01               	xorlw	1	; case 3
  5459   003008  B4D8               	btfsc	status,2,c
  5460   00300A  EFF4  F017         	goto	l8248
  5461   00300E  EF09  F018         	goto	l231
  5462   003012                     l231:
  5463                           
  5464                           ;DAC.c: 71:         GODONE = 1;
  5465   003012  82C2               	bsf	4034,1,c	;volatile
  5466   003014                     l234:
  5467   003014  B2C2               	btfsc	4034,1,c	;volatile
  5468   003016  EF0F  F018         	goto	u10101
  5469   00301A  EF11  F018         	goto	u10100
  5470   00301E                     u10101:
  5471   00301E  EF0A  F018         	goto	l234
  5472   003022                     u10100:
  5473   003022                     
  5474                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5475   003022  0EE6               	movlw	low STR_23
  5476   003024  0100               	movlb	0	; () banked
  5477   003026  6FCE               	movwf	printf@fmt& (0+255),b
  5478   003028  0EFF               	movlw	high STR_23
  5479   00302A  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5480   00302C  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5481   003030  6BD1               	clrf	(?_printf+3)& (0+255),b
  5482   003032  EC6D  F029         	call	_printf	;wreg free
  5483   003036                     
  5484                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5485   003036  A082               	btfss	130,0,c	;volatile
  5486   003038  EF20  F018         	goto	u10111
  5487   00303C  EF22  F018         	goto	u10110
  5488   003040                     u10111:
  5489   003040  EF25  F018         	goto	l8260
  5490   003044                     u10110:
  5491   003044                     
  5492                           ;DAC.c: 76:             selectModeDAC = 1;
  5493   003044  0E01               	movlw	1
  5494   003046  0100               	movlb	0	; () banked
  5495   003048  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5496   00304A                     l8260:
  5497                           
  5498                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5499   00304A  A880               	btfss	128,4,c	;volatile
  5500   00304C  EF2A  F018         	goto	u10121
  5501   003050  EF2C  F018         	goto	u10120
  5502   003054                     u10121:
  5503   003054  EF2F  F018         	goto	l8264
  5504   003058                     u10120:
  5505   003058                     
  5506                           ;DAC.c: 79:             selectModeDAC = 2;
  5507   003058  0E02               	movlw	2
  5508   00305A  0100               	movlb	0	; () banked
  5509   00305C  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5510   00305E                     l8264:
  5511                           
  5512                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5513   00305E  A680               	btfss	128,3,c	;volatile
  5514   003060  EF34  F018         	goto	u10131
  5515   003064  EF36  F018         	goto	u10130
  5516   003068                     u10131:
  5517   003068  EF39  F018         	goto	l8268
  5518   00306C                     u10130:
  5519   00306C                     
  5520                           ;DAC.c: 82:             selectModeDAC = 3;
  5521   00306C  0E03               	movlw	3
  5522   00306E  0100               	movlb	0	; () banked
  5523   003070  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5524   003072                     l8268:
  5525                           
  5526                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5527   003072  A480               	btfss	128,2,c	;volatile
  5528   003074  EF3E  F018         	goto	u10141
  5529   003078  EF40  F018         	goto	u10140
  5530   00307C                     u10141:
  5531   00307C  EF43  F018         	goto	l8272
  5532   003080                     u10140:
  5533   003080                     
  5534                           ;DAC.c: 85:             keepState = 0;
  5535   003080  0E00               	movlw	0
  5536   003082  0100               	movlb	0	; () banked
  5537   003084  6FDB               	movwf	runDAC@keepState& (0+255),b
  5538   003086                     l8272:
  5539                           
  5540                           ;DAC.c: 87:         DACindex++;
  5541   003086  0100               	movlb	0	; () banked
  5542   003088  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5543   00308A                     
  5544                           ; BSR set to: 0
  5545                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5546   00308A  0E68               	movlw	104
  5547   00308C  0100               	movlb	0	; () banked
  5548   00308E  6FD2               	movwf	??_runDAC& (0+255),b
  5549   003090  0EE4               	movlw	228
  5550   003092                     u10527:
  5551   003092  2EE8               	decfsz	wreg,f,c
  5552   003094  D7FE               	bra	u10527
  5553   003096  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5554   003098  D7FC               	bra	u10527
  5555   00309A  0000               	nop	
  5556   00309C                     l8276:
  5557                           
  5558                           ;DAC.c: 54:     while(keepState){
  5559   00309C  0100               	movlb	0	; () banked
  5560   00309E  51DB               	movf	runDAC@keepState& (0+255),w,b
  5561   0030A0  A4D8               	btfss	status,2,c
  5562   0030A2  EF55  F018         	goto	u10151
  5563   0030A6  EF57  F018         	goto	u10150
  5564   0030AA                     u10151:
  5565   0030AA  EFFA  F017         	goto	l8252
  5566   0030AE                     u10150:
  5567   0030AE                     
  5568                           ; BSR set to: 0
  5569   0030AE  0012               	return		;funcret
  5570   0030B0                     __end_of_runDAC:
  5571                           	callstack 0
  5572                           
  5573 ;; *************** function _sinf *****************
  5574 ;; Defined at:
  5575 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  x               4   68[BANK0 ] float 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  ux              4   90[BANK0 ] struct .
  5580 ;;  y               4   86[BANK0 ] struct .
  5581 ;;  sign            1   81[BANK0 ] _Bool 
  5582 ;;  n               1   80[BANK0 ] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  4   68[BANK0 ] float 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;Total ram usage:       26 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 4
  5599 ;; This function calls:
  5600 ;;		___cosdf
  5601 ;;		___fladd
  5602 ;;		___flneg
  5603 ;;		___rem_pio2f
  5604 ;;		___sindf
  5605 ;; This function is called by:
  5606 ;;		_runDAC
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text17
  5611   0010A8                     __ptext17:
  5612                           	callstack 0
  5613   0010A8                     _sinf:
  5614                           	callstack 25
  5615   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5616   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5617   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5618   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5619   0010B8  0100               	movlb	0	; () banked
  5620   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5621   0010BC  EF62  F008         	goto	u9461
  5622   0010C0  EF65  F008         	goto	u9460
  5623   0010C4                     u9461:
  5624   0010C4  0E01               	movlw	1
  5625   0010C6  EF66  F008         	goto	u9470
  5626   0010CA                     u9460:
  5627   0010CA  0E00               	movlw	0
  5628   0010CC                     u9470:
  5629   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5630   0010CE                     
  5631                           ; BSR set to: 0
  5632   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5633   0010D0                     
  5634                           ; BSR set to: 0
  5635   0010D0  0EDB               	movlw	219
  5636   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5637   0010D4  0E0F               	movlw	15
  5638   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5639   0010D8  0E49               	movlw	73
  5640   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5641   0010DC  0E3F               	movlw	63
  5642   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5643   0010E0  B0D8               	btfsc	status,0,c
  5644   0010E2  EF75  F008         	goto	u9481
  5645   0010E6  EF77  F008         	goto	u9480
  5646   0010EA                     u9481:
  5647   0010EA  EFA0  F008         	goto	l7814
  5648   0010EE                     u9480:
  5649   0010EE                     
  5650                           ; BSR set to: 0
  5651   0010EE  0E80               	movlw	128
  5652   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5653   0010F2  0E39               	movlw	57
  5654   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5655   0010F6  B0D8               	btfsc	status,0,c
  5656   0010F8  EF80  F008         	goto	u9491
  5657   0010FC  EF82  F008         	goto	u9490
  5658   001100                     u9491:
  5659   001100  EF8C  F008         	goto	l7810
  5660   001104                     u9490:
  5661   001104                     
  5662                           ; BSR set to: 0
  5663   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5664   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5665   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5666   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5667   001114  EFD8  F00A         	goto	l1694
  5668   001118                     l7810:
  5669                           
  5670                           ; BSR set to: 0
  5671   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5672   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5673   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5674   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5675   001128  EC58  F018         	call	___sindf	;wreg free
  5676   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5677   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5678   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5679   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5680   00113C  EFD8  F00A         	goto	l1694
  5681   001140                     l7814:
  5682                           
  5683                           ; BSR set to: 0
  5684   001140  0ED2               	movlw	210
  5685   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5686   001144  0E53               	movlw	83
  5687   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5688   001148  0E7B               	movlw	123
  5689   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5690   00114C  0E40               	movlw	64
  5691   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5692   001150  B0D8               	btfsc	status,0,c
  5693   001152  EFAD  F008         	goto	u9501
  5694   001156  EFAF  F008         	goto	u9500
  5695   00115A                     u9501:
  5696   00115A  EF92  F009         	goto	l7844
  5697   00115E                     u9500:
  5698   00115E                     
  5699                           ; BSR set to: 0
  5700   00115E  0EE4               	movlw	228
  5701   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5702   001162  0ECB               	movlw	203
  5703   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5704   001166  0E16               	movlw	22
  5705   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5706   00116A  0E40               	movlw	64
  5707   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5708   00116E  B0D8               	btfsc	status,0,c
  5709   001170  EFBC  F008         	goto	u9511
  5710   001174  EFBE  F008         	goto	u9510
  5711   001178                     u9511:
  5712   001178  EF2C  F009         	goto	l7834
  5713   00117C                     u9510:
  5714   00117C                     
  5715                           ; BSR set to: 0
  5716   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5717   00117E  B4D8               	btfsc	status,2,c
  5718   001180  EFC4  F008         	goto	u9521
  5719   001184  EFC6  F008         	goto	u9520
  5720   001188                     u9521:
  5721   001188  EFFE  F008         	goto	l7828
  5722   00118C                     u9520:
  5723   00118C                     
  5724                           ; BSR set to: 0
  5725   00118C  0EDB               	movlw	219
  5726   00118E  6E4A               	movwf	___fladd@a^0,c
  5727   001190  0E0F               	movlw	15
  5728   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5729   001194  0EC9               	movlw	201
  5730   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5731   001198  0E3F               	movlw	63
  5732   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5733   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5734   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5735   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5736   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5737   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5738   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4534
  5739   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5740   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5741   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5742   0011C0                     l7822:
  5743   0011C0  C0B2  F064         	movff	_sinf$4534,___cosdf@x
  5744   0011C4  C0B3  F065         	movff	_sinf$4534+1,___cosdf@x+1
  5745   0011C8  C0B4  F066         	movff	_sinf$4534+2,___cosdf@x+2
  5746   0011CC  C0B5  F067         	movff	_sinf$4534+3,___cosdf@x+3
  5747   0011D0  EC85  F01B         	call	___cosdf	;wreg free
  5748   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5749   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5750   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5751   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5752   0011E4  EC90  F028         	call	___flneg	;wreg free
  5753   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5754   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5755   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5756   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5757   0011F8  EFD8  F00A         	goto	l1694
  5758   0011FC                     l7828:
  5759                           
  5760                           ; BSR set to: 0
  5761   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5762   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5763   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5764   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5765   00120C  0EDB               	movlw	219
  5766   00120E  6E4A               	movwf	___fladd@a^0,c
  5767   001210  0E0F               	movlw	15
  5768   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5769   001214  0EC9               	movlw	201
  5770   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5771   001218  0EBF               	movlw	191
  5772   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5773   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5774   001220  C046  F0B2         	movff	?___fladd,_sinf$4534
  5775   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5776   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5777   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5778   001230                     l7830:
  5779   001230  C0B2  F064         	movff	_sinf$4534,___cosdf@x
  5780   001234  C0B3  F065         	movff	_sinf$4534+1,___cosdf@x+1
  5781   001238  C0B4  F066         	movff	_sinf$4534+2,___cosdf@x+2
  5782   00123C  C0B5  F067         	movff	_sinf$4534+3,___cosdf@x+3
  5783   001240  EC85  F01B         	call	___cosdf	;wreg free
  5784   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5785   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5786   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5787   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5788   001254  EFD8  F00A         	goto	l1694
  5789   001258                     l7834:
  5790                           
  5791                           ; BSR set to: 0
  5792   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5793   00125A  A4D8               	btfss	status,2,c
  5794   00125C  EF32  F009         	goto	u9531
  5795   001260  EF34  F009         	goto	u9530
  5796   001264                     u9531:
  5797   001264  EF5A  F009         	goto	l7838
  5798   001268                     u9530:
  5799   001268                     
  5800                           ; BSR set to: 0
  5801   001268  0EDB               	movlw	219
  5802   00126A  6E4A               	movwf	___fladd@a^0,c
  5803   00126C  0E0F               	movlw	15
  5804   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5805   001270  0E49               	movlw	73
  5806   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5807   001274  0EC0               	movlw	192
  5808   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5809   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5810   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5811   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5812   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5813   001288  ECD9  F00A         	call	___fladd	;wreg free
  5814   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5815   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5816   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5817   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5818   00129C  EC90  F028         	call	___flneg	;wreg free
  5819   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4250
  5820   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4250+1
  5821   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4250+2
  5822   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4250+3
  5823   0012B0  EF7E  F009         	goto	l7840
  5824   0012B4                     l7838:
  5825                           
  5826                           ; BSR set to: 0
  5827   0012B4  0EDB               	movlw	219
  5828   0012B6  6E4A               	movwf	___fladd@a^0,c
  5829   0012B8  0E0F               	movlw	15
  5830   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5831   0012BC  0E49               	movlw	73
  5832   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5833   0012C0  0E40               	movlw	64
  5834   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5835   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5836   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5837   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5838   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5839   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5840   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5841   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5842   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5843   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5844   0012E8  EC90  F028         	call	___flneg	;wreg free
  5845   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4250
  5846   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4250+1
  5847   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4250+2
  5848   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4250+3
  5849   0012FC                     l7840:
  5850   0012FC  C0A8  F064         	movff	_sinf$4250,___sindf@x
  5851   001300  C0A9  F065         	movff	_sinf$4250+1,___sindf@x+1
  5852   001304  C0AA  F066         	movff	_sinf$4250+2,___sindf@x+2
  5853   001308  C0AB  F067         	movff	_sinf$4250+3,___sindf@x+3
  5854   00130C  EC58  F018         	call	___sindf	;wreg free
  5855   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5856   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5857   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5858   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5859   001320  EFD8  F00A         	goto	l1694
  5860   001324                     l7844:
  5861                           
  5862                           ; BSR set to: 0
  5863   001324  0ED6               	movlw	214
  5864   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5865   001328  0E31               	movlw	49
  5866   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5867   00132C  0EE2               	movlw	226
  5868   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5869   001330  0E40               	movlw	64
  5870   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5871   001334  B0D8               	btfsc	status,0,c
  5872   001336  EF9F  F009         	goto	u9541
  5873   00133A  EFA1  F009         	goto	u9540
  5874   00133E                     u9541:
  5875   00133E  EF42  F00A         	goto	l7874
  5876   001342                     u9540:
  5877   001342                     
  5878                           ; BSR set to: 0
  5879   001342  0EE0               	movlw	224
  5880   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5881   001346  0EED               	movlw	237
  5882   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5883   00134A  0EAF               	movlw	175
  5884   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5885   00134E  0E40               	movlw	64
  5886   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5887   001352  B0D8               	btfsc	status,0,c
  5888   001354  EFAE  F009         	goto	u9551
  5889   001358  EFB0  F009         	goto	u9550
  5890   00135C                     u9551:
  5891   00135C  EFF0  F009         	goto	l7864
  5892   001360                     u9550:
  5893   001360                     
  5894                           ; BSR set to: 0
  5895   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5896   001362  B4D8               	btfsc	status,2,c
  5897   001364  EFB6  F009         	goto	u9561
  5898   001368  EFB8  F009         	goto	u9560
  5899   00136C                     u9561:
  5900   00136C  EFD4  F009         	goto	l7858
  5901   001370                     u9560:
  5902   001370                     
  5903                           ; BSR set to: 0
  5904   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5905   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5906   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5907   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5908   001380  0EE4               	movlw	228
  5909   001382  6E4A               	movwf	___fladd@a^0,c
  5910   001384  0ECB               	movlw	203
  5911   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5912   001388  0E96               	movlw	150
  5913   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5914   00138C  0E40               	movlw	64
  5915   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5916   001390  ECD9  F00A         	call	___fladd	;wreg free
  5917   001394  C046  F0B2         	movff	?___fladd,_sinf$4534
  5918   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5919   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5920   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5921   0013A4  EF18  F009         	goto	l7830
  5922   0013A8                     l7858:
  5923                           
  5924                           ; BSR set to: 0
  5925   0013A8  0EE4               	movlw	228
  5926   0013AA  6E4A               	movwf	___fladd@a^0,c
  5927   0013AC  0ECB               	movlw	203
  5928   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5929   0013B0  0E96               	movlw	150
  5930   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5931   0013B4  0EC0               	movlw	192
  5932   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5933   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5934   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5935   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5936   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5937   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5938   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4534
  5939   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4534+1
  5940   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4534+2
  5941   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4534+3
  5942   0013DC  EFE0  F008         	goto	l7822
  5943   0013E0                     l7864:
  5944                           
  5945                           ; BSR set to: 0
  5946   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5947   0013E2  A4D8               	btfss	status,2,c
  5948   0013E4  EFF6  F009         	goto	u9571
  5949   0013E8  EFF8  F009         	goto	u9570
  5950   0013EC                     u9571:
  5951   0013EC  EF14  F00A         	goto	l7868
  5952   0013F0                     u9570:
  5953   0013F0                     
  5954                           ; BSR set to: 0
  5955   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5956   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5957   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5958   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5959   001400  0EDB               	movlw	219
  5960   001402  6E4A               	movwf	___fladd@a^0,c
  5961   001404  0E0F               	movlw	15
  5962   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5963   001408  0EC9               	movlw	201
  5964   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5965   00140C  0EC0               	movlw	192
  5966   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5967   001410  ECD9  F00A         	call	___fladd	;wreg free
  5968   001414  C046  F0AC         	movff	?___fladd,_sinf$4251
  5969   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4251+1
  5970   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4251+2
  5971   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4251+3
  5972   001424  EF2E  F00A         	goto	l7870
  5973   001428                     l7868:
  5974                           
  5975                           ; BSR set to: 0
  5976   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5977   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5978   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5979   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5980   001438  0EDB               	movlw	219
  5981   00143A  6E4A               	movwf	___fladd@a^0,c
  5982   00143C  0E0F               	movlw	15
  5983   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5984   001440  0EC9               	movlw	201
  5985   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5986   001444  0E40               	movlw	64
  5987   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5988   001448  ECD9  F00A         	call	___fladd	;wreg free
  5989   00144C  C046  F0AC         	movff	?___fladd,_sinf$4251
  5990   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4251+1
  5991   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4251+2
  5992   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4251+3
  5993   00145C                     l7870:
  5994   00145C  C0AC  F064         	movff	_sinf$4251,___sindf@x
  5995   001460  C0AD  F065         	movff	_sinf$4251+1,___sindf@x+1
  5996   001464  C0AE  F066         	movff	_sinf$4251+2,___sindf@x+2
  5997   001468  C0AF  F067         	movff	_sinf$4251+3,___sindf@x+3
  5998   00146C  EC58  F018         	call	___sindf	;wreg free
  5999   001470  C064  F0A4         	movff	?___sindf,?_sinf
  6000   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  6001   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  6002   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  6003   001480  EFD8  F00A         	goto	l1694
  6004   001484                     l7874:
  6005                           
  6006                           ; BSR set to: 0
  6007   001484  0E80               	movlw	128
  6008   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  6009   001488  0E7F               	movlw	127
  6010   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  6011   00148C  A0D8               	btfss	status,0,c
  6012   00148E  EF4B  F00A         	goto	u9581
  6013   001492  EF4D  F00A         	goto	u9580
  6014   001496                     u9581:
  6015   001496  EF5F  F00A         	goto	l7882
  6016   00149A                     u9580:
  6017   00149A                     
  6018                           ; BSR set to: 0
  6019   00149A  0EFF               	movlw	255
  6020   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  6021   00149E  0EFF               	movlw	255
  6022   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  6023   0014A2  0EFF               	movlw	255
  6024   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  6025   0014A6  0E00               	movlw	0
  6026   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  6027   0014AA                     
  6028                           ; BSR set to: 0
  6029   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  6030   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  6031   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  6032   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  6033   0014BA  EFD8  F00A         	goto	l1694
  6034   0014BE                     l7882:
  6035                           
  6036                           ; BSR set to: 0
  6037   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  6038   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  6039   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  6040   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  6041   0014CE  0EB6               	movlw	low sinf@y
  6042   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  6043   0014D2  EC36  F013         	call	___rem_pio2f	;wreg free
  6044   0014D6  0100               	movlb	0	; () banked
  6045   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  6046   0014DA  0B03               	andlw	3
  6047   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  6048   0014DE  EFC9  F00A         	goto	l7900
  6049   0014E2                     l7884:
  6050                           
  6051                           ; BSR set to: 0
  6052   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  6053   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  6054   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  6055   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  6056   0014F2  EC90  F028         	call	___flneg	;wreg free
  6057   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  6058   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  6059   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  6060   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  6061   001506                     l7886:
  6062   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  6063   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  6064   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  6065   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  6066   001516  EC58  F018         	call	___sindf	;wreg free
  6067   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  6068   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  6069   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  6070   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  6071   00152A  EFD8  F00A         	goto	l1694
  6072   00152E                     l7890:
  6073                           
  6074                           ; BSR set to: 0
  6075   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  6076   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  6077   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  6078   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  6079   00153E  EC85  F01B         	call	___cosdf	;wreg free
  6080   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  6081   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  6082   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  6083   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  6084   001552  EFD8  F00A         	goto	l1694
  6085   001556                     l7894:
  6086                           
  6087                           ; BSR set to: 0
  6088   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  6089   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  6090   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  6091   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  6092   001566  EC85  F01B         	call	___cosdf	;wreg free
  6093   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  6094   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  6095   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  6096   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  6097   00157A  EC90  F028         	call	___flneg	;wreg free
  6098   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  6099   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  6100   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  6101   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  6102   00158E  EFD8  F00A         	goto	l1694
  6103   001592                     l7900:
  6104                           
  6105                           ; BSR set to: 0
  6106   001592  51B0               	movf	sinf@n& (0+255),w,b
  6107                           
  6108                           ; Switch size 1, requested type "simple"
  6109                           ; Number of cases is 3, Range of values is 0 to 2
  6110                           ; switch strategies available:
  6111                           ; Name         Instructions Cycles
  6112                           ; simple_byte           10     6 (average)
  6113                           ;	Chosen strategy is simple_byte
  6114   001594  0A00               	xorlw	0	; case 0
  6115   001596  B4D8               	btfsc	status,2,c
  6116   001598  EF83  F00A         	goto	l7886
  6117   00159C  0A01               	xorlw	1	; case 1
  6118   00159E  B4D8               	btfsc	status,2,c
  6119   0015A0  EF97  F00A         	goto	l7890
  6120   0015A4  0A03               	xorlw	3	; case 2
  6121   0015A6  B4D8               	btfsc	status,2,c
  6122   0015A8  EF71  F00A         	goto	l7884
  6123   0015AC  EFAB  F00A         	goto	l7894
  6124   0015B0                     l1694:
  6125   0015B0  0012               	return		;funcret
  6126   0015B2                     __end_of_sinf:
  6127                           	callstack 0
  6128                           
  6129 ;; *************** function ___sindf *****************
  6130 ;; Defined at:
  6131 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  x               4    4[BANK0 ] float 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  z               4   32[BANK0 ] float 
  6136 ;;  s               4   28[BANK0 ] float 
  6137 ;;  w               4   12[BANK0 ] float 
  6138 ;;  r               4    8[BANK0 ] float 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  4    4[BANK0 ] float 
  6141 ;; Registers used:
  6142 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;Total ram usage:       32 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; Hardware stack levels required when called: 2
  6155 ;; This function calls:
  6156 ;;		___fladd
  6157 ;;		___flmul
  6158 ;; This function is called by:
  6159 ;;		_sinf
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text18
  6164   0030B0                     __ptext18:
  6165                           	callstack 0
  6166   0030B0                     ___sindf:
  6167                           	callstack 26
  6168   0030B0  C064  F014         	movff	___sindf@x,___flmul@b
  6169   0030B4  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  6170   0030B8  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  6171   0030BC  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  6172   0030C0  C064  F018         	movff	___sindf@x,___flmul@a
  6173   0030C4  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6174   0030C8  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6175   0030CC  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6176   0030D0  EC3A  F00D         	call	___flmul	;wreg free
  6177   0030D4  C014  F080         	movff	?___flmul,___sindf@z
  6178   0030D8  C015  F081         	movff	?___flmul+1,___sindf@z+1
  6179   0030DC  C016  F082         	movff	?___flmul+2,___sindf@z+2
  6180   0030E0  C017  F083         	movff	?___flmul+3,___sindf@z+3
  6181   0030E4  C080  F014         	movff	___sindf@z,___flmul@b
  6182   0030E8  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6183   0030EC  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6184   0030F0  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6185   0030F4  C080  F018         	movff	___sindf@z,___flmul@a
  6186   0030F8  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  6187   0030FC  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  6188   003100  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  6189   003104  EC3A  F00D         	call	___flmul	;wreg free
  6190   003108  C014  F06C         	movff	?___flmul,___sindf@w
  6191   00310C  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  6192   003110  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  6193   003114  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  6194   003118  0E3C               	movlw	60
  6195   00311A  6E18               	movwf	___flmul@a^0,c
  6196   00311C  0E6C               	movlw	108
  6197   00311E  6E19               	movwf	(___flmul@a+1)^0,c
  6198   003120  0E36               	movlw	54
  6199   003122  6E1A               	movwf	(___flmul@a+2)^0,c
  6200   003124  0E36               	movlw	54
  6201   003126  6E1B               	movwf	(___flmul@a+3)^0,c
  6202   003128  C080  F014         	movff	___sindf@z,___flmul@b
  6203   00312C  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6204   003130  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6205   003134  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6206   003138  EC3A  F00D         	call	___flmul	;wreg free
  6207   00313C  C014  F046         	movff	?___flmul,___fladd@b
  6208   003140  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6209   003144  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6210   003148  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6211   00314C  0ECF               	movlw	207
  6212   00314E  6E4A               	movwf	___fladd@a^0,c
  6213   003150  0E07               	movlw	7
  6214   003152  6E4B               	movwf	(___fladd@a+1)^0,c
  6215   003154  0E50               	movlw	80
  6216   003156  6E4C               	movwf	(___fladd@a+2)^0,c
  6217   003158  0EB9               	movlw	185
  6218   00315A  6E4D               	movwf	(___fladd@a+3)^0,c
  6219   00315C  ECD9  F00A         	call	___fladd	;wreg free
  6220   003160  C046  F068         	movff	?___fladd,___sindf@r
  6221   003164  C047  F069         	movff	?___fladd+1,___sindf@r+1
  6222   003168  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  6223   00316C  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  6224   003170  C080  F014         	movff	___sindf@z,___flmul@b
  6225   003174  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6226   003178  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6227   00317C  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6228   003180  C064  F018         	movff	___sindf@x,___flmul@a
  6229   003184  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6230   003188  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6231   00318C  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6232   003190  EC3A  F00D         	call	___flmul	;wreg free
  6233   003194  C014  F07C         	movff	?___flmul,___sindf@s
  6234   003198  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  6235   00319C  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  6236   0031A0  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  6237   0031A4  0EAB               	movlw	171
  6238   0031A6  6E4A               	movwf	___fladd@a^0,c
  6239   0031A8  0EAA               	movlw	170
  6240   0031AA  6E4B               	movwf	(___fladd@a+1)^0,c
  6241   0031AC  0E2A               	movlw	42
  6242   0031AE  6E4C               	movwf	(___fladd@a+2)^0,c
  6243   0031B0  0EBE               	movlw	190
  6244   0031B2  6E4D               	movwf	(___fladd@a+3)^0,c
  6245   0031B4  0E84               	movlw	132
  6246   0031B6  6E18               	movwf	___flmul@a^0,c
  6247   0031B8  0E88               	movlw	136
  6248   0031BA  6E19               	movwf	(___flmul@a+1)^0,c
  6249   0031BC  0E08               	movlw	8
  6250   0031BE  6E1A               	movwf	(___flmul@a+2)^0,c
  6251   0031C0  0E3C               	movlw	60
  6252   0031C2  6E1B               	movwf	(___flmul@a+3)^0,c
  6253   0031C4  C080  F014         	movff	___sindf@z,___flmul@b
  6254   0031C8  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6255   0031CC  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6256   0031D0  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6257   0031D4  EC3A  F00D         	call	___flmul	;wreg free
  6258   0031D8  C014  F046         	movff	?___flmul,___fladd@b
  6259   0031DC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6260   0031E0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6261   0031E4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6262   0031E8  ECD9  F00A         	call	___fladd	;wreg free
  6263   0031EC  C046  F070         	movff	?___fladd,___sindf$4539
  6264   0031F0  C047  F071         	movff	?___fladd+1,___sindf$4539+1
  6265   0031F4  C048  F072         	movff	?___fladd+2,___sindf$4539+2
  6266   0031F8  C049  F073         	movff	?___fladd+3,___sindf$4539+3
  6267   0031FC  C06C  F018         	movff	___sindf@w,___flmul@a
  6268   003200  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  6269   003204  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  6270   003208  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  6271   00320C  C07C  F014         	movff	___sindf@s,___flmul@b
  6272   003210  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6273   003214  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6274   003218  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6275   00321C  EC3A  F00D         	call	___flmul	;wreg free
  6276   003220  C014  F074         	movff	?___flmul,___sindf$4540
  6277   003224  C015  F075         	movff	?___flmul+1,___sindf$4540+1
  6278   003228  C016  F076         	movff	?___flmul+2,___sindf$4540+2
  6279   00322C  C017  F077         	movff	?___flmul+3,___sindf$4540+3
  6280   003230  C064  F04A         	movff	___sindf@x,___fladd@a
  6281   003234  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6282   003238  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6283   00323C  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6284   003240  C07C  F018         	movff	___sindf@s,___flmul@a
  6285   003244  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6286   003248  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6287   00324C  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6288   003250  C070  F014         	movff	___sindf$4539,___flmul@b
  6289   003254  C071  F015         	movff	___sindf$4539+1,___flmul@b+1
  6290   003258  C072  F016         	movff	___sindf$4539+2,___flmul@b+2
  6291   00325C  C073  F017         	movff	___sindf$4539+3,___flmul@b+3
  6292   003260  EC3A  F00D         	call	___flmul	;wreg free
  6293   003264  C014  F046         	movff	?___flmul,___fladd@b
  6294   003268  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6295   00326C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6296   003270  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6297   003274  ECD9  F00A         	call	___fladd	;wreg free
  6298   003278  C046  F078         	movff	?___fladd,___sindf$4541
  6299   00327C  C047  F079         	movff	?___fladd+1,___sindf$4541+1
  6300   003280  C048  F07A         	movff	?___fladd+2,___sindf$4541+2
  6301   003284  C049  F07B         	movff	?___fladd+3,___sindf$4541+3
  6302   003288  C078  F046         	movff	___sindf$4541,___fladd@b
  6303   00328C  C079  F047         	movff	___sindf$4541+1,___fladd@b+1
  6304   003290  C07A  F048         	movff	___sindf$4541+2,___fladd@b+2
  6305   003294  C07B  F049         	movff	___sindf$4541+3,___fladd@b+3
  6306   003298  C068  F018         	movff	___sindf@r,___flmul@a
  6307   00329C  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6308   0032A0  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6309   0032A4  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6310   0032A8  C074  F014         	movff	___sindf$4540,___flmul@b
  6311   0032AC  C075  F015         	movff	___sindf$4540+1,___flmul@b+1
  6312   0032B0  C076  F016         	movff	___sindf$4540+2,___flmul@b+2
  6313   0032B4  C077  F017         	movff	___sindf$4540+3,___flmul@b+3
  6314   0032B8  EC3A  F00D         	call	___flmul	;wreg free
  6315   0032BC  C014  F04A         	movff	?___flmul,___fladd@a
  6316   0032C0  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6317   0032C4  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6318   0032C8  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6319   0032CC  ECD9  F00A         	call	___fladd	;wreg free
  6320   0032D0  C046  F064         	movff	?___fladd,?___sindf
  6321   0032D4  C047  F065         	movff	?___fladd+1,?___sindf+1
  6322   0032D8  C048  F066         	movff	?___fladd+2,?___sindf+2
  6323   0032DC  C049  F067         	movff	?___fladd+3,?___sindf+3
  6324   0032E0  0012               	return		;funcret
  6325   0032E2                     __end_of___sindf:
  6326                           	callstack 0
  6327                           
  6328 ;; *************** function ___rem_pio2f *****************
  6329 ;; Defined at:
  6330 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  x               4   36[BANK0 ] float 
  6333 ;;  y               1   40[BANK0 ] PTR 
  6334 ;;		 -> sinf@y(4), 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  n               4   64[BANK0 ] long 
  6337 ;;  t               4   60[BANK0 ] float 
  6338 ;;  fn              4   56[BANK0 ] float 
  6339 ;;  ux              4   52[BANK0 ] struct .
  6340 ;;  ty              4   43[BANK0 ] [1]
  6341 ;;  sign            1   51[BANK0 ] _Bool 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  2   36[BANK0 ] int 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6351 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;Total ram usage:       32 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 3
  6358 ;; This function calls:
  6359 ;;		___fladd
  6360 ;;		___flmul
  6361 ;;		___flneg
  6362 ;;		___flsub
  6363 ;;		___fltol
  6364 ;;		___xxtofl
  6365 ;;		_fabsf
  6366 ;; This function is called by:
  6367 ;;		_sinf
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text19
  6372   00266C                     __ptext19:
  6373                           	callstack 0
  6374   00266C                     ___rem_pio2f:
  6375                           	callstack 25
  6376   00266C  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6377   002670  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6378   002674  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6379   002678  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6380   00267C  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6381   002680  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6382   002684  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6383   002688  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6384   00268C  0100               	movlb	0	; () banked
  6385   00268E  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6386   002690  EF4C  F013         	goto	u9311
  6387   002694  EF4F  F013         	goto	u9310
  6388   002698                     u9311:
  6389   002698  0E01               	movlw	1
  6390   00269A  EF50  F013         	goto	u9320
  6391   00269E                     u9310:
  6392   00269E  0E00               	movlw	0
  6393   0026A0                     u9320:
  6394   0026A0  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6395   0026A2                     
  6396                           ; BSR set to: 0
  6397   0026A2  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6398   0026A4                     
  6399                           ; BSR set to: 0
  6400   0026A4  0EDB               	movlw	219
  6401   0026A6  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6402   0026A8  0E0F               	movlw	15
  6403   0026AA  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6404   0026AC  0EC9               	movlw	201
  6405   0026AE  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6406   0026B0  0E4D               	movlw	77
  6407   0026B2  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6408   0026B4  B0D8               	btfsc	status,0,c
  6409   0026B6  EF5F  F013         	goto	u9331
  6410   0026BA  EF61  F013         	goto	u9330
  6411   0026BE                     u9331:
  6412   0026BE  EF4D  F014         	goto	l7740
  6413   0026C2                     u9330:
  6414   0026C2                     
  6415                           ; BSR set to: 0
  6416   0026C2  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6417   0026C6  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6418   0026CA  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6419   0026CE  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6420   0026D2  ECFF  F028         	call	_fabsf	;wreg free
  6421   0026D6  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6422   0026DA  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6423   0026DE  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6424   0026E2  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6425   0026E6  0E00               	movlw	0
  6426   0026E8  6E4A               	movwf	___fladd@a^0,c
  6427   0026EA  0E00               	movlw	0
  6428   0026EC  6E4B               	movwf	(___fladd@a+1)^0,c
  6429   0026EE  0E00               	movlw	0
  6430   0026F0  6E4C               	movwf	(___fladd@a+2)^0,c
  6431   0026F2  0E3F               	movlw	63
  6432   0026F4  6E4D               	movwf	(___fladd@a+3)^0,c
  6433   0026F6  0E83               	movlw	131
  6434   0026F8  6E18               	movwf	___flmul@a^0,c
  6435   0026FA  0EF9               	movlw	249
  6436   0026FC  6E19               	movwf	(___flmul@a+1)^0,c
  6437   0026FE  0E22               	movlw	34
  6438   002700  6E1A               	movwf	(___flmul@a+2)^0,c
  6439   002702  0E3F               	movlw	63
  6440   002704  6E1B               	movwf	(___flmul@a+3)^0,c
  6441   002706  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6442   00270A  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6443   00270E  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6444   002712  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6445   002716  EC3A  F00D         	call	___flmul	;wreg free
  6446   00271A  C014  F046         	movff	?___flmul,___fladd@b
  6447   00271E  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6448   002722  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6449   002726  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6450   00272A  ECD9  F00A         	call	___fladd	;wreg free
  6451   00272E  C046  F064         	movff	?___fladd,___fltol@f1
  6452   002732  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6453   002736  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6454   00273A  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6455   00273E  EC83  F021         	call	___fltol	;wreg free
  6456   002742  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6457   002746  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6458   00274A  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6459   00274E  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6460   002752  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6461   002756  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6462   00275A  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6463   00275E  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6464   002762  0E01               	movlw	1
  6465   002764  EC84  F01C         	call	___xxtofl
  6466   002768  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6467   00276C  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6468   002770  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6469   002774  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6470   002778  0EDA               	movlw	218
  6471   00277A  6E18               	movwf	___flmul@a^0,c
  6472   00277C  0E0F               	movlw	15
  6473   00277E  6E19               	movwf	(___flmul@a+1)^0,c
  6474   002780  0EC9               	movlw	201
  6475   002782  6E1A               	movwf	(___flmul@a+2)^0,c
  6476   002784  0E3F               	movlw	63
  6477   002786  6E1B               	movwf	(___flmul@a+3)^0,c
  6478   002788  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6479   00278C  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6480   002790  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6481   002794  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6482   002798  EC3A  F00D         	call	___flmul	;wreg free
  6483   00279C  C014  F068         	movff	?___flmul,___flsub@a
  6484   0027A0  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6485   0027A4  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6486   0027A8  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6487   0027AC  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6488   0027B0  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6489   0027B4  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6490   0027B8  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6491   0027BC  EC08  F028         	call	___flsub	;wreg free
  6492   0027C0  C064  F08F         	movff	?___flsub,___rem_pio2f$4538
  6493   0027C4  C065  F090         	movff	?___flsub+1,___rem_pio2f$4538+1
  6494   0027C8  C066  F091         	movff	?___flsub+2,___rem_pio2f$4538+2
  6495   0027CC  C067  F092         	movff	?___flsub+3,___rem_pio2f$4538+3
  6496   0027D0  C08F  F064         	movff	___rem_pio2f$4538,___flsub@b
  6497   0027D4  C090  F065         	movff	___rem_pio2f$4538+1,___flsub@b+1
  6498   0027D8  C091  F066         	movff	___rem_pio2f$4538+2,___flsub@b+2
  6499   0027DC  C092  F067         	movff	___rem_pio2f$4538+3,___flsub@b+3
  6500   0027E0  0EA3               	movlw	163
  6501   0027E2  6E18               	movwf	___flmul@a^0,c
  6502   0027E4  0E85               	movlw	133
  6503   0027E6  6E19               	movwf	(___flmul@a+1)^0,c
  6504   0027E8  0E88               	movlw	136
  6505   0027EA  6E1A               	movwf	(___flmul@a+2)^0,c
  6506   0027EC  0E32               	movlw	50
  6507   0027EE  6E1B               	movwf	(___flmul@a+3)^0,c
  6508   0027F0  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6509   0027F4  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6510   0027F8  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6511   0027FC  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6512   002800  EC3A  F00D         	call	___flmul	;wreg free
  6513   002804  C014  F068         	movff	?___flmul,___flsub@a
  6514   002808  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6515   00280C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6516   002810  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6517   002814  EC08  F028         	call	___flsub	;wreg free
  6518   002818  0100               	movlb	0	; () banked
  6519   00281A  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6520   00281C  6ED9               	movwf	fsr2l,c
  6521   00281E  6ADA               	clrf	fsr2h,c
  6522   002820  C064  FFDE         	movff	?___flsub,postinc2
  6523   002824  C065  FFDE         	movff	?___flsub+1,postinc2
  6524   002828  C066  FFDE         	movff	?___flsub+2,postinc2
  6525   00282C  C067  FFDE         	movff	?___flsub+3,postinc2
  6526   002830                     
  6527                           ; BSR set to: 0
  6528   002830  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6529   002832  B4D8               	btfsc	status,2,c
  6530   002834  EF1E  F014         	goto	u9341
  6531   002838  EF20  F014         	goto	u9340
  6532   00283C                     u9341:
  6533   00283C  EF47  F014         	goto	l1744
  6534   002840                     u9340:
  6535   002840                     l7734:
  6536                           
  6537                           ; BSR set to: 0
  6538   002840  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6539   002842  6ED9               	movwf	fsr2l,c
  6540   002844  6ADA               	clrf	fsr2h,c
  6541   002846  CFDE F080          	movff	postinc2,___flneg@f1
  6542   00284A  CFDE F081          	movff	postinc2,___flneg@f1+1
  6543   00284E  CFDE F082          	movff	postinc2,___flneg@f1+2
  6544   002852  CFDE F083          	movff	postinc2,___flneg@f1+3
  6545   002856  EC90  F028         	call	___flneg	;wreg free
  6546   00285A  0100               	movlb	0	; () banked
  6547   00285C  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6548   00285E  6ED9               	movwf	fsr2l,c
  6549   002860  6ADA               	clrf	fsr2h,c
  6550   002862  C080  FFDE         	movff	?___flneg,postinc2
  6551   002866  C081  FFDE         	movff	?___flneg+1,postinc2
  6552   00286A  C082  FFDE         	movff	?___flneg+2,postinc2
  6553   00286E  C083  FFDE         	movff	?___flneg+3,postinc2
  6554   002872                     
  6555                           ; BSR set to: 0
  6556   002872  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6557   002876  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6558   00287A  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6559   00287C  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6560   00287E  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6561   002880  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6562   002882  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6563   002886  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6564   00288A  EF16  F015         	goto	l1745
  6565   00288E                     l1744:
  6566                           
  6567                           ; BSR set to: 0
  6568   00288E  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6569   002892  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6570   002896  EF16  F015         	goto	l1745
  6571   00289A                     l7740:
  6572                           
  6573                           ; BSR set to: 0
  6574   00289A  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6575   00289E  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6576   0028A2  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6577   0028A6  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6578   0028AA  ECFF  F028         	call	_fabsf	;wreg free
  6579   0028AE  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6580   0028B2  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6581   0028B6  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6582   0028BA  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6583   0028BE  0E00               	movlw	0
  6584   0028C0  6E4A               	movwf	___fladd@a^0,c
  6585   0028C2  0E00               	movlw	0
  6586   0028C4  6E4B               	movwf	(___fladd@a+1)^0,c
  6587   0028C6  0E00               	movlw	0
  6588   0028C8  6E4C               	movwf	(___fladd@a+2)^0,c
  6589   0028CA  0E3F               	movlw	63
  6590   0028CC  6E4D               	movwf	(___fladd@a+3)^0,c
  6591   0028CE  0E83               	movlw	131
  6592   0028D0  6E18               	movwf	___flmul@a^0,c
  6593   0028D2  0EF9               	movlw	249
  6594   0028D4  6E19               	movwf	(___flmul@a+1)^0,c
  6595   0028D6  0E22               	movlw	34
  6596   0028D8  6E1A               	movwf	(___flmul@a+2)^0,c
  6597   0028DA  0E3F               	movlw	63
  6598   0028DC  6E1B               	movwf	(___flmul@a+3)^0,c
  6599   0028DE  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6600   0028E2  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6601   0028E6  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6602   0028EA  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6603   0028EE  EC3A  F00D         	call	___flmul	;wreg free
  6604   0028F2  C014  F046         	movff	?___flmul,___fladd@b
  6605   0028F6  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6606   0028FA  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6607   0028FE  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6608   002902  ECD9  F00A         	call	___fladd	;wreg free
  6609   002906  C046  F064         	movff	?___fladd,___fltol@f1
  6610   00290A  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6611   00290E  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6612   002912  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6613   002916  EC83  F021         	call	___fltol	;wreg free
  6614   00291A  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6615   00291E  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6616   002922  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6617   002926  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6618   00292A  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6619   00292E  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6620   002932  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6621   002936  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6622   00293A  0E01               	movlw	1
  6623   00293C  EC84  F01C         	call	___xxtofl
  6624   002940  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6625   002944  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6626   002948  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6627   00294C  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6628   002950  0EDA               	movlw	218
  6629   002952  6E18               	movwf	___flmul@a^0,c
  6630   002954  0E0F               	movlw	15
  6631   002956  6E19               	movwf	(___flmul@a+1)^0,c
  6632   002958  0EC9               	movlw	201
  6633   00295A  6E1A               	movwf	(___flmul@a+2)^0,c
  6634   00295C  0E3F               	movlw	63
  6635   00295E  6E1B               	movwf	(___flmul@a+3)^0,c
  6636   002960  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6637   002964  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6638   002968  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6639   00296C  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6640   002970  EC3A  F00D         	call	___flmul	;wreg free
  6641   002974  C014  F068         	movff	?___flmul,___flsub@a
  6642   002978  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6643   00297C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6644   002980  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6645   002984  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6646   002988  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6647   00298C  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6648   002990  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6649   002994  EC08  F028         	call	___flsub	;wreg free
  6650   002998  C064  F08F         	movff	?___flsub,___rem_pio2f$4538
  6651   00299C  C065  F090         	movff	?___flsub+1,___rem_pio2f$4538+1
  6652   0029A0  C066  F091         	movff	?___flsub+2,___rem_pio2f$4538+2
  6653   0029A4  C067  F092         	movff	?___flsub+3,___rem_pio2f$4538+3
  6654   0029A8  C08F  F064         	movff	___rem_pio2f$4538,___flsub@b
  6655   0029AC  C090  F065         	movff	___rem_pio2f$4538+1,___flsub@b+1
  6656   0029B0  C091  F066         	movff	___rem_pio2f$4538+2,___flsub@b+2
  6657   0029B4  C092  F067         	movff	___rem_pio2f$4538+3,___flsub@b+3
  6658   0029B8  0EA3               	movlw	163
  6659   0029BA  6E18               	movwf	___flmul@a^0,c
  6660   0029BC  0E85               	movlw	133
  6661   0029BE  6E19               	movwf	(___flmul@a+1)^0,c
  6662   0029C0  0E88               	movlw	136
  6663   0029C2  6E1A               	movwf	(___flmul@a+2)^0,c
  6664   0029C4  0E32               	movlw	50
  6665   0029C6  6E1B               	movwf	(___flmul@a+3)^0,c
  6666   0029C8  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6667   0029CC  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6668   0029D0  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6669   0029D4  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6670   0029D8  EC3A  F00D         	call	___flmul	;wreg free
  6671   0029DC  C014  F068         	movff	?___flmul,___flsub@a
  6672   0029E0  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6673   0029E4  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6674   0029E8  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6675   0029EC  EC08  F028         	call	___flsub	;wreg free
  6676   0029F0  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6677   0029F4  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6678   0029F8  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6679   0029FC  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6680   002A00  0100               	movlb	0	; () banked
  6681   002A02  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6682   002A04  6ED9               	movwf	fsr2l,c
  6683   002A06  6ADA               	clrf	fsr2h,c
  6684   002A08  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6685   002A0C  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6686   002A10  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6687   002A14  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6688   002A18                     
  6689                           ; BSR set to: 0
  6690   002A18  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6691   002A1A  B4D8               	btfsc	status,2,c
  6692   002A1C  EF12  F015         	goto	u9351
  6693   002A20  EF14  F015         	goto	u9350
  6694   002A24                     u9351:
  6695   002A24  EF47  F014         	goto	l1744
  6696   002A28                     u9350:
  6697   002A28  EF20  F014         	goto	l7734
  6698   002A2C                     l1745:
  6699                           
  6700                           ; BSR set to: 0
  6701   002A2C  0012               	return		;funcret
  6702   002A2E                     __end_of___rem_pio2f:
  6703                           	callstack 0
  6704                           
  6705 ;; *************** function _fabsf *****************
  6706 ;; Defined at:
  6707 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  x               4    5[COMRAM] float 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  u               4    9[COMRAM] struct .
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  4    5[COMRAM] float 
  6714 ;; Registers used:
  6715 ;;		status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;Total ram usage:        8 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		___rem_pio2f
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text20
  6736   0051FE                     __ptext20:
  6737                           	callstack 0
  6738   0051FE                     _fabsf:
  6739                           	callstack 26
  6740   0051FE  C111  F00A         	movff	fabsf@F465,fabsf@u
  6741   005202  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6742   005206  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6743   00520A  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6744   00520E  C006  F00A         	movff	fabsf@x,fabsf@u
  6745   005212  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6746   005216  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6747   00521A  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6748   00521E  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6749   005220  C00A  F006         	movff	fabsf@u,?_fabsf
  6750   005224  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6751   005228  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6752   00522C  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6753   005230  0012               	return		;funcret
  6754   005232                     __end_of_fabsf:
  6755                           	callstack 0
  6756                           
  6757 ;; *************** function ___cosdf *****************
  6758 ;; Defined at:
  6759 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  x               4    4[BANK0 ] float 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  z               4   28[BANK0 ] float 
  6764 ;;  w               4   24[BANK0 ] float 
  6765 ;;  r               4    8[BANK0 ] float 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  4    4[BANK0 ] float 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;Total ram usage:       28 bytes
  6780 ;; Hardware stack levels used: 1
  6781 ;; Hardware stack levels required when called: 2
  6782 ;; This function calls:
  6783 ;;		___fladd
  6784 ;;		___flmul
  6785 ;; This function is called by:
  6786 ;;		_sinf
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text21
  6791   00370A                     __ptext21:
  6792                           	callstack 0
  6793   00370A                     ___cosdf:
  6794                           	callstack 26
  6795   00370A  C064  F014         	movff	___cosdf@x,___flmul@b
  6796   00370E  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6797   003712  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6798   003716  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6799   00371A  C064  F018         	movff	___cosdf@x,___flmul@a
  6800   00371E  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6801   003722  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6802   003726  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6803   00372A  EC3A  F00D         	call	___flmul	;wreg free
  6804   00372E  C014  F07C         	movff	?___flmul,___cosdf@z
  6805   003732  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6806   003736  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6807   00373A  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6808   00373E  C07C  F014         	movff	___cosdf@z,___flmul@b
  6809   003742  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6810   003746  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6811   00374A  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6812   00374E  C07C  F018         	movff	___cosdf@z,___flmul@a
  6813   003752  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6814   003756  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6815   00375A  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6816   00375E  EC3A  F00D         	call	___flmul	;wreg free
  6817   003762  C014  F078         	movff	?___flmul,___cosdf@w
  6818   003766  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6819   00376A  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6820   00376E  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6821   003772  0E17               	movlw	23
  6822   003774  6E18               	movwf	___flmul@a^0,c
  6823   003776  0E9A               	movlw	154
  6824   003778  6E19               	movwf	(___flmul@a+1)^0,c
  6825   00377A  0ECC               	movlw	204
  6826   00377C  6E1A               	movwf	(___flmul@a+2)^0,c
  6827   00377E  0E37               	movlw	55
  6828   003780  6E1B               	movwf	(___flmul@a+3)^0,c
  6829   003782  C07C  F014         	movff	___cosdf@z,___flmul@b
  6830   003786  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6831   00378A  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6832   00378E  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6833   003792  EC3A  F00D         	call	___flmul	;wreg free
  6834   003796  C014  F046         	movff	?___flmul,___fladd@b
  6835   00379A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6836   00379E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6837   0037A2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6838   0037A6  0E3F               	movlw	63
  6839   0037A8  6E4A               	movwf	___fladd@a^0,c
  6840   0037AA  0E04               	movlw	4
  6841   0037AC  6E4B               	movwf	(___fladd@a+1)^0,c
  6842   0037AE  0EB6               	movlw	182
  6843   0037B0  6E4C               	movwf	(___fladd@a+2)^0,c
  6844   0037B2  0EBA               	movlw	186
  6845   0037B4  6E4D               	movwf	(___fladd@a+3)^0,c
  6846   0037B6  ECD9  F00A         	call	___fladd	;wreg free
  6847   0037BA  C046  F068         	movff	?___fladd,___cosdf@r
  6848   0037BE  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6849   0037C2  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6850   0037C6  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6851   0037CA  0E00               	movlw	0
  6852   0037CC  6E4A               	movwf	___fladd@a^0,c
  6853   0037CE  0E00               	movlw	0
  6854   0037D0  6E4B               	movwf	(___fladd@a+1)^0,c
  6855   0037D2  0E80               	movlw	128
  6856   0037D4  6E4C               	movwf	(___fladd@a+2)^0,c
  6857   0037D6  0E3F               	movlw	63
  6858   0037D8  6E4D               	movwf	(___fladd@a+3)^0,c
  6859   0037DA  0E00               	movlw	0
  6860   0037DC  6E18               	movwf	___flmul@a^0,c
  6861   0037DE  0E00               	movlw	0
  6862   0037E0  6E19               	movwf	(___flmul@a+1)^0,c
  6863   0037E2  0E00               	movlw	0
  6864   0037E4  6E1A               	movwf	(___flmul@a+2)^0,c
  6865   0037E6  0EBF               	movlw	191
  6866   0037E8  6E1B               	movwf	(___flmul@a+3)^0,c
  6867   0037EA  C07C  F014         	movff	___cosdf@z,___flmul@b
  6868   0037EE  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6869   0037F2  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6870   0037F6  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6871   0037FA  EC3A  F00D         	call	___flmul	;wreg free
  6872   0037FE  C014  F046         	movff	?___flmul,___fladd@b
  6873   003802  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6874   003806  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6875   00380A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6876   00380E  ECD9  F00A         	call	___fladd	;wreg free
  6877   003812  C046  F06C         	movff	?___fladd,___cosdf$4535
  6878   003816  C047  F06D         	movff	?___fladd+1,___cosdf$4535+1
  6879   00381A  C048  F06E         	movff	?___fladd+2,___cosdf$4535+2
  6880   00381E  C049  F06F         	movff	?___fladd+3,___cosdf$4535+3
  6881   003822  C07C  F018         	movff	___cosdf@z,___flmul@a
  6882   003826  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6883   00382A  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6884   00382E  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6885   003832  C078  F014         	movff	___cosdf@w,___flmul@b
  6886   003836  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6887   00383A  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6888   00383E  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6889   003842  EC3A  F00D         	call	___flmul	;wreg free
  6890   003846  C014  F070         	movff	?___flmul,___cosdf$4536
  6891   00384A  C015  F071         	movff	?___flmul+1,___cosdf$4536+1
  6892   00384E  C016  F072         	movff	?___flmul+2,___cosdf$4536+2
  6893   003852  C017  F073         	movff	?___flmul+3,___cosdf$4536+3
  6894   003856  0E9F               	movlw	159
  6895   003858  6E18               	movwf	___flmul@a^0,c
  6896   00385A  0EAA               	movlw	170
  6897   00385C  6E19               	movwf	(___flmul@a+1)^0,c
  6898   00385E  0E2A               	movlw	42
  6899   003860  6E1A               	movwf	(___flmul@a+2)^0,c
  6900   003862  0E3D               	movlw	61
  6901   003864  6E1B               	movwf	(___flmul@a+3)^0,c
  6902   003866  C078  F014         	movff	___cosdf@w,___flmul@b
  6903   00386A  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6904   00386E  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6905   003872  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6906   003876  EC3A  F00D         	call	___flmul	;wreg free
  6907   00387A  C014  F04A         	movff	?___flmul,___fladd@a
  6908   00387E  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6909   003882  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6910   003886  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6911   00388A  C06C  F046         	movff	___cosdf$4535,___fladd@b
  6912   00388E  C06D  F047         	movff	___cosdf$4535+1,___fladd@b+1
  6913   003892  C06E  F048         	movff	___cosdf$4535+2,___fladd@b+2
  6914   003896  C06F  F049         	movff	___cosdf$4535+3,___fladd@b+3
  6915   00389A  ECD9  F00A         	call	___fladd	;wreg free
  6916   00389E  C046  F074         	movff	?___fladd,___cosdf$4537
  6917   0038A2  C047  F075         	movff	?___fladd+1,___cosdf$4537+1
  6918   0038A6  C048  F076         	movff	?___fladd+2,___cosdf$4537+2
  6919   0038AA  C049  F077         	movff	?___fladd+3,___cosdf$4537+3
  6920   0038AE  C074  F046         	movff	___cosdf$4537,___fladd@b
  6921   0038B2  C075  F047         	movff	___cosdf$4537+1,___fladd@b+1
  6922   0038B6  C076  F048         	movff	___cosdf$4537+2,___fladd@b+2
  6923   0038BA  C077  F049         	movff	___cosdf$4537+3,___fladd@b+3
  6924   0038BE  C068  F018         	movff	___cosdf@r,___flmul@a
  6925   0038C2  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6926   0038C6  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6927   0038CA  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6928   0038CE  C070  F014         	movff	___cosdf$4536,___flmul@b
  6929   0038D2  C071  F015         	movff	___cosdf$4536+1,___flmul@b+1
  6930   0038D6  C072  F016         	movff	___cosdf$4536+2,___flmul@b+2
  6931   0038DA  C073  F017         	movff	___cosdf$4536+3,___flmul@b+3
  6932   0038DE  EC3A  F00D         	call	___flmul	;wreg free
  6933   0038E2  C014  F04A         	movff	?___flmul,___fladd@a
  6934   0038E6  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6935   0038EA  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6936   0038EE  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6937   0038F2  ECD9  F00A         	call	___fladd	;wreg free
  6938   0038F6  C046  F064         	movff	?___fladd,?___cosdf
  6939   0038FA  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6940   0038FE  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6941   003902  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6942   003906  0012               	return		;funcret
  6943   003908                     __end_of___cosdf:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function _printf *****************
  6947 ;; Defined at:
  6948 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6951 ;;		 -> STR_35(5), STR_23(5), 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  ret             2    0        int 
  6954 ;;  ap              1   83[COMRAM] PTR void [1]
  6955 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  2  110[BANK0 ] int 
  6958 ;; Registers used:
  6959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;Total ram usage:        5 bytes
  6970 ;; Hardware stack levels used: 1
  6971 ;; Hardware stack levels required when called: 8
  6972 ;; This function calls:
  6973 ;;		_vfprintf
  6974 ;; This function is called by:
  6975 ;;		_runDAC
  6976 ;;		_runUART
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text22
  6981   0052DA                     __ptext22:
  6982                           	callstack 0
  6983   0052DA                     _printf:
  6984                           	callstack 21
  6985   0052DA  0ED0               	movlw	low (?_printf+2)
  6986   0052DC  6E54               	movwf	printf@ap^0,c
  6987   0052DE  0E00               	movlw	0
  6988   0052E0  0100               	movlb	0	; () banked
  6989   0052E2  6FC7               	movwf	vfprintf@fp& (0+255),b
  6990   0052E4  0E00               	movlw	0
  6991   0052E6  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6992   0052E8  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6993   0052EC  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6994   0052F0  0E54               	movlw	low printf@ap
  6995   0052F2  6FCB               	movwf	vfprintf@ap& (0+255),b
  6996   0052F4  ECE3  F027         	call	_vfprintf	;wreg free
  6997   0052F8  0012               	return		;funcret
  6998   0052FA                     __end_of_printf:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _SPI_write *****************
  7002 ;; Defined at:
  7003 ;;		line 93 in file "DAC.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  data            1    wreg     unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  data            1    7[COMRAM] unsigned char 
  7008 ;;  LSB             1    6[COMRAM] unsigned char 
  7009 ;;  MSB             1    5[COMRAM] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;Total ram usage:        3 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 1
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_runDAC
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text23
  7034   0050E2                     __ptext23:
  7035                           	callstack 0
  7036   0050E2                     _SPI_write:
  7037                           	callstack 28
  7038                           
  7039                           ;incstack = 0
  7040                           ;SPI_write@data stored from wreg
  7041   0050E2  6E08               	movwf	SPI_write@data^0,c
  7042   0050E4                     
  7043                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  7044   0050E4  3808               	swapf	SPI_write@data^0,w,c
  7045   0050E6  0B0F               	andlw	15
  7046   0050E8  0930               	iorlw	48
  7047   0050EA  6E06               	movwf	SPI_write@MSB^0,c
  7048                           
  7049                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  7050   0050EC  3808               	swapf	SPI_write@data^0,w,c
  7051   0050EE  0BF0               	andlw	240
  7052   0050F0  6E07               	movwf	SPI_write@LSB^0,c
  7053   0050F2                     
  7054                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  7055   0050F2  968A               	bcf	138,3,c	;volatile
  7056   0050F4                     
  7057                           ;DAC.c: 101:     SSP1BUF = MSB;
  7058   0050F4  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  7059   0050F8                     l245:
  7060   0050F8  A69E               	btfss	3998,3,c	;volatile
  7061   0050FA  EF81  F028         	goto	u9441
  7062   0050FE  EF83  F028         	goto	u9440
  7063   005102                     u9441:
  7064   005102  EF7C  F028         	goto	l245
  7065   005106                     u9440:
  7066   005106                     
  7067                           ;DAC.c: 103:     SSP1IF = 0;
  7068   005106  969E               	bcf	3998,3,c	;volatile
  7069                           
  7070                           ;DAC.c: 105:     SSP1BUF = LSB;
  7071   005108  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  7072   00510C                     l248:
  7073   00510C  A69E               	btfss	3998,3,c	;volatile
  7074   00510E  EF8B  F028         	goto	u9451
  7075   005112  EF8D  F028         	goto	u9450
  7076   005116                     u9451:
  7077   005116  EF86  F028         	goto	l248
  7078   00511A                     u9450:
  7079   00511A                     
  7080                           ;DAC.c: 107:     SSP1IF = 0;
  7081   00511A  969E               	bcf	3998,3,c	;volatile
  7082                           
  7083                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  7084   00511C  868A               	bsf	138,3,c	;volatile
  7085   00511E  0012               	return		;funcret
  7086   005120                     __end_of_SPI_write:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function _runADC *****************
  7090 ;; Defined at:
  7091 ;;		line 13 in file "ADC.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  text           17    0[BANK1 ] unsigned char [17]
  7096 ;;  voltage2        4   21[BANK1 ] float 
  7097 ;;  voltage1        4   17[BANK1 ] float 
  7098 ;;  pot2            2   27[BANK1 ] unsigned short 
  7099 ;;  pot1            2   25[BANK1 ] unsigned short 
  7100 ;;  keepState       1   29[BANK1 ] unsigned char 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;Total ram usage:       32 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 9
  7117 ;; This function calls:
  7118 ;;		_LCD_ShowString
  7119 ;;		___fldiv
  7120 ;;		___flmul
  7121 ;;		___xxtofl
  7122 ;;		_sprintf
  7123 ;; This function is called by:
  7124 ;;		_main
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text24
  7129   0034F8                     __ptext24:
  7130                           	callstack 0
  7131   0034F8                     _runADC:
  7132                           	callstack 21
  7133   0034F8                     
  7134                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  7135   0034F8  010F               	movlb	15	; () banked
  7136   0034FA  8B38               	bsf	56,5,b	;volatile
  7137                           
  7138                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  7139   0034FC  813C               	bsf	60,0,b	;volatile
  7140                           
  7141                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  7142   0034FE  8EC0               	bsf	192,7,c	;volatile
  7143   003500                     
  7144                           ; BSR set to: 15
  7145                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  7146   003500  50C0               	movf	192,w,c	;volatile
  7147   003502  0BF8               	andlw	-8
  7148   003504  0906               	iorlw	6
  7149   003506  6EC0               	movwf	192,c	;volatile
  7150                           
  7151                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  7152   003508  50C0               	movf	192,w,c	;volatile
  7153   00350A  0BC7               	andlw	-57
  7154   00350C  0930               	iorlw	48
  7155   00350E  6EC0               	movwf	192,c	;volatile
  7156   003510                     
  7157                           ; BSR set to: 15
  7158                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  7159   003510  80C2               	bsf	194,0,c	;volatile
  7160   003512                     
  7161                           ; BSR set to: 15
  7162                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  7163   003512  EE21  F09B         	lfsr	2,runADC@text
  7164   003516  0E10               	movlw	16
  7165   003518                     u10011:
  7166   003518  6ADE               	clrf	postinc2,c
  7167   00351A  06E8               	decf	wreg,f,c
  7168   00351C  E2FD               	bc	u10011
  7169   00351E                     
  7170                           ; BSR set to: 15
  7171                           ;ADC.c: 28: uint8_t keepState = 1;
  7172   00351E  0E01               	movlw	1
  7173   003520  0101               	movlb	1	; () banked
  7174   003522  6FB8               	movwf	runADC@keepState& (0+255),b
  7175                           
  7176                           ;ADC.c: 30: while(keepState){
  7177   003524  EF7A  F01B         	goto	l462
  7178   003528                     l8178:
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  7182   003528  50C2               	movf	194,w,c	;volatile
  7183   00352A  0B83               	andlw	-125
  7184   00352C  0914               	iorlw	20
  7185   00352E  6EC2               	movwf	194,c	;volatile
  7186   003530                     
  7187                           ; BSR set to: 1
  7188                           ;ADC.c: 33:     GODONE = 1;
  7189   003530  82C2               	bsf	4034,1,c	;volatile
  7190   003532                     l464:
  7191   003532  B2C2               	btfsc	4034,1,c	;volatile
  7192   003534  EF9E  F01A         	goto	u10021
  7193   003538  EFA0  F01A         	goto	u10020
  7194   00353C                     u10021:
  7195   00353C  EF99  F01A         	goto	l464
  7196   003540                     u10020:
  7197   003540                     
  7198                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  7199   003540  50C3               	movf	195,w,c	;volatile
  7200   003542  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7201   003546  0100               	movlb	0	; () banked
  7202   003548  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7203   00354A  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7204   00354E  6BE7               	clrf	??_runADC& (0+255),b
  7205   003550  11E7               	iorwf	??_runADC& (0+255),w,b
  7206   003552  0101               	movlb	1	; () banked
  7207   003554  6FB4               	movwf	runADC@pot1& (0+255),b
  7208   003556  0100               	movlb	0	; () banked
  7209   003558  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7210   00355A  0101               	movlb	1	; () banked
  7211   00355C  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  7212   00355E                     
  7213                           ; BSR set to: 1
  7214                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  7215   00355E  0E00               	movlw	0
  7216   003560  6E31               	movwf	___fldiv@a^0,c
  7217   003562  0EC0               	movlw	192
  7218   003564  6E32               	movwf	(___fldiv@a+1)^0,c
  7219   003566  0E7F               	movlw	127
  7220   003568  6E33               	movwf	(___fldiv@a+2)^0,c
  7221   00356A  0E44               	movlw	68
  7222   00356C  6E34               	movwf	(___fldiv@a+3)^0,c
  7223   00356E  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  7224   003572  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  7225   003576  6A08               	clrf	(___xxtofl@val+2)^0,c
  7226   003578  6A09               	clrf	(___xxtofl@val+3)^0,c
  7227   00357A  0E00               	movlw	0
  7228   00357C  EC84  F01C         	call	___xxtofl
  7229   003580  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7230   003584  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7231   003588  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7232   00358C  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7233   003590  EC17  F015         	call	___fldiv	;wreg free
  7234   003594  C02D  F014         	movff	?___fldiv,___flmul@b
  7235   003598  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7236   00359C  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7237   0035A0  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7238   0035A4  0E33               	movlw	51
  7239   0035A6  6E18               	movwf	___flmul@a^0,c
  7240   0035A8  0E33               	movlw	51
  7241   0035AA  6E19               	movwf	(___flmul@a+1)^0,c
  7242   0035AC  0E53               	movlw	83
  7243   0035AE  6E1A               	movwf	(___flmul@a+2)^0,c
  7244   0035B0  0E40               	movlw	64
  7245   0035B2  6E1B               	movwf	(___flmul@a+3)^0,c
  7246   0035B4  EC3A  F00D         	call	___flmul	;wreg free
  7247   0035B8  C014  F1AC         	movff	?___flmul,runADC@voltage1
  7248   0035BC  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  7249   0035C0  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  7250   0035C4  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  7251   0035C8                     
  7252                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  7253   0035C8  50C2               	movf	194,w,c	;volatile
  7254   0035CA  0B83               	andlw	-125
  7255   0035CC  0910               	iorlw	16
  7256   0035CE  6EC2               	movwf	194,c	;volatile
  7257   0035D0                     
  7258                           ;ADC.c: 40:     GODONE = 1;
  7259   0035D0  82C2               	bsf	4034,1,c	;volatile
  7260   0035D2                     l467:
  7261   0035D2  B2C2               	btfsc	4034,1,c	;volatile
  7262   0035D4  EFEE  F01A         	goto	u10031
  7263   0035D8  EFF0  F01A         	goto	u10030
  7264   0035DC                     u10031:
  7265   0035DC  EFE9  F01A         	goto	l467
  7266   0035E0                     u10030:
  7267   0035E0                     
  7268                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  7269   0035E0  50C3               	movf	195,w,c	;volatile
  7270   0035E2  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7271   0035E6  0100               	movlb	0	; () banked
  7272   0035E8  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7273   0035EA  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7274   0035EE  6BE7               	clrf	??_runADC& (0+255),b
  7275   0035F0  11E7               	iorwf	??_runADC& (0+255),w,b
  7276   0035F2  0101               	movlb	1	; () banked
  7277   0035F4  6FB6               	movwf	runADC@pot2& (0+255),b
  7278   0035F6  0100               	movlb	0	; () banked
  7279   0035F8  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7280   0035FA  0101               	movlb	1	; () banked
  7281   0035FC  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7282   0035FE                     
  7283                           ; BSR set to: 1
  7284                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7285   0035FE  0E00               	movlw	0
  7286   003600  6E31               	movwf	___fldiv@a^0,c
  7287   003602  0EC0               	movlw	192
  7288   003604  6E32               	movwf	(___fldiv@a+1)^0,c
  7289   003606  0E7F               	movlw	127
  7290   003608  6E33               	movwf	(___fldiv@a+2)^0,c
  7291   00360A  0E44               	movlw	68
  7292   00360C  6E34               	movwf	(___fldiv@a+3)^0,c
  7293   00360E  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7294   003612  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7295   003616  6A08               	clrf	(___xxtofl@val+2)^0,c
  7296   003618  6A09               	clrf	(___xxtofl@val+3)^0,c
  7297   00361A  0E00               	movlw	0
  7298   00361C  EC84  F01C         	call	___xxtofl
  7299   003620  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7300   003624  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7301   003628  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7302   00362C  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7303   003630  EC17  F015         	call	___fldiv	;wreg free
  7304   003634  C02D  F014         	movff	?___fldiv,___flmul@b
  7305   003638  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7306   00363C  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7307   003640  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7308   003644  0E33               	movlw	51
  7309   003646  6E18               	movwf	___flmul@a^0,c
  7310   003648  0E33               	movlw	51
  7311   00364A  6E19               	movwf	(___flmul@a+1)^0,c
  7312   00364C  0E53               	movlw	83
  7313   00364E  6E1A               	movwf	(___flmul@a+2)^0,c
  7314   003650  0E40               	movlw	64
  7315   003652  6E1B               	movwf	(___flmul@a+3)^0,c
  7316   003654  EC3A  F00D         	call	___flmul	;wreg free
  7317   003658  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7318   00365C  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7319   003660  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7320   003664  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7321   003668                     
  7322                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7323   003668  0E9B               	movlw	low runADC@text
  7324   00366A  0100               	movlb	0	; () banked
  7325   00366C  6FCE               	movwf	sprintf@s& (0+255),b
  7326   00366E  0E01               	movlw	high runADC@text
  7327   003670  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7328   003672  0E46               	movlw	low STR_34
  7329   003674  6FD0               	movwf	sprintf@fmt& (0+255),b
  7330   003676  0EFE               	movlw	high STR_34
  7331   003678  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7332   00367A  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7333   00367E  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7334   003682  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7335   003686  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7336   00368A  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7337   00368E  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7338   003692  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7339   003696  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7340   00369A  EC2C  F028         	call	_sprintf	;wreg free
  7341   00369E                     
  7342                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7343   00369E  0E9B               	movlw	low runADC@text
  7344   0036A0  6E07               	movwf	LCD_ShowString@textData^0,c
  7345   0036A2  0E01               	movlw	high runADC@text
  7346   0036A4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7347   0036A6  0E02               	movlw	2
  7348   0036A8  ECB4  F024         	call	_LCD_ShowString
  7349   0036AC                     
  7350                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7351   0036AC  A480               	btfss	128,2,c	;volatile
  7352   0036AE  EF5B  F01B         	goto	u10041
  7353   0036B2  EF5D  F01B         	goto	u10040
  7354   0036B6                     u10041:
  7355   0036B6  EF7A  F01B         	goto	l462
  7356   0036BA                     u10040:
  7357   0036BA                     
  7358                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7359   0036BA  0E03               	movlw	3
  7360   0036BC  0100               	movlb	0	; () banked
  7361   0036BE  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7362   0036C0  0E08               	movlw	8
  7363   0036C2  6FE7               	movwf	??_runADC& (0+255),b
  7364   0036C4  0E77               	movlw	119
  7365   0036C6                     u10537:
  7366   0036C6  2EE8               	decfsz	wreg,f,c
  7367   0036C8  D7FE               	bra	u10537
  7368   0036CA  2FE7               	decfsz	??_runADC& (0+255),f,b
  7369   0036CC  D7FC               	bra	u10537
  7370   0036CE  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7371   0036D0  D7FA               	bra	u10537
  7372   0036D2                     
  7373                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7374   0036D2  A480               	btfss	128,2,c	;volatile
  7375   0036D4  EF6E  F01B         	goto	u10051
  7376   0036D8  EF70  F01B         	goto	u10050
  7377   0036DC                     u10051:
  7378   0036DC  EF7A  F01B         	goto	l462
  7379   0036E0                     u10050:
  7380   0036E0                     l472:
  7381   0036E0  B480               	btfsc	128,2,c	;volatile
  7382   0036E2  EF75  F01B         	goto	u10061
  7383   0036E6  EF77  F01B         	goto	u10060
  7384   0036EA                     u10061:
  7385   0036EA  EF70  F01B         	goto	l472
  7386   0036EE                     u10060:
  7387   0036EE                     
  7388                           ;ADC.c: 52:             keepState = 0;
  7389   0036EE  0E00               	movlw	0
  7390   0036F0  0101               	movlb	1	; () banked
  7391   0036F2  6FB8               	movwf	runADC@keepState& (0+255),b
  7392   0036F4                     l462:
  7393                           
  7394                           ;ADC.c: 30: while(keepState){
  7395   0036F4  0101               	movlb	1	; () banked
  7396   0036F6  51B8               	movf	runADC@keepState& (0+255),w,b
  7397   0036F8  A4D8               	btfss	status,2,c
  7398   0036FA  EF81  F01B         	goto	u10071
  7399   0036FE  EF83  F01B         	goto	u10070
  7400   003702                     u10071:
  7401   003702  EF94  F01A         	goto	l8178
  7402   003706                     u10070:
  7403   003706                     
  7404                           ; BSR set to: 1
  7405                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7406   003706  90C2               	bcf	194,0,c	;volatile
  7407   003708                     
  7408                           ; BSR set to: 1
  7409   003708  0012               	return		;funcret
  7410   00370A                     __end_of_runADC:
  7411                           	callstack 0
  7412                           
  7413 ;; *************** function ___xxtofl *****************
  7414 ;; Defined at:
  7415 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;  sign            1    wreg     unsigned char 
  7418 ;;  val             4    5[COMRAM] long 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;  sign            1   13[COMRAM] unsigned char 
  7421 ;;  arg             4   15[COMRAM] unsigned long 
  7422 ;;  exp             1   14[COMRAM] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  4    5[COMRAM] unsigned char 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;Total ram usage:       14 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 1
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_runDAC
  7443 ;;		_runADC
  7444 ;;		___rem_pio2f
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text25
  7449   003908                     __ptext25:
  7450                           	callstack 0
  7451   003908                     ___xxtofl:
  7452                           	callstack 26
  7453                           
  7454                           ; BSR set to: 1
  7455                           ;incstack = 0
  7456                           ;___xxtofl@sign stored from wreg
  7457   003908  6E0E               	movwf	___xxtofl@sign^0,c
  7458   00390A  500E               	movf	___xxtofl@sign^0,w,c
  7459   00390C  B4D8               	btfsc	status,2,c
  7460   00390E  EF8B  F01C         	goto	u9031
  7461   003912  EF8D  F01C         	goto	u9030
  7462   003916                     u9031:
  7463   003916  EFAF  F01C         	goto	l1365
  7464   00391A                     u9030:
  7465   00391A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7466   00391C  EF94  F01C         	goto	u9040
  7467   003920  EF92  F01C         	goto	u9041
  7468   003924                     u9041:
  7469   003924  EFAF  F01C         	goto	l1365
  7470   003928                     u9040:
  7471   003928  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7472   00392C  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7473   003930  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7474   003934  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7475   003938  1E0A               	comf	??___xxtofl^0,f,c
  7476   00393A  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7477   00393C  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7478   00393E  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7479   003940  2A0A               	incf	??___xxtofl^0,f,c
  7480   003942  0E00               	movlw	0
  7481   003944  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7482   003946  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7483   003948  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7484   00394A  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7485   00394E  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7486   003952  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7487   003956  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7488   00395A  EFB7  F01C         	goto	l7482
  7489   00395E                     l1365:
  7490   00395E  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7491   003962  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7492   003966  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7493   00396A  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7494   00396E                     l7482:
  7495   00396E  5006               	movf	___xxtofl@val^0,w,c
  7496   003970  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7497   003972  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7498   003974  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7499   003976  A4D8               	btfss	status,2,c
  7500   003978  EFC0  F01C         	goto	u9051
  7501   00397C  EFC2  F01C         	goto	u9050
  7502   003980                     u9051:
  7503   003980  EFCC  F01C         	goto	l7488
  7504   003984                     u9050:
  7505   003984  0E00               	movlw	0
  7506   003986  6E06               	movwf	?___xxtofl^0,c
  7507   003988  0E00               	movlw	0
  7508   00398A  6E07               	movwf	(?___xxtofl+1)^0,c
  7509   00398C  0E00               	movlw	0
  7510   00398E  6E08               	movwf	(?___xxtofl+2)^0,c
  7511   003990  0E00               	movlw	0
  7512   003992  6E09               	movwf	(?___xxtofl+3)^0,c
  7513   003994  EF5D  F01D         	goto	l1368
  7514   003998                     l7488:
  7515   003998  0E96               	movlw	150
  7516   00399A  6E0F               	movwf	___xxtofl@exp^0,c
  7517   00399C  EFD6  F01C         	goto	l7492
  7518   0039A0                     l7490:
  7519   0039A0  2A0F               	incf	___xxtofl@exp^0,f,c
  7520   0039A2  90D8               	bcf	status,0,c
  7521   0039A4  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7522   0039A6  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7523   0039A8  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7524   0039AA  3210               	rrcf	___xxtofl@arg^0,f,c
  7525   0039AC                     l7492:
  7526   0039AC  0E00               	movlw	0
  7527   0039AE  1410               	andwf	___xxtofl@arg^0,w,c
  7528   0039B0  6E0A               	movwf	??___xxtofl^0,c
  7529   0039B2  0E00               	movlw	0
  7530   0039B4  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7531   0039B6  6E0B               	movwf	(??___xxtofl+1)^0,c
  7532   0039B8  0E00               	movlw	0
  7533   0039BA  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7534   0039BC  6E0C               	movwf	(??___xxtofl+2)^0,c
  7535   0039BE  0EFE               	movlw	254
  7536   0039C0  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7537   0039C2  6E0D               	movwf	(??___xxtofl+3)^0,c
  7538   0039C4  500A               	movf	??___xxtofl^0,w,c
  7539   0039C6  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7540   0039C8  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7541   0039CA  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7542   0039CC  A4D8               	btfss	status,2,c
  7543   0039CE  EFEB  F01C         	goto	u9061
  7544   0039D2  EFED  F01C         	goto	u9060
  7545   0039D6                     u9061:
  7546   0039D6  EFD0  F01C         	goto	l7490
  7547   0039DA                     u9060:
  7548   0039DA  EFFB  F01C         	goto	l1372
  7549   0039DE                     l7494:
  7550   0039DE  2A0F               	incf	___xxtofl@exp^0,f,c
  7551   0039E0  0E01               	movlw	1
  7552   0039E2  2610               	addwf	___xxtofl@arg^0,f,c
  7553   0039E4  0E00               	movlw	0
  7554   0039E6  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7555   0039E8  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7556   0039EA  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7557   0039EC  90D8               	bcf	status,0,c
  7558   0039EE  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7559   0039F0  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7560   0039F2  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7561   0039F4  3210               	rrcf	___xxtofl@arg^0,f,c
  7562   0039F6                     l1372:
  7563   0039F6  0E00               	movlw	0
  7564   0039F8  1410               	andwf	___xxtofl@arg^0,w,c
  7565   0039FA  6E0A               	movwf	??___xxtofl^0,c
  7566   0039FC  0E00               	movlw	0
  7567   0039FE  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7568   003A00  6E0B               	movwf	(??___xxtofl+1)^0,c
  7569   003A02  0E00               	movlw	0
  7570   003A04  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7571   003A06  6E0C               	movwf	(??___xxtofl+2)^0,c
  7572   003A08  0EFF               	movlw	255
  7573   003A0A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7574   003A0C  6E0D               	movwf	(??___xxtofl+3)^0,c
  7575   003A0E  500A               	movf	??___xxtofl^0,w,c
  7576   003A10  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7577   003A12  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7578   003A14  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7579   003A16  A4D8               	btfss	status,2,c
  7580   003A18  EF10  F01D         	goto	u9071
  7581   003A1C  EF12  F01D         	goto	u9070
  7582   003A20                     u9071:
  7583   003A20  EFEF  F01C         	goto	l7494
  7584   003A24                     u9070:
  7585   003A24  EF1A  F01D         	goto	l7502
  7586   003A28                     l7500:
  7587   003A28  060F               	decf	___xxtofl@exp^0,f,c
  7588   003A2A  90D8               	bcf	status,0,c
  7589   003A2C  3610               	rlcf	___xxtofl@arg^0,f,c
  7590   003A2E  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7591   003A30  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7592   003A32  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7593   003A34                     l7502:
  7594   003A34  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7595   003A36  EF1F  F01D         	goto	u9081
  7596   003A3A  EF21  F01D         	goto	u9080
  7597   003A3E                     u9081:
  7598   003A3E  EF29  F01D         	goto	l1379
  7599   003A42                     u9080:
  7600   003A42  0E02               	movlw	2
  7601   003A44  600F               	cpfslt	___xxtofl@exp^0,c
  7602   003A46  EF27  F01D         	goto	u9091
  7603   003A4A  EF29  F01D         	goto	u9090
  7604   003A4E                     u9091:
  7605   003A4E  EF14  F01D         	goto	l7500
  7606   003A52                     u9090:
  7607   003A52                     l1379:
  7608   003A52  B00F               	btfsc	___xxtofl@exp^0,0,c
  7609   003A54  EF2E  F01D         	goto	u9101
  7610   003A58  EF30  F01D         	goto	u9100
  7611   003A5C                     u9101:
  7612   003A5C  EF31  F01D         	goto	l7508
  7613   003A60                     u9100:
  7614   003A60  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7615   003A62                     l7508:
  7616   003A62  90D8               	bcf	status,0,c
  7617   003A64  320F               	rrcf	___xxtofl@exp^0,f,c
  7618   003A66  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7619   003A6A  6A0B               	clrf	(??___xxtofl+1)^0,c
  7620   003A6C  6A0C               	clrf	(??___xxtofl+2)^0,c
  7621   003A6E  6A0D               	clrf	(??___xxtofl+3)^0,c
  7622   003A70  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7623   003A74  6A0C               	clrf	(??___xxtofl+2)^0,c
  7624   003A76  6A0B               	clrf	(??___xxtofl+1)^0,c
  7625   003A78  6A0A               	clrf	??___xxtofl^0,c
  7626   003A7A  500A               	movf	??___xxtofl^0,w,c
  7627   003A7C  1210               	iorwf	___xxtofl@arg^0,f,c
  7628   003A7E  500B               	movf	(??___xxtofl+1)^0,w,c
  7629   003A80  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7630   003A82  500C               	movf	(??___xxtofl+2)^0,w,c
  7631   003A84  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7632   003A86  500D               	movf	(??___xxtofl+3)^0,w,c
  7633   003A88  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7634   003A8A  500E               	movf	___xxtofl@sign^0,w,c
  7635   003A8C  B4D8               	btfsc	status,2,c
  7636   003A8E  EF4B  F01D         	goto	u9111
  7637   003A92  EF4D  F01D         	goto	u9110
  7638   003A96                     u9111:
  7639   003A96  EF55  F01D         	goto	l7518
  7640   003A9A                     u9110:
  7641   003A9A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7642   003A9C  EF54  F01D         	goto	u9120
  7643   003AA0  EF52  F01D         	goto	u9121
  7644   003AA4                     u9121:
  7645   003AA4  EF55  F01D         	goto	l7518
  7646   003AA8                     u9120:
  7647   003AA8  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7648   003AAA                     l7518:
  7649   003AAA  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7650   003AAE  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7651   003AB2  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7652   003AB6  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7653   003ABA                     l1368:
  7654   003ABA  0012               	return		;funcret
  7655   003ABC                     __end_of___xxtofl:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function _moveDisplay *****************
  7659 ;; Defined at:
  7660 ;;		line 11 in file "menu.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  menuI           1    wreg     unsigned char 
  7663 ;;  where           1  135[BANK0 ] unsigned char 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  menuI           1   50[BANK1 ] unsigned char 
  7666 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7667 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7668 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7669 ;;		 -> STR_31(1), STR_30(6), STR_29(5), STR_28(4), 
  7670 ;;		 -> STR_27(4), STR_26(4), STR_25(5), STR_24(5), 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      unsigned char 
  7673 ;; Registers used:
  7674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7680 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;Total ram usage:       54 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 9
  7687 ;; This function calls:
  7688 ;;		_LCD_Clear
  7689 ;;		_LCD_ShowString
  7690 ;;		_sprintf
  7691 ;; This function is called by:
  7692 ;;		_main
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text26
  7697   0041F4                     __ptext26:
  7698                           	callstack 0
  7699   0041F4                     _moveDisplay:
  7700                           	callstack 21
  7701                           
  7702                           ;incstack = 0
  7703                           ;moveDisplay@menuI stored from wreg
  7704   0041F4  0101               	movlb	1	; () banked
  7705   0041F6  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7706   0041F8                     
  7707                           ;menu.c: 12:     LCD_Clear();
  7708   0041F8  ECE4  F028         	call	_LCD_Clear	;wreg free
  7709   0041FC                     
  7710                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7711   0041FC  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7712   004200  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7713   004204  0E0F               	movlw	15
  7714   004206                     u9721:
  7715   004206  CFDB FFE3          	movff	plusw2,plusw1
  7716   00420A  06E8               	decf	wreg,f,c
  7717   00420C  E2FC               	bc	u9721
  7718                           
  7719                           ;menu.c: 14:     switch (where){
  7720   00420E  EF21  F021         	goto	l8004
  7721   004212                     l7994:
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;menu.c: 18:             if(menuI<6){
  7725   004212  0E06               	movlw	6
  7726   004214  0101               	movlb	1	; () banked
  7727   004216  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7728   004218  EF10  F021         	goto	u9731
  7729   00421C  EF12  F021         	goto	u9730
  7730   004220                     u9731:
  7731   004220  EF31  F021         	goto	l8006
  7732   004224                     u9730:
  7733   004224                     
  7734                           ; BSR set to: 1
  7735                           ;menu.c: 19:             menuI++;
  7736   004224  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7737   004226  EF31  F021         	goto	l8006
  7738   00422A                     l7998:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;menu.c: 23:             if(menuI>0){
  7742   00422A  0101               	movlb	1	; () banked
  7743   00422C  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7744   00422E  B4D8               	btfsc	status,2,c
  7745   004230  EF1C  F021         	goto	u9741
  7746   004234  EF1E  F021         	goto	u9740
  7747   004238                     u9741:
  7748   004238  EF31  F021         	goto	l8006
  7749   00423C                     u9740:
  7750   00423C                     
  7751                           ; BSR set to: 1
  7752                           ;menu.c: 24:             menuI--;
  7753   00423C  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7754   00423E  EF31  F021         	goto	l8006
  7755   004242                     l8004:
  7756   004242  0100               	movlb	0	; () banked
  7757   004244  51E7               	movf	moveDisplay@where& (0+255),w,b
  7758                           
  7759                           ; Switch size 1, requested type "simple"
  7760                           ; Number of cases is 3, Range of values is 0 to 2
  7761                           ; switch strategies available:
  7762                           ; Name         Instructions Cycles
  7763                           ; simple_byte           10     6 (average)
  7764                           ;	Chosen strategy is simple_byte
  7765   004246  0A00               	xorlw	0	; case 0
  7766   004248  B4D8               	btfsc	status,2,c
  7767   00424A  EF31  F021         	goto	l8006
  7768   00424E  0A01               	xorlw	1	; case 1
  7769   004250  B4D8               	btfsc	status,2,c
  7770   004252  EF09  F021         	goto	l7994
  7771   004256  0A03               	xorlw	3	; case 2
  7772   004258  B4D8               	btfsc	status,2,c
  7773   00425A  EF15  F021         	goto	l7998
  7774   00425E  EF31  F021         	goto	l8006
  7775   004262                     l8006:
  7776                           
  7777                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7778   004262  0E9B               	movlw	low moveDisplay@menuItem1
  7779   004264  0100               	movlb	0	; () banked
  7780   004266  6FCE               	movwf	sprintf@s& (0+255),b
  7781   004268  0E01               	movlw	high moveDisplay@menuItem1
  7782   00426A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7783   00426C  0ECC               	movlw	low STR_32
  7784   00426E  6FD0               	movwf	sprintf@fmt& (0+255),b
  7785   004270  0EFF               	movlw	high STR_32
  7786   004272  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7787   004274  0E00               	movlw	0
  7788   004276  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7789   004278  0E0F               	movlw	15
  7790   00427A  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7791   00427C  0101               	movlb	1	; () banked
  7792   00427E  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7793   004280  0D02               	mullw	2
  7794   004282  0EBD               	movlw	low moveDisplay@menuItems
  7795   004284  24F3               	addwf	243,w,c
  7796   004286  6ED9               	movwf	fsr2l,c
  7797   004288  0E01               	movlw	high moveDisplay@menuItems
  7798   00428A  20F4               	addwfc	prodh,w,c
  7799   00428C  6EDA               	movwf	fsr2h,c
  7800   00428E  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7801   004292  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7802   004296  EC2C  F028         	call	_sprintf	;wreg free
  7803                           
  7804                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7805   00429A  0EAC               	movlw	low moveDisplay@menuItem2
  7806   00429C  0100               	movlb	0	; () banked
  7807   00429E  6FCE               	movwf	sprintf@s& (0+255),b
  7808   0042A0  0E01               	movlw	high moveDisplay@menuItem2
  7809   0042A2  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7810   0042A4  0ECD               	movlw	low (STR_32+1)
  7811   0042A6  6FD0               	movwf	sprintf@fmt& (0+255),b
  7812   0042A8  0EFF               	movlw	high (STR_32+1)
  7813   0042AA  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7814   0042AC  0E00               	movlw	0
  7815   0042AE  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7816   0042B0  0E10               	movlw	16
  7817   0042B2  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7818   0042B4  0101               	movlb	1	; () banked
  7819   0042B6  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7820   0042B8  0100               	movlb	0	; () banked
  7821   0042BA  6FE8               	movwf	??_moveDisplay& (0+255),b
  7822   0042BC  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7823   0042BE  90D8               	bcf	status,0,c
  7824   0042C0  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7825   0042C2  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7826   0042C4  0E02               	movlw	2
  7827   0042C6  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7828   0042C8  0E00               	movlw	0
  7829   0042CA  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7830   0042CC  0EBD               	movlw	low moveDisplay@menuItems
  7831   0042CE  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7832   0042D0  6ED9               	movwf	fsr2l,c
  7833   0042D2  0E01               	movlw	high moveDisplay@menuItems
  7834   0042D4  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7835   0042D6  6EDA               	movwf	fsr2h,c
  7836   0042D8  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7837   0042DC  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7838   0042E0  EC2C  F028         	call	_sprintf	;wreg free
  7839   0042E4                     
  7840                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7841   0042E4  0E9B               	movlw	low moveDisplay@menuItem1
  7842   0042E6  6E07               	movwf	LCD_ShowString@textData^0,c
  7843   0042E8  0E01               	movlw	high moveDisplay@menuItem1
  7844   0042EA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7845   0042EC  0E01               	movlw	1
  7846   0042EE  ECB4  F024         	call	_LCD_ShowString
  7847   0042F2                     
  7848                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7849   0042F2  0EAC               	movlw	low moveDisplay@menuItem2
  7850   0042F4  6E07               	movwf	LCD_ShowString@textData^0,c
  7851   0042F6  0E01               	movlw	high moveDisplay@menuItem2
  7852   0042F8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7853   0042FA  0E02               	movlw	2
  7854   0042FC  ECB4  F024         	call	_LCD_ShowString
  7855   004300                     
  7856                           ;menu.c: 35:     return menuI;
  7857   004300  0101               	movlb	1	; () banked
  7858   004302  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7859   004304                     
  7860                           ; BSR set to: 1
  7861   004304  0012               	return		;funcret
  7862   004306                     __end_of_moveDisplay:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function _sprintf *****************
  7866 ;; Defined at:
  7867 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7870 ;;		 -> runGAME@approxText(25), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7871 ;;		 -> moveDisplay@menuItem1(17), 
  7872 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7873 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  7874 ;;		 -> STR_34(19), STR_33(5), STR_32(6), 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7877 ;;  ret             2    0        int 
  7878 ;;  ap              1  122[BANK0 ] PTR void [1]
  7879 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7880 ;; Return value:  Size  Location     Type
  7881 ;;                  2  110[BANK0 ] int 
  7882 ;; Registers used:
  7883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7889 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7890 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;Total ram usage:       25 bytes
  7894 ;; Hardware stack levels used: 1
  7895 ;; Hardware stack levels required when called: 8
  7896 ;; This function calls:
  7897 ;;		_vfprintf
  7898 ;; This function is called by:
  7899 ;;		_moveDisplay
  7900 ;;		_runADC
  7901 ;;		_runGAME
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text27
  7906   005058                     __ptext27:
  7907                           	callstack 0
  7908   005058                     _sprintf:
  7909                           	callstack 21
  7910   005058  0ED2               	movlw	low (?_sprintf+4)
  7911   00505A  0100               	movlb	0	; () banked
  7912   00505C  6FDA               	movwf	sprintf@ap& (0+255),b
  7913   00505E  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7914   005062  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7915   005066                     
  7916                           ; BSR set to: 0
  7917   005066  0E00               	movlw	0
  7918   005068  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7919   00506A  0E00               	movlw	0
  7920   00506C  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7921   00506E                     
  7922                           ; BSR set to: 0
  7923   00506E  0E00               	movlw	0
  7924   005070  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7925   005072  0E00               	movlw	0
  7926   005074  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7927   005076                     
  7928                           ; BSR set to: 0
  7929   005076  0EDB               	movlw	low sprintf@f
  7930   005078  6FC7               	movwf	vfprintf@fp& (0+255),b
  7931   00507A  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7932   00507C  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7933   005080  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7934   005084  0EDA               	movlw	low sprintf@ap
  7935   005086  6FCB               	movwf	vfprintf@ap& (0+255),b
  7936   005088  ECE3  F027         	call	_vfprintf	;wreg free
  7937   00508C  0100               	movlb	0	; () banked
  7938   00508E  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7939   005090  25CE               	addwf	sprintf@s& (0+255),w,b
  7940   005092  6ED9               	movwf	fsr2l,c
  7941   005094  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7942   005096  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7943   005098  6EDA               	movwf	fsr2h,c
  7944   00509A  6ADF               	clrf	indf2,c
  7945   00509C                     
  7946                           ; BSR set to: 0
  7947   00509C  0012               	return		;funcret
  7948   00509E                     __end_of_sprintf:
  7949                           	callstack 0
  7950                           
  7951 ;; *************** function _vfprintf *****************
  7952 ;; Defined at:
  7953 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7956 ;;		 -> NULL(0), sprintf@f(12), 
  7957 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7958 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  7959 ;;		 -> STR_35(5), STR_34(19), STR_33(5), STR_32(6), 
  7960 ;;		 -> STR_23(5), 
  7961 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7962 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7965 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  7966 ;;		 -> STR_35(5), STR_34(19), STR_33(5), STR_32(6), 
  7967 ;;		 -> STR_23(5), 
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  2  103[BANK0 ] int 
  7970 ;; Registers used:
  7971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7977 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;Total ram usage:        7 bytes
  7982 ;; Hardware stack levels used: 1
  7983 ;; Hardware stack levels required when called: 7
  7984 ;; This function calls:
  7985 ;;		_vfpfcnvrt
  7986 ;; This function is called by:
  7987 ;;		_sprintf
  7988 ;;		_printf
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text28
  7993   004FC6                     __ptext28:
  7994                           	callstack 0
  7995   004FC6                     _vfprintf:
  7996                           	callstack 21
  7997   004FC6                     
  7998                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7999   004FC6  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  8000   004FCA  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8001                           
  8002                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  8003   004FCE  EFF4  F027         	goto	l7700
  8004   004FD2                     l7698:
  8005                           
  8006                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  8007   004FD2  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  8008   004FD6  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8009   004FDA  0ECC               	movlw	low vfprintf@cfmt
  8010   004FDC  0100               	movlb	0	; () banked
  8011   004FDE  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  8012   004FE0  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  8013   004FE4  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  8014   004FE8                     l7700:
  8015                           
  8016                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  8017   004FE8  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  8018   004FEC  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8019   004FF0                     	if	0	;tblptru may be non-zero
  8020   004FF0                     	endif
  8021   004FF0                     	if	0	;tblptru may be non-zero
  8022   004FF0                     	endif
  8023   004FF0  0008               	tblrd		*
  8024   004FF2  50F5               	movf	tablat,w,c
  8025   004FF4  0900               	iorlw	0
  8026   004FF6  A4D8               	btfss	status,2,c
  8027   004FF8  EF00  F028         	goto	u9301
  8028   004FFC  EF02  F028         	goto	u9300
  8029   005000                     u9301:
  8030   005000  EFE9  F027         	goto	l7698
  8031   005004                     u9300:
  8032   005004                     
  8033                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8034   005004  0E00               	movlw	0
  8035   005006  0100               	movlb	0	; () banked
  8036   005008  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  8037   00500A  0E00               	movlw	0
  8038   00500C  6FC7               	movwf	?_vfprintf& (0+255),b
  8039   00500E                     
  8040                           ; BSR set to: 0
  8041   00500E  0012               	return		;funcret
  8042   005010                     __end_of_vfprintf:
  8043                           	callstack 0
  8044                           
  8045 ;; *************** function _vfpfcnvrt *****************
  8046 ;; Defined at:
  8047 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  8050 ;;		 -> NULL(0), sprintf@f(12), 
  8051 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  8052 ;;		 -> vfprintf@cfmt(2), 
  8053 ;;  ap              1   92[BANK0 ] PTR PTR void 
  8054 ;;		 -> printf@ap(1), sprintf@ap(1), 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  convarg         4   96[BANK0 ] struct .
  8057 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  8058 ;;		 -> STR_39(18), STR_38(19), STR_37(17), STR_36(19), 
  8059 ;;		 -> STR_35(5), STR_34(19), STR_33(5), STR_32(6), 
  8060 ;;		 -> STR_23(5), 
  8061 ;;  c               1  100[BANK0 ] unsigned char 
  8062 ;;  done            1   95[BANK0 ] _Bool 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8072 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;Total ram usage:       14 bytes
  8077 ;; Hardware stack levels used: 1
  8078 ;; Hardware stack levels required when called: 6
  8079 ;; This function calls:
  8080 ;;		_dtoa
  8081 ;;		_efgtoa
  8082 ;;		_fputc
  8083 ;;		_read_prec_or_width
  8084 ;;		_stoa
  8085 ;;		_utoa
  8086 ;; This function is called by:
  8087 ;;		_vfprintf
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text29
  8092   000B4C                     __ptext29:
  8093                           	callstack 0
  8094   000B4C                     _vfpfcnvrt:
  8095                           	callstack 21
  8096   000B4C                     
  8097                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  8098   000B4C  0100               	movlb	0	; () banked
  8099   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8100   000B50  6ED9               	movwf	fsr2l,c
  8101   000B52  6ADA               	clrf	fsr2h,c
  8102   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  8103   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  8104   000B5C                     	if	0	;tblptru may be non-zero
  8105   000B5C                     	endif
  8106   000B5C                     	if	0	;tblptru may be non-zero
  8107   000B5C                     	endif
  8108   000B5C  0008               	tblrd		*
  8109   000B5E  50F5               	movf	tablat,w,c
  8110   000B60  0A25               	xorlw	37
  8111   000B62  A4D8               	btfss	status,2,c
  8112   000B64  EFB6  F005         	goto	u9131
  8113   000B68  EFB8  F005         	goto	u9130
  8114   000B6C                     u9131:
  8115   000B6C  EF40  F008         	goto	l7670
  8116   000B70                     u9130:
  8117   000B70                     
  8118                           ; BSR set to: 0
  8119                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  8120   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8121   000B72  6ED9               	movwf	fsr2l,c
  8122   000B74  6ADA               	clrf	fsr2h,c
  8123   000B76  2ADE               	incf	postinc2,f,c
  8124   000B78  0E00               	movlw	0
  8125   000B7A  22DD               	addwfc	postdec2,f,c
  8126   000B7C                     
  8127                           ; BSR set to: 0
  8128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  8129   000B7C  0E00               	movlw	0
  8130   000B7E  6E56               	movwf	(_width+1)^0,c
  8131   000B80  0E00               	movlw	0
  8132   000B82  6E55               	movwf	_width^0,c
  8133   000B84  C055  F059         	movff	_width,_flags
  8134   000B88                     
  8135                           ; BSR set to: 0
  8136                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  8137   000B88  6857               	setf	_prec^0,c
  8138   000B8A  6858               	setf	(_prec+1)^0,c
  8139   000B8C                     
  8140                           ; BSR set to: 0
  8141                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  8142   000B8C  0E00               	movlw	0
  8143   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8144                           
  8145                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8146   000B90  EFE6  F005         	goto	l7542
  8147   000B94                     l7532:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  8151   000B94  8059               	bsf	_flags^0,0,c
  8152   000B96                     
  8153                           ; BSR set to: 0
  8154                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  8155   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8156   000B98  6ED9               	movwf	fsr2l,c
  8157   000B9A  6ADA               	clrf	fsr2h,c
  8158   000B9C  2ADE               	incf	postinc2,f,c
  8159   000B9E  0E00               	movlw	0
  8160   000BA0  22DD               	addwfc	postdec2,f,c
  8161                           
  8162                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  8163   000BA2  EFE6  F005         	goto	l7542
  8164   000BA6                     l7536:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  8168   000BA6  0E01               	movlw	1
  8169   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8170                           
  8171                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  8172   000BAA  EFE6  F005         	goto	l7542
  8173   000BAE                     l7540:
  8174                           
  8175                           ; BSR set to: 0
  8176   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8177   000BB0  6ED9               	movwf	fsr2l,c
  8178   000BB2  6ADA               	clrf	fsr2h,c
  8179   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  8180   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  8181   000BBC                     	if	0	;tblptru may be non-zero
  8182   000BBC                     	endif
  8183   000BBC                     	if	0	;tblptru may be non-zero
  8184   000BBC                     	endif
  8185   000BBC  0008               	tblrd		*
  8186   000BBE  50F5               	movf	tablat,w,c
  8187                           
  8188                           ; Switch size 1, requested type "simple"
  8189                           ; Number of cases is 1, Range of values is 45 to 45
  8190                           ; switch strategies available:
  8191                           ; Name         Instructions Cycles
  8192                           ; simple_byte            4     3 (average)
  8193                           ;	Chosen strategy is simple_byte
  8194   000BC0  0A2D               	xorlw	45	; case 45
  8195   000BC2  B4D8               	btfsc	status,2,c
  8196   000BC4  EFCA  F005         	goto	l7532
  8197   000BC8  EFD3  F005         	goto	l7536
  8198   000BCC                     l7542:
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8202   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8203   000BCE  B4D8               	btfsc	status,2,c
  8204   000BD0  EFEC  F005         	goto	u9141
  8205   000BD4  EFEE  F005         	goto	u9140
  8206   000BD8                     u9141:
  8207   000BD8  EFD7  F005         	goto	l7540
  8208   000BDC                     u9140:
  8209   000BDC                     
  8210                           ; BSR set to: 0
  8211                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  8212   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8213   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8214   000BE4  EC65  F025         	call	_read_prec_or_width	;wreg free
  8215   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  8216   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  8217   000BF0                     
  8218                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  8219   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  8220   000BF2  EFFF  F005         	goto	u9150
  8221   000BF6  EFFD  F005         	goto	u9151
  8222   000BFA                     u9151:
  8223   000BFA  EF04  F006         	goto	l7550
  8224   000BFE                     u9150:
  8225   000BFE                     
  8226                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  8227   000BFE  8059               	bsf	_flags^0,0,c
  8228                           
  8229                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  8230   000C00  6C55               	negf	_width^0,c
  8231   000C02  1E56               	comf	(_width+1)^0,f,c
  8232   000C04  B0D8               	btfsc	status,0,c
  8233   000C06  2A56               	incf	(_width+1)^0,f,c
  8234   000C08                     l7550:
  8235                           
  8236                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  8237   000C08  0100               	movlb	0	; () banked
  8238   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8239   000C0C  6ED9               	movwf	fsr2l,c
  8240   000C0E  6ADA               	clrf	fsr2h,c
  8241   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  8242   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  8243   000C18                     	if	0	;tblptru may be non-zero
  8244   000C18                     	endif
  8245   000C18                     	if	0	;tblptru may be non-zero
  8246   000C18                     	endif
  8247   000C18  0008               	tblrd		*
  8248   000C1A  50F5               	movf	tablat,w,c
  8249   000C1C  0A2E               	xorlw	46
  8250   000C1E  A4D8               	btfss	status,2,c
  8251   000C20  EF14  F006         	goto	u9161
  8252   000C24  EF16  F006         	goto	u9160
  8253   000C28                     u9161:
  8254   000C28  EF26  F006         	goto	l7556
  8255   000C2C                     u9160:
  8256   000C2C                     
  8257                           ; BSR set to: 0
  8258                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  8259   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8260   000C2E  6ED9               	movwf	fsr2l,c
  8261   000C30  6ADA               	clrf	fsr2h,c
  8262   000C32  2ADE               	incf	postinc2,f,c
  8263   000C34  0E00               	movlw	0
  8264   000C36  22DD               	addwfc	postdec2,f,c
  8265   000C38                     
  8266                           ; BSR set to: 0
  8267                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  8268   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8269   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8270   000C40  EC65  F025         	call	_read_prec_or_width	;wreg free
  8271   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8272   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8273   000C4C                     l7556:
  8274                           
  8275                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8276   000C4C  0100               	movlb	0	; () banked
  8277   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8278   000C50  6ED9               	movwf	fsr2l,c
  8279   000C52  6ADA               	clrf	fsr2h,c
  8280   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8281   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8282   000C5C                     
  8283                           ; BSR set to: 0
  8284                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8285   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8286   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8287   000C64                     	if	0	;tblptru may be non-zero
  8288   000C64                     	endif
  8289   000C64                     	if	0	;tblptru may be non-zero
  8290   000C64                     	endif
  8291   000C64  0008               	tblrd		*
  8292   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8293                           
  8294                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8295   000C6A  EF43  F006         	goto	l7568
  8296   000C6E                     l7560:
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8300   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8301   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8302                           
  8303                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8304   000C72  EF56  F006         	goto	l7570
  8305   000C76                     l7562:
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8309   000C76  0E69               	movlw	105
  8310   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8311                           
  8312                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8313   000C7A  EF56  F006         	goto	l7570
  8314   000C7E                     l7564:
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8318   000C7E  0E00               	movlw	0
  8319   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8320                           
  8321                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8322   000C82  EF56  F006         	goto	l7570
  8323   000C86                     l7568:
  8324                           
  8325                           ; BSR set to: 0
  8326   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8327                           
  8328                           ; Switch size 1, requested type "simple"
  8329                           ; Number of cases is 4, Range of values is 100 to 117
  8330                           ; switch strategies available:
  8331                           ; Name         Instructions Cycles
  8332                           ; simple_byte           13     7 (average)
  8333                           ;	Chosen strategy is simple_byte
  8334   000C88  0A64               	xorlw	100	; case 100
  8335   000C8A  B4D8               	btfsc	status,2,c
  8336   000C8C  EF3B  F006         	goto	l7562
  8337   000C90  0A0C               	xorlw	12	; case 104
  8338   000C92  B4D8               	btfsc	status,2,c
  8339   000C94  EF37  F006         	goto	l7560
  8340   000C98  0A01               	xorlw	1	; case 105
  8341   000C9A  B4D8               	btfsc	status,2,c
  8342   000C9C  EF3B  F006         	goto	l7562
  8343   000CA0  0A1C               	xorlw	28	; case 117
  8344   000CA2  B4D8               	btfsc	status,2,c
  8345   000CA4  EF3B  F006         	goto	l7562
  8346   000CA8  EF3F  F006         	goto	l7564
  8347   000CAC                     l7570:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8351   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8352   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8353   000CB4                     	if	0	;tblptru may be non-zero
  8354   000CB4                     	endif
  8355   000CB4                     	if	0	;tblptru may be non-zero
  8356   000CB4                     	endif
  8357   000CB4  0008               	tblrd		*
  8358   000CB6  50F5               	movf	tablat,w,c
  8359   000CB8  0A64               	xorlw	100
  8360   000CBA  B4D8               	btfsc	status,2,c
  8361   000CBC  EF62  F006         	goto	u9171
  8362   000CC0  EF64  F006         	goto	u9170
  8363   000CC4                     u9171:
  8364   000CC4  EF90  F006         	goto	l7580
  8365   000CC8                     u9170:
  8366   000CC8                     
  8367                           ; BSR set to: 0
  8368   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8369   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8370   000CD0                     	if	0	;tblptru may be non-zero
  8371   000CD0                     	endif
  8372   000CD0                     	if	0	;tblptru may be non-zero
  8373   000CD0                     	endif
  8374   000CD0  0008               	tblrd		*
  8375   000CD2  50F5               	movf	tablat,w,c
  8376   000CD4  0A69               	xorlw	105
  8377   000CD6  A4D8               	btfss	status,2,c
  8378   000CD8  EF70  F006         	goto	u9181
  8379   000CDC  EF72  F006         	goto	u9180
  8380   000CE0                     u9181:
  8381   000CE0  EFB4  F006         	goto	l7588
  8382   000CE4                     u9180:
  8383   000CE4  EF90  F006         	goto	l7580
  8384   000CE8                     l7574:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8388   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8389   000CEA  6ED9               	movwf	fsr2l,c
  8390   000CEC  6ADA               	clrf	fsr2h,c
  8391   000CEE  0E02               	movlw	2
  8392   000CF0  26DF               	addwf	indf2,f,c
  8393   000CF2  5CDF               	subwf	indf2,w,c
  8394   000CF4  6ED9               	movwf	fsr2l,c
  8395   000CF6  6ADA               	clrf	fsr2h,c
  8396   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8397   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8398                           
  8399                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8400   000D00  EF9B  F006         	goto	l7582
  8401   000D04                     l7576:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8405   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8406   000D06  6ED9               	movwf	fsr2l,c
  8407   000D08  6ADA               	clrf	fsr2h,c
  8408   000D0A  0E02               	movlw	2
  8409   000D0C  26DF               	addwf	indf2,f,c
  8410   000D0E  5CDF               	subwf	indf2,w,c
  8411   000D10  6ED9               	movwf	fsr2l,c
  8412   000D12  6ADA               	clrf	fsr2h,c
  8413   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8414   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8415                           
  8416                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8417   000D1C  EF9B  F006         	goto	l7582
  8418   000D20                     l7580:
  8419                           
  8420                           ; BSR set to: 0
  8421   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8422                           
  8423                           ; Switch size 1, requested type "simple"
  8424                           ; Number of cases is 2, Range of values is 104 to 105
  8425                           ; switch strategies available:
  8426                           ; Name         Instructions Cycles
  8427                           ; simple_byte            7     4 (average)
  8428                           ;	Chosen strategy is simple_byte
  8429   000D22  0A68               	xorlw	104	; case 104
  8430   000D24  B4D8               	btfsc	status,2,c
  8431   000D26  EF82  F006         	goto	l7576
  8432   000D2A  0A01               	xorlw	1	; case 105
  8433   000D2C  B4D8               	btfsc	status,2,c
  8434   000D2E  EF74  F006         	goto	l7574
  8435   000D32  EF9B  F006         	goto	l7582
  8436   000D36                     l7582:
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8440   000D36  0E01               	movlw	1
  8441   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8442   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8443   000D3C  0E00               	movlw	0
  8444   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8445   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8446   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8447   000D44  6ED9               	movwf	fsr2l,c
  8448   000D46  6ADA               	clrf	fsr2h,c
  8449   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8450   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8451   000D50                     
  8452                           ; BSR set to: 0
  8453                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8454   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8455   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8456   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8457   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8458   000D60  EC2D  F01E         	call	_dtoa	;wreg free
  8459   000D64  EF53  F008         	goto	l1560
  8460   000D68                     l7588:
  8461                           
  8462                           ; BSR set to: 0
  8463   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8464   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8465   000D70                     	if	0	;tblptru may be non-zero
  8466   000D70                     	endif
  8467   000D70                     	if	0	;tblptru may be non-zero
  8468   000D70                     	endif
  8469   000D70  0008               	tblrd		*
  8470   000D72  50F5               	movf	tablat,w,c
  8471   000D74  0A75               	xorlw	117
  8472   000D76  A4D8               	btfss	status,2,c
  8473   000D78  EFC0  F006         	goto	u9191
  8474   000D7C  EFC2  F006         	goto	u9190
  8475   000D80                     u9191:
  8476   000D80  EF12  F007         	goto	l7608
  8477   000D84                     u9190:
  8478   000D84  EFE0  F006         	goto	l7596
  8479   000D88                     l7590:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8483   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8484   000D8A  6ED9               	movwf	fsr2l,c
  8485   000D8C  6ADA               	clrf	fsr2h,c
  8486   000D8E  0E02               	movlw	2
  8487   000D90  26DF               	addwf	indf2,f,c
  8488   000D92  5CDF               	subwf	indf2,w,c
  8489   000D94  6ED9               	movwf	fsr2l,c
  8490   000D96  6ADA               	clrf	fsr2h,c
  8491   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8492   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8493                           
  8494                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8495   000DA0  EFEB  F006         	goto	l7598
  8496   000DA4                     l7592:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8500   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8501   000DA6  6ED9               	movwf	fsr2l,c
  8502   000DA8  6ADA               	clrf	fsr2h,c
  8503   000DAA  0E02               	movlw	2
  8504   000DAC  26DF               	addwf	indf2,f,c
  8505   000DAE  5CDF               	subwf	indf2,w,c
  8506   000DB0  6ED9               	movwf	fsr2l,c
  8507   000DB2  6ADA               	clrf	fsr2h,c
  8508   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8509   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8510                           
  8511                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8512   000DBC  EFEB  F006         	goto	l7598
  8513   000DC0                     l7596:
  8514                           
  8515                           ; BSR set to: 0
  8516   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8517                           
  8518                           ; Switch size 1, requested type "simple"
  8519                           ; Number of cases is 2, Range of values is 104 to 105
  8520                           ; switch strategies available:
  8521                           ; Name         Instructions Cycles
  8522                           ; simple_byte            7     4 (average)
  8523                           ;	Chosen strategy is simple_byte
  8524   000DC2  0A68               	xorlw	104	; case 104
  8525   000DC4  B4D8               	btfsc	status,2,c
  8526   000DC6  EFD2  F006         	goto	l7592
  8527   000DCA  0A01               	xorlw	1	; case 105
  8528   000DCC  B4D8               	btfsc	status,2,c
  8529   000DCE  EFC4  F006         	goto	l7590
  8530   000DD2  EFEB  F006         	goto	l7598
  8531   000DD6                     l7598:
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8535   000DD6  0E01               	movlw	1
  8536   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8537   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8538   000DDC  0E00               	movlw	0
  8539   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8540   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8541   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8542   000DE4  6ED9               	movwf	fsr2l,c
  8543   000DE6  6ADA               	clrf	fsr2h,c
  8544   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8545   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8546                           
  8547                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8548   000DF0  EF06  F007         	goto	l7606
  8549   000DF4                     l7600:
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8553   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8554   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8555   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8556   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8557   000E04  EC08  F023         	call	_utoa	;wreg free
  8558   000E08  EF53  F008         	goto	l1560
  8559   000E0C                     l7606:
  8560                           
  8561                           ; BSR set to: 0
  8562   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8563   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8564   000E14                     	if	0	;tblptru may be non-zero
  8565   000E14                     	endif
  8566   000E14                     	if	0	;tblptru may be non-zero
  8567   000E14                     	endif
  8568   000E14  0008               	tblrd		*
  8569   000E16  50F5               	movf	tablat,w,c
  8570                           
  8571                           ; Switch size 1, requested type "simple"
  8572                           ; Number of cases is 1, Range of values is 117 to 117
  8573                           ; switch strategies available:
  8574                           ; Name         Instructions Cycles
  8575                           ; simple_byte            4     3 (average)
  8576                           ;	Chosen strategy is simple_byte
  8577   000E18  0A75               	xorlw	117	; case 117
  8578   000E1A  B4D8               	btfsc	status,2,c
  8579   000E1C  EFFA  F006         	goto	l7600
  8580   000E20  EF12  F007         	goto	l7608
  8581   000E24                     l7608:
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8585   000E24  0E00               	movlw	0
  8586   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8587   000E28                     
  8588                           ; BSR set to: 0
  8589                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8590   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8591   000E2A  6ED9               	movwf	fsr2l,c
  8592   000E2C  6ADA               	clrf	fsr2h,c
  8593   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8594   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8595   000E36                     	if	0	;tblptru may be non-zero
  8596   000E36                     	endif
  8597   000E36                     	if	0	;tblptru may be non-zero
  8598   000E36                     	endif
  8599   000E36  0008               	tblrd		*
  8600   000E38  50F5               	movf	tablat,w,c
  8601   000E3A  0A73               	xorlw	115
  8602   000E3C  A4D8               	btfss	status,2,c
  8603   000E3E  EF23  F007         	goto	u9201
  8604   000E42  EF25  F007         	goto	u9200
  8605   000E46                     u9201:
  8606   000E46  EF2F  F007         	goto	l7616
  8607   000E4A                     u9200:
  8608   000E4A                     
  8609                           ; BSR set to: 0
  8610                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8611   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8612   000E4C  6ED9               	movwf	fsr2l,c
  8613   000E4E  6ADA               	clrf	fsr2h,c
  8614   000E50  2ADE               	incf	postinc2,f,c
  8615   000E52  0E00               	movlw	0
  8616   000E54  22DD               	addwfc	postdec2,f,c
  8617   000E56                     l7614:
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8621   000E56  0E01               	movlw	1
  8622   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8623                           
  8624                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8625   000E5A  EF7B  F007         	goto	l7626
  8626   000E5E                     l7616:
  8627                           
  8628                           ; BSR set to: 0
  8629   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8630   000E60  6ED9               	movwf	fsr2l,c
  8631   000E62  6ADA               	clrf	fsr2h,c
  8632   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8633   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8634   000E6C                     	if	0	;tblptru may be non-zero
  8635   000E6C                     	endif
  8636   000E6C                     	if	0	;tblptru may be non-zero
  8637   000E6C                     	endif
  8638   000E6C  0008               	tblrd		*
  8639   000E6E  50F5               	movf	tablat,w,c
  8640   000E70  0A6C               	xorlw	108
  8641   000E72  A4D8               	btfss	status,2,c
  8642   000E74  EF3E  F007         	goto	u9211
  8643   000E78  EF40  F007         	goto	u9210
  8644   000E7C                     u9211:
  8645   000E7C  EF7B  F007         	goto	l7626
  8646   000E80                     u9210:
  8647   000E80                     
  8648                           ; BSR set to: 0
  8649   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8650   000E82  6ED9               	movwf	fsr2l,c
  8651   000E84  6ADA               	clrf	fsr2h,c
  8652   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8653   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8654   000E8E  0E01               	movlw	1
  8655   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8656   000E92  0E00               	movlw	0
  8657   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8658   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8659   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8660   000E9E                     	if	0	;tblptru may be non-zero
  8661   000E9E                     	endif
  8662   000E9E                     	if	0	;tblptru may be non-zero
  8663   000E9E                     	endif
  8664   000E9E  0008               	tblrd		*
  8665   000EA0  50F5               	movf	tablat,w,c
  8666   000EA2  0A6C               	xorlw	108
  8667   000EA4  A4D8               	btfss	status,2,c
  8668   000EA6  EF57  F007         	goto	u9221
  8669   000EAA  EF59  F007         	goto	u9220
  8670   000EAE                     u9221:
  8671   000EAE  EF7B  F007         	goto	l7626
  8672   000EB2                     u9220:
  8673   000EB2                     
  8674                           ; BSR set to: 0
  8675   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8676   000EB4  6ED9               	movwf	fsr2l,c
  8677   000EB6  6ADA               	clrf	fsr2h,c
  8678   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8679   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8680   000EC0  0E02               	movlw	2
  8681   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8682   000EC4  0E00               	movlw	0
  8683   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8684   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8685   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8686   000ED0                     	if	0	;tblptru may be non-zero
  8687   000ED0                     	endif
  8688   000ED0                     	if	0	;tblptru may be non-zero
  8689   000ED0                     	endif
  8690   000ED0  0008               	tblrd		*
  8691   000ED2  50F5               	movf	tablat,w,c
  8692   000ED4  0A73               	xorlw	115
  8693   000ED6  A4D8               	btfss	status,2,c
  8694   000ED8  EF70  F007         	goto	u9231
  8695   000EDC  EF72  F007         	goto	u9230
  8696   000EE0                     u9231:
  8697   000EE0  EF7B  F007         	goto	l7626
  8698   000EE4                     u9230:
  8699   000EE4                     
  8700                           ; BSR set to: 0
  8701                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8702   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8703   000EE6  6ED9               	movwf	fsr2l,c
  8704   000EE8  6ADA               	clrf	fsr2h,c
  8705   000EEA  0E03               	movlw	3
  8706   000EEC  26DE               	addwf	postinc2,f,c
  8707   000EEE  0E00               	movlw	0
  8708   000EF0  22DD               	addwfc	postdec2,f,c
  8709   000EF2  EF2B  F007         	goto	l7614
  8710   000EF6                     l7626:
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8714   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8715   000EF8  B4D8               	btfsc	status,2,c
  8716   000EFA  EF81  F007         	goto	u9241
  8717   000EFE  EF83  F007         	goto	u9240
  8718   000F02                     u9241:
  8719   000F02  EF97  F007         	goto	l7632
  8720   000F06                     u9240:
  8721   000F06                     
  8722                           ; BSR set to: 0
  8723                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8724   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8725   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8726   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8727   000F10  6ED9               	movwf	fsr2l,c
  8728   000F12  6ADA               	clrf	fsr2h,c
  8729   000F14  0E02               	movlw	2
  8730   000F16  26DF               	addwf	indf2,f,c
  8731   000F18  5CDF               	subwf	indf2,w,c
  8732   000F1A  6ED9               	movwf	fsr2l,c
  8733   000F1C  6ADA               	clrf	fsr2h,c
  8734   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8735   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8736   000F26  EC5E  F01D         	call	_stoa	;wreg free
  8737   000F2A  EF53  F008         	goto	l1560
  8738   000F2E                     l7632:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8742   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8743   000F30  6ED9               	movwf	fsr2l,c
  8744   000F32  6ADA               	clrf	fsr2h,c
  8745   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8746   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8747   000F3C                     
  8748                           ; BSR set to: 0
  8749                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8750   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8751   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8752   000F44                     	if	0	;tblptru may be non-zero
  8753   000F44                     	endif
  8754   000F44                     	if	0	;tblptru may be non-zero
  8755   000F44                     	endif
  8756   000F44  0008               	tblrd		*
  8757   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8758                           
  8759                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8760   000F4A  EFB3  F007         	goto	l7644
  8761   000F4E                     l7636:
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8765   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8766   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8767                           
  8768                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8769   000F52  EFC2  F007         	goto	l7646
  8770   000F56                     l7638:
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8774   000F56  0E6C               	movlw	108
  8775   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8776                           
  8777                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8778   000F5A  EFC2  F007         	goto	l7646
  8779   000F5E                     l7640:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8783   000F5E  0E00               	movlw	0
  8784   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8785                           
  8786                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8787   000F62  EFC2  F007         	goto	l7646
  8788   000F66                     l7644:
  8789                           
  8790                           ; BSR set to: 0
  8791   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8792                           
  8793                           ; Switch size 1, requested type "simple"
  8794                           ; Number of cases is 3, Range of values is 76 to 108
  8795                           ; switch strategies available:
  8796                           ; Name         Instructions Cycles
  8797                           ; simple_byte           10     6 (average)
  8798                           ;	Chosen strategy is simple_byte
  8799   000F68  0A4C               	xorlw	76	; case 76
  8800   000F6A  B4D8               	btfsc	status,2,c
  8801   000F6C  EFA7  F007         	goto	l7636
  8802   000F70  0A2A               	xorlw	42	; case 102
  8803   000F72  B4D8               	btfsc	status,2,c
  8804   000F74  EFAB  F007         	goto	l7638
  8805   000F78  0A0A               	xorlw	10	; case 108
  8806   000F7A  B4D8               	btfsc	status,2,c
  8807   000F7C  EFA7  F007         	goto	l7636
  8808   000F80  EFAF  F007         	goto	l7640
  8809   000F84                     l7646:
  8810                           
  8811                           ; BSR set to: 0
  8812   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8813   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8814   000F8C                     	if	0	;tblptru may be non-zero
  8815   000F8C                     	endif
  8816   000F8C                     	if	0	;tblptru may be non-zero
  8817   000F8C                     	endif
  8818   000F8C  0008               	tblrd		*
  8819   000F8E  50F5               	movf	tablat,w,c
  8820   000F90  0A66               	xorlw	102
  8821   000F92  A4D8               	btfss	status,2,c
  8822   000F94  EFCE  F007         	goto	u9251
  8823   000F98  EFD0  F007         	goto	u9250
  8824   000F9C                     u9251:
  8825   000F9C  EF37  F008         	goto	l7666
  8826   000FA0                     u9250:
  8827   000FA0  EFFA  F007         	goto	l7654
  8828   000FA4                     l7648:
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8832   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8833   000FA6  6ED9               	movwf	fsr2l,c
  8834   000FA8  6ADA               	clrf	fsr2h,c
  8835   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8836   000FAE  0E04               	movlw	4
  8837   000FB0  26DF               	addwf	indf2,f,c
  8838   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8839   000FB4  6ED9               	movwf	fsr2l,c
  8840   000FB6  6ADA               	clrf	fsr2h,c
  8841   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8842   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8843   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8844   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8845                           
  8846                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8847   000FC8  EF05  F008         	goto	l7656
  8848   000FCC                     l7650:
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8852   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8853   000FCE  6ED9               	movwf	fsr2l,c
  8854   000FD0  6ADA               	clrf	fsr2h,c
  8855   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8856   000FD6  0E04               	movlw	4
  8857   000FD8  26DF               	addwf	indf2,f,c
  8858   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8859   000FDC  6ED9               	movwf	fsr2l,c
  8860   000FDE  6ADA               	clrf	fsr2h,c
  8861   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8862   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8863   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8864   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8865                           
  8866                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8867   000FF0  EF05  F008         	goto	l7656
  8868   000FF4                     l7654:
  8869                           
  8870                           ; BSR set to: 0
  8871   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8872                           
  8873                           ; Switch size 1, requested type "simple"
  8874                           ; Number of cases is 2, Range of values is 76 to 108
  8875                           ; switch strategies available:
  8876                           ; Name         Instructions Cycles
  8877                           ; simple_byte            7     4 (average)
  8878                           ;	Chosen strategy is simple_byte
  8879   000FF6  0A4C               	xorlw	76	; case 76
  8880   000FF8  B4D8               	btfsc	status,2,c
  8881   000FFA  EFE6  F007         	goto	l7650
  8882   000FFE  0A20               	xorlw	32	; case 108
  8883   001000  B4D8               	btfsc	status,2,c
  8884   001002  EFD2  F007         	goto	l7648
  8885   001006  EF05  F008         	goto	l7656
  8886   00100A                     l7656:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8890   00100A  0E01               	movlw	1
  8891   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8892   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8893   001010  0E00               	movlw	0
  8894   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8895   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8896   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8897   001018  6ED9               	movwf	fsr2l,c
  8898   00101A  6ADA               	clrf	fsr2h,c
  8899   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8900   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8901                           
  8902                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8903   001024  EF2B  F008         	goto	l7664
  8904   001028                     l7658:
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8908   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8909   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8910   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8911   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8912   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8913   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8914   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8915   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8916   001048                     	if	0	;tblptru may be non-zero
  8917   001048                     	endif
  8918   001048                     	if	0	;tblptru may be non-zero
  8919   001048                     	endif
  8920   001048  0008               	tblrd		*
  8921   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8922   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8923   001052  EF53  F008         	goto	l1560
  8924   001056                     l7664:
  8925                           
  8926                           ; BSR set to: 0
  8927   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8928   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8929   00105E                     	if	0	;tblptru may be non-zero
  8930   00105E                     	endif
  8931   00105E                     	if	0	;tblptru may be non-zero
  8932   00105E                     	endif
  8933   00105E  0008               	tblrd		*
  8934   001060  50F5               	movf	tablat,w,c
  8935                           
  8936                           ; Switch size 1, requested type "simple"
  8937                           ; Number of cases is 1, Range of values is 102 to 102
  8938                           ; switch strategies available:
  8939                           ; Name         Instructions Cycles
  8940                           ; simple_byte            4     3 (average)
  8941                           ;	Chosen strategy is simple_byte
  8942   001062  0A66               	xorlw	102	; case 102
  8943   001064  B4D8               	btfsc	status,2,c
  8944   001066  EF14  F008         	goto	l7658
  8945   00106A  EF37  F008         	goto	l7666
  8946   00106E                     l7666:
  8947                           
  8948                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8949   00106E  0100               	movlb	0	; () banked
  8950   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8951   001072  6ED9               	movwf	fsr2l,c
  8952   001074  6ADA               	clrf	fsr2h,c
  8953   001076  2ADE               	incf	postinc2,f,c
  8954   001078  0E00               	movlw	0
  8955   00107A  22DD               	addwfc	postdec2,f,c
  8956   00107C  EF53  F008         	goto	l1560
  8957   001080                     l7670:
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8961   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8962   001082  6ED9               	movwf	fsr2l,c
  8963   001084  6ADA               	clrf	fsr2h,c
  8964   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8965   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8966   00108E                     	if	0	;tblptru may be non-zero
  8967   00108E                     	endif
  8968   00108E                     	if	0	;tblptru may be non-zero
  8969   00108E                     	endif
  8970   00108E  0008               	tblrd		*
  8971   001090  50F5               	movf	tablat,w,c
  8972   001092  6E07               	movwf	fputc@c^0,c
  8973   001094  6A08               	clrf	(fputc@c+1)^0,c
  8974   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8975   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8976   00109E  ECED  F023         	call	_fputc	;wreg free
  8977   0010A2  EF37  F008         	goto	l7666
  8978   0010A6                     l1560:
  8979   0010A6  0012               	return		;funcret
  8980   0010A8                     __end_of_vfpfcnvrt:
  8981                           	callstack 0
  8982                           
  8983 ;; *************** function _utoa *****************
  8984 ;; Defined at:
  8985 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8988 ;;		 -> NULL(0), sprintf@f(12), 
  8989 ;;  d               2   33[COMRAM] unsigned int 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;  i               2   39[COMRAM] int 
  8992 ;;  p               2   37[COMRAM] int 
  8993 ;;  w               2   35[COMRAM] int 
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9003 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;Total ram usage:       10 bytes
  9008 ;; Hardware stack levels used: 1
  9009 ;; Hardware stack levels required when called: 5
  9010 ;; This function calls:
  9011 ;;		___lwdiv
  9012 ;;		___lwmod
  9013 ;;		_pad
  9014 ;; This function is called by:
  9015 ;;		_vfpfcnvrt
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text30
  9020   004610                     __ptext30:
  9021                           	callstack 0
  9022   004610                     _utoa:
  9023                           	callstack 21
  9024   004610                     
  9025                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  9026   004610  BE58               	btfsc	(_prec+1)^0,7,c
  9027   004612  EF0F  F023         	goto	u8970
  9028   004616  EF0D  F023         	goto	u8971
  9029   00461A                     u8971:
  9030   00461A  EF15  F023         	goto	l1517
  9031   00461E                     u8970:
  9032   00461E  0E00               	movlw	0
  9033   004620  6E27               	movwf	(utoa@p+1)^0,c
  9034   004622  0E01               	movlw	1
  9035   004624  6E26               	movwf	utoa@p^0,c
  9036   004626  EF19  F023         	goto	l1519
  9037   00462A                     l1517:
  9038   00462A  C057  F026         	movff	_prec,utoa@p
  9039   00462E  C058  F027         	movff	_prec+1,utoa@p+1
  9040   004632                     l1519:
  9041                           
  9042                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  9043   004632  C055  F024         	movff	_width,utoa@w
  9044   004636  C056  F025         	movff	_width+1,utoa@w+1
  9045   00463A                     
  9046                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  9047   00463A  0E00               	movlw	0
  9048   00463C  6E29               	movwf	(utoa@i+1)^0,c
  9049   00463E  0E4F               	movlw	79
  9050   004640  6E28               	movwf	utoa@i^0,c
  9051   004642                     
  9052                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  9053   004642  0E00               	movlw	0
  9054   004644  0101               	movlb	1	; () banked
  9055   004646  6F76               	movwf	(_dbuf+79)& (0+255),b
  9056                           
  9057                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  9058   004648  EF50  F023         	goto	l7452
  9059   00464C                     l7442:
  9060                           
  9061                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  9062   00464C  0628               	decf	utoa@i^0,f,c
  9063   00464E  A0D8               	btfss	status,0,c
  9064   004650  0629               	decf	(utoa@i+1)^0,f,c
  9065   004652                     
  9066                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  9067   004652  0E27               	movlw	low _dbuf
  9068   004654  2428               	addwf	utoa@i^0,w,c
  9069   004656  6ED9               	movwf	fsr2l,c
  9070   004658  0E01               	movlw	high _dbuf
  9071   00465A  2029               	addwfc	(utoa@i+1)^0,w,c
  9072   00465C  6EDA               	movwf	fsr2h,c
  9073   00465E  C022  F006         	movff	utoa@d,___lwmod@dividend
  9074   004662  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  9075   004666  0E00               	movlw	0
  9076   004668  6E09               	movwf	(___lwmod@divisor+1)^0,c
  9077   00466A  0E0A               	movlw	10
  9078   00466C  6E08               	movwf	___lwmod@divisor^0,c
  9079   00466E  EC06  F027         	call	___lwmod	;wreg free
  9080   004672  5006               	movf	?___lwmod^0,w,c
  9081   004674  0F30               	addlw	48
  9082   004676  6EDF               	movwf	indf2,c
  9083   004678                     
  9084                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  9085   004678  0626               	decf	utoa@p^0,f,c
  9086   00467A  A0D8               	btfss	status,0,c
  9087   00467C  0627               	decf	(utoa@p+1)^0,f,c
  9088   00467E                     
  9089                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  9090   00467E  0624               	decf	utoa@w^0,f,c
  9091   004680  A0D8               	btfss	status,0,c
  9092   004682  0625               	decf	(utoa@w+1)^0,f,c
  9093   004684                     
  9094                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  9095   004684  C022  F006         	movff	utoa@d,___lwdiv@dividend
  9096   004688  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  9097   00468C  0E00               	movlw	0
  9098   00468E  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  9099   004690  0E0A               	movlw	10
  9100   004692  6E08               	movwf	___lwdiv@divisor^0,c
  9101   004694  EC60  F026         	call	___lwdiv	;wreg free
  9102   004698  C006  F022         	movff	?___lwdiv,utoa@d
  9103   00469C  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  9104   0046A0                     l7452:
  9105                           
  9106                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  9107   0046A0  5028               	movf	utoa@i^0,w,c
  9108   0046A2  1029               	iorwf	(utoa@i+1)^0,w,c
  9109   0046A4  B4D8               	btfsc	status,2,c
  9110   0046A6  EF57  F023         	goto	u8981
  9111   0046AA  EF59  F023         	goto	u8980
  9112   0046AE                     u8981:
  9113   0046AE  EF6F  F023         	goto	l7458
  9114   0046B2                     u8980:
  9115   0046B2  5022               	movf	utoa@d^0,w,c
  9116   0046B4  1023               	iorwf	(utoa@d+1)^0,w,c
  9117   0046B6  A4D8               	btfss	status,2,c
  9118   0046B8  EF60  F023         	goto	u8991
  9119   0046BC  EF62  F023         	goto	u8990
  9120   0046C0                     u8991:
  9121   0046C0  EF26  F023         	goto	l7442
  9122   0046C4                     u8990:
  9123   0046C4  BE27               	btfsc	(utoa@p+1)^0,7,c
  9124   0046C6  EF6F  F023         	goto	u9000
  9125   0046CA  5027               	movf	(utoa@p+1)^0,w,c
  9126   0046CC  E106               	bnz	u9001
  9127   0046CE  0426               	decf	utoa@p^0,w,c
  9128   0046D0  B0D8               	btfsc	status,0,c
  9129   0046D2  EF6D  F023         	goto	u9001
  9130   0046D6  EF6F  F023         	goto	u9000
  9131   0046DA                     u9001:
  9132   0046DA  EF26  F023         	goto	l7442
  9133   0046DE                     u9000:
  9134   0046DE                     l7458:
  9135                           
  9136                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  9137   0046DE  C020  F017         	movff	utoa@fp,pad@fp
  9138   0046E2  C021  F018         	movff	utoa@fp+1,pad@fp+1
  9139   0046E6  0E27               	movlw	low _dbuf
  9140   0046E8  2428               	addwf	utoa@i^0,w,c
  9141   0046EA  6E19               	movwf	pad@buf^0,c
  9142   0046EC  0E01               	movlw	high _dbuf
  9143   0046EE  2029               	addwfc	(utoa@i+1)^0,w,c
  9144   0046F0  6E1A               	movwf	(pad@buf+1)^0,c
  9145   0046F2  C024  F01B         	movff	utoa@w,pad@p
  9146   0046F6  C025  F01C         	movff	utoa@w+1,pad@p+1
  9147   0046FA  EC11  F026         	call	_pad	;wreg free
  9148   0046FE  0012               	return		;funcret
  9149   004700                     __end_of_utoa:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function ___lwmod *****************
  9153 ;; Defined at:
  9154 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  dividend        2    5[COMRAM] unsigned int 
  9157 ;;  divisor         2    7[COMRAM] unsigned int 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  counter         1    9[COMRAM] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2    5[COMRAM] unsigned int 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9173 ;;Total ram usage:        5 bytes
  9174 ;; Hardware stack levels used: 1
  9175 ;; Hardware stack levels required when called: 1
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_utoa
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text31
  9184   004E0C                     __ptext31:
  9185                           	callstack 0
  9186   004E0C                     ___lwmod:
  9187                           	callstack 24
  9188   004E0C  5008               	movf	___lwmod@divisor^0,w,c
  9189   004E0E  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  9190   004E10  B4D8               	btfsc	status,2,c
  9191   004E12  EF0D  F027         	goto	u8171
  9192   004E16  EF0F  F027         	goto	u8170
  9193   004E1A                     u8171:
  9194   004E1A  EF33  F027         	goto	l1211
  9195   004E1E                     u8170:
  9196   004E1E  0E01               	movlw	1
  9197   004E20  6E0A               	movwf	___lwmod@counter^0,c
  9198   004E22  EF17  F027         	goto	l7026
  9199   004E26                     l7024:
  9200   004E26  90D8               	bcf	status,0,c
  9201   004E28  3608               	rlcf	___lwmod@divisor^0,f,c
  9202   004E2A  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  9203   004E2C  2A0A               	incf	___lwmod@counter^0,f,c
  9204   004E2E                     l7026:
  9205   004E2E  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  9206   004E30  EF1C  F027         	goto	u8181
  9207   004E34  EF1E  F027         	goto	u8180
  9208   004E38                     u8181:
  9209   004E38  EF13  F027         	goto	l7024
  9210   004E3C                     u8180:
  9211   004E3C                     l7028:
  9212   004E3C  5008               	movf	___lwmod@divisor^0,w,c
  9213   004E3E  5C06               	subwf	___lwmod@dividend^0,w,c
  9214   004E40  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9215   004E42  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  9216   004E44  A0D8               	btfss	status,0,c
  9217   004E46  EF27  F027         	goto	u8191
  9218   004E4A  EF29  F027         	goto	u8190
  9219   004E4E                     u8191:
  9220   004E4E  EF2D  F027         	goto	l7032
  9221   004E52                     u8190:
  9222   004E52  5008               	movf	___lwmod@divisor^0,w,c
  9223   004E54  5E06               	subwf	___lwmod@dividend^0,f,c
  9224   004E56  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9225   004E58  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  9226   004E5A                     l7032:
  9227   004E5A  90D8               	bcf	status,0,c
  9228   004E5C  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  9229   004E5E  3208               	rrcf	___lwmod@divisor^0,f,c
  9230   004E60  2E0A               	decfsz	___lwmod@counter^0,f,c
  9231   004E62  EF1E  F027         	goto	l7028
  9232   004E66                     l1211:
  9233   004E66  C006  F006         	movff	___lwmod@dividend,?___lwmod
  9234   004E6A  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  9235   004E6E  0012               	return		;funcret
  9236   004E70                     __end_of___lwmod:
  9237                           	callstack 0
  9238                           
  9239 ;; *************** function ___lwdiv *****************
  9240 ;; Defined at:
  9241 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  dividend        2    5[COMRAM] unsigned int 
  9244 ;;  divisor         2    7[COMRAM] unsigned int 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  quotient        2   10[COMRAM] unsigned int 
  9247 ;;  counter         1    9[COMRAM] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  2    5[COMRAM] unsigned int 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9261 ;;Total ram usage:        7 bytes
  9262 ;; Hardware stack levels used: 1
  9263 ;; Hardware stack levels required when called: 1
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_utoa
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text32
  9272   004CC0                     __ptext32:
  9273                           	callstack 0
  9274   004CC0                     ___lwdiv:
  9275                           	callstack 24
  9276   004CC0  0E00               	movlw	0
  9277   004CC2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9278   004CC4  0E00               	movlw	0
  9279   004CC6  6E0B               	movwf	___lwdiv@quotient^0,c
  9280   004CC8  5008               	movf	___lwdiv@divisor^0,w,c
  9281   004CCA  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9282   004CCC  B4D8               	btfsc	status,2,c
  9283   004CCE  EF6B  F026         	goto	u8141
  9284   004CD2  EF6D  F026         	goto	u8140
  9285   004CD6                     u8141:
  9286   004CD6  EF95  F026         	goto	l1201
  9287   004CDA                     u8140:
  9288   004CDA  0E01               	movlw	1
  9289   004CDC  6E0A               	movwf	___lwdiv@counter^0,c
  9290   004CDE  EF75  F026         	goto	l7006
  9291   004CE2                     l7004:
  9292   004CE2  90D8               	bcf	status,0,c
  9293   004CE4  3608               	rlcf	___lwdiv@divisor^0,f,c
  9294   004CE6  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9295   004CE8  2A0A               	incf	___lwdiv@counter^0,f,c
  9296   004CEA                     l7006:
  9297   004CEA  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9298   004CEC  EF7A  F026         	goto	u8151
  9299   004CF0  EF7C  F026         	goto	u8150
  9300   004CF4                     u8151:
  9301   004CF4  EF71  F026         	goto	l7004
  9302   004CF8                     u8150:
  9303   004CF8                     l7008:
  9304   004CF8  90D8               	bcf	status,0,c
  9305   004CFA  360B               	rlcf	___lwdiv@quotient^0,f,c
  9306   004CFC  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9307   004CFE  5008               	movf	___lwdiv@divisor^0,w,c
  9308   004D00  5C06               	subwf	___lwdiv@dividend^0,w,c
  9309   004D02  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9310   004D04  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9311   004D06  A0D8               	btfss	status,0,c
  9312   004D08  EF88  F026         	goto	u8161
  9313   004D0C  EF8A  F026         	goto	u8160
  9314   004D10                     u8161:
  9315   004D10  EF8F  F026         	goto	l7016
  9316   004D14                     u8160:
  9317   004D14  5008               	movf	___lwdiv@divisor^0,w,c
  9318   004D16  5E06               	subwf	___lwdiv@dividend^0,f,c
  9319   004D18  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9320   004D1A  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9321   004D1C  800B               	bsf	___lwdiv@quotient^0,0,c
  9322   004D1E                     l7016:
  9323   004D1E  90D8               	bcf	status,0,c
  9324   004D20  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9325   004D22  3208               	rrcf	___lwdiv@divisor^0,f,c
  9326   004D24  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9327   004D26  EF7C  F026         	goto	l7008
  9328   004D2A                     l1201:
  9329   004D2A  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9330   004D2E  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9331   004D32  0012               	return		;funcret
  9332   004D34                     __end_of___lwdiv:
  9333                           	callstack 0
  9334                           
  9335 ;; *************** function _stoa *****************
  9336 ;; Defined at:
  9337 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9340 ;;		 -> NULL(0), sprintf@f(12), 
  9341 ;;  s               2   17[COMRAM] PTR unsigned char 
  9342 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_31(1), 
  9343 ;;		 -> STR_30(6), STR_29(5), STR_28(4), STR_27(4), 
  9344 ;;		 -> STR_26(4), STR_25(5), STR_24(5), 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;  l               2   27[COMRAM] int 
  9347 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9348 ;;		 -> ?_printf(2), STR_47(7), ?_sprintf(2), runUART@reversed(31), 
  9349 ;;		 -> STR_31(1), STR_30(6), STR_29(5), STR_28(4), 
  9350 ;;		 -> STR_27(4), STR_26(4), STR_25(5), STR_24(5), 
  9351 ;;  w               2   23[COMRAM] int 
  9352 ;;  p               2   21[COMRAM] int 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;Total ram usage:       14 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 3
  9369 ;; This function calls:
  9370 ;;		_fputc
  9371 ;; This function is called by:
  9372 ;;		_vfpfcnvrt
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text33
  9377   003ABC                     __ptext33:
  9378                           	callstack 0
  9379   003ABC                     _stoa:
  9380                           	callstack 23
  9381   003ABC                     
  9382                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9383   003ABC  C012  F01A         	movff	stoa@s,stoa@cp
  9384   003AC0  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9385                           
  9386                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9387   003AC4  501A               	movf	stoa@cp^0,w,c
  9388   003AC6  101B               	iorwf	(stoa@cp+1)^0,w,c
  9389   003AC8  A4D8               	btfss	status,2,c
  9390   003ACA  EF69  F01D         	goto	u8861
  9391   003ACE  EF6B  F01D         	goto	u8860
  9392   003AD2                     u8861:
  9393   003AD2  EF6F  F01D         	goto	l7400
  9394   003AD6                     u8860:
  9395   003AD6                     
  9396                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9397   003AD6  0EBF               	movlw	low STR_47
  9398   003AD8  6E1A               	movwf	stoa@cp^0,c
  9399   003ADA  0EFF               	movlw	high STR_47
  9400   003ADC  6E1B               	movwf	(stoa@cp+1)^0,c
  9401   003ADE                     l7400:
  9402                           
  9403                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9404   003ADE  0E00               	movlw	0
  9405   003AE0  6E1D               	movwf	(stoa@l+1)^0,c
  9406   003AE2  0E00               	movlw	0
  9407   003AE4  6E1C               	movwf	stoa@l^0,c
  9408   003AE6  EF77  F01D         	goto	l7404
  9409   003AEA                     l7402:
  9410   003AEA  4A1C               	infsnz	stoa@l^0,f,c
  9411   003AEC  2A1D               	incf	(stoa@l+1)^0,f,c
  9412   003AEE                     l7404:
  9413   003AEE  501C               	movf	stoa@l^0,w,c
  9414   003AF0  241A               	addwf	stoa@cp^0,w,c
  9415   003AF2  6E14               	movwf	??_stoa^0,c
  9416   003AF4  501D               	movf	(stoa@l+1)^0,w,c
  9417   003AF6  201B               	addwfc	(stoa@cp+1)^0,w,c
  9418   003AF8  6E15               	movwf	(??_stoa+1)^0,c
  9419   003AFA  C014  FFF6         	movff	??_stoa,tblptrl
  9420   003AFE  C015  FFF7         	movff	??_stoa+1,tblptrh
  9421   003B02  0E00               	movlw	low (__mediumconst shr (0+16))
  9422   003B04  6EF8               	movwf	tblptru,c
  9423   003B06  0E0F               	movlw	(high __ramtop+-1)
  9424   003B08  64F7               	cpfsgt	tblptrh,c
  9425   003B0A  D003               	bra	u8877
  9426   003B0C  0008               	tblrd		*
  9427   003B0E  50F5               	movf	tablat,w,c
  9428   003B10  D005               	bra	u8870
  9429   003B12                     u8877:
  9430   003B12  CFF6 FFE1          	movff	tblptrl,fsr1l
  9431   003B16  CFF7 FFE2          	movff	tblptrh,fsr1h
  9432   003B1A  50E7               	movf	indf1,w,c
  9433   003B1C                     u8870:
  9434   003B1C  0900               	iorlw	0
  9435   003B1E  A4D8               	btfss	status,2,c
  9436   003B20  EF94  F01D         	goto	u8881
  9437   003B24  EF96  F01D         	goto	u8880
  9438   003B28                     u8881:
  9439   003B28  EF75  F01D         	goto	l7402
  9440   003B2C                     u8880:
  9441   003B2C                     
  9442                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9443   003B2C  BE58               	btfsc	(_prec+1)^0,7,c
  9444   003B2E  EF9B  F01D         	goto	u8891
  9445   003B32  EF9D  F01D         	goto	u8890
  9446   003B36                     u8891:
  9447   003B36  EFB0  F01D         	goto	l1501
  9448   003B3A                     u8890:
  9449   003B3A  501C               	movf	stoa@l^0,w,c
  9450   003B3C  5C57               	subwf	_prec^0,w,c
  9451   003B3E  5058               	movf	(_prec+1)^0,w,c
  9452   003B40  0A80               	xorlw	128
  9453   003B42  6E14               	movwf	??_stoa^0,c
  9454   003B44  501D               	movf	(stoa@l+1)^0,w,c
  9455   003B46  0A80               	xorlw	128
  9456   003B48  5814               	subwfb	??_stoa^0,w,c
  9457   003B4A  B0D8               	btfsc	status,0,c
  9458   003B4C  EFAA  F01D         	goto	u8901
  9459   003B50  EFAC  F01D         	goto	u8900
  9460   003B54                     u8901:
  9461   003B54  EFB0  F01D         	goto	l1501
  9462   003B58                     u8900:
  9463   003B58                     
  9464                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9465   003B58  C057  F01C         	movff	_prec,stoa@l
  9466   003B5C  C058  F01D         	movff	_prec+1,stoa@l+1
  9467   003B60                     l1501:
  9468                           
  9469                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9470   003B60  C01C  F016         	movff	stoa@l,stoa@p
  9471   003B64  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9472                           
  9473                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9474   003B68  C055  F018         	movff	_width,stoa@w
  9475   003B6C  C056  F019         	movff	_width+1,stoa@w+1
  9476                           
  9477                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9478   003B70  B059               	btfsc	_flags^0,0,c
  9479   003B72  EFBD  F01D         	goto	u8911
  9480   003B76  EFBF  F01D         	goto	u8910
  9481   003B7A                     u8911:
  9482   003B7A  EFFB  F01D         	goto	l7424
  9483   003B7E                     u8910:
  9484   003B7E  EFCD  F01D         	goto	l7418
  9485   003B82                     l7414:
  9486                           
  9487                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9488   003B82  0E00               	movlw	0
  9489   003B84  6E08               	movwf	(fputc@c+1)^0,c
  9490   003B86  0E20               	movlw	32
  9491   003B88  6E07               	movwf	fputc@c^0,c
  9492   003B8A  C010  F009         	movff	stoa@fp,fputc@fp
  9493   003B8E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9494   003B92  ECED  F023         	call	_fputc	;wreg free
  9495   003B96                     
  9496                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9497   003B96  4A1C               	infsnz	stoa@l^0,f,c
  9498   003B98  2A1D               	incf	(stoa@l+1)^0,f,c
  9499   003B9A                     l7418:
  9500                           
  9501                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9502   003B9A  5018               	movf	stoa@w^0,w,c
  9503   003B9C  5C1C               	subwf	stoa@l^0,w,c
  9504   003B9E  501D               	movf	(stoa@l+1)^0,w,c
  9505   003BA0  0A80               	xorlw	128
  9506   003BA2  6E14               	movwf	??_stoa^0,c
  9507   003BA4  5019               	movf	(stoa@w+1)^0,w,c
  9508   003BA6  0A80               	xorlw	128
  9509   003BA8  5814               	subwfb	??_stoa^0,w,c
  9510   003BAA  A0D8               	btfss	status,0,c
  9511   003BAC  EFDA  F01D         	goto	u8921
  9512   003BB0  EFDC  F01D         	goto	u8920
  9513   003BB4                     u8921:
  9514   003BB4  EFC1  F01D         	goto	l7414
  9515   003BB8                     u8920:
  9516   003BB8  EFFB  F01D         	goto	l7424
  9517   003BBC                     l7420:
  9518                           
  9519                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9520   003BBC  C01A  FFF6         	movff	stoa@cp,tblptrl
  9521   003BC0  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9522   003BC4  0E00               	movlw	low (__mediumconst shr (0+16))
  9523   003BC6  6EF8               	movwf	tblptru,c
  9524   003BC8  0E0F               	movlw	(high __ramtop+-1)
  9525   003BCA  64F7               	cpfsgt	tblptrh,c
  9526   003BCC  D003               	bra	u8937
  9527   003BCE  0008               	tblrd		*
  9528   003BD0  50F5               	movf	tablat,w,c
  9529   003BD2  D005               	bra	u8930
  9530   003BD4                     u8937:
  9531   003BD4  CFF6 FFE1          	movff	tblptrl,fsr1l
  9532   003BD8  CFF7 FFE2          	movff	tblptrh,fsr1h
  9533   003BDC  50E7               	movf	indf1,w,c
  9534   003BDE                     u8930:
  9535   003BDE  6E14               	movwf	??_stoa^0,c
  9536   003BE0  5014               	movf	??_stoa^0,w,c
  9537   003BE2  6E07               	movwf	fputc@c^0,c
  9538   003BE4  6A08               	clrf	(fputc@c+1)^0,c
  9539   003BE6  C010  F009         	movff	stoa@fp,fputc@fp
  9540   003BEA  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9541   003BEE  ECED  F023         	call	_fputc	;wreg free
  9542   003BF2                     
  9543                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9544   003BF2  4A1A               	infsnz	stoa@cp^0,f,c
  9545   003BF4  2A1B               	incf	(stoa@cp+1)^0,f,c
  9546   003BF6                     l7424:
  9547                           
  9548                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9549   003BF6  0616               	decf	stoa@p^0,f,c
  9550   003BF8  A0D8               	btfss	status,0,c
  9551   003BFA  0617               	decf	(stoa@p+1)^0,f,c
  9552   003BFC  2816               	incf	stoa@p^0,w,c
  9553   003BFE  E106               	bnz	u8941
  9554   003C00  2817               	incf	(stoa@p+1)^0,w,c
  9555   003C02  A4D8               	btfss	status,2,c
  9556   003C04  EF06  F01E         	goto	u8941
  9557   003C08  EF08  F01E         	goto	u8940
  9558   003C0C                     u8941:
  9559   003C0C  EFDE  F01D         	goto	l7420
  9560   003C10                     u8940:
  9561   003C10                     
  9562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9563   003C10  A059               	btfss	_flags^0,0,c
  9564   003C12  EF0D  F01E         	goto	u8951
  9565   003C16  EF0F  F01E         	goto	u8950
  9566   003C1A                     u8951:
  9567   003C1A  EF2C  F01E         	goto	l1513
  9568   003C1E                     u8950:
  9569   003C1E  EF1D  F01E         	goto	l7432
  9570   003C22                     l7428:
  9571                           
  9572                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9573   003C22  0E00               	movlw	0
  9574   003C24  6E08               	movwf	(fputc@c+1)^0,c
  9575   003C26  0E20               	movlw	32
  9576   003C28  6E07               	movwf	fputc@c^0,c
  9577   003C2A  C010  F009         	movff	stoa@fp,fputc@fp
  9578   003C2E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9579   003C32  ECED  F023         	call	_fputc	;wreg free
  9580   003C36                     
  9581                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9582   003C36  4A1C               	infsnz	stoa@l^0,f,c
  9583   003C38  2A1D               	incf	(stoa@l+1)^0,f,c
  9584   003C3A                     l7432:
  9585                           
  9586                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9587   003C3A  5018               	movf	stoa@w^0,w,c
  9588   003C3C  5C1C               	subwf	stoa@l^0,w,c
  9589   003C3E  501D               	movf	(stoa@l+1)^0,w,c
  9590   003C40  0A80               	xorlw	128
  9591   003C42  6E14               	movwf	??_stoa^0,c
  9592   003C44  5019               	movf	(stoa@w+1)^0,w,c
  9593   003C46  0A80               	xorlw	128
  9594   003C48  5814               	subwfb	??_stoa^0,w,c
  9595   003C4A  A0D8               	btfss	status,0,c
  9596   003C4C  EF2A  F01E         	goto	u8961
  9597   003C50  EF2C  F01E         	goto	u8960
  9598   003C54                     u8961:
  9599   003C54  EF11  F01E         	goto	l7428
  9600   003C58                     u8960:
  9601   003C58                     l1513:
  9602   003C58  0012               	return		;funcret
  9603   003C5A                     __end_of_stoa:
  9604                           	callstack 0
  9605                           
  9606 ;; *************** function _read_prec_or_width *****************
  9607 ;; Defined at:
  9608 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9611 ;;		 -> vfprintf@cfmt(2), 
  9612 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9613 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  c               1   13[COMRAM] unsigned char 
  9616 ;;  n               2   14[COMRAM] int 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  2   11[COMRAM] int 
  9619 ;; Registers used:
  9620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;Total ram usage:        5 bytes
  9631 ;; Hardware stack levels used: 1
  9632 ;; Hardware stack levels required when called: 2
  9633 ;; This function calls:
  9634 ;;		___wmul
  9635 ;; This function is called by:
  9636 ;;		_vfpfcnvrt
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text34
  9641   004ACA                     __ptext34:
  9642                           	callstack 0
  9643   004ACA                     _read_prec_or_width:
  9644                           	callstack 24
  9645   004ACA                     
  9646                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9647   004ACA  0E00               	movlw	0
  9648   004ACC  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9649   004ACE  0E00               	movlw	0
  9650   004AD0  6E0F               	movwf	read_prec_or_width@n^0,c
  9651   004AD2                     
  9652                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9653   004AD2  500C               	movf	read_prec_or_width@fmt^0,w,c
  9654   004AD4  6ED9               	movwf	fsr2l,c
  9655   004AD6  6ADA               	clrf	fsr2h,c
  9656   004AD8  CFDE FFF6          	movff	postinc2,tblptrl
  9657   004ADC  CFDD FFF7          	movff	postdec2,tblptrh
  9658   004AE0                     	if	0	;tblptru may be non-zero
  9659   004AE0                     	endif
  9660   004AE0                     	if	0	;tblptru may be non-zero
  9661   004AE0                     	endif
  9662   004AE0  0008               	tblrd		*
  9663   004AE2  50F5               	movf	tablat,w,c
  9664   004AE4  0A2A               	xorlw	42
  9665   004AE6  A4D8               	btfss	status,2,c
  9666   004AE8  EF78  F025         	goto	u9011
  9667   004AEC  EF7A  F025         	goto	u9010
  9668   004AF0                     u9011:
  9669   004AF0  EFA4  F025         	goto	l7474
  9670   004AF4                     u9010:
  9671   004AF4                     
  9672                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9673   004AF4  500C               	movf	read_prec_or_width@fmt^0,w,c
  9674   004AF6  6ED9               	movwf	fsr2l,c
  9675   004AF8  6ADA               	clrf	fsr2h,c
  9676   004AFA  2ADE               	incf	postinc2,f,c
  9677   004AFC  0E00               	movlw	0
  9678   004AFE  22DD               	addwfc	postdec2,f,c
  9679   004B00                     
  9680                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9681   004B00  500D               	movf	read_prec_or_width@ap^0,w,c
  9682   004B02  6ED9               	movwf	fsr2l,c
  9683   004B04  6ADA               	clrf	fsr2h,c
  9684   004B06  0E02               	movlw	2
  9685   004B08  26DF               	addwf	indf2,f,c
  9686   004B0A  5CDF               	subwf	indf2,w,c
  9687   004B0C  6ED9               	movwf	fsr2l,c
  9688   004B0E  6ADA               	clrf	fsr2h,c
  9689   004B10  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9690   004B14  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9691                           
  9692                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9693   004B18  EFB7  F025         	goto	l1529
  9694   004B1C                     l7470:
  9695                           
  9696                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9697   004B1C  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9698   004B20  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9699   004B24  0E00               	movlw	0
  9700   004B26  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9701   004B28  0E0A               	movlw	10
  9702   004B2A  6E08               	movwf	___wmul@multiplicand^0,c
  9703   004B2C  EC47  F029         	call	___wmul	;wreg free
  9704   004B30  500E               	movf	read_prec_or_width@c^0,w,c
  9705   004B32  2406               	addwf	?___wmul^0,w,c
  9706   004B34  6E0F               	movwf	read_prec_or_width@n^0,c
  9707   004B36  0E00               	movlw	0
  9708   004B38  2007               	addwfc	(?___wmul+1)^0,w,c
  9709   004B3A  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9710   004B3C                     
  9711                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9712   004B3C  500C               	movf	read_prec_or_width@fmt^0,w,c
  9713   004B3E  6ED9               	movwf	fsr2l,c
  9714   004B40  6ADA               	clrf	fsr2h,c
  9715   004B42  2ADE               	incf	postinc2,f,c
  9716   004B44  0E00               	movlw	0
  9717   004B46  22DD               	addwfc	postdec2,f,c
  9718   004B48                     l7474:
  9719                           
  9720                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9721   004B48  500C               	movf	read_prec_or_width@fmt^0,w,c
  9722   004B4A  6ED9               	movwf	fsr2l,c
  9723   004B4C  6ADA               	clrf	fsr2h,c
  9724   004B4E  CFDE FFF6          	movff	postinc2,tblptrl
  9725   004B52  CFDD FFF7          	movff	postdec2,tblptrh
  9726   004B56                     	if	0	;tblptru may be non-zero
  9727   004B56                     	endif
  9728   004B56                     	if	0	;tblptru may be non-zero
  9729   004B56                     	endif
  9730   004B56  0008               	tblrd		*
  9731   004B58  50F5               	movf	tablat,w,c
  9732   004B5A  0FD0               	addlw	208
  9733   004B5C  6E0E               	movwf	read_prec_or_width@c^0,c
  9734   004B5E  0E09               	movlw	9
  9735   004B60  640E               	cpfsgt	read_prec_or_width@c^0,c
  9736   004B62  EFB5  F025         	goto	u9021
  9737   004B66  EFB7  F025         	goto	u9020
  9738   004B6A                     u9021:
  9739   004B6A  EF8E  F025         	goto	l7470
  9740   004B6E                     u9020:
  9741   004B6E                     l1529:
  9742                           
  9743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9744   004B6E  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9745   004B72  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9746   004B76  0012               	return		;funcret
  9747   004B78                     __end_of_read_prec_or_width:
  9748                           	callstack 0
  9749                           
  9750 ;; *************** function ___wmul *****************
  9751 ;; Defined at:
  9752 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  multiplier      2    5[COMRAM] unsigned int 
  9755 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  product         2    9[COMRAM] unsigned int 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  2    5[COMRAM] unsigned int 
  9760 ;; Registers used:
  9761 ;;		wreg, status,2, status,0, prodl, prodh
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;Total ram usage:        6 bytes
  9772 ;; Hardware stack levels used: 1
  9773 ;; Hardware stack levels required when called: 1
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_read_prec_or_width
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780                           
  9781                           	psect	text35
  9782   00528E                     __ptext35:
  9783                           	callstack 0
  9784   00528E                     ___wmul:
  9785                           	callstack 24
  9786   00528E  5006               	movf	___wmul@multiplier^0,w,c
  9787   005290  0208               	mulwf	___wmul@multiplicand^0,c
  9788   005292  CFF3 F00A          	movff	prodl,___wmul@product
  9789   005296  CFF4 F00B          	movff	prodh,___wmul@product+1
  9790   00529A  5006               	movf	___wmul@multiplier^0,w,c
  9791   00529C  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9792   00529E  50F3               	movf	243,w,c
  9793   0052A0  260B               	addwf	(___wmul@product+1)^0,f,c
  9794   0052A2  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9795   0052A4  0208               	mulwf	___wmul@multiplicand^0,c
  9796   0052A6  50F3               	movf	243,w,c
  9797   0052A8  260B               	addwf	(___wmul@product+1)^0,f,c
  9798   0052AA  C00A  F006         	movff	___wmul@product,?___wmul
  9799   0052AE  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9800   0052B2  0012               	return		;funcret
  9801   0052B4                     __end_of___wmul:
  9802                           	callstack 0
  9803                           
  9804 ;; *************** function _efgtoa *****************
  9805 ;; Defined at:
  9806 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9809 ;;		 -> NULL(0), sprintf@f(12), 
  9810 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9811 ;;  c               1   42[BANK0 ] unsigned char 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  u               4   85[BANK0 ] struct flui
  9814 ;;  g               4   79[BANK0 ] struct flui
  9815 ;;  l               4   74[BANK0 ] struct flui
  9816 ;;  h               4   70[BANK0 ] struct flui
  9817 ;;  ou              4   64[BANK0 ] struct flui
  9818 ;;  n               2   83[BANK0 ] int 
  9819 ;;  i               2   68[BANK0 ] int 
  9820 ;;  w               2   62[BANK0 ] int 
  9821 ;;  e               2   60[BANK0 ] int 
  9822 ;;  m               2   58[BANK0 ] int 
  9823 ;;  d               2   56[BANK0 ] int 
  9824 ;;  t               2   49[BANK0 ] int 
  9825 ;;  p               2   47[BANK0 ] int 
  9826 ;;  ne              2   45[BANK0 ] int 
  9827 ;;  sign            1   78[BANK0 ] unsigned char 
  9828 ;;  nmode           1   55[BANK0 ] unsigned char 
  9829 ;;  mode            1   54[BANK0 ] unsigned char 
  9830 ;;  pp              1   53[BANK0 ] unsigned char 
  9831 ;;  esign           1    0        unsigned char 
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9841 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;Total ram usage:       53 bytes
  9846 ;; Hardware stack levels used: 1
  9847 ;; Hardware stack levels required when called: 5
  9848 ;; This function calls:
  9849 ;;		___fladd
  9850 ;;		___fldiv
  9851 ;;		___fleq
  9852 ;;		___flge
  9853 ;;		___flmul
  9854 ;;		___flneg
  9855 ;;		___flsub
  9856 ;;		___fltol
  9857 ;;		___fpclassifyf
  9858 ;;		_floorf
  9859 ;;		_labs
  9860 ;;		_memcpy
  9861 ;;		_pad
  9862 ;;		_strcpy
  9863 ;; This function is called by:
  9864 ;;		_vfpfcnvrt
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text36
  9869   000152                     __ptext36:
  9870                           	callstack 0
  9871   000152                     _efgtoa:
  9872                           	callstack 21
  9873   000152                     
  9874                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9875   000152  0E00               	movlw	0
  9876   000154  0100               	movlb	0	; () banked
  9877   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9878   000158                     
  9879                           ; BSR set to: 0
  9880                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9881   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9882   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9883   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9884   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9885   000168                     
  9886                           ; BSR set to: 0
  9887                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9888   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9889   00016A  EFBB  F000         	goto	u8540
  9890   00016E  EFB9  F000         	goto	u8541
  9891   000172                     u8541:
  9892   000172  EFCF  F000         	goto	l7184
  9893   000176                     u8540:
  9894   000176                     
  9895                           ; BSR set to: 0
  9896                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9897   000176  0E01               	movlw	1
  9898   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9899   00017A                     
  9900                           ; BSR set to: 0
  9901                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9902   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9903   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9904   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9905   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9906   00018A  EC90  F028         	call	___flneg	;wreg free
  9907   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9908   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9909   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9910   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9911   00019E                     l7184:
  9912                           
  9913                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9914   00019E  0E00               	movlw	0
  9915   0001A0  0100               	movlb	0	; () banked
  9916   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9917   0001A4  0E00               	movlw	0
  9918   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9919   0001A8                     
  9920                           ; BSR set to: 0
  9921                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9922   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9923   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9924   0001B0                     
  9925                           ; BSR set to: 0
  9926                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9927   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9928   0001B2  B4D8               	btfsc	status,2,c
  9929   0001B4  EFDE  F000         	goto	u8551
  9930   0001B8  EFE0  F000         	goto	u8550
  9931   0001BC                     u8551:
  9932   0001BC  EFF4  F000         	goto	l7198
  9933   0001C0                     u8550:
  9934   0001C0                     
  9935                           ; BSR set to: 0
  9936                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9937   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9938   0001C2  A4D8               	btfss	status,2,c
  9939   0001C4  EFE6  F000         	goto	u8561
  9940   0001C8  EFE8  F000         	goto	u8560
  9941   0001CC                     u8561:
  9942   0001CC  EFEE  F000         	goto	l7194
  9943   0001D0                     u8560:
  9944   0001D0                     
  9945                           ; BSR set to: 0
  9946   0001D0  0E00               	movlw	0
  9947   0001D2  6F94               	movwf	(_efgtoa$4075+1)& (0+255),b
  9948   0001D4  0E2B               	movlw	43
  9949   0001D6  6F93               	movwf	_efgtoa$4075& (0+255),b
  9950   0001D8  EFF2  F000         	goto	l7196
  9951   0001DC                     l7194:
  9952                           
  9953                           ; BSR set to: 0
  9954   0001DC  0E00               	movlw	0
  9955   0001DE  6F94               	movwf	(_efgtoa$4075+1)& (0+255),b
  9956   0001E0  0E2D               	movlw	45
  9957   0001E2  6F93               	movwf	_efgtoa$4075& (0+255),b
  9958   0001E4                     l7196:
  9959                           
  9960                           ; BSR set to: 0
  9961   0001E4  C093  F0AE         	movff	_efgtoa$4075,efgtoa@sign
  9962   0001E8                     l7198:
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9966   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9967   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9968   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9969   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9970   0001F8  EC89  F022         	call	___fpclassifyf	;wreg free
  9971   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9972   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9973   000200  A4D8               	btfss	status,2,c
  9974   000202  EF05  F001         	goto	u8571
  9975   000206  EF07  F001         	goto	u8570
  9976   00020A                     u8571:
  9977   00020A  EF3A  F001         	goto	l7216
  9978   00020E                     u8570:
  9979   00020E                     
  9980                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9981   00020E  0100               	movlb	0	; () banked
  9982   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9983   000212  B4D8               	btfsc	status,2,c
  9984   000214  EF0E  F001         	goto	u8581
  9985   000218  EF10  F001         	goto	u8580
  9986   00021C                     u8581:
  9987   00021C  EF19  F001         	goto	l7208
  9988   000220                     u8580:
  9989   000220                     
  9990                           ; BSR set to: 0
  9991                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9992   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9993   000224                     
  9994                           ; BSR set to: 0
  9995                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9996   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9997   000226  A0D8               	btfss	status,0,c
  9998   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9999   00022A                     
 10000                           ; BSR set to: 0
 10001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 10002   00022A  0E00               	movlw	0
 10003   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10004   00022E  0E01               	movlw	1
 10005   000230  6FB3               	movwf	efgtoa@n& (0+255),b
 10006   000232                     l7208:
 10007                           
 10008                           ; BSR set to: 0
 10009                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
 10010   000232  0E27               	movlw	low _dbuf
 10011   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
 10012   000236  6E06               	movwf	strcpy@dest^0,c
 10013   000238  0E01               	movlw	high _dbuf
 10014   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10015   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
 10016   00023E  0EEB               	movlw	low STR_41
 10017   000240  6E08               	movwf	strcpy@src^0,c
 10018   000242  0EFF               	movlw	high STR_41
 10019   000244  6E09               	movwf	(strcpy@src+1)^0,c
 10020   000246  ECAD  F028         	call	_strcpy	;wreg free
 10021   00024A                     l7210:
 10022                           
 10023                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10024   00024A  0100               	movlb	0	; () banked
 10025   00024C  0EFD               	movlw	253
 10026   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
 10027   000250  0EFF               	movlw	255
 10028   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
 10029   000254                     
 10030                           ; BSR set to: 0
 10031                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
 10032   000254  C084  F017         	movff	efgtoa@fp,pad@fp
 10033   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10034   00025C  0E27               	movlw	low _dbuf
 10035   00025E  6E19               	movwf	pad@buf^0,c
 10036   000260  0E01               	movlw	high _dbuf
 10037   000262  6E1A               	movwf	(pad@buf+1)^0,c
 10038   000264  C09E  F01B         	movff	efgtoa@w,pad@p
 10039   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10040   00026C  EC11  F026         	call	_pad	;wreg free
 10041   000270  EFA5  F005         	goto	l1452
 10042   000274                     l7216:
 10043                           
 10044                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
 10045   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
 10046   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10047   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10048   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10049   000284  EC89  F022         	call	___fpclassifyf	;wreg free
 10050   000288  5006               	movf	?___fpclassifyf^0,w,c
 10051   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
 10052   00028C  A4D8               	btfss	status,2,c
 10053   00028E  EF4B  F001         	goto	u8591
 10054   000292  EF4D  F001         	goto	u8590
 10055   000296                     u8591:
 10056   000296  EF6D  F001         	goto	l7234
 10057   00029A                     u8590:
 10058   00029A                     
 10059                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
 10060   00029A  0100               	movlb	0	; () banked
 10061   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
 10062   00029E  B4D8               	btfsc	status,2,c
 10063   0002A0  EF54  F001         	goto	u8601
 10064   0002A4  EF56  F001         	goto	u8600
 10065   0002A8                     u8601:
 10066   0002A8  EF5F  F001         	goto	l7226
 10067   0002AC                     u8600:
 10068   0002AC                     
 10069                           ; BSR set to: 0
 10070                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
 10071   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
 10072   0002B0                     
 10073                           ; BSR set to: 0
 10074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
 10075   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
 10076   0002B2  A0D8               	btfss	status,0,c
 10077   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10078   0002B6                     
 10079                           ; BSR set to: 0
 10080                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 10081   0002B6  0E00               	movlw	0
 10082   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10083   0002BA  0E01               	movlw	1
 10084   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
 10085   0002BE                     l7226:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
 10089   0002BE  0E27               	movlw	low _dbuf
 10090   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
 10091   0002C2  6E06               	movwf	strcpy@dest^0,c
 10092   0002C4  0E01               	movlw	high _dbuf
 10093   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10094   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
 10095   0002CA  0EEF               	movlw	low STR_44
 10096   0002CC  6E08               	movwf	strcpy@src^0,c
 10097   0002CE  0EFF               	movlw	high STR_44
 10098   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
 10099   0002D2  ECAD  F028         	call	_strcpy	;wreg free
 10100   0002D6  EF25  F001         	goto	l7210
 10101   0002DA                     l7234:
 10102                           
 10103                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
 10104   0002DA  0E00               	movlw	0
 10105   0002DC  0100               	movlb	0	; () banked
 10106   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
 10107   0002E0  0E00               	movlw	0
 10108   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10109   0002E4  0E80               	movlw	128
 10110   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10111   0002E8  0E3F               	movlw	63
 10112   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10113                           
 10114                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10115   0002EC  0E00               	movlw	0
 10116   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10117   0002F0  0E00               	movlw	0
 10118   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
 10119   0002F4                     
 10120                           ; BSR set to: 0
 10121                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
 10122   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
 10123   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
 10124   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
 10125   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
 10126   000304  0E00               	movlw	0
 10127   000306  6E0A               	movwf	___fleq@ff2^0,c
 10128   000308  0E00               	movlw	0
 10129   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
 10130   00030C  0E00               	movlw	0
 10131   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
 10132   000310  0E00               	movlw	0
 10133   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
 10134   000314  ECBC  F025         	call	___fleq	;wreg free
 10135   000318  B0D8               	btfsc	status,0,c
 10136   00031A  EF91  F001         	goto	u8611
 10137   00031E  EF93  F001         	goto	u8610
 10138   000322                     u8611:
 10139   000322  EF72  F002         	goto	l1455
 10140   000326                     u8610:
 10141   000326  EFA0  F001         	goto	l7242
 10142   00032A                     l1457:
 10143                           
 10144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10145   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10146   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10147   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10148   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10149   00033A                     
 10150                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10151   00033A  0100               	movlb	0	; () banked
 10152   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10153   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10154   000340                     l7242:
 10155                           
 10156                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10157   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10158   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10159   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10160   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10161   000350  0E00               	movlw	0
 10162   000352  6E18               	movwf	___flmul@a^0,c
 10163   000354  0E00               	movlw	0
 10164   000356  6E19               	movwf	(___flmul@a+1)^0,c
 10165   000358  0E20               	movlw	32
 10166   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
 10167   00035C  0E41               	movlw	65
 10168   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
 10169   000360  EC3A  F00D         	call	___flmul	;wreg free
 10170   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10171   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10172   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10173   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10174   000374  0100               	movlb	0	; () banked
 10175   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
 10176   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10177   00037A  6E06               	movwf	labs@a^0,c
 10178   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
 10179   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10180   000380  6E07               	movwf	(labs@a+1)^0,c
 10181   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
 10182   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10183   000386  6E08               	movwf	(labs@a+2)^0,c
 10184   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
 10185   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10186   00038C  6E09               	movwf	(labs@a+3)^0,c
 10187   00038E  EC66  F027         	call	_labs	;wreg free
 10188   000392  BE09               	btfsc	(?_labs+3)^0,7,c
 10189   000394  EFD7  F001         	goto	u8621
 10190   000398  5009               	movf	(?_labs+3)^0,w,c
 10191   00039A  1008               	iorwf	(?_labs+2)^0,w,c
 10192   00039C  1007               	iorwf	(?_labs+1)^0,w,c
 10193   00039E  E109               	bnz	u8620
 10194   0003A0  0E02               	movlw	2
 10195   0003A2  5C06               	subwf	?_labs^0,w,c
 10196   0003A4  A0D8               	btfss	status,0,c
 10197   0003A6  EFD7  F001         	goto	u8621
 10198   0003AA  EFD9  F001         	goto	u8620
 10199   0003AE                     u8621:
 10200   0003AE  EF95  F001         	goto	l1457
 10201   0003B2                     u8620:
 10202   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
 10203   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
 10204   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
 10205   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
 10206   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
 10207   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
 10208   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
 10209   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
 10210   0003D2  EC07  F022         	call	___flge	;wreg free
 10211   0003D6  A0D8               	btfss	status,0,c
 10212   0003D8  EFF0  F001         	goto	u8631
 10213   0003DC  EFF2  F001         	goto	u8630
 10214   0003E0                     u8631:
 10215   0003E0  EF95  F001         	goto	l1457
 10216   0003E4                     u8630:
 10217   0003E4                     
 10218                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
 10219   0003E4  0100               	movlb	0	; () banked
 10220   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
 10221   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10222   0003EA  6E06               	movwf	labs@a^0,c
 10223   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10224   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10225   0003F0  6E07               	movwf	(labs@a+1)^0,c
 10226   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10227   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10228   0003F6  6E08               	movwf	(labs@a+2)^0,c
 10229   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10230   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10231   0003FC  6E09               	movwf	(labs@a+3)^0,c
 10232   0003FE  EC66  F027         	call	_labs	;wreg free
 10233   000402  BE09               	btfsc	(?_labs+3)^0,7,c
 10234   000404  EF11  F002         	goto	u8640
 10235   000408  5009               	movf	(?_labs+3)^0,w,c
 10236   00040A  1008               	iorwf	(?_labs+2)^0,w,c
 10237   00040C  1007               	iorwf	(?_labs+1)^0,w,c
 10238   00040E  E107               	bnz	u8641
 10239   000410  0E02               	movlw	2
 10240   000412  5C06               	subwf	?_labs^0,w,c
 10241   000414  B0D8               	btfsc	status,0,c
 10242   000416  EF0F  F002         	goto	u8641
 10243   00041A  EF11  F002         	goto	u8640
 10244   00041E                     u8641:
 10245   00041E  EF59  F002         	goto	l7260
 10246   000422                     u8640:
 10247   000422                     l7250:
 10248                           
 10249                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10250   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
 10251   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
 10252   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
 10253   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
 10254                           
 10255                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
 10256   000432  EF72  F002         	goto	l1455
 10257   000436                     l7252:
 10258                           
 10259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
 10260   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10261   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10262   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10263   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10264   000446  0E00               	movlw	0
 10265   000448  6E31               	movwf	___fldiv@a^0,c
 10266   00044A  0E00               	movlw	0
 10267   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
 10268   00044E  0E20               	movlw	32
 10269   000450  6E33               	movwf	(___fldiv@a+2)^0,c
 10270   000452  0E41               	movlw	65
 10271   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10272   000456  EC17  F015         	call	___fldiv	;wreg free
 10273   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10274   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10275   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10276   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10277   00046A                     
 10278                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10279   00046A  0100               	movlb	0	; () banked
 10280   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10281   00046E  A0D8               	btfss	status,0,c
 10282   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10283   000472                     
 10284                           ; BSR set to: 0
 10285                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10286   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10287   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10288   000476  6E06               	movwf	labs@a^0,c
 10289   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10290   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10291   00047C  6E07               	movwf	(labs@a+1)^0,c
 10292   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10293   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10294   000482  6E08               	movwf	(labs@a+2)^0,c
 10295   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10296   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10297   000488  6E09               	movwf	(labs@a+3)^0,c
 10298   00048A  EC66  F027         	call	_labs	;wreg free
 10299   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10300   000490  EF57  F002         	goto	u8650
 10301   000494  5009               	movf	(?_labs+3)^0,w,c
 10302   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10303   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10304   00049A  E107               	bnz	u8651
 10305   00049C  0E02               	movlw	2
 10306   00049E  5C06               	subwf	?_labs^0,w,c
 10307   0004A0  B0D8               	btfsc	status,0,c
 10308   0004A2  EF55  F002         	goto	u8651
 10309   0004A6  EF57  F002         	goto	u8650
 10310   0004AA                     u8651:
 10311   0004AA  EF59  F002         	goto	l7260
 10312   0004AE                     u8650:
 10313   0004AE  EF11  F002         	goto	l7250
 10314   0004B2                     l7260:
 10315                           
 10316                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10317   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10318   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10319   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10320   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10321   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10322   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10323   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10324   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10325   0004D2  EC07  F022         	call	___flge	;wreg free
 10326   0004D6  A0D8               	btfss	status,0,c
 10327   0004D8  EF70  F002         	goto	u8661
 10328   0004DC  EF72  F002         	goto	u8660
 10329   0004E0                     u8661:
 10330   0004E0  EF1B  F002         	goto	l7252
 10331   0004E4                     u8660:
 10332   0004E4                     l1455:
 10333                           
 10334                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10335   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10336                           
 10337                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10338   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10339   0004EC                     
 10340                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10341   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10342   0004EE  EF7B  F002         	goto	u8671
 10343   0004F2  EF7D  F002         	goto	u8670
 10344   0004F6                     u8671:
 10345   0004F6  EF83  F002         	goto	l7266
 10346   0004FA                     u8670:
 10347   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10348   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10349   000502  EF88  F002         	goto	l7268
 10350   000506                     l7266:
 10351   000506  0E00               	movlw	0
 10352   000508  0100               	movlb	0	; () banked
 10353   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10354   00050C  0E06               	movlw	6
 10355   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10356   000510                     l7268:
 10357                           
 10358                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10359   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10360   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10361   000518                     
 10362                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10363   000518  0100               	movlb	0	; () banked
 10364   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10365   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10366   00051E                     
 10367                           ; BSR set to: 0
 10368                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10369   00051E  0E66               	movlw	102
 10370   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10371   000522  A4D8               	btfss	status,2,c
 10372   000524  EF96  F002         	goto	u8681
 10373   000528  EF98  F002         	goto	u8680
 10374   00052C                     u8681:
 10375   00052C  EFB8  F002         	goto	l7282
 10376   000530                     u8680:
 10377   000530                     
 10378                           ; BSR set to: 0
 10379                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10380   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10381   000532  EF9F  F002         	goto	u8690
 10382   000536  EF9D  F002         	goto	u8691
 10383   00053A                     u8691:
 10384   00053A  EFAB  F002         	goto	l7278
 10385   00053E                     u8690:
 10386   00053E                     
 10387                           ; BSR set to: 0
 10388                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10389   00053E  0E00               	movlw	0
 10390   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10391   000542  0E00               	movlw	0
 10392   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10393   000546  0E80               	movlw	128
 10394   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10395   00054A  0E3F               	movlw	63
 10396   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10397                           
 10398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10399   00054E  0E00               	movlw	0
 10400   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10401   000552  0E00               	movlw	0
 10402   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10403   000556                     l7278:
 10404                           
 10405                           ; BSR set to: 0
 10406                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10407   000556  0E67               	movlw	103
 10408   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10409   00055A  B4D8               	btfsc	status,2,c
 10410   00055C  EFB2  F002         	goto	u8701
 10411   000560  EFB4  F002         	goto	u8700
 10412   000564                     u8701:
 10413   000564  EFB8  F002         	goto	l7282
 10414   000568                     u8700:
 10415   000568                     
 10416                           ; BSR set to: 0
 10417                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10418   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10419   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10420   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10421   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10422   000570                     l7282:
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10426   000570  0E00               	movlw	0
 10427   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10428   000574  0E00               	movlw	0
 10429   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10430   000578                     
 10431                           ; BSR set to: 0
 10432                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10433   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10434   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10435   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10436   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10437   000588                     
 10438                           ; BSR set to: 0
 10439                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10440   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10441   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10442   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10443   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10444                           
 10445                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10446   000598  EF49  F003         	goto	l7296
 10447   00059C                     l7288:
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10451   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10452   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10453   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10454   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10455   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10456   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10457   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10458   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10459   0005BC  EC17  F015         	call	___fldiv	;wreg free
 10460   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10461   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10462   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10463   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10464   0005D0  EC71  F019         	call	_floorf	;wreg free
 10465   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10466   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10467   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10468   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10469                           
 10470                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10471   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10472   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10473   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10474   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10475   0005F4  EC83  F021         	call	___fltol	;wreg free
 10476   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10477   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10478   000600                     
 10479                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10480   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10481   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10482   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10483   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10484   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10485   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10486   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10487   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10488   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10489   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10490   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10491   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10492   000630  EC3A  F00D         	call	___flmul	;wreg free
 10493   000634  C014  F068         	movff	?___flmul,___flsub@a
 10494   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10495   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10496   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10497   000644  EC08  F028         	call	___flsub	;wreg free
 10498   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10499   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10500   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10501   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10502   000658                     
 10503                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10504   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10505   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10506   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10507   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10508   000668  0E00               	movlw	0
 10509   00066A  6E31               	movwf	___fldiv@a^0,c
 10510   00066C  0E00               	movlw	0
 10511   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10512   000670  0E20               	movlw	32
 10513   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10514   000674  0E41               	movlw	65
 10515   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10516   000678  EC17  F015         	call	___fldiv	;wreg free
 10517   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10518   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10519   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10520   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10521   00068C                     
 10522                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10523   00068C  0100               	movlb	0	; () banked
 10524   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10525   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10526   000692                     l7296:
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10530   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10531   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10532   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10533   000698  0A80               	xorlw	128
 10534   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10535   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10536   00069E  0A80               	xorlw	128
 10537   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10538   0006A2  A0D8               	btfss	status,0,c
 10539   0006A4  EF56  F003         	goto	u8711
 10540   0006A8  EF58  F003         	goto	u8710
 10541   0006AC                     u8711:
 10542   0006AC  EFCE  F002         	goto	l7288
 10543   0006B0                     u8710:
 10544   0006B0                     
 10545                           ; BSR set to: 0
 10546                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10547   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10548   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10549   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10550   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10551   0006C0  0E00               	movlw	0
 10552   0006C2  6E18               	movwf	___flmul@a^0,c
 10553   0006C4  0E00               	movlw	0
 10554   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10555   0006C8  0EA0               	movlw	160
 10556   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10557   0006CC  0E40               	movlw	64
 10558   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10559   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10560   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10561   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10562   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10563   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10564   0006E4                     
 10565                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10566   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10567   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10568   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10569   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10570   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10571   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10572   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10573   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10574   000704  EC07  F022         	call	___flge	;wreg free
 10575   000708  B0D8               	btfsc	status,0,c
 10576   00070A  EF89  F003         	goto	u8721
 10577   00070E  EF8B  F003         	goto	u8720
 10578   000712                     u8721:
 10579   000712  EF96  F003         	goto	l7304
 10580   000716                     u8720:
 10581   000716                     
 10582                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10583   000716  0E00               	movlw	0
 10584   000718  0100               	movlb	0	; () banked
 10585   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10586   00071C  0E00               	movlw	0
 10587   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10588   000720  0E00               	movlw	0
 10589   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10590   000724  0E00               	movlw	0
 10591   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10592                           
 10593                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10594   000728  EFBF  F003         	goto	l7310
 10595   00072C                     l7304:
 10596                           
 10597                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10598   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10599   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10600   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10601   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10602   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10603   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10604   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10605   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10606   00074C  ECBC  F025         	call	___fleq	;wreg free
 10607   000750  A0D8               	btfss	status,0,c
 10608   000752  EFAD  F003         	goto	u8731
 10609   000756  EFAF  F003         	goto	u8730
 10610   00075A                     u8731:
 10611   00075A  EFBF  F003         	goto	l7310
 10612   00075E                     u8730:
 10613   00075E  0100               	movlb	0	; () banked
 10614   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10615   000762  EFB5  F003         	goto	u8741
 10616   000766  EFB7  F003         	goto	u8740
 10617   00076A                     u8741:
 10618   00076A  EFBF  F003         	goto	l7310
 10619   00076E                     u8740:
 10620   00076E                     
 10621                           ; BSR set to: 0
 10622                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10623   00076E  0E00               	movlw	0
 10624   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10625   000772  0E00               	movlw	0
 10626   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10627   000776  0E00               	movlw	0
 10628   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10629   00077A  0E00               	movlw	0
 10630   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10631   00077E                     l7310:
 10632                           
 10633                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10634   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10635   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10636   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10637   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10638   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10639   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10640   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10641   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10642   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10643   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10644   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10645   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10646   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10647   0007B2                     
 10648                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10649   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10650   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10651   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10652   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10653   0007C2  0E00               	movlw	0
 10654   0007C4  6E18               	movwf	___flmul@a^0,c
 10655   0007C6  0E00               	movlw	0
 10656   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10657   0007CA  0E20               	movlw	32
 10658   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10659   0007CE  0E41               	movlw	65
 10660   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10661   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10662   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10663   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10664   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10665   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10666   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10667   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10668   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10669   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10670   0007F6  EC07  F022         	call	___flge	;wreg free
 10671   0007FA  A0D8               	btfss	status,0,c
 10672   0007FC  EF02  F004         	goto	u8751
 10673   000800  EF04  F004         	goto	u8750
 10674   000804                     u8751:
 10675   000804  EF2D  F004         	goto	l7322
 10676   000808                     u8750:
 10677   000808                     
 10678                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10679   000808  0100               	movlb	0	; () banked
 10680   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10681   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10682   00080E                     
 10683                           ; BSR set to: 0
 10684                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10685   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10686   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10687   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10688   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10689   00081E  0E00               	movlw	0
 10690   000820  6E18               	movwf	___flmul@a^0,c
 10691   000822  0E00               	movlw	0
 10692   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10693   000826  0E20               	movlw	32
 10694   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10695   00082A  0E41               	movlw	65
 10696   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10697   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10698   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10699   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10700   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10701   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10702   000842                     
 10703                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10704   000842  0E66               	movlw	102
 10705   000844  0100               	movlb	0	; () banked
 10706   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10707   000848  A4D8               	btfss	status,2,c
 10708   00084A  EF29  F004         	goto	u8761
 10709   00084E  EF2B  F004         	goto	u8760
 10710   000852                     u8761:
 10711   000852  EF2D  F004         	goto	l7322
 10712   000856                     u8760:
 10713   000856                     
 10714                           ; BSR set to: 0
 10715                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10716   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10717   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10718   00085A                     l7322:
 10719                           
 10720                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10721   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10722   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10723   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10724   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10725   00086A                     
 10726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10727   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10728   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10729   000872                     
 10730                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10731   000872  0E00               	movlw	0
 10732   000874  0100               	movlb	0	; () banked
 10733   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10734   000878                     
 10735                           ; BSR set to: 0
 10736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10737   000878  0E00               	movlw	0
 10738   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10739   00087C  0E00               	movlw	0
 10740   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10741   000880                     
 10742                           ; BSR set to: 0
 10743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10744   000880  0E00               	movlw	0
 10745   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10746   000884  0E00               	movlw	0
 10747   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10748                           
 10749                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10750   000888  EF2B  F005         	goto	l7372
 10751   00088C                     l7332:
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10755   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10756   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10757   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10758   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10759   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10760   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10761   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10762   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10763   0008AC  EC17  F015         	call	___fldiv	;wreg free
 10764   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10765   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10766   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10767   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10768   0008C0  EC71  F019         	call	_floorf	;wreg free
 10769   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10770   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10771   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10772   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10773                           
 10774                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10775   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10776   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10777   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10778   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10779   0008E4  EC83  F021         	call	___fltol	;wreg free
 10780   0008E8  0100               	movlb	0	; () banked
 10781   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10782   0008EC  EF83  F004         	goto	u8770
 10783   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10784   0008F2  E107               	bnz	u8771
 10785   0008F4  0E0A               	movlw	10
 10786   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10787   0008F8  B0D8               	btfsc	status,0,c
 10788   0008FA  EF81  F004         	goto	u8771
 10789   0008FE  EF83  F004         	goto	u8770
 10790   000902                     u8771:
 10791   000902  EF93  F004         	goto	l7336
 10792   000906                     u8770:
 10793   000906                     
 10794                           ; BSR set to: 0
 10795   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10796   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10797   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10798   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10799   000916  EC83  F021         	call	___fltol	;wreg free
 10800   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10801   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10802   000922  EF97  F004         	goto	l1485
 10803   000926                     l7336:
 10804                           
 10805                           ; BSR set to: 0
 10806   000926  0E00               	movlw	0
 10807   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10808   00092A  0E09               	movlw	9
 10809   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10810   00092E                     l1485:
 10811                           
 10812                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10813   00092E  0100               	movlb	0	; () banked
 10814   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10815   000932  A4D8               	btfss	status,2,c
 10816   000934  EF9E  F004         	goto	u8781
 10817   000938  EFA0  F004         	goto	u8780
 10818   00093C                     u8781:
 10819   00093C  EFC8  F004         	goto	l7356
 10820   000940                     u8780:
 10821   000940                     
 10822                           ; BSR set to: 0
 10823   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10824   000942  EFA7  F004         	goto	u8790
 10825   000946  EFA5  F004         	goto	u8791
 10826   00094A                     u8791:
 10827   00094A  EFC8  F004         	goto	l7356
 10828   00094E                     u8790:
 10829   00094E                     
 10830                           ; BSR set to: 0
 10831                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10832   00094E  0E27               	movlw	low _dbuf
 10833   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10834   000952  6ED9               	movwf	fsr2l,c
 10835   000954  0E01               	movlw	high _dbuf
 10836   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10837   000958  6EDA               	movwf	fsr2h,c
 10838   00095A  0E2E               	movlw	46
 10839   00095C  6EDF               	movwf	indf2,c
 10840   00095E                     
 10841                           ; BSR set to: 0
 10842   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10843   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10844   000962                     
 10845                           ; BSR set to: 0
 10846                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10847   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10848   000964  A0D8               	btfss	status,0,c
 10849   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10850   000968                     
 10851                           ; BSR set to: 0
 10852                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10853   000968  0E01               	movlw	1
 10854   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10855   00096C  EFC8  F004         	goto	l7356
 10856   000970                     l7348:
 10857                           
 10858                           ; BSR set to: 0
 10859                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10860   000970  0E27               	movlw	low _dbuf
 10861   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10862   000974  6ED9               	movwf	fsr2l,c
 10863   000976  0E01               	movlw	high _dbuf
 10864   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10865   00097A  6EDA               	movwf	fsr2h,c
 10866   00097C  0E30               	movlw	48
 10867   00097E  6EDF               	movwf	indf2,c
 10868   000980                     
 10869                           ; BSR set to: 0
 10870   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10871   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10872   000984                     
 10873                           ; BSR set to: 0
 10874                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10875   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10876   000986  A0D8               	btfss	status,0,c
 10877   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10878   00098A                     
 10879                           ; BSR set to: 0
 10880                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10881   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10882   00098C  A0D8               	btfss	status,0,c
 10883   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10884   000990                     l7356:
 10885                           
 10886                           ; BSR set to: 0
 10887                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10888   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10889   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10890   000994  A4D8               	btfss	status,2,c
 10891   000996  EFCF  F004         	goto	u8801
 10892   00099A  EFD1  F004         	goto	u8800
 10893   00099E                     u8801:
 10894   00099E  EFB8  F004         	goto	l7348
 10895   0009A2                     u8800:
 10896   0009A2                     
 10897                           ; BSR set to: 0
 10898                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10899   0009A2  0E27               	movlw	low _dbuf
 10900   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10901   0009A6  6ED9               	movwf	fsr2l,c
 10902   0009A8  0E01               	movlw	high _dbuf
 10903   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10904   0009AC  6EDA               	movwf	fsr2h,c
 10905   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10906   0009B0  0F30               	addlw	48
 10907   0009B2  6EDF               	movwf	indf2,c
 10908   0009B4                     
 10909                           ; BSR set to: 0
 10910   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10911   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10912   0009B8                     
 10913                           ; BSR set to: 0
 10914                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10915   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10916   0009BA  A0D8               	btfss	status,0,c
 10917   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10918   0009BE                     
 10919                           ; BSR set to: 0
 10920                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10921   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10922   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10923   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10924   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10925   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10926   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10927   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10928   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10929   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10930   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10931   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10932   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10933   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10934   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10935   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10936   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10937   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10938   000A02  EC08  F028         	call	___flsub	;wreg free
 10939   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10940   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10941   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10942   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10943   000A16                     
 10944                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10945   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10946   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10947   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10948   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10949   000A26  0E00               	movlw	0
 10950   000A28  6E31               	movwf	___fldiv@a^0,c
 10951   000A2A  0E00               	movlw	0
 10952   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10953   000A2E  0E20               	movlw	32
 10954   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10955   000A32  0E41               	movlw	65
 10956   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10957   000A36  EC17  F015         	call	___fldiv	;wreg free
 10958   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10959   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10960   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10961   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10962   000A4A                     
 10963                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10964   000A4A  0100               	movlb	0	; () banked
 10965   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10966   000A4E  A0D8               	btfss	status,0,c
 10967   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10968   000A52                     
 10969                           ; BSR set to: 0
 10970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10971   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10972   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10973   000A56                     l7372:
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10977   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10978   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10979   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10980   000A5C  0A80               	xorlw	128
 10981   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10982   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10983   000A62  0A80               	xorlw	128
 10984   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10985   000A66  B0D8               	btfsc	status,0,c
 10986   000A68  EF38  F005         	goto	u8811
 10987   000A6C  EF3A  F005         	goto	u8810
 10988   000A70                     u8811:
 10989   000A70  EF48  F005         	goto	l7376
 10990   000A74                     u8810:
 10991   000A74                     
 10992                           ; BSR set to: 0
 10993   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10994   000A76  EF46  F005         	goto	u8821
 10995   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10996   000A7C  E109               	bnz	u8820
 10997   000A7E  0E4B               	movlw	75
 10998   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10999   000A82  A0D8               	btfss	status,0,c
 11000   000A84  EF46  F005         	goto	u8821
 11001   000A88  EF48  F005         	goto	u8820
 11002   000A8C                     u8821:
 11003   000A8C  EF46  F004         	goto	l7332
 11004   000A90                     u8820:
 11005   000A90                     l7376:
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 11009   000A90  0E00               	movlw	0
 11010   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 11011   000A94  0E4F               	movlw	79
 11012   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 11013   000A98                     
 11014                           ; BSR set to: 0
 11015                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 11016   000A98  0E27               	movlw	low _dbuf
 11017   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 11018   000A9C  6ED9               	movwf	fsr2l,c
 11019   000A9E  0E01               	movlw	high _dbuf
 11020   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11021   000AA2  6EDA               	movwf	fsr2h,c
 11022   000AA4  6ADF               	clrf	indf2,c
 11023   000AA6                     
 11024                           ; BSR set to: 0
 11025                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 11026   000AA6  0E27               	movlw	low _dbuf
 11027   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 11028   000AAA  0E01               	movlw	high _dbuf
 11029   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 11030   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 11031   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 11032   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 11033   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 11034   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 11035   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 11036   000ABA  6E06               	movwf	memcpy@d1^0,c
 11037   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 11038   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 11039   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 11040   000AC2  0E27               	movlw	low _dbuf
 11041   000AC4  6E08               	movwf	memcpy@s1^0,c
 11042   000AC6  0E01               	movlw	high _dbuf
 11043   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 11044   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 11045   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 11046   000AD2  ECBB  F027         	call	_memcpy	;wreg free
 11047   000AD6                     
 11048                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11049   000AD6  0100               	movlb	0	; () banked
 11050   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 11051   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 11052   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 11053   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 11054   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 11055   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 11056   000AE4                     
 11057                           ; BSR set to: 0
 11058                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 11059   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 11060   000AE6  A4D8               	btfss	status,2,c
 11061   000AE8  EF78  F005         	goto	u8831
 11062   000AEC  EF7B  F005         	goto	u8830
 11063   000AF0                     u8831:
 11064   000AF0  0E01               	movlw	1
 11065   000AF2  EF7C  F005         	goto	u8840
 11066   000AF6                     u8830:
 11067   000AF6  0E00               	movlw	0
 11068   000AF8                     u8840:
 11069   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 11070   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 11071   000AFC                     
 11072                           ; BSR set to: 0
 11073                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11074   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 11075   000AFE  B4D8               	btfsc	status,2,c
 11076   000B00  EF84  F005         	goto	u8851
 11077   000B04  EF86  F005         	goto	u8850
 11078   000B08                     u8851:
 11079   000B08  EF91  F005         	goto	l7390
 11080   000B0C                     u8850:
 11081   000B0C                     
 11082                           ; BSR set to: 0
 11083                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 11084   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 11085   000B0E  A0D8               	btfss	status,0,c
 11086   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 11087   000B12  0E27               	movlw	low _dbuf
 11088   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 11089   000B16  6ED9               	movwf	fsr2l,c
 11090   000B18  0E01               	movlw	high _dbuf
 11091   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11092   000B1C  6EDA               	movwf	fsr2h,c
 11093   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 11094   000B22                     l7390:
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11098   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 11099   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 11100   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 11101   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 11102   000B2A                     
 11103                           ; BSR set to: 0
 11104                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 11105   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 11106   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 11107   000B32  0E27               	movlw	low _dbuf
 11108   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 11109   000B36  6E19               	movwf	pad@buf^0,c
 11110   000B38  0E01               	movlw	high _dbuf
 11111   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11112   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 11113   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 11114   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 11115   000B46  EC11  F026         	call	_pad	;wreg free
 11116   000B4A                     l1452:
 11117   000B4A  0012               	return		;funcret
 11118   000B4C                     __end_of_efgtoa:
 11119                           	callstack 0
 11120                           
 11121 ;; *************** function _strcpy *****************
 11122 ;; Defined at:
 11123 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  dest            2    5[COMRAM] PTR unsigned char 
 11126 ;;		 -> dbuf(80), 
 11127 ;;  src             2    7[COMRAM] PTR const unsigned char 
 11128 ;;		 -> STR_44(4), STR_41(4), 
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;  d               2    9[COMRAM] PTR unsigned char 
 11131 ;;		 -> dbuf(80), 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  2    5[COMRAM] PTR unsigned char 
 11134 ;; Registers used:
 11135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;Total ram usage:        6 bytes
 11146 ;; Hardware stack levels used: 1
 11147 ;; Hardware stack levels required when called: 1
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_efgtoa
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           	psect	text37
 11156   00515A                     __ptext37:
 11157                           	callstack 0
 11158   00515A                     _strcpy:
 11159                           	callstack 24
 11160   00515A  C006  F00A         	movff	strcpy@dest,strcpy@d
 11161   00515E  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 11162   005162                     l7080:
 11163   005162  C008  FFF6         	movff	strcpy@src,tblptrl
 11164   005166  C009  FFF7         	movff	strcpy@src+1,tblptrh
 11165   00516A  4A08               	infsnz	strcpy@src^0,f,c
 11166   00516C  2A09               	incf	(strcpy@src+1)^0,f,c
 11167   00516E                     	if	0	;tblptru may be non-zero
 11168   00516E                     	endif
 11169   00516E                     	if	0	;tblptru may be non-zero
 11170   00516E                     	endif
 11171   00516E  C00A  FFD9         	movff	strcpy@d,fsr2l
 11172   005172  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 11173   005176  4A0A               	infsnz	strcpy@d^0,f,c
 11174   005178  2A0B               	incf	(strcpy@d+1)^0,f,c
 11175   00517A  0008               	tblrd		*
 11176   00517C  CFF5 FFDF          	movff	tablat,indf2
 11177   005180  50DF               	movf	indf2,w,c
 11178   005182  A4D8               	btfss	status,2,c
 11179   005184  EFC6  F028         	goto	u8321
 11180   005188  EFC8  F028         	goto	u8320
 11181   00518C                     u8321:
 11182   00518C  EFB1  F028         	goto	l7080
 11183   005190                     u8320:
 11184   005190  0012               	return		;funcret
 11185   005192                     __end_of_strcpy:
 11186                           	callstack 0
 11187                           
 11188 ;; *************** function _memcpy *****************
 11189 ;; Defined at:
 11190 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  d1              2    5[COMRAM] PTR void 
 11193 ;;		 -> dbuf(80), 
 11194 ;;  s1              2    7[COMRAM] PTR const void 
 11195 ;;		 -> dbuf(80), 
 11196 ;;  n               2    9[COMRAM] unsigned int 
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;  s               2   14[COMRAM] PTR const unsigned char 
 11199 ;;		 -> dbuf(80), 
 11200 ;;  d               2   12[COMRAM] PTR unsigned char 
 11201 ;;		 -> dbuf(80), 
 11202 ;;  tmp             1   11[COMRAM] unsigned char 
 11203 ;; Return value:  Size  Location     Type
 11204 ;;                  2    5[COMRAM] PTR void 
 11205 ;; Registers used:
 11206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11212 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11213 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11215 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;Total ram usage:       11 bytes
 11217 ;; Hardware stack levels used: 1
 11218 ;; Hardware stack levels required when called: 1
 11219 ;; This function calls:
 11220 ;;		Nothing
 11221 ;; This function is called by:
 11222 ;;		_efgtoa
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           	psect	text38
 11227   004F76                     __ptext38:
 11228                           	callstack 0
 11229   004F76                     _memcpy:
 11230                           	callstack 24
 11231   004F76  C008  F00F         	movff	memcpy@s1,memcpy@s
 11232   004F7A  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 11233   004F7E  C006  F00D         	movff	memcpy@d1,memcpy@d
 11234   004F82  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 11235   004F86  EFD5  F027         	goto	l7128
 11236   004F8A                     l7120:
 11237   004F8A  C00F  FFD9         	movff	memcpy@s,fsr2l
 11238   004F8E  C010  FFDA         	movff	memcpy@s+1,fsr2h
 11239   004F92  50DF               	movf	indf2,w,c
 11240   004F94  6E0C               	movwf	memcpy@tmp^0,c
 11241   004F96  4A0F               	infsnz	memcpy@s^0,f,c
 11242   004F98  2A10               	incf	(memcpy@s+1)^0,f,c
 11243   004F9A  C00D  FFD9         	movff	memcpy@d,fsr2l
 11244   004F9E  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 11245   004FA2  C00C  FFDF         	movff	memcpy@tmp,indf2
 11246   004FA6  4A0D               	infsnz	memcpy@d^0,f,c
 11247   004FA8  2A0E               	incf	(memcpy@d+1)^0,f,c
 11248   004FAA                     l7128:
 11249   004FAA  060A               	decf	memcpy@n^0,f,c
 11250   004FAC  A0D8               	btfss	status,0,c
 11251   004FAE  060B               	decf	(memcpy@n+1)^0,f,c
 11252   004FB0  280A               	incf	memcpy@n^0,w,c
 11253   004FB2  E106               	bnz	u8441
 11254   004FB4  280B               	incf	(memcpy@n+1)^0,w,c
 11255   004FB6  A4D8               	btfss	status,2,c
 11256   004FB8  EFE0  F027         	goto	u8441
 11257   004FBC  EFE2  F027         	goto	u8440
 11258   004FC0                     u8441:
 11259   004FC0  EFC5  F027         	goto	l7120
 11260   004FC4                     u8440:
 11261   004FC4  0012               	return		;funcret
 11262   004FC6                     __end_of_memcpy:
 11263                           	callstack 0
 11264                           
 11265 ;; *************** function _labs *****************
 11266 ;; Defined at:
 11267 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;  a               4    5[COMRAM] long 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  4    5[COMRAM] long 
 11274 ;; Registers used:
 11275 ;;		wreg, status,2, status,0
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11281 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;Total ram usage:        8 bytes
 11286 ;; Hardware stack levels used: 1
 11287 ;; Hardware stack levels required when called: 1
 11288 ;; This function calls:
 11289 ;;		Nothing
 11290 ;; This function is called by:
 11291 ;;		_efgtoa
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           	psect	text39
 11296   004ECC                     __ptext39:
 11297                           	callstack 0
 11298   004ECC                     _labs:
 11299                           	callstack 24
 11300   004ECC  BE09               	btfsc	(labs@a+3)^0,7,c
 11301   004ECE  EF6B  F027         	goto	u8331
 11302   004ED2  EF6D  F027         	goto	u8330
 11303   004ED6                     u8331:
 11304   004ED6  EF77  F027         	goto	l7086
 11305   004EDA                     u8330:
 11306   004EDA  C006  F006         	movff	labs@a,?_labs
 11307   004EDE  C007  F007         	movff	labs@a+1,?_labs+1
 11308   004EE2  C008  F008         	movff	labs@a+2,?_labs+2
 11309   004EE6  C009  F009         	movff	labs@a+3,?_labs+3
 11310   004EEA  EF90  F027         	goto	l1634
 11311   004EEE                     l7086:
 11312   004EEE  C006  F00A         	movff	labs@a,??_labs
 11313   004EF2  C007  F00B         	movff	labs@a+1,??_labs+1
 11314   004EF6  C008  F00C         	movff	labs@a+2,??_labs+2
 11315   004EFA  C009  F00D         	movff	labs@a+3,??_labs+3
 11316   004EFE  1E0A               	comf	??_labs^0,f,c
 11317   004F00  1E0B               	comf	(??_labs+1)^0,f,c
 11318   004F02  1E0C               	comf	(??_labs+2)^0,f,c
 11319   004F04  1E0D               	comf	(??_labs+3)^0,f,c
 11320   004F06  2A0A               	incf	??_labs^0,f,c
 11321   004F08  0E00               	movlw	0
 11322   004F0A  220B               	addwfc	(??_labs+1)^0,f,c
 11323   004F0C  220C               	addwfc	(??_labs+2)^0,f,c
 11324   004F0E  220D               	addwfc	(??_labs+3)^0,f,c
 11325   004F10  C00A  F006         	movff	??_labs,?_labs
 11326   004F14  C00B  F007         	movff	??_labs+1,?_labs+1
 11327   004F18  C00C  F008         	movff	??_labs+2,?_labs+2
 11328   004F1C  C00D  F009         	movff	??_labs+3,?_labs+3
 11329   004F20                     l1634:
 11330   004F20  0012               	return		;funcret
 11331   004F22                     __end_of_labs:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _floorf *****************
 11335 ;; Defined at:
 11336 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  x               4   69[COMRAM] float 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  u               4    6[BANK0 ] struct .
 11341 ;;  m               4    0[BANK0 ] unsigned long 
 11342 ;;  e               2    4[BANK0 ] int 
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  4   69[COMRAM] float 
 11345 ;; Registers used:
 11346 ;;		wreg, status,2, status,0
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11354 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;Total ram usage:       20 bytes
 11357 ;; Hardware stack levels used: 1
 11358 ;; Hardware stack levels required when called: 1
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_efgtoa
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text40
 11367   0032E2                     __ptext40:
 11368                           	callstack 0
 11369   0032E2                     _floorf:
 11370                           	callstack 24
 11371   0032E2  C119  F066         	movff	floorf@F521,floorf@u
 11372   0032E6  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11373   0032EA  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11374   0032EE  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11375   0032F2  C046  F066         	movff	floorf@x,floorf@u
 11376   0032F6  C047  F067         	movff	floorf@x+1,floorf@u+1
 11377   0032FA  C048  F068         	movff	floorf@x+2,floorf@u+2
 11378   0032FE  C049  F069         	movff	floorf@x+3,floorf@u+3
 11379   003302  0E81               	movlw	129
 11380   003304  6E4A               	movwf	??_floorf^0,c
 11381   003306  0EFF               	movlw	255
 11382   003308  6E4B               	movwf	(??_floorf+1)^0,c
 11383   00330A  C066  F04C         	movff	floorf@u,??_floorf+2
 11384   00330E  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11385   003312  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11386   003316  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11387   00331A  0E18               	movlw	24
 11388   00331C  EF95  F019         	goto	u8340
 11389   003320                     u8345:
 11390   003320  90D8               	bcf	status,0,c
 11391   003322  324F               	rrcf	(??_floorf+5)^0,f,c
 11392   003324  324E               	rrcf	(??_floorf+4)^0,f,c
 11393   003326  324D               	rrcf	(??_floorf+3)^0,f,c
 11394   003328  324C               	rrcf	(??_floorf+2)^0,f,c
 11395   00332A                     u8340:
 11396   00332A  2EE8               	decfsz	wreg,f,c
 11397   00332C  EF90  F019         	goto	u8345
 11398   003330  504C               	movf	(??_floorf+2)^0,w,c
 11399   003332  244A               	addwf	??_floorf^0,w,c
 11400   003334  0100               	movlb	0	; () banked
 11401   003336  6F64               	movwf	floorf@e& (0+255),b
 11402   003338  0E00               	movlw	0
 11403   00333A  204B               	addwfc	(??_floorf+1)^0,w,c
 11404   00333C  6F65               	movwf	(floorf@e+1)& (0+255),b
 11405   00333E  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11406   003340  EFAB  F019         	goto	u8351
 11407   003344  5165               	movf	(floorf@e+1)& (0+255),w,b
 11408   003346  E109               	bnz	u8350
 11409   003348  0E17               	movlw	23
 11410   00334A  5D64               	subwf	floorf@e& (0+255),w,b
 11411   00334C  A0D8               	btfss	status,0,c
 11412   00334E  EFAB  F019         	goto	u8351
 11413   003352  EFAD  F019         	goto	u8350
 11414   003356                     u8351:
 11415   003356  EFB7  F019         	goto	l7096
 11416   00335A                     u8350:
 11417   00335A                     l7094:
 11418                           
 11419                           ; BSR set to: 0
 11420   00335A  C046  F046         	movff	floorf@x,?_floorf
 11421   00335E  C047  F047         	movff	floorf@x+1,?_floorf+1
 11422   003362  C048  F048         	movff	floorf@x+2,?_floorf+2
 11423   003366  C049  F049         	movff	floorf@x+3,?_floorf+3
 11424   00336A  EF7B  F01A         	goto	l1620
 11425   00336E                     l7096:
 11426                           
 11427                           ; BSR set to: 0
 11428   00336E  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11429   003370  EFBC  F019         	goto	u8361
 11430   003374  EFBE  F019         	goto	u8360
 11431   003378                     u8361:
 11432   003378  EF2F  F01A         	goto	l7106
 11433   00337C                     u8360:
 11434   00337C                     
 11435                           ; BSR set to: 0
 11436   00337C  C064  F04A         	movff	floorf@e,??_floorf
 11437   003380  0EFF               	movlw	255
 11438   003382  6E4B               	movwf	(??_floorf+1)^0,c
 11439   003384  0EFF               	movlw	255
 11440   003386  6E4C               	movwf	(??_floorf+2)^0,c
 11441   003388  0E7F               	movlw	127
 11442   00338A  6E4D               	movwf	(??_floorf+3)^0,c
 11443   00338C  0E00               	movlw	0
 11444   00338E  6E4E               	movwf	(??_floorf+4)^0,c
 11445   003390                     u8375:
 11446   003390  664A               	tstfsz	??_floorf^0,c
 11447   003392  EFCD  F019         	goto	u8376
 11448   003396  EFD5  F019         	goto	u8377
 11449   00339A                     u8376:
 11450   00339A  344E               	rlcf	(??_floorf+4)^0,w,c
 11451   00339C  324E               	rrcf	(??_floorf+4)^0,f,c
 11452   00339E  324D               	rrcf	(??_floorf+3)^0,f,c
 11453   0033A0  324C               	rrcf	(??_floorf+2)^0,f,c
 11454   0033A2  324B               	rrcf	(??_floorf+1)^0,f,c
 11455   0033A4  2E4A               	decfsz	??_floorf^0,f,c
 11456   0033A6  EFC8  F019         	goto	u8375
 11457   0033AA                     u8377:
 11458   0033AA  C04B  F060         	movff	??_floorf+1,floorf@m
 11459   0033AE  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11460   0033B2  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11461   0033B6  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11462   0033BA  0100               	movlb	0	; () banked
 11463   0033BC  5160               	movf	floorf@m& (0+255),w,b
 11464   0033BE  1566               	andwf	floorf@u& (0+255),w,b
 11465   0033C0  6E4A               	movwf	??_floorf^0,c
 11466   0033C2  5161               	movf	(floorf@m+1)& (0+255),w,b
 11467   0033C4  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11468   0033C6  6E4B               	movwf	(??_floorf+1)^0,c
 11469   0033C8  5162               	movf	(floorf@m+2)& (0+255),w,b
 11470   0033CA  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11471   0033CC  6E4C               	movwf	(??_floorf+2)^0,c
 11472   0033CE  5163               	movf	(floorf@m+3)& (0+255),w,b
 11473   0033D0  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11474   0033D2  6E4D               	movwf	(??_floorf+3)^0,c
 11475   0033D4  504A               	movf	??_floorf^0,w,c
 11476   0033D6  104B               	iorwf	(??_floorf+1)^0,w,c
 11477   0033D8  104C               	iorwf	(??_floorf+2)^0,w,c
 11478   0033DA  104D               	iorwf	(??_floorf+3)^0,w,c
 11479   0033DC  A4D8               	btfss	status,2,c
 11480   0033DE  EFF3  F019         	goto	u8381
 11481   0033E2  EFF5  F019         	goto	u8380
 11482   0033E6                     u8381:
 11483   0033E6  EFF7  F019         	goto	l7102
 11484   0033EA                     u8380:
 11485   0033EA  EFAD  F019         	goto	l7094
 11486   0033EE                     l7102:
 11487                           
 11488                           ; BSR set to: 0
 11489   0033EE  C066  F04A         	movff	floorf@u,??_floorf
 11490   0033F2  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11491   0033F6  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11492   0033FA  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11493   0033FE  0E20               	movlw	32
 11494   003400  EF07  F01A         	goto	u8390
 11495   003404                     u8395:
 11496   003404  90D8               	bcf	status,0,c
 11497   003406  324D               	rrcf	(??_floorf+3)^0,f,c
 11498   003408  324C               	rrcf	(??_floorf+2)^0,f,c
 11499   00340A  324B               	rrcf	(??_floorf+1)^0,f,c
 11500   00340C  324A               	rrcf	??_floorf^0,f,c
 11501   00340E                     u8390:
 11502   00340E  2EE8               	decfsz	wreg,f,c
 11503   003410  EF02  F01A         	goto	u8395
 11504   003414  504A               	movf	??_floorf^0,w,c
 11505   003416  104B               	iorwf	(??_floorf+1)^0,w,c
 11506   003418  104C               	iorwf	(??_floorf+2)^0,w,c
 11507   00341A  104D               	iorwf	(??_floorf+3)^0,w,c
 11508   00341C  B4D8               	btfsc	status,2,c
 11509   00341E  EF13  F01A         	goto	u8401
 11510   003422  EF15  F01A         	goto	u8400
 11511   003426                     u8401:
 11512   003426  EF1D  F01A         	goto	l1623
 11513   00342A                     u8400:
 11514   00342A                     
 11515                           ; BSR set to: 0
 11516   00342A  5160               	movf	floorf@m& (0+255),w,b
 11517   00342C  2766               	addwf	floorf@u& (0+255),f,b
 11518   00342E  5161               	movf	(floorf@m+1)& (0+255),w,b
 11519   003430  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11520   003432  5162               	movf	(floorf@m+2)& (0+255),w,b
 11521   003434  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11522   003436  5163               	movf	(floorf@m+3)& (0+255),w,b
 11523   003438  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11524   00343A                     l1623:
 11525                           
 11526                           ; BSR set to: 0
 11527   00343A  1D60               	comf	floorf@m& (0+255),w,b
 11528   00343C  6E4A               	movwf	??_floorf^0,c
 11529   00343E  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11530   003440  6E4B               	movwf	(??_floorf+1)^0,c
 11531   003442  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11532   003444  6E4C               	movwf	(??_floorf+2)^0,c
 11533   003446  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11534   003448  6E4D               	movwf	(??_floorf+3)^0,c
 11535   00344A  504A               	movf	??_floorf^0,w,c
 11536   00344C  1766               	andwf	floorf@u& (0+255),f,b
 11537   00344E  504B               	movf	(??_floorf+1)^0,w,c
 11538   003450  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11539   003452  504C               	movf	(??_floorf+2)^0,w,c
 11540   003454  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11541   003456  504D               	movf	(??_floorf+3)^0,w,c
 11542   003458  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11543   00345A  EF73  F01A         	goto	l7114
 11544   00345E                     l7106:
 11545                           
 11546                           ; BSR set to: 0
 11547   00345E  C066  F04A         	movff	floorf@u,??_floorf
 11548   003462  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11549   003466  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11550   00346A  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11551   00346E  0E20               	movlw	32
 11552   003470  EF3F  F01A         	goto	u8410
 11553   003474                     u8415:
 11554   003474  90D8               	bcf	status,0,c
 11555   003476  324D               	rrcf	(??_floorf+3)^0,f,c
 11556   003478  324C               	rrcf	(??_floorf+2)^0,f,c
 11557   00347A  324B               	rrcf	(??_floorf+1)^0,f,c
 11558   00347C  324A               	rrcf	??_floorf^0,f,c
 11559   00347E                     u8410:
 11560   00347E  2EE8               	decfsz	wreg,f,c
 11561   003480  EF3A  F01A         	goto	u8415
 11562   003484  504A               	movf	??_floorf^0,w,c
 11563   003486  104B               	iorwf	(??_floorf+1)^0,w,c
 11564   003488  104C               	iorwf	(??_floorf+2)^0,w,c
 11565   00348A  104D               	iorwf	(??_floorf+3)^0,w,c
 11566   00348C  A4D8               	btfss	status,2,c
 11567   00348E  EF4B  F01A         	goto	u8421
 11568   003492  EF4D  F01A         	goto	u8420
 11569   003496                     u8421:
 11570   003496  EF57  F01A         	goto	l7110
 11571   00349A                     u8420:
 11572   00349A                     
 11573                           ; BSR set to: 0
 11574   00349A  0E00               	movlw	0
 11575   00349C  6F66               	movwf	floorf@u& (0+255),b
 11576   00349E  0E00               	movlw	0
 11577   0034A0  6F67               	movwf	(floorf@u+1)& (0+255),b
 11578   0034A2  0E00               	movlw	0
 11579   0034A4  6F68               	movwf	(floorf@u+2)& (0+255),b
 11580   0034A6  0E00               	movlw	0
 11581   0034A8  6F69               	movwf	(floorf@u+3)& (0+255),b
 11582   0034AA  EF73  F01A         	goto	l7114
 11583   0034AE                     l7110:
 11584                           
 11585                           ; BSR set to: 0
 11586   0034AE  90D8               	bcf	status,0,c
 11587   0034B0  3566               	rlcf	floorf@u& (0+255),w,b
 11588   0034B2  6E4A               	movwf	??_floorf^0,c
 11589   0034B4  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11590   0034B6  6E4B               	movwf	(??_floorf+1)^0,c
 11591   0034B8  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11592   0034BA  6E4C               	movwf	(??_floorf+2)^0,c
 11593   0034BC  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11594   0034BE  6E4D               	movwf	(??_floorf+3)^0,c
 11595   0034C0  504A               	movf	??_floorf^0,w,c
 11596   0034C2  104B               	iorwf	(??_floorf+1)^0,w,c
 11597   0034C4  104C               	iorwf	(??_floorf+2)^0,w,c
 11598   0034C6  104D               	iorwf	(??_floorf+3)^0,w,c
 11599   0034C8  B4D8               	btfsc	status,2,c
 11600   0034CA  EF69  F01A         	goto	u8431
 11601   0034CE  EF6B  F01A         	goto	u8430
 11602   0034D2                     u8431:
 11603   0034D2  EF73  F01A         	goto	l7114
 11604   0034D6                     u8430:
 11605   0034D6                     
 11606                           ; BSR set to: 0
 11607   0034D6  0E00               	movlw	0
 11608   0034D8  6F66               	movwf	floorf@u& (0+255),b
 11609   0034DA  0E00               	movlw	0
 11610   0034DC  6F67               	movwf	(floorf@u+1)& (0+255),b
 11611   0034DE  0E80               	movlw	128
 11612   0034E0  6F68               	movwf	(floorf@u+2)& (0+255),b
 11613   0034E2  0EBF               	movlw	191
 11614   0034E4  6F69               	movwf	(floorf@u+3)& (0+255),b
 11615   0034E6                     l7114:
 11616                           
 11617                           ; BSR set to: 0
 11618   0034E6  C066  F046         	movff	floorf@u,?_floorf
 11619   0034EA  C067  F047         	movff	floorf@u+1,?_floorf+1
 11620   0034EE  C068  F048         	movff	floorf@u+2,?_floorf+2
 11621   0034F2  C069  F049         	movff	floorf@u+3,?_floorf+3
 11622   0034F6                     l1620:
 11623                           
 11624                           ; BSR set to: 0
 11625   0034F6  0012               	return		;funcret
 11626   0034F8                     __end_of_floorf:
 11627                           	callstack 0
 11628                           
 11629 ;; *************** function ___fpclassifyf *****************
 11630 ;; Defined at:
 11631 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  x               4    5[COMRAM] float 
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;  u               4   15[COMRAM] struct .
 11636 ;;  e               2   13[COMRAM] int 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  2    5[COMRAM] int 
 11639 ;; Registers used:
 11640 ;;		wreg, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;Total ram usage:       14 bytes
 11651 ;; Hardware stack levels used: 1
 11652 ;; Hardware stack levels required when called: 1
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_efgtoa
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text41
 11661   004512                     __ptext41:
 11662                           	callstack 0
 11663   004512                     ___fpclassifyf:
 11664                           	callstack 24
 11665   004512  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11666   004516  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11667   00451A  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11668   00451E  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11669   004522  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11670   004526  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11671   00452A  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11672   00452E  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11673   004532  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11674   004536  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11675   00453A  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11676   00453E  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11677   004542  0E18               	movlw	24
 11678   004544  EFA9  F022         	goto	u8250
 11679   004548                     u8255:
 11680   004548  90D8               	bcf	status,0,c
 11681   00454A  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11682   00454C  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11683   00454E  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11684   004550  320A               	rrcf	??___fpclassifyf^0,f,c
 11685   004552                     u8250:
 11686   004552  2EE8               	decfsz	wreg,f,c
 11687   004554  EFA4  F022         	goto	u8255
 11688   004558  500A               	movf	??___fpclassifyf^0,w,c
 11689   00455A  6E0E               	movwf	___fpclassifyf@e^0,c
 11690   00455C  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11691   00455E  500E               	movf	___fpclassifyf@e^0,w,c
 11692   004560  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11693   004562  A4D8               	btfss	status,2,c
 11694   004564  EFB6  F022         	goto	u8261
 11695   004568  EFB8  F022         	goto	u8260
 11696   00456C                     u8261:
 11697   00456C  EFD8  F022         	goto	l7068
 11698   004570                     u8260:
 11699   004570  90D8               	bcf	status,0,c
 11700   004572  3410               	rlcf	___fpclassifyf@u^0,w,c
 11701   004574  6E0A               	movwf	??___fpclassifyf^0,c
 11702   004576  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11703   004578  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11704   00457A  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11705   00457C  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11706   00457E  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11707   004580  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11708   004582  500A               	movf	??___fpclassifyf^0,w,c
 11709   004584  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11710   004586  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11711   004588  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11712   00458A  A4D8               	btfss	status,2,c
 11713   00458C  EFCA  F022         	goto	u8271
 11714   004590  EFCC  F022         	goto	u8270
 11715   004594                     u8271:
 11716   004594  EFD2  F022         	goto	l7064
 11717   004598                     u8270:
 11718   004598  0E00               	movlw	0
 11719   00459A  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11720   00459C  0E02               	movlw	2
 11721   00459E  6E06               	movwf	?___fpclassifyf^0,c
 11722   0045A0  EF07  F023         	goto	l1606
 11723   0045A4                     l7064:
 11724   0045A4  0E00               	movlw	0
 11725   0045A6  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11726   0045A8  0E03               	movlw	3
 11727   0045AA  6E06               	movwf	?___fpclassifyf^0,c
 11728   0045AC  EF07  F023         	goto	l1606
 11729   0045B0                     l7068:
 11730   0045B0  280E               	incf	___fpclassifyf@e^0,w,c
 11731   0045B2  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11732   0045B4  A4D8               	btfss	status,2,c
 11733   0045B6  EFDF  F022         	goto	u8281
 11734   0045BA  EFE1  F022         	goto	u8280
 11735   0045BE                     u8281:
 11736   0045BE  EF03  F023         	goto	l7074
 11737   0045C2                     u8280:
 11738   0045C2  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11739   0045C6  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11740   0045CA  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11741   0045CE  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11742   0045D2  0E09               	movlw	9
 11743   0045D4                     u8295:
 11744   0045D4  90D8               	bcf	status,0,c
 11745   0045D6  360A               	rlcf	??___fpclassifyf^0,f,c
 11746   0045D8  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11747   0045DA  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11748   0045DC  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11749   0045DE  2EE8               	decfsz	wreg,f,c
 11750   0045E0  EFEA  F022         	goto	u8295
 11751   0045E4  500A               	movf	??___fpclassifyf^0,w,c
 11752   0045E6  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11753   0045E8  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11754   0045EA  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11755   0045EC  B4D8               	btfsc	status,2,c
 11756   0045EE  EFFB  F022         	goto	u8301
 11757   0045F2  EFFE  F022         	goto	u8300
 11758   0045F6                     u8301:
 11759   0045F6  0E01               	movlw	1
 11760   0045F8  EFFF  F022         	goto	u8310
 11761   0045FC                     u8300:
 11762   0045FC  0E00               	movlw	0
 11763   0045FE                     u8310:
 11764   0045FE  6E06               	movwf	?___fpclassifyf^0,c
 11765   004600  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11766   004602  EF07  F023         	goto	l1606
 11767   004606                     l7074:
 11768   004606  0E00               	movlw	0
 11769   004608  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11770   00460A  0E04               	movlw	4
 11771   00460C  6E06               	movwf	?___fpclassifyf^0,c
 11772   00460E                     l1606:
 11773   00460E  0012               	return		;funcret
 11774   004610                     __end_of___fpclassifyf:
 11775                           	callstack 0
 11776                           
 11777 ;; *************** function ___fltol *****************
 11778 ;; Defined at:
 11779 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  f1              4    4[BANK0 ] int 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  exp1            1   82[COMRAM] unsigned char 
 11784 ;;  sign1           1   81[COMRAM] unsigned char 
 11785 ;; Return value:  Size  Location     Type
 11786 ;;                  4    4[BANK0 ] long 
 11787 ;; Registers used:
 11788 ;;		wreg, status,2, status,0
 11789 ;; Tracked objects:
 11790 ;;		On entry : 0/0
 11791 ;;		On exit  : 0/0
 11792 ;;		Unchanged: 0/0
 11793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11794 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;Total ram usage:       10 bytes
 11799 ;; Hardware stack levels used: 1
 11800 ;; Hardware stack levels required when called: 1
 11801 ;; This function calls:
 11802 ;;		Nothing
 11803 ;; This function is called by:
 11804 ;;		_runDAC
 11805 ;;		_efgtoa
 11806 ;;		___rem_pio2f
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text42
 11811   004306                     __ptext42:
 11812                           	callstack 0
 11813   004306                     ___fltol:
 11814                           	callstack 24
 11815   004306  0100               	movlb	0	; () banked
 11816   004308  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11817   00430A  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11818   00430C  6E53               	movwf	___fltol@exp1^0,c
 11819   00430E  5053               	movf	___fltol@exp1^0,w,c
 11820   004310  A4D8               	btfss	status,2,c
 11821   004312  EF8D  F021         	goto	u8071
 11822   004316  EF8F  F021         	goto	u8070
 11823   00431A                     u8071:
 11824   00431A  EF99  F021         	goto	l6960
 11825   00431E                     u8070:
 11826   00431E                     l6956:
 11827                           
 11828                           ; BSR set to: 0
 11829   00431E  0E00               	movlw	0
 11830   004320  6F64               	movwf	?___fltol& (0+255),b
 11831   004322  0E00               	movlw	0
 11832   004324  6F65               	movwf	(?___fltol+1)& (0+255),b
 11833   004326  0E00               	movlw	0
 11834   004328  6F66               	movwf	(?___fltol+2)& (0+255),b
 11835   00432A  0E00               	movlw	0
 11836   00432C  6F67               	movwf	(?___fltol+3)& (0+255),b
 11837   00432E  EF06  F022         	goto	l1007
 11838   004332                     l6960:
 11839                           
 11840                           ; BSR set to: 0
 11841   004332  C064  F068         	movff	___fltol@f1,??___fltol
 11842   004336  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11843   00433A  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11844   00433E  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11845   004342  0E20               	movlw	32
 11846   004344  EFA9  F021         	goto	u8080
 11847   004348                     u8085:
 11848   004348  90D8               	bcf	status,0,c
 11849   00434A  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11850   00434C  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11851   00434E  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11852   004350  3368               	rrcf	??___fltol& (0+255),f,b
 11853   004352                     u8080:
 11854   004352  2EE8               	decfsz	wreg,f,c
 11855   004354  EFA4  F021         	goto	u8085
 11856   004358  5168               	movf	??___fltol& (0+255),w,b
 11857   00435A  6E52               	movwf	___fltol@sign1^0,c
 11858   00435C                     
 11859                           ; BSR set to: 0
 11860   00435C  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11861   00435E                     
 11862                           ; BSR set to: 0
 11863   00435E  0EFF               	movlw	255
 11864   004360  1764               	andwf	___fltol@f1& (0+255),f,b
 11865   004362  0EFF               	movlw	255
 11866   004364  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11867   004366  0EFF               	movlw	255
 11868   004368  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11869   00436A  0E00               	movlw	0
 11870   00436C  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11871   00436E                     
 11872                           ; BSR set to: 0
 11873   00436E  0E96               	movlw	150
 11874   004370  5E53               	subwf	___fltol@exp1^0,f,c
 11875   004372                     
 11876                           ; BSR set to: 0
 11877   004372  BE53               	btfsc	___fltol@exp1^0,7,c
 11878   004374  EFC0  F021         	goto	u8090
 11879   004378  EFBE  F021         	goto	u8091
 11880   00437C                     u8091:
 11881   00437C  EFD6  F021         	goto	l6980
 11882   004380                     u8090:
 11883   004380                     
 11884                           ; BSR set to: 0
 11885   004380  5053               	movf	___fltol@exp1^0,w,c
 11886   004382  0A80               	xorlw	128
 11887   004384  0F97               	addlw	151
 11888   004386  B0D8               	btfsc	status,0,c
 11889   004388  EFC8  F021         	goto	u8101
 11890   00438C  EFCA  F021         	goto	u8100
 11891   004390                     u8101:
 11892   004390  EFCC  F021         	goto	l6976
 11893   004394                     u8100:
 11894   004394  EF8F  F021         	goto	l6956
 11895   004398                     l6976:
 11896                           
 11897                           ; BSR set to: 0
 11898   004398  90D8               	bcf	status,0,c
 11899   00439A  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11900   00439C  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11901   00439E  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11902   0043A0  3364               	rrcf	___fltol@f1& (0+255),f,b
 11903   0043A2                     
 11904                           ; BSR set to: 0
 11905   0043A2  3E53               	incfsz	___fltol@exp1^0,f,c
 11906   0043A4  EFCC  F021         	goto	l6976
 11907   0043A8  EFEE  F021         	goto	l6990
 11908   0043AC                     l6980:
 11909                           
 11910                           ; BSR set to: 0
 11911   0043AC  0E1F               	movlw	31
 11912   0043AE  6453               	cpfsgt	___fltol@exp1^0,c
 11913   0043B0  EFDC  F021         	goto	u8111
 11914   0043B4  EFDE  F021         	goto	u8110
 11915   0043B8                     u8111:
 11916   0043B8  EFE6  F021         	goto	l6988
 11917   0043BC                     u8110:
 11918   0043BC  EF8F  F021         	goto	l6956
 11919   0043C0                     l6986:
 11920                           
 11921                           ; BSR set to: 0
 11922   0043C0  90D8               	bcf	status,0,c
 11923   0043C2  3764               	rlcf	___fltol@f1& (0+255),f,b
 11924   0043C4  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11925   0043C6  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11926   0043C8  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11927   0043CA  0653               	decf	___fltol@exp1^0,f,c
 11928   0043CC                     l6988:
 11929                           
 11930                           ; BSR set to: 0
 11931   0043CC  5053               	movf	___fltol@exp1^0,w,c
 11932   0043CE  A4D8               	btfss	status,2,c
 11933   0043D0  EFEC  F021         	goto	u8121
 11934   0043D4  EFEE  F021         	goto	u8120
 11935   0043D8                     u8121:
 11936   0043D8  EFE0  F021         	goto	l6986
 11937   0043DC                     u8120:
 11938   0043DC                     l6990:
 11939                           
 11940                           ; BSR set to: 0
 11941   0043DC  5052               	movf	___fltol@sign1^0,w,c
 11942   0043DE  B4D8               	btfsc	status,2,c
 11943   0043E0  EFF4  F021         	goto	u8131
 11944   0043E4  EFF6  F021         	goto	u8130
 11945   0043E8                     u8131:
 11946   0043E8  EFFE  F021         	goto	l6994
 11947   0043EC                     u8130:
 11948   0043EC                     
 11949                           ; BSR set to: 0
 11950   0043EC  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11951   0043EE  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11952   0043F0  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11953   0043F2  6D64               	negf	___fltol@f1& (0+255),b
 11954   0043F4  0E00               	movlw	0
 11955   0043F6  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11956   0043F8  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11957   0043FA  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11958   0043FC                     l6994:
 11959                           
 11960                           ; BSR set to: 0
 11961   0043FC  C064  F064         	movff	___fltol@f1,?___fltol
 11962   004400  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11963   004404  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11964   004408  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11965   00440C                     l1007:
 11966                           
 11967                           ; BSR set to: 0
 11968   00440C  0012               	return		;funcret
 11969   00440E                     __end_of___fltol:
 11970                           	callstack 0
 11971                           
 11972 ;; *************** function ___flsub *****************
 11973 ;; Defined at:
 11974 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;  b               4    4[BANK0 ] long 
 11977 ;;  a               4    8[BANK0 ] long 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;		None
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  4    4[BANK0 ] long 
 11982 ;; Registers used:
 11983 ;;		wreg, status,2, status,0, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 0/0
 11986 ;;		On exit  : 0/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11989 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11993 ;;Total ram usage:        8 bytes
 11994 ;; Hardware stack levels used: 1
 11995 ;; Hardware stack levels required when called: 2
 11996 ;; This function calls:
 11997 ;;		___fladd
 11998 ;; This function is called by:
 11999 ;;		_efgtoa
 12000 ;;		___rem_pio2f
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text43
 12005   005010                     __ptext43:
 12006                           	callstack 0
 12007   005010                     ___flsub:
 12008                           	callstack 23
 12009   005010  0E00               	movlw	0
 12010   005012  0100               	movlb	0	; () banked
 12011   005014  1B68               	xorwf	___flsub@a& (0+255),f,b
 12012   005016  0E00               	movlw	0
 12013   005018  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 12014   00501A  0E00               	movlw	0
 12015   00501C  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 12016   00501E  0E80               	movlw	128
 12017   005020  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 12018   005022                     
 12019                           ; BSR set to: 0
 12020   005022  C064  F046         	movff	___flsub@b,___fladd@b
 12021   005026  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 12022   00502A  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 12023   00502E  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 12024   005032  C068  F04A         	movff	___flsub@a,___fladd@a
 12025   005036  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 12026   00503A  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 12027   00503E  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 12028   005042  ECD9  F00A         	call	___fladd	;wreg free
 12029   005046  C046  F064         	movff	?___fladd,?___flsub
 12030   00504A  C047  F065         	movff	?___fladd+1,?___flsub+1
 12031   00504E  C048  F066         	movff	?___fladd+2,?___flsub+2
 12032   005052  C049  F067         	movff	?___fladd+3,?___flsub+3
 12033   005056  0012               	return		;funcret
 12034   005058                     __end_of___flsub:
 12035                           	callstack 0
 12036                           
 12037 ;; *************** function ___fladd *****************
 12038 ;; Defined at:
 12039 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 12040 ;; Parameters:    Size  Location     Type
 12041 ;;  b               4   69[COMRAM] long 
 12042 ;;  a               4   73[COMRAM] long 
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;  grs             1    3[BANK0 ] unsigned char 
 12045 ;;  bexp            1    2[BANK0 ] unsigned char 
 12046 ;;  aexp            1    1[BANK0 ] unsigned char 
 12047 ;;  signs           1    0[BANK0 ] unsigned char 
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  4   69[COMRAM] unsigned char 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12057 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12058 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12060 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12061 ;;Total ram usage:       16 bytes
 12062 ;; Hardware stack levels used: 1
 12063 ;; Hardware stack levels required when called: 1
 12064 ;; This function calls:
 12065 ;;		Nothing
 12066 ;; This function is called by:
 12067 ;;		_runDAC
 12068 ;;		___flsub
 12069 ;;		_efgtoa
 12070 ;;		_sinf
 12071 ;;		___cosdf
 12072 ;;		___rem_pio2f
 12073 ;;		___sindf
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text44
 12078   0015B2                     __ptext44:
 12079                           	callstack 0
 12080   0015B2                     ___fladd:
 12081                           	callstack 23
 12082   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 12083   0015B4  0B80               	andlw	128
 12084   0015B6  0100               	movlb	0	; () banked
 12085   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 12086   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 12087   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 12088   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 12089   0015C0                     
 12090                           ; BSR set to: 0
 12091   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 12092   0015C2  EFE5  F00A         	goto	u7041
 12093   0015C6  EFE7  F00A         	goto	u7040
 12094   0015CA                     u7041:
 12095   0015CA  EFE8  F00A         	goto	l6344
 12096   0015CE                     u7040:
 12097   0015CE                     
 12098                           ; BSR set to: 0
 12099   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 12100   0015D0                     l6344:
 12101                           
 12102                           ; BSR set to: 0
 12103   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 12104   0015D2  B4D8               	btfsc	status,2,c
 12105   0015D4  EFEE  F00A         	goto	u7051
 12106   0015D8  EFF0  F00A         	goto	u7050
 12107   0015DC                     u7051:
 12108   0015DC  EF05  F00B         	goto	l6354
 12109   0015E0                     u7050:
 12110   0015E0                     
 12111                           ; BSR set to: 0
 12112   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12113   0015E2  A4D8               	btfss	status,2,c
 12114   0015E4  EFF6  F00A         	goto	u7061
 12115   0015E8  EFF8  F00A         	goto	u7060
 12116   0015EC                     u7061:
 12117   0015EC  EF00  F00B         	goto	l6350
 12118   0015F0                     u7060:
 12119   0015F0                     
 12120                           ; BSR set to: 0
 12121   0015F0  0E00               	movlw	0
 12122   0015F2  6E46               	movwf	___fladd@b^0,c
 12123   0015F4  0E00               	movlw	0
 12124   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 12125   0015F8  0E00               	movlw	0
 12126   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 12127   0015FC  0E00               	movlw	0
 12128   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 12129   001600                     l6350:
 12130                           
 12131                           ; BSR set to: 0
 12132   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 12133   001602                     
 12134                           ; BSR set to: 0
 12135   001602  0E00               	movlw	0
 12136   001604  6E49               	movwf	(___fladd@b+3)^0,c
 12137   001606  EF0D  F00B         	goto	l6356
 12138   00160A                     l6354:
 12139                           
 12140                           ; BSR set to: 0
 12141   00160A  0E00               	movlw	0
 12142   00160C  6E46               	movwf	___fladd@b^0,c
 12143   00160E  0E00               	movlw	0
 12144   001610  6E47               	movwf	(___fladd@b+1)^0,c
 12145   001612  0E00               	movlw	0
 12146   001614  6E48               	movwf	(___fladd@b+2)^0,c
 12147   001616  0E00               	movlw	0
 12148   001618  6E49               	movwf	(___fladd@b+3)^0,c
 12149   00161A                     l6356:
 12150                           
 12151                           ; BSR set to: 0
 12152   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 12153   00161C  0B80               	andlw	128
 12154   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 12155   001620                     
 12156                           ; BSR set to: 0
 12157   001620  5160               	movf	___fladd@signs& (0+255),w,b
 12158   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 12159   001624  B4D8               	btfsc	status,2,c
 12160   001626  EF17  F00B         	goto	u7071
 12161   00162A  EF19  F00B         	goto	u7070
 12162   00162E                     u7071:
 12163   00162E  EF1A  F00B         	goto	l6362
 12164   001632                     u7070:
 12165   001632                     
 12166                           ; BSR set to: 0
 12167   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 12168   001634                     l6362:
 12169                           
 12170                           ; BSR set to: 0
 12171   001634  504D               	movf	(___fladd@a+3)^0,w,c
 12172   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 12173   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 12174   00163A                     
 12175                           ; BSR set to: 0
 12176   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 12177   00163C  EF22  F00B         	goto	u7081
 12178   001640  EF24  F00B         	goto	u7080
 12179   001644                     u7081:
 12180   001644  EF25  F00B         	goto	l6368
 12181   001648                     u7080:
 12182   001648                     
 12183                           ; BSR set to: 0
 12184   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 12185   00164A                     l6368:
 12186                           
 12187                           ; BSR set to: 0
 12188   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 12189   00164C  B4D8               	btfsc	status,2,c
 12190   00164E  EF2B  F00B         	goto	u7091
 12191   001652  EF2D  F00B         	goto	u7090
 12192   001656                     u7091:
 12193   001656  EF42  F00B         	goto	l6378
 12194   00165A                     u7090:
 12195   00165A                     
 12196                           ; BSR set to: 0
 12197   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 12198   00165C  A4D8               	btfss	status,2,c
 12199   00165E  EF33  F00B         	goto	u7101
 12200   001662  EF35  F00B         	goto	u7100
 12201   001666                     u7101:
 12202   001666  EF3D  F00B         	goto	l6374
 12203   00166A                     u7100:
 12204   00166A                     
 12205                           ; BSR set to: 0
 12206   00166A  0E00               	movlw	0
 12207   00166C  6E4A               	movwf	___fladd@a^0,c
 12208   00166E  0E00               	movlw	0
 12209   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 12210   001672  0E00               	movlw	0
 12211   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 12212   001676  0E00               	movlw	0
 12213   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 12214   00167A                     l6374:
 12215                           
 12216                           ; BSR set to: 0
 12217   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 12218   00167C                     
 12219                           ; BSR set to: 0
 12220   00167C  0E00               	movlw	0
 12221   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 12222   001680  EF4A  F00B         	goto	l6380
 12223   001684                     l6378:
 12224                           
 12225                           ; BSR set to: 0
 12226   001684  0E00               	movlw	0
 12227   001686  6E4A               	movwf	___fladd@a^0,c
 12228   001688  0E00               	movlw	0
 12229   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 12230   00168C  0E00               	movlw	0
 12231   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 12232   001690  0E00               	movlw	0
 12233   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 12234   001694                     l6380:
 12235                           
 12236                           ; BSR set to: 0
 12237   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 12238   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 12239   001698  B0D8               	btfsc	status,0,c
 12240   00169A  EF51  F00B         	goto	u7111
 12241   00169E  EF53  F00B         	goto	u7110
 12242   0016A2                     u7111:
 12243   0016A2  EF7A  F00B         	goto	l6416
 12244   0016A6                     u7110:
 12245   0016A6                     
 12246                           ; BSR set to: 0
 12247   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 12248   0016A8  EF58  F00B         	goto	u7121
 12249   0016AC  EF5A  F00B         	goto	u7120
 12250   0016B0                     u7121:
 12251   0016B0  EF5C  F00B         	goto	l6386
 12252   0016B4                     u7120:
 12253   0016B4                     
 12254                           ; BSR set to: 0
 12255   0016B4  0E80               	movlw	128
 12256   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12257   0016B8                     l6386:
 12258                           
 12259                           ; BSR set to: 0
 12260   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 12261   0016BC                     
 12262                           ; BSR set to: 0
 12263   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12264   0016C0                     
 12265                           ; BSR set to: 0
 12266   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 12267   0016C4                     
 12268                           ; BSR set to: 0
 12269   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 12270   0016C8                     
 12271                           ; BSR set to: 0
 12272   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12273   0016CC                     
 12274                           ; BSR set to: 0
 12275   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12276   0016D0                     
 12277                           ; BSR set to: 0
 12278   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12279   0016D4                     
 12280                           ; BSR set to: 0
 12281   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12282   0016D8                     
 12283                           ; BSR set to: 0
 12284   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12285   0016DC                     
 12286                           ; BSR set to: 0
 12287   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12288   0016E0                     
 12289                           ; BSR set to: 0
 12290   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12291   0016E4                     
 12292                           ; BSR set to: 0
 12293   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12294   0016E8                     
 12295                           ; BSR set to: 0
 12296   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12297   0016EC                     
 12298                           ; BSR set to: 0
 12299   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12300   0016F0                     
 12301                           ; BSR set to: 0
 12302   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12303   0016F4                     l6416:
 12304                           
 12305                           ; BSR set to: 0
 12306   0016F4  0E00               	movlw	0
 12307   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12308   0016F8                     
 12309                           ; BSR set to: 0
 12310   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12311   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12312   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12313   001700  5E4E               	subwf	??___fladd^0,f,c
 12314   001702  0E00               	movlw	0
 12315   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12316   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12317   001708  EF8F  F00B         	goto	u7131
 12318   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12319   00170E  E109               	bnz	u7130
 12320   001710  0E1A               	movlw	26
 12321   001712  5C4E               	subwf	??___fladd^0,w,c
 12322   001714  A0D8               	btfss	status,0,c
 12323   001716  EF8F  F00B         	goto	u7131
 12324   00171A  EF91  F00B         	goto	u7130
 12325   00171E                     u7131:
 12326   00171E  EFC8  F00B         	goto	l1239
 12327   001722                     u7130:
 12328   001722                     
 12329                           ; BSR set to: 0
 12330   001722  5046               	movf	___fladd@b^0,w,c
 12331   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12332   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12333   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12334   00172A  A4D8               	btfss	status,2,c
 12335   00172C  EF9A  F00B         	goto	u7141
 12336   001730  EF9D  F00B         	goto	u7140
 12337   001734                     u7141:
 12338   001734  0E01               	movlw	1
 12339   001736  EF9E  F00B         	goto	u7150
 12340   00173A                     u7140:
 12341   00173A  0E00               	movlw	0
 12342   00173C                     u7150:
 12343   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12344   00173E                     
 12345                           ; BSR set to: 0
 12346   00173E  0E00               	movlw	0
 12347   001740  6E46               	movwf	___fladd@b^0,c
 12348   001742  0E00               	movlw	0
 12349   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12350   001746  0E00               	movlw	0
 12351   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12352   00174A  0E00               	movlw	0
 12353   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12354   00174E                     
 12355                           ; BSR set to: 0
 12356   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12357   001752  EFD1  F00B         	goto	l1238
 12358   001756                     l1240:
 12359                           
 12360                           ; BSR set to: 0
 12361   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12362   001758  EFB0  F00B         	goto	u7161
 12363   00175C  EFB2  F00B         	goto	u7160
 12364   001760                     u7161:
 12365   001760  EFB8  F00B         	goto	l6428
 12366   001764                     u7160:
 12367   001764                     
 12368                           ; BSR set to: 0
 12369   001764  90D8               	bcf	status,0,c
 12370   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12371   001768  0901               	iorlw	1
 12372   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12373   00176C  EFBA  F00B         	goto	l6430
 12374   001770                     l6428:
 12375                           
 12376                           ; BSR set to: 0
 12377   001770  90D8               	bcf	status,0,c
 12378   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12379   001774                     l6430:
 12380                           
 12381                           ; BSR set to: 0
 12382   001774  A046               	btfss	___fladd@b^0,0,c
 12383   001776  EFBF  F00B         	goto	u7171
 12384   00177A  EFC1  F00B         	goto	u7170
 12385   00177E                     u7171:
 12386   00177E  EFC2  F00B         	goto	l6434
 12387   001782                     u7170:
 12388   001782                     
 12389                           ; BSR set to: 0
 12390   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12391   001784                     l6434:
 12392                           
 12393                           ; BSR set to: 0
 12394   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12395   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12396   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12397   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12398   00178C  3246               	rrcf	___fladd@b^0,f,c
 12399   00178E                     
 12400                           ; BSR set to: 0
 12401   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12402   001790                     l1239:
 12403                           
 12404                           ; BSR set to: 0
 12405   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12406   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12407   001794  A0D8               	btfss	status,0,c
 12408   001796  EFCF  F00B         	goto	u7181
 12409   00179A  EFD1  F00B         	goto	u7180
 12410   00179E                     u7181:
 12411   00179E  EFAB  F00B         	goto	l1240
 12412   0017A2                     u7180:
 12413   0017A2                     l1238:
 12414                           
 12415                           ; BSR set to: 0
 12416   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12417   0017A4  EFD6  F00B         	goto	u7191
 12418   0017A8  EFD8  F00B         	goto	u7190
 12419   0017AC                     u7191:
 12420   0017AC  EF18  F00C         	goto	l6462
 12421   0017B0                     u7190:
 12422   0017B0                     
 12423                           ; BSR set to: 0
 12424   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12425   0017B2  A4D8               	btfss	status,2,c
 12426   0017B4  EFDE  F00B         	goto	u7201
 12427   0017B8  EFE0  F00B         	goto	u7200
 12428   0017BC                     u7201:
 12429   0017BC  EFEA  F00B         	goto	l6444
 12430   0017C0                     u7200:
 12431   0017C0                     
 12432                           ; BSR set to: 0
 12433   0017C0  0E00               	movlw	0
 12434   0017C2  6E46               	movwf	?___fladd^0,c
 12435   0017C4  0E00               	movlw	0
 12436   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12437   0017C8  0E00               	movlw	0
 12438   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12439   0017CC  0E00               	movlw	0
 12440   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12441   0017D0  EF39  F00D         	goto	l1247
 12442   0017D4                     l6444:
 12443                           
 12444                           ; BSR set to: 0
 12445   0017D4  504A               	movf	___fladd@a^0,w,c
 12446   0017D6  2646               	addwf	___fladd@b^0,f,c
 12447   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12448   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12449   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12450   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12451   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12452   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12453   0017E4                     
 12454                           ; BSR set to: 0
 12455   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12456   0017E6  EFF7  F00B         	goto	u7211
 12457   0017EA  EFF9  F00B         	goto	u7210
 12458   0017EE                     u7211:
 12459   0017EE  EFA5  F00C         	goto	l6498
 12460   0017F2                     u7210:
 12461   0017F2                     
 12462                           ; BSR set to: 0
 12463   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12464   0017F4  EFFE  F00B         	goto	u7221
 12465   0017F8  EF00  F00C         	goto	u7220
 12466   0017FC                     u7221:
 12467   0017FC  EF06  F00C         	goto	l6452
 12468   001800                     u7220:
 12469   001800                     
 12470                           ; BSR set to: 0
 12471   001800  90D8               	bcf	status,0,c
 12472   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12473   001804  0901               	iorlw	1
 12474   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12475   001808  EF08  F00C         	goto	l6454
 12476   00180C                     l6452:
 12477                           
 12478                           ; BSR set to: 0
 12479   00180C  90D8               	bcf	status,0,c
 12480   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12481   001810                     l6454:
 12482                           
 12483                           ; BSR set to: 0
 12484   001810  A046               	btfss	___fladd@b^0,0,c
 12485   001812  EF0D  F00C         	goto	u7231
 12486   001816  EF0F  F00C         	goto	u7230
 12487   00181A                     u7231:
 12488   00181A  EF10  F00C         	goto	l6458
 12489   00181E                     u7230:
 12490   00181E                     
 12491                           ; BSR set to: 0
 12492   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12493   001820                     l6458:
 12494                           
 12495                           ; BSR set to: 0
 12496   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12497   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12498   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12499   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12500   001828  3246               	rrcf	___fladd@b^0,f,c
 12501   00182A                     
 12502                           ; BSR set to: 0
 12503   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12504   00182C  EFA5  F00C         	goto	l6498
 12505   001830                     l6462:
 12506                           
 12507                           ; BSR set to: 0
 12508   001830  504A               	movf	___fladd@a^0,w,c
 12509   001832  5C46               	subwf	___fladd@b^0,w,c
 12510   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12511   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12512   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12513   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12514   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12515   00183E  0A80               	xorlw	128
 12516   001840  6E4E               	movwf	??___fladd^0,c
 12517   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12518   001844  0A80               	xorlw	128
 12519   001846  584E               	subwfb	??___fladd^0,w,c
 12520   001848  B0D8               	btfsc	status,0,c
 12521   00184A  EF29  F00C         	goto	u7241
 12522   00184E  EF2B  F00C         	goto	u7240
 12523   001852                     u7241:
 12524   001852  EF56  F00C         	goto	l6472
 12525   001856                     u7240:
 12526   001856                     
 12527                           ; BSR set to: 0
 12528   001856  5046               	movf	___fladd@b^0,w,c
 12529   001858  5C4A               	subwf	___fladd@a^0,w,c
 12530   00185A  6E4E               	movwf	??___fladd^0,c
 12531   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12532   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12533   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12534   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12535   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12536   001866  6E50               	movwf	(??___fladd+2)^0,c
 12537   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12538   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12539   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12540   00186E  0EFF               	movlw	255
 12541   001870  244E               	addwf	??___fladd^0,w,c
 12542   001872  6E46               	movwf	___fladd@b^0,c
 12543   001874  0EFF               	movlw	255
 12544   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12545   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12546   00187A  0EFF               	movlw	255
 12547   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12548   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12549   001880  0EFF               	movlw	255
 12550   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12551   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12552   001886  0E80               	movlw	128
 12553   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12554   00188A                     
 12555                           ; BSR set to: 0
 12556   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12557   00188C                     
 12558                           ; BSR set to: 0
 12559   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12560   00188E  A4D8               	btfss	status,2,c
 12561   001890  EF4C  F00C         	goto	u7251
 12562   001894  EF4E  F00C         	goto	u7250
 12563   001898                     u7251:
 12564   001898  EF5E  F00C         	goto	l1255
 12565   00189C                     u7250:
 12566   00189C                     
 12567                           ; BSR set to: 0
 12568   00189C  0E01               	movlw	1
 12569   00189E  2646               	addwf	___fladd@b^0,f,c
 12570   0018A0  0E00               	movlw	0
 12571   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12572   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12573   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12574   0018A8  EF5E  F00C         	goto	l1255
 12575   0018AC                     l6472:
 12576                           
 12577                           ; BSR set to: 0
 12578   0018AC  504A               	movf	___fladd@a^0,w,c
 12579   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12580   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12581   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12582   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12583   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12584   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12585   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12586   0018BC                     l1255:
 12587                           
 12588                           ; BSR set to: 0
 12589   0018BC  5046               	movf	___fladd@b^0,w,c
 12590   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12591   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12592   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12593   0018C4  A4D8               	btfss	status,2,c
 12594   0018C6  EF67  F00C         	goto	u7261
 12595   0018CA  EF69  F00C         	goto	u7260
 12596   0018CE                     u7261:
 12597   0018CE  EF9E  F00C         	goto	l6496
 12598   0018D2                     u7260:
 12599   0018D2                     
 12600                           ; BSR set to: 0
 12601   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12602   0018D4  A4D8               	btfss	status,2,c
 12603   0018D6  EF6F  F00C         	goto	u7271
 12604   0018DA  EF71  F00C         	goto	u7270
 12605   0018DE                     u7271:
 12606   0018DE  EF9E  F00C         	goto	l6496
 12607   0018E2                     u7270:
 12608   0018E2                     
 12609                           ; BSR set to: 0
 12610   0018E2  0E00               	movlw	0
 12611   0018E4  6E46               	movwf	?___fladd^0,c
 12612   0018E6  0E00               	movlw	0
 12613   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12614   0018EA  0E00               	movlw	0
 12615   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12616   0018EE  0E00               	movlw	0
 12617   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12618   0018F2  EF39  F00D         	goto	l1247
 12619   0018F6                     l6480:
 12620                           
 12621                           ; BSR set to: 0
 12622   0018F6  90D8               	bcf	status,0,c
 12623   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12624   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12625   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12626   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12627   001900                     
 12628                           ; BSR set to: 0
 12629   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12630   001902  EF85  F00C         	goto	u7281
 12631   001906  EF87  F00C         	goto	u7280
 12632   00190A                     u7281:
 12633   00190A  EF88  F00C         	goto	l6486
 12634   00190E                     u7280:
 12635   00190E                     
 12636                           ; BSR set to: 0
 12637   00190E  8046               	bsf	___fladd@b^0,0,c
 12638   001910                     l6486:
 12639                           
 12640                           ; BSR set to: 0
 12641   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12642   001912  EF8D  F00C         	goto	u7291
 12643   001916  EF8F  F00C         	goto	u7290
 12644   00191A                     u7291:
 12645   00191A  EF93  F00C         	goto	l6490
 12646   00191E                     u7290:
 12647   00191E                     
 12648                           ; BSR set to: 0
 12649   00191E  80D8               	bsf	status,0,c
 12650   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12651   001922  EF95  F00C         	goto	l6492
 12652   001926                     l6490:
 12653                           
 12654                           ; BSR set to: 0
 12655   001926  90D8               	bcf	status,0,c
 12656   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12657   00192A                     l6492:
 12658                           
 12659                           ; BSR set to: 0
 12660   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12661   00192C  B4D8               	btfsc	status,2,c
 12662   00192E  EF9B  F00C         	goto	u7301
 12663   001932  EF9D  F00C         	goto	u7300
 12664   001936                     u7301:
 12665   001936  EF9E  F00C         	goto	l6496
 12666   00193A                     u7300:
 12667   00193A                     
 12668                           ; BSR set to: 0
 12669   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12670   00193C                     l6496:
 12671                           
 12672                           ; BSR set to: 0
 12673   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12674   00193E  EFA3  F00C         	goto	u7311
 12675   001942  EFA5  F00C         	goto	u7310
 12676   001946                     u7311:
 12677   001946  EF7B  F00C         	goto	l6480
 12678   00194A                     u7310:
 12679   00194A                     l6498:
 12680                           
 12681                           ; BSR set to: 0
 12682   00194A  0E00               	movlw	0
 12683   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12684   00194E                     
 12685                           ; BSR set to: 0
 12686   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12687   001950  EFAC  F00C         	goto	u7321
 12688   001954  EFAE  F00C         	goto	u7320
 12689   001958                     u7321:
 12690   001958  EFC6  F00C         	goto	l1264
 12691   00195C                     u7320:
 12692   00195C                     
 12693                           ; BSR set to: 0
 12694   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12695   001960  0E7F               	movlw	127
 12696   001962  164E               	andwf	??___fladd^0,f,c
 12697   001964  B4D8               	btfsc	status,2,c
 12698   001966  EFB7  F00C         	goto	u7331
 12699   00196A  EFB9  F00C         	goto	u7330
 12700   00196E                     u7331:
 12701   00196E  EFBD  F00C         	goto	l1265
 12702   001972                     u7330:
 12703   001972                     l6504:
 12704                           
 12705                           ; BSR set to: 0
 12706   001972  0E01               	movlw	1
 12707   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12708   001976  EFC6  F00C         	goto	l1264
 12709   00197A                     l1265:
 12710                           
 12711                           ; BSR set to: 0
 12712   00197A  A046               	btfss	___fladd@b^0,0,c
 12713   00197C  EFC2  F00C         	goto	u7341
 12714   001980  EFC4  F00C         	goto	u7340
 12715   001984                     u7341:
 12716   001984  EFC6  F00C         	goto	l1264
 12717   001988                     u7340:
 12718   001988  EFB9  F00C         	goto	l6504
 12719   00198C                     l1264:
 12720                           
 12721                           ; BSR set to: 0
 12722   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12723   00198E  B4D8               	btfsc	status,2,c
 12724   001990  EFCC  F00C         	goto	u7351
 12725   001994  EFCE  F00C         	goto	u7350
 12726   001998                     u7351:
 12727   001998  EFF9  F00C         	goto	l6516
 12728   00199C                     u7350:
 12729   00199C                     
 12730                           ; BSR set to: 0
 12731   00199C  0E01               	movlw	1
 12732   00199E  2646               	addwf	___fladd@b^0,f,c
 12733   0019A0  0E00               	movlw	0
 12734   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12735   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12736   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12737   0019A8                     
 12738                           ; BSR set to: 0
 12739   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12740   0019AA  EFD9  F00C         	goto	u7361
 12741   0019AE  EFDB  F00C         	goto	u7360
 12742   0019B2                     u7361:
 12743   0019B2  EFF9  F00C         	goto	l6516
 12744   0019B6                     u7360:
 12745   0019B6                     
 12746                           ; BSR set to: 0
 12747   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12748   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12749   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12750   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12751   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12752   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12753   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12754   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12755   0019CE  324E               	rrcf	??___fladd^0,f,c
 12756   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12757   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12758   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12759   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12760   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12761   0019E2  B4D8               	btfsc	status,2,c
 12762   0019E4  EFF6  F00C         	goto	u7371
 12763   0019E8  EFF8  F00C         	goto	u7370
 12764   0019EC                     u7371:
 12765   0019EC  EFF9  F00C         	goto	l6516
 12766   0019F0                     u7370:
 12767   0019F0                     
 12768                           ; BSR set to: 0
 12769   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12770   0019F2                     l6516:
 12771                           
 12772                           ; BSR set to: 0
 12773   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12774   0019F4  B4D8               	btfsc	status,2,c
 12775   0019F6  EFFF  F00C         	goto	u7381
 12776   0019FA  EF01  F00D         	goto	u7380
 12777   0019FE                     u7381:
 12778   0019FE  EF09  F00D         	goto	l6520
 12779   001A02                     u7380:
 12780   001A02                     
 12781                           ; BSR set to: 0
 12782   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12783   001A04  A4D8               	btfss	status,2,c
 12784   001A06  EF07  F00D         	goto	u7391
 12785   001A0A  EF09  F00D         	goto	u7390
 12786   001A0E                     u7391:
 12787   001A0E  EF1B  F00D         	goto	l6524
 12788   001A12                     u7390:
 12789   001A12                     l6520:
 12790                           
 12791                           ; BSR set to: 0
 12792   001A12  0E00               	movlw	0
 12793   001A14  6E46               	movwf	___fladd@b^0,c
 12794   001A16  0E00               	movlw	0
 12795   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12796   001A1A  0E00               	movlw	0
 12797   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12798   001A1E  0E00               	movlw	0
 12799   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12800   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12801   001A24  A4D8               	btfss	status,2,c
 12802   001A26  EF17  F00D         	goto	u7401
 12803   001A2A  EF19  F00D         	goto	u7400
 12804   001A2E                     u7401:
 12805   001A2E  EF1B  F00D         	goto	l6524
 12806   001A32                     u7400:
 12807   001A32                     
 12808                           ; BSR set to: 0
 12809   001A32  0E00               	movlw	0
 12810   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12811   001A36                     l6524:
 12812                           
 12813                           ; BSR set to: 0
 12814   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12815   001A38  EF20  F00D         	goto	u7411
 12816   001A3C  EF22  F00D         	goto	u7410
 12817   001A40                     u7411:
 12818   001A40  EF25  F00D         	goto	l6528
 12819   001A44                     u7410:
 12820   001A44                     
 12821                           ; BSR set to: 0
 12822   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12823   001A46  EF26  F00D         	goto	l6530
 12824   001A4A                     l6528:
 12825                           
 12826                           ; BSR set to: 0
 12827   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12828   001A4C                     l6530:
 12829                           
 12830                           ; BSR set to: 0
 12831   001A4C  90D8               	bcf	status,0,c
 12832   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12833   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12834   001A52                     
 12835                           ; BSR set to: 0
 12836   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12837   001A54  EF2E  F00D         	goto	u7421
 12838   001A58  EF30  F00D         	goto	u7420
 12839   001A5C                     u7421:
 12840   001A5C  EF31  F00D         	goto	l6536
 12841   001A60                     u7420:
 12842   001A60                     
 12843                           ; BSR set to: 0
 12844   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12845   001A62                     l6536:
 12846                           
 12847                           ; BSR set to: 0
 12848   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12849   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12850   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12851   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12852   001A72                     l1247:
 12853                           
 12854                           ; BSR set to: 0
 12855   001A72  0012               	return		;funcret
 12856   001A74                     __end_of___fladd:
 12857                           	callstack 0
 12858                           
 12859 ;; *************** function ___flneg *****************
 12860 ;; Defined at:
 12861 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12862 ;; Parameters:    Size  Location     Type
 12863 ;;  f1              4   32[BANK0 ] unsigned char 
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;		None
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  4   32[BANK0 ] unsigned char 
 12868 ;; Registers used:
 12869 ;;		wreg, status,2, status,0
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12875 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12878 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12879 ;;Total ram usage:        4 bytes
 12880 ;; Hardware stack levels used: 1
 12881 ;; Hardware stack levels required when called: 1
 12882 ;; This function calls:
 12883 ;;		Nothing
 12884 ;; This function is called by:
 12885 ;;		_efgtoa
 12886 ;;		_sinf
 12887 ;;		___rem_pio2f
 12888 ;; This function uses a non-reentrant model
 12889 ;;
 12890                           
 12891                           	psect	text45
 12892   005120                     __ptext45:
 12893                           	callstack 0
 12894   005120                     ___flneg:
 12895                           	callstack 24
 12896   005120  0100               	movlb	0	; () banked
 12897   005122  5180               	movf	___flneg@f1& (0+255),w,b
 12898   005124  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12899   005126  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12900   005128  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12901   00512A  B4D8               	btfsc	status,2,c
 12902   00512C  EF9A  F028         	goto	u8061
 12903   005130  EF9C  F028         	goto	u8060
 12904   005134                     u8061:
 12905   005134  EFA4  F028         	goto	l6950
 12906   005138                     u8060:
 12907   005138                     
 12908                           ; BSR set to: 0
 12909   005138  0E00               	movlw	0
 12910   00513A  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12911   00513C  0E00               	movlw	0
 12912   00513E  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12913   005140  0E00               	movlw	0
 12914   005142  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12915   005144  0E80               	movlw	128
 12916   005146  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12917   005148                     l6950:
 12918                           
 12919                           ; BSR set to: 0
 12920   005148  C080  F080         	movff	___flneg@f1,?___flneg
 12921   00514C  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12922   005150  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12923   005154  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12924   005158                     
 12925                           ; BSR set to: 0
 12926   005158  0012               	return		;funcret
 12927   00515A                     __end_of___flneg:
 12928                           	callstack 0
 12929                           
 12930 ;; *************** function ___flmul *****************
 12931 ;; Defined at:
 12932 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12933 ;; Parameters:    Size  Location     Type
 12934 ;;  b               4   19[COMRAM] unsigned char 
 12935 ;;  a               4   23[COMRAM] unsigned char 
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;  prod            4   38[COMRAM] struct .
 12938 ;;  grs             4   33[COMRAM] unsigned long 
 12939 ;;  temp            2   42[COMRAM] struct .
 12940 ;;  bexp            1   37[COMRAM] unsigned char 
 12941 ;;  aexp            1   32[COMRAM] unsigned char 
 12942 ;;  sign            1   31[COMRAM] unsigned char 
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  4   19[COMRAM] unsigned char 
 12945 ;; Registers used:
 12946 ;;		wreg, status,2, status,0, prodl, prodh
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12953 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12955 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12956 ;;Total ram usage:       25 bytes
 12957 ;; Hardware stack levels used: 1
 12958 ;; Hardware stack levels required when called: 1
 12959 ;; This function calls:
 12960 ;;		Nothing
 12961 ;; This function is called by:
 12962 ;;		_runDAC
 12963 ;;		_runADC
 12964 ;;		_efgtoa
 12965 ;;		___cosdf
 12966 ;;		___rem_pio2f
 12967 ;;		___sindf
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           	psect	text46
 12972   001A74                     __ptext46:
 12973                           	callstack 0
 12974   001A74                     ___flmul:
 12975                           	callstack 24
 12976   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12977   001A76  0B80               	andlw	128
 12978   001A78  6E20               	movwf	___flmul@sign^0,c
 12979   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12980   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12981   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12982   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12983   001A82  EF45  F00D         	goto	u7671
 12984   001A86  EF47  F00D         	goto	u7670
 12985   001A8A                     u7671:
 12986   001A8A  EF48  F00D         	goto	l6698
 12987   001A8E                     u7670:
 12988   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12989   001A90                     l6698:
 12990   001A90  5026               	movf	___flmul@bexp^0,w,c
 12991   001A92  B4D8               	btfsc	status,2,c
 12992   001A94  EF4E  F00D         	goto	u7681
 12993   001A98  EF50  F00D         	goto	u7680
 12994   001A9C                     u7681:
 12995   001A9C  EF63  F00D         	goto	l6706
 12996   001AA0                     u7680:
 12997   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12998   001AA2  A4D8               	btfss	status,2,c
 12999   001AA4  EF56  F00D         	goto	u7691
 13000   001AA8  EF58  F00D         	goto	u7690
 13001   001AAC                     u7691:
 13002   001AAC  EF60  F00D         	goto	l6704
 13003   001AB0                     u7690:
 13004   001AB0  0E00               	movlw	0
 13005   001AB2  6E14               	movwf	___flmul@b^0,c
 13006   001AB4  0E00               	movlw	0
 13007   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 13008   001AB8  0E00               	movlw	0
 13009   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 13010   001ABC  0E00               	movlw	0
 13011   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 13012   001AC0                     l6704:
 13013   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 13014   001AC2  EF6B  F00D         	goto	l6708
 13015   001AC6                     l6706:
 13016   001AC6  0E00               	movlw	0
 13017   001AC8  6E14               	movwf	___flmul@b^0,c
 13018   001ACA  0E00               	movlw	0
 13019   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 13020   001ACE  0E00               	movlw	0
 13021   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 13022   001AD2  0E00               	movlw	0
 13023   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 13024   001AD6                     l6708:
 13025   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 13026   001AD8  0B80               	andlw	128
 13027   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 13028   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 13029   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 13030   001AE0  6E21               	movwf	___flmul@aexp^0,c
 13031   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 13032   001AE4  EF76  F00D         	goto	u7701
 13033   001AE8  EF78  F00D         	goto	u7700
 13034   001AEC                     u7701:
 13035   001AEC  EF79  F00D         	goto	l6716
 13036   001AF0                     u7700:
 13037   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 13038   001AF2                     l6716:
 13039   001AF2  5021               	movf	___flmul@aexp^0,w,c
 13040   001AF4  B4D8               	btfsc	status,2,c
 13041   001AF6  EF7F  F00D         	goto	u7711
 13042   001AFA  EF81  F00D         	goto	u7710
 13043   001AFE                     u7711:
 13044   001AFE  EF94  F00D         	goto	l6724
 13045   001B02                     u7710:
 13046   001B02  2821               	incf	___flmul@aexp^0,w,c
 13047   001B04  A4D8               	btfss	status,2,c
 13048   001B06  EF87  F00D         	goto	u7721
 13049   001B0A  EF89  F00D         	goto	u7720
 13050   001B0E                     u7721:
 13051   001B0E  EF91  F00D         	goto	l6722
 13052   001B12                     u7720:
 13053   001B12  0E00               	movlw	0
 13054   001B14  6E18               	movwf	___flmul@a^0,c
 13055   001B16  0E00               	movlw	0
 13056   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 13057   001B1A  0E00               	movlw	0
 13058   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 13059   001B1E  0E00               	movlw	0
 13060   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 13061   001B22                     l6722:
 13062   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 13063   001B24  EF9C  F00D         	goto	l1324
 13064   001B28                     l6724:
 13065   001B28  0E00               	movlw	0
 13066   001B2A  6E18               	movwf	___flmul@a^0,c
 13067   001B2C  0E00               	movlw	0
 13068   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 13069   001B30  0E00               	movlw	0
 13070   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 13071   001B34  0E00               	movlw	0
 13072   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 13073   001B38                     l1324:
 13074   001B38  5021               	movf	___flmul@aexp^0,w,c
 13075   001B3A  B4D8               	btfsc	status,2,c
 13076   001B3C  EFA2  F00D         	goto	u7731
 13077   001B40  EFA4  F00D         	goto	u7730
 13078   001B44                     u7731:
 13079   001B44  EFAC  F00D         	goto	l6728
 13080   001B48                     u7730:
 13081   001B48  5026               	movf	___flmul@bexp^0,w,c
 13082   001B4A  A4D8               	btfss	status,2,c
 13083   001B4C  EFAA  F00D         	goto	u7741
 13084   001B50  EFAC  F00D         	goto	u7740
 13085   001B54                     u7741:
 13086   001B54  EFB6  F00D         	goto	l6732
 13087   001B58                     u7740:
 13088   001B58                     l6728:
 13089   001B58  0E00               	movlw	0
 13090   001B5A  6E14               	movwf	?___flmul^0,c
 13091   001B5C  0E00               	movlw	0
 13092   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 13093   001B60  0E00               	movlw	0
 13094   001B62  6E16               	movwf	(?___flmul+2)^0,c
 13095   001B64  0E00               	movlw	0
 13096   001B66  6E17               	movwf	(?___flmul+3)^0,c
 13097   001B68  EF4E  F00F         	goto	l1328
 13098   001B6C                     l6732:
 13099   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 13100   001B6E  0214               	mulwf	___flmul@b^0,c
 13101   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 13102   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13103   001B78  502B               	movf	___flmul@temp^0,w,c
 13104   001B7A  6E22               	movwf	___flmul@grs^0,c
 13105   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 13106   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 13107   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 13108   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 13109   001B84  6E27               	movwf	___flmul@prod^0,c
 13110   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 13111   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 13112   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 13113   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 13114   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 13115   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 13116   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13117   001B98  502B               	movf	___flmul@temp^0,w,c
 13118   001B9A  2622               	addwf	___flmul@grs^0,f,c
 13119   001B9C  0E00               	movlw	0
 13120   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13121   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13122   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13123   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 13124   001BA6  2627               	addwf	___flmul@prod^0,f,c
 13125   001BA8  0E00               	movlw	0
 13126   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13127   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13128   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13129   001BB0  5018               	movf	___flmul@a^0,w,c
 13130   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 13131   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 13132   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13133   001BBC  502B               	movf	___flmul@temp^0,w,c
 13134   001BBE  2622               	addwf	___flmul@grs^0,f,c
 13135   001BC0  0E00               	movlw	0
 13136   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13137   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13138   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13139   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 13140   001BCA  2627               	addwf	___flmul@prod^0,f,c
 13141   001BCC  0E00               	movlw	0
 13142   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13143   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13144   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13145   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13146   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13147   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13148   001BE0  6A22               	clrf	___flmul@grs^0,c
 13149   001BE2  5018               	movf	___flmul@a^0,w,c
 13150   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 13151   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 13152   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13153   001BEE  502B               	movf	___flmul@temp^0,w,c
 13154   001BF0  2622               	addwf	___flmul@grs^0,f,c
 13155   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 13156   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13157   001BF6  0E00               	movlw	0
 13158   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13159   001BFA  0E00               	movlw	0
 13160   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13161   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 13162   001C00  0214               	mulwf	___flmul@b^0,c
 13163   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 13164   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13165   001C0A  502B               	movf	___flmul@temp^0,w,c
 13166   001C0C  2622               	addwf	___flmul@grs^0,f,c
 13167   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 13168   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13169   001C12  0E00               	movlw	0
 13170   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13171   001C16  0E00               	movlw	0
 13172   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13173   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13174   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13175   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13176   001C26  6A22               	clrf	___flmul@grs^0,c
 13177   001C28  5018               	movf	___flmul@a^0,w,c
 13178   001C2A  0214               	mulwf	___flmul@b^0,c
 13179   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 13180   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13181   001C34  502B               	movf	___flmul@temp^0,w,c
 13182   001C36  2622               	addwf	___flmul@grs^0,f,c
 13183   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 13184   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13185   001C3C  0E00               	movlw	0
 13186   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13187   001C40  0E00               	movlw	0
 13188   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13189   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 13190   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 13191   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 13192   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13193   001C50  502B               	movf	___flmul@temp^0,w,c
 13194   001C52  2627               	addwf	___flmul@prod^0,f,c
 13195   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 13196   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13197   001C58  0E00               	movlw	0
 13198   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13199   001C5C  0E00               	movlw	0
 13200   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13201   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 13202   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 13203   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 13204   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13205   001C6C  502B               	movf	___flmul@temp^0,w,c
 13206   001C6E  2627               	addwf	___flmul@prod^0,f,c
 13207   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 13208   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13209   001C74  0E00               	movlw	0
 13210   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13211   001C78  0E00               	movlw	0
 13212   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13213   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 13214   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 13215   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 13216   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13217   001C88  502B               	movf	___flmul@temp^0,w,c
 13218   001C8A  6E1C               	movwf	??___flmul^0,c
 13219   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 13220   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 13221   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 13222   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 13223   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 13224   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 13225   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 13226   001CA0  6A1C               	clrf	??___flmul^0,c
 13227   001CA2  501C               	movf	??___flmul^0,w,c
 13228   001CA4  2627               	addwf	___flmul@prod^0,f,c
 13229   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 13230   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13231   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 13232   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13233   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 13234   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13235   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 13236   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 13237   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 13238   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 13239   001CC2  0E19               	movlw	25
 13240   001CC4  EF69  F00E         	goto	u7750
 13241   001CC8                     u7755:
 13242   001CC8  90D8               	bcf	status,0,c
 13243   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 13244   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 13245   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 13246   001CD0  321C               	rrcf	??___flmul^0,f,c
 13247   001CD2                     u7750:
 13248   001CD2  2EE8               	decfsz	wreg,f,c
 13249   001CD4  EF64  F00E         	goto	u7755
 13250   001CD8  501C               	movf	??___flmul^0,w,c
 13251   001CDA  2627               	addwf	___flmul@prod^0,f,c
 13252   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 13253   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13254   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 13255   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13256   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 13257   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13258   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13259   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13260   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13261   001CF4  6A22               	clrf	___flmul@grs^0,c
 13262   001CF6  5021               	movf	___flmul@aexp^0,w,c
 13263   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 13264   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 13265   001CFE  261C               	addwf	??___flmul^0,f,c
 13266   001D00  0E00               	movlw	0
 13267   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 13268   001D04  0E82               	movlw	130
 13269   001D06  241C               	addwf	??___flmul^0,w,c
 13270   001D08  6E2B               	movwf	___flmul@temp^0,c
 13271   001D0A  0EFF               	movlw	255
 13272   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13273   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13274   001D10  EF9F  F00E         	goto	l6780
 13275   001D14                     l6774:
 13276   001D14  90D8               	bcf	status,0,c
 13277   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13278   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13279   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13280   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13281   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13282   001D20  EF94  F00E         	goto	u7761
 13283   001D24  EF96  F00E         	goto	u7760
 13284   001D28                     u7761:
 13285   001D28  EF97  F00E         	goto	l1331
 13286   001D2C                     u7760:
 13287   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13288   001D2E                     l1331:
 13289   001D2E  90D8               	bcf	status,0,c
 13290   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13291   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13292   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13293   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13294   001D38  062B               	decf	___flmul@temp^0,f,c
 13295   001D3A  A0D8               	btfss	status,0,c
 13296   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13297   001D3E                     l6780:
 13298   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13299   001D40  EFA4  F00E         	goto	u7771
 13300   001D44  EFA6  F00E         	goto	u7770
 13301   001D48                     u7771:
 13302   001D48  EF8A  F00E         	goto	l6774
 13303   001D4C                     u7770:
 13304   001D4C  0E00               	movlw	0
 13305   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13306   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13307   001D52  EFAD  F00E         	goto	u7781
 13308   001D56  EFAF  F00E         	goto	u7780
 13309   001D5A                     u7781:
 13310   001D5A  EFD3  F00E         	goto	l1333
 13311   001D5E                     u7780:
 13312   001D5E  0EFF               	movlw	255
 13313   001D60  1422               	andwf	___flmul@grs^0,w,c
 13314   001D62  6E1C               	movwf	??___flmul^0,c
 13315   001D64  0EFF               	movlw	255
 13316   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13317   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13318   001D6A  0EFF               	movlw	255
 13319   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13320   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13321   001D70  0E7F               	movlw	127
 13322   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13323   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13324   001D76  501C               	movf	??___flmul^0,w,c
 13325   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13326   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13327   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13328   001D7E  B4D8               	btfsc	status,2,c
 13329   001D80  EFC4  F00E         	goto	u7791
 13330   001D84  EFC6  F00E         	goto	u7790
 13331   001D88                     u7791:
 13332   001D88  EFCA  F00E         	goto	l1334
 13333   001D8C                     u7790:
 13334   001D8C                     l6788:
 13335   001D8C  0E01               	movlw	1
 13336   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13337   001D90  EFD3  F00E         	goto	l1333
 13338   001D94                     l1334:
 13339   001D94  A027               	btfss	___flmul@prod^0,0,c
 13340   001D96  EFCF  F00E         	goto	u7801
 13341   001D9A  EFD1  F00E         	goto	u7800
 13342   001D9E                     u7801:
 13343   001D9E  EFD3  F00E         	goto	l1333
 13344   001DA2                     u7800:
 13345   001DA2  EFC6  F00E         	goto	l6788
 13346   001DA6                     l1333:
 13347   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13348   001DA8  B4D8               	btfsc	status,2,c
 13349   001DAA  EFD9  F00E         	goto	u7811
 13350   001DAE  EFDB  F00E         	goto	u7810
 13351   001DB2                     u7811:
 13352   001DB2  EFFF  F00E         	goto	l6800
 13353   001DB6                     u7810:
 13354   001DB6  0E01               	movlw	1
 13355   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13356   001DBA  0E00               	movlw	0
 13357   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13358   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13359   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13360   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13361   001DC4  EFE6  F00E         	goto	u7821
 13362   001DC8  EFE8  F00E         	goto	u7820
 13363   001DCC                     u7821:
 13364   001DCC  EFFF  F00E         	goto	l6800
 13365   001DD0                     u7820:
 13366   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13367   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13368   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13369   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13370   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13371   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13372   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13373   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13374   001DE8  321C               	rrcf	??___flmul^0,f,c
 13375   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13376   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13377   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13378   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13379   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13380   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13381   001DFE                     l6800:
 13382   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13383   001E00  EF0A  F00F         	goto	u7831
 13384   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13385   001E06  E108               	bnz	u7830
 13386   001E08  282B               	incf	___flmul@temp^0,w,c
 13387   001E0A  A0D8               	btfss	status,0,c
 13388   001E0C  EF0A  F00F         	goto	u7831
 13389   001E10  EF0C  F00F         	goto	u7830
 13390   001E14                     u7831:
 13391   001E14  EF16  F00F         	goto	l6804
 13392   001E18                     u7830:
 13393   001E18  0E00               	movlw	0
 13394   001E1A  6E27               	movwf	___flmul@prod^0,c
 13395   001E1C  0E00               	movlw	0
 13396   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13397   001E20  0E80               	movlw	128
 13398   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13399   001E24  0E7F               	movlw	127
 13400   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13401   001E28  EF44  F00F         	goto	l6816
 13402   001E2C                     l6804:
 13403   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13404   001E2E  EF23  F00F         	goto	u7840
 13405   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13406   001E34  E106               	bnz	u7841
 13407   001E36  042B               	decf	___flmul@temp^0,w,c
 13408   001E38  B0D8               	btfsc	status,0,c
 13409   001E3A  EF21  F00F         	goto	u7841
 13410   001E3E  EF23  F00F         	goto	u7840
 13411   001E42                     u7841:
 13412   001E42  EF2F  F00F         	goto	l1341
 13413   001E46                     u7840:
 13414   001E46  0E00               	movlw	0
 13415   001E48  6E27               	movwf	___flmul@prod^0,c
 13416   001E4A  0E00               	movlw	0
 13417   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13418   001E4E  0E00               	movlw	0
 13419   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13420   001E52  0E00               	movlw	0
 13421   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13422   001E56  0E00               	movlw	0
 13423   001E58  6E20               	movwf	___flmul@sign^0,c
 13424   001E5A  EF44  F00F         	goto	l6816
 13425   001E5E                     l1341:
 13426   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13427   001E62  0EFF               	movlw	255
 13428   001E64  1627               	andwf	___flmul@prod^0,f,c
 13429   001E66  0EFF               	movlw	255
 13430   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13431   001E6A  0E7F               	movlw	127
 13432   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13433   001E6E  0E00               	movlw	0
 13434   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13435   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13436   001E74  EF3E  F00F         	goto	u7851
 13437   001E78  EF40  F00F         	goto	u7850
 13438   001E7C                     u7851:
 13439   001E7C  EF41  F00F         	goto	l6814
 13440   001E80                     u7850:
 13441   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13442   001E82                     l6814:
 13443   001E82  90D8               	bcf	status,0,c
 13444   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13445   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13446   001E88                     l6816:
 13447   001E88  5020               	movf	___flmul@sign^0,w,c
 13448   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13449   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13450   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13451   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13452   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13453   001E9C                     l1328:
 13454   001E9C  0012               	return		;funcret
 13455   001E9E                     __end_of___flmul:
 13456                           	callstack 0
 13457                           
 13458 ;; *************** function ___flge *****************
 13459 ;; Defined at:
 13460 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  ff1             4   44[COMRAM] unsigned char 
 13463 ;;  ff2             4   48[COMRAM] unsigned char 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;		None
 13466 ;; Return value:  Size  Location     Type
 13467 ;;		None               void
 13468 ;; Registers used:
 13469 ;;		wreg, status,2, status,0
 13470 ;; Tracked objects:
 13471 ;;		On entry : 0/0
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13475 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13478 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13479 ;;Total ram usage:       12 bytes
 13480 ;; Hardware stack levels used: 1
 13481 ;; Hardware stack levels required when called: 1
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_efgtoa
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           	psect	text47
 13490   00440E                     __ptext47:
 13491                           	callstack 0
 13492   00440E                     ___flge:
 13493                           	callstack 24
 13494   00440E  0E00               	movlw	0
 13495   004410  142D               	andwf	___flge@ff1^0,w,c
 13496   004412  6E35               	movwf	??___flge^0,c
 13497   004414  0E00               	movlw	0
 13498   004416  142E               	andwf	(___flge@ff1+1)^0,w,c
 13499   004418  6E36               	movwf	(??___flge+1)^0,c
 13500   00441A  0E80               	movlw	128
 13501   00441C  142F               	andwf	(___flge@ff1+2)^0,w,c
 13502   00441E  6E37               	movwf	(??___flge+2)^0,c
 13503   004420  0E7F               	movlw	127
 13504   004422  1430               	andwf	(___flge@ff1+3)^0,w,c
 13505   004424  6E38               	movwf	(??___flge+3)^0,c
 13506   004426  5035               	movf	??___flge^0,w,c
 13507   004428  1036               	iorwf	(??___flge+1)^0,w,c
 13508   00442A  1037               	iorwf	(??___flge+2)^0,w,c
 13509   00442C  1038               	iorwf	(??___flge+3)^0,w,c
 13510   00442E  A4D8               	btfss	status,2,c
 13511   004430  EF1C  F022         	goto	u8011
 13512   004434  EF1E  F022         	goto	u8010
 13513   004438                     u8011:
 13514   004438  EF26  F022         	goto	l6928
 13515   00443C                     u8010:
 13516   00443C  0E00               	movlw	0
 13517   00443E  6E2D               	movwf	___flge@ff1^0,c
 13518   004440  0E00               	movlw	0
 13519   004442  6E2E               	movwf	(___flge@ff1+1)^0,c
 13520   004444  0E00               	movlw	0
 13521   004446  6E2F               	movwf	(___flge@ff1+2)^0,c
 13522   004448  0E00               	movlw	0
 13523   00444A  6E30               	movwf	(___flge@ff1+3)^0,c
 13524   00444C                     l6928:
 13525   00444C  0E00               	movlw	0
 13526   00444E  1431               	andwf	___flge@ff2^0,w,c
 13527   004450  6E35               	movwf	??___flge^0,c
 13528   004452  0E00               	movlw	0
 13529   004454  1432               	andwf	(___flge@ff2+1)^0,w,c
 13530   004456  6E36               	movwf	(??___flge+1)^0,c
 13531   004458  0E80               	movlw	128
 13532   00445A  1433               	andwf	(___flge@ff2+2)^0,w,c
 13533   00445C  6E37               	movwf	(??___flge+2)^0,c
 13534   00445E  0E7F               	movlw	127
 13535   004460  1434               	andwf	(___flge@ff2+3)^0,w,c
 13536   004462  6E38               	movwf	(??___flge+3)^0,c
 13537   004464  5035               	movf	??___flge^0,w,c
 13538   004466  1036               	iorwf	(??___flge+1)^0,w,c
 13539   004468  1037               	iorwf	(??___flge+2)^0,w,c
 13540   00446A  1038               	iorwf	(??___flge+3)^0,w,c
 13541   00446C  A4D8               	btfss	status,2,c
 13542   00446E  EF3B  F022         	goto	u8021
 13543   004472  EF3D  F022         	goto	u8020
 13544   004476                     u8021:
 13545   004476  EF45  F022         	goto	l6932
 13546   00447A                     u8020:
 13547   00447A  0E00               	movlw	0
 13548   00447C  6E31               	movwf	___flge@ff2^0,c
 13549   00447E  0E00               	movlw	0
 13550   004480  6E32               	movwf	(___flge@ff2+1)^0,c
 13551   004482  0E00               	movlw	0
 13552   004484  6E33               	movwf	(___flge@ff2+2)^0,c
 13553   004486  0E00               	movlw	0
 13554   004488  6E34               	movwf	(___flge@ff2+3)^0,c
 13555   00448A                     l6932:
 13556   00448A  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13557   00448C  EF4A  F022         	goto	u8031
 13558   004490  EF4C  F022         	goto	u8030
 13559   004494                     u8031:
 13560   004494  EF55  F022         	goto	l6936
 13561   004498                     u8030:
 13562   004498  6C2D               	negf	___flge@ff1^0,c
 13563   00449A  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13564   00449C  B0D8               	btfsc	status,0,c
 13565   00449E  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13566   0044A0  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13567   0044A2  B0D8               	btfsc	status,0,c
 13568   0044A4  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13569   0044A6  0E80               	movlw	128
 13570   0044A8  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13571   0044AA                     l6936:
 13572   0044AA  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13573   0044AC  EF5A  F022         	goto	u8041
 13574   0044B0  EF5C  F022         	goto	u8040
 13575   0044B4                     u8041:
 13576   0044B4  EF65  F022         	goto	l975
 13577   0044B8                     u8040:
 13578   0044B8  6C31               	negf	___flge@ff2^0,c
 13579   0044BA  1E32               	comf	(___flge@ff2+1)^0,f,c
 13580   0044BC  B0D8               	btfsc	status,0,c
 13581   0044BE  2A32               	incf	(___flge@ff2+1)^0,f,c
 13582   0044C0  1E33               	comf	(___flge@ff2+2)^0,f,c
 13583   0044C2  B0D8               	btfsc	status,0,c
 13584   0044C4  2A33               	incf	(___flge@ff2+2)^0,f,c
 13585   0044C6  0E80               	movlw	128
 13586   0044C8  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13587   0044CA                     l975:
 13588   0044CA  0E00               	movlw	0
 13589   0044CC  1A2D               	xorwf	___flge@ff1^0,f,c
 13590   0044CE  0E00               	movlw	0
 13591   0044D0  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13592   0044D2  0E00               	movlw	0
 13593   0044D4  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13594   0044D6  0E80               	movlw	128
 13595   0044D8  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13596   0044DA  0E00               	movlw	0
 13597   0044DC  1A31               	xorwf	___flge@ff2^0,f,c
 13598   0044DE  0E00               	movlw	0
 13599   0044E0  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13600   0044E2  0E00               	movlw	0
 13601   0044E4  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13602   0044E6  0E80               	movlw	128
 13603   0044E8  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13604   0044EA  5031               	movf	___flge@ff2^0,w,c
 13605   0044EC  5C2D               	subwf	___flge@ff1^0,w,c
 13606   0044EE  5032               	movf	(___flge@ff2+1)^0,w,c
 13607   0044F0  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13608   0044F2  5033               	movf	(___flge@ff2+2)^0,w,c
 13609   0044F4  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13610   0044F6  5034               	movf	(___flge@ff2+3)^0,w,c
 13611   0044F8  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13612   0044FA  B0D8               	btfsc	status,0,c
 13613   0044FC  EF82  F022         	goto	u8051
 13614   004500  EF84  F022         	goto	u8050
 13615   004504                     u8051:
 13616   004504  EF87  F022         	goto	l6942
 13617   004508                     u8050:
 13618   004508  90D8               	bcf	status,0,c
 13619   00450A  EF88  F022         	goto	l980
 13620   00450E                     l6942:
 13621   00450E  80D8               	bsf	status,0,c
 13622   004510                     l980:
 13623   004510  0012               	return		;funcret
 13624   004512                     __end_of___flge:
 13625                           	callstack 0
 13626                           
 13627 ;; *************** function ___fleq *****************
 13628 ;; Defined at:
 13629 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  ff1             4    5[COMRAM] unsigned char 
 13632 ;;  ff2             4    9[COMRAM] unsigned char 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;		None
 13635 ;; Return value:  Size  Location     Type
 13636 ;;		None               void
 13637 ;; Registers used:
 13638 ;;		wreg, status,2, status,0
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13644 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13647 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13648 ;;Total ram usage:       12 bytes
 13649 ;; Hardware stack levels used: 1
 13650 ;; Hardware stack levels required when called: 1
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_efgtoa
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658                           	psect	text48
 13659   004B78                     __ptext48:
 13660                           	callstack 0
 13661   004B78                     ___fleq:
 13662                           	callstack 24
 13663   004B78  0E00               	movlw	0
 13664   004B7A  1406               	andwf	___fleq@ff1^0,w,c
 13665   004B7C  6E0E               	movwf	??___fleq^0,c
 13666   004B7E  0E00               	movlw	0
 13667   004B80  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13668   004B82  6E0F               	movwf	(??___fleq+1)^0,c
 13669   004B84  0E80               	movlw	128
 13670   004B86  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13671   004B88  6E10               	movwf	(??___fleq+2)^0,c
 13672   004B8A  0E7F               	movlw	127
 13673   004B8C  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13674   004B8E  6E11               	movwf	(??___fleq+3)^0,c
 13675   004B90  500E               	movf	??___fleq^0,w,c
 13676   004B92  100F               	iorwf	(??___fleq+1)^0,w,c
 13677   004B94  1010               	iorwf	(??___fleq+2)^0,w,c
 13678   004B96  1011               	iorwf	(??___fleq+3)^0,w,c
 13679   004B98  A4D8               	btfss	status,2,c
 13680   004B9A  EFD1  F025         	goto	u7981
 13681   004B9E  EFD3  F025         	goto	u7980
 13682   004BA2                     u7981:
 13683   004BA2  EFDB  F025         	goto	l6912
 13684   004BA6                     u7980:
 13685   004BA6  0E00               	movlw	0
 13686   004BA8  6E06               	movwf	___fleq@ff1^0,c
 13687   004BAA  0E00               	movlw	0
 13688   004BAC  6E07               	movwf	(___fleq@ff1+1)^0,c
 13689   004BAE  0E00               	movlw	0
 13690   004BB0  6E08               	movwf	(___fleq@ff1+2)^0,c
 13691   004BB2  0E00               	movlw	0
 13692   004BB4  6E09               	movwf	(___fleq@ff1+3)^0,c
 13693   004BB6                     l6912:
 13694   004BB6  0E00               	movlw	0
 13695   004BB8  140A               	andwf	___fleq@ff2^0,w,c
 13696   004BBA  6E0E               	movwf	??___fleq^0,c
 13697   004BBC  0E00               	movlw	0
 13698   004BBE  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13699   004BC0  6E0F               	movwf	(??___fleq+1)^0,c
 13700   004BC2  0E80               	movlw	128
 13701   004BC4  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13702   004BC6  6E10               	movwf	(??___fleq+2)^0,c
 13703   004BC8  0E7F               	movlw	127
 13704   004BCA  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13705   004BCC  6E11               	movwf	(??___fleq+3)^0,c
 13706   004BCE  500E               	movf	??___fleq^0,w,c
 13707   004BD0  100F               	iorwf	(??___fleq+1)^0,w,c
 13708   004BD2  1010               	iorwf	(??___fleq+2)^0,w,c
 13709   004BD4  1011               	iorwf	(??___fleq+3)^0,w,c
 13710   004BD6  A4D8               	btfss	status,2,c
 13711   004BD8  EFF0  F025         	goto	u7991
 13712   004BDC  EFF2  F025         	goto	u7990
 13713   004BE0                     u7991:
 13714   004BE0  EFFA  F025         	goto	l6916
 13715   004BE4                     u7990:
 13716   004BE4  0E00               	movlw	0
 13717   004BE6  6E0A               	movwf	___fleq@ff2^0,c
 13718   004BE8  0E00               	movlw	0
 13719   004BEA  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13720   004BEC  0E00               	movlw	0
 13721   004BEE  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13722   004BF0  0E00               	movlw	0
 13723   004BF2  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13724   004BF4                     l6916:
 13725   004BF4  500A               	movf	___fleq@ff2^0,w,c
 13726   004BF6  1806               	xorwf	___fleq@ff1^0,w,c
 13727   004BF8  E10F               	bnz	u8000
 13728   004BFA  500B               	movf	(___fleq@ff2+1)^0,w,c
 13729   004BFC  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13730   004BFE  E10C               	bnz	u8000
 13731   004C00  500C               	movf	(___fleq@ff2+2)^0,w,c
 13732   004C02  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13733   004C04  E109               	bnz	u8000
 13734   004C06  500D               	movf	(___fleq@ff2+3)^0,w,c
 13735   004C08  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13736   004C0A  B4D8               	btfsc	status,2,c
 13737   004C0C  EF0A  F026         	goto	u8001
 13738   004C10  EF0C  F026         	goto	u8000
 13739   004C14                     u8001:
 13740   004C14  EF0F  F026         	goto	l6920
 13741   004C18                     u8000:
 13742   004C18  90D8               	bcf	status,0,c
 13743   004C1A  EF10  F026         	goto	l969
 13744   004C1E                     l6920:
 13745   004C1E  80D8               	bsf	status,0,c
 13746   004C20                     l969:
 13747   004C20  0012               	return		;funcret
 13748   004C22                     __end_of___fleq:
 13749                           	callstack 0
 13750                           
 13751 ;; *************** function ___fldiv *****************
 13752 ;; Defined at:
 13753 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13754 ;; Parameters:    Size  Location     Type
 13755 ;;  b               4   44[COMRAM] unsigned char 
 13756 ;;  a               4   48[COMRAM] unsigned char 
 13757 ;; Auto vars:     Size  Location     Type
 13758 ;;  grs             4   63[COMRAM] unsigned long 
 13759 ;;  rem             4   56[COMRAM] unsigned long 
 13760 ;;  new_exp         2   61[COMRAM] short 
 13761 ;;  aexp            1   68[COMRAM] unsigned char 
 13762 ;;  bexp            1   67[COMRAM] unsigned char 
 13763 ;;  sign            1   60[COMRAM] unsigned char 
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  4   44[COMRAM] unsigned char 
 13766 ;; Registers used:
 13767 ;;		wreg, status,2, status,0
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13773 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13777 ;;Total ram usage:       25 bytes
 13778 ;; Hardware stack levels used: 1
 13779 ;; Hardware stack levels required when called: 1
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		_runDAC
 13784 ;;		_runADC
 13785 ;;		_efgtoa
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           	psect	text49
 13790   002A2E                     __ptext49:
 13791                           	callstack 0
 13792   002A2E                     ___fldiv:
 13793                           	callstack 24
 13794   002A2E  5030               	movf	(___fldiv@b+3)^0,w,c
 13795   002A30  0B80               	andlw	128
 13796   002A32  6E3D               	movwf	___fldiv@sign^0,c
 13797   002A34  5030               	movf	(___fldiv@b+3)^0,w,c
 13798   002A36  2430               	addwf	(___fldiv@b+3)^0,w,c
 13799   002A38  6E44               	movwf	___fldiv@bexp^0,c
 13800   002A3A  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13801   002A3C  EF22  F015         	goto	u7441
 13802   002A40  EF24  F015         	goto	u7440
 13803   002A44                     u7441:
 13804   002A44  EF25  F015         	goto	l6560
 13805   002A48                     u7440:
 13806   002A48  8044               	bsf	___fldiv@bexp^0,0,c
 13807   002A4A                     l6560:
 13808   002A4A  5044               	movf	___fldiv@bexp^0,w,c
 13809   002A4C  B4D8               	btfsc	status,2,c
 13810   002A4E  EF2B  F015         	goto	u7451
 13811   002A52  EF2D  F015         	goto	u7450
 13812   002A56                     u7451:
 13813   002A56  EF42  F015         	goto	l6570
 13814   002A5A                     u7450:
 13815   002A5A  2844               	incf	___fldiv@bexp^0,w,c
 13816   002A5C  A4D8               	btfss	status,2,c
 13817   002A5E  EF33  F015         	goto	u7461
 13818   002A62  EF35  F015         	goto	u7460
 13819   002A66                     u7461:
 13820   002A66  EF3D  F015         	goto	l6566
 13821   002A6A                     u7460:
 13822   002A6A  0E00               	movlw	0
 13823   002A6C  6E2D               	movwf	___fldiv@b^0,c
 13824   002A6E  0E00               	movlw	0
 13825   002A70  6E2E               	movwf	(___fldiv@b+1)^0,c
 13826   002A72  0E00               	movlw	0
 13827   002A74  6E2F               	movwf	(___fldiv@b+2)^0,c
 13828   002A76  0E00               	movlw	0
 13829   002A78  6E30               	movwf	(___fldiv@b+3)^0,c
 13830   002A7A                     l6566:
 13831   002A7A  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13832   002A7C  0E00               	movlw	0
 13833   002A7E  6E30               	movwf	(___fldiv@b+3)^0,c
 13834   002A80  EF4A  F015         	goto	l6572
 13835   002A84                     l6570:
 13836   002A84  0E00               	movlw	0
 13837   002A86  6E2D               	movwf	___fldiv@b^0,c
 13838   002A88  0E00               	movlw	0
 13839   002A8A  6E2E               	movwf	(___fldiv@b+1)^0,c
 13840   002A8C  0E00               	movlw	0
 13841   002A8E  6E2F               	movwf	(___fldiv@b+2)^0,c
 13842   002A90  0E00               	movlw	0
 13843   002A92  6E30               	movwf	(___fldiv@b+3)^0,c
 13844   002A94                     l6572:
 13845   002A94  5034               	movf	(___fldiv@a+3)^0,w,c
 13846   002A96  0B80               	andlw	128
 13847   002A98  1A3D               	xorwf	___fldiv@sign^0,f,c
 13848   002A9A  5034               	movf	(___fldiv@a+3)^0,w,c
 13849   002A9C  2434               	addwf	(___fldiv@a+3)^0,w,c
 13850   002A9E  6E45               	movwf	___fldiv@aexp^0,c
 13851   002AA0  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13852   002AA2  EF55  F015         	goto	u7471
 13853   002AA6  EF57  F015         	goto	u7470
 13854   002AAA                     u7471:
 13855   002AAA  EF58  F015         	goto	l6580
 13856   002AAE                     u7470:
 13857   002AAE  8045               	bsf	___fldiv@aexp^0,0,c
 13858   002AB0                     l6580:
 13859   002AB0  5045               	movf	___fldiv@aexp^0,w,c
 13860   002AB2  B4D8               	btfsc	status,2,c
 13861   002AB4  EF5E  F015         	goto	u7481
 13862   002AB8  EF60  F015         	goto	u7480
 13863   002ABC                     u7481:
 13864   002ABC  EF75  F015         	goto	l6590
 13865   002AC0                     u7480:
 13866   002AC0  2845               	incf	___fldiv@aexp^0,w,c
 13867   002AC2  A4D8               	btfss	status,2,c
 13868   002AC4  EF66  F015         	goto	u7491
 13869   002AC8  EF68  F015         	goto	u7490
 13870   002ACC                     u7491:
 13871   002ACC  EF70  F015         	goto	l6586
 13872   002AD0                     u7490:
 13873   002AD0  0E00               	movlw	0
 13874   002AD2  6E31               	movwf	___fldiv@a^0,c
 13875   002AD4  0E00               	movlw	0
 13876   002AD6  6E32               	movwf	(___fldiv@a+1)^0,c
 13877   002AD8  0E00               	movlw	0
 13878   002ADA  6E33               	movwf	(___fldiv@a+2)^0,c
 13879   002ADC  0E00               	movlw	0
 13880   002ADE  6E34               	movwf	(___fldiv@a+3)^0,c
 13881   002AE0                     l6586:
 13882   002AE0  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13883   002AE2  0E00               	movlw	0
 13884   002AE4  6E34               	movwf	(___fldiv@a+3)^0,c
 13885   002AE6  EF7D  F015         	goto	l6592
 13886   002AEA                     l6590:
 13887   002AEA  0E00               	movlw	0
 13888   002AEC  6E31               	movwf	___fldiv@a^0,c
 13889   002AEE  0E00               	movlw	0
 13890   002AF0  6E32               	movwf	(___fldiv@a+1)^0,c
 13891   002AF2  0E00               	movlw	0
 13892   002AF4  6E33               	movwf	(___fldiv@a+2)^0,c
 13893   002AF6  0E00               	movlw	0
 13894   002AF8  6E34               	movwf	(___fldiv@a+3)^0,c
 13895   002AFA                     l6592:
 13896   002AFA  5031               	movf	___fldiv@a^0,w,c
 13897   002AFC  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13898   002AFE  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13899   002B00  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13900   002B02  A4D8               	btfss	status,2,c
 13901   002B04  EF86  F015         	goto	u7501
 13902   002B08  EF88  F015         	goto	u7500
 13903   002B0C                     u7501:
 13904   002B0C  EFA0  F015         	goto	l6604
 13905   002B10                     u7500:
 13906   002B10  0E00               	movlw	0
 13907   002B12  6E2D               	movwf	___fldiv@b^0,c
 13908   002B14  0E00               	movlw	0
 13909   002B16  6E2E               	movwf	(___fldiv@b+1)^0,c
 13910   002B18  0E00               	movlw	0
 13911   002B1A  6E2F               	movwf	(___fldiv@b+2)^0,c
 13912   002B1C  0E00               	movlw	0
 13913   002B1E  6E30               	movwf	(___fldiv@b+3)^0,c
 13914   002B20  0E80               	movlw	128
 13915   002B22  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13916   002B24  0E7F               	movlw	127
 13917   002B26  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13918   002B28                     l6598:
 13919   002B28  503D               	movf	___fldiv@sign^0,w,c
 13920   002B2A  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13921   002B2C  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13922   002B30  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13923   002B34  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13924   002B38  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13925   002B3C  EFE3  F016         	goto	l1292
 13926   002B40                     l6604:
 13927   002B40  5044               	movf	___fldiv@bexp^0,w,c
 13928   002B42  A4D8               	btfss	status,2,c
 13929   002B44  EFA6  F015         	goto	u7511
 13930   002B48  EFA8  F015         	goto	u7510
 13931   002B4C                     u7511:
 13932   002B4C  EFB2  F015         	goto	l6612
 13933   002B50                     u7510:
 13934   002B50  0E00               	movlw	0
 13935   002B52  6E2D               	movwf	?___fldiv^0,c
 13936   002B54  0E00               	movlw	0
 13937   002B56  6E2E               	movwf	(?___fldiv+1)^0,c
 13938   002B58  0E00               	movlw	0
 13939   002B5A  6E2F               	movwf	(?___fldiv+2)^0,c
 13940   002B5C  0E00               	movlw	0
 13941   002B5E  6E30               	movwf	(?___fldiv+3)^0,c
 13942   002B60  EFE3  F016         	goto	l1292
 13943   002B64                     l6612:
 13944   002B64  5045               	movf	___fldiv@aexp^0,w,c
 13945   002B66  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13946   002B6A  6A36               	clrf	(??___fldiv+1)^0,c
 13947   002B6C  5E35               	subwf	??___fldiv^0,f,c
 13948   002B6E  0E00               	movlw	0
 13949   002B70  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13950   002B72  0E7F               	movlw	127
 13951   002B74  2435               	addwf	??___fldiv^0,w,c
 13952   002B76  6E3E               	movwf	___fldiv@new_exp^0,c
 13953   002B78  0E00               	movlw	0
 13954   002B7A  2036               	addwfc	(??___fldiv+1)^0,w,c
 13955   002B7C  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13956   002B7E  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13957   002B82  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13958   002B86  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13959   002B8A  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13960   002B8E  0E00               	movlw	0
 13961   002B90  6E2D               	movwf	___fldiv@b^0,c
 13962   002B92  0E00               	movlw	0
 13963   002B94  6E2E               	movwf	(___fldiv@b+1)^0,c
 13964   002B96  0E00               	movlw	0
 13965   002B98  6E2F               	movwf	(___fldiv@b+2)^0,c
 13966   002B9A  0E00               	movlw	0
 13967   002B9C  6E30               	movwf	(___fldiv@b+3)^0,c
 13968   002B9E  0E00               	movlw	0
 13969   002BA0  6E40               	movwf	___fldiv@grs^0,c
 13970   002BA2  0E00               	movlw	0
 13971   002BA4  6E41               	movwf	(___fldiv@grs+1)^0,c
 13972   002BA6  0E00               	movlw	0
 13973   002BA8  6E42               	movwf	(___fldiv@grs+2)^0,c
 13974   002BAA  0E00               	movlw	0
 13975   002BAC  6E43               	movwf	(___fldiv@grs+3)^0,c
 13976   002BAE  0E00               	movlw	0
 13977   002BB0  6E45               	movwf	___fldiv@aexp^0,c
 13978   002BB2  EF13  F016         	goto	l1294
 13979   002BB6                     l6622:
 13980   002BB6  5045               	movf	___fldiv@aexp^0,w,c
 13981   002BB8  B4D8               	btfsc	status,2,c
 13982   002BBA  EFE1  F015         	goto	u7521
 13983   002BBE  EFE3  F015         	goto	u7520
 13984   002BC2                     u7521:
 13985   002BC2  EFFA  F015         	goto	l6630
 13986   002BC6                     u7520:
 13987   002BC6  90D8               	bcf	status,0,c
 13988   002BC8  3639               	rlcf	___fldiv@rem^0,f,c
 13989   002BCA  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13990   002BCC  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13991   002BCE  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13992   002BD0  90D8               	bcf	status,0,c
 13993   002BD2  362D               	rlcf	___fldiv@b^0,f,c
 13994   002BD4  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13995   002BD6  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13996   002BD8  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13997   002BDA  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13998   002BDC  EFF2  F015         	goto	u7531
 13999   002BE0  EFF4  F015         	goto	u7530
 14000   002BE4                     u7531:
 14001   002BE4  EFF5  F015         	goto	l1297
 14002   002BE8                     u7530:
 14003   002BE8  802D               	bsf	___fldiv@b^0,0,c
 14004   002BEA                     l1297:
 14005   002BEA  90D8               	bcf	status,0,c
 14006   002BEC  3640               	rlcf	___fldiv@grs^0,f,c
 14007   002BEE  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 14008   002BF0  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 14009   002BF2  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 14010   002BF4                     l6630:
 14011   002BF4  5031               	movf	___fldiv@a^0,w,c
 14012   002BF6  5C39               	subwf	___fldiv@rem^0,w,c
 14013   002BF8  5032               	movf	(___fldiv@a+1)^0,w,c
 14014   002BFA  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 14015   002BFC  5033               	movf	(___fldiv@a+2)^0,w,c
 14016   002BFE  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 14017   002C00  5034               	movf	(___fldiv@a+3)^0,w,c
 14018   002C02  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 14019   002C04  A0D8               	btfss	status,0,c
 14020   002C06  EF07  F016         	goto	u7541
 14021   002C0A  EF09  F016         	goto	u7540
 14022   002C0E                     u7541:
 14023   002C0E  EF12  F016         	goto	l6636
 14024   002C12                     u7540:
 14025   002C12  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 14026   002C14  5031               	movf	___fldiv@a^0,w,c
 14027   002C16  5E39               	subwf	___fldiv@rem^0,f,c
 14028   002C18  5032               	movf	(___fldiv@a+1)^0,w,c
 14029   002C1A  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 14030   002C1C  5033               	movf	(___fldiv@a+2)^0,w,c
 14031   002C1E  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 14032   002C20  5034               	movf	(___fldiv@a+3)^0,w,c
 14033   002C22  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 14034   002C24                     l6636:
 14035   002C24  2A45               	incf	___fldiv@aexp^0,f,c
 14036   002C26                     l1294:
 14037   002C26  0E19               	movlw	25
 14038   002C28  6445               	cpfsgt	___fldiv@aexp^0,c
 14039   002C2A  EF19  F016         	goto	u7551
 14040   002C2E  EF1B  F016         	goto	u7550
 14041   002C32                     u7551:
 14042   002C32  EFDB  F015         	goto	l6622
 14043   002C36                     u7550:
 14044   002C36  5039               	movf	___fldiv@rem^0,w,c
 14045   002C38  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 14046   002C3A  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 14047   002C3C  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 14048   002C3E  B4D8               	btfsc	status,2,c
 14049   002C40  EF24  F016         	goto	u7561
 14050   002C44  EF26  F016         	goto	u7560
 14051   002C48                     u7561:
 14052   002C48  EF3E  F016         	goto	l6648
 14053   002C4C                     u7560:
 14054   002C4C  8040               	bsf	___fldiv@grs^0,0,c
 14055   002C4E  EF3E  F016         	goto	l6648
 14056   002C52                     l6642:
 14057   002C52  90D8               	bcf	status,0,c
 14058   002C54  362D               	rlcf	___fldiv@b^0,f,c
 14059   002C56  362E               	rlcf	(___fldiv@b+1)^0,f,c
 14060   002C58  362F               	rlcf	(___fldiv@b+2)^0,f,c
 14061   002C5A  3630               	rlcf	(___fldiv@b+3)^0,f,c
 14062   002C5C  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 14063   002C5E  EF33  F016         	goto	u7571
 14064   002C62  EF35  F016         	goto	u7570
 14065   002C66                     u7571:
 14066   002C66  EF36  F016         	goto	l1303
 14067   002C6A                     u7570:
 14068   002C6A  802D               	bsf	___fldiv@b^0,0,c
 14069   002C6C                     l1303:
 14070   002C6C  90D8               	bcf	status,0,c
 14071   002C6E  3640               	rlcf	___fldiv@grs^0,f,c
 14072   002C70  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 14073   002C72  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 14074   002C74  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 14075   002C76  063E               	decf	___fldiv@new_exp^0,f,c
 14076   002C78  A0D8               	btfss	status,0,c
 14077   002C7A  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 14078   002C7C                     l6648:
 14079   002C7C  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 14080   002C7E  EF43  F016         	goto	u7581
 14081   002C82  EF45  F016         	goto	u7580
 14082   002C86                     u7581:
 14083   002C86  EF29  F016         	goto	l6642
 14084   002C8A                     u7580:
 14085   002C8A  0E00               	movlw	0
 14086   002C8C  6E45               	movwf	___fldiv@aexp^0,c
 14087   002C8E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 14088   002C90  EF4C  F016         	goto	u7591
 14089   002C94  EF4E  F016         	goto	u7590
 14090   002C98                     u7591:
 14091   002C98  EF72  F016         	goto	l1305
 14092   002C9C                     u7590:
 14093   002C9C  0EFF               	movlw	255
 14094   002C9E  1440               	andwf	___fldiv@grs^0,w,c
 14095   002CA0  6E35               	movwf	??___fldiv^0,c
 14096   002CA2  0EFF               	movlw	255
 14097   002CA4  1441               	andwf	(___fldiv@grs+1)^0,w,c
 14098   002CA6  6E36               	movwf	(??___fldiv+1)^0,c
 14099   002CA8  0EFF               	movlw	255
 14100   002CAA  1442               	andwf	(___fldiv@grs+2)^0,w,c
 14101   002CAC  6E37               	movwf	(??___fldiv+2)^0,c
 14102   002CAE  0E7F               	movlw	127
 14103   002CB0  1443               	andwf	(___fldiv@grs+3)^0,w,c
 14104   002CB2  6E38               	movwf	(??___fldiv+3)^0,c
 14105   002CB4  5035               	movf	??___fldiv^0,w,c
 14106   002CB6  1036               	iorwf	(??___fldiv+1)^0,w,c
 14107   002CB8  1037               	iorwf	(??___fldiv+2)^0,w,c
 14108   002CBA  1038               	iorwf	(??___fldiv+3)^0,w,c
 14109   002CBC  B4D8               	btfsc	status,2,c
 14110   002CBE  EF63  F016         	goto	u7601
 14111   002CC2  EF65  F016         	goto	u7600
 14112   002CC6                     u7601:
 14113   002CC6  EF69  F016         	goto	l1306
 14114   002CCA                     u7600:
 14115   002CCA                     l6656:
 14116   002CCA  0E01               	movlw	1
 14117   002CCC  6E45               	movwf	___fldiv@aexp^0,c
 14118   002CCE  EF72  F016         	goto	l1305
 14119   002CD2                     l1306:
 14120   002CD2  A02D               	btfss	___fldiv@b^0,0,c
 14121   002CD4  EF6E  F016         	goto	u7611
 14122   002CD8  EF70  F016         	goto	u7610
 14123   002CDC                     u7611:
 14124   002CDC  EF72  F016         	goto	l1305
 14125   002CE0                     u7610:
 14126   002CE0  EF65  F016         	goto	l6656
 14127   002CE4                     l1305:
 14128   002CE4  5045               	movf	___fldiv@aexp^0,w,c
 14129   002CE6  B4D8               	btfsc	status,2,c
 14130   002CE8  EF78  F016         	goto	u7621
 14131   002CEC  EF7A  F016         	goto	u7620
 14132   002CF0                     u7621:
 14133   002CF0  EF9E  F016         	goto	l6668
 14134   002CF4                     u7620:
 14135   002CF4  0E01               	movlw	1
 14136   002CF6  262D               	addwf	___fldiv@b^0,f,c
 14137   002CF8  0E00               	movlw	0
 14138   002CFA  222E               	addwfc	(___fldiv@b+1)^0,f,c
 14139   002CFC  222F               	addwfc	(___fldiv@b+2)^0,f,c
 14140   002CFE  2230               	addwfc	(___fldiv@b+3)^0,f,c
 14141   002D00  A030               	btfss	(___fldiv@b+3)^0,0,c
 14142   002D02  EF85  F016         	goto	u7631
 14143   002D06  EF87  F016         	goto	u7630
 14144   002D0A                     u7631:
 14145   002D0A  EF9E  F016         	goto	l6668
 14146   002D0E                     u7630:
 14147   002D0E  C02D  F035         	movff	___fldiv@b,??___fldiv
 14148   002D12  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 14149   002D16  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 14150   002D1A  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 14151   002D1E  3438               	rlcf	(??___fldiv+3)^0,w,c
 14152   002D20  3238               	rrcf	(??___fldiv+3)^0,f,c
 14153   002D22  3237               	rrcf	(??___fldiv+2)^0,f,c
 14154   002D24  3236               	rrcf	(??___fldiv+1)^0,f,c
 14155   002D26  3235               	rrcf	??___fldiv^0,f,c
 14156   002D28  C035  F02D         	movff	??___fldiv,___fldiv@b
 14157   002D2C  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 14158   002D30  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 14159   002D34  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 14160   002D38  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 14161   002D3A  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 14162   002D3C                     l6668:
 14163   002D3C  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14164   002D3E  EFA9  F016         	goto	u7641
 14165   002D42  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14166   002D44  E108               	bnz	u7640
 14167   002D46  283E               	incf	___fldiv@new_exp^0,w,c
 14168   002D48  A0D8               	btfss	status,0,c
 14169   002D4A  EFA9  F016         	goto	u7641
 14170   002D4E  EFAB  F016         	goto	u7640
 14171   002D52                     u7641:
 14172   002D52  EFB6  F016         	goto	l6672
 14173   002D56                     u7640:
 14174   002D56  0E00               	movlw	0
 14175   002D58  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14176   002D5A  683E               	setf	___fldiv@new_exp^0,c
 14177   002D5C  0E00               	movlw	0
 14178   002D5E  6E2D               	movwf	___fldiv@b^0,c
 14179   002D60  0E00               	movlw	0
 14180   002D62  6E2E               	movwf	(___fldiv@b+1)^0,c
 14181   002D64  0E00               	movlw	0
 14182   002D66  6E2F               	movwf	(___fldiv@b+2)^0,c
 14183   002D68  0E00               	movlw	0
 14184   002D6A  6E30               	movwf	(___fldiv@b+3)^0,c
 14185   002D6C                     l6672:
 14186   002D6C  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14187   002D6E  EFC3  F016         	goto	u7650
 14188   002D72  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14189   002D74  E106               	bnz	u7651
 14190   002D76  043E               	decf	___fldiv@new_exp^0,w,c
 14191   002D78  B0D8               	btfsc	status,0,c
 14192   002D7A  EFC1  F016         	goto	u7651
 14193   002D7E  EFC3  F016         	goto	u7650
 14194   002D82                     u7651:
 14195   002D82  EFD1  F016         	goto	l6676
 14196   002D86                     u7650:
 14197   002D86  0E00               	movlw	0
 14198   002D88  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14199   002D8A  0E00               	movlw	0
 14200   002D8C  6E3E               	movwf	___fldiv@new_exp^0,c
 14201   002D8E  0E00               	movlw	0
 14202   002D90  6E2D               	movwf	___fldiv@b^0,c
 14203   002D92  0E00               	movlw	0
 14204   002D94  6E2E               	movwf	(___fldiv@b+1)^0,c
 14205   002D96  0E00               	movlw	0
 14206   002D98  6E2F               	movwf	(___fldiv@b+2)^0,c
 14207   002D9A  0E00               	movlw	0
 14208   002D9C  6E30               	movwf	(___fldiv@b+3)^0,c
 14209   002D9E  0E00               	movlw	0
 14210   002DA0  6E3D               	movwf	___fldiv@sign^0,c
 14211   002DA2                     l6676:
 14212   002DA2  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 14213   002DA6  A044               	btfss	___fldiv@bexp^0,0,c
 14214   002DA8  EFD8  F016         	goto	u7661
 14215   002DAC  EFDA  F016         	goto	u7660
 14216   002DB0                     u7661:
 14217   002DB0  EFDD  F016         	goto	l6682
 14218   002DB4                     u7660:
 14219   002DB4  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 14220   002DB6  EFDE  F016         	goto	l6684
 14221   002DBA                     l6682:
 14222   002DBA  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 14223   002DBC                     l6684:
 14224   002DBC  90D8               	bcf	status,0,c
 14225   002DBE  3044               	rrcf	___fldiv@bexp^0,w,c
 14226   002DC0  6E30               	movwf	(___fldiv@b+3)^0,c
 14227   002DC2  EF94  F015         	goto	l6598
 14228   002DC6                     l1292:
 14229   002DC6  0012               	return		;funcret
 14230   002DC8                     __end_of___fldiv:
 14231                           	callstack 0
 14232                           
 14233 ;; *************** function _dtoa *****************
 14234 ;; Defined at:
 14235 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 14238 ;;		 -> NULL(0), sprintf@f(12), 
 14239 ;;  d               2   33[COMRAM] int 
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;  i               2   42[COMRAM] int 
 14242 ;;  p               2   39[COMRAM] int 
 14243 ;;  w               2   37[COMRAM] int 
 14244 ;;  s               1   41[COMRAM] unsigned char 
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  1    wreg      void 
 14247 ;; Registers used:
 14248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14257 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14258 ;;Total ram usage:       13 bytes
 14259 ;; Hardware stack levels used: 1
 14260 ;; Hardware stack levels required when called: 5
 14261 ;; This function calls:
 14262 ;;		___awdiv
 14263 ;;		___awmod
 14264 ;;		_abs
 14265 ;;		_pad
 14266 ;; This function is called by:
 14267 ;;		_vfpfcnvrt
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text50
 14272   003C5A                     __ptext50:
 14273                           	callstack 0
 14274   003C5A                     _dtoa:
 14275                           	callstack 21
 14276   003C5A                     
 14277                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14278   003C5A  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14279   003C5C  EF32  F01E         	goto	u8451
 14280   003C60  EF35  F01E         	goto	u8450
 14281   003C64                     u8451:
 14282   003C64  0E01               	movlw	1
 14283   003C66  EF36  F01E         	goto	u8460
 14284   003C6A                     u8450:
 14285   003C6A  0E00               	movlw	0
 14286   003C6C                     u8460:
 14287   003C6C  6E2A               	movwf	dtoa@s^0,c
 14288                           
 14289                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14290   003C6E  BE58               	btfsc	(_prec+1)^0,7,c
 14291   003C70  EF3E  F01E         	goto	u8470
 14292   003C74  EF3C  F01E         	goto	u8471
 14293   003C78                     u8471:
 14294   003C78  EF44  F01E         	goto	l1427
 14295   003C7C                     u8470:
 14296   003C7C  0E00               	movlw	0
 14297   003C7E  6E29               	movwf	(dtoa@p+1)^0,c
 14298   003C80  0E01               	movlw	1
 14299   003C82  6E28               	movwf	dtoa@p^0,c
 14300   003C84  EF48  F01E         	goto	l1429
 14301   003C88                     l1427:
 14302   003C88  C057  F028         	movff	_prec,dtoa@p
 14303   003C8C  C058  F029         	movff	_prec+1,dtoa@p+1
 14304   003C90                     l1429:
 14305                           
 14306                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14307   003C90  C055  F026         	movff	_width,dtoa@w
 14308   003C94  C056  F027         	movff	_width+1,dtoa@w+1
 14309   003C98                     
 14310                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14311   003C98  502A               	movf	dtoa@s^0,w,c
 14312   003C9A  B4D8               	btfsc	status,2,c
 14313   003C9C  EF52  F01E         	goto	u8481
 14314   003CA0  EF54  F01E         	goto	u8480
 14315   003CA4                     u8481:
 14316   003CA4  EF6B  F01E         	goto	l1430
 14317   003CA8                     u8480:
 14318   003CA8                     
 14319                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14320   003CA8  0626               	decf	dtoa@w^0,f,c
 14321   003CAA  A0D8               	btfss	status,0,c
 14322   003CAC  0627               	decf	(dtoa@w+1)^0,f,c
 14323   003CAE                     
 14324                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14325   003CAE  502A               	movf	dtoa@s^0,w,c
 14326   003CB0  A4D8               	btfss	status,2,c
 14327   003CB2  EF5D  F01E         	goto	u8491
 14328   003CB6  EF5F  F01E         	goto	u8490
 14329   003CBA                     u8491:
 14330   003CBA  EF65  F01E         	goto	l7142
 14331   003CBE                     u8490:
 14332   003CBE  0E00               	movlw	0
 14333   003CC0  6E25               	movwf	(_dtoa$4044+1)^0,c
 14334   003CC2  0E2B               	movlw	43
 14335   003CC4  6E24               	movwf	_dtoa$4044^0,c
 14336   003CC6  EF69  F01E         	goto	l7144
 14337   003CCA                     l7142:
 14338   003CCA  0E00               	movlw	0
 14339   003CCC  6E25               	movwf	(_dtoa$4044+1)^0,c
 14340   003CCE  0E2D               	movlw	45
 14341   003CD0  6E24               	movwf	_dtoa$4044^0,c
 14342   003CD2                     l7144:
 14343   003CD2  C024  F02A         	movff	_dtoa$4044,dtoa@s
 14344   003CD6                     l1430:
 14345                           
 14346                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14347   003CD6  0E00               	movlw	0
 14348   003CD8  6E2C               	movwf	(dtoa@i+1)^0,c
 14349   003CDA  0E4F               	movlw	79
 14350   003CDC  6E2B               	movwf	dtoa@i^0,c
 14351   003CDE                     
 14352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14353   003CDE  0E00               	movlw	0
 14354   003CE0  0101               	movlb	1	; () banked
 14355   003CE2  6F76               	movwf	(_dbuf+79)& (0+255),b
 14356                           
 14357                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14358   003CE4  EFA4  F01E         	goto	l7158
 14359   003CE8                     l7148:
 14360                           
 14361                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14362   003CE8  062B               	decf	dtoa@i^0,f,c
 14363   003CEA  A0D8               	btfss	status,0,c
 14364   003CEC  062C               	decf	(dtoa@i+1)^0,f,c
 14365   003CEE                     
 14366                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14367   003CEE  0E27               	movlw	low _dbuf
 14368   003CF0  242B               	addwf	dtoa@i^0,w,c
 14369   003CF2  6ED9               	movwf	fsr2l,c
 14370   003CF4  0E01               	movlw	high _dbuf
 14371   003CF6  202C               	addwfc	(dtoa@i+1)^0,w,c
 14372   003CF8  6EDA               	movwf	fsr2h,c
 14373   003CFA  C022  F006         	movff	dtoa@d,___awmod@dividend
 14374   003CFE  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14375   003D02  0E00               	movlw	0
 14376   003D04  6E09               	movwf	(___awmod@divisor+1)^0,c
 14377   003D06  0E0A               	movlw	10
 14378   003D08  6E08               	movwf	___awmod@divisor^0,c
 14379   003D0A  EC0D  F025         	call	___awmod	;wreg free
 14380   003D0E  C006  F00C         	movff	?___awmod,abs@a
 14381   003D12  C007  F00D         	movff	?___awmod+1,abs@a+1
 14382   003D16  EC19  F029         	call	_abs	;wreg free
 14383   003D1A  500C               	movf	?_abs^0,w,c
 14384   003D1C  0F30               	addlw	48
 14385   003D1E  6EDF               	movwf	indf2,c
 14386   003D20                     
 14387                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14388   003D20  0628               	decf	dtoa@p^0,f,c
 14389   003D22  A0D8               	btfss	status,0,c
 14390   003D24  0629               	decf	(dtoa@p+1)^0,f,c
 14391   003D26                     
 14392                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14393   003D26  0626               	decf	dtoa@w^0,f,c
 14394   003D28  A0D8               	btfss	status,0,c
 14395   003D2A  0627               	decf	(dtoa@w+1)^0,f,c
 14396   003D2C                     
 14397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14398   003D2C  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14399   003D30  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14400   003D34  0E00               	movlw	0
 14401   003D36  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14402   003D38  0E0A               	movlw	10
 14403   003D3A  6E1A               	movwf	___awdiv@divisor^0,c
 14404   003D3C  EC52  F024         	call	___awdiv	;wreg free
 14405   003D40  C018  F022         	movff	?___awdiv,dtoa@d
 14406   003D44  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14407   003D48                     l7158:
 14408                           
 14409                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14410   003D48  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14411   003D4A  EFAF  F01E         	goto	u8501
 14412   003D4E  502C               	movf	(dtoa@i+1)^0,w,c
 14413   003D50  E108               	bnz	u8500
 14414   003D52  042B               	decf	dtoa@i^0,w,c
 14415   003D54  A0D8               	btfss	status,0,c
 14416   003D56  EFAF  F01E         	goto	u8501
 14417   003D5A  EFB1  F01E         	goto	u8500
 14418   003D5E                     u8501:
 14419   003D5E  EFC7  F01E         	goto	l7164
 14420   003D62                     u8500:
 14421   003D62  5022               	movf	dtoa@d^0,w,c
 14422   003D64  1023               	iorwf	(dtoa@d+1)^0,w,c
 14423   003D66  A4D8               	btfss	status,2,c
 14424   003D68  EFB8  F01E         	goto	u8511
 14425   003D6C  EFBA  F01E         	goto	u8510
 14426   003D70                     u8511:
 14427   003D70  EF74  F01E         	goto	l7148
 14428   003D74                     u8510:
 14429   003D74  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14430   003D76  EFC7  F01E         	goto	u8520
 14431   003D7A  5029               	movf	(dtoa@p+1)^0,w,c
 14432   003D7C  E106               	bnz	u8521
 14433   003D7E  0428               	decf	dtoa@p^0,w,c
 14434   003D80  B0D8               	btfsc	status,0,c
 14435   003D82  EFC5  F01E         	goto	u8521
 14436   003D86  EFC7  F01E         	goto	u8520
 14437   003D8A                     u8521:
 14438   003D8A  EF74  F01E         	goto	l7148
 14439   003D8E                     u8520:
 14440   003D8E                     l7164:
 14441                           
 14442                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14443   003D8E  502A               	movf	dtoa@s^0,w,c
 14444   003D90  B4D8               	btfsc	status,2,c
 14445   003D92  EFCD  F01E         	goto	u8531
 14446   003D96  EFCF  F01E         	goto	u8530
 14447   003D9A                     u8531:
 14448   003D9A  EFDA  F01E         	goto	l7170
 14449   003D9E                     u8530:
 14450   003D9E                     
 14451                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14452   003D9E  062B               	decf	dtoa@i^0,f,c
 14453   003DA0  A0D8               	btfss	status,0,c
 14454   003DA2  062C               	decf	(dtoa@i+1)^0,f,c
 14455   003DA4                     
 14456                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14457   003DA4  0E27               	movlw	low _dbuf
 14458   003DA6  242B               	addwf	dtoa@i^0,w,c
 14459   003DA8  6ED9               	movwf	fsr2l,c
 14460   003DAA  0E01               	movlw	high _dbuf
 14461   003DAC  202C               	addwfc	(dtoa@i+1)^0,w,c
 14462   003DAE  6EDA               	movwf	fsr2h,c
 14463   003DB0  C02A  FFDF         	movff	dtoa@s,indf2
 14464   003DB4                     l7170:
 14465                           
 14466                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14467   003DB4  C020  F017         	movff	dtoa@fp,pad@fp
 14468   003DB8  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14469   003DBC  0E27               	movlw	low _dbuf
 14470   003DBE  242B               	addwf	dtoa@i^0,w,c
 14471   003DC0  6E19               	movwf	pad@buf^0,c
 14472   003DC2  0E01               	movlw	high _dbuf
 14473   003DC4  202C               	addwfc	(dtoa@i+1)^0,w,c
 14474   003DC6  6E1A               	movwf	(pad@buf+1)^0,c
 14475   003DC8  C026  F01B         	movff	dtoa@w,pad@p
 14476   003DCC  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14477   003DD0  EC11  F026         	call	_pad	;wreg free
 14478   003DD4  0012               	return		;funcret
 14479   003DD6                     __end_of_dtoa:
 14480                           	callstack 0
 14481                           
 14482 ;; *************** function _pad *****************
 14483 ;; Defined at:
 14484 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14487 ;;		 -> NULL(0), sprintf@f(12), 
 14488 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14489 ;;		 -> dbuf(80), 
 14490 ;;  p               2   26[COMRAM] int 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  i               2   29[COMRAM] int 
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  1    wreg      void 
 14495 ;; Registers used:
 14496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;Total ram usage:        9 bytes
 14507 ;; Hardware stack levels used: 1
 14508 ;; Hardware stack levels required when called: 4
 14509 ;; This function calls:
 14510 ;;		_fputc
 14511 ;;		_fputs
 14512 ;; This function is called by:
 14513 ;;		_dtoa
 14514 ;;		_efgtoa
 14515 ;;		_utoa
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text51
 14520   004C22                     __ptext51:
 14521                           	callstack 0
 14522   004C22                     _pad:
 14523                           	callstack 21
 14524   004C22                     
 14525                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14526   004C22  A059               	btfss	_flags^0,0,c
 14527   004C24  EF16  F026         	goto	u8201
 14528   004C28  EF18  F026         	goto	u8200
 14529   004C2C                     u8201:
 14530   004C2C  EF22  F026         	goto	l7040
 14531   004C30                     u8200:
 14532   004C30                     
 14533                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14534   004C30  C019  F010         	movff	pad@buf,fputs@s
 14535   004C34  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14536   004C38  C017  F012         	movff	pad@fp,fputs@fp
 14537   004C3C  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14538   004C40  EC4F  F028         	call	_fputs	;wreg free
 14539   004C44                     l7040:
 14540                           
 14541                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14542   004C44  BE1C               	btfsc	(pad@p+1)^0,7,c
 14543   004C46  EF29  F026         	goto	u8210
 14544   004C4A  EF27  F026         	goto	u8211
 14545   004C4E                     u8211:
 14546   004C4E  EF2D  F026         	goto	l1418
 14547   004C52                     u8210:
 14548   004C52                     
 14549                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14550   004C52  0E00               	movlw	0
 14551   004C54  6E1C               	movwf	(pad@p+1)^0,c
 14552   004C56  0E00               	movlw	0
 14553   004C58  6E1B               	movwf	pad@p^0,c
 14554   004C5A                     l1418:
 14555                           
 14556                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14557   004C5A  0E00               	movlw	0
 14558   004C5C  6E1F               	movwf	(pad@i+1)^0,c
 14559   004C5E  0E00               	movlw	0
 14560   004C60  6E1E               	movwf	pad@i^0,c
 14561                           
 14562                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14563   004C62  EF3F  F026         	goto	l7048
 14564   004C66                     l7044:
 14565                           
 14566                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14567   004C66  0E00               	movlw	0
 14568   004C68  6E08               	movwf	(fputc@c+1)^0,c
 14569   004C6A  0E20               	movlw	32
 14570   004C6C  6E07               	movwf	fputc@c^0,c
 14571   004C6E  C017  F009         	movff	pad@fp,fputc@fp
 14572   004C72  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14573   004C76  ECED  F023         	call	_fputc	;wreg free
 14574   004C7A                     
 14575                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14576   004C7A  4A1E               	infsnz	pad@i^0,f,c
 14577   004C7C  2A1F               	incf	(pad@i+1)^0,f,c
 14578   004C7E                     l7048:
 14579                           
 14580                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14581   004C7E  501B               	movf	pad@p^0,w,c
 14582   004C80  5C1E               	subwf	pad@i^0,w,c
 14583   004C82  501F               	movf	(pad@i+1)^0,w,c
 14584   004C84  0A80               	xorlw	128
 14585   004C86  6E1D               	movwf	??_pad^0,c
 14586   004C88  501C               	movf	(pad@p+1)^0,w,c
 14587   004C8A  0A80               	xorlw	128
 14588   004C8C  581D               	subwfb	??_pad^0,w,c
 14589   004C8E  A0D8               	btfss	status,0,c
 14590   004C90  EF4C  F026         	goto	u8221
 14591   004C94  EF4E  F026         	goto	u8220
 14592   004C98                     u8221:
 14593   004C98  EF33  F026         	goto	l7044
 14594   004C9C                     u8220:
 14595   004C9C                     
 14596                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14597   004C9C  B059               	btfsc	_flags^0,0,c
 14598   004C9E  EF53  F026         	goto	u8231
 14599   004CA2  EF55  F026         	goto	u8230
 14600   004CA6                     u8231:
 14601   004CA6  EF5F  F026         	goto	l1423
 14602   004CAA                     u8230:
 14603   004CAA                     
 14604                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14605   004CAA  C019  F010         	movff	pad@buf,fputs@s
 14606   004CAE  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14607   004CB2  C017  F012         	movff	pad@fp,fputs@fp
 14608   004CB6  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14609   004CBA  EC4F  F028         	call	_fputs	;wreg free
 14610   004CBE                     l1423:
 14611   004CBE  0012               	return		;funcret
 14612   004CC0                     __end_of_pad:
 14613                           	callstack 0
 14614                           
 14615 ;; *************** function _fputs *****************
 14616 ;; Defined at:
 14617 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14620 ;;		 -> dbuf(80), 
 14621 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14622 ;;		 -> NULL(0), sprintf@f(12), 
 14623 ;; Auto vars:     Size  Location     Type
 14624 ;;  i               2   20[COMRAM] int 
 14625 ;;  c               1   19[COMRAM] unsigned char 
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  2   15[COMRAM] int 
 14628 ;; Registers used:
 14629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;Total ram usage:        7 bytes
 14640 ;; Hardware stack levels used: 1
 14641 ;; Hardware stack levels required when called: 3
 14642 ;; This function calls:
 14643 ;;		_fputc
 14644 ;; This function is called by:
 14645 ;;		_pad
 14646 ;; This function uses a non-reentrant model
 14647 ;;
 14648                           
 14649                           	psect	text52
 14650   00509E                     __ptext52:
 14651                           	callstack 0
 14652   00509E                     _fputs:
 14653                           	callstack 21
 14654   00509E  0E00               	movlw	0
 14655   0050A0  6E16               	movwf	(fputs@i+1)^0,c
 14656   0050A2  0E00               	movlw	0
 14657   0050A4  6E15               	movwf	fputs@i^0,c
 14658   0050A6  EF60  F028         	goto	l6546
 14659   0050AA                     l6542:
 14660   0050AA  C014  F007         	movff	fputs@c,fputc@c
 14661   0050AE  6A08               	clrf	(fputc@c+1)^0,c
 14662   0050B0  C012  F009         	movff	fputs@fp,fputc@fp
 14663   0050B4  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14664   0050B8  ECED  F023         	call	_fputc	;wreg free
 14665   0050BC  4A15               	infsnz	fputs@i^0,f,c
 14666   0050BE  2A16               	incf	(fputs@i+1)^0,f,c
 14667   0050C0                     l6546:
 14668   0050C0  5015               	movf	fputs@i^0,w,c
 14669   0050C2  2410               	addwf	fputs@s^0,w,c
 14670   0050C4  6ED9               	movwf	fsr2l,c
 14671   0050C6  5016               	movf	(fputs@i+1)^0,w,c
 14672   0050C8  2011               	addwfc	(fputs@s+1)^0,w,c
 14673   0050CA  6EDA               	movwf	fsr2h,c
 14674   0050CC  50DF               	movf	indf2,w,c
 14675   0050CE  6E14               	movwf	fputs@c^0,c
 14676   0050D0  5014               	movf	fputs@c^0,w,c
 14677   0050D2  A4D8               	btfss	status,2,c
 14678   0050D4  EF6E  F028         	goto	u7431
 14679   0050D8  EF70  F028         	goto	u7430
 14680   0050DC                     u7431:
 14681   0050DC  EF55  F028         	goto	l6542
 14682   0050E0                     u7430:
 14683   0050E0  0012               	return		;funcret
 14684   0050E2                     __end_of_fputs:
 14685                           	callstack 0
 14686                           
 14687 ;; *************** function _fputc *****************
 14688 ;; Defined at:
 14689 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;  c               2    6[COMRAM] int 
 14692 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14693 ;;		 -> NULL(0), sprintf@f(12), 
 14694 ;; Auto vars:     Size  Location     Type
 14695 ;;		None
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  2    6[COMRAM] int 
 14698 ;; Registers used:
 14699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14707 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14708 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14709 ;;Total ram usage:        9 bytes
 14710 ;; Hardware stack levels used: 1
 14711 ;; Hardware stack levels required when called: 2
 14712 ;; This function calls:
 14713 ;;		_putch
 14714 ;; This function is called by:
 14715 ;;		_pad
 14716 ;;		_stoa
 14717 ;;		_vfpfcnvrt
 14718 ;;		_fputs
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           	psect	text53
 14723   0047DA                     __ptext53:
 14724                           	callstack 0
 14725   0047DA                     _fputc:
 14726                           	callstack 21
 14727   0047DA  5009               	movf	fputc@fp^0,w,c
 14728   0047DC  100A               	iorwf	(fputc@fp+1)^0,w,c
 14729   0047DE  B4D8               	btfsc	status,2,c
 14730   0047E0  EFF4  F023         	goto	u7001
 14731   0047E4  EFF6  F023         	goto	u7000
 14732   0047E8                     u7001:
 14733   0047E8  EFFF  F023         	goto	l6328
 14734   0047EC                     u7000:
 14735   0047EC  5009               	movf	fputc@fp^0,w,c
 14736   0047EE  100A               	iorwf	(fputc@fp+1)^0,w,c
 14737   0047F0  A4D8               	btfss	status,2,c
 14738   0047F2  EFFD  F023         	goto	u7011
 14739   0047F6  EFFF  F023         	goto	u7010
 14740   0047FA                     u7011:
 14741   0047FA  EF04  F024         	goto	l6330
 14742   0047FE                     u7010:
 14743   0047FE                     l6328:
 14744   0047FE  5007               	movf	fputc@c^0,w,c
 14745   004800  EC7D  F029         	call	_putch
 14746   004804  EF51  F024         	goto	l1652
 14747   004808                     l6330:
 14748   004808  EE20 F00A          	lfsr	2,10
 14749   00480C  5009               	movf	fputc@fp^0,w,c
 14750   00480E  26D9               	addwf	fsr2l,f,c
 14751   004810  500A               	movf	(fputc@fp+1)^0,w,c
 14752   004812  22DA               	addwfc	fsr2h,f,c
 14753   004814  50DE               	movf	postinc2,w,c
 14754   004816  10DE               	iorwf	postinc2,w,c
 14755   004818  B4D8               	btfsc	status,2,c
 14756   00481A  EF11  F024         	goto	u7021
 14757   00481E  EF13  F024         	goto	u7020
 14758   004822                     u7021:
 14759   004822  EF2E  F024         	goto	l6334
 14760   004826                     u7020:
 14761   004826  EE20 F00A          	lfsr	2,10
 14762   00482A  5009               	movf	fputc@fp^0,w,c
 14763   00482C  26D9               	addwf	fsr2l,f,c
 14764   00482E  500A               	movf	(fputc@fp+1)^0,w,c
 14765   004830  22DA               	addwfc	fsr2h,f,c
 14766   004832  EE10 F003          	lfsr	1,3
 14767   004836  5009               	movf	fputc@fp^0,w,c
 14768   004838  26E1               	addwf	fsr1l,f,c
 14769   00483A  500A               	movf	(fputc@fp+1)^0,w,c
 14770   00483C  22E2               	addwfc	fsr1h,f,c
 14771   00483E  50DE               	movf	postinc2,w,c
 14772   004840  5CE6               	subwf	postinc1,w,c
 14773   004842  50E6               	movf	postinc1,w,c
 14774   004844  0A80               	xorlw	128
 14775   004846  6E0F               	movwf	(??_fputc+4)^0,c
 14776   004848  50DE               	movf	postinc2,w,c
 14777   00484A  0A80               	xorlw	128
 14778   00484C  580F               	subwfb	(??_fputc+4)^0,w,c
 14779   00484E  B0D8               	btfsc	status,0,c
 14780   004850  EF2C  F024         	goto	u7031
 14781   004854  EF2E  F024         	goto	u7030
 14782   004858                     u7031:
 14783   004858  EF51  F024         	goto	l1652
 14784   00485C                     u7030:
 14785   00485C                     l6334:
 14786   00485C  EE20 F003          	lfsr	2,3
 14787   004860  5009               	movf	fputc@fp^0,w,c
 14788   004862  26D9               	addwf	fsr2l,f,c
 14789   004864  500A               	movf	(fputc@fp+1)^0,w,c
 14790   004866  22DA               	addwfc	fsr2h,f,c
 14791   004868  CFDE F00B          	movff	postinc2,??_fputc
 14792   00486C  CFDD F00C          	movff	postdec2,??_fputc+1
 14793   004870  C009  FFD9         	movff	fputc@fp,fsr2l
 14794   004874  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14795   004878  CFDE F00D          	movff	postinc2,??_fputc+2
 14796   00487C  CFDD F00E          	movff	postdec2,??_fputc+3
 14797   004880  500B               	movf	??_fputc^0,w,c
 14798   004882  240D               	addwf	(??_fputc+2)^0,w,c
 14799   004884  6ED9               	movwf	fsr2l,c
 14800   004886  500C               	movf	(??_fputc+1)^0,w,c
 14801   004888  200E               	addwfc	(??_fputc+3)^0,w,c
 14802   00488A  6EDA               	movwf	fsr2h,c
 14803   00488C  C007  FFDF         	movff	fputc@c,indf2
 14804   004890  EE20 F003          	lfsr	2,3
 14805   004894  5009               	movf	fputc@fp^0,w,c
 14806   004896  26D9               	addwf	fsr2l,f,c
 14807   004898  500A               	movf	(fputc@fp+1)^0,w,c
 14808   00489A  22DA               	addwfc	fsr2h,f,c
 14809   00489C  2ADE               	incf	postinc2,f,c
 14810   00489E  0E00               	movlw	0
 14811   0048A0  22DD               	addwfc	postdec2,f,c
 14812   0048A2                     l1652:
 14813   0048A2  0012               	return		;funcret
 14814   0048A4                     __end_of_fputc:
 14815                           	callstack 0
 14816                           
 14817 ;; *************** function _putch *****************
 14818 ;; Defined at:
 14819 ;;		line 11 in file "putch.c"
 14820 ;; Parameters:    Size  Location     Type
 14821 ;;  data            1    wreg     unsigned char 
 14822 ;; Auto vars:     Size  Location     Type
 14823 ;;  data            1    5[COMRAM] unsigned char 
 14824 ;; Return value:  Size  Location     Type
 14825 ;;                  1    wreg      void 
 14826 ;; Registers used:
 14827 ;;		wreg
 14828 ;; Tracked objects:
 14829 ;;		On entry : 0/0
 14830 ;;		On exit  : 0/0
 14831 ;;		Unchanged: 0/0
 14832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14837 ;;Total ram usage:        1 bytes
 14838 ;; Hardware stack levels used: 1
 14839 ;; Hardware stack levels required when called: 1
 14840 ;; This function calls:
 14841 ;;		Nothing
 14842 ;; This function is called by:
 14843 ;;		_fputc
 14844 ;; This function uses a non-reentrant model
 14845 ;;
 14846                           
 14847                           	psect	text54
 14848   0052FA                     __ptext54:
 14849                           	callstack 0
 14850   0052FA                     _putch:
 14851                           	callstack 21
 14852                           
 14853                           ;incstack = 0
 14854                           ;putch@data stored from wreg
 14855   0052FA  6E06               	movwf	putch@data^0,c
 14856   0052FC                     l270:
 14857   0052FC  A89E               	btfss	3998,4,c	;volatile
 14858   0052FE  EF83  F029         	goto	u6991
 14859   005302  EF85  F029         	goto	u6990
 14860   005306                     u6991:
 14861   005306  EF7E  F029         	goto	l270
 14862   00530A                     u6990:
 14863   00530A                     
 14864                           ;putch.c: 13:     TXREG1 = data;
 14865   00530A  C006  FFAD         	movff	putch@data,4013	;volatile
 14866   00530E  0012               	return		;funcret
 14867   005310                     __end_of_putch:
 14868                           	callstack 0
 14869                           
 14870 ;; *************** function _abs *****************
 14871 ;; Defined at:
 14872 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;  a               2   11[COMRAM] int 
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;		None
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  2   11[COMRAM] int 
 14879 ;; Registers used:
 14880 ;;		wreg, status,2, status,0
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14890 ;;Total ram usage:        4 bytes
 14891 ;; Hardware stack levels used: 1
 14892 ;; Hardware stack levels required when called: 1
 14893 ;; This function calls:
 14894 ;;		Nothing
 14895 ;; This function is called by:
 14896 ;;		_dtoa
 14897 ;; This function uses a non-reentrant model
 14898 ;;
 14899                           
 14900                           	psect	text55
 14901   005232                     __ptext55:
 14902                           	callstack 0
 14903   005232                     _abs:
 14904                           	callstack 24
 14905   005232  BE0D               	btfsc	(abs@a+1)^0,7,c
 14906   005234  EF1E  F029         	goto	u8241
 14907   005238  EF20  F029         	goto	u8240
 14908   00523C                     u8241:
 14909   00523C  EF26  F029         	goto	l1611
 14910   005240                     u8240:
 14911   005240  C00C  F00C         	movff	abs@a,?_abs
 14912   005244  C00D  F00D         	movff	abs@a+1,?_abs+1
 14913   005248  EF32  F029         	goto	l1614
 14914   00524C                     l1611:
 14915   00524C  C00C  F00E         	movff	abs@a,??_abs
 14916   005250  C00D  F00F         	movff	abs@a+1,??_abs+1
 14917   005254  1E0E               	comf	??_abs^0,f,c
 14918   005256  1E0F               	comf	(??_abs+1)^0,f,c
 14919   005258  4A0E               	infsnz	??_abs^0,f,c
 14920   00525A  2A0F               	incf	(??_abs+1)^0,f,c
 14921   00525C  C00E  F00C         	movff	??_abs,?_abs
 14922   005260  C00F  F00D         	movff	??_abs+1,?_abs+1
 14923   005264                     l1614:
 14924   005264  0012               	return		;funcret
 14925   005266                     __end_of_abs:
 14926                           	callstack 0
 14927                           
 14928 ;; *************** function ___awmod *****************
 14929 ;; Defined at:
 14930 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14931 ;; Parameters:    Size  Location     Type
 14932 ;;  dividend        2    5[COMRAM] int 
 14933 ;;  divisor         2    7[COMRAM] int 
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;  sign            1   10[COMRAM] unsigned char 
 14936 ;;  counter         1    9[COMRAM] unsigned char 
 14937 ;; Return value:  Size  Location     Type
 14938 ;;                  2    5[COMRAM] int 
 14939 ;; Registers used:
 14940 ;;		wreg, status,2, status,0
 14941 ;; Tracked objects:
 14942 ;;		On entry : 0/0
 14943 ;;		On exit  : 0/0
 14944 ;;		Unchanged: 0/0
 14945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14950 ;;Total ram usage:        6 bytes
 14951 ;; Hardware stack levels used: 1
 14952 ;; Hardware stack levels required when called: 1
 14953 ;; This function calls:
 14954 ;;		Nothing
 14955 ;; This function is called by:
 14956 ;;		_dtoa
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text56
 14961   004A1A                     __ptext56:
 14962                           	callstack 0
 14963   004A1A                     ___awmod:
 14964                           	callstack 24
 14965   004A1A  0E00               	movlw	0
 14966   004A1C  6E0B               	movwf	___awmod@sign^0,c
 14967   004A1E  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14968   004A20  EF16  F025         	goto	u7920
 14969   004A24  EF14  F025         	goto	u7921
 14970   004A28                     u7921:
 14971   004A28  EF1C  F025         	goto	l6880
 14972   004A2C                     u7920:
 14973   004A2C  6C06               	negf	___awmod@dividend^0,c
 14974   004A2E  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14975   004A30  B0D8               	btfsc	status,0,c
 14976   004A32  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14977   004A34  0E01               	movlw	1
 14978   004A36  6E0B               	movwf	___awmod@sign^0,c
 14979   004A38                     l6880:
 14980   004A38  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14981   004A3A  EF23  F025         	goto	u7930
 14982   004A3E  EF21  F025         	goto	u7931
 14983   004A42                     u7931:
 14984   004A42  EF27  F025         	goto	l6884
 14985   004A46                     u7930:
 14986   004A46  6C08               	negf	___awmod@divisor^0,c
 14987   004A48  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14988   004A4A  B0D8               	btfsc	status,0,c
 14989   004A4C  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14990   004A4E                     l6884:
 14991   004A4E  5008               	movf	___awmod@divisor^0,w,c
 14992   004A50  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14993   004A52  B4D8               	btfsc	status,2,c
 14994   004A54  EF2E  F025         	goto	u7941
 14995   004A58  EF30  F025         	goto	u7940
 14996   004A5C                     u7941:
 14997   004A5C  EF54  F025         	goto	l6900
 14998   004A60                     u7940:
 14999   004A60  0E01               	movlw	1
 15000   004A62  6E0A               	movwf	___awmod@counter^0,c
 15001   004A64  EF38  F025         	goto	l6890
 15002   004A68                     l6888:
 15003   004A68  90D8               	bcf	status,0,c
 15004   004A6A  3608               	rlcf	___awmod@divisor^0,f,c
 15005   004A6C  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 15006   004A6E  2A0A               	incf	___awmod@counter^0,f,c
 15007   004A70                     l6890:
 15008   004A70  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 15009   004A72  EF3D  F025         	goto	u7951
 15010   004A76  EF3F  F025         	goto	u7950
 15011   004A7A                     u7951:
 15012   004A7A  EF34  F025         	goto	l6888
 15013   004A7E                     u7950:
 15014   004A7E                     l6892:
 15015   004A7E  5008               	movf	___awmod@divisor^0,w,c
 15016   004A80  5C06               	subwf	___awmod@dividend^0,w,c
 15017   004A82  5009               	movf	(___awmod@divisor+1)^0,w,c
 15018   004A84  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 15019   004A86  A0D8               	btfss	status,0,c
 15020   004A88  EF48  F025         	goto	u7961
 15021   004A8C  EF4A  F025         	goto	u7960
 15022   004A90                     u7961:
 15023   004A90  EF4E  F025         	goto	l6896
 15024   004A94                     u7960:
 15025   004A94  5008               	movf	___awmod@divisor^0,w,c
 15026   004A96  5E06               	subwf	___awmod@dividend^0,f,c
 15027   004A98  5009               	movf	(___awmod@divisor+1)^0,w,c
 15028   004A9A  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 15029   004A9C                     l6896:
 15030   004A9C  90D8               	bcf	status,0,c
 15031   004A9E  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 15032   004AA0  3208               	rrcf	___awmod@divisor^0,f,c
 15033   004AA2  2E0A               	decfsz	___awmod@counter^0,f,c
 15034   004AA4  EF3F  F025         	goto	l6892
 15035   004AA8                     l6900:
 15036   004AA8  500B               	movf	___awmod@sign^0,w,c
 15037   004AAA  B4D8               	btfsc	status,2,c
 15038   004AAC  EF5A  F025         	goto	u7971
 15039   004AB0  EF5C  F025         	goto	u7970
 15040   004AB4                     u7971:
 15041   004AB4  EF60  F025         	goto	l6904
 15042   004AB8                     u7970:
 15043   004AB8  6C06               	negf	___awmod@dividend^0,c
 15044   004ABA  1E07               	comf	(___awmod@dividend+1)^0,f,c
 15045   004ABC  B0D8               	btfsc	status,0,c
 15046   004ABE  2A07               	incf	(___awmod@dividend+1)^0,f,c
 15047   004AC0                     l6904:
 15048   004AC0  C006  F006         	movff	___awmod@dividend,?___awmod
 15049   004AC4  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 15050   004AC8  0012               	return		;funcret
 15051   004ACA                     __end_of___awmod:
 15052                           	callstack 0
 15053                           
 15054 ;; *************** function ___awdiv *****************
 15055 ;; Defined at:
 15056 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 15057 ;; Parameters:    Size  Location     Type
 15058 ;;  dividend        2   23[COMRAM] int 
 15059 ;;  divisor         2   25[COMRAM] int 
 15060 ;; Auto vars:     Size  Location     Type
 15061 ;;  quotient        2   29[COMRAM] int 
 15062 ;;  sign            1   28[COMRAM] unsigned char 
 15063 ;;  counter         1   27[COMRAM] unsigned char 
 15064 ;; Return value:  Size  Location     Type
 15065 ;;                  2   23[COMRAM] int 
 15066 ;; Registers used:
 15067 ;;		wreg, status,2, status,0
 15068 ;; Tracked objects:
 15069 ;;		On entry : 0/0
 15070 ;;		On exit  : 0/0
 15071 ;;		Unchanged: 0/0
 15072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15074 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15077 ;;Total ram usage:        8 bytes
 15078 ;; Hardware stack levels used: 1
 15079 ;; Hardware stack levels required when called: 1
 15080 ;; This function calls:
 15081 ;;		Nothing
 15082 ;; This function is called by:
 15083 ;;		_runPWM
 15084 ;;		_runGAME
 15085 ;;		_dtoa
 15086 ;; This function uses a non-reentrant model
 15087 ;;
 15088                           
 15089                           	psect	text57
 15090   0048A4                     __ptext57:
 15091                           	callstack 0
 15092   0048A4                     ___awdiv:
 15093                           	callstack 24
 15094   0048A4  0E00               	movlw	0
 15095   0048A6  6E1D               	movwf	___awdiv@sign^0,c
 15096   0048A8  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 15097   0048AA  EF5B  F024         	goto	u7860
 15098   0048AE  EF59  F024         	goto	u7861
 15099   0048B2                     u7861:
 15100   0048B2  EF61  F024         	goto	l6836
 15101   0048B6                     u7860:
 15102   0048B6  6C1A               	negf	___awdiv@divisor^0,c
 15103   0048B8  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 15104   0048BA  B0D8               	btfsc	status,0,c
 15105   0048BC  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 15106   0048BE  0E01               	movlw	1
 15107   0048C0  6E1D               	movwf	___awdiv@sign^0,c
 15108   0048C2                     l6836:
 15109   0048C2  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 15110   0048C4  EF68  F024         	goto	u7870
 15111   0048C8  EF66  F024         	goto	u7871
 15112   0048CC                     u7871:
 15113   0048CC  EF6E  F024         	goto	l6842
 15114   0048D0                     u7870:
 15115   0048D0  6C18               	negf	___awdiv@dividend^0,c
 15116   0048D2  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 15117   0048D4  B0D8               	btfsc	status,0,c
 15118   0048D6  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 15119   0048D8  0E01               	movlw	1
 15120   0048DA  1A1D               	xorwf	___awdiv@sign^0,f,c
 15121   0048DC                     l6842:
 15122   0048DC  0E00               	movlw	0
 15123   0048DE  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 15124   0048E0  0E00               	movlw	0
 15125   0048E2  6E1E               	movwf	___awdiv@quotient^0,c
 15126   0048E4  501A               	movf	___awdiv@divisor^0,w,c
 15127   0048E6  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 15128   0048E8  B4D8               	btfsc	status,2,c
 15129   0048EA  EF79  F024         	goto	u7881
 15130   0048EE  EF7B  F024         	goto	u7880
 15131   0048F2                     u7881:
 15132   0048F2  EFA3  F024         	goto	l6864
 15133   0048F6                     u7880:
 15134   0048F6  0E01               	movlw	1
 15135   0048F8  6E1C               	movwf	___awdiv@counter^0,c
 15136   0048FA  EF83  F024         	goto	l6850
 15137   0048FE                     l6848:
 15138   0048FE  90D8               	bcf	status,0,c
 15139   004900  361A               	rlcf	___awdiv@divisor^0,f,c
 15140   004902  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 15141   004904  2A1C               	incf	___awdiv@counter^0,f,c
 15142   004906                     l6850:
 15143   004906  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 15144   004908  EF88  F024         	goto	u7891
 15145   00490C  EF8A  F024         	goto	u7890
 15146   004910                     u7891:
 15147   004910  EF7F  F024         	goto	l6848
 15148   004914                     u7890:
 15149   004914                     l6852:
 15150   004914  90D8               	bcf	status,0,c
 15151   004916  361E               	rlcf	___awdiv@quotient^0,f,c
 15152   004918  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 15153   00491A  501A               	movf	___awdiv@divisor^0,w,c
 15154   00491C  5C18               	subwf	___awdiv@dividend^0,w,c
 15155   00491E  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15156   004920  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 15157   004922  A0D8               	btfss	status,0,c
 15158   004924  EF96  F024         	goto	u7901
 15159   004928  EF98  F024         	goto	u7900
 15160   00492C                     u7901:
 15161   00492C  EF9D  F024         	goto	l6860
 15162   004930                     u7900:
 15163   004930  501A               	movf	___awdiv@divisor^0,w,c
 15164   004932  5E18               	subwf	___awdiv@dividend^0,f,c
 15165   004934  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15166   004936  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 15167   004938  801E               	bsf	___awdiv@quotient^0,0,c
 15168   00493A                     l6860:
 15169   00493A  90D8               	bcf	status,0,c
 15170   00493C  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 15171   00493E  321A               	rrcf	___awdiv@divisor^0,f,c
 15172   004940  2E1C               	decfsz	___awdiv@counter^0,f,c
 15173   004942  EF8A  F024         	goto	l6852
 15174   004946                     l6864:
 15175   004946  501D               	movf	___awdiv@sign^0,w,c
 15176   004948  B4D8               	btfsc	status,2,c
 15177   00494A  EFA9  F024         	goto	u7911
 15178   00494E  EFAB  F024         	goto	u7910
 15179   004952                     u7911:
 15180   004952  EFAF  F024         	goto	l6868
 15181   004956                     u7910:
 15182   004956  6C1E               	negf	___awdiv@quotient^0,c
 15183   004958  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 15184   00495A  B0D8               	btfsc	status,0,c
 15185   00495C  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 15186   00495E                     l6868:
 15187   00495E  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 15188   004962  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 15189   004966  0012               	return		;funcret
 15190   004968                     __end_of___awdiv:
 15191                           	callstack 0
 15192                           
 15193 ;; *************** function _LCD_ShowString *****************
 15194 ;; Defined at:
 15195 ;;		line 55 in file "lcd.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;  lineNum         1    wreg     unsigned char 
 15198 ;;  textData        2    6[COMRAM] PTR unsigned char 
 15199 ;;		 -> STR_40(17), runGAME@approxText(25), runGAME@text(17), runADC@text(17), 
 15200 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_22(17), STR_21(17), 
 15201 ;;		 -> STR_20(17), STR_19(17), STR_18(17), STR_17(17), 
 15202 ;;		 -> STR_16(17), STR_15(17), STR_14(17), STR_13(17), 
 15203 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
 15204 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 15205 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 15206 ;; Auto vars:     Size  Location     Type
 15207 ;;  lineNum         1   10[COMRAM] unsigned char 
 15208 ;;  i               1   11[COMRAM] unsigned char 
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  1    wreg      void 
 15211 ;; Registers used:
 15212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/0
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15221 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15222 ;;Total ram usage:        6 bytes
 15223 ;; Hardware stack levels used: 1
 15224 ;; Hardware stack levels required when called: 2
 15225 ;; This function calls:
 15226 ;;		_LCD_Send
 15227 ;; This function is called by:
 15228 ;;		_main
 15229 ;;		_moveDisplay
 15230 ;;		_runADC
 15231 ;;		_runGAME
 15232 ;; This function uses a non-reentrant model
 15233 ;;
 15234                           
 15235                           	psect	text58
 15236   004968                     __ptext58:
 15237                           	callstack 0
 15238   004968                     _LCD_ShowString:
 15239                           	callstack 27
 15240                           
 15241                           ;incstack = 0
 15242                           ;LCD_ShowString@lineNum stored from wreg
 15243   004968  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 15244   00496A                     
 15245                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 15246   00496A  806B               	bsf	107,0,c	;volatile
 15247   00496C                     l132:
 15248   00496C  B06B               	btfsc	107,0,c	;volatile
 15249   00496E  EFBB  F024         	goto	u9361
 15250   004972  EFBD  F024         	goto	u9360
 15251   004976                     u9361:
 15252   004976  EFB6  F024         	goto	l132
 15253   00497A                     u9360:
 15254   00497A                     
 15255                           ;lcd.c: 62:     SSP2IF = 0;
 15256   00497A  9EA4               	bcf	4004,7,c	;volatile
 15257   00497C                     
 15258                           ;lcd.c: 64:     LCD_Send(0x7c);
 15259   00497C  0E7C               	movlw	124
 15260   00497E  EC5A  F029         	call	_LCD_Send
 15261                           
 15262                           ;lcd.c: 66:     LCD_Send(0x80);
 15263   004982  0E80               	movlw	128
 15264   004984  EC5A  F029         	call	_LCD_Send
 15265   004988                     
 15266                           ;lcd.c: 68:     if(lineNum == 1){
 15267   004988  040B               	decf	LCD_ShowString@lineNum^0,w,c
 15268   00498A  A4D8               	btfss	status,2,c
 15269   00498C  EFCA  F024         	goto	u9371
 15270   004990  EFCC  F024         	goto	u9370
 15271   004994                     u9371:
 15272   004994  EFD1  F024         	goto	l7770
 15273   004998                     u9370:
 15274   004998                     
 15275                           ;lcd.c: 69:         LCD_Send(0x80);
 15276   004998  0E80               	movlw	128
 15277   00499A  EC5A  F029         	call	_LCD_Send
 15278                           
 15279                           ;lcd.c: 70:     }
 15280   00499E  EFDD  F024         	goto	l136
 15281   0049A2                     l7770:
 15282   0049A2  0E02               	movlw	2
 15283   0049A4  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15284   0049A6  A4D8               	btfss	status,2,c
 15285   0049A8  EFD8  F024         	goto	u9381
 15286   0049AC  EFDA  F024         	goto	u9380
 15287   0049B0                     u9381:
 15288   0049B0  EFDD  F024         	goto	l136
 15289   0049B4                     u9380:
 15290   0049B4                     
 15291                           ;lcd.c: 72:         LCD_Send(0xC0);
 15292   0049B4  0EC0               	movlw	192
 15293   0049B6  EC5A  F029         	call	_LCD_Send
 15294   0049BA                     l136:
 15295                           
 15296                           ;lcd.c: 75:     LCD_Send(0x40);
 15297   0049BA  0E40               	movlw	64
 15298   0049BC  EC5A  F029         	call	_LCD_Send
 15299   0049C0                     
 15300                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15301   0049C0  0E00               	movlw	0
 15302   0049C2  6E0C               	movwf	LCD_ShowString@i^0,c
 15303   0049C4                     l7780:
 15304                           
 15305                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15306   0049C4  500C               	movf	LCD_ShowString@i^0,w,c
 15307   0049C6  2407               	addwf	LCD_ShowString@textData^0,w,c
 15308   0049C8  6E09               	movwf	??_LCD_ShowString^0,c
 15309   0049CA  0E00               	movlw	0
 15310   0049CC  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15311   0049CE  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15312   0049D0  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15313   0049D4  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15314   0049D8  0E00               	movlw	low (__mediumconst shr (0+16))
 15315   0049DA  6EF8               	movwf	tblptru,c
 15316   0049DC  0E0F               	movlw	(high __ramtop+-1)
 15317   0049DE  64F7               	cpfsgt	tblptrh,c
 15318   0049E0  D003               	bra	u9397
 15319   0049E2  0008               	tblrd		*
 15320   0049E4  50F5               	movf	tablat,w,c
 15321   0049E6  D005               	bra	u9390
 15322   0049E8                     u9397:
 15323   0049E8  CFF6 FFE1          	movff	tblptrl,fsr1l
 15324   0049EC  CFF7 FFE2          	movff	tblptrh,fsr1h
 15325   0049F0  50E7               	movf	indf1,w,c
 15326   0049F2                     u9390:
 15327   0049F2  EC5A  F029         	call	_LCD_Send
 15328   0049F6                     
 15329                           ;lcd.c: 79:     }
 15330   0049F6  2A0C               	incf	LCD_ShowString@i^0,f,c
 15331   0049F8  0E0F               	movlw	15
 15332   0049FA  640C               	cpfsgt	LCD_ShowString@i^0,c
 15333   0049FC  EF02  F025         	goto	u9401
 15334   004A00  EF04  F025         	goto	u9400
 15335   004A04                     u9401:
 15336   004A04  EFE2  F024         	goto	l7780
 15337   004A08                     u9400:
 15338   004A08                     
 15339                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15340   004A08  846B               	bsf	107,2,c	;volatile
 15341   004A0A                     l140:
 15342   004A0A  B46B               	btfsc	107,2,c	;volatile
 15343   004A0C  EF0A  F025         	goto	u9411
 15344   004A10  EF0C  F025         	goto	u9410
 15345   004A14                     u9411:
 15346   004A14  EF05  F025         	goto	l140
 15347   004A18                     u9410:
 15348   004A18  0012               	return		;funcret
 15349   004A1A                     __end_of_LCD_ShowString:
 15350                           	callstack 0
 15351                           
 15352 ;; *************** function _LCD_Clear *****************
 15353 ;; Defined at:
 15354 ;;		line 94 in file "lcd.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;		None
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		wreg, cstack
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15372 ;;Total ram usage:        0 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; Hardware stack levels required when called: 2
 15375 ;; This function calls:
 15376 ;;		_LCD_Send
 15377 ;; This function is called by:
 15378 ;;		_moveDisplay
 15379 ;; This function uses a non-reentrant model
 15380 ;;
 15381                           
 15382                           	psect	text59
 15383   0051C8                     __ptext59:
 15384                           	callstack 0
 15385   0051C8                     _LCD_Clear:
 15386                           	callstack 27
 15387   0051C8                     
 15388                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15389   0051C8  806B               	bsf	107,0,c	;volatile
 15390   0051CA                     l155:
 15391   0051CA  B06B               	btfsc	107,0,c	;volatile
 15392   0051CC  EFEA  F028         	goto	u9421
 15393   0051D0  EFEC  F028         	goto	u9420
 15394   0051D4                     u9421:
 15395   0051D4  EFE5  F028         	goto	l155
 15396   0051D8                     u9420:
 15397   0051D8                     
 15398                           ;lcd.c: 97:     SSP2IF = 0;
 15399   0051D8  9EA4               	bcf	4004,7,c	;volatile
 15400   0051DA                     
 15401                           ;lcd.c: 99:     LCD_Send(0x7C);
 15402   0051DA  0E7C               	movlw	124
 15403   0051DC  EC5A  F029         	call	_LCD_Send
 15404                           
 15405                           ;lcd.c: 100:     LCD_Send(0x80);
 15406   0051E0  0E80               	movlw	128
 15407   0051E2  EC5A  F029         	call	_LCD_Send
 15408                           
 15409                           ;lcd.c: 101:     LCD_Send(0x01);
 15410   0051E6  0E01               	movlw	1
 15411   0051E8  EC5A  F029         	call	_LCD_Send
 15412   0051EC                     
 15413                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15414   0051EC  846B               	bsf	107,2,c	;volatile
 15415   0051EE                     l158:
 15416   0051EE  B46B               	btfsc	107,2,c	;volatile
 15417   0051F0  EFFC  F028         	goto	u9431
 15418   0051F4  EFFE  F028         	goto	u9430
 15419   0051F8                     u9431:
 15420   0051F8  EFF7  F028         	goto	l158
 15421   0051FC                     u9430:
 15422   0051FC  0012               	return		;funcret
 15423   0051FE                     __end_of_LCD_Clear:
 15424                           	callstack 0
 15425                           
 15426 ;; *************** function _LCD_Init *****************
 15427 ;; Defined at:
 15428 ;;		line 3 in file "lcd.c"
 15429 ;; Parameters:    Size  Location     Type
 15430 ;;		None
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;		None
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  1    wreg      void 
 15435 ;; Registers used:
 15436 ;;		wreg, status,2, cstack
 15437 ;; Tracked objects:
 15438 ;;		On entry : 0/0
 15439 ;;		On exit  : 0/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;Total ram usage:        1 bytes
 15447 ;; Hardware stack levels used: 1
 15448 ;; Hardware stack levels required when called: 2
 15449 ;; This function calls:
 15450 ;;		_LCD_Send
 15451 ;; This function is called by:
 15452 ;;		_main
 15453 ;; This function uses a non-reentrant model
 15454 ;;
 15455                           
 15456                           	psect	text60
 15457   004700                     __ptext60:
 15458                           	callstack 0
 15459   004700                     _LCD_Init:
 15460                           	callstack 28
 15461   004700                     
 15462                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15463   004700  010F               	movlb	15	; () banked
 15464   004702  913B               	bcf	59,0,b	;volatile
 15465                           
 15466                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15467   004704  933B               	bcf	59,1,b	;volatile
 15468                           
 15469                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15470   004706  8095               	bsf	149,0,c	;volatile
 15471                           
 15472                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15473   004708  8295               	bsf	149,1,c	;volatile
 15474                           
 15475                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15476   00470A  9092               	bcf	146,0,c	;volatile
 15477                           
 15478                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15479   00470C  8089               	bsf	137,0,c	;volatile
 15480   00470E                     
 15481                           ; BSR set to: 15
 15482                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15483   00470E  506C               	movf	108,w,c	;volatile
 15484   004710  0BF0               	andlw	-16
 15485   004712  0908               	iorlw	8
 15486   004714  6E6C               	movwf	108,c	;volatile
 15487                           
 15488                           ;lcd.c: 15:     SSP2ADD = 19;
 15489   004716  0E13               	movlw	19
 15490   004718  6E6E               	movwf	110,c	;volatile
 15491   00471A                     
 15492                           ; BSR set to: 15
 15493                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15494   00471A  8A6C               	bsf	108,5,c	;volatile
 15495   00471C                     
 15496                           ; BSR set to: 15
 15497                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15498   00471C  0E34               	movlw	52
 15499   00471E  6E07               	movwf	??_LCD_Init^0,c
 15500   004720  0EF2               	movlw	242
 15501   004722                     u10547:
 15502   004722  2EE8               	decfsz	wreg,f,c
 15503   004724  D7FE               	bra	u10547
 15504   004726  2E07               	decfsz	??_LCD_Init^0,f,c
 15505   004728  D7FC               	bra	u10547
 15506   00472A                     
 15507                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15508   00472A  806B               	bsf	107,0,c	;volatile
 15509   00472C                     l123:
 15510   00472C  B06B               	btfsc	107,0,c	;volatile
 15511   00472E  EF9B  F023         	goto	u9701
 15512   004732  EF9D  F023         	goto	u9700
 15513   004736                     u9701:
 15514   004736  EF96  F023         	goto	l123
 15515   00473A                     u9700:
 15516   00473A                     
 15517                           ;lcd.c: 22:     SSP2IF = 0;
 15518   00473A  9EA4               	bcf	4004,7,c	;volatile
 15519   00473C                     
 15520                           ;lcd.c: 27:     LCD_Send(0x7C);
 15521   00473C  0E7C               	movlw	124
 15522   00473E  EC5A  F029         	call	_LCD_Send
 15523                           
 15524                           ;lcd.c: 28:     LCD_Send(0x80);
 15525   004742  0E80               	movlw	128
 15526   004744  EC5A  F029         	call	_LCD_Send
 15527                           
 15528                           ;lcd.c: 29:     LCD_Send(0x38);
 15529   004748  0E38               	movlw	56
 15530   00474A  EC5A  F029         	call	_LCD_Send
 15531                           
 15532                           ;lcd.c: 30:     LCD_Send(0x80);
 15533   00474E  0E80               	movlw	128
 15534   004750  EC5A  F029         	call	_LCD_Send
 15535                           
 15536                           ;lcd.c: 31:     LCD_Send(0x39);
 15537   004754  0E39               	movlw	57
 15538   004756  EC5A  F029         	call	_LCD_Send
 15539                           
 15540                           ;lcd.c: 32:     LCD_Send(0x80);
 15541   00475A  0E80               	movlw	128
 15542   00475C  EC5A  F029         	call	_LCD_Send
 15543                           
 15544                           ;lcd.c: 33:     LCD_Send(0x17);
 15545   004760  0E17               	movlw	23
 15546   004762  EC5A  F029         	call	_LCD_Send
 15547                           
 15548                           ;lcd.c: 34:     LCD_Send(0x80);
 15549   004766  0E80               	movlw	128
 15550   004768  EC5A  F029         	call	_LCD_Send
 15551                           
 15552                           ;lcd.c: 35:     LCD_Send(0x7A);
 15553   00476C  0E7A               	movlw	122
 15554   00476E  EC5A  F029         	call	_LCD_Send
 15555                           
 15556                           ;lcd.c: 36:     LCD_Send(0x80);
 15557   004772  0E80               	movlw	128
 15558   004774  EC5A  F029         	call	_LCD_Send
 15559                           
 15560                           ;lcd.c: 37:     LCD_Send(0x5E);
 15561   004778  0E5E               	movlw	94
 15562   00477A  EC5A  F029         	call	_LCD_Send
 15563                           
 15564                           ;lcd.c: 38:     LCD_Send(0x80);
 15565   00477E  0E80               	movlw	128
 15566   004780  EC5A  F029         	call	_LCD_Send
 15567                           
 15568                           ;lcd.c: 39:     LCD_Send(0x6B);
 15569   004784  0E6B               	movlw	107
 15570   004786  EC5A  F029         	call	_LCD_Send
 15571                           
 15572                           ;lcd.c: 40:     LCD_Send(0x80);
 15573   00478A  0E80               	movlw	128
 15574   00478C  EC5A  F029         	call	_LCD_Send
 15575                           
 15576                           ;lcd.c: 41:     LCD_Send(0x0C);
 15577   004790  0E0C               	movlw	12
 15578   004792  EC5A  F029         	call	_LCD_Send
 15579                           
 15580                           ;lcd.c: 42:     LCD_Send(0x80);
 15581   004796  0E80               	movlw	128
 15582   004798  EC5A  F029         	call	_LCD_Send
 15583                           
 15584                           ;lcd.c: 43:     LCD_Send(0x01);
 15585   00479C  0E01               	movlw	1
 15586   00479E  EC5A  F029         	call	_LCD_Send
 15587                           
 15588                           ;lcd.c: 44:     LCD_Send(0x80);
 15589   0047A2  0E80               	movlw	128
 15590   0047A4  EC5A  F029         	call	_LCD_Send
 15591                           
 15592                           ;lcd.c: 45:     LCD_Send(0x06);
 15593   0047A8  0E06               	movlw	6
 15594   0047AA  EC5A  F029         	call	_LCD_Send
 15595                           
 15596                           ;lcd.c: 46:     LCD_Send(0x80);
 15597   0047AE  0E80               	movlw	128
 15598   0047B0  EC5A  F029         	call	_LCD_Send
 15599                           
 15600                           ;lcd.c: 47:     LCD_Send(0x02);
 15601   0047B4  0E02               	movlw	2
 15602   0047B6  EC5A  F029         	call	_LCD_Send
 15603   0047BA                     
 15604                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15605   0047BA  846B               	bsf	107,2,c	;volatile
 15606   0047BC                     l126:
 15607   0047BC  B46B               	btfsc	107,2,c	;volatile
 15608   0047BE  EFE3  F023         	goto	u9711
 15609   0047C2  EFE5  F023         	goto	u9710
 15610   0047C6                     u9711:
 15611   0047C6  EFDE  F023         	goto	l126
 15612   0047CA                     u9710:
 15613   0047CA                     
 15614                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15615   0047CA  0E34               	movlw	52
 15616   0047CC  6E07               	movwf	??_LCD_Init^0,c
 15617   0047CE  0EF2               	movlw	242
 15618   0047D0                     u10557:
 15619   0047D0  2EE8               	decfsz	wreg,f,c
 15620   0047D2  D7FE               	bra	u10557
 15621   0047D4  2E07               	decfsz	??_LCD_Init^0,f,c
 15622   0047D6  D7FC               	bra	u10557
 15623   0047D8  0012               	return		;funcret
 15624   0047DA                     __end_of_LCD_Init:
 15625                           	callstack 0
 15626                           
 15627 ;; *************** function _LCD_Send *****************
 15628 ;; Defined at:
 15629 ;;		line 85 in file "lcd.c"
 15630 ;; Parameters:    Size  Location     Type
 15631 ;;  data            1    wreg     unsigned char 
 15632 ;; Auto vars:     Size  Location     Type
 15633 ;;  data            1    5[COMRAM] unsigned char 
 15634 ;; Return value:  Size  Location     Type
 15635 ;;                  1    wreg      void 
 15636 ;; Registers used:
 15637 ;;		wreg
 15638 ;; Tracked objects:
 15639 ;;		On entry : 0/0
 15640 ;;		On exit  : 0/0
 15641 ;;		Unchanged: 0/0
 15642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15647 ;;Total ram usage:        1 bytes
 15648 ;; Hardware stack levels used: 1
 15649 ;; Hardware stack levels required when called: 1
 15650 ;; This function calls:
 15651 ;;		Nothing
 15652 ;; This function is called by:
 15653 ;;		_LCD_Init
 15654 ;;		_LCD_ShowString
 15655 ;;		_LCD_Clear
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           	psect	text61
 15660   0052B4                     __ptext61:
 15661                           	callstack 0
 15662   0052B4                     _LCD_Send:
 15663                           	callstack 27
 15664                           
 15665                           ;incstack = 0
 15666                           ;LCD_Send@data stored from wreg
 15667   0052B4  6E06               	movwf	LCD_Send@data^0,c
 15668   0052B6                     
 15669                           ;lcd.c: 87:     SSP2BUF = data;
 15670   0052B6  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15671   0052BA                     l146:
 15672   0052BA  B06D               	btfsc	109,0,c	;volatile
 15673   0052BC  EF62  F029         	goto	u9261
 15674   0052C0  EF64  F029         	goto	u9260
 15675   0052C4                     u9261:
 15676   0052C4  EF5D  F029         	goto	l146
 15677   0052C8                     u9260:
 15678   0052C8                     l149:
 15679   0052C8  AEA4               	btfss	4004,7,c	;volatile
 15680   0052CA  EF69  F029         	goto	u9271
 15681   0052CE  EF6B  F029         	goto	u9270
 15682   0052D2                     u9271:
 15683   0052D2  EF64  F029         	goto	l149
 15684   0052D6                     u9270:
 15685   0052D6                     
 15686                           ;lcd.c: 90:     SSP2IF = 0;
 15687   0052D6  9EA4               	bcf	4004,7,c	;volatile
 15688   0052D8  0012               	return		;funcret
 15689   0052DA                     __end_of_LCD_Send:
 15690                           	callstack 0
 15691                           
 15692 ;; *************** function _ISR *****************
 15693 ;; Defined at:
 15694 ;;		line 11 in file "interrupt.c"
 15695 ;; Parameters:    Size  Location     Type
 15696 ;;		None
 15697 ;; Auto vars:     Size  Location     Type
 15698 ;;  temp            1    4[COMRAM] unsigned char 
 15699 ;; Return value:  Size  Location     Type
 15700 ;;                  1    wreg      void 
 15701 ;; Registers used:
 15702 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15703 ;; Tracked objects:
 15704 ;;		On entry : 0/0
 15705 ;;		On exit  : 0/0
 15706 ;;		Unchanged: 0/0
 15707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15711 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15712 ;;Total ram usage:        5 bytes
 15713 ;; Hardware stack levels used: 1
 15714 ;; This function calls:
 15715 ;;		Nothing
 15716 ;; This function is called by:
 15717 ;;		Interrupt level 2
 15718 ;; This function uses a non-reentrant model
 15719 ;;
 15720                           
 15721                           	psect	intcode
 15722   000008                     __pintcode:
 15723                           	callstack 0
 15724   000008                     _ISR:
 15725                           	callstack 21
 15726                           
 15727                           ;incstack = 0
 15728   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15729   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15730   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15731   000012                     
 15732                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15733   000012  A09D               	btfss	3997,0,c	;volatile
 15734   000014  EF0E  F000         	goto	i2u686_41
 15735   000018  EF10  F000         	goto	i2u686_40
 15736   00001C                     i2u686_41:
 15737   00001C  EF49  F000         	goto	i2l6288
 15738   000020                     i2u686_40:
 15739   000020  A09E               	btfss	3998,0,c	;volatile
 15740   000022  EF15  F000         	goto	i2u687_41
 15741   000026  EF17  F000         	goto	i2u687_40
 15742   00002A                     i2u687_41:
 15743   00002A  EF49  F000         	goto	i2l6288
 15744   00002E                     i2u687_40:
 15745   00002E  0101               	movlb	1	; () banked
 15746   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15747   000032  B4D8               	btfsc	status,2,c
 15748   000034  EF1E  F000         	goto	i2u688_41
 15749   000038  EF20  F000         	goto	i2u688_40
 15750   00003C                     i2u688_41:
 15751   00003C  EF49  F000         	goto	i2l6288
 15752   000040                     i2u688_40:
 15753   000040                     
 15754                           ; BSR set to: 1
 15755                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15756   000040  A480               	btfss	128,2,c	;volatile
 15757   000042  EF25  F000         	goto	i2u689_41
 15758   000046  EF27  F000         	goto	i2u689_40
 15759   00004A                     i2u689_41:
 15760   00004A  EF44  F000         	goto	i2l412
 15761   00004E                     i2u689_40:
 15762   00004E                     
 15763                           ; BSR set to: 1
 15764                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15765   00004E  0E03               	movlw	3
 15766   000050  6E02               	movwf	(??_ISR+1)^0,c
 15767   000052  0E08               	movlw	8
 15768   000054  6E01               	movwf	??_ISR^0,c
 15769   000056  0E77               	movlw	119
 15770   000058                     i2u1056_47:
 15771   000058  2EE8               	decfsz	wreg,f,c
 15772   00005A  D7FE               	bra	i2u1056_47
 15773   00005C  2E01               	decfsz	??_ISR^0,f,c
 15774   00005E  D7FC               	bra	i2u1056_47
 15775   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15776   000062  D7FA               	bra	i2u1056_47
 15777   000064  0000               	nop	
 15778   000066                     
 15779                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15780   000066  A480               	btfss	128,2,c	;volatile
 15781   000068  EF38  F000         	goto	i2u690_41
 15782   00006C  EF3A  F000         	goto	i2u690_40
 15783   000070                     i2u690_41:
 15784   000070  EF44  F000         	goto	i2l412
 15785   000074                     i2u690_40:
 15786   000074                     i2l414:
 15787   000074  B480               	btfsc	128,2,c	;volatile
 15788   000076  EF3F  F000         	goto	i2u691_41
 15789   00007A  EF41  F000         	goto	i2u691_40
 15790   00007E                     i2u691_41:
 15791   00007E  EF3A  F000         	goto	i2l414
 15792   000082                     i2u691_40:
 15793   000082                     
 15794                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15795   000082  0E00               	movlw	0
 15796   000084  0100               	movlb	0	; () banked
 15797   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15798   000088                     i2l412:
 15799                           
 15800                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15801   000088  0E9E               	movlw	158
 15802   00008A  6ECF               	movwf	207,c	;volatile
 15803   00008C  0E58               	movlw	88
 15804   00008E  6ECE               	movwf	206,c	;volatile
 15805   000090                     
 15806                           ;interrupt.c: 23:         TMR1IF = 0;
 15807   000090  909E               	bcf	3998,0,c	;volatile
 15808   000092                     i2l6288:
 15809                           
 15810                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15811   000092  A09D               	btfss	3997,0,c	;volatile
 15812   000094  EF4E  F000         	goto	i2u692_41
 15813   000098  EF50  F000         	goto	i2u692_40
 15814   00009C                     i2u692_41:
 15815   00009C  EF66  F000         	goto	i2l6300
 15816   0000A0                     i2u692_40:
 15817   0000A0  A09E               	btfss	3998,0,c	;volatile
 15818   0000A2  EF55  F000         	goto	i2u693_41
 15819   0000A6  EF57  F000         	goto	i2u693_40
 15820   0000AA                     i2u693_41:
 15821   0000AA  EF66  F000         	goto	i2l6300
 15822   0000AE                     i2u693_40:
 15823   0000AE  0101               	movlb	1	; () banked
 15824   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15825   0000B2  B4D8               	btfsc	status,2,c
 15826   0000B4  EF5E  F000         	goto	i2u694_41
 15827   0000B8  EF60  F000         	goto	i2u694_40
 15828   0000BC                     i2u694_41:
 15829   0000BC  EF66  F000         	goto	i2l6300
 15830   0000C0                     i2u694_40:
 15831   0000C0                     
 15832                           ; BSR set to: 1
 15833                           ;interrupt.c: 27:         GAMEtime += 1;
 15834   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15835   0000C2                     
 15836                           ; BSR set to: 1
 15837                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15838   0000C2  0E0B               	movlw	11
 15839   0000C4  6ECF               	movwf	207,c	;volatile
 15840   0000C6  0EDC               	movlw	220
 15841   0000C8  6ECE               	movwf	206,c	;volatile
 15842   0000CA                     
 15843                           ; BSR set to: 1
 15844                           ;interrupt.c: 30:         TMR1IF = 0;
 15845   0000CA  909E               	bcf	3998,0,c	;volatile
 15846   0000CC                     i2l6300:
 15847                           
 15848                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15849   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15850   0000CE  EF6B  F000         	goto	i2u695_41
 15851   0000D2  EF6D  F000         	goto	i2u695_40
 15852   0000D6                     i2u695_41:
 15853   0000D6  EFA1  F000         	goto	i2l423
 15854   0000DA                     i2u695_40:
 15855   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15856   0000DC  EF72  F000         	goto	i2u696_41
 15857   0000E0  EF74  F000         	goto	i2u696_40
 15858   0000E4                     i2u696_41:
 15859   0000E4  EFA1  F000         	goto	i2l423
 15860   0000E8                     i2u696_40:
 15861   0000E8  0101               	movlb	1	; () banked
 15862   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15863   0000EC  B4D8               	btfsc	status,2,c
 15864   0000EE  EF7B  F000         	goto	i2u697_41
 15865   0000F2  EF7D  F000         	goto	i2u697_40
 15866   0000F6                     i2u697_41:
 15867   0000F6  EFA1  F000         	goto	i2l423
 15868   0000FA                     i2u697_40:
 15869   0000FA                     
 15870                           ; BSR set to: 1
 15871                           ;interrupt.c: 34:         char temp = RCREG1;
 15872   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15873   0000FE                     
 15874                           ; BSR set to: 1
 15875                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15876   0000FE  0E0A               	movlw	10
 15877   000100  1805               	xorwf	ISR@temp^0,w,c
 15878   000102  B4D8               	btfsc	status,2,c
 15879   000104  EF86  F000         	goto	i2u698_41
 15880   000108  EF88  F000         	goto	i2u698_40
 15881   00010C                     i2u698_41:
 15882   00010C  EF94  F000         	goto	i2l6314
 15883   000110                     i2u698_40:
 15884   000110                     
 15885                           ; BSR set to: 1
 15886                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15887   000110  0E77               	movlw	low _gmail
 15888   000112  2521               	addwf	ISR@i& (0+255),w,b
 15889   000114  6ED9               	movwf	fsr2l,c
 15890   000116  0E01               	movlw	high _gmail
 15891   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15892   00011A  6EDA               	movwf	fsr2h,c
 15893   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15894   000120                     
 15895                           ; BSR set to: 1
 15896                           ;interrupt.c: 39:             i++;
 15897   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15898   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15899                           
 15900                           ;interrupt.c: 40:         } else {
 15901   000124  EFA1  F000         	goto	i2l423
 15902   000128                     i2l6314:
 15903                           
 15904                           ; BSR set to: 1
 15905                           ;interrupt.c: 41:             gmail.full = 1;
 15906   000128  0E01               	movlw	1
 15907   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15908   00012C                     
 15909                           ; BSR set to: 1
 15910                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15911   00012C  0E77               	movlw	low _gmail
 15912   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15913   000130  6ED9               	movwf	fsr2l,c
 15914   000132  0E01               	movlw	high _gmail
 15915   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15916   000136  6EDA               	movwf	fsr2h,c
 15917   000138  6ADF               	clrf	indf2,c
 15918   00013A                     
 15919                           ; BSR set to: 1
 15920                           ;interrupt.c: 43:             i = 0;
 15921   00013A  0E00               	movlw	0
 15922   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15923   00013E  0E00               	movlw	0
 15924   000140  6F21               	movwf	ISR@i& (0+255),b
 15925   000142                     i2l423:
 15926   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15927   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15928   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15929   00014C  0011               	retfie		f
 15930   00014E                     __end_of_ISR:
 15931                           	callstack 0
 15932                           
 15933                           	psect	rparam
 15934   000000                     
 15935                           	psect	temp
 15936   00005A                     btemp:
 15937                           	callstack 0
 15938   00005A                     	ds	1
 15939   000000                     int$flags	set	btemp
 15940   000000                     wtemp8	set	btemp+1
 15941   000000                     ttemp5	set	btemp+1
 15942   000000                     ttemp6	set	btemp+4
 15943   000000                     ttemp7	set	btemp+8
 15944                           
 15945                           	psect	config
 15946                           
 15947                           ; Padding undefined space
 15948   300000                     	org	3145728
 15949   300000  FF                 	db	255
 15950                           
 15951                           ;Config register CONFIG1H @ 0x300001
 15952                           ;	Oscillator Selection bits
 15953                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15954                           ;	4X PLL Enable
 15955                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15956                           ;	Primary clock enable bit
 15957                           ;	PRICLKEN = 0x1, unprogrammed default
 15958                           ;	Fail-Safe Clock Monitor Enable bit
 15959                           ;	FCMEN = 0x0, unprogrammed default
 15960                           ;	Internal/External Oscillator Switchover bit
 15961                           ;	IESO = 0x0, unprogrammed default
 15962   300001                     	org	3145729
 15963   300001  33                 	db	51
 15964                           
 15965                           ;Config register CONFIG2L @ 0x300002
 15966                           ;	unspecified, using default values
 15967                           ;	Power-up Timer Enable bit
 15968                           ;	PWRTEN = 0x1, unprogrammed default
 15969                           ;	Brown-out Reset Enable bits
 15970                           ;	BOREN = 0x3, unprogrammed default
 15971                           ;	Brown Out Reset Voltage bits
 15972                           ;	BORV = 0x3, unprogrammed default
 15973   300002                     	org	3145730
 15974   300002  1F                 	db	31
 15975                           
 15976                           ;Config register CONFIG2H @ 0x300003
 15977                           ;	Watchdog Timer Enable bits
 15978                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15979                           ;	Watchdog Timer Postscale Select bits
 15980                           ;	WDTPS = 0xF, unprogrammed default
 15981   300003                     	org	3145731
 15982   300003  3C                 	db	60
 15983                           tosu	equ	0xFFF
 15984                           tosh	equ	0xFFE
 15985                           tosl	equ	0xFFD
 15986                           stkptr	equ	0xFFC
 15987                           pclatu	equ	0xFFB
 15988                           pclath	equ	0xFFA
 15989                           pcl	equ	0xFF9
 15990                           tblptru	equ	0xFF8
 15991                           tblptrh	equ	0xFF7
 15992                           tblptrl	equ	0xFF6
 15993                           tablat	equ	0xFF5
 15994                           prodh	equ	0xFF4
 15995                           prodl	equ	0xFF3
 15996                           indf0	equ	0xFEF
 15997                           postinc0	equ	0xFEE
 15998                           postdec0	equ	0xFED
 15999                           preinc0	equ	0xFEC
 16000                           plusw0	equ	0xFEB
 16001                           fsr0h	equ	0xFEA
 16002                           fsr0l	equ	0xFE9
 16003                           wreg	equ	0xFE8
 16004                           indf1	equ	0xFE7
 16005                           postinc1	equ	0xFE6
 16006                           postdec1	equ	0xFE5
 16007                           preinc1	equ	0xFE4
 16008                           plusw1	equ	0xFE3
 16009                           fsr1h	equ	0xFE2
 16010                           fsr1l	equ	0xFE1
 16011                           bsr	equ	0xFE0
 16012                           indf2	equ	0xFDF
 16013                           postinc2	equ	0xFDE
 16014                           postdec2	equ	0xFDD
 16015                           preinc2	equ	0xFDC
 16016                           plusw2	equ	0xFDB
 16017                           fsr2h	equ	0xFDA
 16018                           fsr2l	equ	0xFD9
 16019                           status	equ	0xFD8

Data Sizes:
    Strings     460
    Constant    64
    Data        40
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[17]), STR_17(CODE[17]), STR_18(CODE[17]), STR_19(CODE[17]), 
		 -> STR_2(CODE[17]), STR_20(CODE[17]), STR_21(CODE[17]), STR_22(CODE[17]), 
		 -> STR_3(CODE[17]), STR_4(CODE[17]), STR_40(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4533	PTR unsigned char  size(2) Largest target is 6
		 -> STR_24(CODE[5]), STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[4]), STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_24(CODE[5]), STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[4]), STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_24(CODE[5]), STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[4]), STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_23(CODE[5]), STR_35(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3934$buffer	PTR unsigned char  size(2) Largest target is 0

    S3934$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), STR_36(CODE[19]), 
		 -> STR_37(CODE[17]), STR_38(CODE[19]), STR_39(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_24(CODE[5]), 
		 -> STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), STR_28(CODE[4]), 
		 -> STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), STR_47(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_24(CODE[5]), 
		 -> STR_25(CODE[5]), STR_26(CODE[4]), STR_27(CODE[4]), STR_28(CODE[4]), 
		 -> STR_29(CODE[5]), STR_30(CODE[6]), STR_31(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_41(CODE[4]), STR_44(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[5]), STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), 
		 -> STR_35(CODE[5]), STR_36(CODE[19]), STR_37(CODE[17]), STR_38(CODE[19]), 
		 -> STR_39(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[5]), STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), 
		 -> STR_35(CODE[5]), STR_36(CODE[19]), STR_37(CODE[17]), STR_38(CODE[19]), 
		 -> STR_39(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_23(CODE[5]), STR_32(CODE[6]), STR_33(CODE[5]), STR_34(CODE[19]), 
		 -> STR_35(CODE[5]), STR_36(CODE[19]), STR_37(CODE[17]), STR_38(CODE[19]), 
		 -> STR_39(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  440561
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             52    52      0   70081
                                            135 BANK0      2     2      0
                                              0 BANK1     50    50      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   80317
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   68230
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2926
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      2A       9       16.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      54        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 22:05:18 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FE1F                          _C1 FE1B                          _C2 FE17  
                        _C3 FE13                          l61 23CA                          l63 23BC  
                        l56 2378                          l66 263E                          l58 236A  
                        _S1 FDFF                          l68 23FE                          _S2 FDFB  
                        _S3 FDF7                          _S4 FDF3                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 472C                         l140 4A0A  
                       l132 496C                         l125 473A                         l126 47BC  
                       l134 497A                         l151 52D6                         l143 4A18  
                       l303 4304                         l231 3012                         l152 52D8  
                       l136 49BA                         l129 47D8                         l161 51FC  
                       l146 52BA                         l250 511A                         l242 30AE  
                       l234 3014                         l155 51CA                         l139 4A08  
                       l251 511E                         l149 52C8                         l157 51D8  
                       l245 50F8                         l158 51EE                         l270 52FC  
                       l350 5354                         l247 5106                         l248 510C  
                       l273 530E                         l353 5346                         l521 40DC  
                       l362 531C                         l522 41DA                         l356 5338  
                       l372 4084                         l365 5362                         l525 4194  
                       l710 52B2                         l462 36F4                         l534 41C8  
                       l526 4156                         l359 532A                         l519 40CE  
                       l472 36E0                         l464 3532                         l721 4DFA  
                       l377 4096                         l722 4E0A                         l378 40AC  
                       l538 41F2                         l475 3706                         l467 35D2  
                       l707 5364                         l476 3708                         l581 3ED4  
                       l680 208A                         l664 1F84                         l592 3F2E  
                       l593 3F40                         l682 209A                         l691 227E  
                       l683 20AA                         l579 3F1C                         l692 2292  
                       l684 20BA                         l676 2072                         l941 4966  
                       l685 20CA                         l589 3F08                         l686 20DA  
                       l687 20EA                         l689 21BC                         l954 4AC8  
                       l980 4510                         l975 44CA                         l984 5158  
                       l969 4C20                         _GIE 7F97                         _PR2 0FBB  
                       _ISR 0008                         _abs 5232                         _pad 4C22  
              ___awmod@sign 000B                         prod 0FF3                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0021  
              ___flmul@bexp 0026                ___flmul@sign 0020                ___flmul@temp 002B  
              ___flmul@prod 0027                        ?_ISR 0001                        ISR@i 0121  
              ___fltol@exp1 0053                        l1007 440C                        l1201 4D2A  
                      l1211 4E66                        ?_abs 000C                        l1116 4ECA  
                      l1303 2C6C                        l1240 1756                        l1208 4D32  
                      l1305 2CE4                        l1306 2CD2                        l1218 4E6E  
                      l1331 1D2E                        l1324 1B38                        l1421 4C9C  
                      l1341 1E5E                        l1333 1DA6                        l1501 3B60  
                      l1430 3CD6                        l1334 1D94                        l1238 17A2  
                      l1423 4CBE                        l1255 18BC                        l1247 1A72  
                      l1239 1790                        l1328 1E9C                        l1264 198C  
                      l1280 5056                        l1441 3DD4                        l1265 197A  
                      l1513 3C58                        l1418 4C5A                        l1611 524C  
                      l1427 3C88                        l1292 2DC6                        l1620 34F6  
                      l1452 0B4A                        l1508 3C10                        l1372 39F6  
                      l1429 3C90                        l1533 4B76                        l1525 46FE  
                      l1517 462A                        l1365 395E                        l1614 5264  
                      l1294 2C26                        l1606 460E                        l1623 343A  
                      l1455 04E4                        l1519 4632                        l1640 4FC4  
                      l1560 10A6                        l1368 3ABA                        l1297 2BEA  
                      l1457 032A                        l1529 4B6E                        l1634 4F20  
                      l1379 3A52                        l1652 48A2                        l1660 50E0  
                      l1388 509C                        l1485 092E                        l1728 3906  
                      l1744 288E                        l1745 2A2C                        l1762 5230  
                      l1667 52F8                        l1675 4DA0                        l1596 500E  
                      l1757 32E0                        l1694 15B0                        l1774 51C6  
                      l1768 5190                        l7000 4CC8                        l7010 4CFE  
                      l7002 4CDA                        l7012 4D14                        l7004 4CE2  
                      l7020 4E0C                        l7110 34AE                        l7102 33EE  
                      l7014 4D1C                        l7006 4CEA                        l7030 4E52  
                      l7022 4E1E                        ?_pad 0017                        l6320 52FC  
                      l7040 4C44                        l6400 16D4                        l7112 34D6  
                      l7104 342A                        l7120 4F8A                        l7200 020E  
                      l7016 4D1E                        l7008 4CF8                        l7032 4E5A  
                      l7024 4E26                        l8000 423C                        l6322 530A  
                      l6330 4808                        l7050 4CAA                        l7042 4C52  
                      l7130 3C5A                        l6410 16E8                        l6402 16D8  
                      l7114 34E6                        l7106 345E                        l7122 4F96  
                      l7210 024A                        l7202 0220                        l7018 4D24  
                      l7034 4E60                        l7026 4E2E                        l8010 42F2  
                      l7052 5232                        l6332 4826                        l6324 47DA  
                      l7044 4C66                        l7036 4C22                        l7140 3CBE  
                      l7132 3C7C                        l6500 194E                        l6420 1722  
                      l6412 16EC                        l6404 16DC                        l6340 15C0  
                      l7060 4570                        l7108 349A                        l7124 4F9A  
                      l7300 06E4                        l7220 02AC                        l7212 0254  
                      l7204 0224                        l7028 4E3C                        l8012 4300  
                      l8004 4242                        l8020 3F74                        l8100 3EB4  
                      l7054 5240                        l6334 485C                        l6326 47EC  
                      l7046 4C7A                        l7038 4C30                        l7150 3CEE  
                      l7142 3CCA                        l7134 3C98                        l6510 19A8  
                      l6502 195C                        l6430 1774                        l6422 173E  
                      l6414 16F0                        l6406 16E0                        l6350 1600  
                      l6342 15CE                        l7070 45C2                        l7062 4598  
                      l7126 4FA6                        l7118 4F76                        l7310 077E  
                      l7302 0716                        l7222 02B0                        l7206 022A  
                      l8006 4262                        l8030 3F92                        l8022 3F76  
                      l8110 3F16                        l8102 3EB8                        l6328 47FE  
                      l7048 4C7E                        l7160 3D62                        l7152 3D20  
                      l7144 3CD2                        l7136 3CA8                        l6600 2B2C  
                      l6520 1A12                        l6512 19B6                        l6504 1972  
                      l6440 17C0                        l6432 1782                        l6424 174E  
                      l6408 16E4                        l6416 16F4                        l6360 1632  
                      l6352 1602                        l6344 15D0                        l7064 45A4  
                      l7056 4512                        l7128 4FAA                        l7080 5162  
                      l7320 0856                        l7312 07B2                        l7304 072C  
                      l7240 033A                        l7224 02B6                        l7208 0232  
                      l7216 0274                        l7400 3ADE                        l8008 42E4  
                      l8200 36BA                        l8040 3FCE                        l8032 3FA4  
                      l8024 3F78                        l8016 3F42                        l8112 3F34  
                      l8104 3EE2                        l7170 3DB4                        l7162 3D74  
                      l7154 3D26                        l7146 3CDE                        l7138 3CAE  
                      l6530 1A4C                        l6522 1A32                        l6514 19F0  
                      l6450 1800                        l6434 1784                        l6426 1764  
                      l6418 16F8                        l6370 165A                        l6362 1634  
                      l6346 15E0                        l6354 160A                        l6338 15B2  
                      l7074 4606                        l7058 4532                        l7090 32E2  
                      l7082 4ECC                        l7330 0880                        l7314 0808  
                      l7322 085A                        l7306 075E                        l7250 0422  
                      l7242 0340                        l7226 02BE                        l7218 029A  
                      l7234 02DA                        l7410 3B58                        l7402 3AEA  
                      l8202 36D2                        l8210 2DDC                        l8050 4080  
                      l8042 4028                        l8034 3FC6                        l8026 3F80  
                      l8018 3F6C                        l8130 40FA                        l8122 40AE  
                      l8114 3F3A                        l8106 3EFA                        l6540 509E  
                      l7164 3D8E                        l7156 3D2C                        l7148 3CE8  
                      l6620 2BAE                        l6612 2B64                        l6604 2B40  
                      l6700 1AA0                        l6532 1A52                        l6524 1A36  
                      l6508 199C                        l6516 19F2                        l6460 182A  
                      l6452 180C                        l6444 17D4                        l6436 178E  
                      l6428 1770                        l6380 1694                        l6372 166A  
                      l6364 163A                        l6356 161A                        l6348 15F0  
                      l7068 45B0                        l7092 3302                        l7084 4EDA  
                      l7340 094E                        l7332 088C                        l7324 086A  
                      l7316 080E                        l7308 076E                        l7252 0436  
                      l7260 04B2                        l7244 0374                        l7236 02F4  
                      l7180 0176                        l7420 3BBC                        l7404 3AEE  
                      l7500 3A28                        l8220 2DEC                        l8212 2DE4  
                      l8300 1F00                        l8052 40A6                        l8044 402C  
                      l8028 3F8A                        l8132 4106                        l8124 40B0  
                      l8116 3F3C                        l8060 3DE6                        l6542 50AA  
                      l7166 3D9E                        l7158 3D48                        l6630 2BF4  
                      l6622 2BB6                        l6614 2B7E                        l6606 2B50  
                      l6710 1ADC                        l6702 1AB0                        l6534 1A60  
                      l6526 1A44                        l6518 1A02                        l6470 189C  
                      l6454 1810                        l6446 17E4                        l6438 17B0  
                      l6462 1830                        l6390 16C0                        l6382 16A6  
                      l6374 167A                        l6366 1648                        l6358 1620  
                      l7094 335A                        l7086 4EEE                        l7078 515A  
                      l7350 0980                        l7342 095E                        l7334 0906  
                      l7326 0872                        l7318 0842                        l7270 0518  
                      l7262 04EC                        l7254 046A                        l7246 03B2  
                      l7190 01C0                        l7182 017A                        l7174 0152  
                      l6550 52AA                        l7430 3C36                        l7422 3BF2  
                      l7414 3B82                        l7406 3B2C                        l7510 3A66  
                      l7502 3A34                        l8206 36EE                        l8230 2E0A  
                      l8222 2DFE                        l8214 2DE6                        l8310 1F12  
                      l8302 1F08                        l8046 4048                        l8142 4164  
                      l8150 4194                        l8134 4122                        l8126 40CA  
                      l8118 3F3E                        l8070 3DF6                        l8062 3DE8  
                      l6544 50BC                        l7168 3DA4                        l6640 2C4C  
                      l6632 2C12                        l6624 2BC6                        l6616 2B8E  
                      l6608 2B50                        l6560 2A4A                        l6800 1DFE  
                      l6720 1B12                        l6712 1AE2                        l6704 1AC0  
                      l6536 1A62                        l6528 1A4A                        l6480 18F6  
                      l6464 1856                        l6472 18AC                        l6456 181E  
                      l6448 17F2                        l6392 16C4                        l6384 16B4  
                      l6376 167C                        l6368 164A                        l7096 336E  
                      l7360 09B4                        l7352 0984                        l7344 0962  
                      l7336 0926                        l7328 0878                        l7280 0568  
                      l7272 051E                        l7264 04FA                        l7256 0472  
                      l7248 03E4                        l7192 01D0                        l7184 019E  
                      l7176 0158                        l7432 3C3A                        l7416 3B96  
                      l7424 3BF6                        l7408 3B3A                        l7440 4642  
                      l7600 0DF4                        l7512 3A8A                        l7504 3A42  
                      l8240 2E9A                        l8232 2E0C                        l8224 2E04  
                      l8216 2DE8                        l8208 2DC8                        l8320 1F70  
                      l8312 1F12                        l8304 1F0A                        l8048 4060  
                      l8160 41EA                        l8152 41A2                        l8144 4176  
                      l8136 4130                        l8128 40CC                        l8080 3E38  
                      l8072 3DF8                        l8064 3DEA                        l8056 3DD6  
                      l8400 22AE                        l6546 50C0                        l6650 2C8A  
                      l6642 2C52                        l6634 2C14                        l6626 2BDA  
                      l6618 2B9E                        l6562 2A5A                        l6570 2A84  
                      l6554 2A2E                        l6810 1E72                        l6802 1E18  
                      l6722 1B22                        l6714 1AF0                        l6706 1AC6  
                      l6490 1926                        l6482 1900                        l6474 18D2  
                      l6466 188A                        l6458 1820                        l6394 16C8  
                      l6386 16B8                        l6378 1684                        l7098 337C  
                      l7370 0A52                        l7362 09B8                        l7354 098A  
                      l7346 0968                        l7338 0940                        l7290 0600  
                      l7274 0530                        l7282 0570                        l7266 0506  
                      l7194 01DC                        l7186 01A8                        l7178 0168  
                      l7418 3B9A                        l7450 4684                        l7442 464C  
                      l7434 4610                        l7610 0E28                        l7530 0B8C  
                      l7522 0B4C                        l7514 3A9A                        l7506 3A60  
                      l8170 3500                        l8242 2EF4                        l8234 2E28  
                      l8226 2E06                        l8218 2DEA                        l8330 1FCE  
                      l8322 1F7A                        l8314 1F1E                        l8306 1F0E  
                      l8162 41EE                        l8154 41BA                        l8146 417E  
                      l8138 4148                        l8090 3E96                        l8082 3E60  
                      l8074 3E04                        l8066 3DEC                        l8058 3DE2  
                      l8410 22BA                        l8402 22B0                        l6900 4AA8  
                      l6660 2CF4                        l6652 2C8E                        l6644 2C5C  
                      l6636 2C24                        l6628 2BE8                        l6580 2AB0  
                      l6572 2A94                        l6564 2A6A                        l6556 2A3A  
                      l6812 1E80                        l6804 1E2C                        l6740 1BA4  
                      l6732 1B6C                        l6724 1B28                        l6716 1AF2  
                      l6708 1AD6                        l6492 192A                        l6484 190E  
                      l6476 18E2                        l6468 188C                        l6396 16CC  
                      l6388 16BC                        l7380 0AA6                        l7364 09BE  
                      l7348 0970                        l7356 0990                        l7372 0A56  
                      l7292 0658                        l7284 0578                        l7276 053E  
                      l7268 0510                        l7196 01E4                        l7188 01B0  
                      l6548 528E                        l7428 3C22                        l7444 4652  
                      l7452 46A0                        l7436 461E                        l7620 0EB2  
                      l7612 0E4A                        l7540 0BAE                        l7532 0B94  
                      l7524 0B70                        l7700 4FE8                        l7516 3AA8  
                      l7508 3A62                        l8180 3530                        l8172 3510  
                      l8260 304A                        l8252 2FF4                        l8244 2F5C  
                      l8236 2E38                        l8228 2E08                        l8340 2000  
                      l8332 1FE0                        l8324 1F82                        l8316 1F44  
                      l8308 1F12                        l8164 41F0                        l8148 418E  
                      l8092 3E9C                        l8084 3E64                        l8076 3E16  
                      l8068 3DF4                        l8500 24D8                        l8420 22C4  
                      l8412 22BC                        l8404 22B2                        l6830 48A8  
                      l6902 4AB8                        l6670 2D56                        l6662 2D00  
                      l6654 2C9C                        l6646 2C6A                        l6638 2C36  
                      l6582 2AC0                        l6590 2AEA                        l6574 2A9A  
                      l6566 2A7A                        l6558 2A48                        l6910 4BA6  
                      l6814 1E82                        l6806 1E46                        l6750 1BEE  
                      l6742 1BBC                        l6734 1B78                        l6726 1B48  
                      l6718 1B02                        l6494 193A                        l6486 1910  
                      l6398 16D0                        l6822 5010                        l7390 0B22  
                      l7382 0AD6                        l7374 0A74                        l7366 0A16  
                      l7358 09A2                        l7294 068C                        l7286 0588  
                      l7278 0556                        l7198 01E8                        l7470 4B1C  
                      l7462 4ACA                        l7454 46B2                        l7446 4678  
                      l7438 463A                        l7622 0EE4                        l7614 0E56  
                      l7606 0E0C                        l7550 0C08                        l7534 0B96  
                      l7542 0BCC                        l7526 0B7C                        l7702 5004  
                      l7518 3AAA                        l8190 35E0                        l8182 3540  
                      l8174 3512                        l7710 370A                        l8270 3080  
                      l8262 3058                        l8254 3022                        l8246 2F80  
                      l8238 2E88                        l8350 204C                        l8334 1FE8  
                      l8326 1F92                        l8318 1F62                        l8158 41D6  
                      l8086 3E7A                        l8078 3E2A                        l8510 255C  
                      l8502 24F0                        l8430 22CE                        l8422 22C6  
                      l8414 22BE                        l8406 22B4                        l6840 48D8  
                      l6832 48B6                        l6904 4AC0                        l6680 2DB4  
                      l6672 2D6C                        l6664 2D0E                        l6656 2CCA  
                      l6648 2C7C                        l6592 2AFA                        l6584 2AD0  
                      l6576 2AA0                        l6568 2A7C                        l6920 4C1E  
                      l6912 4BB6                        l6808 1E62                        l6816 1E88  
                      l6760 1C44                        l6752 1BFE                        l6744 1BC8  
                      l6736 1B82                        l6728 1B58                        l6488 191E  
                      l6496 193C                        l6824 5022                        l7392 0B2A  
                      l7384 0AE4                        l7376 0A90                        l7368 0A4A  
                      l7288 059C                        l7296 0692                        l7472 4B3C  
                      l7464 4AD2                        l7456 46C4                        l7448 467E  
                      l7640 0F5E                        l7632 0F2E                        l7616 0E5E  
                      l7608 0E24                        l7560 0C6E                        l7552 0C2C  
                      l7544 0BDC                        l7536 0BA6                        l7528 0B88  
                      l7480 3928                        l8192 35FE                        l8184 355E  
                      l8176 351E                        l8168 34F8                        l7720 26A4  
                      l7800 10B8                        l8272 3086                        l8264 305E  
                      l8256 3036                        l8248 2FE8                        l8360 20FE  
                      l8352 2064                        l8336 1FF0                        l8344 2008  
                      l8328 1FB0                        l8280 1ECC                        l8088 3E84  
                      l8512 256A                        l8504 24FE                        l8440 22E0  
                      l8432 22D0                        l8424 22C8                        l8416 22C0  
                      l8408 22B8                        l6850 4906                        l6842 48DC  
                      l6834 48BE                        l6682 2DBA                        l6674 2D86  
                      l6666 2D38                        l6594 2B10                        l6586 2AE0  
                      l6578 2AAE                        l6914 4BE4                        l6930 447A  
                      l6818 1E8C                        l6770 1CE8                        l6762 1C60  
                      l6754 1C0A                        l6746 1BD4                        l6738 1B98  
                      l6498 194A                        l7386 0AFC                        l7378 0A98  
                      l7298 06B0                        l7466 4AF4                        l7474 4B48  
                      l7458 46DE                        l7650 0FCC                        l7634 0F3C  
                      l7618 0E80                        l7626 0EF6                        l7562 0C76  
                      l7570 0CAC                        l7554 0C38                        l7546 0BF0  
                      l7490 39A0                        l7482 396E                        l8194 3668  
                      l8186 35C8                        l8178 3528                        l7730 27D0  
                      l7722 26C2                        l7714 266C                        l7706 30B0  
                      l7810 1118                        l7802 10CE                        l8274 308A  
                      l8266 306C                        l8258 3044                        l8370 21A4  
                      l8362 212C                        l8338 1FF8                        l8346 2030  
                      l8290 1EF2                        l8282 1EDC                        l8098 3EA6  
                      l8522 25C0                        l8514 2578                        l8506 250C  
                      l8450 2334                        l8442 22EE                        l8434 22D2  
                      l8426 22CA                        l8418 22C2                        l6860 493A  
                      l6852 4914                        l6844 48E4                        l6836 48C2  
                      l6828 48A4                        l6684 2DBC                        l6676 2DA2  
                      l6668 2D3C                        l6596 2B20                        l6588 2AE2  
                      l6916 4BF4                        l6908 4B78                        l6940 4508  
                      l6932 448A                        l6924 440E                        l6780 1D3E  
                      l6772 1CF6                        l6764 1C6C                        l6756 1C1A  
                      l6748 1BE2                        l6692 1A74                        l7388 0B0C  
                      l7468 4B00                        l7396 3ABC                        l7636 0F4E  
                      l7644 0F66                        l7628 0F06                        l7572 0CC8  
                      l7580 0D20                        l7564 0C7E                        l7556 0C4C  
                      l7548 0BFE                        l7492 39AC                        l7484 3984  
                      l7476 390A                        l8196 369E                        l8188 35D0  
                      l7732 2830                        l7724 26E6                        l7740 289A  
                      l7716 268C                        l7900 1592                        l7820 118C  
                      l7804 10D0                        l8268 3072                        l8276 309C  
                      l8380 2200                        l8372 21AA                        l8364 215C  
                      l8356 2080                        l8348 203E                        l8292 1EF4  
                      l8284 1EDE                        l8524 25DC                        l8516 259E  
                      l8508 2542                        l8532 25FE                        l8460 23AC  
                      l8452 234C                        l8444 22FC                        l8436 22D6  
                      l8428 22CC                        l6862 4940                        l6854 491A  
                      l6846 48F6                        l6838 48D0                        l6678 2DA6  
                      l6598 2B28                        l6918 4C18                        l6942 450E  
                      l6934 4498                        l6926 443C                        l6782 1D4C  
                      l6774 1D14                        l6766 1C88                        l6758 1C34  
                      l6694 1A80                        l6950 5148                        l7398 3AD6  
                      l7654 0FF4                        l7638 0F56                        l7646 0F84  
                      l7590 0D88                        l7582 0D36                        l7574 0CE8  
                      l7558 0C5C                        l7670 1080                        l7910 5066  
                      l7494 39DE                        l7478 391A                        l8198 36AC  
                      l7902 52DA                        l7750 2A00                        l7742 28BE  
                      l7734 2840                        l7726 2752                        l7718 26A2  
                      l7830 1230                        l7822 11C0                        l7806 10EE  
                      l7814 1140                        l8390 228E                        l8382 2206  
                      l8374 21BE                        l8366 2160                        l8358 20FA  
                      l8294 1EF6                        l8286 1EEA                        l8278 1E9E  
                      l8534 2640                        l8526 25F6                        l8518 25B8  
                      l8470 242C                        l8462 23D8                        l8454 235A  
                      l8446 2316                        l8438 22DC                        l7760 496A  
                      l6856 4930                        l6848 48FE                        l6864 4946  
                      l6880 4A38                        l6872 4A1A                        l6936 44AA  
                      l6928 444C                        l6792 1DB6                        l6784 1D50  
                      l6776 1D1E                        l6768 1CB2                        l6696 1A8E  
                      l6960 4332                        l7664 1056                        l7656 100A  
                      l7648 0FA4                        l7592 0DA4                        l7584 0D50  
                      l7576 0D04                        l7568 0C86                        l7912 506E  
                      l7496 39E0                        l7488 3998                        l7904 52DE  
                      l7680 5220                        l7752 2A18                        l7744 292A  
                      l7736 2872                        l7728 2778                        l7840 12FC  
                      l7816 115E                        l7808 1104                        l8376 21E4  
                      l8368 2186                        l8296 1EF8                        l8288 1EEE  
                      l7920 534A                        l8536 2652                        l8480 245E  
                      l8472 2430                        l8464 23F0                        l8456 2386  
                      l8448 2326                        l7770 49A2                        l7762 496A  
                      l6866 4956                        l6858 4938                        l6890 4A70  
                      l6882 4A46                        l6874 4A1E                        l6938 44B8  
                      l6794 1DC2                        l6786 1D5E                        l6778 1D2C  
                      l6698 1A90                        l6946 5120                        l6970 4380  
                      l6962 435C                        l6954 4306                        l7658 1028  
                      l7666 106E                        l7914 5076                        l7498 39EC  
                      l7746 2950                        l7850 1370                        l7818 117C  
                      l7834 1258                        l7690 4DC0                        l8378 21F2  
                      l8386 2224                        l8298 1EFE                        l7930 5358  
                      l7922 533C                        l8394 5364                        l8538 2660  
                      l8482 247A                        l8474 243A                        l8458 239E  
                      l7684 52B6                        l7780 49C4                        l7772 49B4  
                      l7764 497C                        l6868 495E                        l6892 4A7E  
                      l6884 4A4E                        l6876 4A2C                        l6796 1DD0  
                      l6788 1D8C                        l6948 5138                        l6980 43AC  
                      l6964 435E                        l6956 431E                        l7596 0DC0  
                      l7588 0D68                        l7916 508C                        l7908 5058  
                      l7676 51FE                        l7748 29A8                        l7836 1268  
                      l7828 11FC                        l7844 1324                        l7692 4DD0  
                      l8388 226C                        l7924 532E                        l7932 5192  
                      l8492 2498                        l8476 2456                        l8468 2410  
                      l8396 2294                        l7790 51EC                        l7782 49F6  
                      l7774 49C0                        l7766 4988                        l6894 4A94  
                      l6886 4A60                        l6878 4A34                        l6798 1DFA  
                      l6990 43DC                        l6966 436E                        l7598 0DD6  
                      l7678 521E                        l7870 145C                        l7846 1342  
                      l7838 12B4                        l7950 4E76                        l7694 4DDA  
                      l7686 4DA2                        l7942 4D34                        l7926 5320  
                      l7934 519E                        l8494 24B4                        l8486 2482  
                      l8398 22AC                        l7784 49F8                        l7768 4998  
                      l6896 4A9C                        l6888 4A68                        l6992 43EC  
                      l6976 4398                        l6968 4372                        l7696 4FC6  
                      l7792 50E4                        l7848 1360                        l7864 13E0  
                      l7960 4EA2                        l7952 4E86                        l7688 4DB2  
                      l7944 4D72                        l7928 5312                        l7936 51A2  
                      l8488 2490                        l7786 51C8                        l6898 4AA2  
                      l6994 43FC                        l6986 43C0                        l6978 43A2  
                      l7698 4FD2                        l7794 50F2                        l7890 152E  
                      l7882 14BE                        l7866 13F0                        l7858 13A8  
                      l7874 1484                        l7962 4EB8                        l7954 4E8E  
                      l7970 4EC8                        l7938 51BA                        l8498 24BC  
                      l7980 471C                        l7788 51DA                        l6988 43CC  
                      l7796 50F4                        l7884 14E2                        l7876 149A  
                      l7868 1428                        l7964 4EBC                        l7956 4E92  
                      l7948 4E72                        l7982 472A                        l7974 4700  
                      l6998 4CC0                        l7990 41F8                        l7894 1556  
                      l7886 1506                        l7878 14AA                        l7798 10A8  
                      l7966 4EBE                        l7958 4E94                        l7984 473C  
                      l7976 470E                        l7992 41FC                        l7968 4EC2  
                      l7986 47BA                        l7978 471A                        l7994 4212  
                      l7988 47CA                        l7996 4224                        l7998 422A  
                      STR_1 FEC0                        STR_2 FF26                        STR_3 FF15  
                      STR_4 FE35                        STR_5 FEAF                        STR_6 FF8C  
                      STR_7 FF48                        STR_8 FE35                        STR_9 FF7B  
                      u7000 47EC                        u7001 47E8                        u7010 47FE  
                      u7011 47FA                        _PEIE 7F96                        u7020 4826  
                      u7100 166A                        u7021 4822                        u7101 1666  
                      u7030 485C                        u7110 16A6                        u7031 4858  
                      u7111 16A2                        u8000 4C18                        u7200 17C0  
                      u7120 16B4                        u7040 15CE                        u8001 4C14  
                      u7201 17BC                        u7121 16B0                        u7041 15CA  
                      u8010 443C                        u7210 17F2                        u7130 1722  
                      u7050 15E0                        u8011 4438                        u7211 17EE  
                      u7131 171E                        u7051 15DC                        u8020 447A  
                      u7300 193A                        u7220 1800                        u7140 173A  
                      u7060 15F0                        u8100 4394                        u8021 4476  
                      u7301 1936                        u7221 17FC                        u7141 1734  
                      u7061 15EC                        u8101 4390                        u8030 4498  
                      u7310 194A                        u7230 181E                        u7150 173C  
                      u7070 1632                        u8110 43BC                        u8031 4494  
                      u7311 1946                        u7231 181A                        u7071 162E  
                      u8111 43B8                        u8200 4C30                        u8040 44B8  
                      u7400 1A32                        u7320 195C                        u7240 1856  
                      u7160 1764                        u7080 1648                        u8120 43DC  
                      u9000 46DE                        u8201 4C2C                        u8041 44B4  
                      u7401 1A2E                        u7321 1958                        u7241 1852  
                      u7161 1760                        u7081 1644                        u8121 43D8  
                      u9001 46DA                        u8210 4C52                        u8050 4508  
                      u7410 1A44                        u7330 1972                        u7250 189C  
                      u7170 1782                        u7090 165A                        u8130 43EC  
                      u9010 4AF4                        u8211 4C4E                        u8051 4504  
                      u7411 1A40                        u7331 196E                        u7251 1898  
                      u7171 177E                        u7091 1656                        u8131 43E8  
                      u9011 4AF0                        u8220 4C9C                        u7500 2B10  
                      u8060 5138                        u7420 1A60                        u7340 1988  
                      u7260 18D2                        u7180 17A2                        u8300 45FC  
                      u9020 4B6E                        u8140 4CDA                        u9100 3A60  
                      u8221 4C98                        u7501 2B0C                        u8061 5134  
                      u7421 1A5C                        u7341 1984                        u7261 18CE  
                      u7181 179E                        u8301 45F6                        u9021 4B6A  
                      u8141 4CD6                        u9101 3A5C                        u7430 50E0  
                      u8230 4CAA                        u7510 2B50                        u7350 199C  
                      u7270 18E2                        u7190 17B0                        u8070 431E  
                      u8310 45FE                        u8150 4CF8                        u9110 3A9A  
                      u9030 391A                        u7431 50DC                        u8231 4CA6  
                      u7511 2B4C                        u7351 1998                        u7271 18DE  
                      u7191 17AC                        u8071 431A                        u8151 4CF4  
                      u9111 3A96                        u9031 3916                        u8240 5240  
                      u7600 2CCA                        u7520 2BC6                        u7440 2A48  
                      u7360 19B6                        u7280 190E                        u8080 4352  
                      u8400 342A                        u8320 5190                        u8160 4D14  
                      u9200 0E4A                        u9120 3AA8                        u9040 3928  
                      u8241 523C                        u7601 2CC6                        u7521 2BC2  
                      u7441 2A44                        u7361 19B2                        u7281 190A  
                      u8401 3426                        u8321 518C                        u8161 4D10  
                      u9201 0E46                        u9121 3AA4                        u9041 3924  
                      u7610 2CE0                        u7530 2BE8                        u7450 2A5A  
                      u7370 19F0                        u7290 191E                        u8090 4380  
                      u8250 4552                        u8410 347E                        u8330 4EDA  
                      u8170 4E1E                        u9210 0E80                        u9130 0B70  
                      u9050 3984                        u7611 2CDC                        u7531 2BE4  
                      u7451 2A56                        u7371 19EC                        u7291 191A  
                      u8091 437C                        u8331 4ED6                        u8171 4E1A  
                      u9211 0E7C                        u9131 0B6C                        u9051 3980  
                      u8500 3D62                        u7620 2CF4                        u7540 2C12  
                      u7460 2A6A                        u7700 1AF0                        u7380 1A02  
                      u8260 4570                        u8420 349A                        u8340 332A  
                      u8180 4E3C                        u9220 0EB2                        u9140 0BDC  
                      u9300 5004                        u9060 39DA                        u8501 3D5E  
                      u7621 2CF0                        u7541 2C0E                        u7461 2A66  
                      u7701 1AEC                        u7381 19FE                        u8085 4348  
                      u8261 456C                        u8421 3496                        u8181 4E38  
                      u9221 0EAE                        u9141 0BD8                        u9301 5000  
                      u9061 39D6                        u8510 3D74                        u7630 2D0E  
                      u7550 2C36                        u7470 2AAE                        u7710 1B02  
                      u7390 1A12                        u8270 4598                        u8430 34D6  
                      u8350 335A                        u8190 4E52                        u9230 0EE4  
                      u9150 0BFE                        u9070 3A24                        u9310 269E  
                      u8511 3D70                        u7631 2D0A                        u7551 2C32  
                      u7471 2AAA                        u7711 1AFE                        u7391 1A0E  
                      u8271 4594                        u8255 4548                        u8431 34D2  
                      u8415 3474                        u8351 3356                        u8191 4E4E  
                      u9231 0EE0                        u9151 0BFA                        u9071 3A20  
                      u9311 2698                        u9400 4A08                        u8520 3D8E  
                      u7640 2D56                        u7560 2C4C                        u7480 2AC0  
                      u7800 1DA2                        u7720 1B12                        u8280 45C2  
                      u8360 337C                        u8440 4FC4                        u8600 02AC  
                      u9240 0F06                        u9160 0C2C                        u9080 3A42  
                      u9320 26A0                        u9401 4A04                        u8521 3D8A  
                      u7641 2D52                        u7561 2C48                        u7481 2ABC  
                      u7801 1D9E                        u7721 1B0E                        u8281 45BE  
                      u8361 3378                        u8345 3320                        u8441 4FC0  
                      u8601 02A8                        u9241 0F02                        u9161 0C28  
                      u9081 3A3E                        u9410 4A18                        u8530 3D9E  
                      u8450 3C6A                        u7650 2D86                        u7570 2C6A  
                      u7490 2AD0                        u7810 1DB6                        u7730 1B48  
                      u8610 0326                        u9250 0FA0                        u9170 0CC8  
                      u9090 3A52                        u9330 26C2                        u9411 4A14  
                      u8531 3D9A                        u8451 3C64                        u7651 2D82  
                      u7571 2C66                        u7491 2ACC                        u7811 1DB2  
                      u7731 1B44                        u8611 0322                        u9251 0F9C  
                      u9171 0CC4                        u9091 3A4E                        u9331 26BE  
                      u9260 52C8                        u9420 51D8                        u7900 4930  
                      u8460 3C6C                        u7660 2DB4                        u7580 2C8A  
                      u7820 1DD0                        u7740 1B58                        u8380 33EA  
                      u8700 0568                        u8620 03B2                        u8540 0176  
                      u9180 0CE4                        u9340 2840                        u9500 115E  
                      u9261 52C4                        u9421 51D4                        u7901 492C  
                      u7661 2DB0                        u7581 2C86                        u7821 1DCC  
                      u7741 1B54                        u8381 33E6                        u8701 0564  
                      u8621 03AE                        u8541 0172                        u9181 0CE0  
                      u9341 283C                        u9501 115A                        u9270 52D6  
                      u9430 51FC                        u7910 4956                        u8470 3C7C  
                      u7590 2C9C                        u7830 1E18                        u7750 1CD2  
                      u7670 1A8E                        u8390 340E                        u8710 06B0  
                      u8630 03E4                        u8550 01C0                        u9190 0D84  
                      u9350 2A28                        u9510 117C                        u9271 52D2  
                      u9431 51F8                        u7911 4952                        u8471 3C78  
                      u7591 2C98                        u7831 1E14                        u7671 1A8A  
                      u8295 45D4                        u8375 3390                        u8711 06AC  
                      u8631 03E0                        u8551 01BC                        u9191 0D80  
                      u9351 2A24                        u9511 1178                        u9360 497A  
                      u7920 4A2C                        u8480 3CA8                        u7840 1E46  
                      u7760 1D2C                        u7680 1AA0                        u8376 339A  
                      u8800 09A2                        u8720 0716                        u8640 0422  
                      u8560 01D0                        u9440 5106                        u9520 118C  
                      u9280 4DC0                        u9361 4976                        u7921 4A28  
                      u8481 3CA4                        u7841 1E42                        u7761 1D28  
                      u7681 1A9C                        u8377 33AA                        u8801 099E  
                      u8721 0712                        u8641 041E                        u8561 01CC  
                      u9441 5102                        u9521 1188                        u9281 4DBC  
                      u9370 4998                        u7930 4A46                        u8490 3CBE  
                      u7850 1E80                        u7770 1D4C                        u7690 1AB0  
                      u8810 0A74                        u8730 075E                        u8650 04AE  
                      u8570 020E                        u9450 511A                        u9530 1268  
                      u9290 4DFA                        u9371 4994                        u7931 4A42  
                      u8491 3CBA                        u7851 1E7C                        u7771 1D48  
                      u7755 1CC8                        u7691 1AAC                        u8395 3404  
                      u8811 0A70                        u8731 075A                        u8651 04AA  
                      u8571 020A                        u9451 5116                        u9531 1264  
                      u9291 4DF6                        u9700 473A                        u9380 49B4  
                      u7860 48B6                        u7940 4A60                        u7780 1D5E  
                      u8820 0A90                        u8740 076E                        u8660 04E4  
                      u8580 0220                        u8900 3B58                        u9540 1342  
                      u9460 10CA                        u9701 4736                        u9381 49B0  
                      u7861 48B2                        u7941 4A5C                        u7781 1D5A  
                      u8821 0A8C                        u8741 076A                        u8661 04E0  
                      u8581 021C                        u8901 3B54                        u9541 133E  
                      u9461 10C4                        u9605 5344                        u9710 47CA  
                      u9390 49F2                        u7870 48D0                        u7950 4A7E  
                      u6990 530A                        u7790 1D8C                        u8830 0AF6  
                      u8750 0808                        u8670 04FA                        u8590 029A  
                      u8910 3B7E                        u9550 1360                        u9470 10CC  
                      u9606 5346                        u9711 47C6                        u7871 48CC  
                      u7951 4A7A                        u6991 5306                        u7791 1D88  
                      u8831 0AF0                        u8751 0804                        u8671 04F6  
                      u8591 0296                        u8911 3B7A                        u9551 135C  
                      u9615 5336                        u7880 48F6                        u7960 4A94  
                      u8840 0AF8                        u8760 0856                        u8680 0530  
                      u8920 3BB8                        u9560 1370                        u9480 10EE  
                      u9616 5338                        u9800 4026                        u7881 48F2  
                      u7961 4A90                        u8761 0852                        u8681 052C  
                      u8921 3BB4                        u9721 4206                        u9561 136C  
                      u9481 10EA                        u9625 5328                        u7890 4914  
                      u7970 4AB8                        u8850 0B0C                        u8770 0906  
                      u8690 053E                        u8930 3BDE                        u9730 4224  
                      u9570 13F0                        u9490 1104                        u9626 532A  
                      u9810 4048                        u9650 51BA                        u7891 4910  
                      u7971 4AB4                        u8851 0B08                        u8771 0902  
                      u8691 053A                        u9731 4220                        u9571 13EC  
                      u9491 1100                        u9635 531A                        u9811 4044  
                      u9651 51B6                        u7980 4BA6                        u8780 0940  
                      u8940 3C10                        u8860 3AD6                        u9740 423C  
                      u9580 149A                        u9660 4D92                        u9636 531C  
                      u9820 4080                        u9900 3F2E                        u9397 49E8  
                      u7981 4BA2                        u8781 093C                        u8941 3C0C  
                      u8861 3AD2                        u9741 4238                        u9581 1496  
                      u9645 5360                        u9821 407C                        u9901 3F2A  
                      u7990 4BE4                        u8790 094E                        u8950 3C1E  
                      u8870 3B1C                        u9670 4E86                        u9646 5362  
                      u9830 4096                        u9910 40DC                        u7991 4BE0  
                      u8791 094A                        u8951 3C1A                        u9671 4E82  
                      u9831 4092                        u9751 3F9C                        u9911 40D8  
                      u8960 3C58                        u8880 3B2C                        u9680 4EA2  
                      u9920 4130                        u9840 3E16                        u8961 3C54  
                      u8937 3BD4                        u8881 3B28                        u9681 4E9E  
                      u9665 4D88                        u9761 3FAE                        u9921 412C  
                      u9841 3E12                        u8890 3B3A                        u8970 461E  
                      u9690 4EB8                        u9930 4156                        u9850 3E7A  
                      u8891 3B36                        u8971 461A                        u9691 4EB4  
                      u9595 5352                        u9931 4152                        u9851 3E76  
                      u8980 46B2                        u9596 5354                        u9940 4164  
                      u9860 3ED4                        u8877 3B12                        u8981 46AE  
                      u9941 4160                        u9861 3ED0                        u8990 46C4  
                      u9790 4024                        u9950 4176                        u9870 3EE2  
                      u8991 46C0                        u9791 401E                        u9951 4172  
                      u9871 3EDE                        u9784 400E                        u9960 418E  
                      u9880 3F08                        u9785 400A                        u9961 418A  
                      u9881 3F04                        _TMR1 0FCE                        u9778 3FE0  
                      u9970 41A2                        u9890 3F16                        u9779 4028  
                      u9971 419E                        u9891 3F12                        u9980 41C8  
                      u9981 41C4                        u9990 41D6                        u9991 41D2  
                      abs@a 000C                        _dbuf 0127                        _half FE0F  
                      _labs 4ECC                        _main 2294                        _dtoa 3C5A  
                      _rand 4D34                        _seed 0197                        _prec 0057  
                      _sinf 10A8                        pad@i 001E                        pad@p 001B  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _stoa 3ABC                        btemp 005A                        _utoa 4610  
             ___fpclassifyf 4512                        prodh 0FF4                        prodl 0FF3  
                      start 014E             ___fldiv@new_exp 003E                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 4968                       ??_abs 000E  
                     ??_pad 001D            __end_of_LCD_Init 47DA            __end_of_LCD_Send 52DA  
             ___fltol@sign1 0052                       ?_labs 0006             __end_of___fladd 1A74  
                     ?_main 0001                       ?_dtoa 0020             __end_of___fldiv 2DC8  
                     ?_rand 0012             __end_of___awdiv 4968             __end_of___cosdf 3908  
           __end_of___lbdiv 4ECC             __end_of___flneg 515A                       STR_10 FF6A  
                     STR_11 FF9D                       STR_20 FFAE                       STR_12 FF37  
                     STR_13 FE35                       STR_21 FE9E                       STR_22 FF59  
                     STR_14 FF04                       STR_30 FFC6                       STR_23 FFE6  
                     STR_15 FE8D                       STR_31 FFD6                       STR_32 FFCC  
                     STR_16 FEE2                       STR_40 FE7C                       STR_24 FFDC  
                     STR_33 FFCD                       STR_41 FFEB                       STR_17 FEF3  
                     STR_25 FFE1                       STR_18 FED1                       STR_34 FE46  
                     STR_26 FFFB                       STR_19 FE35                       STR_35 FFD2  
                     STR_27 FFF7                       STR_44 FFEF                       STR_36 FE33  
                     STR_28 FFF3             __end_of___awmod 4ACA                       STR_37 FE6B  
                     STR_29 FFD7                       STR_38 FE33                       STR_47 FFBF  
                     STR_39 FE59                       ?_sinf 00A4             __end_of___flmul 1E9E  
           __end_of___flsub 5058             __end_of___fltol 440E                       ?_stoa 0010  
                     u10000 41EA                       u10001 41E6                       u10011 3518  
                     u10020 3540                       u10100 3022                       u10021 353C  
                     u10101 301E                       u10030 35E0                       u10110 3044  
                     u10031 35DC                       u10111 3040                       ?_utoa 0020  
                     u10040 36BA                       u10120 3058                       u10200 2072  
                     u10041 36B6                       u10121 3054                       u10201 206E  
                     u10050 36E0                       u10130 306C                       u10210 2080  
                     u10051 36DC                       u10131 3068                       u10211 207C  
                     u10060 36EE                       u10140 3080                       u10220 212C  
                     u10300 23CA                       u10061 36EA                       u10141 307C  
                     u10221 2128                       u10301 23C6                       u10070 3706  
                     u10150 30AE                       u10230 215C                       u10310 23D8  
                     u10071 3702                       u10151 30AA                       u10231 2158  
                     u10311 23D4                       u10080 2E38                       u10240 227E  
                     u10320 23FE                       u10081 2E34                       u10241 227A  
                     u10161 1EE4                       u10321 23FA                       u10090 2E9A  
                     u10330 240C                       u10250 2334                       u10091 2E96  
                     u10171 1F18                       u10331 2408                       u10251 2330  
                     u10180 1F92                       u10340 2652                       u10260 235A  
                     u10181 1F8E                       u10341 264E                       u10261 2356  
                     u10190 204C                       u10270 2378                       u10191 2048  
                     u10407 24E4                       u10271 2374                       u10280 2386  
                     u10417 2518                       u10281 2382                       u10290 23AC  
                     u10507 2058                       u10427 254E                       u10291 23A8  
           ___awdiv@divisor 001A                       u10517 2212                       u10437 2584  
                     u10357 22A0                       u10527 3092                       u10447 25AA  
                     u10367 2308                       u10537 36C6                       u10457 25E8  
                     u10377 2340                       u10547 4722                       u10467 3EEE  
                     u10387 2392                       u10557 47D0                       u10477 413A  
                     u10397 23E4                       u10487 41AC                       u10497 4052  
                     _RC1IE 7CED                       _RC1IF 7CF5             __end_of___lwdiv 4D34  
           __end_of___sindf 32E2             __end_of___lwmod 4E70                       i2l412 0088  
                     i2l414 0074                       i2l423 0142                ___sindf$4540 0074  
           ___awdiv@counter 001C                ___sindf$4541 0078                ___sindf$4539 0070  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4         ___lmul@multiplicand 000A  
           __end_of_pio2_1t FE07                       _fabsf 51FE                       _flags 0059  
                     _gmail 0177         read_prec_or_width@c 000E         read_prec_or_width@n 000F  
                     _fputc 47DA                       _fputs 509E                       labs@a 0006  
                     pad@fp 0017                       _width 0055             __end_of_invpio2 FE0F  
                     _putch 52FA                       dtoa@d 0022                       dtoa@i 002B  
                     dtoa@p 0028                       dtoa@s 002A                       dtoa@w 0026  
      __end_of_LED1_Control 5356             __end_of_runGAME 2294             __end_of_runGPIO 40AE  
                     pclath 0FFA                       tablat 0FF5             __end_of_runUART 3F42  
      __end_of_LED2_Control 5348                       sinf@n 00B0                       sinf@x 00A4  
                     sinf@y 00B6                       plusw1 0FE3                       plusw2 0FDB  
                     stoa@l 001C                       stoa@p 0016                       stoa@s 0012  
                     stoa@w 0018                       ttemp5 005B                       ttemp6 005E  
                     ttemp7 0062                       utoa@d 0022        __end_of_LED3_Control 533A  
                     utoa@i 0028                       utoa@p 0026                       utoa@w 0024  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 509E  
            ?___fpclassifyf 0006             ___lbdiv@divisor 0006        __end_of_LED4_Control 532C  
           ___lbdiv@counter 0008        __end_of_LED5_Control 531E             runUART@reversed 00D4  
      __end_of_LED6_Control 5364             __initialization 4F22      __end_of_LCD_ShowString 4A1A  
              __end_of_half FE13                __end_of_labs 4F22                __end_of_main 266C  
              __end_of_dtoa 3DD6                __end_of_rand 4DA2                __end_of_sinf 15B2  
              __end_of_stoa 3C5A                __end_of_utoa 4700                LCD_Send@data 0006  
                    ??_labs 000A                      ??_main 00FA                      ??_dtoa 0024  
                    ??_rand 0014                      ??_sinf 0054                      ??_stoa 0014  
                    ??_utoa 0024           __end_of_LCD_Clear 51FE               __activetblptr 0002  
__end_of_read_prec_or_width 4B78                ?_moveDisplay 00E7                      ?_fabsf 0006  
                    ?_fputc 0007                      ?_fputs 0010                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      _CCPR1L 0FBE            ___awdiv@dividend 0018  
                    _GAMEIE 0124                      ?_putch 0001                      _GODONE 7E11  
                    _GPIOIE 0126                      i2l6300 00CC                      i2l6310 0110  
                    i2l6302 00DA                      i2l6312 0120                      i2l6304 00E8  
                    i2l6314 0128                      i2l6306 00FA                      i2l6316 012C  
                    i2l6308 00FE                      i2l6318 013A                      i2l6270 0012  
                    i2l6280 0066                      i2l6272 0020                      i2l6290 00A0  
                    i2l6274 002E                      i2l6292 00AE                      i2l6284 0082  
                    i2l6276 0040                      i2l6294 00C0                      i2l6286 0090  
                    i2l6278 004E                      i2l6296 00C2                      i2l6288 0092  
                    i2l6298 00CA                      _RCREG1 0FAE               ___rem_pio2f@n 00A0  
             ___rem_pio2f@t 009C               ___rem_pio2f@x 0084               ___rem_pio2f@y 0088  
             vfpfcnvrt@done 00BF                      _UARTIE 0125                      _SPBRG1 0FAF  
                    _TMR1IE 7CE8                      _TMR1IF 7CF0                      _TMR2IE 7CE9  
                    _TMR2IF 7CF1                      _TMR1ON 7E68                      _TMR2ON 7DD2  
                    _SSP1IF 7CF3                      _SSP2IF 7D27                      _TXREG1 0FAD  
          __end_of___xxtofl 3ABC                _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC  
           ?_LCD_ShowString 0007                      _s1pio2 FE2F                      _s2pio2 FE2B  
                    _s3pio2 FE27                      _s4pio2 FE23                      ___flge 440E  
                    ___fleq 4B78                      ___lmul 4DA2                   ??___fladd 004E  
                    ___wmul 528E                   ??___fldiv 0035                   ??___awdiv 001C  
                 ??___cosdf 0052                   ??___lbdiv 0007                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 00F3                      _efgtoa 0152  
                 ??___lwdiv 000A                   ??___sindf 0052                   ??___lwmod 000A  
                    _pio2_1 FE07                      _floorf 32E2                      fabsf@u 000A  
                    fabsf@x 0006                      _memcpy 4F76        read_prec_or_width@ap 000D  
                    clear_0 4F48                      clear_1 4F54            ___awdiv@quotient 001E  
                    _runADC 34F8                      _runDAC 2DC8             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 40AE        runGAME@keepStateGAME 01C5  
           ___awmod@counter 000A                      _printf 52DA                      pad@buf 0019  
                    dtoa@fp 0020                      _strcpy 515A                      _strlen 5192  
                    fputc@c 0007                      fputs@c 0014                      fputs@i 0015  
                    fputs@s 0010            __end_of_runMUSIC 5366             ___fpclassifyf@e 000E  
           ___fpclassifyf@u 0010             ___fpclassifyf@x 0006                __mediumconst FDF2  
                 ??_runGAME 00E7                      sinf@ux 00BA                   ??_runGPIO 0007  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
         __end_of_SPI_write 5120                   ??_runUART 00D2                      stoa@cp 001A  
                    stoa@fp 0010            __end_of_vfprintf 5010                      utoa@fp 0020  
                 ??_sprintf 0054            ___lbdiv@dividend 0007                  ___flge@ff1 002D  
                ___flge@ff2 0031             ??___fpclassifyf 000A                ___xxtofl@arg 0010  
              ___xxtofl@exp 000F                ___xxtofl@val 0006                  ___fleq@ff1 0006  
                ___fleq@ff2 000A                  __accesstop 0060     __end_of__initialization 4F68  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0080  
             ___rparam_used 0001                  ___fltol@f1 0064              __pcstackCOMRAM 0001  
         LED4_Control@state 0006                __pidataBANK1 5266               __end_of_fabsf 5232  
             __end_of_fputc 48A4               __end_of_fputs 50E2               __end_of_putch 5310  
                __end_of_C0 FE23                  __end_of_C1 FE1F                  __end_of_C2 FE1B  
                __end_of_C3 FE17                  __end_of_S1 FE03                  __end_of_S2 FDFF  
                __end_of_S3 FDFB                  __end_of_S4 FDF7            ___lbdiv@quotient 0009  
                   ??_fabsf 000A                     ??_fputc 000B                     ??_fputs 0014  
                   ??_putch 0006                  __pbssBANK0 00FE                  __pbssBANK1 0100  
                __pbssBANK2 0200                  ??_LCD_Init 0007                  ??_LCD_Send 0006  
               runADC@F6967 0100                SPI_write@LSB 0007                SPI_write@MSB 0006  
                   ISR@temp 0005                     ?___flge 002D                     ?___fleq 0006  
                   ?___lmul 0006                     ?___wmul 0006                     ?_efgtoa 0084  
             ??___rem_pio2f 0089                     ?_floorf 0046                _LED1_Control 5348  
                   ?_memcpy 0006              ___lmul@product 000E                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 533A         runGAME@randomNumber 01CB  
                   ?_runPWM 0001                     ?_printf 00CE                     ?_strcpy 0006  
                   ?_strlen 0006                _LED3_Control 532C                _LED4_Control 531E  
                 ?___xxtofl 0006                _LED5_Control 5310              ___rem_pio2f@fn 0098  
            ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094                _LED6_Control 5356  
                   _SSP2ADD 0F6E                     _SSP1BUF 0FC9                     _SSP2BUF 0F6F  
               runGAME@pot1 01C9                 runGAME@text 019B           runGPIO@LEDControl 0015  
           LCD_ShowString@i 000C                     __Hparam 0000                     __Lparam 0000  
                 ?_runMUSIC 0001                     ___fladd 15B2                     ___fldiv 2A2E  
                   ___awdiv 48A4                     ___cosdf 370A                     ___lbdiv 4E70  
                   ___flneg 5120                     ___awmod 4A1A                     ___flmul 1A74  
                   ___flsub 5010                     ___fltol 4306                     ___lwdiv 4CC0  
                   ___sindf 30B0                     ___lwmod 4E0C                   ?_vfprintf 00C7  
            main@setUpAgain 00FC                     __pcinit 4F22                     __ramtop 1000  
                   __ptext0 2294                     __ptext1 3DD6                     __ptext2 5192  
                   __ptext3 40AE                     __ptext4 5364                     __ptext5 3F42  
                   __ptext6 5310                     __ptext7 531E                     __ptext8 532C  
                   __ptext9 533A                     _pio2_1t FE03                   _T1CONbits 0FCD  
           runPWM@keepState 0022       read_prec_or_width@fmt 000C                  ??___xxtofl 000A  
       __end_of___rem_pio2f 2A2E            ___awmod@dividend 0006                     _invpio2 FE0B  
                   _runGAME 1E9E                     _runGPIO 3F42                     efgtoa@c 008A  
                   efgtoa@d 0098                     efgtoa@e 009C                     efgtoa@f 0086  
                   efgtoa@g 00AF                     efgtoa@h 00A6                     efgtoa@i 00A4  
                   efgtoa@l 00AA                     efgtoa@m 009A                     efgtoa@n 00B3  
                   efgtoa@p 008F                     efgtoa@t 0091                     efgtoa@u 00B5  
                   efgtoa@w 009E                     _runUART 3DD6                   _LCD_Clear 51C8  
                   _sprintf 5058            ___rem_pio2f$4538 008F        end_of_initialization 4F68  
                   floorf@e 0064                     floorf@m 0060                     floorf@u 0066  
                   floorf@x 0046                     memcpy@d 000D                     memcpy@n 000A  
                   memcpy@s 000F                     fputc@fp 0009            ___rem_pio2f@F526 0115  
             __Lmediumconst FDF2                     fputs@fp 0012            ??_LCD_ShowString 0009  
        _read_prec_or_width 4ACA                   i2u1056_47 0058           LED1_Control@state 0006  
     LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093          runGAME@GAMEdivider 01C8  
                ??_runMUSIC 0006           __end_of_vfpfcnvrt 10A8                  efgtoa@mode 0096  
                efgtoa@sign 00AE                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 000C                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 00C0                  ??_vfprintf 0054  
                   strcpy@d 000A                     strlen@a 0008                     strlen@s 0006  
                 _PORTAbits 0F80                   _PORTCbits 0F82                 ___fladd@grs 0063  
             ___xxtofl@sign 000E                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 000E                 ___fldiv@grs 0040                 ___fldiv@rem 0039  
                 _SPI_write 50E2                 ___flmul@grs 0022                 _CCP1CONbits 0FBD  
         LED5_Control@state 0006              __end_of_s1pio2 FE33              __end_of_s2pio2 FE2F  
            __end_of_s3pio2 FE2B              __end_of_s4pio2 FE27              __end_of___flge 4512  
            __end_of___fleq 4C22              __end_of___lmul 4E0C                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 266C                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 52B4              __end_of_efgtoa 0B4C              __end_of_pio2_1 FE0B  
      moveDisplay@menuItem1 019B        moveDisplay@menuItem2 01AC              __end_of_floorf 34F8  
      moveDisplay@menuItems 01BD              __end_of_memcpy 4FC6                  floorf@F521 0119  
            __end_of_runADC 370A              __end_of_runDAC 30B0              __end_of_runPWM 41F4  
            __end_of_printf 52FA              __end_of_strcpy 5192              __end_of_strlen 51C8  
       start_initialization 4F22                 __end_of_ISR 014E                 __end_of_abs 5266  
               __end_of_pad 4CC0                  ?_SPI_write 0001       __end_of___fpclassifyf 4610  
           runADC@keepState 01B8                 vfprintf@fmt 00C9                    ??___flge 0035  
                  ??___fleq 000E                    ??___lmul 000E                    ??___wmul 000A  
                  ??_efgtoa 008B                 __pdataBANK1 01CE                    ??_floorf 004A  
                  ??_memcpy 000C                    ??_runADC 00E7                    ??_runDAC 00D2  
                  ??_runPWM 0020                    ??_printf 0054                    ??_strcpy 000A  
                  ??_strlen 0008            runGAME@GAMEround 01C7                   ___fladd@a 004A  
                 ___fladd@b 0046                   ___fldiv@a 0031                   ___fldiv@b 002D  
             runGPIO@states 0009                   ___cosdf@r 0068                   ___cosdf@w 0078  
                 ___cosdf@x 0064                   ___cosdf@z 007C                   ___flmul@a 0018  
                 ___flmul@b 0014                 __pbssCOMRAM 0055                   ___flsub@a 0068  
                 ___flsub@b 0064               __pcstackBANK0 0060               __pcstackBANK1 019B  
               ??_LCD_Clear 0007                   ___sindf@r 0068                   ___sindf@s 007C  
                 ___sindf@w 006C                   ___sindf@x 0064                   ___sindf@z 0080  
     runGPIO@numberOfStates 0021                 _efgtoa$4075 0093            ___lwdiv@dividend 0006  
                 _dtoa$4044 0024               SPI_write@data 0008                   __pintcode 0008  
             __pmediumconst FDF2                    ?___fladd 0046                    ?___fldiv 002D  
                  ?___awdiv 0018                    ?___cosdf 0064                    ?___lbdiv 0006  
                  ?___flneg 0080                    ?___awmod 0006                    ?___flmul 0014  
                  ?___flsub 0064                    ?___fltol 0064                  runADC@pot1 01B4  
                runADC@pot2 01B6                    ?___lwdiv 0006                    ?___sindf 0064  
                  ?___lwmod 0006                  runADC@text 019B                   fabsf@F465 0111  
             ??_moveDisplay 00E8                    ?_runGAME 0001                    ?_runGPIO 0001  
                  ?_runUART 0001             runDAC@keepState 00DB            ___lwdiv@quotient 000B  
                  ?_sprintf 00CE                   _sinf$4250 00A8                   _sinf$4251 00AC  
                 _sinf$4534 00B2                    _GAMEtime 0123                 ??_SPI_write 0006  
            runDAC@DACindex 00DD                    _LCD_Init 4700                    _LCD_Send 52B4  
            ___wmul@product 000A                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C                runGAME@F6970 0200  
              runGAME@F6964 0219                  runUART@len 00F4           LED2_Control@state 0006  
                  i2u690_40 0074                    i2u690_41 0070                    i2u691_40 0082  
                  i2u691_41 007E                    i2u692_40 00A0                    i2u692_41 009C  
                  i2u693_40 00AE                    i2u693_41 00AA                    i2u694_40 00C0  
                  i2u686_40 0020                    i2u694_41 00BC                    i2u686_41 001C  
                  i2u695_40 00DA                    i2u687_40 002E                    i2u695_41 00D6  
                  i2u687_41 002A                    i2u696_40 00E8                    i2u688_40 0040  
                  i2u696_41 00E4                    i2u688_41 003C                    i2u697_40 00FA  
                  i2u689_40 004E                    i2u697_41 00F6                    i2u689_41 004A  
                  i2u698_40 0110                    i2u698_41 010C                   _vfpfcnvrt 0B4C  
                _ADCON0bits 0FC2                  _ADCON2bits 0FC0           ___wmul@multiplier 0006  
                 main@menuI 00FD            moveDisplay@F6965 01CE                  vfpfcnvrt@c 00C4  
         ___lmul@multiplier 0006                   copy_data0 4F36           runGAME@approxText 01AC  
       __end_of_moveDisplay 4306            moveDisplay@menuI 01CD            moveDisplay@where 00E7  
              runGPIO@F6975 01EA                runGPIO@F6993 01DE                runGPIO@GPIOi 0023  
                  __Hrparam 0000                   memcpy@tmp 000C                  vfprintf@ap 00CB  
                  __Lrparam 0000                  vfprintf@fp 00C7             runGAME@GAMEpart 01C6  
         LED6_Control@state 0006                ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9  
       runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELCbits 0F3A                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 011D                  sprintf@fmt 00D0                    ___xxtofl 3908  
           ___lwdiv@divisor 0008             ___lwdiv@counter 000A                    __ptext10 5348  
                  __ptext11 5356                    __ptext20 51FE                    __ptext12 1E9E  
                  __ptext21 370A                    __ptext13 4D34                    __ptext30 4610  
                  __ptext22 52DA                    __ptext14 4DA2                    __ptext31 4E0C  
                  __ptext23 50E2                    __ptext15 4E70                    __ptext40 32E2  
                  __ptext32 4CC0                    __ptext24 34F8                    __ptext16 2DC8  
                  __ptext41 4512                    __ptext33 3ABC                    __ptext25 3908  
                  __ptext17 10A8                    __ptext50 3C5A                    __ptext42 4306  
                  __ptext34 4ACA                    __ptext26 41F4                    __ptext18 30B0  
                  __ptext51 4C22                    __ptext43 5010                    __ptext35 528E  
                  __ptext27 5058                    __ptext19 266C                    __ptext60 4700  
                  __ptext52 509E                    __ptext44 15B2                    __ptext36 0152  
                  __ptext28 4FC6                    __ptext61 52B4                    __ptext53 47DA  
                  __ptext45 5120                    __ptext37 515A                    __ptext29 0B4C  
                  __ptext54 52FA                    __ptext46 1A74                    __ptext38 4F76  
                  __ptext55 5232                    __ptext47 440E                    __ptext39 4ECC  
                  __ptext56 4A1A                    __ptext48 4B78                    __ptext57 48A4  
                  __ptext49 2A2E                    __ptext58 4968                    __ptext59 51C8  
            runADC@voltage1 01AC              runADC@voltage2 01B0                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                  strcpy@dest 0006  
                  efgtoa@fp 0084                    efgtoa@ne 008D                    efgtoa@pp 0095  
                  efgtoa@ou 00A0                    _runMUSIC 5364                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4531 00D3                 _runDAC$4532 00D7  
                  _vfprintf 4FC6               ?_LED1_Control 0001                   printf@fmt 00CE  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0006  
             ?_LED5_Control 0001                    memcpy@d1 0006               ?_LED6_Control 0001  
                  memcpy@s1 0008                 _moveDisplay 41F4                    intlevel2 0000  
                 sprintf@ap 00DA            ___lwmod@dividend 0006                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00B1                    runGPIO@j 0024  
                  runUART@i 00F6                    runUART@p 00F8                 efgtoa@nmode 0097  
                  printf@ap 0054              ??_LED1_Control 0006              ??_LED2_Control 0006  
               ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007              ??_LED3_Control 0006  
            ??_LED4_Control 0006                    sprintf@f 00DB                    sprintf@s 00CE  
            ??_LED5_Control 0006             ___lwmod@divisor 0008              ??_LED6_Control 0006  
           ___lwmod@counter 000A            runPWM@multiplier 0023               ___fladd@signs 0060  
              ___fladd@aexp 0061                ___fladd@bexp 0062                ___cosdf$4535 006C  
              ___cosdf$4536 0070                ___cosdf$4537 0074               _keepStateGPIO 00FE  
         LED3_Control@state 0006  
