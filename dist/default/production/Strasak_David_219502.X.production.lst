

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 22:03:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   005258                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   005258  DC                 	db	low STR_23
   125   005259  FF                 	db	high STR_23
   126   00525A  E1                 	db	low STR_24
   127   00525B  FF                 	db	high STR_24
   128   00525C  FB                 	db	low STR_25
   129   00525D  FF                 	db	high STR_25
   130   00525E  F7                 	db	low STR_26
   131   00525F  FF                 	db	high STR_26
   132   005260  F3                 	db	low STR_27
   133   005261  FF                 	db	high STR_27
   134   005262  D7                 	db	low STR_28
   135   005263  FF                 	db	high STR_28
   136   005264  C6                 	db	low STR_29
   137   005265  FF                 	db	high STR_29
   138   005266  D6                 	db	low (STR_34+4)
   139   005267  FF                 	db	high (STR_34+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   005268  20                 	db	32
   143   005269  30                 	db	48
   144   00526A  18                 	db	24
   145   00526B  0C                 	db	12
   146   00526C  06                 	db	6
   147   00526D  03                 	db	3
   148   00526E  01                 	db	1
   149   00526F  03                 	db	3
   150   005270  06                 	db	6
   151   005271  0C                 	db	12
   152   005272  18                 	db	24
   153   005273  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   005274  3A                 	db	low _LED1_Control
   157   005275  53                 	db	high _LED1_Control
   158   005276  2C                 	db	low _LED2_Control
   159   005277  53                 	db	high _LED2_Control
   160   005278  1E                 	db	low _LED3_Control
   161   005279  53                 	db	high _LED3_Control
   162   00527A  10                 	db	low _LED4_Control
   163   00527B  53                 	db	high _LED4_Control
   164   00527C  02                 	db	low _LED5_Control
   165   00527D  53                 	db	high _LED5_Control
   166   00527E  48                 	db	low _LED6_Control
   167   00527F  53                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FDF2                     __pmediumconst:
   171                           	callstack 0
   172   00FDF2  00                 	db	0
   173   00FDF3  6C3C               	dw	27708
   174   00FDF5  3636               	dw	13878
   175   00FDF7                     __end_of_S4:
   176                           	callstack 0
   177   00FDF7  07CF               	dw	1999
   178   00FDF9  B950               	dw	47440
   179   00FDFB                     __end_of_S3:
   180                           	callstack 0
   181   00FDFB  8884               	dw	34948
   182   00FDFD  3C08               	dw	15368
   183   00FDFF                     __end_of_S2:
   184                           	callstack 0
   185   00FDFF  AAAB               	dw	43691
   186   00FE01  BE2A               	dw	48682
   187   00FE03                     __end_of_S1:
   188                           	callstack 0
   189   00FE03  85A3               	dw	34211
   190   00FE05  3288               	dw	12936
   191   00FE07                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE07  0FDA               	dw	4058
   194   00FE09  3FC9               	dw	16329
   195   00FE0B                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE0B  F983               	dw	63875
   198   00FE0D  3F22               	dw	16162
   199   00FE0F                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE0F  0000               	dw	0
   202   00FE11  3F00               	dw	16128
   203   00FE13                     __end_of_half:
   204                           	callstack 0
   205   00FE13  9A17               	dw	39447
   206   00FE15  37CC               	dw	14284
   207   00FE17                     __end_of_C3:
   208                           	callstack 0
   209   00FE17  043F               	dw	1087
   210   00FE19  BAB6               	dw	47798
   211   00FE1B                     __end_of_C2:
   212                           	callstack 0
   213   00FE1B  AA9F               	dw	43679
   214   00FE1D  3D2A               	dw	15658
   215   00FE1F                     __end_of_C1:
   216                           	callstack 0
   217   00FE1F  0000               	dw	0
   218   00FE21  BF00               	dw	48896
   219   00FE23                     __end_of_C0:
   220                           	callstack 0
   221   00FE23  0FDB               	dw	4059
   222   00FE25  40C9               	dw	16585
   223   00FE27                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FE27  CBE4               	dw	52196
   226   00FE29  4096               	dw	16534
   227   00FE2B                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FE2B  0FDB               	dw	4059
   230   00FE2D  4049               	dw	16457
   231   00FE2F                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FE2F  0FDB               	dw	4059
   234   00FE31  3FC9               	dw	16329
   235   00FE33                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FE33                     STR_35:
   290   00FE33  25                 	db	37
   291   00FE34  75                 	db	117	;'u'
   292   00FE35  20                 	db	32
   293   00FE36  20                 	db	32
   294   00FE37  20                 	db	32
   295   00FE38  20                 	db	32
   296   00FE39  20                 	db	32
   297   00FE3A  20                 	db	32
   298   00FE3B  20                 	db	32
   299   00FE3C  20                 	db	32
   300   00FE3D  20                 	db	32
   301   00FE3E  20                 	db	32
   302   00FE3F  20                 	db	32
   303   00FE40  20                 	db	32
   304   00FE41  20                 	db	32
   305   00FE42  20                 	db	32
   306   00FE43  20                 	db	32
   307   00FE44  20                 	db	32
   308   00FE45  00                 	db	0
   309   00FE46                     STR_33:
   310   00FE46  50                 	db	80	;'P'
   311   00FE47  4F                 	db	79	;'O'
   312   00FE48  54                 	db	84	;'T'
   313   00FE49  31                 	db	49	;'1'
   314   00FE4A  3A                 	db	58	;':'
   315   00FE4B  25                 	db	37
   316   00FE4C  2E                 	db	46
   317   00FE4D  31                 	db	49	;'1'
   318   00FE4E  66                 	db	102	;'f'
   319   00FE4F  50                 	db	80	;'P'
   320   00FE50  4F                 	db	79	;'O'
   321   00FE51  54                 	db	84	;'T'
   322   00FE52  32                 	db	50	;'2'
   323   00FE53  3A                 	db	58	;':'
   324   00FE54  25                 	db	37
   325   00FE55  2E                 	db	46
   326   00FE56  31                 	db	49	;'1'
   327   00FE57  66                 	db	102	;'f'
   328   00FE58  00                 	db	0
   329   00FE59                     STR_38:
   330   00FE59  53                 	db	83	;'S'
   331   00FE5A  6B                 	db	107	;'k'
   332   00FE5B  6F                 	db	111	;'o'
   333   00FE5C  72                 	db	114	;'r'
   334   00FE5D  65                 	db	101	;'e'
   335   00FE5E  3A                 	db	58	;':'
   336   00FE5F  20                 	db	32
   337   00FE60  25                 	db	37
   338   00FE61  75                 	db	117	;'u'
   339   00FE62  20                 	db	32
   340   00FE63  20                 	db	32
   341   00FE64  20                 	db	32
   342   00FE65  20                 	db	32
   343   00FE66  20                 	db	32
   344   00FE67  20                 	db	32
   345   00FE68  20                 	db	32
   346   00FE69  20                 	db	32
   347   00FE6A  00                 	db	0
   348   00FE6B                     STR_36:
   349   00FE6B  25                 	db	37
   350   00FE6C  68                 	db	104	;'h'
   351   00FE6D  75                 	db	117	;'u'
   352   00FE6E  20                 	db	32
   353   00FE6F  20                 	db	32
   354   00FE70  20                 	db	32
   355   00FE71  20                 	db	32
   356   00FE72  20                 	db	32
   357   00FE73  20                 	db	32
   358   00FE74  20                 	db	32
   359   00FE75  20                 	db	32
   360   00FE76  20                 	db	32
   361   00FE77  20                 	db	32
   362   00FE78  20                 	db	32
   363   00FE79  20                 	db	32
   364   00FE7A  20                 	db	32
   365   00FE7B  00                 	db	0
   366   00FE7C                     STR_39:
   367   00FE7C  47                 	db	71	;'G'
   368   00FE7D  41                 	db	65	;'A'
   369   00FE7E  4D                 	db	77	;'M'
   370   00FE7F  45                 	db	69	;'E'
   371   00FE80  20                 	db	32
   372   00FE81  4F                 	db	79	;'O'
   373   00FE82  56                 	db	86	;'V'
   374   00FE83  45                 	db	69	;'E'
   375   00FE84  52                 	db	82	;'R'
   376   00FE85  20                 	db	32
   377   00FE86  20                 	db	32
   378   00FE87  20                 	db	32
   379   00FE88  20                 	db	32
   380   00FE89  20                 	db	32
   381   00FE8A  20                 	db	32
   382   00FE8B  20                 	db	32
   383   00FE8C  00                 	db	0
   384   00FE8D                     STR_15:
   385   00FE8D  50                 	db	80	;'P'
   386   00FE8E  4F                 	db	79	;'O'
   387   00FE8F  54                 	db	84	;'T'
   388   00FE90  31                 	db	49	;'1'
   389   00FE91  20                 	db	32
   390   00FE92  20                 	db	32
   391   00FE93  20                 	db	32
   392   00FE94  20                 	db	32
   393   00FE95  20                 	db	32
   394   00FE96  20                 	db	32
   395   00FE97  20                 	db	32
   396   00FE98  20                 	db	32
   397   00FE99  20                 	db	32
   398   00FE9A  20                 	db	32
   399   00FE9B  20                 	db	32
   400   00FE9C  20                 	db	32
   401   00FE9D  00                 	db	0
   402   00FE9E                     STR_20:
   403   00FE9E  4E                 	db	78	;'N'
   404   00FE9F  65                 	db	101	;'e'
   405   00FEA0  62                 	db	98	;'b'
   406   00FEA1  79                 	db	121	;'y'
   407   00FEA2  6C                 	db	108	;'l'
   408   00FEA3  6F                 	db	111	;'o'
   409   00FEA4  20                 	db	32
   410   00FEA5  20                 	db	32
   411   00FEA6  20                 	db	32
   412   00FEA7  20                 	db	32
   413   00FEA8  20                 	db	32
   414   00FEA9  20                 	db	32
   415   00FEAA  20                 	db	32
   416   00FEAB  20                 	db	32
   417   00FEAC  20                 	db	32
   418   00FEAD  20                 	db	32
   419   00FEAE  00                 	db	0
   420   00FEAF                     STR_5:
   421   00FEAF  42                 	db	66	;'B'
   422   00FEB0  52                 	db	82	;'R'
   423   00FEB1  3A                 	db	58	;':'
   424   00FEB2  20                 	db	32
   425   00FEB3  31                 	db	49	;'1'
   426   00FEB4  39                 	db	57	;'9'
   427   00FEB5  32                 	db	50	;'2'
   428   00FEB6  30                 	db	48	;'0'
   429   00FEB7  30                 	db	48	;'0'
   430   00FEB8  20                 	db	32
   431   00FEB9  20                 	db	32
   432   00FEBA  20                 	db	32
   433   00FEBB  20                 	db	32
   434   00FEBC  20                 	db	32
   435   00FEBD  20                 	db	32
   436   00FEBE  20                 	db	32
   437   00FEBF  00                 	db	0
   438   00FEC0                     STR_1:
   439   00FEC0  56                 	db	86	;'V'
   440   00FEC1  79                 	db	121	;'y'
   441   00FEC2  74                 	db	116	;'t'
   442   00FEC3  76                 	db	118	;'v'
   443   00FEC4  6F                 	db	111	;'o'
   444   00FEC5  72                 	db	114	;'r'
   445   00FEC6  69                 	db	105	;'i'
   446   00FEC7  6C                 	db	108	;'l'
   447   00FEC8  3A                 	db	58	;':'
   448   00FEC9  20                 	db	32
   449   00FECA  20                 	db	32
   450   00FECB  20                 	db	32
   451   00FECC  20                 	db	32
   452   00FECD  20                 	db	32
   453   00FECE  20                 	db	32
   454   00FECF  20                 	db	32
   455   00FED0  00                 	db	0
   456   00FED1                     STR_18:
   457   00FED1  50                 	db	80	;'P'
   458   00FED2  72                 	db	114	;'r'
   459   00FED3  69                 	db	105	;'i'
   460   00FED4  70                 	db	112	;'p'
   461   00FED5  72                 	db	114	;'r'
   462   00FED6  61                 	db	97	;'a'
   463   00FED7  76                 	db	118	;'v'
   464   00FED8  69                 	db	105	;'i'
   465   00FED9  74                 	db	116	;'t'
   466   00FEDA  20                 	db	32
   467   00FEDB  20                 	db	32
   468   00FEDC  20                 	db	32
   469   00FEDD  20                 	db	32
   470   00FEDE  20                 	db	32
   471   00FEDF  20                 	db	32
   472   00FEE0  20                 	db	32
   473   00FEE1  00                 	db	0
   474   00FEE2                     STR_16:
   475   00FEE2  5A                 	db	90	;'Z'
   476   00FEE3  72                 	db	114	;'r'
   477   00FEE4  79                 	db	121	;'y'
   478   00FEE5  63                 	db	99	;'c'
   479   00FEE6  68                 	db	104	;'h'
   480   00FEE7  6C                 	db	108	;'l'
   481   00FEE8  69                 	db	105	;'i'
   482   00FEE9  20                 	db	32
   483   00FEEA  74                 	db	116	;'t'
   484   00FEEB  6F                 	db	111	;'o'
   485   00FEEC  20                 	db	32
   486   00FEED  20                 	db	32
   487   00FEEE  20                 	db	32
   488   00FEEF  20                 	db	32
   489   00FEF0  20                 	db	32
   490   00FEF1  20                 	db	32
   491   00FEF2  00                 	db	0
   492   00FEF3                     STR_17:
   493   00FEF3  70                 	db	112	;'p'
   494   00FEF4  6F                 	db	111	;'o'
   495   00FEF5  6D                 	db	109	;'m'
   496   00FEF6  6F                 	db	111	;'o'
   497   00FEF7  63                 	db	99	;'c'
   498   00FEF8  69                 	db	105	;'i'
   499   00FEF9  20                 	db	32
   500   00FEFA  42                 	db	66	;'B'
   501   00FEFB  54                 	db	84	;'T'
   502   00FEFC  4E                 	db	78	;'N'
   503   00FEFD  34                 	db	52	;'4'
   504   00FEFE  20                 	db	32
   505   00FEFF  20                 	db	32
   506   00FF00  20                 	db	32
   507   00FF01  20                 	db	32
   508   00FF02  20                 	db	32
   509   00FF03  00                 	db	0
   510   00FF04                     STR_14:
   511   00FF04  48                 	db	72	;'H'
   512   00FF05  79                 	db	121	;'y'
   513   00FF06  62                 	db	98	;'b'
   514   00FF07  65                 	db	101	;'e'
   515   00FF08  6A                 	db	106	;'j'
   516   00FF09  20                 	db	32
   517   00FF0A  70                 	db	112	;'p'
   518   00FF0B  6F                 	db	111	;'o'
   519   00FF0C  6D                 	db	109	;'m'
   520   00FF0D  6F                 	db	111	;'o'
   521   00FF0E  63                 	db	99	;'c'
   522   00FF0F  69                 	db	105	;'i'
   523   00FF10  20                 	db	32
   524   00FF11  20                 	db	32
   525   00FF12  20                 	db	32
   526   00FF13  20                 	db	32
   527   00FF14  00                 	db	0
   528   00FF15                     STR_3:
   529   00FF15  50                 	db	80	;'P'
   530   00FF16  6F                 	db	111	;'o'
   531   00FF17  7A                 	db	122	;'z'
   532   00FF18  6F                 	db	111	;'o'
   533   00FF19  72                 	db	114	;'r'
   534   00FF1A  21                 	db	33
   535   00FF1B  20                 	db	32
   536   00FF1C  48                 	db	72	;'H'
   537   00FF1D  61                 	db	97	;'a'
   538   00FF1E  64                 	db	100	;'d'
   539   00FF1F  21                 	db	33
   540   00FF20  21                 	db	33
   541   00FF21  21                 	db	33
   542   00FF22  20                 	db	32
   543   00FF23  20                 	db	32
   544   00FF24  20                 	db	32
   545   00FF25  00                 	db	0
   546   00FF26                     STR_2:
   547   00FF26  44                 	db	68	;'D'
   548   00FF27  61                 	db	97	;'a'
   549   00FF28  76                 	db	118	;'v'
   550   00FF29  69                 	db	105	;'i'
   551   00FF2A  64                 	db	100	;'d'
   552   00FF2B  20                 	db	32
   553   00FF2C  53                 	db	83	;'S'
   554   00FF2D  74                 	db	116	;'t'
   555   00FF2E  72                 	db	114	;'r'
   556   00FF2F  61                 	db	97	;'a'
   557   00FF30  73                 	db	115	;'s'
   558   00FF31  61                 	db	97	;'a'
   559   00FF32  6B                 	db	107	;'k'
   560   00FF33  20                 	db	32
   561   00FF34  20                 	db	32
   562   00FF35  20                 	db	32
   563   00FF36  00                 	db	0
   564   00FF37                     STR_12:
   565   00FF37  4C                 	db	76	;'L'
   566   00FF38  61                 	db	97	;'a'
   567   00FF39  64                 	db	100	;'d'
   568   00FF3A  65                 	db	101	;'e'
   569   00FF3B  6E                 	db	110	;'n'
   570   00FF3C  69                 	db	105	;'i'
   571   00FF3D  20                 	db	32
   572   00FF3E  70                 	db	112	;'p'
   573   00FF3F  6F                 	db	111	;'o'
   574   00FF40  74                 	db	116	;'t'
   575   00FF41  61                 	db	97	;'a'
   576   00FF42  6B                 	db	107	;'k'
   577   00FF43  75                 	db	117	;'u'
   578   00FF44  20                 	db	32
   579   00FF45  20                 	db	32
   580   00FF46  20                 	db	32
   581   00FF47  00                 	db	0
   582   00FF48                     STR_7:
   583   00FF48  5A                 	db	90	;'Z'
   584   00FF49  6D                 	db	109	;'m'
   585   00FF4A  61                 	db	97	;'a'
   586   00FF4B  63                 	db	99	;'c'
   587   00FF4C  6B                 	db	107	;'k'
   588   00FF4D  6E                 	db	110	;'n'
   589   00FF4E  65                 	db	101	;'e'
   590   00FF4F  74                 	db	116	;'t'
   591   00FF50  65                 	db	101	;'e'
   592   00FF51  20                 	db	32
   593   00FF52  42                 	db	66	;'B'
   594   00FF53  54                 	db	84	;'T'
   595   00FF54  4E                 	db	78	;'N'
   596   00FF55  32                 	db	50	;'2'
   597   00FF56  20                 	db	32
   598   00FF57  20                 	db	32
   599   00FF58  00                 	db	0
   600   00FF59                     STR_21:
   601   00FF59  49                 	db	73	;'I'
   602   00FF5A  6D                 	db	109	;'m'
   603   00FF5B  70                 	db	112	;'p'
   604   00FF5C  6C                 	db	108	;'l'
   605   00FF5D  65                 	db	101	;'e'
   606   00FF5E  6D                 	db	109	;'m'
   607   00FF5F  65                 	db	101	;'e'
   608   00FF60  6E                 	db	110	;'n'
   609   00FF61  74                 	db	116	;'t'
   610   00FF62  6F                 	db	111	;'o'
   611   00FF63  76                 	db	118	;'v'
   612   00FF64  61                 	db	97	;'a'
   613   00FF65  6E                 	db	110	;'n'
   614   00FF66  6F                 	db	111	;'o'
   615   00FF67  20                 	db	32
   616   00FF68  20                 	db	32
   617   00FF69  00                 	db	0
   618   00FF6A                     STR_10:
   619   00FF6A  52                 	db	82	;'R'
   620   00FF6B  42                 	db	66	;'B'
   621   00FF6C  30                 	db	48	;'0'
   622   00FF6D  2D                 	db	45
   623   00FF6E  41                 	db	65	;'A'
   624   00FF6F  32                 	db	50	;'2'
   625   00FF70  2C                 	db	44
   626   00FF71  20                 	db	32
   627   00FF72  42                 	db	66	;'B'
   628   00FF73  52                 	db	82	;'R'
   629   00FF74  3A                 	db	58	;':'
   630   00FF75  31                 	db	49	;'1'
   631   00FF76  39                 	db	57	;'9'
   632   00FF77  32                 	db	50	;'2'
   633   00FF78  30                 	db	48	;'0'
   634   00FF79  30                 	db	48	;'0'
   635   00FF7A  00                 	db	0
   636   00FF7B                     STR_9:
   637   00FF7B  56                 	db	86	;'V'
   638   00FF7C  6F                 	db	111	;'o'
   639   00FF7D  6C                 	db	108	;'l'
   640   00FF7E  74                 	db	116	;'t'
   641   00FF7F  79                 	db	121	;'y'
   642   00FF80  20                 	db	32
   643   00FF81  6E                 	db	110	;'n'
   644   00FF82  61                 	db	97	;'a'
   645   00FF83  20                 	db	32
   646   00FF84  50                 	db	80	;'P'
   647   00FF85  4F                 	db	79	;'O'
   648   00FF86  54                 	db	84	;'T'
   649   00FF87  65                 	db	101	;'e'
   650   00FF88  63                 	db	99	;'c'
   651   00FF89  68                 	db	104	;'h'
   652   00FF8A  3A                 	db	58	;':'
   653   00FF8B  00                 	db	0
   654   00FF8C                     STR_6:
   655   00FF8C  4B                 	db	75	;'K'
   656   00FF8D  6F                 	db	111	;'o'
   657   00FF8E  6E                 	db	110	;'n'
   658   00FF8F  65                 	db	101	;'e'
   659   00FF90  63                 	db	99	;'c'
   660   00FF91  20                 	db	32
   661   00FF92  2D                 	db	45
   662   00FF93  20                 	db	32
   663   00FF94  6E                 	db	110	;'n'
   664   00FF95  65                 	db	101	;'e'
   665   00FF96  77                 	db	119	;'w'
   666   00FF97  20                 	db	32
   667   00FF98  6C                 	db	108	;'l'
   668   00FF99  69                 	db	105	;'i'
   669   00FF9A  6E                 	db	110	;'n'
   670   00FF9B  65                 	db	101	;'e'
   671   00FF9C  00                 	db	0
   672   00FF9D                     STR_11:
   673   00FF9D  31                 	db	49	;'1'
   674   00FF9E  3A                 	db	58	;':'
   675   00FF9F  74                 	db	116	;'t'
   676   00FFA0  72                 	db	114	;'r'
   677   00FFA1  2C                 	db	44
   678   00FFA2  32                 	db	50	;'2'
   679   00FFA3  3A                 	db	58	;':'
   680   00FFA4  73                 	db	115	;'s'
   681   00FFA5  69                 	db	105	;'i'
   682   00FFA6  6E                 	db	110	;'n'
   683   00FFA7  2C                 	db	44
   684   00FFA8  33                 	db	51	;'3'
   685   00FFA9  3A                 	db	58	;':'
   686   00FFAA  70                 	db	112	;'p'
   687   00FFAB  69                 	db	105	;'i'
   688   00FFAC  6C                 	db	108	;'l'
   689   00FFAD  00                 	db	0
   690   00FFAE                     STR_19:
   691   00FFAE  20                 	db	32
   692   00FFAF  20                 	db	32
   693   00FFB0  20                 	db	32
   694   00FFB1  20                 	db	32
   695   00FFB2  20                 	db	32
   696   00FFB3  20                 	db	32
   697   00FFB4  20                 	db	32
   698   00FFB5  20                 	db	32
   699   00FFB6  20                 	db	32
   700   00FFB7  20                 	db	32
   701   00FFB8  20                 	db	32
   702   00FFB9  50                 	db	80	;'P'
   703   00FFBA  6F                 	db	111	;'o'
   704   00FFBB  7A                 	db	122	;'z'
   705   00FFBC  6F                 	db	111	;'o'
   706   00FFBD  72                 	db	114	;'r'
   707   00FFBE  00                 	db	0
   708   00FFBF                     STR_46:
   709   00FFBF  28                 	db	40
   710   00FFC0  6E                 	db	110	;'n'
   711   00FFC1  75                 	db	117	;'u'
   712   00FFC2  6C                 	db	108	;'l'
   713   00FFC3  6C                 	db	108	;'l'
   714   00FFC4  29                 	db	41
   715   00FFC5  00                 	db	0
   716   00FFC6                     STR_29:
   717   00FFC6  4D                 	db	77	;'M'
   718   00FFC7  55                 	db	85	;'U'
   719   00FFC8  53                 	db	83	;'S'
   720   00FFC9  49                 	db	73	;'I'
   721   00FFCA  43                 	db	67	;'C'
   722   00FFCB  00                 	db	0
   723   00FFCC                     STR_31:
   724   00FFCC  3E                 	db	62	;'>'
   725   00FFCD  25                 	db	37
   726   00FFCE  2D                 	db	45
   727   00FFCF  2A                 	db	42
   728   00FFD0  73                 	db	115	;'s'
   729   00FFD1  00                 	db	0
   730   00FFD2                     STR_34:
   731   00FFD2  25                 	db	37
   732   00FFD3  73                 	db	115	;'s'
   733   00FFD4  20                 	db	32
   734   00FFD5  0A                 	db	10
   735   00FFD6  00                 	db	0
   736   00FFD7                     STR_28:
   737   00FFD7  47                 	db	71	;'G'
   738   00FFD8  41                 	db	65	;'A'
   739   00FFD9  4D                 	db	77	;'M'
   740   00FFDA  45                 	db	69	;'E'
   741   00FFDB  00                 	db	0
   742   00FFDC                     STR_23:
   743   00FFDC  47                 	db	71	;'G'
   744   00FFDD  50                 	db	80	;'P'
   745   00FFDE  49                 	db	73	;'I'
   746   00FFDF  4F                 	db	79	;'O'
   747   00FFE0  00                 	db	0
   748   00FFE1                     STR_24:
   749   00FFE1  55                 	db	85	;'U'
   750   00FFE2  41                 	db	65	;'A'
   751   00FFE3  52                 	db	82	;'R'
   752   00FFE4  54                 	db	84	;'T'
   753   00FFE5  00                 	db	0
   754   00FFE6                     STR_22:
   755   00FFE6  25                 	db	37
   756   00FFE7  64                 	db	100	;'d'
   757   00FFE8  20                 	db	32
   758   00FFE9  0D                 	db	13
   759   00FFEA  00                 	db	0
   760   00FFEB                     STR_40:
   761   00FFEB  69                 	db	105	;'i'
   762   00FFEC  6E                 	db	110	;'n'
   763   00FFED  66                 	db	102	;'f'
   764   00FFEE  00                 	db	0
   765   00FFEF                     STR_43:
   766   00FFEF  6E                 	db	110	;'n'
   767   00FFF0  61                 	db	97	;'a'
   768   00FFF1  6E                 	db	110	;'n'
   769   00FFF2  00                 	db	0
   770   00FFF3                     STR_27:
   771   00FFF3  44                 	db	68	;'D'
   772   00FFF4  41                 	db	65	;'A'
   773   00FFF5  43                 	db	67	;'C'
   774   00FFF6  00                 	db	0
   775   00FFF7                     STR_26:
   776   00FFF7  41                 	db	65	;'A'
   777   00FFF8  44                 	db	68	;'D'
   778   00FFF9  43                 	db	67	;'C'
   779   00FFFA  00                 	db	0
   780   00FFFB                     STR_25:
   781   00FFFB  50                 	db	80	;'P'
   782   00FFFC  57                 	db	87	;'W'
   783   00FFFD  4D                 	db	77	;'M'
   784   00FFFE  00                 	db	0
   785   00FFFF  00                 	db	0	; dummy byte at the end
   786   000000                     
   787                           ; #config settings
   788                           
   789                           	psect	cinit
   790   004F14                     __pcinit:
   791                           	callstack 0
   792   004F14                     start_initialization:
   793                           	callstack 0
   794   004F14                     __initialization:
   795                           	callstack 0
   796                           
   797                           ; Initialize objects allocated to BANK1 (40 bytes)
   798                           ; load TBLPTR registers with __pidataBANK1
   799   004F14  0E58               	movlw	low __pidataBANK1
   800   004F16  6EF6               	movwf	tblptrl,c
   801   004F18  0E52               	movlw	high __pidataBANK1
   802   004F1A  6EF7               	movwf	tblptrh,c
   803   004F1C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   804   004F1E  6EF8               	movwf	tblptru,c
   805   004F20  EE01  F0CE         	lfsr	0,__pdataBANK1
   806   004F24  EE10 F028          	lfsr	1,40
   807   004F28                     copy_data0:
   808   004F28  0009               	tblrd		*+
   809   004F2A  CFF5 FFEE          	movff	tablat,postinc0
   810   004F2E  50E5               	movf	postdec1,w,c
   811   004F30  50E1               	movf	fsr1l,w,c
   812   004F32  E1FA               	bnz	copy_data0
   813                           
   814                           ; Clear objects allocated to BANK2 (42 bytes)
   815   004F34  EE02  F000         	lfsr	0,__pbssBANK2
   816   004F38  0E2A               	movlw	42
   817   004F3A                     clear_0:
   818   004F3A  6AEE               	clrf	postinc0,c
   819   004F3C  06E8               	decf	wreg,f,c
   820   004F3E  E1FD               	bnz	clear_0
   821                           
   822                           ; Clear objects allocated to BANK1 (155 bytes)
   823   004F40  EE01  F000         	lfsr	0,__pbssBANK1
   824   004F44  0E9B               	movlw	155
   825   004F46                     clear_1:
   826   004F46  6AEE               	clrf	postinc0,c
   827   004F48  06E8               	decf	wreg,f,c
   828   004F4A  E1FD               	bnz	clear_1
   829                           
   830                           ; Clear objects allocated to BANK0 (1 bytes)
   831   004F4C  0100               	movlb	0
   832   004F4E  6BFE               	clrf	__pbssBANK0& (0+255),b
   833                           
   834                           ; Clear objects allocated to COMRAM (5 bytes)
   835   004F50  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   836   004F52  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   837   004F54  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   838   004F56  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   839   004F58  6A55               	clrf	__pbssCOMRAM& (0+255),c
   840   004F5A                     end_of_initialization:
   841                           	callstack 0
   842   004F5A                     __end_of__initialization:
   843                           	callstack 0
   844   004F5A  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   845   004F5C  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   846   004F5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   847   004F60  6EF8               	movwf	tblptru,c
   848   004F62  0100               	movlb	0
   849   004F64  EF4A  F011         	goto	_main	;jump to C main() function
   850                           
   851                           	psect	bssCOMRAM
   852   000055                     __pbssCOMRAM:
   853                           	callstack 0
   854   000055                     _width:
   855                           	callstack 0
   856   000055                     	ds	2
   857   000057                     _prec:
   858                           	callstack 0
   859   000057                     	ds	2
   860   000059                     _flags:
   861                           	callstack 0
   862   000059                     	ds	1
   863                           
   864                           	psect	bssBANK0
   865   0000FE                     __pbssBANK0:
   866                           	callstack 0
   867   0000FE                     _keepStateGPIO:
   868                           	callstack 0
   869   0000FE                     	ds	1
   870                           
   871                           	psect	bssBANK1
   872   000100                     __pbssBANK1:
   873                           	callstack 0
   874   000100                     	ds	17
   875   000111                     fabsf@F465:
   876                           	callstack 0
   877   000111                     	ds	4
   878   000115                     ___rem_pio2f@F526:
   879                           	callstack 0
   880   000115                     	ds	4
   881   000119                     floorf@F521:
   882                           	callstack 0
   883   000119                     	ds	4
   884   00011D                     ___fpclassifyf@F465:
   885                           	callstack 0
   886   00011D                     	ds	4
   887   000121                     ISR@i:
   888                           	callstack 0
   889   000121                     	ds	2
   890   000123                     _GAMEtime:
   891                           	callstack 0
   892   000123                     	ds	1
   893   000124                     _GAMEIE:
   894                           	callstack 0
   895   000124                     	ds	1
   896   000125                     _UARTIE:
   897                           	callstack 0
   898   000125                     	ds	1
   899   000126                     _GPIOIE:
   900                           	callstack 0
   901   000126                     	ds	1
   902   000127                     _dbuf:
   903                           	callstack 0
   904   000127                     	ds	80
   905   000177                     _gmail:
   906                           	callstack 0
   907   000177                     	ds	32
   908   000197                     _seed:
   909                           	callstack 0
   910   000197                     	ds	4
   911                           
   912                           	psect	dataBANK1
   913   0001CE                     __pdataBANK1:
   914                           	callstack 0
   915   0001CE                     moveDisplay@F6965:
   916                           	callstack 0
   917   0001CE                     	ds	16
   918   0001DE                     runGPIO@F6993:
   919                           	callstack 0
   920   0001DE                     	ds	12
   921   0001EA                     runGPIO@F6975:
   922                           	callstack 0
   923   0001EA                     	ds	12
   924                           
   925                           	psect	bssBANK2
   926   000200                     __pbssBANK2:
   927                           	callstack 0
   928   000200                     	ds	25
   929   000219                     	ds	17
   930                           
   931                           	psect	cstackBANK1
   932   00019B                     __pcstackBANK1:
   933                           	callstack 0
   934   00019B                     moveDisplay@menuItem1:
   935                           	callstack 0
   936   00019B                     runADC@text:
   937                           	callstack 0
   938   00019B                     runGAME@text:
   939                           	callstack 0
   940                           
   941                           ; 17 bytes @ 0x0
   942   00019B                     	ds	17
   943   0001AC                     runADC@voltage1:
   944                           	callstack 0
   945   0001AC                     moveDisplay@menuItem2:
   946                           	callstack 0
   947   0001AC                     runGAME@approxText:
   948                           	callstack 0
   949                           
   950                           ; 25 bytes @ 0x11
   951   0001AC                     	ds	4
   952   0001B0                     runADC@voltage2:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x15
   956   0001B0                     	ds	4
   957   0001B4                     runADC@pot1:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x19
   961   0001B4                     	ds	2
   962   0001B6                     runADC@pot2:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x1B
   966   0001B6                     	ds	2
   967   0001B8                     runADC@keepState:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x1D
   971   0001B8                     	ds	5
   972   0001BD                     moveDisplay@menuItems:
   973                           	callstack 0
   974                           
   975                           ; 16 bytes @ 0x22
   976   0001BD                     	ds	8
   977   0001C5                     runGAME@keepStateGAME:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x2A
   981   0001C5                     	ds	1
   982   0001C6                     runGAME@GAMEpart:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x2B
   986   0001C6                     	ds	1
   987   0001C7                     runGAME@GAMEround:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x2C
   991   0001C7                     	ds	1
   992   0001C8                     runGAME@GAMEdivider:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x2D
   996   0001C8                     	ds	1
   997   0001C9                     runGAME@pot1:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x2E
  1001   0001C9                     	ds	2
  1002   0001CB                     runGAME@randomNumber:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x30
  1006   0001CB                     	ds	2
  1007   0001CD                     moveDisplay@menuI:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x32
  1011   0001CD                     	ds	1
  1012                           
  1013                           	psect	cstackBANK0
  1014   000060                     __pcstackBANK0:
  1015                           	callstack 0
  1016   000060                     ___fladd@signs:
  1017                           	callstack 0
  1018   000060                     floorf@m:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022   000060                     	ds	1
  1023   000061                     ___fladd@aexp:
  1024                           	callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x1
  1027   000061                     	ds	1
  1028   000062                     ___fladd@bexp:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x2
  1032   000062                     	ds	1
  1033   000063                     ___fladd@grs:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x3
  1037   000063                     	ds	1
  1038   000064                     ?___flsub:
  1039                           	callstack 0
  1040   000064                     ?___sindf:
  1041                           	callstack 0
  1042   000064                     ?___cosdf:
  1043                           	callstack 0
  1044   000064                     ?___fltol:
  1045                           	callstack 0
  1046   000064                     floorf@e:
  1047                           	callstack 0
  1048   000064                     ___fltol@f1:
  1049                           	callstack 0
  1050   000064                     ___flsub@b:
  1051                           	callstack 0
  1052   000064                     ___cosdf@x:
  1053                           	callstack 0
  1054   000064                     ___sindf@x:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x4
  1058   000064                     	ds	2
  1059   000066                     floorf@u:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063   000066                     	ds	2
  1064   000068                     ??___fltol:
  1065   000068                     ___flsub@a:
  1066                           	callstack 0
  1067   000068                     ___cosdf@r:
  1068                           	callstack 0
  1069   000068                     ___sindf@r:
  1070                           	callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x8
  1073   000068                     	ds	4
  1074   00006C                     ___sindf@w:
  1075                           	callstack 0
  1076   00006C                     ___cosdf$4534:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0xC
  1080   00006C                     	ds	4
  1081   000070                     ___cosdf$4535:
  1082                           	callstack 0
  1083   000070                     ___sindf$4538:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x10
  1087   000070                     	ds	4
  1088   000074                     ___cosdf$4536:
  1089                           	callstack 0
  1090   000074                     ___sindf$4539:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x14
  1094   000074                     	ds	4
  1095   000078                     ___cosdf@w:
  1096                           	callstack 0
  1097   000078                     ___sindf$4540:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x18
  1101   000078                     	ds	4
  1102   00007C                     ___cosdf@z:
  1103                           	callstack 0
  1104   00007C                     ___sindf@s:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x1C
  1108   00007C                     	ds	4
  1109   000080                     ?___flneg:
  1110                           	callstack 0
  1111   000080                     ___flneg@f1:
  1112                           	callstack 0
  1113   000080                     ___sindf@z:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x20
  1117   000080                     	ds	4
  1118   000084                     ?___rem_pio2f:
  1119                           	callstack 0
  1120   000084                     efgtoa@fp:
  1121                           	callstack 0
  1122   000084                     ___rem_pio2f@x:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x24
  1126   000084                     	ds	2
  1127   000086                     efgtoa@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x26
  1131   000086                     	ds	2
  1132   000088                     ___rem_pio2f@y:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x28
  1136   000088                     	ds	1
  1137   000089                     ??___rem_pio2f:
  1138                           
  1139                           ; 1 bytes @ 0x29
  1140   000089                     	ds	1
  1141   00008A                     efgtoa@c:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x2A
  1145   00008A                     	ds	1
  1146   00008B                     ??_efgtoa:
  1147   00008B                     ___rem_pio2f@ty:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x2B
  1151   00008B                     	ds	2
  1152   00008D                     efgtoa@ne:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x2D
  1156   00008D                     	ds	2
  1157   00008F                     efgtoa@p:
  1158                           	callstack 0
  1159   00008F                     ___rem_pio2f$4537:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x2F
  1163   00008F                     	ds	2
  1164   000091                     efgtoa@t:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x31
  1168   000091                     	ds	2
  1169   000093                     ___rem_pio2f@sign:
  1170                           	callstack 0
  1171   000093                     _efgtoa$4074:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x33
  1175   000093                     	ds	1
  1176   000094                     ___rem_pio2f@ux:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x34
  1180   000094                     	ds	1
  1181   000095                     efgtoa@pp:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x35
  1185   000095                     	ds	1
  1186   000096                     efgtoa@mode:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x36
  1190   000096                     	ds	1
  1191   000097                     efgtoa@nmode:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x37
  1195   000097                     	ds	1
  1196   000098                     efgtoa@d:
  1197                           	callstack 0
  1198   000098                     ___rem_pio2f@fn:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x38
  1202   000098                     	ds	2
  1203   00009A                     efgtoa@m:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x3A
  1207   00009A                     	ds	2
  1208   00009C                     efgtoa@e:
  1209                           	callstack 0
  1210   00009C                     ___rem_pio2f@t:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x3C
  1214   00009C                     	ds	2
  1215   00009E                     efgtoa@w:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x3E
  1219   00009E                     	ds	2
  1220   0000A0                     efgtoa@ou:
  1221                           	callstack 0
  1222   0000A0                     ___rem_pio2f@n:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x40
  1226   0000A0                     	ds	4
  1227   0000A4                     ?_sinf:
  1228                           	callstack 0
  1229   0000A4                     efgtoa@i:
  1230                           	callstack 0
  1231   0000A4                     sinf@x:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x44
  1235   0000A4                     	ds	2
  1236   0000A6                     efgtoa@h:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x46
  1240   0000A6                     	ds	2
  1241   0000A8                     _sinf$4249:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x48
  1245   0000A8                     	ds	2
  1246   0000AA                     efgtoa@l:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x4A
  1250   0000AA                     	ds	2
  1251   0000AC                     _sinf$4250:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x4C
  1255   0000AC                     	ds	2
  1256   0000AE                     efgtoa@sign:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x4E
  1260   0000AE                     	ds	1
  1261   0000AF                     efgtoa@g:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x4F
  1265   0000AF                     	ds	1
  1266   0000B0                     sinf@n:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x50
  1270   0000B0                     	ds	1
  1271   0000B1                     sinf@sign:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x51
  1275   0000B1                     	ds	1
  1276   0000B2                     _sinf$4533:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x52
  1280   0000B2                     	ds	1
  1281   0000B3                     efgtoa@n:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x53
  1285   0000B3                     	ds	2
  1286   0000B5                     efgtoa@u:
  1287                           	callstack 0
  1288                           
  1289                           ; 4 bytes @ 0x55
  1290   0000B5                     	ds	1
  1291   0000B6                     sinf@y:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x56
  1295   0000B6                     	ds	3
  1296   0000B9                     vfpfcnvrt@fp:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x59
  1300   0000B9                     	ds	1
  1301   0000BA                     sinf@ux:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x5A
  1305   0000BA                     	ds	1
  1306   0000BB                     vfpfcnvrt@fmt:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x5B
  1310   0000BB                     	ds	1
  1311   0000BC                     vfpfcnvrt@ap:
  1312                           	callstack 0
  1313                           
  1314                           ; 1 bytes @ 0x5C
  1315   0000BC                     	ds	1
  1316   0000BD                     ??_vfpfcnvrt:
  1317                           
  1318                           ; 1 bytes @ 0x5D
  1319   0000BD                     	ds	2
  1320   0000BF                     vfpfcnvrt@done:
  1321                           	callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x5F
  1324   0000BF                     	ds	1
  1325   0000C0                     vfpfcnvrt@convarg:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x60
  1329   0000C0                     	ds	4
  1330   0000C4                     vfpfcnvrt@c:
  1331                           	callstack 0
  1332                           
  1333                           ; 1 bytes @ 0x64
  1334   0000C4                     	ds	1
  1335   0000C5                     vfpfcnvrt@cp:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x65
  1339   0000C5                     	ds	2
  1340   0000C7                     ?_vfprintf:
  1341                           	callstack 0
  1342   0000C7                     vfprintf@fp:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x67
  1346   0000C7                     	ds	2
  1347   0000C9                     vfprintf@fmt:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x69
  1351   0000C9                     	ds	2
  1352   0000CB                     vfprintf@ap:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x6B
  1356   0000CB                     	ds	1
  1357   0000CC                     vfprintf@cfmt:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x6C
  1361   0000CC                     	ds	2
  1362   0000CE                     ?_printf:
  1363                           	callstack 0
  1364   0000CE                     ?_sprintf:
  1365                           	callstack 0
  1366   0000CE                     sprintf@s:
  1367                           	callstack 0
  1368   0000CE                     printf@fmt:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x6E
  1372   0000CE                     	ds	2
  1373   0000D0                     sprintf@fmt:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x70
  1377   0000D0                     	ds	2
  1378   0000D2                     ??_runUART:
  1379   0000D2                     ??_runDAC:
  1380                           
  1381                           ; 1 bytes @ 0x72
  1382   0000D2                     	ds	1
  1383   0000D3                     _runDAC$4530:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x73
  1387   0000D3                     	ds	1
  1388   0000D4                     runUART@reversed:
  1389                           	callstack 0
  1390                           
  1391                           ; 31 bytes @ 0x74
  1392   0000D4                     	ds	3
  1393   0000D7                     _runDAC$4531:
  1394                           	callstack 0
  1395                           
  1396                           ; 4 bytes @ 0x77
  1397   0000D7                     	ds	3
  1398   0000DA                     sprintf@ap:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x7A
  1402   0000DA                     	ds	1
  1403   0000DB                     runDAC@keepState:
  1404                           	callstack 0
  1405   0000DB                     sprintf@f:
  1406                           	callstack 0
  1407                           
  1408                           ; 12 bytes @ 0x7B
  1409   0000DB                     	ds	1
  1410   0000DC                     runDAC@selectModeDAC:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x7C
  1414   0000DC                     	ds	1
  1415   0000DD                     runDAC@DACindex:
  1416                           	callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x7D
  1419   0000DD                     	ds	10
  1420   0000E7                     ??_runADC:
  1421   0000E7                     ??_runGAME:
  1422   0000E7                     moveDisplay@where:
  1423                           	callstack 0
  1424                           
  1425                           ; 1 bytes @ 0x87
  1426   0000E7                     	ds	1
  1427   0000E8                     ??_moveDisplay:
  1428                           
  1429                           ; 1 bytes @ 0x88
  1430   0000E8                     	ds	11
  1431   0000F3                     runUART@keepState:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x93
  1435   0000F3                     	ds	1
  1436   0000F4                     runUART@len:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x94
  1440   0000F4                     	ds	2
  1441   0000F6                     runUART@i:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x96
  1445   0000F6                     	ds	2
  1446   0000F8                     runUART@p:
  1447                           	callstack 0
  1448                           
  1449                           ; 2 bytes @ 0x98
  1450   0000F8                     	ds	2
  1451   0000FA                     ??_main:
  1452                           
  1453                           ; 1 bytes @ 0x9A
  1454   0000FA                     	ds	2
  1455   0000FC                     main@setUpAgain:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x9C
  1459   0000FC                     	ds	1
  1460   0000FD                     main@menuI:
  1461                           	callstack 0
  1462                           
  1463                           ; 1 bytes @ 0x9D
  1464   0000FD                     	ds	1
  1465                           
  1466                           	psect	cstackCOMRAM
  1467   000001                     __pcstackCOMRAM:
  1468                           	callstack 0
  1469   000001                     ??_ISR:
  1470                           
  1471                           ; 1 bytes @ 0x0
  1472   000001                     	ds	4
  1473   000005                     ISR@temp:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x4
  1477   000005                     	ds	1
  1478   000006                     ?_strlen:
  1479                           	callstack 0
  1480   000006                     ?___fpclassifyf:
  1481                           	callstack 0
  1482   000006                     ?___wmul:
  1483                           	callstack 0
  1484   000006                     ?___awmod:
  1485                           	callstack 0
  1486   000006                     ?___lwdiv:
  1487                           	callstack 0
  1488   000006                     ?___lwmod:
  1489                           	callstack 0
  1490   000006                     ?_labs:
  1491                           	callstack 0
  1492   000006                     ?_fabsf:
  1493                           	callstack 0
  1494   000006                     ?___lmul:
  1495                           	callstack 0
  1496   000006                     ?___xxtofl:
  1497                           	callstack 0
  1498   000006                     LCD_Send@data:
  1499                           	callstack 0
  1500   000006                     SPI_write@MSB:
  1501                           	callstack 0
  1502   000006                     putch@data:
  1503                           	callstack 0
  1504   000006                     LED1_Control@state:
  1505                           	callstack 0
  1506   000006                     LED2_Control@state:
  1507                           	callstack 0
  1508   000006                     LED3_Control@state:
  1509                           	callstack 0
  1510   000006                     LED4_Control@state:
  1511                           	callstack 0
  1512   000006                     LED5_Control@state:
  1513                           	callstack 0
  1514   000006                     LED6_Control@state:
  1515                           	callstack 0
  1516   000006                     ___lbdiv@divisor:
  1517                           	callstack 0
  1518   000006                     ___wmul@multiplier:
  1519                           	callstack 0
  1520   000006                     ___awmod@dividend:
  1521                           	callstack 0
  1522   000006                     ___lwdiv@dividend:
  1523                           	callstack 0
  1524   000006                     ___lwmod@dividend:
  1525                           	callstack 0
  1526   000006                     memcpy@d1:
  1527                           	callstack 0
  1528   000006                     strcpy@dest:
  1529                           	callstack 0
  1530   000006                     strlen@s:
  1531                           	callstack 0
  1532   000006                     ___lmul@multiplier:
  1533                           	callstack 0
  1534   000006                     ___fleq@ff1:
  1535                           	callstack 0
  1536   000006                     ___xxtofl@val:
  1537                           	callstack 0
  1538   000006                     ___fpclassifyf@x:
  1539                           	callstack 0
  1540   000006                     labs@a:
  1541                           	callstack 0
  1542   000006                     fabsf@x:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x5
  1546   000006                     	ds	1
  1547   000007                     ??_LCD_Init:
  1548   000007                     ??_runGPIO:
  1549   000007                     SPI_write@LSB:
  1550                           	callstack 0
  1551   000007                     ___lbdiv@dividend:
  1552                           	callstack 0
  1553   000007                     LCD_ShowString@textData:
  1554                           	callstack 0
  1555   000007                     fputc@c:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x6
  1559   000007                     	ds	1
  1560   000008                     SPI_write@data:
  1561                           	callstack 0
  1562   000008                     ___lbdiv@counter:
  1563                           	callstack 0
  1564   000008                     ___wmul@multiplicand:
  1565                           	callstack 0
  1566   000008                     ___awmod@divisor:
  1567                           	callstack 0
  1568   000008                     ___lwdiv@divisor:
  1569                           	callstack 0
  1570   000008                     ___lwmod@divisor:
  1571                           	callstack 0
  1572   000008                     memcpy@s1:
  1573                           	callstack 0
  1574   000008                     strcpy@src:
  1575                           	callstack 0
  1576   000008                     strlen@a:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x7
  1580   000008                     	ds	1
  1581   000009                     ??_LCD_ShowString:
  1582   000009                     ___lbdiv@quotient:
  1583                           	callstack 0
  1584   000009                     fputc@fp:
  1585                           	callstack 0
  1586   000009                     runGPIO@states:
  1587                           	callstack 0
  1588                           
  1589                           ; 12 bytes @ 0x8
  1590   000009                     	ds	1
  1591   00000A                     ??___fpclassifyf:
  1592   00000A                     ??_labs:
  1593   00000A                     ??___xxtofl:
  1594   00000A                     ___awmod@counter:
  1595                           	callstack 0
  1596   00000A                     ___lwdiv@counter:
  1597                           	callstack 0
  1598   00000A                     ___lwmod@counter:
  1599                           	callstack 0
  1600   00000A                     ___wmul@product:
  1601                           	callstack 0
  1602   00000A                     memcpy@n:
  1603                           	callstack 0
  1604   00000A                     strcpy@d:
  1605                           	callstack 0
  1606   00000A                     ___lmul@multiplicand:
  1607                           	callstack 0
  1608   00000A                     ___fleq@ff2:
  1609                           	callstack 0
  1610   00000A                     fabsf@u:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x9
  1614   00000A                     	ds	1
  1615   00000B                     ??_fputc:
  1616   00000B                     LCD_ShowString@lineNum:
  1617                           	callstack 0
  1618   00000B                     ___awmod@sign:
  1619                           	callstack 0
  1620   00000B                     ___lwdiv@quotient:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0xA
  1624   00000B                     	ds	1
  1625   00000C                     ?_abs:
  1626                           	callstack 0
  1627   00000C                     ?_read_prec_or_width:
  1628                           	callstack 0
  1629   00000C                     LCD_ShowString@i:
  1630                           	callstack 0
  1631   00000C                     read_prec_or_width@fmt:
  1632                           	callstack 0
  1633   00000C                     memcpy@tmp:
  1634                           	callstack 0
  1635   00000C                     abs@a:
  1636                           	callstack 0
  1637                           
  1638                           ; 2 bytes @ 0xB
  1639   00000C                     	ds	1
  1640   00000D                     read_prec_or_width@ap:
  1641                           	callstack 0
  1642   00000D                     memcpy@d:
  1643                           	callstack 0
  1644                           
  1645                           ; 2 bytes @ 0xC
  1646   00000D                     	ds	1
  1647   00000E                     ??_abs:
  1648   00000E                     ??___fleq:
  1649   00000E                     ___xxtofl@sign:
  1650                           	callstack 0
  1651   00000E                     read_prec_or_width@c:
  1652                           	callstack 0
  1653   00000E                     ___fpclassifyf@e:
  1654                           	callstack 0
  1655   00000E                     ___lmul@product:
  1656                           	callstack 0
  1657                           
  1658                           ; 4 bytes @ 0xD
  1659   00000E                     	ds	1
  1660   00000F                     ___xxtofl@exp:
  1661                           	callstack 0
  1662   00000F                     read_prec_or_width@n:
  1663                           	callstack 0
  1664   00000F                     memcpy@s:
  1665                           	callstack 0
  1666                           
  1667                           ; 2 bytes @ 0xE
  1668   00000F                     	ds	1
  1669   000010                     stoa@fp:
  1670                           	callstack 0
  1671   000010                     fputs@s:
  1672                           	callstack 0
  1673   000010                     ___xxtofl@arg:
  1674                           	callstack 0
  1675   000010                     ___fpclassifyf@u:
  1676                           	callstack 0
  1677                           
  1678                           ; 4 bytes @ 0xF
  1679   000010                     	ds	2
  1680   000012                     ?_rand:
  1681                           	callstack 0
  1682   000012                     stoa@s:
  1683                           	callstack 0
  1684   000012                     fputs@fp:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x11
  1688   000012                     	ds	2
  1689   000014                     ??_rand:
  1690   000014                     ??_stoa:
  1691   000014                     ?___flmul:
  1692                           	callstack 0
  1693   000014                     fputs@c:
  1694                           	callstack 0
  1695   000014                     ___flmul@b:
  1696                           	callstack 0
  1697                           
  1698                           ; 4 bytes @ 0x13
  1699   000014                     	ds	1
  1700   000015                     fputs@i:
  1701                           	callstack 0
  1702   000015                     runGPIO@LEDControl:
  1703                           	callstack 0
  1704                           
  1705                           ; 12 bytes @ 0x14
  1706   000015                     	ds	1
  1707   000016                     stoa@p:
  1708                           	callstack 0
  1709                           
  1710                           ; 2 bytes @ 0x15
  1711   000016                     	ds	1
  1712   000017                     pad@fp:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x16
  1716   000017                     	ds	1
  1717   000018                     ?___awdiv:
  1718                           	callstack 0
  1719   000018                     ___awdiv@dividend:
  1720                           	callstack 0
  1721   000018                     stoa@w:
  1722                           	callstack 0
  1723   000018                     ___flmul@a:
  1724                           	callstack 0
  1725                           
  1726                           ; 4 bytes @ 0x17
  1727   000018                     	ds	1
  1728   000019                     pad@buf:
  1729                           	callstack 0
  1730                           
  1731                           ; 2 bytes @ 0x18
  1732   000019                     	ds	1
  1733   00001A                     ___awdiv@divisor:
  1734                           	callstack 0
  1735   00001A                     stoa@cp:
  1736                           	callstack 0
  1737                           
  1738                           ; 2 bytes @ 0x19
  1739   00001A                     	ds	1
  1740   00001B                     pad@p:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x1A
  1744   00001B                     	ds	1
  1745   00001C                     ??___flmul:
  1746   00001C                     ___awdiv@counter:
  1747                           	callstack 0
  1748   00001C                     stoa@l:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x1B
  1752   00001C                     	ds	1
  1753   00001D                     ??_pad:
  1754   00001D                     ___awdiv@sign:
  1755                           	callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x1C
  1758   00001D                     	ds	1
  1759   00001E                     ___awdiv@quotient:
  1760                           	callstack 0
  1761   00001E                     pad@i:
  1762                           	callstack 0
  1763                           
  1764                           ; 2 bytes @ 0x1D
  1765   00001E                     	ds	2
  1766   000020                     ??_runPWM:
  1767   000020                     ___flmul@sign:
  1768                           	callstack 0
  1769   000020                     dtoa@fp:
  1770                           	callstack 0
  1771   000020                     utoa@fp:
  1772                           	callstack 0
  1773                           
  1774                           ; 2 bytes @ 0x1F
  1775   000020                     	ds	1
  1776   000021                     ___flmul@aexp:
  1777                           	callstack 0
  1778   000021                     runGPIO@numberOfStates:
  1779                           	callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x20
  1782   000021                     	ds	1
  1783   000022                     runPWM@keepState:
  1784                           	callstack 0
  1785   000022                     dtoa@d:
  1786                           	callstack 0
  1787   000022                     utoa@d:
  1788                           	callstack 0
  1789   000022                     ___flmul@grs:
  1790                           	callstack 0
  1791                           
  1792                           ; 4 bytes @ 0x21
  1793   000022                     	ds	1
  1794   000023                     runGPIO@GPIOi:
  1795                           	callstack 0
  1796   000023                     runPWM@multiplier:
  1797                           	callstack 0
  1798                           
  1799                           ; 1 bytes @ 0x22
  1800   000023                     	ds	1
  1801   000024                     runGPIO@j:
  1802                           	callstack 0
  1803   000024                     _dtoa$4043:
  1804                           	callstack 0
  1805   000024                     utoa@w:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x23
  1809   000024                     	ds	2
  1810   000026                     ___flmul@bexp:
  1811                           	callstack 0
  1812   000026                     dtoa@w:
  1813                           	callstack 0
  1814   000026                     utoa@p:
  1815                           	callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x25
  1818   000026                     	ds	1
  1819   000027                     ___flmul@prod:
  1820                           	callstack 0
  1821                           
  1822                           ; 4 bytes @ 0x26
  1823   000027                     	ds	1
  1824   000028                     dtoa@p:
  1825                           	callstack 0
  1826   000028                     utoa@i:
  1827                           	callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x27
  1830   000028                     	ds	2
  1831   00002A                     dtoa@s:
  1832                           	callstack 0
  1833                           
  1834                           ; 1 bytes @ 0x29
  1835   00002A                     	ds	1
  1836   00002B                     ___flmul@temp:
  1837                           	callstack 0
  1838   00002B                     dtoa@i:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x2A
  1842   00002B                     	ds	2
  1843   00002D                     ?___fldiv:
  1844                           	callstack 0
  1845   00002D                     ___flge@ff1:
  1846                           	callstack 0
  1847   00002D                     ___fldiv@b:
  1848                           	callstack 0
  1849                           
  1850                           ; 4 bytes @ 0x2C
  1851   00002D                     	ds	4
  1852   000031                     ___flge@ff2:
  1853                           	callstack 0
  1854   000031                     ___fldiv@a:
  1855                           	callstack 0
  1856                           
  1857                           ; 4 bytes @ 0x30
  1858   000031                     	ds	4
  1859   000035                     ??___fldiv:
  1860   000035                     ??___flge:
  1861                           
  1862                           ; 1 bytes @ 0x34
  1863   000035                     	ds	4
  1864   000039                     ___fldiv@rem:
  1865                           	callstack 0
  1866                           
  1867                           ; 4 bytes @ 0x38
  1868   000039                     	ds	4
  1869   00003D                     ___fldiv@sign:
  1870                           	callstack 0
  1871                           
  1872                           ; 1 bytes @ 0x3C
  1873   00003D                     	ds	1
  1874   00003E                     ___fldiv@new_exp:
  1875                           	callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x3D
  1878   00003E                     	ds	2
  1879   000040                     ___fldiv@grs:
  1880                           	callstack 0
  1881                           
  1882                           ; 4 bytes @ 0x3F
  1883   000040                     	ds	4
  1884   000044                     ___fldiv@bexp:
  1885                           	callstack 0
  1886                           
  1887                           ; 1 bytes @ 0x43
  1888   000044                     	ds	1
  1889   000045                     ___fldiv@aexp:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x44
  1893   000045                     	ds	1
  1894   000046                     ?___fladd:
  1895                           	callstack 0
  1896   000046                     ?_floorf:
  1897                           	callstack 0
  1898   000046                     ___fladd@b:
  1899                           	callstack 0
  1900   000046                     floorf@x:
  1901                           	callstack 0
  1902                           
  1903                           ; 4 bytes @ 0x45
  1904   000046                     	ds	4
  1905   00004A                     ??_floorf:
  1906   00004A                     ___fladd@a:
  1907                           	callstack 0
  1908                           
  1909                           ; 4 bytes @ 0x49
  1910   00004A                     	ds	4
  1911   00004E                     ??___fladd:
  1912                           
  1913                           ; 1 bytes @ 0x4D
  1914   00004E                     	ds	4
  1915   000052                     ___fltol@sign1:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x51
  1919   000052                     	ds	1
  1920   000053                     ___fltol@exp1:
  1921                           	callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x52
  1924   000053                     	ds	1
  1925   000054                     printf@ap:
  1926                           	callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x53
  1929   000054                     	ds	1
  1930                           
  1931 ;;
  1932 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1933 ;;
  1934 ;; *************** function _main *****************
  1935 ;; Defined at:
  1936 ;;		line 10 in file "main.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  menuI           1  157[BANK0 ] unsigned char 
  1941 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels required when called: 10
  1957 ;; This function calls:
  1958 ;;		_LCD_Init
  1959 ;;		_LCD_ShowString
  1960 ;;		_moveDisplay
  1961 ;;		_runADC
  1962 ;;		_runDAC
  1963 ;;		_runGAME
  1964 ;;		_runGPIO
  1965 ;;		_runMUSIC
  1966 ;;		_runPWM
  1967 ;;		_runUART
  1968 ;; This function is called by:
  1969 ;;		Startup code after reset
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text0
  1974   002294                     __ptext0:
  1975                           	callstack 0
  1976   002294                     _main:
  1977                           	callstack 21
  1978   002294                     
  1979                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1980   002294  0E05               	movlw	5
  1981   002296  0100               	movlb	0	; () banked
  1982   002298  6FFB               	movwf	(??_main+1)& (0+255),b
  1983   00229A  0E0F               	movlw	15
  1984   00229C  6FFA               	movwf	??_main& (0+255),b
  1985   00229E  0EF1               	movlw	241
  1986   0022A0                     u10357:
  1987   0022A0  2EE8               	decfsz	wreg,f,c
  1988   0022A2  D7FE               	bra	u10357
  1989   0022A4  2FFA               	decfsz	??_main& (0+255),f,b
  1990   0022A6  D7FC               	bra	u10357
  1991   0022A8  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1992   0022AA  D7FA               	bra	u10357
  1993   0022AC                     
  1994                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1995   0022AC  8094               	bsf	148,0,c	;volatile
  1996   0022AE                     
  1997                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1998   0022AE  8892               	bsf	146,4,c	;volatile
  1999   0022B0                     
  2000                           ;main.c: 15:     TRISAbits.RA3 = 1;
  2001   0022B0  8692               	bsf	146,3,c	;volatile
  2002   0022B2                     
  2003                           ;main.c: 16:     TRISAbits.RA2 = 1;
  2004   0022B2  8492               	bsf	146,2,c	;volatile
  2005   0022B4                     
  2006                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  2007   0022B4  010F               	movlb	15	; () banked
  2008   0022B6  9738               	bcf	56,3,b	;volatile
  2009   0022B8                     
  2010                           ; BSR set to: 15
  2011                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  2012   0022B8  9538               	bcf	56,2,b	;volatile
  2013   0022BA                     
  2014                           ; BSR set to: 15
  2015                           ;main.c: 21:     TRISDbits.RD2 = 0;
  2016   0022BA  9495               	bcf	149,2,c	;volatile
  2017   0022BC                     
  2018                           ; BSR set to: 15
  2019                           ;main.c: 22:     TRISDbits.RD3 = 0;
  2020   0022BC  9695               	bcf	149,3,c	;volatile
  2021   0022BE                     
  2022                           ; BSR set to: 15
  2023                           ;main.c: 23:     TRISCbits.RC4 = 0;
  2024   0022BE  9894               	bcf	148,4,c	;volatile
  2025   0022C0                     
  2026                           ; BSR set to: 15
  2027                           ;main.c: 24:     TRISDbits.RD4 = 0;
  2028   0022C0  9895               	bcf	149,4,c	;volatile
  2029   0022C2                     
  2030                           ; BSR set to: 15
  2031                           ;main.c: 25:     TRISDbits.RD5 = 0;
  2032   0022C2  9A95               	bcf	149,5,c	;volatile
  2033   0022C4                     
  2034                           ; BSR set to: 15
  2035                           ;main.c: 26:     TRISDbits.RD6 = 0;
  2036   0022C4  9C95               	bcf	149,6,c	;volatile
  2037   0022C6                     
  2038                           ; BSR set to: 15
  2039                           ;main.c: 27:     LATDbits.LD2 = 1;
  2040   0022C6  848C               	bsf	140,2,c	;volatile
  2041   0022C8                     
  2042                           ; BSR set to: 15
  2043                           ;main.c: 28:     LATDbits.LD3 = 1;
  2044   0022C8  868C               	bsf	140,3,c	;volatile
  2045   0022CA                     
  2046                           ; BSR set to: 15
  2047                           ;main.c: 29:     LATCbits.LC4 = 1;
  2048   0022CA  888B               	bsf	139,4,c	;volatile
  2049   0022CC                     
  2050                           ; BSR set to: 15
  2051                           ;main.c: 30:     LATDbits.LD4 = 1;
  2052   0022CC  888C               	bsf	140,4,c	;volatile
  2053   0022CE                     
  2054                           ; BSR set to: 15
  2055                           ;main.c: 31:     LATDbits.LD5 = 1;
  2056   0022CE  8A8C               	bsf	140,5,c	;volatile
  2057   0022D0                     
  2058                           ; BSR set to: 15
  2059                           ;main.c: 32:     LATDbits.LD6 = 1;
  2060   0022D0  8C8C               	bsf	140,6,c	;volatile
  2061   0022D2                     
  2062                           ; BSR set to: 15
  2063                           ;main.c: 35:     LCD_Init();
  2064   0022D2  EC79  F023         	call	_LCD_Init	;wreg free
  2065   0022D6                     
  2066                           ;main.c: 36:     uint8_t menuI = 0;
  2067   0022D6  0E00               	movlw	0
  2068   0022D8  0100               	movlb	0	; () banked
  2069   0022DA  6FFD               	movwf	main@menuI& (0+255),b
  2070   0022DC                     
  2071                           ; BSR set to: 0
  2072                           ;main.c: 37:     uint8_t setUpAgain = 0;
  2073   0022DC  0E00               	movlw	0
  2074   0022DE  6FFC               	movwf	main@setUpAgain& (0+255),b
  2075   0022E0                     
  2076                           ; BSR set to: 0
  2077                           ;main.c: 39:     LCD_ShowString((char)1, "Vytvoril:       ");
  2078   0022E0  0EC0               	movlw	low STR_1
  2079   0022E2  6E07               	movwf	LCD_ShowString@textData^0,c
  2080   0022E4  0EFE               	movlw	high STR_1
  2081   0022E6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2082   0022E8  0E01               	movlw	1
  2083   0022EA  ECAD  F024         	call	_LCD_ShowString
  2084   0022EE                     
  2085                           ;main.c: 40:     LCD_ShowString((char)2, "David Strasak   ");
  2086   0022EE  0E26               	movlw	low STR_2
  2087   0022F0  6E07               	movwf	LCD_ShowString@textData^0,c
  2088   0022F2  0EFF               	movlw	high STR_2
  2089   0022F4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2090   0022F6  0E02               	movlw	2
  2091   0022F8  ECAD  F024         	call	_LCD_ShowString
  2092   0022FC                     
  2093                           ;main.c: 41:     _delay((unsigned long)((2000)*(32E6/4000.0)));
  2094   0022FC  0E52               	movlw	82
  2095   0022FE  0100               	movlb	0	; () banked
  2096   002300  6FFB               	movwf	(??_main+1)& (0+255),b
  2097   002302  0E2B               	movlw	43
  2098   002304  6FFA               	movwf	??_main& (0+255),b
  2099   002306  0E00               	movlw	0
  2100   002308                     u10367:
  2101   002308  2EE8               	decfsz	wreg,f,c
  2102   00230A  D7FE               	bra	u10367
  2103   00230C  2FFA               	decfsz	??_main& (0+255),f,b
  2104   00230E  D7FC               	bra	u10367
  2105   002310  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2106   002312  D7FA               	bra	u10367
  2107   002314  0000               	nop	
  2108   002316                     
  2109                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  2110   002316  0E00               	movlw	0
  2111   002318  0100               	movlb	0	; () banked
  2112   00231A  6FE7               	movwf	moveDisplay@where& (0+255),b
  2113   00231C  51FD               	movf	main@menuI& (0+255),w,b
  2114   00231E  ECF3  F020         	call	_moveDisplay
  2115   002322  0100               	movlb	0	; () banked
  2116   002324  6FFD               	movwf	main@menuI& (0+255),b
  2117   002326                     l8444:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;main.c: 47:         if(PORTCbits.RC0){
  2121   002326  A082               	btfss	130,0,c	;volatile
  2122   002328  EF98  F011         	goto	u10251
  2123   00232C  EF9A  F011         	goto	u10250
  2124   002330                     u10251:
  2125   002330  EFBC  F011         	goto	l56
  2126   002334                     u10250:
  2127   002334                     
  2128                           ; BSR set to: 0
  2129                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2130   002334  0E03               	movlw	3
  2131   002336  0100               	movlb	0	; () banked
  2132   002338  6FFB               	movwf	(??_main+1)& (0+255),b
  2133   00233A  0E08               	movlw	8
  2134   00233C  6FFA               	movwf	??_main& (0+255),b
  2135   00233E  0E77               	movlw	119
  2136   002340                     u10377:
  2137   002340  2EE8               	decfsz	wreg,f,c
  2138   002342  D7FE               	bra	u10377
  2139   002344  2FFA               	decfsz	??_main& (0+255),f,b
  2140   002346  D7FC               	bra	u10377
  2141   002348  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2142   00234A  D7FA               	bra	u10377
  2143   00234C                     
  2144                           ;main.c: 49:             if(PORTCbits.RC0){
  2145   00234C  A082               	btfss	130,0,c	;volatile
  2146   00234E  EFAB  F011         	goto	u10261
  2147   002352  EFAD  F011         	goto	u10260
  2148   002356                     u10261:
  2149   002356  EFBC  F011         	goto	l56
  2150   00235A                     u10260:
  2151   00235A                     
  2152                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  2153   00235A  0E02               	movlw	2
  2154   00235C  0100               	movlb	0	; () banked
  2155   00235E  6FE7               	movwf	moveDisplay@where& (0+255),b
  2156   002360  51FD               	movf	main@menuI& (0+255),w,b
  2157   002362  ECF3  F020         	call	_moveDisplay
  2158   002366  0100               	movlb	0	; () banked
  2159   002368  6FFD               	movwf	main@menuI& (0+255),b
  2160   00236A                     l58:
  2161   00236A  B082               	btfsc	130,0,c	;volatile
  2162   00236C  EFBA  F011         	goto	u10271
  2163   002370  EFBC  F011         	goto	u10270
  2164   002374                     u10271:
  2165   002374  EFB5  F011         	goto	l58
  2166   002378                     u10270:
  2167   002378                     l56:
  2168                           
  2169                           ;main.c: 54:         if(PORTAbits.RA4){
  2170   002378  A880               	btfss	128,4,c	;volatile
  2171   00237A  EFC1  F011         	goto	u10281
  2172   00237E  EFC3  F011         	goto	u10280
  2173   002382                     u10281:
  2174   002382  EFE5  F011         	goto	l61
  2175   002386                     u10280:
  2176   002386                     
  2177                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2178   002386  0E03               	movlw	3
  2179   002388  0100               	movlb	0	; () banked
  2180   00238A  6FFB               	movwf	(??_main+1)& (0+255),b
  2181   00238C  0E08               	movlw	8
  2182   00238E  6FFA               	movwf	??_main& (0+255),b
  2183   002390  0E77               	movlw	119
  2184   002392                     u10387:
  2185   002392  2EE8               	decfsz	wreg,f,c
  2186   002394  D7FE               	bra	u10387
  2187   002396  2FFA               	decfsz	??_main& (0+255),f,b
  2188   002398  D7FC               	bra	u10387
  2189   00239A  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2190   00239C  D7FA               	bra	u10387
  2191   00239E                     
  2192                           ;main.c: 56:             if(PORTAbits.RA4){
  2193   00239E  A880               	btfss	128,4,c	;volatile
  2194   0023A0  EFD4  F011         	goto	u10291
  2195   0023A4  EFD6  F011         	goto	u10290
  2196   0023A8                     u10291:
  2197   0023A8  EFE5  F011         	goto	l61
  2198   0023AC                     u10290:
  2199   0023AC                     
  2200                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2201   0023AC  0E01               	movlw	1
  2202   0023AE  0100               	movlb	0	; () banked
  2203   0023B0  6FE7               	movwf	moveDisplay@where& (0+255),b
  2204   0023B2  51FD               	movf	main@menuI& (0+255),w,b
  2205   0023B4  ECF3  F020         	call	_moveDisplay
  2206   0023B8  0100               	movlb	0	; () banked
  2207   0023BA  6FFD               	movwf	main@menuI& (0+255),b
  2208   0023BC                     l63:
  2209   0023BC  B880               	btfsc	128,4,c	;volatile
  2210   0023BE  EFE3  F011         	goto	u10301
  2211   0023C2  EFE5  F011         	goto	u10300
  2212   0023C6                     u10301:
  2213   0023C6  EFDE  F011         	goto	l63
  2214   0023CA                     u10300:
  2215   0023CA                     l61:
  2216                           
  2217                           ;main.c: 61:         if(PORTAbits.RA3){
  2218   0023CA  A680               	btfss	128,3,c	;volatile
  2219   0023CC  EFEA  F011         	goto	u10311
  2220   0023D0  EFEC  F011         	goto	u10310
  2221   0023D4                     u10311:
  2222   0023D4  EF18  F013         	goto	l66
  2223   0023D8                     u10310:
  2224   0023D8                     
  2225                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2226   0023D8  0E03               	movlw	3
  2227   0023DA  0100               	movlb	0	; () banked
  2228   0023DC  6FFB               	movwf	(??_main+1)& (0+255),b
  2229   0023DE  0E08               	movlw	8
  2230   0023E0  6FFA               	movwf	??_main& (0+255),b
  2231   0023E2  0E77               	movlw	119
  2232   0023E4                     u10397:
  2233   0023E4  2EE8               	decfsz	wreg,f,c
  2234   0023E6  D7FE               	bra	u10397
  2235   0023E8  2FFA               	decfsz	??_main& (0+255),f,b
  2236   0023EA  D7FC               	bra	u10397
  2237   0023EC  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2238   0023EE  D7FA               	bra	u10397
  2239   0023F0                     
  2240                           ;main.c: 63:             if(PORTAbits.RA3){
  2241   0023F0  A680               	btfss	128,3,c	;volatile
  2242   0023F2  EFFD  F011         	goto	u10321
  2243   0023F6  EFFF  F011         	goto	u10320
  2244   0023FA                     u10321:
  2245   0023FA  EF18  F013         	goto	l66
  2246   0023FE                     u10320:
  2247   0023FE                     l68:
  2248   0023FE  B680               	btfsc	128,3,c	;volatile
  2249   002400  EF04  F012         	goto	u10331
  2250   002404  EF06  F012         	goto	u10330
  2251   002408                     u10331:
  2252   002408  EFFF  F011         	goto	l68
  2253   00240C                     u10330:
  2254   00240C  EFF8  F012         	goto	l8526
  2255   002410                     l8464:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2259   002410  0E15               	movlw	low STR_3
  2260   002412  6E07               	movwf	LCD_ShowString@textData^0,c
  2261   002414  0EFF               	movlw	high STR_3
  2262   002416  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2263   002418  0E01               	movlw	1
  2264   00241A  ECAD  F024         	call	_LCD_ShowString
  2265                           
  2266                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2267   00241E  0E35               	movlw	low (STR_35+2)
  2268   002420  6E07               	movwf	LCD_ShowString@textData^0,c
  2269   002422  0EFE               	movlw	high (STR_35+2)
  2270   002424  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2271   002426  0E02               	movlw	2
  2272   002428  ECAD  F024         	call	_LCD_ShowString
  2273   00242C                     
  2274                           ;main.c: 69:                         runGPIO();
  2275   00242C  EC9A  F01F         	call	_runGPIO	;wreg free
  2276   002430                     l8468:
  2277                           
  2278                           ;main.c: 70:                         setUpAgain = 1;
  2279   002430  0E01               	movlw	1
  2280   002432  0100               	movlb	0	; () banked
  2281   002434  6FFC               	movwf	main@setUpAgain& (0+255),b
  2282                           
  2283                           ;main.c: 71:                         break;
  2284   002436  EF18  F013         	goto	l66
  2285   00243A                     l8470:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2289   00243A  0EAF               	movlw	low STR_5
  2290   00243C  6E07               	movwf	LCD_ShowString@textData^0,c
  2291   00243E  0EFE               	movlw	high STR_5
  2292   002440  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2293   002442  0E01               	movlw	1
  2294   002444  ECAD  F024         	call	_LCD_ShowString
  2295                           
  2296                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2297   002448  0E8C               	movlw	low STR_6
  2298   00244A  6E07               	movwf	LCD_ShowString@textData^0,c
  2299   00244C  0EFF               	movlw	high STR_6
  2300   00244E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2301   002450  0E02               	movlw	2
  2302   002452  ECAD  F024         	call	_LCD_ShowString
  2303   002456                     
  2304                           ;main.c: 75:                         runUART();
  2305   002456  ECE4  F01E         	call	_runUART	;wreg free
  2306   00245A  EF18  F012         	goto	l8468
  2307   00245E                     l8476:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2311   00245E  0E48               	movlw	low STR_7
  2312   002460  6E07               	movwf	LCD_ShowString@textData^0,c
  2313   002462  0EFF               	movlw	high STR_7
  2314   002464  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2315   002466  0E01               	movlw	1
  2316   002468  ECAD  F024         	call	_LCD_ShowString
  2317                           
  2318                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2319   00246C  0E35               	movlw	low (STR_35+2)
  2320   00246E  6E07               	movwf	LCD_ShowString@textData^0,c
  2321   002470  0EFE               	movlw	high (STR_35+2)
  2322   002472  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2323   002474  0E02               	movlw	2
  2324   002476  ECAD  F024         	call	_LCD_ShowString
  2325   00247A                     
  2326                           ;main.c: 81:                         runPWM();
  2327   00247A  EC50  F020         	call	_runPWM	;wreg free
  2328   00247E  EF18  F012         	goto	l8468
  2329   002482                     l8482:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2333   002482  0E7B               	movlw	low STR_9
  2334   002484  6E07               	movwf	LCD_ShowString@textData^0,c
  2335   002486  0EFF               	movlw	high STR_9
  2336   002488  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2337   00248A  0E01               	movlw	1
  2338   00248C  ECAD  F024         	call	_LCD_ShowString
  2339   002490                     
  2340                           ;main.c: 86:                         runADC();
  2341   002490  EC75  F01A         	call	_runADC	;wreg free
  2342   002494  EF18  F012         	goto	l8468
  2343   002498                     l8488:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2347   002498  0E6A               	movlw	low STR_10
  2348   00249A  6E07               	movwf	LCD_ShowString@textData^0,c
  2349   00249C  0EFF               	movlw	high STR_10
  2350   00249E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2351   0024A0  0E01               	movlw	1
  2352   0024A2  ECAD  F024         	call	_LCD_ShowString
  2353                           
  2354                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2355   0024A6  0E9D               	movlw	low STR_11
  2356   0024A8  6E07               	movwf	LCD_ShowString@textData^0,c
  2357   0024AA  0EFF               	movlw	high STR_11
  2358   0024AC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2359   0024AE  0E02               	movlw	2
  2360   0024B0  ECAD  F024         	call	_LCD_ShowString
  2361   0024B4                     
  2362                           ;main.c: 92:                         runDAC();
  2363   0024B4  ECDD  F016         	call	_runDAC	;wreg free
  2364   0024B8  EF18  F012         	goto	l8468
  2365   0024BC                     l8494:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2369   0024BC  0E37               	movlw	low STR_12
  2370   0024BE  6E07               	movwf	LCD_ShowString@textData^0,c
  2371   0024C0  0EFF               	movlw	high STR_12
  2372   0024C2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2373   0024C4  0E01               	movlw	1
  2374   0024C6  ECAD  F024         	call	_LCD_ShowString
  2375                           
  2376                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2377   0024CA  0E35               	movlw	low (STR_35+2)
  2378   0024CC  6E07               	movwf	LCD_ShowString@textData^0,c
  2379   0024CE  0EFE               	movlw	high (STR_35+2)
  2380   0024D0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2381   0024D2  0E02               	movlw	2
  2382   0024D4  ECAD  F024         	call	_LCD_ShowString
  2383   0024D8                     
  2384                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2385   0024D8  0E29               	movlw	41
  2386   0024DA  0100               	movlb	0	; () banked
  2387   0024DC  6FFB               	movwf	(??_main+1)& (0+255),b
  2388   0024DE  0E96               	movlw	150
  2389   0024E0  6FFA               	movwf	??_main& (0+255),b
  2390   0024E2  0E7F               	movlw	127
  2391   0024E4                     u10407:
  2392   0024E4  2EE8               	decfsz	wreg,f,c
  2393   0024E6  D7FE               	bra	u10407
  2394   0024E8  2FFA               	decfsz	??_main& (0+255),f,b
  2395   0024EA  D7FC               	bra	u10407
  2396   0024EC  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2397   0024EE  D7FA               	bra	u10407
  2398   0024F0                     
  2399                           ;main.c: 99:                         LCD_ShowString((char)1, "Hybej pomoci    ");
  2400   0024F0  0E04               	movlw	low STR_14
  2401   0024F2  6E07               	movwf	LCD_ShowString@textData^0,c
  2402   0024F4  0EFF               	movlw	high STR_14
  2403   0024F6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2404   0024F8  0E01               	movlw	1
  2405   0024FA  ECAD  F024         	call	_LCD_ShowString
  2406   0024FE                     
  2407                           ;main.c: 100:                         LCD_ShowString((char)2, "POT1            ");
  2408   0024FE  0E8D               	movlw	low STR_15
  2409   002500  6E07               	movwf	LCD_ShowString@textData^0,c
  2410   002502  0EFE               	movlw	high STR_15
  2411   002504  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2412   002506  0E02               	movlw	2
  2413   002508  ECAD  F024         	call	_LCD_ShowString
  2414   00250C                     
  2415                           ;main.c: 101:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2416   00250C  0E52               	movlw	82
  2417   00250E  0100               	movlb	0	; () banked
  2418   002510  6FFB               	movwf	(??_main+1)& (0+255),b
  2419   002512  0E2B               	movlw	43
  2420   002514  6FFA               	movwf	??_main& (0+255),b
  2421   002516  0E00               	movlw	0
  2422   002518                     u10417:
  2423   002518  2EE8               	decfsz	wreg,f,c
  2424   00251A  D7FE               	bra	u10417
  2425   00251C  2FFA               	decfsz	??_main& (0+255),f,b
  2426   00251E  D7FC               	bra	u10417
  2427   002520  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2428   002522  D7FA               	bra	u10417
  2429   002524  0000               	nop	
  2430                           
  2431                           ;main.c: 102:                         LCD_ShowString((char)1, "Zrychli to      ");
  2432   002526  0EE2               	movlw	low STR_16
  2433   002528  6E07               	movwf	LCD_ShowString@textData^0,c
  2434   00252A  0EFE               	movlw	high STR_16
  2435   00252C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2436   00252E  0E01               	movlw	1
  2437   002530  ECAD  F024         	call	_LCD_ShowString
  2438                           
  2439                           ;main.c: 103:                         LCD_ShowString((char)2, "pomoci BTN4     ");
  2440   002534  0EF3               	movlw	low STR_17
  2441   002536  6E07               	movwf	LCD_ShowString@textData^0,c
  2442   002538  0EFE               	movlw	high STR_17
  2443   00253A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2444   00253C  0E02               	movlw	2
  2445   00253E  ECAD  F024         	call	_LCD_ShowString
  2446   002542                     
  2447                           ;main.c: 104:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2448   002542  0E52               	movlw	82
  2449   002544  0100               	movlb	0	; () banked
  2450   002546  6FFB               	movwf	(??_main+1)& (0+255),b
  2451   002548  0E2B               	movlw	43
  2452   00254A  6FFA               	movwf	??_main& (0+255),b
  2453   00254C  0E00               	movlw	0
  2454   00254E                     u10427:
  2455   00254E  2EE8               	decfsz	wreg,f,c
  2456   002550  D7FE               	bra	u10427
  2457   002552  2FFA               	decfsz	??_main& (0+255),f,b
  2458   002554  D7FC               	bra	u10427
  2459   002556  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2460   002558  D7FA               	bra	u10427
  2461   00255A  0000               	nop	
  2462   00255C                     
  2463                           ;main.c: 105:                         LCD_ShowString((char)1, "Pripravit       ");
  2464   00255C  0ED1               	movlw	low STR_18
  2465   00255E  6E07               	movwf	LCD_ShowString@textData^0,c
  2466   002560  0EFE               	movlw	high STR_18
  2467   002562  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2468   002564  0E01               	movlw	1
  2469   002566  ECAD  F024         	call	_LCD_ShowString
  2470                           
  2471                           ;main.c: 106:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2472   00256A  0E29               	movlw	41
  2473   00256C  0100               	movlb	0	; () banked
  2474   00256E  6FFB               	movwf	(??_main+1)& (0+255),b
  2475   002570  0E96               	movlw	150
  2476   002572  6FFA               	movwf	??_main& (0+255),b
  2477   002574  0E7F               	movlw	127
  2478   002576                     u10437:
  2479   002576  2EE8               	decfsz	wreg,f,c
  2480   002578  D7FE               	bra	u10437
  2481   00257A  2FFA               	decfsz	??_main& (0+255),f,b
  2482   00257C  D7FC               	bra	u10437
  2483   00257E  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2484   002580  D7FA               	bra	u10437
  2485   002582                     
  2486                           ;main.c: 107:                         LCD_ShowString((char)2, "           Pozor");
  2487   002582  0EAE               	movlw	low STR_19
  2488   002584  6E07               	movwf	LCD_ShowString@textData^0,c
  2489   002586  0EFF               	movlw	high STR_19
  2490   002588  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2491   00258A  0E02               	movlw	2
  2492   00258C  ECAD  F024         	call	_LCD_ShowString
  2493   002590                     
  2494                           ;main.c: 108:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2495   002590  0E52               	movlw	82
  2496   002592  0100               	movlb	0	; () banked
  2497   002594  6FFB               	movwf	(??_main+1)& (0+255),b
  2498   002596  0E2B               	movlw	43
  2499   002598  6FFA               	movwf	??_main& (0+255),b
  2500   00259A  0E00               	movlw	0
  2501   00259C                     u10447:
  2502   00259C  2EE8               	decfsz	wreg,f,c
  2503   00259E  D7FE               	bra	u10447
  2504   0025A0  2FFA               	decfsz	??_main& (0+255),f,b
  2505   0025A2  D7FC               	bra	u10447
  2506   0025A4  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2507   0025A6  D7FA               	bra	u10447
  2508   0025A8  0000               	nop	
  2509   0025AA                     
  2510                           ;main.c: 109:                         runGAME();
  2511   0025AA  EC4F  F00F         	call	_runGAME	;wreg free
  2512   0025AE  EF18  F012         	goto	l8468
  2513   0025B2                     l8516:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;main.c: 113:                         LCD_ShowString((char)1, "Nebylo          ");
  2517   0025B2  0E9E               	movlw	low STR_20
  2518   0025B4  6E07               	movwf	LCD_ShowString@textData^0,c
  2519   0025B6  0EFE               	movlw	high STR_20
  2520   0025B8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2521   0025BA  0E01               	movlw	1
  2522   0025BC  ECAD  F024         	call	_LCD_ShowString
  2523                           
  2524                           ;main.c: 114:                         LCD_ShowString((char)2, "Implementovano  ");
  2525   0025C0  0E59               	movlw	low STR_21
  2526   0025C2  6E07               	movwf	LCD_ShowString@textData^0,c
  2527   0025C4  0EFF               	movlw	high STR_21
  2528   0025C6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2529   0025C8  0E02               	movlw	2
  2530   0025CA  ECAD  F024         	call	_LCD_ShowString
  2531   0025CE                     
  2532                           ;main.c: 115:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2533   0025CE  0E52               	movlw	82
  2534   0025D0  0100               	movlb	0	; () banked
  2535   0025D2  6FFB               	movwf	(??_main+1)& (0+255),b
  2536   0025D4  0E2B               	movlw	43
  2537   0025D6  6FFA               	movwf	??_main& (0+255),b
  2538   0025D8  0E00               	movlw	0
  2539   0025DA                     u10457:
  2540   0025DA  2EE8               	decfsz	wreg,f,c
  2541   0025DC  D7FE               	bra	u10457
  2542   0025DE  2FFA               	decfsz	??_main& (0+255),f,b
  2543   0025E0  D7FC               	bra	u10457
  2544   0025E2  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2545   0025E4  D7FA               	bra	u10457
  2546   0025E6  0000               	nop	
  2547   0025E8                     
  2548                           ;main.c: 116:                         runMUSIC();
  2549   0025E8  ECAB  F029         	call	_runMUSIC	;wreg free
  2550   0025EC  EF18  F012         	goto	l8468
  2551   0025F0                     l8526:
  2552   0025F0  0100               	movlb	0	; () banked
  2553   0025F2  51FD               	movf	main@menuI& (0+255),w,b
  2554                           
  2555                           ; Switch size 1, requested type "simple"
  2556                           ; Number of cases is 7, Range of values is 0 to 6
  2557                           ; switch strategies available:
  2558                           ; Name         Instructions Cycles
  2559                           ; simple_byte           22    12 (average)
  2560                           ;	Chosen strategy is simple_byte
  2561   0025F4  0A00               	xorlw	0	; case 0
  2562   0025F6  B4D8               	btfsc	status,2,c
  2563   0025F8  EF08  F012         	goto	l8464
  2564   0025FC  0A01               	xorlw	1	; case 1
  2565   0025FE  B4D8               	btfsc	status,2,c
  2566   002600  EF1D  F012         	goto	l8470
  2567   002604  0A03               	xorlw	3	; case 2
  2568   002606  B4D8               	btfsc	status,2,c
  2569   002608  EF2F  F012         	goto	l8476
  2570   00260C  0A01               	xorlw	1	; case 3
  2571   00260E  B4D8               	btfsc	status,2,c
  2572   002610  EF41  F012         	goto	l8482
  2573   002614  0A07               	xorlw	7	; case 4
  2574   002616  B4D8               	btfsc	status,2,c
  2575   002618  EF4C  F012         	goto	l8488
  2576   00261C  0A01               	xorlw	1	; case 5
  2577   00261E  B4D8               	btfsc	status,2,c
  2578   002620  EF5E  F012         	goto	l8494
  2579   002624  0A03               	xorlw	3	; case 6
  2580   002626  B4D8               	btfsc	status,2,c
  2581   002628  EFD9  F012         	goto	l8516
  2582   00262C  EF18  F013         	goto	l66
  2583   002630                     l66:
  2584                           
  2585                           ;main.c: 123:         if(PORTAbits.RA2){
  2586   002630  5080               	movf	128,w,c	;volatile
  2587   002632                     
  2588                           ;main.c: 127:         if(setUpAgain){
  2589   002632  0100               	movlb	0	; () banked
  2590   002634  51FC               	movf	main@setUpAgain& (0+255),w,b
  2591   002636  B4D8               	btfsc	status,2,c
  2592   002638  EF20  F013         	goto	u10341
  2593   00263C  EF22  F013         	goto	u10340
  2594   002640                     u10341:
  2595   002640  EF93  F011         	goto	l8444
  2596   002644                     u10340:
  2597   002644                     
  2598                           ; BSR set to: 0
  2599                           ;main.c: 128:         menuI = moveDisplay(menuI,0);
  2600   002644  0E00               	movlw	0
  2601   002646  6FE7               	movwf	moveDisplay@where& (0+255),b
  2602   002648  51FD               	movf	main@menuI& (0+255),w,b
  2603   00264A  ECF3  F020         	call	_moveDisplay
  2604   00264E  0100               	movlb	0	; () banked
  2605   002650  6FFD               	movwf	main@menuI& (0+255),b
  2606   002652                     
  2607                           ; BSR set to: 0
  2608                           ;main.c: 129:         setUpAgain = 0;
  2609   002652  0E00               	movlw	0
  2610   002654  6FFC               	movwf	main@setUpAgain& (0+255),b
  2611   002656  EF93  F011         	goto	l8444
  2612   00265A  EFA7  F000         	goto	start
  2613   00265E                     __end_of_main:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _runUART *****************
  2617 ;; Defined at:
  2618 ;;		line 4 in file "UART.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  p               2  152[BANK0 ] int 
  2623 ;;  i               2  150[BANK0 ] unsigned int 
  2624 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2625 ;;  len             2  148[BANK0 ] unsigned int 
  2626 ;;  keepState       1  147[BANK0 ] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;Total ram usage:       40 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 9
  2643 ;; This function calls:
  2644 ;;		_printf
  2645 ;;		_strlen
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text1
  2652   003DC8                     __ptext1:
  2653                           	callstack 0
  2654   003DC8                     _runUART:
  2655                           	callstack 21
  2656   003DC8                     
  2657                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2658   003DC8  8492               	bsf	146,2,c	;volatile
  2659                           
  2660                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2661   003DCA  010F               	movlb	15	; () banked
  2662   003DCC  9D3A               	bcf	58,6,b	;volatile
  2663                           
  2664                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2665   003DCE  9F3A               	bcf	58,7,b	;volatile
  2666                           
  2667                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2668   003DD0  8C94               	bsf	148,6,c	;volatile
  2669                           
  2670                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2671   003DD2  8E94               	bsf	148,7,c	;volatile
  2672   003DD4                     
  2673                           ; BSR set to: 15
  2674                           ;UART.c: 14:     SPBRG1 = 25;
  2675   003DD4  0E19               	movlw	25
  2676   003DD6  6EAF               	movwf	175,c	;volatile
  2677   003DD8                     
  2678                           ; BSR set to: 15
  2679                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2680   003DD8  98AC               	bcf	172,4,c	;volatile
  2681   003DDA                     
  2682                           ; BSR set to: 15
  2683                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2684   003DDA  8EAB               	bsf	171,7,c	;volatile
  2685   003DDC                     
  2686                           ; BSR set to: 15
  2687                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2688   003DDC  8AAC               	bsf	172,5,c	;volatile
  2689   003DDE                     
  2690                           ; BSR set to: 15
  2691                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2692   003DDE  88AB               	bsf	171,4,c	;volatile
  2693                           
  2694                           ;UART.c: 21:     UARTIE = 1;
  2695   003DE0  0E01               	movlw	1
  2696   003DE2  0101               	movlb	1	; () banked
  2697   003DE4  6F25               	movwf	_UARTIE& (0+255),b
  2698   003DE6                     
  2699                           ; BSR set to: 1
  2700                           ;UART.c: 22:     RC1IE = 1;
  2701   003DE6  8A9D               	bsf	3997,5,c	;volatile
  2702   003DE8                     
  2703                           ; BSR set to: 1
  2704                           ;UART.c: 23:     PEIE = 1;
  2705   003DE8  8CF2               	bsf	4082,6,c	;volatile
  2706   003DEA                     
  2707                           ; BSR set to: 1
  2708                           ;UART.c: 24:     GIE = 1;
  2709   003DEA  8EF2               	bsf	4082,7,c	;volatile
  2710                           
  2711                           ;UART.c: 26:     uint8_t keepState = 1;
  2712   003DEC  0E01               	movlw	1
  2713   003DEE  0100               	movlb	0	; () banked
  2714   003DF0  6FF3               	movwf	runUART@keepState& (0+255),b
  2715                           
  2716                           ;UART.c: 28:     while(keepState){
  2717   003DF2  EF87  F01F         	goto	l579
  2718   003DF6                     l8070:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;UART.c: 29:         if(gmail.full){
  2722   003DF6  0101               	movlb	1	; () banked
  2723   003DF8  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2724   003DFA  B4D8               	btfsc	status,2,c
  2725   003DFC  EF02  F01F         	goto	u9841
  2726   003E00  EF04  F01F         	goto	u9840
  2727   003E04                     u9841:
  2728   003E04  EF63  F01F         	goto	l581
  2729   003E08                     u9840:
  2730   003E08                     
  2731                           ; BSR set to: 1
  2732                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2733   003E08  0E77               	movlw	low _gmail
  2734   003E0A  6E06               	movwf	strlen@s^0,c
  2735   003E0C  0E01               	movlw	high _gmail
  2736   003E0E  6E07               	movwf	(strlen@s+1)^0,c
  2737   003E10  ECC2  F028         	call	_strlen	;wreg free
  2738   003E14  C006  F0F4         	movff	?_strlen,runUART@len
  2739   003E18  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2740   003E1C                     
  2741                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2742   003E1C  0E00               	movlw	0
  2743   003E1E  0100               	movlb	0	; () banked
  2744   003E20  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2745   003E22  0E00               	movlw	0
  2746   003E24  6FF6               	movwf	runUART@i& (0+255),b
  2747   003E26  EF2B  F01F         	goto	l8080
  2748   003E2A                     l8076:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2752   003E2A  0E76               	movlw	low (_gmail+65535)
  2753   003E2C  6FD2               	movwf	??_runUART& (0+255),b
  2754   003E2E  0E01               	movlw	high (_gmail+65535)
  2755   003E30  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2756   003E32  51F6               	movf	runUART@i& (0+255),w,b
  2757   003E34  5FD2               	subwf	??_runUART& (0+255),f,b
  2758   003E36  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2759   003E38  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2760   003E3A  51F4               	movf	runUART@len& (0+255),w,b
  2761   003E3C  25D2               	addwf	??_runUART& (0+255),w,b
  2762   003E3E  6ED9               	movwf	fsr2l,c
  2763   003E40  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2764   003E42  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2765   003E44  6EDA               	movwf	fsr2h,c
  2766   003E46  51F6               	movf	runUART@i& (0+255),w,b
  2767   003E48  0FD4               	addlw	low runUART@reversed
  2768   003E4A  6EE1               	movwf	fsr1l,c
  2769   003E4C  6AE2               	clrf	fsr1h,c
  2770   003E4E  CFDF FFE7          	movff	indf2,indf1
  2771   003E52                     
  2772                           ; BSR set to: 0
  2773                           ;UART.c: 35:             }
  2774   003E52  4BF6               	infsnz	runUART@i& (0+255),f,b
  2775   003E54  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2776   003E56                     l8080:
  2777                           
  2778                           ; BSR set to: 0
  2779   003E56  51F4               	movf	runUART@len& (0+255),w,b
  2780   003E58  5DF6               	subwf	runUART@i& (0+255),w,b
  2781   003E5A  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2782   003E5C  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2783   003E5E  A0D8               	btfss	status,0,c
  2784   003E60  EF34  F01F         	goto	u9851
  2785   003E64  EF36  F01F         	goto	u9850
  2786   003E68                     u9851:
  2787   003E68  EF15  F01F         	goto	l8076
  2788   003E6C                     u9850:
  2789   003E6C                     
  2790                           ; BSR set to: 0
  2791                           ;UART.c: 36:             reversed[len] = '\0';
  2792   003E6C  51F4               	movf	runUART@len& (0+255),w,b
  2793   003E6E  0FD4               	addlw	low runUART@reversed
  2794   003E70  6ED9               	movwf	fsr2l,c
  2795   003E72  6ADA               	clrf	fsr2h,c
  2796   003E74  6ADF               	clrf	indf2,c
  2797   003E76                     
  2798                           ; BSR set to: 0
  2799                           ;UART.c: 37:             printf("%s \n", reversed);
  2800   003E76  0ED2               	movlw	low STR_34
  2801   003E78  6FCE               	movwf	printf@fmt& (0+255),b
  2802   003E7A  0EFF               	movlw	high STR_34
  2803   003E7C  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2804   003E7E  0ED4               	movlw	low runUART@reversed
  2805   003E80  6FD0               	movwf	(?_printf+2)& (0+255),b
  2806   003E82  6BD1               	clrf	(?_printf+3)& (0+255),b
  2807   003E84  EC66  F029         	call	_printf	;wreg free
  2808   003E88                     
  2809                           ;UART.c: 39:             gmail.full = 0;
  2810   003E88  0E00               	movlw	0
  2811   003E8A  0101               	movlb	1	; () banked
  2812   003E8C  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2813   003E8E                     
  2814                           ; BSR set to: 1
  2815                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2816   003E8E  0E00               	movlw	0
  2817   003E90  0100               	movlb	0	; () banked
  2818   003E92  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2819   003E94  0E00               	movlw	0
  2820   003E96  6FF8               	movwf	runUART@p& (0+255),b
  2821   003E98                     l8094:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2825   003E98  0E77               	movlw	low _gmail
  2826   003E9A  25F8               	addwf	runUART@p& (0+255),w,b
  2827   003E9C  6ED9               	movwf	fsr2l,c
  2828   003E9E  0E01               	movlw	high _gmail
  2829   003EA0  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2830   003EA2  6EDA               	movwf	fsr2h,c
  2831   003EA4  6ADF               	clrf	indf2,c
  2832   003EA6                     
  2833                           ; BSR set to: 0
  2834                           ;UART.c: 43:             }
  2835   003EA6  4BF8               	infsnz	runUART@p& (0+255),f,b
  2836   003EA8  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2837   003EAA                     
  2838                           ; BSR set to: 0
  2839   003EAA  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2840   003EAC  EF61  F01F         	goto	u9861
  2841   003EB0  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2842   003EB2  E109               	bnz	u9860
  2843   003EB4  0E1F               	movlw	31
  2844   003EB6  5DF8               	subwf	runUART@p& (0+255),w,b
  2845   003EB8  A0D8               	btfss	status,0,c
  2846   003EBA  EF61  F01F         	goto	u9861
  2847   003EBE  EF63  F01F         	goto	u9860
  2848   003EC2                     u9861:
  2849   003EC2  EF4C  F01F         	goto	l8094
  2850   003EC6                     u9860:
  2851   003EC6                     l581:
  2852                           
  2853                           ;UART.c: 47:         if(PORTAbits.RA2){
  2854   003EC6  A480               	btfss	128,2,c	;volatile
  2855   003EC8  EF68  F01F         	goto	u9871
  2856   003ECC  EF6A  F01F         	goto	u9870
  2857   003ED0                     u9871:
  2858   003ED0  EF87  F01F         	goto	l579
  2859   003ED4                     u9870:
  2860   003ED4                     
  2861                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2862   003ED4  0E03               	movlw	3
  2863   003ED6  0100               	movlb	0	; () banked
  2864   003ED8  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2865   003EDA  0E08               	movlw	8
  2866   003EDC  6FD2               	movwf	??_runUART& (0+255),b
  2867   003EDE  0E77               	movlw	119
  2868   003EE0                     u10467:
  2869   003EE0  2EE8               	decfsz	wreg,f,c
  2870   003EE2  D7FE               	bra	u10467
  2871   003EE4  2FD2               	decfsz	??_runUART& (0+255),f,b
  2872   003EE6  D7FC               	bra	u10467
  2873   003EE8  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2874   003EEA  D7FA               	bra	u10467
  2875   003EEC                     
  2876                           ;UART.c: 49:             if(PORTAbits.RA2){
  2877   003EEC  A480               	btfss	128,2,c	;volatile
  2878   003EEE  EF7B  F01F         	goto	u9881
  2879   003EF2  EF7D  F01F         	goto	u9880
  2880   003EF6                     u9881:
  2881   003EF6  EF87  F01F         	goto	l579
  2882   003EFA                     u9880:
  2883   003EFA                     l589:
  2884   003EFA  B480               	btfsc	128,2,c	;volatile
  2885   003EFC  EF82  F01F         	goto	u9891
  2886   003F00  EF84  F01F         	goto	u9890
  2887   003F04                     u9891:
  2888   003F04  EF7D  F01F         	goto	l589
  2889   003F08                     u9890:
  2890   003F08                     
  2891                           ;UART.c: 51:                 keepState = 0;
  2892   003F08  0E00               	movlw	0
  2893   003F0A  0100               	movlb	0	; () banked
  2894   003F0C  6FF3               	movwf	runUART@keepState& (0+255),b
  2895   003F0E                     l579:
  2896                           
  2897                           ;UART.c: 28:     while(keepState){
  2898   003F0E  0100               	movlb	0	; () banked
  2899   003F10  51F3               	movf	runUART@keepState& (0+255),w,b
  2900   003F12  A4D8               	btfss	status,2,c
  2901   003F14  EF8E  F01F         	goto	u9901
  2902   003F18  EF90  F01F         	goto	u9900
  2903   003F1C                     u9901:
  2904   003F1C  EFFB  F01E         	goto	l8070
  2905   003F20                     u9900:
  2906   003F20                     
  2907                           ; BSR set to: 0
  2908                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2909   003F20  9EAB               	bcf	171,7,c	;volatile
  2910                           
  2911                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2912   003F22  9AAC               	bcf	172,5,c	;volatile
  2913                           
  2914                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2915   003F24  98AB               	bcf	171,4,c	;volatile
  2916   003F26                     
  2917                           ; BSR set to: 0
  2918                           ;UART.c: 61:     UARTIE = 0;
  2919   003F26  0E00               	movlw	0
  2920   003F28  0101               	movlb	1	; () banked
  2921   003F2A  6F25               	movwf	_UARTIE& (0+255),b
  2922   003F2C                     
  2923                           ; BSR set to: 1
  2924                           ;UART.c: 62:     RC1IE = 0;
  2925   003F2C  9A9D               	bcf	3997,5,c	;volatile
  2926   003F2E                     
  2927                           ; BSR set to: 1
  2928                           ;UART.c: 63:     PEIE = 0;
  2929   003F2E  9CF2               	bcf	4082,6,c	;volatile
  2930   003F30                     
  2931                           ; BSR set to: 1
  2932                           ;UART.c: 64:     GIE = 0;
  2933   003F30  9EF2               	bcf	4082,7,c	;volatile
  2934   003F32                     
  2935                           ; BSR set to: 1
  2936   003F32  0012               	return		;funcret
  2937   003F34                     __end_of_runUART:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _strlen *****************
  2941 ;; Defined at:
  2942 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2945 ;;		 -> gmail$data(31), gmail(32), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2948 ;;		 -> gmail$data(31), gmail(32), 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2    5[COMRAM] unsigned int 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;Total ram usage:        4 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_runUART
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text2
  2973   005184                     __ptext2:
  2974                           	callstack 0
  2975   005184                     _strlen:
  2976                           	callstack 28
  2977   005184  C006  F008         	movff	strlen@s,strlen@a
  2978   005188  C007  F009         	movff	strlen@s+1,strlen@a+1
  2979   00518C  EFCA  F028         	goto	l7932
  2980   005190                     l7930:
  2981   005190  4A06               	infsnz	strlen@s^0,f,c
  2982   005192  2A07               	incf	(strlen@s+1)^0,f,c
  2983   005194                     l7932:
  2984   005194  C006  FFD9         	movff	strlen@s,fsr2l
  2985   005198  C007  FFDA         	movff	strlen@s+1,fsr2h
  2986   00519C  50DF               	movf	indf2,w,c
  2987   00519E  A4D8               	btfss	status,2,c
  2988   0051A0  EFD4  F028         	goto	u9651
  2989   0051A4  EFD6  F028         	goto	u9650
  2990   0051A8                     u9651:
  2991   0051A8  EFC8  F028         	goto	l7930
  2992   0051AC                     u9650:
  2993   0051AC  5008               	movf	strlen@a^0,w,c
  2994   0051AE  5C06               	subwf	strlen@s^0,w,c
  2995   0051B0  6E06               	movwf	?_strlen^0,c
  2996   0051B2  5009               	movf	(strlen@a+1)^0,w,c
  2997   0051B4  5807               	subwfb	(strlen@s+1)^0,w,c
  2998   0051B6  6E07               	movwf	(?_strlen+1)^0,c
  2999   0051B8  0012               	return		;funcret
  3000   0051BA                     __end_of_strlen:
  3001                           	callstack 0
  3002                           
  3003 ;; *************** function _runPWM *****************
  3004 ;; Defined at:
  3005 ;;		line 11 in file "PWM.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  multiplier      1   34[COMRAM] unsigned char 
  3010 ;;  keepState       1   33[COMRAM] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;Total ram usage:        4 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 2
  3027 ;; This function calls:
  3028 ;;		___awdiv
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text3
  3035   0040A0                     __ptext3:
  3036                           	callstack 0
  3037   0040A0                     _runPWM:
  3038                           	callstack 28
  3039   0040A0                     
  3040                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  3041   0040A0  8494               	bsf	148,2,c	;volatile
  3042   0040A2                     
  3043                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  3044   0040A2  0EFC               	movlw	-4
  3045   0040A4  010F               	movlb	15	; () banked
  3046   0040A6  1749               	andwf	73,f,b	;volatile
  3047                           
  3048                           ;PWM.c: 15:     PR2 = 199;
  3049   0040A8  0EC7               	movlw	199
  3050   0040AA  6EBB               	movwf	187,c	;volatile
  3051                           
  3052                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  3053   0040AC  0E0C               	movlw	12
  3054   0040AE  12BD               	iorwf	189,f,c	;volatile
  3055                           
  3056                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  3057   0040B0  50BD               	movf	189,w,c	;volatile
  3058   0040B2  0B3F               	andlw	-193
  3059   0040B4  0980               	iorlw	128
  3060   0040B6  6EBD               	movwf	189,c	;volatile
  3061                           
  3062                           ;PWM.c: 18:     CCPR1L = 0;
  3063   0040B8  0E00               	movlw	0
  3064   0040BA  6EBE               	movwf	190,c	;volatile
  3065   0040BC                     
  3066                           ; BSR set to: 15
  3067                           ;PWM.c: 19:     TMR2IF = 0;
  3068   0040BC  929E               	bcf	3998,1,c	;volatile
  3069   0040BE                     
  3070                           ; BSR set to: 15
  3071                           ;PWM.c: 20:     TMR2ON = 1;
  3072   0040BE  84BA               	bsf	4026,2,c	;volatile
  3073   0040C0                     l519:
  3074   0040C0  A29E               	btfss	3998,1,c	;volatile
  3075   0040C2  EF65  F020         	goto	u9911
  3076   0040C6  EF67  F020         	goto	u9910
  3077   0040CA                     u9911:
  3078   0040CA  EF60  F020         	goto	l519
  3079   0040CE                     u9910:
  3080   0040CE                     
  3081                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  3082   0040CE  8494               	bsf	148,2,c	;volatile
  3083                           
  3084                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  3085   0040D0  8892               	bsf	146,4,c	;volatile
  3086                           
  3087                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  3088   0040D2  8492               	bsf	146,2,c	;volatile
  3089                           
  3090                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  3091   0040D4  9495               	bcf	149,2,c	;volatile
  3092                           
  3093                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  3094   0040D6  9695               	bcf	149,3,c	;volatile
  3095                           
  3096                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  3097   0040D8  9894               	bcf	148,4,c	;volatile
  3098                           
  3099                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  3100   0040DA  9895               	bcf	149,4,c	;volatile
  3101                           
  3102                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  3103   0040DC  9A95               	bcf	149,5,c	;volatile
  3104                           
  3105                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  3106   0040DE  9C95               	bcf	149,6,c	;volatile
  3107                           
  3108                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  3109   0040E0  848C               	bsf	140,2,c	;volatile
  3110                           
  3111                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  3112   0040E2  868C               	bsf	140,3,c	;volatile
  3113                           
  3114                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  3115   0040E4  888B               	bsf	139,4,c	;volatile
  3116                           
  3117                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  3118   0040E6  888C               	bsf	140,4,c	;volatile
  3119                           
  3120                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  3121   0040E8  8A8C               	bsf	140,5,c	;volatile
  3122                           
  3123                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  3124   0040EA  8C8C               	bsf	140,6,c	;volatile
  3125   0040EC                     
  3126                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  3127   0040EC  0E01               	movlw	1
  3128   0040EE  6E22               	movwf	runPWM@keepState^0,c
  3129                           
  3130                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  3131   0040F0  0E00               	movlw	0
  3132   0040F2  6E23               	movwf	runPWM@multiplier^0,c
  3133                           
  3134                           ;PWM.c: 47:     while(keepState){
  3135   0040F4  EFE6  F020         	goto	l522
  3136   0040F8                     l8128:
  3137                           
  3138                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  3139   0040F8  5023               	movf	runPWM@multiplier^0,w,c
  3140   0040FA  0DC7               	mullw	199
  3141   0040FC  CFF3 F018          	movff	prodl,___awdiv@dividend
  3142   004100  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  3143   004104  0E00               	movlw	0
  3144   004106  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3145   004108  0E05               	movlw	5
  3146   00410A  6E1A               	movwf	___awdiv@divisor^0,c
  3147   00410C  EC4B  F024         	call	___awdiv	;wreg free
  3148   004110  5018               	movf	?___awdiv^0,w,c
  3149   004112  6EBE               	movwf	190,c	;volatile
  3150   004114                     
  3151                           ;PWM.c: 51:         if(PORTAbits.RA4){
  3152   004114  A880               	btfss	128,4,c	;volatile
  3153   004116  EF8F  F020         	goto	u9921
  3154   00411A  EF91  F020         	goto	u9920
  3155   00411E                     u9921:
  3156   00411E  EFC3  F020         	goto	l8146
  3157   004122                     u9920:
  3158   004122                     
  3159                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  3160   004122  0E03               	movlw	3
  3161   004124  6E21               	movwf	(??_runPWM+1)^0,c
  3162   004126  0E08               	movlw	8
  3163   004128  6E20               	movwf	??_runPWM^0,c
  3164   00412A  0E77               	movlw	119
  3165   00412C                     u10477:
  3166   00412C  2EE8               	decfsz	wreg,f,c
  3167   00412E  D7FE               	bra	u10477
  3168   004130  2E20               	decfsz	??_runPWM^0,f,c
  3169   004132  D7FC               	bra	u10477
  3170   004134  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3171   004136  D7FA               	bra	u10477
  3172   004138  0000               	nop	
  3173   00413A                     
  3174                           ;PWM.c: 53:             if(PORTAbits.RA4){
  3175   00413A  A880               	btfss	128,4,c	;volatile
  3176   00413C  EFA2  F020         	goto	u9931
  3177   004140  EFA4  F020         	goto	u9930
  3178   004144                     u9931:
  3179   004144  EFC3  F020         	goto	l8146
  3180   004148                     u9930:
  3181   004148                     l526:
  3182   004148  B880               	btfsc	128,4,c	;volatile
  3183   00414A  EFA9  F020         	goto	u9941
  3184   00414E  EFAB  F020         	goto	u9940
  3185   004152                     u9941:
  3186   004152  EFA4  F020         	goto	l526
  3187   004156                     u9940:
  3188   004156                     
  3189                           ;PWM.c: 55:                 if(multiplier == 5 ){
  3190   004156  0E05               	movlw	5
  3191   004158  1823               	xorwf	runPWM@multiplier^0,w,c
  3192   00415A  A4D8               	btfss	status,2,c
  3193   00415C  EFB2  F020         	goto	u9951
  3194   004160  EFB4  F020         	goto	u9950
  3195   004164                     u9951:
  3196   004164  EFB8  F020         	goto	l8142
  3197   004168                     u9950:
  3198   004168                     
  3199                           ;PWM.c: 56:                     multiplier = 0;
  3200   004168  0E00               	movlw	0
  3201   00416A  6E23               	movwf	runPWM@multiplier^0,c
  3202                           
  3203                           ;PWM.c: 57:                 } else if(multiplier <5){
  3204   00416C  EFC3  F020         	goto	l8146
  3205   004170                     l8142:
  3206   004170  0E05               	movlw	5
  3207   004172  6023               	cpfslt	runPWM@multiplier^0,c
  3208   004174  EFBE  F020         	goto	u9961
  3209   004178  EFC0  F020         	goto	u9960
  3210   00417C                     u9961:
  3211   00417C  EFC3  F020         	goto	l525
  3212   004180                     u9960:
  3213   004180                     
  3214                           ;PWM.c: 58:                     multiplier++;
  3215   004180  2A23               	incf	runPWM@multiplier^0,f,c
  3216   004182  EFC3  F020         	goto	l8146
  3217   004186                     l525:
  3218   004186                     l8146:
  3219                           
  3220                           ;PWM.c: 63:         if(PORTAbits.RA2){
  3221   004186  A480               	btfss	128,2,c	;volatile
  3222   004188  EFC8  F020         	goto	u9971
  3223   00418C  EFCA  F020         	goto	u9970
  3224   004190                     u9971:
  3225   004190  EFE6  F020         	goto	l522
  3226   004194                     u9970:
  3227   004194                     
  3228                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  3229   004194  0E03               	movlw	3
  3230   004196  6E21               	movwf	(??_runPWM+1)^0,c
  3231   004198  0E08               	movlw	8
  3232   00419A  6E20               	movwf	??_runPWM^0,c
  3233   00419C  0E77               	movlw	119
  3234   00419E                     u10487:
  3235   00419E  2EE8               	decfsz	wreg,f,c
  3236   0041A0  D7FE               	bra	u10487
  3237   0041A2  2E20               	decfsz	??_runPWM^0,f,c
  3238   0041A4  D7FC               	bra	u10487
  3239   0041A6  2E21               	decfsz	(??_runPWM+1)^0,f,c
  3240   0041A8  D7FA               	bra	u10487
  3241   0041AA  0000               	nop	
  3242   0041AC                     
  3243                           ;PWM.c: 65:         if(PORTAbits.RA2){
  3244   0041AC  A480               	btfss	128,2,c	;volatile
  3245   0041AE  EFDB  F020         	goto	u9981
  3246   0041B2  EFDD  F020         	goto	u9980
  3247   0041B6                     u9981:
  3248   0041B6  EFE6  F020         	goto	l522
  3249   0041BA                     u9980:
  3250   0041BA                     l534:
  3251   0041BA  B480               	btfsc	128,2,c	;volatile
  3252   0041BC  EFE2  F020         	goto	u9991
  3253   0041C0  EFE4  F020         	goto	u9990
  3254   0041C4                     u9991:
  3255   0041C4  EFDD  F020         	goto	l534
  3256   0041C8                     u9990:
  3257   0041C8                     
  3258                           ;PWM.c: 67:             keepState = 0;
  3259   0041C8  0E00               	movlw	0
  3260   0041CA  6E22               	movwf	runPWM@keepState^0,c
  3261   0041CC                     l522:
  3262                           
  3263                           ;PWM.c: 47:     while(keepState){
  3264   0041CC  5022               	movf	runPWM@keepState^0,w,c
  3265   0041CE  A4D8               	btfss	status,2,c
  3266   0041D0  EFEC  F020         	goto	u10001
  3267   0041D4  EFEE  F020         	goto	u10000
  3268   0041D8                     u10001:
  3269   0041D8  EF7C  F020         	goto	l8128
  3270   0041DC                     u10000:
  3271   0041DC                     
  3272                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3273   0041DC  0EF0               	movlw	-16
  3274   0041DE  16BD               	andwf	189,f,c	;volatile
  3275   0041E0                     
  3276                           ;PWM.c: 75:     TMR2ON = 0;
  3277   0041E0  94BA               	bcf	4026,2,c	;volatile
  3278   0041E2                     
  3279                           ;PWM.c: 76:     TMR2IE = 0;
  3280   0041E2  929D               	bcf	3997,1,c	;volatile
  3281   0041E4  0012               	return		;funcret
  3282   0041E6                     __end_of_runPWM:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _runMUSIC *****************
  3286 ;; Defined at:
  3287 ;;		line 10 in file "MUSIC.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		None
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 1
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text4
  3316   005356                     __ptext4:
  3317                           	callstack 0
  3318   005356                     _runMUSIC:
  3319                           	callstack 29
  3320   005356  0012               	return		;funcret
  3321   005358                     __end_of_runMUSIC:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _runGPIO *****************
  3325 ;; Defined at:
  3326 ;;		line 19 in file "GPIO.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  j               2   35[COMRAM] int 
  3331 ;;  states         12    8[COMRAM] unsigned char [12]
  3332 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3333 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3334 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3335 ;;  numberOfStat    2   32[COMRAM] int 
  3336 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:       31 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 2
  3353 ;; This function calls:
  3354 ;;		_LED1_Control
  3355 ;;		_LED2_Control
  3356 ;;		_LED3_Control
  3357 ;;		_LED4_Control
  3358 ;;		_LED5_Control
  3359 ;;		_LED6_Control
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text5
  3366   003F34                     __ptext5:
  3367                           	callstack 0
  3368   003F34                     _runGPIO:
  3369                           	callstack 28
  3370   003F34                     
  3371                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3372   003F34  9495               	bcf	149,2,c	;volatile
  3373                           
  3374                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3375   003F36  9695               	bcf	149,3,c	;volatile
  3376                           
  3377                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3378   003F38  9894               	bcf	148,4,c	;volatile
  3379                           
  3380                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3381   003F3A  9895               	bcf	149,4,c	;volatile
  3382                           
  3383                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3384   003F3C  9A95               	bcf	149,5,c	;volatile
  3385                           
  3386                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3387   003F3E  9C95               	bcf	149,6,c	;volatile
  3388                           
  3389                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3390   003F40  010F               	movlb	15	; () banked
  3391   003F42  953B               	bcf	59,2,b	;volatile
  3392                           
  3393                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3394   003F44  973B               	bcf	59,3,b	;volatile
  3395                           
  3396                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3397   003F46  993A               	bcf	58,4,b	;volatile
  3398                           
  3399                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3400   003F48  993B               	bcf	59,4,b	;volatile
  3401                           
  3402                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3403   003F4A  9B3B               	bcf	59,5,b	;volatile
  3404                           
  3405                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3406   003F4C  9D3B               	bcf	59,6,b	;volatile
  3407                           
  3408                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3409   003F4E  848C               	bsf	140,2,c	;volatile
  3410                           
  3411                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3412   003F50  868C               	bsf	140,3,c	;volatile
  3413                           
  3414                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3415   003F52  888B               	bsf	139,4,c	;volatile
  3416                           
  3417                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3418   003F54  888C               	bsf	140,4,c	;volatile
  3419                           
  3420                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3421   003F56  8A8C               	bsf	140,5,c	;volatile
  3422                           
  3423                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3424   003F58  8C8C               	bsf	140,6,c	;volatile
  3425                           
  3426                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3427   003F5A  8492               	bsf	146,2,c	;volatile
  3428                           
  3429                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3430   003F5C  9538               	bcf	56,2,b	;volatile
  3431   003F5E                     
  3432                           ; BSR set to: 15
  3433                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3434   003F5E  0E3F               	movlw	-193
  3435   003F60  16CD               	andwf	205,f,c	;volatile
  3436                           
  3437                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3438   003F62  0E30               	movlw	48
  3439   003F64  12CD               	iorwf	205,f,c	;volatile
  3440   003F66                     
  3441                           ; BSR set to: 15
  3442                           ;GPIO.c: 49:     TMR1IE = 1;
  3443   003F66  809D               	bsf	3997,0,c	;volatile
  3444   003F68                     
  3445                           ; BSR set to: 15
  3446                           ;GPIO.c: 50:     PEIE = 1;
  3447   003F68  8CF2               	bsf	4082,6,c	;volatile
  3448   003F6A                     
  3449                           ; BSR set to: 15
  3450                           ;GPIO.c: 51:     GIE = 1;
  3451   003F6A  8EF2               	bsf	4082,7,c	;volatile
  3452                           
  3453                           ;GPIO.c: 52:     GPIOIE = 1;
  3454   003F6C  0E01               	movlw	1
  3455   003F6E  0101               	movlb	1	; () banked
  3456   003F70  6F26               	movwf	_GPIOIE& (0+255),b
  3457   003F72                     
  3458                           ; BSR set to: 1
  3459                           ;GPIO.c: 53:     TMR1IF = 1;
  3460   003F72  809E               	bsf	3998,0,c	;volatile
  3461                           
  3462                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3463   003F74  0E9E               	movlw	158
  3464   003F76  6ECF               	movwf	207,c	;volatile
  3465   003F78  0E58               	movlw	88
  3466   003F7A  6ECE               	movwf	206,c	;volatile
  3467   003F7C                     
  3468                           ; BSR set to: 1
  3469                           ;GPIO.c: 55:     TMR1ON = 1;
  3470   003F7C  80CD               	bsf	4045,0,c	;volatile
  3471                           
  3472                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3473   003F7E  0E01               	movlw	1
  3474   003F80  0100               	movlb	0	; () banked
  3475   003F82  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3476   003F84                     
  3477                           ; BSR set to: 0
  3478                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3479   003F84  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3480   003F88  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3481   003F8C  0E0B               	movlw	11
  3482   003F8E                     u9751:
  3483   003F8E  CFDB FFE3          	movff	plusw2,plusw1
  3484   003F92  06E8               	decf	wreg,f,c
  3485   003F94  E2FC               	bc	u9751
  3486   003F96                     
  3487                           ; BSR set to: 0
  3488                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3489   003F96  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3490   003F9A  EE10  F009         	lfsr	1,runGPIO@states
  3491   003F9E  0E0B               	movlw	11
  3492   003FA0                     u9761:
  3493   003FA0  CFDB FFE3          	movff	plusw2,plusw1
  3494   003FA4  06E8               	decf	wreg,f,c
  3495   003FA6  E2FC               	bc	u9761
  3496                           
  3497                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3498   003FA8  0E00               	movlw	0
  3499   003FAA  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3500   003FAC  0E0C               	movlw	12
  3501   003FAE  6E21               	movwf	runGPIO@numberOfStates^0,c
  3502                           
  3503                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3504   003FB0  0E00               	movlw	0
  3505   003FB2  6E23               	movwf	runGPIO@GPIOi^0,c
  3506                           
  3507                           ;GPIO.c: 66:     while(keepStateGPIO){
  3508   003FB4  EF3B  F020         	goto	l372
  3509   003FB8                     l8030:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3513   003FB8  0E00               	movlw	0
  3514   003FBA  6E25               	movwf	(runGPIO@j+1)^0,c
  3515   003FBC  0E00               	movlw	0
  3516   003FBE  6E24               	movwf	runGPIO@j^0,c
  3517   003FC0                     l8036:
  3518                           
  3519                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3520   003FC0  5024               	movf	runGPIO@j^0,w,c
  3521   003FC2  0D02               	mullw	2
  3522   003FC4  50F3               	movf	243,w,c
  3523   003FC6  0F15               	addlw	low runGPIO@LEDControl
  3524   003FC8  6ED9               	movwf	fsr2l,c
  3525   003FCA  6ADA               	clrf	fsr2h,c
  3526   003FCC  D802               	call	u9778
  3527   003FCE  EF0D  F020         	goto	u9779
  3528   003FD2                     u9778:
  3529   003FD2  0005               	push	
  3530   003FD4  6EFA               	movwf	pclath,c
  3531   003FD6  50DE               	movf	postinc2,w,c
  3532   003FD8  6EFD               	movwf	tosl,c
  3533   003FDA  50DE               	movf	postinc2,w,c
  3534   003FDC  6EFE               	movwf	tosh,c
  3535   003FDE  50F8               	movf	tblptru,w,c
  3536   003FE0  6EFF               	movwf	tosu,c
  3537   003FE2  50FA               	movf	pclath,w,c
  3538   003FE4  5024               	movf	runGPIO@j^0,w,c
  3539   003FE6  0805               	sublw	5
  3540   003FE8  6E07               	movwf	??_runGPIO^0,c
  3541   003FEA  5023               	movf	runGPIO@GPIOi^0,w,c
  3542   003FEC  0F09               	addlw	low runGPIO@states
  3543   003FEE  6ED9               	movwf	fsr2l,c
  3544   003FF0  6ADA               	clrf	fsr2h,c
  3545   003FF2  50DF               	movf	indf2,w,c
  3546   003FF4  6E08               	movwf	(??_runGPIO+1)^0,c
  3547   003FF6  2A07               	incf	??_runGPIO^0,f,c
  3548   003FF8  EF00  F020         	goto	u9784
  3549   003FFC                     u9785:
  3550   003FFC  90D8               	bcf	status,0,c
  3551   003FFE  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3552   004000                     u9784:
  3553   004000  2E07               	decfsz	??_runGPIO^0,f,c
  3554   004002  EFFE  F01F         	goto	u9785
  3555   004006  A008               	btfss	(??_runGPIO+1)^0,0,c
  3556   004008  EF08  F020         	goto	u9791
  3557   00400C  EF0B  F020         	goto	u9790
  3558   004010                     u9791:
  3559   004010  0E01               	movlw	1
  3560   004012  EF0C  F020         	goto	u9800
  3561   004016                     u9790:
  3562   004016  0E00               	movlw	0
  3563   004018                     u9800:
  3564   004018  0012               	return		;indir
  3565   00401A                     u9779:
  3566   00401A                     
  3567                           ;GPIO.c: 70:         }
  3568   00401A  4A24               	infsnz	runGPIO@j^0,f,c
  3569   00401C  2A25               	incf	(runGPIO@j+1)^0,f,c
  3570   00401E  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3571   004020  EF1B  F020         	goto	u9811
  3572   004024  5025               	movf	(runGPIO@j+1)^0,w,c
  3573   004026  E109               	bnz	u9810
  3574   004028  0E06               	movlw	6
  3575   00402A  5C24               	subwf	runGPIO@j^0,w,c
  3576   00402C  A0D8               	btfss	status,0,c
  3577   00402E  EF1B  F020         	goto	u9811
  3578   004032  EF1D  F020         	goto	u9810
  3579   004036                     u9811:
  3580   004036  EFE0  F01F         	goto	l8036
  3581   00403A                     u9810:
  3582   00403A                     
  3583                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3584   00403A  0E11               	movlw	17
  3585   00403C  6E08               	movwf	(??_runGPIO+1)^0,c
  3586   00403E  0E3C               	movlw	60
  3587   004040  6E07               	movwf	??_runGPIO^0,c
  3588   004042  0ECB               	movlw	203
  3589   004044                     u10497:
  3590   004044  2EE8               	decfsz	wreg,f,c
  3591   004046  D7FE               	bra	u10497
  3592   004048  2E07               	decfsz	??_runGPIO^0,f,c
  3593   00404A  D7FC               	bra	u10497
  3594   00404C  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3595   00404E  D7FA               	bra	u10497
  3596   004050  0000               	nop	
  3597   004052                     
  3598                           ;GPIO.c: 72:         GPIOi++;
  3599   004052  2A23               	incf	runGPIO@GPIOi^0,f,c
  3600                           
  3601                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3602   004054  5023               	movf	runGPIO@GPIOi^0,w,c
  3603   004056  6E07               	movwf	??_runGPIO^0,c
  3604   004058  6A08               	clrf	(??_runGPIO+1)^0,c
  3605   00405A  5021               	movf	runGPIO@numberOfStates^0,w,c
  3606   00405C  1807               	xorwf	??_runGPIO^0,w,c
  3607   00405E  E107               	bnz	u9821
  3608   004060  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3609   004062  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3610   004064  A4D8               	btfss	status,2,c
  3611   004066  EF37  F020         	goto	u9821
  3612   00406A  EF39  F020         	goto	u9820
  3613   00406E                     u9821:
  3614   00406E  EF3B  F020         	goto	l372
  3615   004072                     u9820:
  3616   004072                     
  3617                           ;GPIO.c: 74:             GPIOi = 0;
  3618   004072  0E00               	movlw	0
  3619   004074  6E23               	movwf	runGPIO@GPIOi^0,c
  3620   004076                     l372:
  3621                           
  3622                           ;GPIO.c: 66:     while(keepStateGPIO){
  3623   004076  0100               	movlb	0	; () banked
  3624   004078  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3625   00407A  A4D8               	btfss	status,2,c
  3626   00407C  EF42  F020         	goto	u9831
  3627   004080  EF44  F020         	goto	u9830
  3628   004084                     u9831:
  3629   004084  EFDC  F01F         	goto	l8030
  3630   004088                     u9830:
  3631   004088                     
  3632                           ; BSR set to: 0
  3633                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3634   004088  848C               	bsf	140,2,c	;volatile
  3635                           
  3636                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3637   00408A  868C               	bsf	140,3,c	;volatile
  3638                           
  3639                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3640   00408C  888B               	bsf	139,4,c	;volatile
  3641                           
  3642                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3643   00408E  888C               	bsf	140,4,c	;volatile
  3644                           
  3645                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3646   004090  8A8C               	bsf	140,5,c	;volatile
  3647                           
  3648                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3649   004092  8C8C               	bsf	140,6,c	;volatile
  3650                           
  3651                           ;GPIO.c: 85:     TMR1ON = 0;
  3652   004094  90CD               	bcf	4045,0,c	;volatile
  3653                           
  3654                           ;GPIO.c: 86:     TMR1IE = 0;
  3655   004096  909D               	bcf	3997,0,c	;volatile
  3656   004098                     
  3657                           ; BSR set to: 0
  3658                           ;GPIO.c: 87:     GPIOIE = 0;
  3659   004098  0E00               	movlw	0
  3660   00409A  0101               	movlb	1	; () banked
  3661   00409C  6F26               	movwf	_GPIOIE& (0+255),b
  3662   00409E                     
  3663                           ; BSR set to: 1
  3664   00409E  0012               	return		;funcret
  3665   0040A0                     __end_of_runGPIO:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _LED5_Control *****************
  3669 ;; Defined at:
  3670 ;;		line 14 in file "GPIO.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  state           1    wreg     unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  state           1    5[COMRAM] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;Total ram usage:        1 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 1
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_runGPIO
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text6
  3699   005302                     __ptext6:
  3700                           	callstack 0
  3701   005302                     _LED5_Control:
  3702                           	callstack 28
  3703                           
  3704                           ; BSR set to: 1
  3705                           ;incstack = 0
  3706                           ;LED5_Control@state stored from wreg
  3707   005302  6E06               	movwf	LED5_Control@state^0,c
  3708   005304  B006               	btfsc	LED5_Control@state^0,0,c
  3709   005306  D002               	bra	u9635
  3710   005308  9A8C               	bcf	140,5,c	;volatile
  3711   00530A  D001               	bra	u9636
  3712   00530C                     u9635:
  3713   00530C  8A8C               	bsf	140,5,c	;volatile
  3714   00530E                     u9636:
  3715   00530E  0012               	return		;funcret
  3716   005310                     __end_of_LED5_Control:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _LED4_Control *****************
  3720 ;; Defined at:
  3721 ;;		line 13 in file "GPIO.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  state           1    wreg     unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  state           1    5[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;Total ram usage:        1 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_runGPIO
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text7
  3750   005310                     __ptext7:
  3751                           	callstack 0
  3752   005310                     _LED4_Control:
  3753                           	callstack 28
  3754                           
  3755                           ;incstack = 0
  3756                           ;LED4_Control@state stored from wreg
  3757   005310  6E06               	movwf	LED4_Control@state^0,c
  3758   005312  B006               	btfsc	LED4_Control@state^0,0,c
  3759   005314  D002               	bra	u9625
  3760   005316  988C               	bcf	140,4,c	;volatile
  3761   005318  D001               	bra	u9626
  3762   00531A                     u9625:
  3763   00531A  888C               	bsf	140,4,c	;volatile
  3764   00531C                     u9626:
  3765   00531C  0012               	return		;funcret
  3766   00531E                     __end_of_LED4_Control:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function _LED3_Control *****************
  3770 ;; Defined at:
  3771 ;;		line 12 in file "GPIO.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  state           1    wreg     unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  state           1    5[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;Total ram usage:        1 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_runGPIO
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text8
  3800   00531E                     __ptext8:
  3801                           	callstack 0
  3802   00531E                     _LED3_Control:
  3803                           	callstack 28
  3804                           
  3805                           ;incstack = 0
  3806                           ;LED3_Control@state stored from wreg
  3807   00531E  6E06               	movwf	LED3_Control@state^0,c
  3808   005320  B006               	btfsc	LED3_Control@state^0,0,c
  3809   005322  D002               	bra	u9615
  3810   005324  988B               	bcf	139,4,c	;volatile
  3811   005326  D001               	bra	u9616
  3812   005328                     u9615:
  3813   005328  888B               	bsf	139,4,c	;volatile
  3814   00532A                     u9616:
  3815   00532A  0012               	return		;funcret
  3816   00532C                     __end_of_LED3_Control:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function _LED2_Control *****************
  3820 ;; Defined at:
  3821 ;;		line 11 in file "GPIO.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  state           1    wreg     unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  state           1    5[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        1 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 1
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_runGPIO
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text9
  3850   00532C                     __ptext9:
  3851                           	callstack 0
  3852   00532C                     _LED2_Control:
  3853                           	callstack 28
  3854                           
  3855                           ;incstack = 0
  3856                           ;LED2_Control@state stored from wreg
  3857   00532C  6E06               	movwf	LED2_Control@state^0,c
  3858   00532E  B006               	btfsc	LED2_Control@state^0,0,c
  3859   005330  D002               	bra	u9605
  3860   005332  968C               	bcf	140,3,c	;volatile
  3861   005334  D001               	bra	u9606
  3862   005336                     u9605:
  3863   005336  868C               	bsf	140,3,c	;volatile
  3864   005338                     u9606:
  3865   005338  0012               	return		;funcret
  3866   00533A                     __end_of_LED2_Control:
  3867                           	callstack 0
  3868                           
  3869 ;; *************** function _LED1_Control *****************
  3870 ;; Defined at:
  3871 ;;		line 10 in file "GPIO.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  state           1    wreg     unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  state           1    5[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;Total ram usage:        1 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_runGPIO
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text10
  3900   00533A                     __ptext10:
  3901                           	callstack 0
  3902   00533A                     _LED1_Control:
  3903                           	callstack 28
  3904                           
  3905                           ;incstack = 0
  3906                           ;LED1_Control@state stored from wreg
  3907   00533A  6E06               	movwf	LED1_Control@state^0,c
  3908   00533C  B006               	btfsc	LED1_Control@state^0,0,c
  3909   00533E  D002               	bra	u9595
  3910   005340  948C               	bcf	140,2,c	;volatile
  3911   005342  D001               	bra	u9596
  3912   005344                     u9595:
  3913   005344  848C               	bsf	140,2,c	;volatile
  3914   005346                     u9596:
  3915   005346  0012               	return		;funcret
  3916   005348                     __end_of_LED1_Control:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _LED6_Control *****************
  3920 ;; Defined at:
  3921 ;;		line 15 in file "GPIO.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  state           1    wreg     unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  state           1    5[COMRAM] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;Total ram usage:        1 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 1
  3942 ;; This function calls:
  3943 ;;		Nothing
  3944 ;; This function is called by:
  3945 ;;		_runGPIO
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text11
  3950   005348                     __ptext11:
  3951                           	callstack 0
  3952   005348                     _LED6_Control:
  3953                           	callstack 28
  3954                           
  3955                           ;incstack = 0
  3956                           ;LED6_Control@state stored from wreg
  3957   005348  6E06               	movwf	LED6_Control@state^0,c
  3958   00534A  B006               	btfsc	LED6_Control@state^0,0,c
  3959   00534C  D002               	bra	u9645
  3960   00534E  9C8C               	bcf	140,6,c	;volatile
  3961   005350  D001               	bra	u9646
  3962   005352                     u9645:
  3963   005352  8C8C               	bsf	140,6,c	;volatile
  3964   005354                     u9646:
  3965   005354  0012               	return		;funcret
  3966   005356                     __end_of_LED6_Control:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _runGAME *****************
  3970 ;; Defined at:
  3971 ;;		line 10 in file "GAME.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  approxText     25   17[BANK1 ] unsigned char [25]
  3976 ;;  text           17    0[BANK1 ] unsigned char [17]
  3977 ;;  randomNumber    2   48[BANK1 ] unsigned short 
  3978 ;;  pot1            2   46[BANK1 ] unsigned short 
  3979 ;;  GAMEdivider     1   45[BANK1 ] unsigned char 
  3980 ;;  GAMEround       1   44[BANK1 ] unsigned char 
  3981 ;;  GAMEpart        1   43[BANK1 ] unsigned char 
  3982 ;;  keepStateGAM    1   42[BANK1 ] unsigned char 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:       52 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 9
  3999 ;; This function calls:
  4000 ;;		_LCD_ShowString
  4001 ;;		___awdiv
  4002 ;;		___lbdiv
  4003 ;;		_rand
  4004 ;;		_sprintf
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text12
  4011   001E9E                     __ptext12:
  4012                           	callstack 0
  4013   001E9E                     _runGAME:
  4014                           	callstack 21
  4015   001E9E                     
  4016                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  4017   001E9E  9495               	bcf	149,2,c	;volatile
  4018                           
  4019                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  4020   001EA0  9695               	bcf	149,3,c	;volatile
  4021                           
  4022                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  4023   001EA2  9894               	bcf	148,4,c	;volatile
  4024                           
  4025                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  4026   001EA4  9895               	bcf	149,4,c	;volatile
  4027                           
  4028                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  4029   001EA6  9A95               	bcf	149,5,c	;volatile
  4030                           
  4031                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  4032   001EA8  9C95               	bcf	149,6,c	;volatile
  4033                           
  4034                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  4035   001EAA  010F               	movlb	15	; () banked
  4036   001EAC  953B               	bcf	59,2,b	;volatile
  4037                           
  4038                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  4039   001EAE  973B               	bcf	59,3,b	;volatile
  4040                           
  4041                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  4042   001EB0  993A               	bcf	58,4,b	;volatile
  4043                           
  4044                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  4045   001EB2  993B               	bcf	59,4,b	;volatile
  4046                           
  4047                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  4048   001EB4  9B3B               	bcf	59,5,b	;volatile
  4049                           
  4050                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  4051   001EB6  9D3B               	bcf	59,6,b	;volatile
  4052                           
  4053                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  4054   001EB8  848C               	bsf	140,2,c	;volatile
  4055                           
  4056                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  4057   001EBA  868C               	bsf	140,3,c	;volatile
  4058                           
  4059                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  4060   001EBC  888B               	bsf	139,4,c	;volatile
  4061                           
  4062                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  4063   001EBE  888C               	bsf	140,4,c	;volatile
  4064                           
  4065                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  4066   001EC0  8A8C               	bsf	140,5,c	;volatile
  4067                           
  4068                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  4069   001EC2  8C8C               	bsf	140,6,c	;volatile
  4070                           
  4071                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  4072   001EC4  8492               	bsf	146,2,c	;volatile
  4073                           
  4074                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  4075   001EC6  9538               	bcf	56,2,b	;volatile
  4076                           
  4077                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  4078   001EC8  8B38               	bsf	56,5,b	;volatile
  4079                           
  4080                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  4081   001ECA  8EC0               	bsf	192,7,c	;volatile
  4082   001ECC                     
  4083                           ; BSR set to: 15
  4084                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  4085   001ECC  50C0               	movf	192,w,c	;volatile
  4086   001ECE  0BF8               	andlw	-8
  4087   001ED0  0906               	iorlw	6
  4088   001ED2  6EC0               	movwf	192,c	;volatile
  4089                           
  4090                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  4091   001ED4  50C0               	movf	192,w,c	;volatile
  4092   001ED6  0BC7               	andlw	-57
  4093   001ED8  0930               	iorlw	48
  4094   001EDA  6EC0               	movwf	192,c	;volatile
  4095   001EDC                     
  4096                           ; BSR set to: 15
  4097                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  4098   001EDC  80C2               	bsf	194,0,c	;volatile
  4099   001EDE                     
  4100                           ; BSR set to: 15
  4101                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  4102   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  4103   001EE2  0E10               	movlw	16
  4104   001EE4                     u10161:
  4105   001EE4  6ADE               	clrf	postinc2,c
  4106   001EE6  06E8               	decf	wreg,f,c
  4107   001EE8  E2FD               	bc	u10161
  4108   001EEA                     
  4109                           ; BSR set to: 15
  4110                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 48:     T1CONbits.TMR1CS = 0b00;
  4111   001EEA  0E3F               	movlw	-193
  4112   001EEC  16CD               	andwf	205,f,c	;volatile
  4113   001EEE                     
  4114                           ; BSR set to: 15
  4115                           ;GAME.c: 49:     T1CONbits.T1CKPS = 0b11;
  4116   001EEE  0E30               	movlw	48
  4117   001EF0  12CD               	iorwf	205,f,c	;volatile
  4118   001EF2                     
  4119                           ; BSR set to: 15
  4120                           ;GAME.c: 50:     TMR1IE = 1;
  4121   001EF2  809D               	bsf	3997,0,c	;volatile
  4122   001EF4                     
  4123                           ; BSR set to: 15
  4124                           ;GAME.c: 51:     PEIE = 1;
  4125   001EF4  8CF2               	bsf	4082,6,c	;volatile
  4126   001EF6                     
  4127                           ; BSR set to: 15
  4128                           ;GAME.c: 52:     GIE = 1;
  4129   001EF6  8EF2               	bsf	4082,7,c	;volatile
  4130   001EF8                     
  4131                           ; BSR set to: 15
  4132                           ;GAME.c: 53:     GAMEIE = 1;
  4133   001EF8  0E01               	movlw	1
  4134   001EFA  0101               	movlb	1	; () banked
  4135   001EFC  6F24               	movwf	_GAMEIE& (0+255),b
  4136   001EFE                     
  4137                           ; BSR set to: 1
  4138                           ;GAME.c: 54:     TMR1IF = 1;
  4139   001EFE  809E               	bsf	3998,0,c	;volatile
  4140   001F00                     
  4141                           ; BSR set to: 1
  4142                           ;GAME.c: 55:     TMR1 = 0xFFFF - (62500 - 1);
  4143   001F00  0E0B               	movlw	11
  4144   001F02  6ECF               	movwf	207,c	;volatile
  4145   001F04  0EDC               	movlw	220
  4146   001F06  6ECE               	movwf	206,c	;volatile
  4147   001F08                     
  4148                           ; BSR set to: 1
  4149                           ;GAME.c: 56:     TMR1ON = 1;
  4150   001F08  80CD               	bsf	4045,0,c	;volatile
  4151   001F0A                     
  4152                           ; BSR set to: 1
  4153                           ;GAME.c: 58:     GAMEtime = 0;
  4154   001F0A  0E00               	movlw	0
  4155   001F0C  6F23               	movwf	_GAMEtime& (0+255),b
  4156   001F0E                     
  4157                           ; BSR set to: 1
  4158                           ;GAME.c: 59:     uint8_t GAMEround = 1;
  4159   001F0E  0E01               	movlw	1
  4160   001F10  6FC7               	movwf	runGAME@GAMEround& (0+255),b
  4161   001F12                     
  4162                           ; BSR set to: 1
  4163                           ;GAME.c: 62:     char approxText[25] = "";
  4164   001F12  EE21  F0AC         	lfsr	2,runGAME@approxText
  4165   001F16  0E18               	movlw	24
  4166   001F18                     u10171:
  4167   001F18  6ADE               	clrf	postinc2,c
  4168   001F1A  06E8               	decf	wreg,f,c
  4169   001F1C  E2FD               	bc	u10171
  4170   001F1E                     
  4171                           ; BSR set to: 1
  4172                           ;GAME.c: 65:     uint16_t randomNumber;;GAME.c: 66:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  4173   001F1E  EC93  F026         	call	_rand
  4174   001F22  C012  F018         	movff	?_rand,___awdiv@dividend
  4175   001F26  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4176   001F2A  0E00               	movlw	0
  4177   001F2C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4178   001F2E  0E21               	movlw	33
  4179   001F30  6E1A               	movwf	___awdiv@divisor^0,c
  4180   001F32  EC4B  F024         	call	___awdiv	;wreg free
  4181   001F36  0E02               	movlw	2
  4182   001F38  2418               	addwf	?___awdiv^0,w,c
  4183   001F3A  0101               	movlb	1	; () banked
  4184   001F3C  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4185   001F3E  0E00               	movlw	0
  4186   001F40  2019               	addwfc	(?___awdiv+1)^0,w,c
  4187   001F42  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4188   001F44                     
  4189                           ; BSR set to: 1
  4190                           ;GAME.c: 67:     sprintf(approxText, "%u                ", randomNumber);
  4191   001F44  0EAC               	movlw	low runGAME@approxText
  4192   001F46  0100               	movlb	0	; () banked
  4193   001F48  6FCE               	movwf	sprintf@s& (0+255),b
  4194   001F4A  0E01               	movlw	high runGAME@approxText
  4195   001F4C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4196   001F4E  0E33               	movlw	low STR_35
  4197   001F50  6FD0               	movwf	sprintf@fmt& (0+255),b
  4198   001F52  0EFE               	movlw	high STR_35
  4199   001F54  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4200   001F56  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4201   001F5A  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4202   001F5E  EC25  F028         	call	_sprintf	;wreg free
  4203   001F62                     
  4204                           ;GAME.c: 68:     LCD_ShowString((char)1, approxText);
  4205   001F62  0EAC               	movlw	low runGAME@approxText
  4206   001F64  6E07               	movwf	LCD_ShowString@textData^0,c
  4207   001F66  0E01               	movlw	high runGAME@approxText
  4208   001F68  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4209   001F6A  0E01               	movlw	1
  4210   001F6C  ECAD  F024         	call	_LCD_ShowString
  4211   001F70                     
  4212                           ;GAME.c: 69:     keepStateGAME = 1;
  4213   001F70  0E01               	movlw	1
  4214   001F72  0101               	movlb	1	; () banked
  4215   001F74  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4216                           
  4217                           ;GAME.c: 72:     while(keepStateGAME){
  4218   001F76  EF36  F011         	goto	l8384
  4219   001F7A                     l8318:
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;GAME.c: 74:         ADCON0bits.CHS = 4;
  4223   001F7A  50C2               	movf	194,w,c	;volatile
  4224   001F7C  0B83               	andlw	-125
  4225   001F7E  0910               	iorlw	16
  4226   001F80  6EC2               	movwf	194,c	;volatile
  4227   001F82                     
  4228                           ; BSR set to: 1
  4229                           ;GAME.c: 75:         GODONE = 1;
  4230   001F82  82C2               	bsf	4034,1,c	;volatile
  4231   001F84                     l664:
  4232   001F84  B2C2               	btfsc	4034,1,c	;volatile
  4233   001F86  EFC7  F00F         	goto	u10181
  4234   001F8A  EFC9  F00F         	goto	u10180
  4235   001F8E                     u10181:
  4236   001F8E  EFC2  F00F         	goto	l664
  4237   001F92                     u10180:
  4238   001F92                     
  4239                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  4240   001F92  50C3               	movf	195,w,c	;volatile
  4241   001F94  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  4242   001F98  0100               	movlb	0	; () banked
  4243   001F9A  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  4244   001F9C  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  4245   001FA0  6BE7               	clrf	??_runGAME& (0+255),b
  4246   001FA2  11E7               	iorwf	??_runGAME& (0+255),w,b
  4247   001FA4  0101               	movlb	1	; () banked
  4248   001FA6  6FC9               	movwf	runGAME@pot1& (0+255),b
  4249   001FA8  0100               	movlb	0	; () banked
  4250   001FAA  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4251   001FAC  0101               	movlb	1	; () banked
  4252   001FAE  6FCA               	movwf	(runGAME@pot1+1)& (0+255),b
  4253   001FB0                     
  4254                           ; BSR set to: 1
  4255                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  4256   001FB0  0E9B               	movlw	low runGAME@text
  4257   001FB2  0100               	movlb	0	; () banked
  4258   001FB4  6FCE               	movwf	sprintf@s& (0+255),b
  4259   001FB6  0E01               	movlw	high runGAME@text
  4260   001FB8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4261   001FBA  0E6B               	movlw	low STR_36
  4262   001FBC  6FD0               	movwf	sprintf@fmt& (0+255),b
  4263   001FBE  0EFE               	movlw	high STR_36
  4264   001FC0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4265   001FC2  C1C9  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4266   001FC6  C1CA  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4267   001FCA  EC25  F028         	call	_sprintf	;wreg free
  4268   001FCE                     
  4269                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4270   001FCE  0E9B               	movlw	low runGAME@text
  4271   001FD0  6E07               	movwf	LCD_ShowString@textData^0,c
  4272   001FD2  0E01               	movlw	high runGAME@text
  4273   001FD4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4274   001FD6  0E02               	movlw	2
  4275   001FD8  ECAD  F024         	call	_LCD_ShowString
  4276                           
  4277                           ;GAME.c: 82:         switch(GAMEround){
  4278   001FDC  EF04  F010         	goto	l8340
  4279   001FE0                     l8328:
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;GAME.c: 84:                 GAMEdivider = 26;
  4283   001FE0  0E1A               	movlw	26
  4284   001FE2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4285                           
  4286                           ;GAME.c: 85:                 break;
  4287   001FE4  EF18  F010         	goto	l8342
  4288   001FE8                     l8330:
  4289                           
  4290                           ; BSR set to: 1
  4291                           ;GAME.c: 87:                 GAMEdivider = 24;
  4292   001FE8  0E18               	movlw	24
  4293   001FEA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4294                           
  4295                           ;GAME.c: 88:                 break;
  4296   001FEC  EF18  F010         	goto	l8342
  4297   001FF0                     l8332:
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;GAME.c: 90:                 GAMEdivider = 18;
  4301   001FF0  0E12               	movlw	18
  4302   001FF2  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4303                           
  4304                           ;GAME.c: 91:                 break;
  4305   001FF4  EF18  F010         	goto	l8342
  4306   001FF8                     l8334:
  4307                           
  4308                           ; BSR set to: 1
  4309                           ;GAME.c: 93:                 GAMEdivider = 16;
  4310   001FF8  0E10               	movlw	16
  4311   001FFA  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4312                           
  4313                           ;GAME.c: 94:                 break;
  4314   001FFC  EF18  F010         	goto	l8342
  4315   002000                     l8336:
  4316                           
  4317                           ; BSR set to: 1
  4318                           ;GAME.c: 96:                 GAMEdivider = 15;
  4319   002000  0E0F               	movlw	15
  4320   002002  6FC8               	movwf	runGAME@GAMEdivider& (0+255),b
  4321                           
  4322                           ;GAME.c: 97:                 break;
  4323   002004  EF18  F010         	goto	l8342
  4324   002008                     l8340:
  4325   002008  0101               	movlb	1	; () banked
  4326   00200A  51C7               	movf	runGAME@GAMEround& (0+255),w,b
  4327                           
  4328                           ; Switch size 1, requested type "simple"
  4329                           ; Number of cases is 4, Range of values is 1 to 4
  4330                           ; switch strategies available:
  4331                           ; Name         Instructions Cycles
  4332                           ; simple_byte           13     7 (average)
  4333                           ;	Chosen strategy is simple_byte
  4334   00200C  0A01               	xorlw	1	; case 1
  4335   00200E  B4D8               	btfsc	status,2,c
  4336   002010  EFF0  F00F         	goto	l8328
  4337   002014  0A03               	xorlw	3	; case 2
  4338   002016  B4D8               	btfsc	status,2,c
  4339   002018  EFF4  F00F         	goto	l8330
  4340   00201C  0A01               	xorlw	1	; case 3
  4341   00201E  B4D8               	btfsc	status,2,c
  4342   002020  EFF8  F00F         	goto	l8332
  4343   002024  0A07               	xorlw	7	; case 4
  4344   002026  B4D8               	btfsc	status,2,c
  4345   002028  EFFC  F00F         	goto	l8334
  4346   00202C  EF00  F010         	goto	l8336
  4347   002030                     l8342:
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4351   002030  C1C8  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4352   002034  5123               	movf	_GAMEtime& (0+255),w,b
  4353   002036  EC31  F027         	call	___lbdiv
  4354   00203A  0101               	movlb	1	; () banked
  4355   00203C  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4356   00203E                     
  4357                           ; BSR set to: 1
  4358                           ;GAME.c: 102:         if(PORTAbits.RA2){
  4359   00203E  A480               	btfss	128,2,c	;volatile
  4360   002040  EF24  F010         	goto	u10191
  4361   002044  EF26  F010         	goto	u10190
  4362   002048                     u10191:
  4363   002048  EF12  F011         	goto	l8382
  4364   00204C                     u10190:
  4365   00204C                     
  4366                           ; BSR set to: 1
  4367                           ;GAME.c: 103:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4368   00204C  0E03               	movlw	3
  4369   00204E  0100               	movlb	0	; () banked
  4370   002050  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4371   002052  0E08               	movlw	8
  4372   002054  6FE7               	movwf	??_runGAME& (0+255),b
  4373   002056  0E77               	movlw	119
  4374   002058                     u10507:
  4375   002058  2EE8               	decfsz	wreg,f,c
  4376   00205A  D7FE               	bra	u10507
  4377   00205C  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4378   00205E  D7FC               	bra	u10507
  4379   002060  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4380   002062  D7FA               	bra	u10507
  4381   002064                     
  4382                           ;GAME.c: 104:             if(PORTAbits.RA2){
  4383   002064  A480               	btfss	128,2,c	;volatile
  4384   002066  EF37  F010         	goto	u10201
  4385   00206A  EF39  F010         	goto	u10200
  4386   00206E                     u10201:
  4387   00206E  EF12  F011         	goto	l8382
  4388   002072                     u10200:
  4389   002072                     l676:
  4390   002072  B480               	btfsc	128,2,c	;volatile
  4391   002074  EF3E  F010         	goto	u10211
  4392   002078  EF40  F010         	goto	u10210
  4393   00207C                     u10211:
  4394   00207C  EF39  F010         	goto	l676
  4395   002080                     u10210:
  4396   002080                     
  4397                           ;GAME.c: 106:                 GAMEpart = 7;
  4398   002080  0E07               	movlw	7
  4399   002082  0101               	movlb	1	; () banked
  4400   002084  6FC6               	movwf	runGAME@GAMEpart& (0+255),b
  4401   002086  EF12  F011         	goto	l8382
  4402   00208A                     l680:
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;GAME.c: 112:                 LATDbits.LD2 = 1;
  4406   00208A  848C               	bsf	140,2,c	;volatile
  4407                           
  4408                           ;GAME.c: 113:                 LATDbits.LD3 = 1;
  4409   00208C  868C               	bsf	140,3,c	;volatile
  4410                           
  4411                           ;GAME.c: 114:                 LATCbits.LC4 = 1;
  4412   00208E  888B               	bsf	139,4,c	;volatile
  4413                           
  4414                           ;GAME.c: 115:                 LATDbits.LD4 = 1;
  4415   002090  888C               	bsf	140,4,c	;volatile
  4416                           
  4417                           ;GAME.c: 116:                 LATDbits.LD5 = 1;
  4418   002092  8A8C               	bsf	140,5,c	;volatile
  4419                           
  4420                           ;GAME.c: 117:                 LATDbits.LD6 = 1;
  4421   002094  8C8C               	bsf	140,6,c	;volatile
  4422                           
  4423                           ;GAME.c: 118:                 break;
  4424   002096  EF36  F011         	goto	l8384
  4425   00209A                     l682:
  4426                           
  4427                           ; BSR set to: 1
  4428                           ;GAME.c: 120:                 LATDbits.LD2 = 0;
  4429   00209A  948C               	bcf	140,2,c	;volatile
  4430                           
  4431                           ;GAME.c: 121:                 LATDbits.LD3 = 1;
  4432   00209C  868C               	bsf	140,3,c	;volatile
  4433                           
  4434                           ;GAME.c: 122:                 LATCbits.LC4 = 1;
  4435   00209E  888B               	bsf	139,4,c	;volatile
  4436                           
  4437                           ;GAME.c: 123:                 LATDbits.LD4 = 1;
  4438   0020A0  888C               	bsf	140,4,c	;volatile
  4439                           
  4440                           ;GAME.c: 124:                 LATDbits.LD5 = 1;
  4441   0020A2  8A8C               	bsf	140,5,c	;volatile
  4442                           
  4443                           ;GAME.c: 125:                 LATDbits.LD6 = 1;
  4444   0020A4  8C8C               	bsf	140,6,c	;volatile
  4445                           
  4446                           ;GAME.c: 126:                 break;
  4447   0020A6  EF36  F011         	goto	l8384
  4448   0020AA                     l683:
  4449                           
  4450                           ; BSR set to: 1
  4451                           ;GAME.c: 128:                 LATDbits.LD2 = 0;
  4452   0020AA  948C               	bcf	140,2,c	;volatile
  4453                           
  4454                           ;GAME.c: 129:                 LATDbits.LD3 = 0;
  4455   0020AC  968C               	bcf	140,3,c	;volatile
  4456                           
  4457                           ;GAME.c: 130:                 LATCbits.LC4 = 1;
  4458   0020AE  888B               	bsf	139,4,c	;volatile
  4459                           
  4460                           ;GAME.c: 131:                 LATDbits.LD4 = 1;
  4461   0020B0  888C               	bsf	140,4,c	;volatile
  4462                           
  4463                           ;GAME.c: 132:                 LATDbits.LD5 = 1;
  4464   0020B2  8A8C               	bsf	140,5,c	;volatile
  4465                           
  4466                           ;GAME.c: 133:                 LATDbits.LD6 = 1;
  4467   0020B4  8C8C               	bsf	140,6,c	;volatile
  4468                           
  4469                           ;GAME.c: 134:                 break;
  4470   0020B6  EF36  F011         	goto	l8384
  4471   0020BA                     l684:
  4472                           
  4473                           ; BSR set to: 1
  4474                           ;GAME.c: 136:                 LATDbits.LD2 = 0;
  4475   0020BA  948C               	bcf	140,2,c	;volatile
  4476                           
  4477                           ;GAME.c: 137:                 LATDbits.LD3 = 0;
  4478   0020BC  968C               	bcf	140,3,c	;volatile
  4479                           
  4480                           ;GAME.c: 138:                 LATCbits.LC4 = 0;
  4481   0020BE  988B               	bcf	139,4,c	;volatile
  4482                           
  4483                           ;GAME.c: 139:                 LATDbits.LD4 = 1;
  4484   0020C0  888C               	bsf	140,4,c	;volatile
  4485                           
  4486                           ;GAME.c: 140:                 LATDbits.LD5 = 1;
  4487   0020C2  8A8C               	bsf	140,5,c	;volatile
  4488                           
  4489                           ;GAME.c: 141:                 LATDbits.LD6 = 1;
  4490   0020C4  8C8C               	bsf	140,6,c	;volatile
  4491                           
  4492                           ;GAME.c: 142:                 break;
  4493   0020C6  EF36  F011         	goto	l8384
  4494   0020CA                     l685:
  4495                           
  4496                           ; BSR set to: 1
  4497                           ;GAME.c: 144:                 LATDbits.LD2 = 0;
  4498   0020CA  948C               	bcf	140,2,c	;volatile
  4499                           
  4500                           ;GAME.c: 145:                 LATDbits.LD3 = 0;
  4501   0020CC  968C               	bcf	140,3,c	;volatile
  4502                           
  4503                           ;GAME.c: 146:                 LATCbits.LC4 = 0;
  4504   0020CE  988B               	bcf	139,4,c	;volatile
  4505                           
  4506                           ;GAME.c: 147:                 LATDbits.LD4 = 0;
  4507   0020D0  988C               	bcf	140,4,c	;volatile
  4508                           
  4509                           ;GAME.c: 148:                 LATDbits.LD5 = 1;
  4510   0020D2  8A8C               	bsf	140,5,c	;volatile
  4511                           
  4512                           ;GAME.c: 149:                 LATDbits.LD6 = 1;
  4513   0020D4  8C8C               	bsf	140,6,c	;volatile
  4514                           
  4515                           ;GAME.c: 150:                 break;
  4516   0020D6  EF36  F011         	goto	l8384
  4517   0020DA                     l686:
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;GAME.c: 152:                 LATDbits.LD2 = 0;
  4521   0020DA  948C               	bcf	140,2,c	;volatile
  4522                           
  4523                           ;GAME.c: 153:                 LATDbits.LD3 = 0;
  4524   0020DC  968C               	bcf	140,3,c	;volatile
  4525                           
  4526                           ;GAME.c: 154:                 LATCbits.LC4 = 0;
  4527   0020DE  988B               	bcf	139,4,c	;volatile
  4528                           
  4529                           ;GAME.c: 155:                 LATDbits.LD4 = 0;
  4530   0020E0  988C               	bcf	140,4,c	;volatile
  4531                           
  4532                           ;GAME.c: 156:                 LATDbits.LD5 = 0;
  4533   0020E2  9A8C               	bcf	140,5,c	;volatile
  4534                           
  4535                           ;GAME.c: 157:                 LATDbits.LD6 = 1;
  4536   0020E4  8C8C               	bsf	140,6,c	;volatile
  4537                           
  4538                           ;GAME.c: 158:                 break;
  4539   0020E6  EF36  F011         	goto	l8384
  4540   0020EA                     l687:
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;GAME.c: 160:                 LATDbits.LD2 = 0;
  4544   0020EA  948C               	bcf	140,2,c	;volatile
  4545                           
  4546                           ;GAME.c: 161:                 LATDbits.LD3 = 0;
  4547   0020EC  968C               	bcf	140,3,c	;volatile
  4548                           
  4549                           ;GAME.c: 162:                 LATCbits.LC4 = 0;
  4550   0020EE  988B               	bcf	139,4,c	;volatile
  4551                           
  4552                           ;GAME.c: 163:                 LATDbits.LD4 = 0;
  4553   0020F0  988C               	bcf	140,4,c	;volatile
  4554                           
  4555                           ;GAME.c: 164:                 LATDbits.LD5 = 0;
  4556   0020F2  9A8C               	bcf	140,5,c	;volatile
  4557                           
  4558                           ;GAME.c: 165:                 LATDbits.LD6 = 0;
  4559   0020F4  9C8C               	bcf	140,6,c	;volatile
  4560                           
  4561                           ;GAME.c: 166:                 break;
  4562   0020F6  EF36  F011         	goto	l8384
  4563   0020FA                     l8354:
  4564                           
  4565                           ; BSR set to: 1
  4566                           ;GAME.c: 168:                 GAMEtime = 0;
  4567   0020FA  0E00               	movlw	0
  4568   0020FC  6F23               	movwf	_GAMEtime& (0+255),b
  4569   0020FE                     
  4570                           ; BSR set to: 1
  4571                           ;GAME.c: 169:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4572   0020FE  0EFE               	movlw	254
  4573   002100  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4574   002102  0100               	movlb	0	; () banked
  4575   002104  6FE7               	movwf	??_runGAME& (0+255),b
  4576   002106  0EFF               	movlw	255
  4577   002108  0101               	movlb	1	; () banked
  4578   00210A  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4579   00210C  0100               	movlb	0	; () banked
  4580   00210E  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4581   002110  51E7               	movf	??_runGAME& (0+255),w,b
  4582   002112  0101               	movlb	1	; () banked
  4583   002114  5DC9               	subwf	runGAME@pot1& (0+255),w,b
  4584   002116  0100               	movlb	0	; () banked
  4585   002118  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4586   00211A  0101               	movlb	1	; () banked
  4587   00211C  59CA               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4588   00211E  A0D8               	btfss	status,0,c
  4589   002120  EF94  F010         	goto	u10221
  4590   002124  EF96  F010         	goto	u10220
  4591   002128                     u10221:
  4592   002128  EFDE  F010         	goto	l689
  4593   00212C                     u10220:
  4594   00212C                     
  4595                           ; BSR set to: 1
  4596   00212C  0E02               	movlw	2
  4597   00212E  25CB               	addwf	runGAME@randomNumber& (0+255),w,b
  4598   002130  0100               	movlb	0	; () banked
  4599   002132  6FE7               	movwf	??_runGAME& (0+255),b
  4600   002134  0E00               	movlw	0
  4601   002136  0101               	movlb	1	; () banked
  4602   002138  21CC               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4603   00213A  0100               	movlb	0	; () banked
  4604   00213C  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4605   00213E  0101               	movlb	1	; () banked
  4606   002140  51C9               	movf	runGAME@pot1& (0+255),w,b
  4607   002142  0100               	movlb	0	; () banked
  4608   002144  5DE7               	subwf	??_runGAME& (0+255),w,b
  4609   002146  0101               	movlb	1	; () banked
  4610   002148  51CA               	movf	(runGAME@pot1+1)& (0+255),w,b
  4611   00214A  0100               	movlb	0	; () banked
  4612   00214C  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4613   00214E  A0D8               	btfss	status,0,c
  4614   002150  EFAC  F010         	goto	u10231
  4615   002154  EFAE  F010         	goto	u10230
  4616   002158                     u10231:
  4617   002158  EFDE  F010         	goto	l689
  4618   00215C                     u10230:
  4619   00215C                     
  4620                           ; BSR set to: 0
  4621                           ;GAME.c: 170:                     GAMEround += 1;
  4622   00215C  0101               	movlb	1	; () banked
  4623   00215E  2BC7               	incf	runGAME@GAMEround& (0+255),f,b
  4624   002160                     
  4625                           ; BSR set to: 1
  4626                           ;GAME.c: 171:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4627   002160  EC93  F026         	call	_rand	;wreg free
  4628   002164  C012  F018         	movff	?_rand,___awdiv@dividend
  4629   002168  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4630   00216C  0E00               	movlw	0
  4631   00216E  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4632   002170  0E21               	movlw	33
  4633   002172  6E1A               	movwf	___awdiv@divisor^0,c
  4634   002174  EC4B  F024         	call	___awdiv	;wreg free
  4635   002178  0E02               	movlw	2
  4636   00217A  2418               	addwf	?___awdiv^0,w,c
  4637   00217C  0101               	movlb	1	; () banked
  4638   00217E  6FCB               	movwf	runGAME@randomNumber& (0+255),b
  4639   002180  0E00               	movlw	0
  4640   002182  2019               	addwfc	(?___awdiv+1)^0,w,c
  4641   002184  6FCC               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4642   002186                     
  4643                           ; BSR set to: 1
  4644                           ;GAME.c: 172:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4645   002186  0EAC               	movlw	low runGAME@approxText
  4646   002188  0100               	movlb	0	; () banked
  4647   00218A  6FCE               	movwf	sprintf@s& (0+255),b
  4648   00218C  0E01               	movlw	high runGAME@approxText
  4649   00218E  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4650   002190  0E33               	movlw	low STR_35
  4651   002192  6FD0               	movwf	sprintf@fmt& (0+255),b
  4652   002194  0EFE               	movlw	high STR_35
  4653   002196  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4654   002198  C1CB  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4655   00219C  C1CC  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4656   0021A0  EC25  F028         	call	_sprintf	;wreg free
  4657   0021A4                     
  4658                           ;GAME.c: 173:                     keepStateGAME = 1;
  4659   0021A4  0E01               	movlw	1
  4660   0021A6  0101               	movlb	1	; () banked
  4661   0021A8  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4662   0021AA                     
  4663                           ; BSR set to: 1
  4664                           ;GAME.c: 174:                     LCD_ShowString((char)1, approxText);
  4665   0021AA  0EAC               	movlw	low runGAME@approxText
  4666   0021AC  6E07               	movwf	LCD_ShowString@textData^0,c
  4667   0021AE  0E01               	movlw	high runGAME@approxText
  4668   0021B0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4669   0021B2  0E01               	movlw	1
  4670   0021B4  ECAD  F024         	call	_LCD_ShowString
  4671                           
  4672                           ;GAME.c: 175:                 } else {
  4673   0021B8  EF36  F011         	goto	l8384
  4674   0021BC                     l689:
  4675                           
  4676                           ;GAME.c: 176:                     ADCON0bits.ADON = 0;
  4677   0021BC  90C2               	bcf	194,0,c	;volatile
  4678   0021BE                     
  4679                           ;GAME.c: 177:                     sprintf(approxText, "Skore: %u        ", GAMEround - 1
      +                          );
  4680   0021BE  0EAC               	movlw	low runGAME@approxText
  4681   0021C0  0100               	movlb	0	; () banked
  4682   0021C2  6FCE               	movwf	sprintf@s& (0+255),b
  4683   0021C4  0E01               	movlw	high runGAME@approxText
  4684   0021C6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4685   0021C8  0E59               	movlw	low STR_38
  4686   0021CA  6FD0               	movwf	sprintf@fmt& (0+255),b
  4687   0021CC  0EFE               	movlw	high STR_38
  4688   0021CE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4689   0021D0  0EFF               	movlw	255
  4690   0021D2  0101               	movlb	1	; () banked
  4691   0021D4  25C7               	addwf	runGAME@GAMEround& (0+255),w,b
  4692   0021D6  0100               	movlb	0	; () banked
  4693   0021D8  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  4694   0021DA  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4695   0021DC  0EFF               	movlw	255
  4696   0021DE  23D3               	addwfc	(?_sprintf+5)& (0+255),f,b
  4697   0021E0  EC25  F028         	call	_sprintf	;wreg free
  4698   0021E4                     
  4699                           ;GAME.c: 178:                     LCD_ShowString((char)1, "GAME OVER       ");
  4700   0021E4  0E7C               	movlw	low STR_39
  4701   0021E6  6E07               	movwf	LCD_ShowString@textData^0,c
  4702   0021E8  0EFE               	movlw	high STR_39
  4703   0021EA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4704   0021EC  0E01               	movlw	1
  4705   0021EE  ECAD  F024         	call	_LCD_ShowString
  4706   0021F2                     
  4707                           ;GAME.c: 179:                     LCD_ShowString((char)2, approxText);
  4708   0021F2  0EAC               	movlw	low runGAME@approxText
  4709   0021F4  6E07               	movwf	LCD_ShowString@textData^0,c
  4710   0021F6  0E01               	movlw	high runGAME@approxText
  4711   0021F8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4712   0021FA  0E02               	movlw	2
  4713   0021FC  ECAD  F024         	call	_LCD_ShowString
  4714   002200                     
  4715                           ;GAME.c: 180:                     keepStateGAME = 0;
  4716   002200  0E00               	movlw	0
  4717   002202  0101               	movlb	1	; () banked
  4718   002204  6FC5               	movwf	runGAME@keepStateGAME& (0+255),b
  4719   002206                     
  4720                           ; BSR set to: 1
  4721                           ;GAME.c: 181:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4722   002206  0E52               	movlw	82
  4723   002208  0100               	movlb	0	; () banked
  4724   00220A  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4725   00220C  0E2B               	movlw	43
  4726   00220E  6FE7               	movwf	??_runGAME& (0+255),b
  4727   002210  0E00               	movlw	0
  4728   002212                     u10517:
  4729   002212  2EE8               	decfsz	wreg,f,c
  4730   002214  D7FE               	bra	u10517
  4731   002216  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4732   002218  D7FC               	bra	u10517
  4733   00221A  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4734   00221C  D7FA               	bra	u10517
  4735   00221E  0000               	nop	
  4736   002220  EF36  F011         	goto	l8384
  4737   002224                     l8382:
  4738   002224  0101               	movlb	1	; () banked
  4739   002226  51C6               	movf	runGAME@GAMEpart& (0+255),w,b
  4740                           
  4741                           ; Switch size 1, requested type "simple"
  4742                           ; Number of cases is 8, Range of values is 0 to 7
  4743                           ; switch strategies available:
  4744                           ; Name         Instructions Cycles
  4745                           ; simple_byte           25    13 (average)
  4746                           ;	Chosen strategy is simple_byte
  4747   002228  0A00               	xorlw	0	; case 0
  4748   00222A  B4D8               	btfsc	status,2,c
  4749   00222C  EF45  F010         	goto	l680
  4750   002230  0A01               	xorlw	1	; case 1
  4751   002232  B4D8               	btfsc	status,2,c
  4752   002234  EF4D  F010         	goto	l682
  4753   002238  0A03               	xorlw	3	; case 2
  4754   00223A  B4D8               	btfsc	status,2,c
  4755   00223C  EF55  F010         	goto	l683
  4756   002240  0A01               	xorlw	1	; case 3
  4757   002242  B4D8               	btfsc	status,2,c
  4758   002244  EF5D  F010         	goto	l684
  4759   002248  0A07               	xorlw	7	; case 4
  4760   00224A  B4D8               	btfsc	status,2,c
  4761   00224C  EF65  F010         	goto	l685
  4762   002250  0A01               	xorlw	1	; case 5
  4763   002252  B4D8               	btfsc	status,2,c
  4764   002254  EF6D  F010         	goto	l686
  4765   002258  0A03               	xorlw	3	; case 6
  4766   00225A  B4D8               	btfsc	status,2,c
  4767   00225C  EF75  F010         	goto	l687
  4768   002260  0A01               	xorlw	1	; case 7
  4769   002262  B4D8               	btfsc	status,2,c
  4770   002264  EF7D  F010         	goto	l8354
  4771   002268  EF36  F011         	goto	l8384
  4772   00226C                     l8384:
  4773                           
  4774                           ;GAME.c: 72:     while(keepStateGAME){
  4775   00226C  0101               	movlb	1	; () banked
  4776   00226E  51C5               	movf	runGAME@keepStateGAME& (0+255),w,b
  4777   002270  A4D8               	btfss	status,2,c
  4778   002272  EF3D  F011         	goto	u10241
  4779   002276  EF3F  F011         	goto	u10240
  4780   00227A                     u10241:
  4781   00227A  EFBD  F00F         	goto	l8318
  4782   00227E                     u10240:
  4783   00227E                     
  4784                           ; BSR set to: 1
  4785                           ;GAME.c: 188:     LATDbits.LD2 = 1;
  4786   00227E  848C               	bsf	140,2,c	;volatile
  4787                           
  4788                           ;GAME.c: 189:     LATDbits.LD3 = 1;
  4789   002280  868C               	bsf	140,3,c	;volatile
  4790                           
  4791                           ;GAME.c: 190:     LATCbits.LC4 = 1;
  4792   002282  888B               	bsf	139,4,c	;volatile
  4793                           
  4794                           ;GAME.c: 191:     LATDbits.LD4 = 1;
  4795   002284  888C               	bsf	140,4,c	;volatile
  4796                           
  4797                           ;GAME.c: 192:     LATDbits.LD5 = 1;
  4798   002286  8A8C               	bsf	140,5,c	;volatile
  4799                           
  4800                           ;GAME.c: 193:     LATDbits.LD6 = 1;
  4801   002288  8C8C               	bsf	140,6,c	;volatile
  4802                           
  4803                           ;GAME.c: 194:     TMR1ON = 0;
  4804   00228A  90CD               	bcf	4045,0,c	;volatile
  4805                           
  4806                           ;GAME.c: 195:     TMR1IE = 0;
  4807   00228C  909D               	bcf	3997,0,c	;volatile
  4808   00228E                     
  4809                           ; BSR set to: 1
  4810                           ;GAME.c: 196:     GAMEIE = 0;
  4811   00228E  0E00               	movlw	0
  4812   002290  6F24               	movwf	_GAMEIE& (0+255),b
  4813   002292                     
  4814                           ; BSR set to: 1
  4815   002292  0012               	return		;funcret
  4816   002294                     __end_of_runGAME:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _rand *****************
  4820 ;; Defined at:
  4821 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  2   17[COMRAM] int 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:        6 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 2
  4842 ;; This function calls:
  4843 ;;		___lmul
  4844 ;; This function is called by:
  4845 ;;		_runGAME
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text13
  4850   004D26                     __ptext13:
  4851                           	callstack 0
  4852   004D26                     _rand:
  4853                           	callstack 27
  4854   004D26  C197  F006         	movff	_seed,___lmul@multiplier
  4855   004D2A  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4856   004D2E  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4857   004D32  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4858   004D36  0E2D               	movlw	45
  4859   004D38  6E0A               	movwf	___lmul@multiplicand^0,c
  4860   004D3A  0E7F               	movlw	127
  4861   004D3C  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4862   004D3E  0E95               	movlw	149
  4863   004D40  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4864   004D42  0E4C               	movlw	76
  4865   004D44  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4866   004D46  ECCA  F026         	call	___lmul	;wreg free
  4867   004D4A  0E01               	movlw	1
  4868   004D4C  2406               	addwf	?___lmul^0,w,c
  4869   004D4E  0101               	movlb	1	; () banked
  4870   004D50  6F97               	movwf	_seed& (0+255),b
  4871   004D52  0E00               	movlw	0
  4872   004D54  2007               	addwfc	(?___lmul+1)^0,w,c
  4873   004D56  6F98               	movwf	(_seed+1)& (0+255),b
  4874   004D58  0E00               	movlw	0
  4875   004D5A  2008               	addwfc	(?___lmul+2)^0,w,c
  4876   004D5C  6F99               	movwf	(_seed+2)& (0+255),b
  4877   004D5E  0E00               	movlw	0
  4878   004D60  2009               	addwfc	(?___lmul+3)^0,w,c
  4879   004D62  6F9A               	movwf	(_seed+3)& (0+255),b
  4880   004D64                     
  4881                           ; BSR set to: 1
  4882   004D64  C197  F014         	movff	_seed,??_rand
  4883   004D68  C198  F015         	movff	_seed+1,??_rand+1
  4884   004D6C  C199  F016         	movff	_seed+2,??_rand+2
  4885   004D70  C19A  F017         	movff	_seed+3,??_rand+3
  4886   004D74  0E12               	movlw	18
  4887   004D76  EFC2  F026         	goto	u9660
  4888   004D7A                     u9665:
  4889   004D7A  90D8               	bcf	status,0,c
  4890   004D7C  3217               	rrcf	(??_rand+3)^0,f,c
  4891   004D7E  3216               	rrcf	(??_rand+2)^0,f,c
  4892   004D80  3215               	rrcf	(??_rand+1)^0,f,c
  4893   004D82  3214               	rrcf	??_rand^0,f,c
  4894   004D84                     u9660:
  4895   004D84  2EE8               	decfsz	wreg,f,c
  4896   004D86  EFBD  F026         	goto	u9665
  4897   004D8A  C014  F012         	movff	??_rand,?_rand
  4898   004D8E  C015  F013         	movff	??_rand+1,?_rand+1
  4899   004D92                     
  4900                           ; BSR set to: 1
  4901   004D92  0012               	return		;funcret
  4902   004D94                     __end_of_rand:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function ___lmul *****************
  4906 ;; Defined at:
  4907 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  multiplier      4    5[COMRAM] unsigned long 
  4910 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  product         4   13[COMRAM] unsigned long 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  4    5[COMRAM] unsigned long 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:       12 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_rand
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text14
  4937   004D94                     __ptext14:
  4938                           	callstack 0
  4939   004D94                     ___lmul:
  4940                           	callstack 27
  4941   004D94  0E00               	movlw	0
  4942   004D96  6E0E               	movwf	___lmul@product^0,c
  4943   004D98  0E00               	movlw	0
  4944   004D9A  6E0F               	movwf	(___lmul@product+1)^0,c
  4945   004D9C  0E00               	movlw	0
  4946   004D9E  6E10               	movwf	(___lmul@product+2)^0,c
  4947   004DA0  0E00               	movlw	0
  4948   004DA2  6E11               	movwf	(___lmul@product+3)^0,c
  4949   004DA4                     l7684:
  4950   004DA4  A006               	btfss	___lmul@multiplier^0,0,c
  4951   004DA6  EFD7  F026         	goto	u9281
  4952   004DAA  EFD9  F026         	goto	u9280
  4953   004DAE                     u9281:
  4954   004DAE  EFE1  F026         	goto	l7688
  4955   004DB2                     u9280:
  4956   004DB2  500A               	movf	___lmul@multiplicand^0,w,c
  4957   004DB4  260E               	addwf	___lmul@product^0,f,c
  4958   004DB6  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4959   004DB8  220F               	addwfc	(___lmul@product+1)^0,f,c
  4960   004DBA  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4961   004DBC  2210               	addwfc	(___lmul@product+2)^0,f,c
  4962   004DBE  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4963   004DC0  2211               	addwfc	(___lmul@product+3)^0,f,c
  4964   004DC2                     l7688:
  4965   004DC2  90D8               	bcf	status,0,c
  4966   004DC4  360A               	rlcf	___lmul@multiplicand^0,f,c
  4967   004DC6  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4968   004DC8  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4969   004DCA  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4970   004DCC  90D8               	bcf	status,0,c
  4971   004DCE  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4972   004DD0  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4973   004DD2  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4974   004DD4  3206               	rrcf	___lmul@multiplier^0,f,c
  4975   004DD6  5006               	movf	___lmul@multiplier^0,w,c
  4976   004DD8  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4977   004DDA  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4978   004DDC  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4979   004DDE  A4D8               	btfss	status,2,c
  4980   004DE0  EFF4  F026         	goto	u9291
  4981   004DE4  EFF6  F026         	goto	u9290
  4982   004DE8                     u9291:
  4983   004DE8  EFD2  F026         	goto	l7684
  4984   004DEC                     u9290:
  4985   004DEC  C00E  F006         	movff	___lmul@product,?___lmul
  4986   004DF0  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4987   004DF4  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4988   004DF8  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4989   004DFC  0012               	return		;funcret
  4990   004DFE                     __end_of___lmul:
  4991                           	callstack 0
  4992                           
  4993 ;; *************** function ___lbdiv *****************
  4994 ;; Defined at:
  4995 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  dividend        1    wreg     unsigned char 
  4998 ;;  divisor         1    5[COMRAM] unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  dividend        1    6[COMRAM] unsigned char 
  5001 ;;  quotient        1    8[COMRAM] unsigned char 
  5002 ;;  counter         1    7[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      unsigned char 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        4 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 1
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_runGAME
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text15
  5027   004E62                     __ptext15:
  5028                           	callstack 0
  5029   004E62                     ___lbdiv:
  5030                           	callstack 28
  5031                           
  5032                           ;incstack = 0
  5033                           ;___lbdiv@dividend stored from wreg
  5034   004E62  6E07               	movwf	___lbdiv@dividend^0,c
  5035   004E64  0E00               	movlw	0
  5036   004E66  6E09               	movwf	___lbdiv@quotient^0,c
  5037   004E68  5006               	movf	___lbdiv@divisor^0,w,c
  5038   004E6A  B4D8               	btfsc	status,2,c
  5039   004E6C  EF3A  F027         	goto	u9671
  5040   004E70  EF3C  F027         	goto	u9670
  5041   004E74                     u9671:
  5042   004E74  EF5D  F027         	goto	l7966
  5043   004E78                     u9670:
  5044   004E78  0E01               	movlw	1
  5045   004E7A  6E08               	movwf	___lbdiv@counter^0,c
  5046   004E7C  EF43  F027         	goto	l7954
  5047   004E80                     l7950:
  5048   004E80  90D8               	bcf	status,0,c
  5049   004E82  3606               	rlcf	___lbdiv@divisor^0,f,c
  5050   004E84  2A08               	incf	___lbdiv@counter^0,f,c
  5051   004E86                     l7954:
  5052   004E86  AE06               	btfss	___lbdiv@divisor^0,7,c
  5053   004E88  EF48  F027         	goto	u9681
  5054   004E8C  EF4A  F027         	goto	u9680
  5055   004E90                     u9681:
  5056   004E90  EF40  F027         	goto	l7950
  5057   004E94                     u9680:
  5058   004E94                     l7956:
  5059   004E94  90D8               	bcf	status,0,c
  5060   004E96  3609               	rlcf	___lbdiv@quotient^0,f,c
  5061   004E98  5006               	movf	___lbdiv@divisor^0,w,c
  5062   004E9A  5C07               	subwf	___lbdiv@dividend^0,w,c
  5063   004E9C  A0D8               	btfss	status,0,c
  5064   004E9E  EF53  F027         	goto	u9691
  5065   004EA2  EF55  F027         	goto	u9690
  5066   004EA6                     u9691:
  5067   004EA6  EF58  F027         	goto	l7962
  5068   004EAA                     u9690:
  5069   004EAA  5006               	movf	___lbdiv@divisor^0,w,c
  5070   004EAC  5E07               	subwf	___lbdiv@dividend^0,f,c
  5071   004EAE  8009               	bsf	___lbdiv@quotient^0,0,c
  5072   004EB0                     l7962:
  5073   004EB0  90D8               	bcf	status,0,c
  5074   004EB2  3206               	rrcf	___lbdiv@divisor^0,f,c
  5075   004EB4  2E08               	decfsz	___lbdiv@counter^0,f,c
  5076   004EB6  EF4A  F027         	goto	l7956
  5077   004EBA                     l7966:
  5078   004EBA  5009               	movf	___lbdiv@quotient^0,w,c
  5079   004EBC  0012               	return		;funcret
  5080   004EBE                     __end_of___lbdiv:
  5081                           	callstack 0
  5082                           
  5083 ;; *************** function _runDAC *****************
  5084 ;; Defined at:
  5085 ;;		line 10 in file "DAC.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  DACindex        1  125[BANK0 ] unsigned char 
  5090 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  5091 ;;  keepState       1  123[BANK0 ] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;Total ram usage:       12 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; Hardware stack levels required when called: 9
  5108 ;; This function calls:
  5109 ;;		_SPI_write
  5110 ;;		___fladd
  5111 ;;		___fldiv
  5112 ;;		___flmul
  5113 ;;		___fltol
  5114 ;;		___xxtofl
  5115 ;;		_printf
  5116 ;;		_sinf
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text16
  5123   002DBA                     __ptext16:
  5124                           	callstack 0
  5125   002DBA                     _runDAC:
  5126                           	callstack 21
  5127   002DBA                     
  5128                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  5129   002DBA  8094               	bsf	148,0,c	;volatile
  5130                           
  5131                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  5132   002DBC  8892               	bsf	146,4,c	;volatile
  5133                           
  5134                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  5135   002DBE  8692               	bsf	146,3,c	;volatile
  5136                           
  5137                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  5138   002DC0  8492               	bsf	146,2,c	;volatile
  5139                           
  5140                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  5141   002DC2  010F               	movlb	15	; () banked
  5142   002DC4  9738               	bcf	56,3,b	;volatile
  5143                           
  5144                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  5145   002DC6  9538               	bcf	56,2,b	;volatile
  5146                           
  5147                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  5148   002DC8  9693               	bcf	147,3,c	;volatile
  5149                           
  5150                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  5151   002DCA  9694               	bcf	148,3,c	;volatile
  5152                           
  5153                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  5154   002DCC  9A94               	bcf	148,5,c	;volatile
  5155   002DCE                     
  5156                           ; BSR set to: 15
  5157                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  5158   002DCE  50C6               	movf	198,w,c	;volatile
  5159   002DD0  0BF0               	andlw	-16
  5160   002DD2  0902               	iorlw	2
  5161   002DD4  6EC6               	movwf	198,c	;volatile
  5162   002DD6                     
  5163                           ; BSR set to: 15
  5164                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  5165   002DD6  98C6               	bcf	198,4,c	;volatile
  5166   002DD8                     
  5167                           ; BSR set to: 15
  5168                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  5169   002DD8  8CC7               	bsf	199,6,c	;volatile
  5170   002DDA                     
  5171                           ; BSR set to: 15
  5172                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  5173   002DDA  8AC6               	bsf	198,5,c	;volatile
  5174   002DDC                     
  5175                           ; BSR set to: 15
  5176                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  5177   002DDC  8139               	bsf	57,0,b	;volatile
  5178   002DDE                     
  5179                           ; BSR set to: 15
  5180                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  5181   002DDE  9EC0               	bcf	192,7,c	;volatile
  5182                           
  5183                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  5184   002DE0  50C0               	movf	192,w,c	;volatile
  5185   002DE2  0BF8               	andlw	-8
  5186   002DE4  0906               	iorlw	6
  5187   002DE6  6EC0               	movwf	192,c	;volatile
  5188                           
  5189                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  5190   002DE8  50C0               	movf	192,w,c	;volatile
  5191   002DEA  0BC7               	andlw	-57
  5192   002DEC  0930               	iorlw	48
  5193   002DEE  6EC0               	movwf	192,c	;volatile
  5194   002DF0                     
  5195                           ; BSR set to: 15
  5196                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  5197   002DF0  80C2               	bsf	194,0,c	;volatile
  5198                           
  5199                           ;DAC.c: 38:     SPBRG1 = 25;
  5200   002DF2  0E19               	movlw	25
  5201   002DF4  6EAF               	movwf	175,c	;volatile
  5202   002DF6                     
  5203                           ; BSR set to: 15
  5204                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  5205   002DF6  8EAB               	bsf	171,7,c	;volatile
  5206   002DF8                     
  5207                           ; BSR set to: 15
  5208                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  5209   002DF8  98AC               	bcf	172,4,c	;volatile
  5210   002DFA                     
  5211                           ; BSR set to: 15
  5212                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  5213   002DFA  8AAC               	bsf	172,5,c	;volatile
  5214   002DFC                     
  5215                           ; BSR set to: 15
  5216                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  5217   002DFC  88AB               	bsf	171,4,c	;volatile
  5218   002DFE                     
  5219                           ; BSR set to: 15
  5220                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  5221   002DFE  868A               	bsf	138,3,c	;volatile
  5222                           
  5223                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  5224   002E00  50C2               	movf	194,w,c	;volatile
  5225   002E02  0B83               	andlw	-125
  5226   002E04  0930               	iorlw	48
  5227   002E06  6EC2               	movwf	194,c	;volatile
  5228                           
  5229                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  5230   002E08  0E01               	movlw	1
  5231   002E0A  0100               	movlb	0	; () banked
  5232   002E0C  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5233                           
  5234                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  5235   002E0E  0E01               	movlw	1
  5236   002E10  6FDB               	movwf	runDAC@keepState& (0+255),b
  5237                           
  5238                           ;DAC.c: 52:     uint8_t DACindex = 0;
  5239   002E12  0E00               	movlw	0
  5240   002E14  6FDD               	movwf	runDAC@DACindex& (0+255),b
  5241                           
  5242                           ;DAC.c: 54:     while(keepState){
  5243   002E16  EF47  F018         	goto	l8272
  5244   002E1A                     l8230:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;DAC.c: 57:                 if(DACindex<255/2){
  5248   002E1A  0E7F               	movlw	127
  5249   002E1C  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  5250   002E1E  EF13  F017         	goto	u10081
  5251   002E22  EF15  F017         	goto	u10080
  5252   002E26                     u10081:
  5253   002E26  EF3D  F017         	goto	l8234
  5254   002E2A                     u10080:
  5255   002E2A                     
  5256                           ; BSR set to: 0
  5257                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  5258   002E2A  0E33               	movlw	51
  5259   002E2C  6E18               	movwf	___flmul@a^0,c
  5260   002E2E  0E33               	movlw	51
  5261   002E30  6E19               	movwf	(___flmul@a+1)^0,c
  5262   002E32  0EF3               	movlw	243
  5263   002E34  6E1A               	movwf	(___flmul@a+2)^0,c
  5264   002E36  0E3F               	movlw	63
  5265   002E38  6E1B               	movwf	(___flmul@a+3)^0,c
  5266   002E3A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5267   002E3C  6E06               	movwf	___xxtofl@val^0,c
  5268   002E3E  6A07               	clrf	(___xxtofl@val+1)^0,c
  5269   002E40  6A08               	clrf	(___xxtofl@val+2)^0,c
  5270   002E42  6A09               	clrf	(___xxtofl@val+3)^0,c
  5271   002E44  0E01               	movlw	1
  5272   002E46  EC7D  F01C         	call	___xxtofl
  5273   002E4A  C006  F014         	movff	?___xxtofl,___flmul@b
  5274   002E4E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5275   002E52  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5276   002E56  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5277   002E5A  EC3A  F00D         	call	___flmul	;wreg free
  5278   002E5E  C014  F064         	movff	?___flmul,___fltol@f1
  5279   002E62  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5280   002E66  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5281   002E6A  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5282   002E6E  EC7C  F021         	call	___fltol	;wreg free
  5283   002E72  0100               	movlb	0	; () banked
  5284   002E74  5164               	movf	?___fltol& (0+255),w,b
  5285   002E76  EC6A  F028         	call	_SPI_write
  5286   002E7A                     l8234:
  5287                           
  5288                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5289   002E7A  0E7E               	movlw	126
  5290   002E7C  0100               	movlb	0	; () banked
  5291   002E7E  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5292   002E80  EF44  F017         	goto	u10091
  5293   002E84  EF46  F017         	goto	u10090
  5294   002E88                     u10091:
  5295   002E88  EF02  F018         	goto	l231
  5296   002E8C                     u10090:
  5297   002E8C                     
  5298                           ; BSR set to: 0
  5299                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5300   002E8C  0E33               	movlw	51
  5301   002E8E  6E18               	movwf	___flmul@a^0,c
  5302   002E90  0E33               	movlw	51
  5303   002E92  6E19               	movwf	(___flmul@a+1)^0,c
  5304   002E94  0EF3               	movlw	243
  5305   002E96  6E1A               	movwf	(___flmul@a+2)^0,c
  5306   002E98  0E3F               	movlw	63
  5307   002E9A  6E1B               	movwf	(___flmul@a+3)^0,c
  5308   002E9C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5309   002E9E  0AFF               	xorlw	255
  5310   002EA0  6FD2               	movwf	??_runDAC& (0+255),b
  5311   002EA2  51D2               	movf	??_runDAC& (0+255),w,b
  5312   002EA4  6E06               	movwf	___xxtofl@val^0,c
  5313   002EA6  6A07               	clrf	(___xxtofl@val+1)^0,c
  5314   002EA8  6A08               	clrf	(___xxtofl@val+2)^0,c
  5315   002EAA  6A09               	clrf	(___xxtofl@val+3)^0,c
  5316   002EAC  0E01               	movlw	1
  5317   002EAE  EC7D  F01C         	call	___xxtofl
  5318   002EB2  C006  F014         	movff	?___xxtofl,___flmul@b
  5319   002EB6  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5320   002EBA  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5321   002EBE  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5322   002EC2  EC3A  F00D         	call	___flmul	;wreg free
  5323   002EC6  C014  F064         	movff	?___flmul,___fltol@f1
  5324   002ECA  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5325   002ECE  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5326   002ED2  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5327   002ED6  EC7C  F021         	call	___fltol	;wreg free
  5328   002EDA  0100               	movlb	0	; () banked
  5329   002EDC  5164               	movf	?___fltol& (0+255),w,b
  5330   002EDE  EC6A  F028         	call	_SPI_write
  5331   002EE2  EF02  F018         	goto	l231
  5332   002EE6                     l8238:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5336   002EE6  0E00               	movlw	0
  5337   002EE8  6E31               	movwf	___fldiv@a^0,c
  5338   002EEA  0E00               	movlw	0
  5339   002EEC  6E32               	movwf	(___fldiv@a+1)^0,c
  5340   002EEE  0E7F               	movlw	127
  5341   002EF0  6E33               	movwf	(___fldiv@a+2)^0,c
  5342   002EF2  0E43               	movlw	67
  5343   002EF4  6E34               	movwf	(___fldiv@a+3)^0,c
  5344   002EF6  0EC3               	movlw	195
  5345   002EF8  6E18               	movwf	___flmul@a^0,c
  5346   002EFA  0EF5               	movlw	245
  5347   002EFC  6E19               	movwf	(___flmul@a+1)^0,c
  5348   002EFE  0EC8               	movlw	200
  5349   002F00  6E1A               	movwf	(___flmul@a+2)^0,c
  5350   002F02  0E40               	movlw	64
  5351   002F04  6E1B               	movwf	(___flmul@a+3)^0,c
  5352   002F06  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5353   002F08  6E06               	movwf	___xxtofl@val^0,c
  5354   002F0A  6A07               	clrf	(___xxtofl@val+1)^0,c
  5355   002F0C  6A08               	clrf	(___xxtofl@val+2)^0,c
  5356   002F0E  6A09               	clrf	(___xxtofl@val+3)^0,c
  5357   002F10  0E01               	movlw	1
  5358   002F12  EC7D  F01C         	call	___xxtofl
  5359   002F16  C006  F014         	movff	?___xxtofl,___flmul@b
  5360   002F1A  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5361   002F1E  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5362   002F22  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5363   002F26  EC3A  F00D         	call	___flmul	;wreg free
  5364   002F2A  C014  F02D         	movff	?___flmul,___fldiv@b
  5365   002F2E  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5366   002F32  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5367   002F36  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5368   002F3A  EC10  F015         	call	___fldiv	;wreg free
  5369   002F3E  C02D  F0D3         	movff	?___fldiv,_runDAC$4530
  5370   002F42  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4530+1
  5371   002F46  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4530+2
  5372   002F4A  C030  F0D6         	movff	?___fldiv+3,_runDAC$4530+3
  5373   002F4E                     
  5374                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5375   002F4E  C0D3  F0A4         	movff	_runDAC$4530,sinf@x
  5376   002F52  C0D4  F0A5         	movff	_runDAC$4530+1,sinf@x+1
  5377   002F56  C0D5  F0A6         	movff	_runDAC$4530+2,sinf@x+2
  5378   002F5A  C0D6  F0A7         	movff	_runDAC$4530+3,sinf@x+3
  5379   002F5E  EC54  F008         	call	_sinf	;wreg free
  5380   002F62  C0A4  F0D7         	movff	?_sinf,_runDAC$4531
  5381   002F66  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4531+1
  5382   002F6A  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4531+2
  5383   002F6E  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4531+3
  5384   002F72                     
  5385                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5386   002F72  0E00               	movlw	0
  5387   002F74  6E4A               	movwf	___fladd@a^0,c
  5388   002F76  0E00               	movlw	0
  5389   002F78  6E4B               	movwf	(___fladd@a+1)^0,c
  5390   002F7A  0EFE               	movlw	254
  5391   002F7C  6E4C               	movwf	(___fladd@a+2)^0,c
  5392   002F7E  0E42               	movlw	66
  5393   002F80  6E4D               	movwf	(___fladd@a+3)^0,c
  5394   002F82  0E00               	movlw	0
  5395   002F84  6E18               	movwf	___flmul@a^0,c
  5396   002F86  0E00               	movlw	0
  5397   002F88  6E19               	movwf	(___flmul@a+1)^0,c
  5398   002F8A  0EFE               	movlw	254
  5399   002F8C  6E1A               	movwf	(___flmul@a+2)^0,c
  5400   002F8E  0E42               	movlw	66
  5401   002F90  6E1B               	movwf	(___flmul@a+3)^0,c
  5402   002F92  C0D7  F014         	movff	_runDAC$4531,___flmul@b
  5403   002F96  C0D8  F015         	movff	_runDAC$4531+1,___flmul@b+1
  5404   002F9A  C0D9  F016         	movff	_runDAC$4531+2,___flmul@b+2
  5405   002F9E  C0DA  F017         	movff	_runDAC$4531+3,___flmul@b+3
  5406   002FA2  EC3A  F00D         	call	___flmul	;wreg free
  5407   002FA6  C014  F046         	movff	?___flmul,___fladd@b
  5408   002FAA  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5409   002FAE  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5410   002FB2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5411   002FB6  ECD9  F00A         	call	___fladd	;wreg free
  5412   002FBA  C046  F064         	movff	?___fladd,___fltol@f1
  5413   002FBE  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5414   002FC2  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5415   002FC6  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5416   002FCA  EC7C  F021         	call	___fltol	;wreg free
  5417   002FCE  0100               	movlb	0	; () banked
  5418   002FD0  5164               	movf	?___fltol& (0+255),w,b
  5419   002FD2  EC6A  F028         	call	_SPI_write
  5420                           
  5421                           ;DAC.c: 66:                 break;
  5422   002FD6  EF02  F018         	goto	l231
  5423   002FDA                     l8244:
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5427   002FDA  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5428   002FDC  0AFF               	xorlw	255
  5429   002FDE  EC6A  F028         	call	_SPI_write
  5430                           
  5431                           ;DAC.c: 69:                 break;
  5432   002FE2  EF02  F018         	goto	l231
  5433   002FE6                     l8248:
  5434                           
  5435                           ; BSR set to: 0
  5436   002FE6  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5437                           
  5438                           ; Switch size 1, requested type "simple"
  5439                           ; Number of cases is 3, Range of values is 1 to 3
  5440                           ; switch strategies available:
  5441                           ; Name         Instructions Cycles
  5442                           ; simple_byte           10     6 (average)
  5443                           ;	Chosen strategy is simple_byte
  5444   002FE8  0A01               	xorlw	1	; case 1
  5445   002FEA  B4D8               	btfsc	status,2,c
  5446   002FEC  EF0D  F017         	goto	l8230
  5447   002FF0  0A03               	xorlw	3	; case 2
  5448   002FF2  B4D8               	btfsc	status,2,c
  5449   002FF4  EF73  F017         	goto	l8238
  5450   002FF8  0A01               	xorlw	1	; case 3
  5451   002FFA  B4D8               	btfsc	status,2,c
  5452   002FFC  EFED  F017         	goto	l8244
  5453   003000  EF02  F018         	goto	l231
  5454   003004                     l231:
  5455                           
  5456                           ;DAC.c: 71:         GODONE = 1;
  5457   003004  82C2               	bsf	4034,1,c	;volatile
  5458   003006                     l234:
  5459   003006  B2C2               	btfsc	4034,1,c	;volatile
  5460   003008  EF08  F018         	goto	u10101
  5461   00300C  EF0A  F018         	goto	u10100
  5462   003010                     u10101:
  5463   003010  EF03  F018         	goto	l234
  5464   003014                     u10100:
  5465   003014                     
  5466                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5467   003014  0EE6               	movlw	low STR_22
  5468   003016  0100               	movlb	0	; () banked
  5469   003018  6FCE               	movwf	printf@fmt& (0+255),b
  5470   00301A  0EFF               	movlw	high STR_22
  5471   00301C  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5472   00301E  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5473   003022  6BD1               	clrf	(?_printf+3)& (0+255),b
  5474   003024  EC66  F029         	call	_printf	;wreg free
  5475   003028                     
  5476                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5477   003028  A082               	btfss	130,0,c	;volatile
  5478   00302A  EF19  F018         	goto	u10111
  5479   00302E  EF1B  F018         	goto	u10110
  5480   003032                     u10111:
  5481   003032  EF1E  F018         	goto	l8256
  5482   003036                     u10110:
  5483   003036                     
  5484                           ;DAC.c: 76:             selectModeDAC = 1;
  5485   003036  0E01               	movlw	1
  5486   003038  0100               	movlb	0	; () banked
  5487   00303A  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5488   00303C                     l8256:
  5489                           
  5490                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5491   00303C  A880               	btfss	128,4,c	;volatile
  5492   00303E  EF23  F018         	goto	u10121
  5493   003042  EF25  F018         	goto	u10120
  5494   003046                     u10121:
  5495   003046  EF28  F018         	goto	l8260
  5496   00304A                     u10120:
  5497   00304A                     
  5498                           ;DAC.c: 79:             selectModeDAC = 2;
  5499   00304A  0E02               	movlw	2
  5500   00304C  0100               	movlb	0	; () banked
  5501   00304E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5502   003050                     l8260:
  5503                           
  5504                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5505   003050  A680               	btfss	128,3,c	;volatile
  5506   003052  EF2D  F018         	goto	u10131
  5507   003056  EF2F  F018         	goto	u10130
  5508   00305A                     u10131:
  5509   00305A  EF32  F018         	goto	l8264
  5510   00305E                     u10130:
  5511   00305E                     
  5512                           ;DAC.c: 82:             selectModeDAC = 3;
  5513   00305E  0E03               	movlw	3
  5514   003060  0100               	movlb	0	; () banked
  5515   003062  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5516   003064                     l8264:
  5517                           
  5518                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5519   003064  A480               	btfss	128,2,c	;volatile
  5520   003066  EF37  F018         	goto	u10141
  5521   00306A  EF39  F018         	goto	u10140
  5522   00306E                     u10141:
  5523   00306E  EF3C  F018         	goto	l8268
  5524   003072                     u10140:
  5525   003072                     
  5526                           ;DAC.c: 85:             keepState = 0;
  5527   003072  0E00               	movlw	0
  5528   003074  0100               	movlb	0	; () banked
  5529   003076  6FDB               	movwf	runDAC@keepState& (0+255),b
  5530   003078                     l8268:
  5531                           
  5532                           ;DAC.c: 87:         DACindex++;
  5533   003078  0100               	movlb	0	; () banked
  5534   00307A  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5535   00307C                     
  5536                           ; BSR set to: 0
  5537                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5538   00307C  0E68               	movlw	104
  5539   00307E  0100               	movlb	0	; () banked
  5540   003080  6FD2               	movwf	??_runDAC& (0+255),b
  5541   003082  0EE4               	movlw	228
  5542   003084                     u10527:
  5543   003084  2EE8               	decfsz	wreg,f,c
  5544   003086  D7FE               	bra	u10527
  5545   003088  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5546   00308A  D7FC               	bra	u10527
  5547   00308C  0000               	nop	
  5548   00308E                     l8272:
  5549                           
  5550                           ;DAC.c: 54:     while(keepState){
  5551   00308E  0100               	movlb	0	; () banked
  5552   003090  51DB               	movf	runDAC@keepState& (0+255),w,b
  5553   003092  A4D8               	btfss	status,2,c
  5554   003094  EF4E  F018         	goto	u10151
  5555   003098  EF50  F018         	goto	u10150
  5556   00309C                     u10151:
  5557   00309C  EFF3  F017         	goto	l8248
  5558   0030A0                     u10150:
  5559   0030A0                     
  5560                           ; BSR set to: 0
  5561   0030A0  0012               	return		;funcret
  5562   0030A2                     __end_of_runDAC:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function _sinf *****************
  5566 ;; Defined at:
  5567 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  x               4   68[BANK0 ] float 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  ux              4   90[BANK0 ] struct .
  5572 ;;  y               4   86[BANK0 ] struct .
  5573 ;;  sign            1   81[BANK0 ] _Bool 
  5574 ;;  n               1   80[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  4   68[BANK0 ] float 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5585 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;Total ram usage:       26 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 4
  5591 ;; This function calls:
  5592 ;;		___cosdf
  5593 ;;		___fladd
  5594 ;;		___flneg
  5595 ;;		___rem_pio2f
  5596 ;;		___sindf
  5597 ;; This function is called by:
  5598 ;;		_runDAC
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text17
  5603   0010A8                     __ptext17:
  5604                           	callstack 0
  5605   0010A8                     _sinf:
  5606                           	callstack 25
  5607   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5608   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5609   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5610   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5611   0010B8  0100               	movlb	0	; () banked
  5612   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5613   0010BC  EF62  F008         	goto	u9461
  5614   0010C0  EF65  F008         	goto	u9460
  5615   0010C4                     u9461:
  5616   0010C4  0E01               	movlw	1
  5617   0010C6  EF66  F008         	goto	u9470
  5618   0010CA                     u9460:
  5619   0010CA  0E00               	movlw	0
  5620   0010CC                     u9470:
  5621   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5622   0010CE                     
  5623                           ; BSR set to: 0
  5624   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5625   0010D0                     
  5626                           ; BSR set to: 0
  5627   0010D0  0EDB               	movlw	219
  5628   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5629   0010D4  0E0F               	movlw	15
  5630   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5631   0010D8  0E49               	movlw	73
  5632   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5633   0010DC  0E3F               	movlw	63
  5634   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5635   0010E0  B0D8               	btfsc	status,0,c
  5636   0010E2  EF75  F008         	goto	u9481
  5637   0010E6  EF77  F008         	goto	u9480
  5638   0010EA                     u9481:
  5639   0010EA  EFA0  F008         	goto	l7810
  5640   0010EE                     u9480:
  5641   0010EE                     
  5642                           ; BSR set to: 0
  5643   0010EE  0E80               	movlw	128
  5644   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5645   0010F2  0E39               	movlw	57
  5646   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5647   0010F6  B0D8               	btfsc	status,0,c
  5648   0010F8  EF80  F008         	goto	u9491
  5649   0010FC  EF82  F008         	goto	u9490
  5650   001100                     u9491:
  5651   001100  EF8C  F008         	goto	l7806
  5652   001104                     u9490:
  5653   001104                     
  5654                           ; BSR set to: 0
  5655   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5656   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5657   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5658   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5659   001114  EFD8  F00A         	goto	l1694
  5660   001118                     l7806:
  5661                           
  5662                           ; BSR set to: 0
  5663   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5664   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5665   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5666   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5667   001128  EC51  F018         	call	___sindf	;wreg free
  5668   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5669   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5670   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5671   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5672   00113C  EFD8  F00A         	goto	l1694
  5673   001140                     l7810:
  5674                           
  5675                           ; BSR set to: 0
  5676   001140  0ED2               	movlw	210
  5677   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5678   001144  0E53               	movlw	83
  5679   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5680   001148  0E7B               	movlw	123
  5681   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5682   00114C  0E40               	movlw	64
  5683   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5684   001150  B0D8               	btfsc	status,0,c
  5685   001152  EFAD  F008         	goto	u9501
  5686   001156  EFAF  F008         	goto	u9500
  5687   00115A                     u9501:
  5688   00115A  EF92  F009         	goto	l7840
  5689   00115E                     u9500:
  5690   00115E                     
  5691                           ; BSR set to: 0
  5692   00115E  0EE4               	movlw	228
  5693   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5694   001162  0ECB               	movlw	203
  5695   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5696   001166  0E16               	movlw	22
  5697   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5698   00116A  0E40               	movlw	64
  5699   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5700   00116E  B0D8               	btfsc	status,0,c
  5701   001170  EFBC  F008         	goto	u9511
  5702   001174  EFBE  F008         	goto	u9510
  5703   001178                     u9511:
  5704   001178  EF2C  F009         	goto	l7830
  5705   00117C                     u9510:
  5706   00117C                     
  5707                           ; BSR set to: 0
  5708   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5709   00117E  B4D8               	btfsc	status,2,c
  5710   001180  EFC4  F008         	goto	u9521
  5711   001184  EFC6  F008         	goto	u9520
  5712   001188                     u9521:
  5713   001188  EFFE  F008         	goto	l7824
  5714   00118C                     u9520:
  5715   00118C                     
  5716                           ; BSR set to: 0
  5717   00118C  0EDB               	movlw	219
  5718   00118E  6E4A               	movwf	___fladd@a^0,c
  5719   001190  0E0F               	movlw	15
  5720   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5721   001194  0EC9               	movlw	201
  5722   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5723   001198  0E3F               	movlw	63
  5724   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5725   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5726   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5727   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5728   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5729   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5730   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4533
  5731   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4533+1
  5732   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4533+2
  5733   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4533+3
  5734   0011C0                     l7818:
  5735   0011C0  C0B2  F064         	movff	_sinf$4533,___cosdf@x
  5736   0011C4  C0B3  F065         	movff	_sinf$4533+1,___cosdf@x+1
  5737   0011C8  C0B4  F066         	movff	_sinf$4533+2,___cosdf@x+2
  5738   0011CC  C0B5  F067         	movff	_sinf$4533+3,___cosdf@x+3
  5739   0011D0  EC7E  F01B         	call	___cosdf	;wreg free
  5740   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5741   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5742   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5743   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5744   0011E4  EC89  F028         	call	___flneg	;wreg free
  5745   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5746   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5747   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5748   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5749   0011F8  EFD8  F00A         	goto	l1694
  5750   0011FC                     l7824:
  5751                           
  5752                           ; BSR set to: 0
  5753   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5754   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5755   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5756   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5757   00120C  0EDB               	movlw	219
  5758   00120E  6E4A               	movwf	___fladd@a^0,c
  5759   001210  0E0F               	movlw	15
  5760   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5761   001214  0EC9               	movlw	201
  5762   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5763   001218  0EBF               	movlw	191
  5764   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5765   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5766   001220  C046  F0B2         	movff	?___fladd,_sinf$4533
  5767   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4533+1
  5768   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4533+2
  5769   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4533+3
  5770   001230                     l7826:
  5771   001230  C0B2  F064         	movff	_sinf$4533,___cosdf@x
  5772   001234  C0B3  F065         	movff	_sinf$4533+1,___cosdf@x+1
  5773   001238  C0B4  F066         	movff	_sinf$4533+2,___cosdf@x+2
  5774   00123C  C0B5  F067         	movff	_sinf$4533+3,___cosdf@x+3
  5775   001240  EC7E  F01B         	call	___cosdf	;wreg free
  5776   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5777   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5778   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5779   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5780   001254  EFD8  F00A         	goto	l1694
  5781   001258                     l7830:
  5782                           
  5783                           ; BSR set to: 0
  5784   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5785   00125A  A4D8               	btfss	status,2,c
  5786   00125C  EF32  F009         	goto	u9531
  5787   001260  EF34  F009         	goto	u9530
  5788   001264                     u9531:
  5789   001264  EF5A  F009         	goto	l7834
  5790   001268                     u9530:
  5791   001268                     
  5792                           ; BSR set to: 0
  5793   001268  0EDB               	movlw	219
  5794   00126A  6E4A               	movwf	___fladd@a^0,c
  5795   00126C  0E0F               	movlw	15
  5796   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5797   001270  0E49               	movlw	73
  5798   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5799   001274  0EC0               	movlw	192
  5800   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5801   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5802   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5803   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5804   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5805   001288  ECD9  F00A         	call	___fladd	;wreg free
  5806   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5807   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5808   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5809   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5810   00129C  EC89  F028         	call	___flneg	;wreg free
  5811   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4249
  5812   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4249+1
  5813   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4249+2
  5814   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4249+3
  5815   0012B0  EF7E  F009         	goto	l7836
  5816   0012B4                     l7834:
  5817                           
  5818                           ; BSR set to: 0
  5819   0012B4  0EDB               	movlw	219
  5820   0012B6  6E4A               	movwf	___fladd@a^0,c
  5821   0012B8  0E0F               	movlw	15
  5822   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5823   0012BC  0E49               	movlw	73
  5824   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5825   0012C0  0E40               	movlw	64
  5826   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5827   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5828   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5829   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5830   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5831   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5832   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5833   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5834   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5835   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5836   0012E8  EC89  F028         	call	___flneg	;wreg free
  5837   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4249
  5838   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4249+1
  5839   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4249+2
  5840   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4249+3
  5841   0012FC                     l7836:
  5842   0012FC  C0A8  F064         	movff	_sinf$4249,___sindf@x
  5843   001300  C0A9  F065         	movff	_sinf$4249+1,___sindf@x+1
  5844   001304  C0AA  F066         	movff	_sinf$4249+2,___sindf@x+2
  5845   001308  C0AB  F067         	movff	_sinf$4249+3,___sindf@x+3
  5846   00130C  EC51  F018         	call	___sindf	;wreg free
  5847   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5848   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5849   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5850   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5851   001320  EFD8  F00A         	goto	l1694
  5852   001324                     l7840:
  5853                           
  5854                           ; BSR set to: 0
  5855   001324  0ED6               	movlw	214
  5856   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5857   001328  0E31               	movlw	49
  5858   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5859   00132C  0EE2               	movlw	226
  5860   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5861   001330  0E40               	movlw	64
  5862   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5863   001334  B0D8               	btfsc	status,0,c
  5864   001336  EF9F  F009         	goto	u9541
  5865   00133A  EFA1  F009         	goto	u9540
  5866   00133E                     u9541:
  5867   00133E  EF42  F00A         	goto	l7870
  5868   001342                     u9540:
  5869   001342                     
  5870                           ; BSR set to: 0
  5871   001342  0EE0               	movlw	224
  5872   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5873   001346  0EED               	movlw	237
  5874   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5875   00134A  0EAF               	movlw	175
  5876   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5877   00134E  0E40               	movlw	64
  5878   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5879   001352  B0D8               	btfsc	status,0,c
  5880   001354  EFAE  F009         	goto	u9551
  5881   001358  EFB0  F009         	goto	u9550
  5882   00135C                     u9551:
  5883   00135C  EFF0  F009         	goto	l7860
  5884   001360                     u9550:
  5885   001360                     
  5886                           ; BSR set to: 0
  5887   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5888   001362  B4D8               	btfsc	status,2,c
  5889   001364  EFB6  F009         	goto	u9561
  5890   001368  EFB8  F009         	goto	u9560
  5891   00136C                     u9561:
  5892   00136C  EFD4  F009         	goto	l7854
  5893   001370                     u9560:
  5894   001370                     
  5895                           ; BSR set to: 0
  5896   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5897   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5898   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5899   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5900   001380  0EE4               	movlw	228
  5901   001382  6E4A               	movwf	___fladd@a^0,c
  5902   001384  0ECB               	movlw	203
  5903   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5904   001388  0E96               	movlw	150
  5905   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5906   00138C  0E40               	movlw	64
  5907   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5908   001390  ECD9  F00A         	call	___fladd	;wreg free
  5909   001394  C046  F0B2         	movff	?___fladd,_sinf$4533
  5910   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4533+1
  5911   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4533+2
  5912   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4533+3
  5913   0013A4  EF18  F009         	goto	l7826
  5914   0013A8                     l7854:
  5915                           
  5916                           ; BSR set to: 0
  5917   0013A8  0EE4               	movlw	228
  5918   0013AA  6E4A               	movwf	___fladd@a^0,c
  5919   0013AC  0ECB               	movlw	203
  5920   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5921   0013B0  0E96               	movlw	150
  5922   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5923   0013B4  0EC0               	movlw	192
  5924   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5925   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5926   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5927   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5928   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5929   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5930   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4533
  5931   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4533+1
  5932   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4533+2
  5933   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4533+3
  5934   0013DC  EFE0  F008         	goto	l7818
  5935   0013E0                     l7860:
  5936                           
  5937                           ; BSR set to: 0
  5938   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5939   0013E2  A4D8               	btfss	status,2,c
  5940   0013E4  EFF6  F009         	goto	u9571
  5941   0013E8  EFF8  F009         	goto	u9570
  5942   0013EC                     u9571:
  5943   0013EC  EF14  F00A         	goto	l7864
  5944   0013F0                     u9570:
  5945   0013F0                     
  5946                           ; BSR set to: 0
  5947   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5948   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5949   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5950   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5951   001400  0EDB               	movlw	219
  5952   001402  6E4A               	movwf	___fladd@a^0,c
  5953   001404  0E0F               	movlw	15
  5954   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5955   001408  0EC9               	movlw	201
  5956   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5957   00140C  0EC0               	movlw	192
  5958   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5959   001410  ECD9  F00A         	call	___fladd	;wreg free
  5960   001414  C046  F0AC         	movff	?___fladd,_sinf$4250
  5961   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4250+1
  5962   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4250+2
  5963   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4250+3
  5964   001424  EF2E  F00A         	goto	l7866
  5965   001428                     l7864:
  5966                           
  5967                           ; BSR set to: 0
  5968   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5969   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5970   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5971   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5972   001438  0EDB               	movlw	219
  5973   00143A  6E4A               	movwf	___fladd@a^0,c
  5974   00143C  0E0F               	movlw	15
  5975   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5976   001440  0EC9               	movlw	201
  5977   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5978   001444  0E40               	movlw	64
  5979   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5980   001448  ECD9  F00A         	call	___fladd	;wreg free
  5981   00144C  C046  F0AC         	movff	?___fladd,_sinf$4250
  5982   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4250+1
  5983   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4250+2
  5984   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4250+3
  5985   00145C                     l7866:
  5986   00145C  C0AC  F064         	movff	_sinf$4250,___sindf@x
  5987   001460  C0AD  F065         	movff	_sinf$4250+1,___sindf@x+1
  5988   001464  C0AE  F066         	movff	_sinf$4250+2,___sindf@x+2
  5989   001468  C0AF  F067         	movff	_sinf$4250+3,___sindf@x+3
  5990   00146C  EC51  F018         	call	___sindf	;wreg free
  5991   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5992   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5993   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5994   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5995   001480  EFD8  F00A         	goto	l1694
  5996   001484                     l7870:
  5997                           
  5998                           ; BSR set to: 0
  5999   001484  0E80               	movlw	128
  6000   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  6001   001488  0E7F               	movlw	127
  6002   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  6003   00148C  A0D8               	btfss	status,0,c
  6004   00148E  EF4B  F00A         	goto	u9581
  6005   001492  EF4D  F00A         	goto	u9580
  6006   001496                     u9581:
  6007   001496  EF5F  F00A         	goto	l7878
  6008   00149A                     u9580:
  6009   00149A                     
  6010                           ; BSR set to: 0
  6011   00149A  0EFF               	movlw	255
  6012   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  6013   00149E  0EFF               	movlw	255
  6014   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  6015   0014A2  0EFF               	movlw	255
  6016   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  6017   0014A6  0E00               	movlw	0
  6018   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  6019   0014AA                     
  6020                           ; BSR set to: 0
  6021   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  6022   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  6023   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  6024   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  6025   0014BA  EFD8  F00A         	goto	l1694
  6026   0014BE                     l7878:
  6027                           
  6028                           ; BSR set to: 0
  6029   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  6030   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  6031   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  6032   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  6033   0014CE  0EB6               	movlw	low sinf@y
  6034   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  6035   0014D2  EC2F  F013         	call	___rem_pio2f	;wreg free
  6036   0014D6  0100               	movlb	0	; () banked
  6037   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  6038   0014DA  0B03               	andlw	3
  6039   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  6040   0014DE  EFC9  F00A         	goto	l7896
  6041   0014E2                     l7880:
  6042                           
  6043                           ; BSR set to: 0
  6044   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  6045   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  6046   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  6047   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  6048   0014F2  EC89  F028         	call	___flneg	;wreg free
  6049   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  6050   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  6051   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  6052   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  6053   001506                     l7882:
  6054   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  6055   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  6056   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  6057   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  6058   001516  EC51  F018         	call	___sindf	;wreg free
  6059   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  6060   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  6061   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  6062   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  6063   00152A  EFD8  F00A         	goto	l1694
  6064   00152E                     l7886:
  6065                           
  6066                           ; BSR set to: 0
  6067   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  6068   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  6069   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  6070   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  6071   00153E  EC7E  F01B         	call	___cosdf	;wreg free
  6072   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  6073   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  6074   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  6075   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  6076   001552  EFD8  F00A         	goto	l1694
  6077   001556                     l7890:
  6078                           
  6079                           ; BSR set to: 0
  6080   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  6081   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  6082   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  6083   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  6084   001566  EC7E  F01B         	call	___cosdf	;wreg free
  6085   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  6086   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  6087   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  6088   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  6089   00157A  EC89  F028         	call	___flneg	;wreg free
  6090   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  6091   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  6092   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  6093   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  6094   00158E  EFD8  F00A         	goto	l1694
  6095   001592                     l7896:
  6096                           
  6097                           ; BSR set to: 0
  6098   001592  51B0               	movf	sinf@n& (0+255),w,b
  6099                           
  6100                           ; Switch size 1, requested type "simple"
  6101                           ; Number of cases is 3, Range of values is 0 to 2
  6102                           ; switch strategies available:
  6103                           ; Name         Instructions Cycles
  6104                           ; simple_byte           10     6 (average)
  6105                           ;	Chosen strategy is simple_byte
  6106   001594  0A00               	xorlw	0	; case 0
  6107   001596  B4D8               	btfsc	status,2,c
  6108   001598  EF83  F00A         	goto	l7882
  6109   00159C  0A01               	xorlw	1	; case 1
  6110   00159E  B4D8               	btfsc	status,2,c
  6111   0015A0  EF97  F00A         	goto	l7886
  6112   0015A4  0A03               	xorlw	3	; case 2
  6113   0015A6  B4D8               	btfsc	status,2,c
  6114   0015A8  EF71  F00A         	goto	l7880
  6115   0015AC  EFAB  F00A         	goto	l7890
  6116   0015B0                     l1694:
  6117   0015B0  0012               	return		;funcret
  6118   0015B2                     __end_of_sinf:
  6119                           	callstack 0
  6120                           
  6121 ;; *************** function ___sindf *****************
  6122 ;; Defined at:
  6123 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  x               4    4[BANK0 ] float 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  z               4   32[BANK0 ] float 
  6128 ;;  s               4   28[BANK0 ] float 
  6129 ;;  w               4   12[BANK0 ] float 
  6130 ;;  r               4    8[BANK0 ] float 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  4    4[BANK0 ] float 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6140 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;Total ram usage:       32 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 2
  6147 ;; This function calls:
  6148 ;;		___fladd
  6149 ;;		___flmul
  6150 ;; This function is called by:
  6151 ;;		_sinf
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text18
  6156   0030A2                     __ptext18:
  6157                           	callstack 0
  6158   0030A2                     ___sindf:
  6159                           	callstack 26
  6160   0030A2  C064  F014         	movff	___sindf@x,___flmul@b
  6161   0030A6  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  6162   0030AA  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  6163   0030AE  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  6164   0030B2  C064  F018         	movff	___sindf@x,___flmul@a
  6165   0030B6  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6166   0030BA  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6167   0030BE  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6168   0030C2  EC3A  F00D         	call	___flmul	;wreg free
  6169   0030C6  C014  F080         	movff	?___flmul,___sindf@z
  6170   0030CA  C015  F081         	movff	?___flmul+1,___sindf@z+1
  6171   0030CE  C016  F082         	movff	?___flmul+2,___sindf@z+2
  6172   0030D2  C017  F083         	movff	?___flmul+3,___sindf@z+3
  6173   0030D6  C080  F014         	movff	___sindf@z,___flmul@b
  6174   0030DA  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6175   0030DE  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6176   0030E2  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6177   0030E6  C080  F018         	movff	___sindf@z,___flmul@a
  6178   0030EA  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  6179   0030EE  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  6180   0030F2  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  6181   0030F6  EC3A  F00D         	call	___flmul	;wreg free
  6182   0030FA  C014  F06C         	movff	?___flmul,___sindf@w
  6183   0030FE  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  6184   003102  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  6185   003106  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  6186   00310A  0E3C               	movlw	60
  6187   00310C  6E18               	movwf	___flmul@a^0,c
  6188   00310E  0E6C               	movlw	108
  6189   003110  6E19               	movwf	(___flmul@a+1)^0,c
  6190   003112  0E36               	movlw	54
  6191   003114  6E1A               	movwf	(___flmul@a+2)^0,c
  6192   003116  0E36               	movlw	54
  6193   003118  6E1B               	movwf	(___flmul@a+3)^0,c
  6194   00311A  C080  F014         	movff	___sindf@z,___flmul@b
  6195   00311E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6196   003122  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6197   003126  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6198   00312A  EC3A  F00D         	call	___flmul	;wreg free
  6199   00312E  C014  F046         	movff	?___flmul,___fladd@b
  6200   003132  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6201   003136  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6202   00313A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6203   00313E  0ECF               	movlw	207
  6204   003140  6E4A               	movwf	___fladd@a^0,c
  6205   003142  0E07               	movlw	7
  6206   003144  6E4B               	movwf	(___fladd@a+1)^0,c
  6207   003146  0E50               	movlw	80
  6208   003148  6E4C               	movwf	(___fladd@a+2)^0,c
  6209   00314A  0EB9               	movlw	185
  6210   00314C  6E4D               	movwf	(___fladd@a+3)^0,c
  6211   00314E  ECD9  F00A         	call	___fladd	;wreg free
  6212   003152  C046  F068         	movff	?___fladd,___sindf@r
  6213   003156  C047  F069         	movff	?___fladd+1,___sindf@r+1
  6214   00315A  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  6215   00315E  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  6216   003162  C080  F014         	movff	___sindf@z,___flmul@b
  6217   003166  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6218   00316A  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6219   00316E  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6220   003172  C064  F018         	movff	___sindf@x,___flmul@a
  6221   003176  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  6222   00317A  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  6223   00317E  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  6224   003182  EC3A  F00D         	call	___flmul	;wreg free
  6225   003186  C014  F07C         	movff	?___flmul,___sindf@s
  6226   00318A  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  6227   00318E  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  6228   003192  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  6229   003196  0EAB               	movlw	171
  6230   003198  6E4A               	movwf	___fladd@a^0,c
  6231   00319A  0EAA               	movlw	170
  6232   00319C  6E4B               	movwf	(___fladd@a+1)^0,c
  6233   00319E  0E2A               	movlw	42
  6234   0031A0  6E4C               	movwf	(___fladd@a+2)^0,c
  6235   0031A2  0EBE               	movlw	190
  6236   0031A4  6E4D               	movwf	(___fladd@a+3)^0,c
  6237   0031A6  0E84               	movlw	132
  6238   0031A8  6E18               	movwf	___flmul@a^0,c
  6239   0031AA  0E88               	movlw	136
  6240   0031AC  6E19               	movwf	(___flmul@a+1)^0,c
  6241   0031AE  0E08               	movlw	8
  6242   0031B0  6E1A               	movwf	(___flmul@a+2)^0,c
  6243   0031B2  0E3C               	movlw	60
  6244   0031B4  6E1B               	movwf	(___flmul@a+3)^0,c
  6245   0031B6  C080  F014         	movff	___sindf@z,___flmul@b
  6246   0031BA  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  6247   0031BE  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  6248   0031C2  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  6249   0031C6  EC3A  F00D         	call	___flmul	;wreg free
  6250   0031CA  C014  F046         	movff	?___flmul,___fladd@b
  6251   0031CE  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6252   0031D2  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6253   0031D6  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6254   0031DA  ECD9  F00A         	call	___fladd	;wreg free
  6255   0031DE  C046  F070         	movff	?___fladd,___sindf$4538
  6256   0031E2  C047  F071         	movff	?___fladd+1,___sindf$4538+1
  6257   0031E6  C048  F072         	movff	?___fladd+2,___sindf$4538+2
  6258   0031EA  C049  F073         	movff	?___fladd+3,___sindf$4538+3
  6259   0031EE  C06C  F018         	movff	___sindf@w,___flmul@a
  6260   0031F2  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  6261   0031F6  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  6262   0031FA  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  6263   0031FE  C07C  F014         	movff	___sindf@s,___flmul@b
  6264   003202  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6265   003206  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6266   00320A  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6267   00320E  EC3A  F00D         	call	___flmul	;wreg free
  6268   003212  C014  F074         	movff	?___flmul,___sindf$4539
  6269   003216  C015  F075         	movff	?___flmul+1,___sindf$4539+1
  6270   00321A  C016  F076         	movff	?___flmul+2,___sindf$4539+2
  6271   00321E  C017  F077         	movff	?___flmul+3,___sindf$4539+3
  6272   003222  C064  F04A         	movff	___sindf@x,___fladd@a
  6273   003226  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6274   00322A  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6275   00322E  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6276   003232  C07C  F018         	movff	___sindf@s,___flmul@a
  6277   003236  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6278   00323A  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6279   00323E  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6280   003242  C070  F014         	movff	___sindf$4538,___flmul@b
  6281   003246  C071  F015         	movff	___sindf$4538+1,___flmul@b+1
  6282   00324A  C072  F016         	movff	___sindf$4538+2,___flmul@b+2
  6283   00324E  C073  F017         	movff	___sindf$4538+3,___flmul@b+3
  6284   003252  EC3A  F00D         	call	___flmul	;wreg free
  6285   003256  C014  F046         	movff	?___flmul,___fladd@b
  6286   00325A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6287   00325E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6288   003262  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6289   003266  ECD9  F00A         	call	___fladd	;wreg free
  6290   00326A  C046  F078         	movff	?___fladd,___sindf$4540
  6291   00326E  C047  F079         	movff	?___fladd+1,___sindf$4540+1
  6292   003272  C048  F07A         	movff	?___fladd+2,___sindf$4540+2
  6293   003276  C049  F07B         	movff	?___fladd+3,___sindf$4540+3
  6294   00327A  C078  F046         	movff	___sindf$4540,___fladd@b
  6295   00327E  C079  F047         	movff	___sindf$4540+1,___fladd@b+1
  6296   003282  C07A  F048         	movff	___sindf$4540+2,___fladd@b+2
  6297   003286  C07B  F049         	movff	___sindf$4540+3,___fladd@b+3
  6298   00328A  C068  F018         	movff	___sindf@r,___flmul@a
  6299   00328E  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6300   003292  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6301   003296  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6302   00329A  C074  F014         	movff	___sindf$4539,___flmul@b
  6303   00329E  C075  F015         	movff	___sindf$4539+1,___flmul@b+1
  6304   0032A2  C076  F016         	movff	___sindf$4539+2,___flmul@b+2
  6305   0032A6  C077  F017         	movff	___sindf$4539+3,___flmul@b+3
  6306   0032AA  EC3A  F00D         	call	___flmul	;wreg free
  6307   0032AE  C014  F04A         	movff	?___flmul,___fladd@a
  6308   0032B2  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6309   0032B6  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6310   0032BA  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6311   0032BE  ECD9  F00A         	call	___fladd	;wreg free
  6312   0032C2  C046  F064         	movff	?___fladd,?___sindf
  6313   0032C6  C047  F065         	movff	?___fladd+1,?___sindf+1
  6314   0032CA  C048  F066         	movff	?___fladd+2,?___sindf+2
  6315   0032CE  C049  F067         	movff	?___fladd+3,?___sindf+3
  6316   0032D2  0012               	return		;funcret
  6317   0032D4                     __end_of___sindf:
  6318                           	callstack 0
  6319                           
  6320 ;; *************** function ___rem_pio2f *****************
  6321 ;; Defined at:
  6322 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  x               4   36[BANK0 ] float 
  6325 ;;  y               1   40[BANK0 ] PTR 
  6326 ;;		 -> sinf@y(4), 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  n               4   64[BANK0 ] long 
  6329 ;;  t               4   60[BANK0 ] float 
  6330 ;;  fn              4   56[BANK0 ] float 
  6331 ;;  ux              4   52[BANK0 ] struct .
  6332 ;;  ty              4   43[BANK0 ] [1]
  6333 ;;  sign            1   51[BANK0 ] _Bool 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  2   36[BANK0 ] int 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6343 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;Total ram usage:       32 bytes
  6348 ;; Hardware stack levels used: 1
  6349 ;; Hardware stack levels required when called: 3
  6350 ;; This function calls:
  6351 ;;		___fladd
  6352 ;;		___flmul
  6353 ;;		___flneg
  6354 ;;		___flsub
  6355 ;;		___fltol
  6356 ;;		___xxtofl
  6357 ;;		_fabsf
  6358 ;; This function is called by:
  6359 ;;		_sinf
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text19
  6364   00265E                     __ptext19:
  6365                           	callstack 0
  6366   00265E                     ___rem_pio2f:
  6367                           	callstack 25
  6368   00265E  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6369   002662  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6370   002666  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6371   00266A  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6372   00266E  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6373   002672  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6374   002676  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6375   00267A  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6376   00267E  0100               	movlb	0	; () banked
  6377   002680  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6378   002682  EF45  F013         	goto	u9311
  6379   002686  EF48  F013         	goto	u9310
  6380   00268A                     u9311:
  6381   00268A  0E01               	movlw	1
  6382   00268C  EF49  F013         	goto	u9320
  6383   002690                     u9310:
  6384   002690  0E00               	movlw	0
  6385   002692                     u9320:
  6386   002692  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6387   002694                     
  6388                           ; BSR set to: 0
  6389   002694  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6390   002696                     
  6391                           ; BSR set to: 0
  6392   002696  0EDB               	movlw	219
  6393   002698  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6394   00269A  0E0F               	movlw	15
  6395   00269C  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6396   00269E  0EC9               	movlw	201
  6397   0026A0  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6398   0026A2  0E4D               	movlw	77
  6399   0026A4  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6400   0026A6  B0D8               	btfsc	status,0,c
  6401   0026A8  EF58  F013         	goto	u9331
  6402   0026AC  EF5A  F013         	goto	u9330
  6403   0026B0                     u9331:
  6404   0026B0  EF46  F014         	goto	l7736
  6405   0026B4                     u9330:
  6406   0026B4                     
  6407                           ; BSR set to: 0
  6408   0026B4  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6409   0026B8  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6410   0026BC  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6411   0026C0  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6412   0026C4  ECF8  F028         	call	_fabsf	;wreg free
  6413   0026C8  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6414   0026CC  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6415   0026D0  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6416   0026D4  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6417   0026D8  0E00               	movlw	0
  6418   0026DA  6E4A               	movwf	___fladd@a^0,c
  6419   0026DC  0E00               	movlw	0
  6420   0026DE  6E4B               	movwf	(___fladd@a+1)^0,c
  6421   0026E0  0E00               	movlw	0
  6422   0026E2  6E4C               	movwf	(___fladd@a+2)^0,c
  6423   0026E4  0E3F               	movlw	63
  6424   0026E6  6E4D               	movwf	(___fladd@a+3)^0,c
  6425   0026E8  0E83               	movlw	131
  6426   0026EA  6E18               	movwf	___flmul@a^0,c
  6427   0026EC  0EF9               	movlw	249
  6428   0026EE  6E19               	movwf	(___flmul@a+1)^0,c
  6429   0026F0  0E22               	movlw	34
  6430   0026F2  6E1A               	movwf	(___flmul@a+2)^0,c
  6431   0026F4  0E3F               	movlw	63
  6432   0026F6  6E1B               	movwf	(___flmul@a+3)^0,c
  6433   0026F8  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6434   0026FC  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6435   002700  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6436   002704  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6437   002708  EC3A  F00D         	call	___flmul	;wreg free
  6438   00270C  C014  F046         	movff	?___flmul,___fladd@b
  6439   002710  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6440   002714  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6441   002718  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6442   00271C  ECD9  F00A         	call	___fladd	;wreg free
  6443   002720  C046  F064         	movff	?___fladd,___fltol@f1
  6444   002724  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6445   002728  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6446   00272C  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6447   002730  EC7C  F021         	call	___fltol	;wreg free
  6448   002734  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6449   002738  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6450   00273C  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6451   002740  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6452   002744  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6453   002748  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6454   00274C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6455   002750  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6456   002754  0E01               	movlw	1
  6457   002756  EC7D  F01C         	call	___xxtofl
  6458   00275A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6459   00275E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6460   002762  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6461   002766  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6462   00276A  0EDA               	movlw	218
  6463   00276C  6E18               	movwf	___flmul@a^0,c
  6464   00276E  0E0F               	movlw	15
  6465   002770  6E19               	movwf	(___flmul@a+1)^0,c
  6466   002772  0EC9               	movlw	201
  6467   002774  6E1A               	movwf	(___flmul@a+2)^0,c
  6468   002776  0E3F               	movlw	63
  6469   002778  6E1B               	movwf	(___flmul@a+3)^0,c
  6470   00277A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6471   00277E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6472   002782  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6473   002786  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6474   00278A  EC3A  F00D         	call	___flmul	;wreg free
  6475   00278E  C014  F068         	movff	?___flmul,___flsub@a
  6476   002792  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6477   002796  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6478   00279A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6479   00279E  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6480   0027A2  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6481   0027A6  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6482   0027AA  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6483   0027AE  EC01  F028         	call	___flsub	;wreg free
  6484   0027B2  C064  F08F         	movff	?___flsub,___rem_pio2f$4537
  6485   0027B6  C065  F090         	movff	?___flsub+1,___rem_pio2f$4537+1
  6486   0027BA  C066  F091         	movff	?___flsub+2,___rem_pio2f$4537+2
  6487   0027BE  C067  F092         	movff	?___flsub+3,___rem_pio2f$4537+3
  6488   0027C2  C08F  F064         	movff	___rem_pio2f$4537,___flsub@b
  6489   0027C6  C090  F065         	movff	___rem_pio2f$4537+1,___flsub@b+1
  6490   0027CA  C091  F066         	movff	___rem_pio2f$4537+2,___flsub@b+2
  6491   0027CE  C092  F067         	movff	___rem_pio2f$4537+3,___flsub@b+3
  6492   0027D2  0EA3               	movlw	163
  6493   0027D4  6E18               	movwf	___flmul@a^0,c
  6494   0027D6  0E85               	movlw	133
  6495   0027D8  6E19               	movwf	(___flmul@a+1)^0,c
  6496   0027DA  0E88               	movlw	136
  6497   0027DC  6E1A               	movwf	(___flmul@a+2)^0,c
  6498   0027DE  0E32               	movlw	50
  6499   0027E0  6E1B               	movwf	(___flmul@a+3)^0,c
  6500   0027E2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6501   0027E6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6502   0027EA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6503   0027EE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6504   0027F2  EC3A  F00D         	call	___flmul	;wreg free
  6505   0027F6  C014  F068         	movff	?___flmul,___flsub@a
  6506   0027FA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6507   0027FE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6508   002802  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6509   002806  EC01  F028         	call	___flsub	;wreg free
  6510   00280A  0100               	movlb	0	; () banked
  6511   00280C  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6512   00280E  6ED9               	movwf	fsr2l,c
  6513   002810  6ADA               	clrf	fsr2h,c
  6514   002812  C064  FFDE         	movff	?___flsub,postinc2
  6515   002816  C065  FFDE         	movff	?___flsub+1,postinc2
  6516   00281A  C066  FFDE         	movff	?___flsub+2,postinc2
  6517   00281E  C067  FFDE         	movff	?___flsub+3,postinc2
  6518   002822                     
  6519                           ; BSR set to: 0
  6520   002822  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6521   002824  B4D8               	btfsc	status,2,c
  6522   002826  EF17  F014         	goto	u9341
  6523   00282A  EF19  F014         	goto	u9340
  6524   00282E                     u9341:
  6525   00282E  EF40  F014         	goto	l1744
  6526   002832                     u9340:
  6527   002832                     l7730:
  6528                           
  6529                           ; BSR set to: 0
  6530   002832  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6531   002834  6ED9               	movwf	fsr2l,c
  6532   002836  6ADA               	clrf	fsr2h,c
  6533   002838  CFDE F080          	movff	postinc2,___flneg@f1
  6534   00283C  CFDE F081          	movff	postinc2,___flneg@f1+1
  6535   002840  CFDE F082          	movff	postinc2,___flneg@f1+2
  6536   002844  CFDE F083          	movff	postinc2,___flneg@f1+3
  6537   002848  EC89  F028         	call	___flneg	;wreg free
  6538   00284C  0100               	movlb	0	; () banked
  6539   00284E  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6540   002850  6ED9               	movwf	fsr2l,c
  6541   002852  6ADA               	clrf	fsr2h,c
  6542   002854  C080  FFDE         	movff	?___flneg,postinc2
  6543   002858  C081  FFDE         	movff	?___flneg+1,postinc2
  6544   00285C  C082  FFDE         	movff	?___flneg+2,postinc2
  6545   002860  C083  FFDE         	movff	?___flneg+3,postinc2
  6546   002864                     
  6547                           ; BSR set to: 0
  6548   002864  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6549   002868  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6550   00286C  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6551   00286E  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6552   002870  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6553   002872  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6554   002874  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6555   002878  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6556   00287C  EF0F  F015         	goto	l1745
  6557   002880                     l1744:
  6558                           
  6559                           ; BSR set to: 0
  6560   002880  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6561   002884  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6562   002888  EF0F  F015         	goto	l1745
  6563   00288C                     l7736:
  6564                           
  6565                           ; BSR set to: 0
  6566   00288C  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6567   002890  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6568   002894  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6569   002898  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6570   00289C  ECF8  F028         	call	_fabsf	;wreg free
  6571   0028A0  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6572   0028A4  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6573   0028A8  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6574   0028AC  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6575   0028B0  0E00               	movlw	0
  6576   0028B2  6E4A               	movwf	___fladd@a^0,c
  6577   0028B4  0E00               	movlw	0
  6578   0028B6  6E4B               	movwf	(___fladd@a+1)^0,c
  6579   0028B8  0E00               	movlw	0
  6580   0028BA  6E4C               	movwf	(___fladd@a+2)^0,c
  6581   0028BC  0E3F               	movlw	63
  6582   0028BE  6E4D               	movwf	(___fladd@a+3)^0,c
  6583   0028C0  0E83               	movlw	131
  6584   0028C2  6E18               	movwf	___flmul@a^0,c
  6585   0028C4  0EF9               	movlw	249
  6586   0028C6  6E19               	movwf	(___flmul@a+1)^0,c
  6587   0028C8  0E22               	movlw	34
  6588   0028CA  6E1A               	movwf	(___flmul@a+2)^0,c
  6589   0028CC  0E3F               	movlw	63
  6590   0028CE  6E1B               	movwf	(___flmul@a+3)^0,c
  6591   0028D0  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6592   0028D4  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6593   0028D8  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6594   0028DC  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6595   0028E0  EC3A  F00D         	call	___flmul	;wreg free
  6596   0028E4  C014  F046         	movff	?___flmul,___fladd@b
  6597   0028E8  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6598   0028EC  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6599   0028F0  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6600   0028F4  ECD9  F00A         	call	___fladd	;wreg free
  6601   0028F8  C046  F064         	movff	?___fladd,___fltol@f1
  6602   0028FC  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6603   002900  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6604   002904  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6605   002908  EC7C  F021         	call	___fltol	;wreg free
  6606   00290C  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6607   002910  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6608   002914  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6609   002918  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6610   00291C  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6611   002920  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6612   002924  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6613   002928  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6614   00292C  0E01               	movlw	1
  6615   00292E  EC7D  F01C         	call	___xxtofl
  6616   002932  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6617   002936  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6618   00293A  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6619   00293E  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6620   002942  0EDA               	movlw	218
  6621   002944  6E18               	movwf	___flmul@a^0,c
  6622   002946  0E0F               	movlw	15
  6623   002948  6E19               	movwf	(___flmul@a+1)^0,c
  6624   00294A  0EC9               	movlw	201
  6625   00294C  6E1A               	movwf	(___flmul@a+2)^0,c
  6626   00294E  0E3F               	movlw	63
  6627   002950  6E1B               	movwf	(___flmul@a+3)^0,c
  6628   002952  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6629   002956  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6630   00295A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6631   00295E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6632   002962  EC3A  F00D         	call	___flmul	;wreg free
  6633   002966  C014  F068         	movff	?___flmul,___flsub@a
  6634   00296A  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6635   00296E  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6636   002972  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6637   002976  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6638   00297A  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6639   00297E  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6640   002982  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6641   002986  EC01  F028         	call	___flsub	;wreg free
  6642   00298A  C064  F08F         	movff	?___flsub,___rem_pio2f$4537
  6643   00298E  C065  F090         	movff	?___flsub+1,___rem_pio2f$4537+1
  6644   002992  C066  F091         	movff	?___flsub+2,___rem_pio2f$4537+2
  6645   002996  C067  F092         	movff	?___flsub+3,___rem_pio2f$4537+3
  6646   00299A  C08F  F064         	movff	___rem_pio2f$4537,___flsub@b
  6647   00299E  C090  F065         	movff	___rem_pio2f$4537+1,___flsub@b+1
  6648   0029A2  C091  F066         	movff	___rem_pio2f$4537+2,___flsub@b+2
  6649   0029A6  C092  F067         	movff	___rem_pio2f$4537+3,___flsub@b+3
  6650   0029AA  0EA3               	movlw	163
  6651   0029AC  6E18               	movwf	___flmul@a^0,c
  6652   0029AE  0E85               	movlw	133
  6653   0029B0  6E19               	movwf	(___flmul@a+1)^0,c
  6654   0029B2  0E88               	movlw	136
  6655   0029B4  6E1A               	movwf	(___flmul@a+2)^0,c
  6656   0029B6  0E32               	movlw	50
  6657   0029B8  6E1B               	movwf	(___flmul@a+3)^0,c
  6658   0029BA  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6659   0029BE  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6660   0029C2  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6661   0029C6  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6662   0029CA  EC3A  F00D         	call	___flmul	;wreg free
  6663   0029CE  C014  F068         	movff	?___flmul,___flsub@a
  6664   0029D2  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6665   0029D6  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6666   0029DA  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6667   0029DE  EC01  F028         	call	___flsub	;wreg free
  6668   0029E2  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6669   0029E6  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6670   0029EA  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6671   0029EE  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6672   0029F2  0100               	movlb	0	; () banked
  6673   0029F4  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6674   0029F6  6ED9               	movwf	fsr2l,c
  6675   0029F8  6ADA               	clrf	fsr2h,c
  6676   0029FA  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6677   0029FE  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6678   002A02  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6679   002A06  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6680   002A0A                     
  6681                           ; BSR set to: 0
  6682   002A0A  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6683   002A0C  B4D8               	btfsc	status,2,c
  6684   002A0E  EF0B  F015         	goto	u9351
  6685   002A12  EF0D  F015         	goto	u9350
  6686   002A16                     u9351:
  6687   002A16  EF40  F014         	goto	l1744
  6688   002A1A                     u9350:
  6689   002A1A  EF19  F014         	goto	l7730
  6690   002A1E                     l1745:
  6691                           
  6692                           ; BSR set to: 0
  6693   002A1E  0012               	return		;funcret
  6694   002A20                     __end_of___rem_pio2f:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _fabsf *****************
  6698 ;; Defined at:
  6699 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  x               4    5[COMRAM] float 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  u               4    9[COMRAM] struct .
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  4    5[COMRAM] float 
  6706 ;; Registers used:
  6707 ;;		status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;Total ram usage:        8 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 1
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		___rem_pio2f
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text20
  6728   0051F0                     __ptext20:
  6729                           	callstack 0
  6730   0051F0                     _fabsf:
  6731                           	callstack 26
  6732   0051F0  C111  F00A         	movff	fabsf@F465,fabsf@u
  6733   0051F4  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6734   0051F8  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6735   0051FC  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6736   005200  C006  F00A         	movff	fabsf@x,fabsf@u
  6737   005204  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6738   005208  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6739   00520C  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6740   005210  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6741   005212  C00A  F006         	movff	fabsf@u,?_fabsf
  6742   005216  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6743   00521A  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6744   00521E  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6745   005222  0012               	return		;funcret
  6746   005224                     __end_of_fabsf:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function ___cosdf *****************
  6750 ;; Defined at:
  6751 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  x               4    4[BANK0 ] float 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  z               4   28[BANK0 ] float 
  6756 ;;  w               4   24[BANK0 ] float 
  6757 ;;  r               4    8[BANK0 ] float 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  4    4[BANK0 ] float 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6767 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6768 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;Total ram usage:       28 bytes
  6772 ;; Hardware stack levels used: 1
  6773 ;; Hardware stack levels required when called: 2
  6774 ;; This function calls:
  6775 ;;		___fladd
  6776 ;;		___flmul
  6777 ;; This function is called by:
  6778 ;;		_sinf
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text21
  6783   0036FC                     __ptext21:
  6784                           	callstack 0
  6785   0036FC                     ___cosdf:
  6786                           	callstack 26
  6787   0036FC  C064  F014         	movff	___cosdf@x,___flmul@b
  6788   003700  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6789   003704  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6790   003708  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6791   00370C  C064  F018         	movff	___cosdf@x,___flmul@a
  6792   003710  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6793   003714  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6794   003718  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6795   00371C  EC3A  F00D         	call	___flmul	;wreg free
  6796   003720  C014  F07C         	movff	?___flmul,___cosdf@z
  6797   003724  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6798   003728  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6799   00372C  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6800   003730  C07C  F014         	movff	___cosdf@z,___flmul@b
  6801   003734  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6802   003738  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6803   00373C  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6804   003740  C07C  F018         	movff	___cosdf@z,___flmul@a
  6805   003744  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6806   003748  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6807   00374C  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6808   003750  EC3A  F00D         	call	___flmul	;wreg free
  6809   003754  C014  F078         	movff	?___flmul,___cosdf@w
  6810   003758  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6811   00375C  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6812   003760  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6813   003764  0E17               	movlw	23
  6814   003766  6E18               	movwf	___flmul@a^0,c
  6815   003768  0E9A               	movlw	154
  6816   00376A  6E19               	movwf	(___flmul@a+1)^0,c
  6817   00376C  0ECC               	movlw	204
  6818   00376E  6E1A               	movwf	(___flmul@a+2)^0,c
  6819   003770  0E37               	movlw	55
  6820   003772  6E1B               	movwf	(___flmul@a+3)^0,c
  6821   003774  C07C  F014         	movff	___cosdf@z,___flmul@b
  6822   003778  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6823   00377C  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6824   003780  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6825   003784  EC3A  F00D         	call	___flmul	;wreg free
  6826   003788  C014  F046         	movff	?___flmul,___fladd@b
  6827   00378C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6828   003790  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6829   003794  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6830   003798  0E3F               	movlw	63
  6831   00379A  6E4A               	movwf	___fladd@a^0,c
  6832   00379C  0E04               	movlw	4
  6833   00379E  6E4B               	movwf	(___fladd@a+1)^0,c
  6834   0037A0  0EB6               	movlw	182
  6835   0037A2  6E4C               	movwf	(___fladd@a+2)^0,c
  6836   0037A4  0EBA               	movlw	186
  6837   0037A6  6E4D               	movwf	(___fladd@a+3)^0,c
  6838   0037A8  ECD9  F00A         	call	___fladd	;wreg free
  6839   0037AC  C046  F068         	movff	?___fladd,___cosdf@r
  6840   0037B0  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6841   0037B4  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6842   0037B8  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6843   0037BC  0E00               	movlw	0
  6844   0037BE  6E4A               	movwf	___fladd@a^0,c
  6845   0037C0  0E00               	movlw	0
  6846   0037C2  6E4B               	movwf	(___fladd@a+1)^0,c
  6847   0037C4  0E80               	movlw	128
  6848   0037C6  6E4C               	movwf	(___fladd@a+2)^0,c
  6849   0037C8  0E3F               	movlw	63
  6850   0037CA  6E4D               	movwf	(___fladd@a+3)^0,c
  6851   0037CC  0E00               	movlw	0
  6852   0037CE  6E18               	movwf	___flmul@a^0,c
  6853   0037D0  0E00               	movlw	0
  6854   0037D2  6E19               	movwf	(___flmul@a+1)^0,c
  6855   0037D4  0E00               	movlw	0
  6856   0037D6  6E1A               	movwf	(___flmul@a+2)^0,c
  6857   0037D8  0EBF               	movlw	191
  6858   0037DA  6E1B               	movwf	(___flmul@a+3)^0,c
  6859   0037DC  C07C  F014         	movff	___cosdf@z,___flmul@b
  6860   0037E0  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6861   0037E4  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6862   0037E8  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6863   0037EC  EC3A  F00D         	call	___flmul	;wreg free
  6864   0037F0  C014  F046         	movff	?___flmul,___fladd@b
  6865   0037F4  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6866   0037F8  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6867   0037FC  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6868   003800  ECD9  F00A         	call	___fladd	;wreg free
  6869   003804  C046  F06C         	movff	?___fladd,___cosdf$4534
  6870   003808  C047  F06D         	movff	?___fladd+1,___cosdf$4534+1
  6871   00380C  C048  F06E         	movff	?___fladd+2,___cosdf$4534+2
  6872   003810  C049  F06F         	movff	?___fladd+3,___cosdf$4534+3
  6873   003814  C07C  F018         	movff	___cosdf@z,___flmul@a
  6874   003818  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6875   00381C  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6876   003820  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6877   003824  C078  F014         	movff	___cosdf@w,___flmul@b
  6878   003828  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6879   00382C  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6880   003830  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6881   003834  EC3A  F00D         	call	___flmul	;wreg free
  6882   003838  C014  F070         	movff	?___flmul,___cosdf$4535
  6883   00383C  C015  F071         	movff	?___flmul+1,___cosdf$4535+1
  6884   003840  C016  F072         	movff	?___flmul+2,___cosdf$4535+2
  6885   003844  C017  F073         	movff	?___flmul+3,___cosdf$4535+3
  6886   003848  0E9F               	movlw	159
  6887   00384A  6E18               	movwf	___flmul@a^0,c
  6888   00384C  0EAA               	movlw	170
  6889   00384E  6E19               	movwf	(___flmul@a+1)^0,c
  6890   003850  0E2A               	movlw	42
  6891   003852  6E1A               	movwf	(___flmul@a+2)^0,c
  6892   003854  0E3D               	movlw	61
  6893   003856  6E1B               	movwf	(___flmul@a+3)^0,c
  6894   003858  C078  F014         	movff	___cosdf@w,___flmul@b
  6895   00385C  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6896   003860  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6897   003864  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6898   003868  EC3A  F00D         	call	___flmul	;wreg free
  6899   00386C  C014  F04A         	movff	?___flmul,___fladd@a
  6900   003870  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6901   003874  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6902   003878  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6903   00387C  C06C  F046         	movff	___cosdf$4534,___fladd@b
  6904   003880  C06D  F047         	movff	___cosdf$4534+1,___fladd@b+1
  6905   003884  C06E  F048         	movff	___cosdf$4534+2,___fladd@b+2
  6906   003888  C06F  F049         	movff	___cosdf$4534+3,___fladd@b+3
  6907   00388C  ECD9  F00A         	call	___fladd	;wreg free
  6908   003890  C046  F074         	movff	?___fladd,___cosdf$4536
  6909   003894  C047  F075         	movff	?___fladd+1,___cosdf$4536+1
  6910   003898  C048  F076         	movff	?___fladd+2,___cosdf$4536+2
  6911   00389C  C049  F077         	movff	?___fladd+3,___cosdf$4536+3
  6912   0038A0  C074  F046         	movff	___cosdf$4536,___fladd@b
  6913   0038A4  C075  F047         	movff	___cosdf$4536+1,___fladd@b+1
  6914   0038A8  C076  F048         	movff	___cosdf$4536+2,___fladd@b+2
  6915   0038AC  C077  F049         	movff	___cosdf$4536+3,___fladd@b+3
  6916   0038B0  C068  F018         	movff	___cosdf@r,___flmul@a
  6917   0038B4  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6918   0038B8  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6919   0038BC  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6920   0038C0  C070  F014         	movff	___cosdf$4535,___flmul@b
  6921   0038C4  C071  F015         	movff	___cosdf$4535+1,___flmul@b+1
  6922   0038C8  C072  F016         	movff	___cosdf$4535+2,___flmul@b+2
  6923   0038CC  C073  F017         	movff	___cosdf$4535+3,___flmul@b+3
  6924   0038D0  EC3A  F00D         	call	___flmul	;wreg free
  6925   0038D4  C014  F04A         	movff	?___flmul,___fladd@a
  6926   0038D8  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6927   0038DC  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6928   0038E0  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6929   0038E4  ECD9  F00A         	call	___fladd	;wreg free
  6930   0038E8  C046  F064         	movff	?___fladd,?___cosdf
  6931   0038EC  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6932   0038F0  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6933   0038F4  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6934   0038F8  0012               	return		;funcret
  6935   0038FA                     __end_of___cosdf:
  6936                           	callstack 0
  6937                           
  6938 ;; *************** function _printf *****************
  6939 ;; Defined at:
  6940 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6943 ;;		 -> STR_34(5), STR_22(5), 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  ret             2    0        int 
  6946 ;;  ap              1   83[COMRAM] PTR void [1]
  6947 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  2  110[BANK0 ] int 
  6950 ;; Registers used:
  6951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6957 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;Total ram usage:        5 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 8
  6964 ;; This function calls:
  6965 ;;		_vfprintf
  6966 ;; This function is called by:
  6967 ;;		_runDAC
  6968 ;;		_runUART
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text22
  6973   0052CC                     __ptext22:
  6974                           	callstack 0
  6975   0052CC                     _printf:
  6976                           	callstack 21
  6977   0052CC  0ED0               	movlw	low (?_printf+2)
  6978   0052CE  6E54               	movwf	printf@ap^0,c
  6979   0052D0  0E00               	movlw	0
  6980   0052D2  0100               	movlb	0	; () banked
  6981   0052D4  6FC7               	movwf	vfprintf@fp& (0+255),b
  6982   0052D6  0E00               	movlw	0
  6983   0052D8  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6984   0052DA  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6985   0052DE  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6986   0052E2  0E54               	movlw	low printf@ap
  6987   0052E4  6FCB               	movwf	vfprintf@ap& (0+255),b
  6988   0052E6  ECDC  F027         	call	_vfprintf	;wreg free
  6989   0052EA  0012               	return		;funcret
  6990   0052EC                     __end_of_printf:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _SPI_write *****************
  6994 ;; Defined at:
  6995 ;;		line 93 in file "DAC.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  data            1    wreg     unsigned char 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  data            1    7[COMRAM] unsigned char 
  7000 ;;  LSB             1    6[COMRAM] unsigned char 
  7001 ;;  MSB             1    5[COMRAM] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      void 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;Total ram usage:        3 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_runDAC
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text23
  7026   0050D4                     __ptext23:
  7027                           	callstack 0
  7028   0050D4                     _SPI_write:
  7029                           	callstack 28
  7030                           
  7031                           ;incstack = 0
  7032                           ;SPI_write@data stored from wreg
  7033   0050D4  6E08               	movwf	SPI_write@data^0,c
  7034   0050D6                     
  7035                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  7036   0050D6  3808               	swapf	SPI_write@data^0,w,c
  7037   0050D8  0B0F               	andlw	15
  7038   0050DA  0930               	iorlw	48
  7039   0050DC  6E06               	movwf	SPI_write@MSB^0,c
  7040                           
  7041                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  7042   0050DE  3808               	swapf	SPI_write@data^0,w,c
  7043   0050E0  0BF0               	andlw	240
  7044   0050E2  6E07               	movwf	SPI_write@LSB^0,c
  7045   0050E4                     
  7046                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  7047   0050E4  968A               	bcf	138,3,c	;volatile
  7048   0050E6                     
  7049                           ;DAC.c: 101:     SSP1BUF = MSB;
  7050   0050E6  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  7051   0050EA                     l245:
  7052   0050EA  A69E               	btfss	3998,3,c	;volatile
  7053   0050EC  EF7A  F028         	goto	u9441
  7054   0050F0  EF7C  F028         	goto	u9440
  7055   0050F4                     u9441:
  7056   0050F4  EF75  F028         	goto	l245
  7057   0050F8                     u9440:
  7058   0050F8                     
  7059                           ;DAC.c: 103:     SSP1IF = 0;
  7060   0050F8  969E               	bcf	3998,3,c	;volatile
  7061                           
  7062                           ;DAC.c: 105:     SSP1BUF = LSB;
  7063   0050FA  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  7064   0050FE                     l248:
  7065   0050FE  A69E               	btfss	3998,3,c	;volatile
  7066   005100  EF84  F028         	goto	u9451
  7067   005104  EF86  F028         	goto	u9450
  7068   005108                     u9451:
  7069   005108  EF7F  F028         	goto	l248
  7070   00510C                     u9450:
  7071   00510C                     
  7072                           ;DAC.c: 107:     SSP1IF = 0;
  7073   00510C  969E               	bcf	3998,3,c	;volatile
  7074                           
  7075                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  7076   00510E  868A               	bsf	138,3,c	;volatile
  7077   005110  0012               	return		;funcret
  7078   005112                     __end_of_SPI_write:
  7079                           	callstack 0
  7080                           
  7081 ;; *************** function _runADC *****************
  7082 ;; Defined at:
  7083 ;;		line 13 in file "ADC.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  text           17    0[BANK1 ] unsigned char [17]
  7088 ;;  voltage2        4   21[BANK1 ] float 
  7089 ;;  voltage1        4   17[BANK1 ] float 
  7090 ;;  pot2            2   27[BANK1 ] unsigned short 
  7091 ;;  pot1            2   25[BANK1 ] unsigned short 
  7092 ;;  keepState       1   29[BANK1 ] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7106 ;;Total ram usage:       32 bytes
  7107 ;; Hardware stack levels used: 1
  7108 ;; Hardware stack levels required when called: 9
  7109 ;; This function calls:
  7110 ;;		_LCD_ShowString
  7111 ;;		___fldiv
  7112 ;;		___flmul
  7113 ;;		___xxtofl
  7114 ;;		_sprintf
  7115 ;; This function is called by:
  7116 ;;		_main
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text24
  7121   0034EA                     __ptext24:
  7122                           	callstack 0
  7123   0034EA                     _runADC:
  7124                           	callstack 21
  7125   0034EA                     
  7126                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  7127   0034EA  010F               	movlb	15	; () banked
  7128   0034EC  8B38               	bsf	56,5,b	;volatile
  7129                           
  7130                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  7131   0034EE  813C               	bsf	60,0,b	;volatile
  7132                           
  7133                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  7134   0034F0  8EC0               	bsf	192,7,c	;volatile
  7135   0034F2                     
  7136                           ; BSR set to: 15
  7137                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  7138   0034F2  50C0               	movf	192,w,c	;volatile
  7139   0034F4  0BF8               	andlw	-8
  7140   0034F6  0906               	iorlw	6
  7141   0034F8  6EC0               	movwf	192,c	;volatile
  7142                           
  7143                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  7144   0034FA  50C0               	movf	192,w,c	;volatile
  7145   0034FC  0BC7               	andlw	-57
  7146   0034FE  0930               	iorlw	48
  7147   003500  6EC0               	movwf	192,c	;volatile
  7148   003502                     
  7149                           ; BSR set to: 15
  7150                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  7151   003502  80C2               	bsf	194,0,c	;volatile
  7152   003504                     
  7153                           ; BSR set to: 15
  7154                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  7155   003504  EE21  F09B         	lfsr	2,runADC@text
  7156   003508  0E10               	movlw	16
  7157   00350A                     u10011:
  7158   00350A  6ADE               	clrf	postinc2,c
  7159   00350C  06E8               	decf	wreg,f,c
  7160   00350E  E2FD               	bc	u10011
  7161   003510                     
  7162                           ; BSR set to: 15
  7163                           ;ADC.c: 28: uint8_t keepState = 1;
  7164   003510  0E01               	movlw	1
  7165   003512  0101               	movlb	1	; () banked
  7166   003514  6FB8               	movwf	runADC@keepState& (0+255),b
  7167                           
  7168                           ;ADC.c: 30: while(keepState){
  7169   003516  EF73  F01B         	goto	l462
  7170   00351A                     l8174:
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  7174   00351A  50C2               	movf	194,w,c	;volatile
  7175   00351C  0B83               	andlw	-125
  7176   00351E  0914               	iorlw	20
  7177   003520  6EC2               	movwf	194,c	;volatile
  7178   003522                     
  7179                           ; BSR set to: 1
  7180                           ;ADC.c: 33:     GODONE = 1;
  7181   003522  82C2               	bsf	4034,1,c	;volatile
  7182   003524                     l464:
  7183   003524  B2C2               	btfsc	4034,1,c	;volatile
  7184   003526  EF97  F01A         	goto	u10021
  7185   00352A  EF99  F01A         	goto	u10020
  7186   00352E                     u10021:
  7187   00352E  EF92  F01A         	goto	l464
  7188   003532                     u10020:
  7189   003532                     
  7190                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  7191   003532  50C3               	movf	195,w,c	;volatile
  7192   003534  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7193   003538  0100               	movlb	0	; () banked
  7194   00353A  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7195   00353C  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7196   003540  6BE7               	clrf	??_runADC& (0+255),b
  7197   003542  11E7               	iorwf	??_runADC& (0+255),w,b
  7198   003544  0101               	movlb	1	; () banked
  7199   003546  6FB4               	movwf	runADC@pot1& (0+255),b
  7200   003548  0100               	movlb	0	; () banked
  7201   00354A  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7202   00354C  0101               	movlb	1	; () banked
  7203   00354E  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  7204   003550                     
  7205                           ; BSR set to: 1
  7206                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  7207   003550  0E00               	movlw	0
  7208   003552  6E31               	movwf	___fldiv@a^0,c
  7209   003554  0EC0               	movlw	192
  7210   003556  6E32               	movwf	(___fldiv@a+1)^0,c
  7211   003558  0E7F               	movlw	127
  7212   00355A  6E33               	movwf	(___fldiv@a+2)^0,c
  7213   00355C  0E44               	movlw	68
  7214   00355E  6E34               	movwf	(___fldiv@a+3)^0,c
  7215   003560  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  7216   003564  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  7217   003568  6A08               	clrf	(___xxtofl@val+2)^0,c
  7218   00356A  6A09               	clrf	(___xxtofl@val+3)^0,c
  7219   00356C  0E00               	movlw	0
  7220   00356E  EC7D  F01C         	call	___xxtofl
  7221   003572  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7222   003576  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7223   00357A  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7224   00357E  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7225   003582  EC10  F015         	call	___fldiv	;wreg free
  7226   003586  C02D  F014         	movff	?___fldiv,___flmul@b
  7227   00358A  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7228   00358E  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7229   003592  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7230   003596  0E33               	movlw	51
  7231   003598  6E18               	movwf	___flmul@a^0,c
  7232   00359A  0E33               	movlw	51
  7233   00359C  6E19               	movwf	(___flmul@a+1)^0,c
  7234   00359E  0E53               	movlw	83
  7235   0035A0  6E1A               	movwf	(___flmul@a+2)^0,c
  7236   0035A2  0E40               	movlw	64
  7237   0035A4  6E1B               	movwf	(___flmul@a+3)^0,c
  7238   0035A6  EC3A  F00D         	call	___flmul	;wreg free
  7239   0035AA  C014  F1AC         	movff	?___flmul,runADC@voltage1
  7240   0035AE  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  7241   0035B2  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  7242   0035B6  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  7243   0035BA                     
  7244                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  7245   0035BA  50C2               	movf	194,w,c	;volatile
  7246   0035BC  0B83               	andlw	-125
  7247   0035BE  0910               	iorlw	16
  7248   0035C0  6EC2               	movwf	194,c	;volatile
  7249   0035C2                     
  7250                           ;ADC.c: 40:     GODONE = 1;
  7251   0035C2  82C2               	bsf	4034,1,c	;volatile
  7252   0035C4                     l467:
  7253   0035C4  B2C2               	btfsc	4034,1,c	;volatile
  7254   0035C6  EFE7  F01A         	goto	u10031
  7255   0035CA  EFE9  F01A         	goto	u10030
  7256   0035CE                     u10031:
  7257   0035CE  EFE2  F01A         	goto	l467
  7258   0035D2                     u10030:
  7259   0035D2                     
  7260                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  7261   0035D2  50C3               	movf	195,w,c	;volatile
  7262   0035D4  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  7263   0035D8  0100               	movlb	0	; () banked
  7264   0035DA  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7265   0035DC  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7266   0035E0  6BE7               	clrf	??_runADC& (0+255),b
  7267   0035E2  11E7               	iorwf	??_runADC& (0+255),w,b
  7268   0035E4  0101               	movlb	1	; () banked
  7269   0035E6  6FB6               	movwf	runADC@pot2& (0+255),b
  7270   0035E8  0100               	movlb	0	; () banked
  7271   0035EA  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7272   0035EC  0101               	movlb	1	; () banked
  7273   0035EE  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7274   0035F0                     
  7275                           ; BSR set to: 1
  7276                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7277   0035F0  0E00               	movlw	0
  7278   0035F2  6E31               	movwf	___fldiv@a^0,c
  7279   0035F4  0EC0               	movlw	192
  7280   0035F6  6E32               	movwf	(___fldiv@a+1)^0,c
  7281   0035F8  0E7F               	movlw	127
  7282   0035FA  6E33               	movwf	(___fldiv@a+2)^0,c
  7283   0035FC  0E44               	movlw	68
  7284   0035FE  6E34               	movwf	(___fldiv@a+3)^0,c
  7285   003600  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7286   003604  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7287   003608  6A08               	clrf	(___xxtofl@val+2)^0,c
  7288   00360A  6A09               	clrf	(___xxtofl@val+3)^0,c
  7289   00360C  0E00               	movlw	0
  7290   00360E  EC7D  F01C         	call	___xxtofl
  7291   003612  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7292   003616  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7293   00361A  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7294   00361E  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7295   003622  EC10  F015         	call	___fldiv	;wreg free
  7296   003626  C02D  F014         	movff	?___fldiv,___flmul@b
  7297   00362A  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7298   00362E  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7299   003632  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7300   003636  0E33               	movlw	51
  7301   003638  6E18               	movwf	___flmul@a^0,c
  7302   00363A  0E33               	movlw	51
  7303   00363C  6E19               	movwf	(___flmul@a+1)^0,c
  7304   00363E  0E53               	movlw	83
  7305   003640  6E1A               	movwf	(___flmul@a+2)^0,c
  7306   003642  0E40               	movlw	64
  7307   003644  6E1B               	movwf	(___flmul@a+3)^0,c
  7308   003646  EC3A  F00D         	call	___flmul	;wreg free
  7309   00364A  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7310   00364E  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7311   003652  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7312   003656  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7313   00365A                     
  7314                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7315   00365A  0E9B               	movlw	low runADC@text
  7316   00365C  0100               	movlb	0	; () banked
  7317   00365E  6FCE               	movwf	sprintf@s& (0+255),b
  7318   003660  0E01               	movlw	high runADC@text
  7319   003662  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7320   003664  0E46               	movlw	low STR_33
  7321   003666  6FD0               	movwf	sprintf@fmt& (0+255),b
  7322   003668  0EFE               	movlw	high STR_33
  7323   00366A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7324   00366C  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7325   003670  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7326   003674  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7327   003678  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7328   00367C  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7329   003680  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7330   003684  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7331   003688  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7332   00368C  EC25  F028         	call	_sprintf	;wreg free
  7333   003690                     
  7334                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7335   003690  0E9B               	movlw	low runADC@text
  7336   003692  6E07               	movwf	LCD_ShowString@textData^0,c
  7337   003694  0E01               	movlw	high runADC@text
  7338   003696  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7339   003698  0E02               	movlw	2
  7340   00369A  ECAD  F024         	call	_LCD_ShowString
  7341   00369E                     
  7342                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7343   00369E  A480               	btfss	128,2,c	;volatile
  7344   0036A0  EF54  F01B         	goto	u10041
  7345   0036A4  EF56  F01B         	goto	u10040
  7346   0036A8                     u10041:
  7347   0036A8  EF73  F01B         	goto	l462
  7348   0036AC                     u10040:
  7349   0036AC                     
  7350                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7351   0036AC  0E03               	movlw	3
  7352   0036AE  0100               	movlb	0	; () banked
  7353   0036B0  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7354   0036B2  0E08               	movlw	8
  7355   0036B4  6FE7               	movwf	??_runADC& (0+255),b
  7356   0036B6  0E77               	movlw	119
  7357   0036B8                     u10537:
  7358   0036B8  2EE8               	decfsz	wreg,f,c
  7359   0036BA  D7FE               	bra	u10537
  7360   0036BC  2FE7               	decfsz	??_runADC& (0+255),f,b
  7361   0036BE  D7FC               	bra	u10537
  7362   0036C0  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7363   0036C2  D7FA               	bra	u10537
  7364   0036C4                     
  7365                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7366   0036C4  A480               	btfss	128,2,c	;volatile
  7367   0036C6  EF67  F01B         	goto	u10051
  7368   0036CA  EF69  F01B         	goto	u10050
  7369   0036CE                     u10051:
  7370   0036CE  EF73  F01B         	goto	l462
  7371   0036D2                     u10050:
  7372   0036D2                     l472:
  7373   0036D2  B480               	btfsc	128,2,c	;volatile
  7374   0036D4  EF6E  F01B         	goto	u10061
  7375   0036D8  EF70  F01B         	goto	u10060
  7376   0036DC                     u10061:
  7377   0036DC  EF69  F01B         	goto	l472
  7378   0036E0                     u10060:
  7379   0036E0                     
  7380                           ;ADC.c: 52:             keepState = 0;
  7381   0036E0  0E00               	movlw	0
  7382   0036E2  0101               	movlb	1	; () banked
  7383   0036E4  6FB8               	movwf	runADC@keepState& (0+255),b
  7384   0036E6                     l462:
  7385                           
  7386                           ;ADC.c: 30: while(keepState){
  7387   0036E6  0101               	movlb	1	; () banked
  7388   0036E8  51B8               	movf	runADC@keepState& (0+255),w,b
  7389   0036EA  A4D8               	btfss	status,2,c
  7390   0036EC  EF7A  F01B         	goto	u10071
  7391   0036F0  EF7C  F01B         	goto	u10070
  7392   0036F4                     u10071:
  7393   0036F4  EF8D  F01A         	goto	l8174
  7394   0036F8                     u10070:
  7395   0036F8                     
  7396                           ; BSR set to: 1
  7397                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7398   0036F8  90C2               	bcf	194,0,c	;volatile
  7399   0036FA                     
  7400                           ; BSR set to: 1
  7401   0036FA  0012               	return		;funcret
  7402   0036FC                     __end_of_runADC:
  7403                           	callstack 0
  7404                           
  7405 ;; *************** function ___xxtofl *****************
  7406 ;; Defined at:
  7407 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  sign            1    wreg     unsigned char 
  7410 ;;  val             4    5[COMRAM] long 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  sign            1   13[COMRAM] unsigned char 
  7413 ;;  arg             4   15[COMRAM] unsigned long 
  7414 ;;  exp             1   14[COMRAM] unsigned char 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  4    5[COMRAM] unsigned char 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;Total ram usage:       14 bytes
  7429 ;; Hardware stack levels used: 1
  7430 ;; Hardware stack levels required when called: 1
  7431 ;; This function calls:
  7432 ;;		Nothing
  7433 ;; This function is called by:
  7434 ;;		_runDAC
  7435 ;;		_runADC
  7436 ;;		___rem_pio2f
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text25
  7441   0038FA                     __ptext25:
  7442                           	callstack 0
  7443   0038FA                     ___xxtofl:
  7444                           	callstack 26
  7445                           
  7446                           ; BSR set to: 1
  7447                           ;incstack = 0
  7448                           ;___xxtofl@sign stored from wreg
  7449   0038FA  6E0E               	movwf	___xxtofl@sign^0,c
  7450   0038FC  500E               	movf	___xxtofl@sign^0,w,c
  7451   0038FE  B4D8               	btfsc	status,2,c
  7452   003900  EF84  F01C         	goto	u9031
  7453   003904  EF86  F01C         	goto	u9030
  7454   003908                     u9031:
  7455   003908  EFA8  F01C         	goto	l1365
  7456   00390C                     u9030:
  7457   00390C  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7458   00390E  EF8D  F01C         	goto	u9040
  7459   003912  EF8B  F01C         	goto	u9041
  7460   003916                     u9041:
  7461   003916  EFA8  F01C         	goto	l1365
  7462   00391A                     u9040:
  7463   00391A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7464   00391E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7465   003922  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7466   003926  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7467   00392A  1E0A               	comf	??___xxtofl^0,f,c
  7468   00392C  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7469   00392E  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7470   003930  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7471   003932  2A0A               	incf	??___xxtofl^0,f,c
  7472   003934  0E00               	movlw	0
  7473   003936  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7474   003938  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7475   00393A  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7476   00393C  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7477   003940  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7478   003944  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7479   003948  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7480   00394C  EFB0  F01C         	goto	l7478
  7481   003950                     l1365:
  7482   003950  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7483   003954  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7484   003958  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7485   00395C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7486   003960                     l7478:
  7487   003960  5006               	movf	___xxtofl@val^0,w,c
  7488   003962  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7489   003964  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7490   003966  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7491   003968  A4D8               	btfss	status,2,c
  7492   00396A  EFB9  F01C         	goto	u9051
  7493   00396E  EFBB  F01C         	goto	u9050
  7494   003972                     u9051:
  7495   003972  EFC5  F01C         	goto	l7484
  7496   003976                     u9050:
  7497   003976  0E00               	movlw	0
  7498   003978  6E06               	movwf	?___xxtofl^0,c
  7499   00397A  0E00               	movlw	0
  7500   00397C  6E07               	movwf	(?___xxtofl+1)^0,c
  7501   00397E  0E00               	movlw	0
  7502   003980  6E08               	movwf	(?___xxtofl+2)^0,c
  7503   003982  0E00               	movlw	0
  7504   003984  6E09               	movwf	(?___xxtofl+3)^0,c
  7505   003986  EF56  F01D         	goto	l1368
  7506   00398A                     l7484:
  7507   00398A  0E96               	movlw	150
  7508   00398C  6E0F               	movwf	___xxtofl@exp^0,c
  7509   00398E  EFCF  F01C         	goto	l7488
  7510   003992                     l7486:
  7511   003992  2A0F               	incf	___xxtofl@exp^0,f,c
  7512   003994  90D8               	bcf	status,0,c
  7513   003996  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7514   003998  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7515   00399A  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7516   00399C  3210               	rrcf	___xxtofl@arg^0,f,c
  7517   00399E                     l7488:
  7518   00399E  0E00               	movlw	0
  7519   0039A0  1410               	andwf	___xxtofl@arg^0,w,c
  7520   0039A2  6E0A               	movwf	??___xxtofl^0,c
  7521   0039A4  0E00               	movlw	0
  7522   0039A6  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7523   0039A8  6E0B               	movwf	(??___xxtofl+1)^0,c
  7524   0039AA  0E00               	movlw	0
  7525   0039AC  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7526   0039AE  6E0C               	movwf	(??___xxtofl+2)^0,c
  7527   0039B0  0EFE               	movlw	254
  7528   0039B2  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7529   0039B4  6E0D               	movwf	(??___xxtofl+3)^0,c
  7530   0039B6  500A               	movf	??___xxtofl^0,w,c
  7531   0039B8  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7532   0039BA  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7533   0039BC  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7534   0039BE  A4D8               	btfss	status,2,c
  7535   0039C0  EFE4  F01C         	goto	u9061
  7536   0039C4  EFE6  F01C         	goto	u9060
  7537   0039C8                     u9061:
  7538   0039C8  EFC9  F01C         	goto	l7486
  7539   0039CC                     u9060:
  7540   0039CC  EFF4  F01C         	goto	l1372
  7541   0039D0                     l7490:
  7542   0039D0  2A0F               	incf	___xxtofl@exp^0,f,c
  7543   0039D2  0E01               	movlw	1
  7544   0039D4  2610               	addwf	___xxtofl@arg^0,f,c
  7545   0039D6  0E00               	movlw	0
  7546   0039D8  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7547   0039DA  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7548   0039DC  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7549   0039DE  90D8               	bcf	status,0,c
  7550   0039E0  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7551   0039E2  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7552   0039E4  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7553   0039E6  3210               	rrcf	___xxtofl@arg^0,f,c
  7554   0039E8                     l1372:
  7555   0039E8  0E00               	movlw	0
  7556   0039EA  1410               	andwf	___xxtofl@arg^0,w,c
  7557   0039EC  6E0A               	movwf	??___xxtofl^0,c
  7558   0039EE  0E00               	movlw	0
  7559   0039F0  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7560   0039F2  6E0B               	movwf	(??___xxtofl+1)^0,c
  7561   0039F4  0E00               	movlw	0
  7562   0039F6  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7563   0039F8  6E0C               	movwf	(??___xxtofl+2)^0,c
  7564   0039FA  0EFF               	movlw	255
  7565   0039FC  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7566   0039FE  6E0D               	movwf	(??___xxtofl+3)^0,c
  7567   003A00  500A               	movf	??___xxtofl^0,w,c
  7568   003A02  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7569   003A04  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7570   003A06  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7571   003A08  A4D8               	btfss	status,2,c
  7572   003A0A  EF09  F01D         	goto	u9071
  7573   003A0E  EF0B  F01D         	goto	u9070
  7574   003A12                     u9071:
  7575   003A12  EFE8  F01C         	goto	l7490
  7576   003A16                     u9070:
  7577   003A16  EF13  F01D         	goto	l7498
  7578   003A1A                     l7496:
  7579   003A1A  060F               	decf	___xxtofl@exp^0,f,c
  7580   003A1C  90D8               	bcf	status,0,c
  7581   003A1E  3610               	rlcf	___xxtofl@arg^0,f,c
  7582   003A20  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7583   003A22  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7584   003A24  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7585   003A26                     l7498:
  7586   003A26  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7587   003A28  EF18  F01D         	goto	u9081
  7588   003A2C  EF1A  F01D         	goto	u9080
  7589   003A30                     u9081:
  7590   003A30  EF22  F01D         	goto	l1379
  7591   003A34                     u9080:
  7592   003A34  0E02               	movlw	2
  7593   003A36  600F               	cpfslt	___xxtofl@exp^0,c
  7594   003A38  EF20  F01D         	goto	u9091
  7595   003A3C  EF22  F01D         	goto	u9090
  7596   003A40                     u9091:
  7597   003A40  EF0D  F01D         	goto	l7496
  7598   003A44                     u9090:
  7599   003A44                     l1379:
  7600   003A44  B00F               	btfsc	___xxtofl@exp^0,0,c
  7601   003A46  EF27  F01D         	goto	u9101
  7602   003A4A  EF29  F01D         	goto	u9100
  7603   003A4E                     u9101:
  7604   003A4E  EF2A  F01D         	goto	l7504
  7605   003A52                     u9100:
  7606   003A52  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7607   003A54                     l7504:
  7608   003A54  90D8               	bcf	status,0,c
  7609   003A56  320F               	rrcf	___xxtofl@exp^0,f,c
  7610   003A58  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7611   003A5C  6A0B               	clrf	(??___xxtofl+1)^0,c
  7612   003A5E  6A0C               	clrf	(??___xxtofl+2)^0,c
  7613   003A60  6A0D               	clrf	(??___xxtofl+3)^0,c
  7614   003A62  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7615   003A66  6A0C               	clrf	(??___xxtofl+2)^0,c
  7616   003A68  6A0B               	clrf	(??___xxtofl+1)^0,c
  7617   003A6A  6A0A               	clrf	??___xxtofl^0,c
  7618   003A6C  500A               	movf	??___xxtofl^0,w,c
  7619   003A6E  1210               	iorwf	___xxtofl@arg^0,f,c
  7620   003A70  500B               	movf	(??___xxtofl+1)^0,w,c
  7621   003A72  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7622   003A74  500C               	movf	(??___xxtofl+2)^0,w,c
  7623   003A76  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7624   003A78  500D               	movf	(??___xxtofl+3)^0,w,c
  7625   003A7A  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7626   003A7C  500E               	movf	___xxtofl@sign^0,w,c
  7627   003A7E  B4D8               	btfsc	status,2,c
  7628   003A80  EF44  F01D         	goto	u9111
  7629   003A84  EF46  F01D         	goto	u9110
  7630   003A88                     u9111:
  7631   003A88  EF4E  F01D         	goto	l7514
  7632   003A8C                     u9110:
  7633   003A8C  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7634   003A8E  EF4D  F01D         	goto	u9120
  7635   003A92  EF4B  F01D         	goto	u9121
  7636   003A96                     u9121:
  7637   003A96  EF4E  F01D         	goto	l7514
  7638   003A9A                     u9120:
  7639   003A9A  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7640   003A9C                     l7514:
  7641   003A9C  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7642   003AA0  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7643   003AA4  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7644   003AA8  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7645   003AAC                     l1368:
  7646   003AAC  0012               	return		;funcret
  7647   003AAE                     __end_of___xxtofl:
  7648                           	callstack 0
  7649                           
  7650 ;; *************** function _moveDisplay *****************
  7651 ;; Defined at:
  7652 ;;		line 11 in file "menu.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  menuI           1    wreg     unsigned char 
  7655 ;;  where           1  135[BANK0 ] unsigned char 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  menuI           1   50[BANK1 ] unsigned char 
  7658 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7659 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7660 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7661 ;;		 -> STR_30(1), STR_29(6), STR_28(5), STR_27(4), 
  7662 ;;		 -> STR_26(4), STR_25(4), STR_24(5), STR_23(5), 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7672 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;Total ram usage:       54 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; Hardware stack levels required when called: 9
  7679 ;; This function calls:
  7680 ;;		_LCD_Clear
  7681 ;;		_LCD_ShowString
  7682 ;;		_sprintf
  7683 ;; This function is called by:
  7684 ;;		_main
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text26
  7689   0041E6                     __ptext26:
  7690                           	callstack 0
  7691   0041E6                     _moveDisplay:
  7692                           	callstack 21
  7693                           
  7694                           ;incstack = 0
  7695                           ;moveDisplay@menuI stored from wreg
  7696   0041E6  0101               	movlb	1	; () banked
  7697   0041E8  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7698   0041EA                     
  7699                           ;menu.c: 12:     LCD_Clear();
  7700   0041EA  ECDD  F028         	call	_LCD_Clear	;wreg free
  7701   0041EE                     
  7702                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7703   0041EE  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7704   0041F2  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7705   0041F6  0E0F               	movlw	15
  7706   0041F8                     u9721:
  7707   0041F8  CFDB FFE3          	movff	plusw2,plusw1
  7708   0041FC  06E8               	decf	wreg,f,c
  7709   0041FE  E2FC               	bc	u9721
  7710                           
  7711                           ;menu.c: 14:     switch (where){
  7712   004200  EF1A  F021         	goto	l8000
  7713   004204                     l7990:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;menu.c: 18:             if(menuI<6){
  7717   004204  0E06               	movlw	6
  7718   004206  0101               	movlb	1	; () banked
  7719   004208  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7720   00420A  EF09  F021         	goto	u9731
  7721   00420E  EF0B  F021         	goto	u9730
  7722   004212                     u9731:
  7723   004212  EF2A  F021         	goto	l8002
  7724   004216                     u9730:
  7725   004216                     
  7726                           ; BSR set to: 1
  7727                           ;menu.c: 19:             menuI++;
  7728   004216  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7729   004218  EF2A  F021         	goto	l8002
  7730   00421C                     l7994:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;menu.c: 23:             if(menuI>0){
  7734   00421C  0101               	movlb	1	; () banked
  7735   00421E  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7736   004220  B4D8               	btfsc	status,2,c
  7737   004222  EF15  F021         	goto	u9741
  7738   004226  EF17  F021         	goto	u9740
  7739   00422A                     u9741:
  7740   00422A  EF2A  F021         	goto	l8002
  7741   00422E                     u9740:
  7742   00422E                     
  7743                           ; BSR set to: 1
  7744                           ;menu.c: 24:             menuI--;
  7745   00422E  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7746   004230  EF2A  F021         	goto	l8002
  7747   004234                     l8000:
  7748   004234  0100               	movlb	0	; () banked
  7749   004236  51E7               	movf	moveDisplay@where& (0+255),w,b
  7750                           
  7751                           ; Switch size 1, requested type "simple"
  7752                           ; Number of cases is 3, Range of values is 0 to 2
  7753                           ; switch strategies available:
  7754                           ; Name         Instructions Cycles
  7755                           ; simple_byte           10     6 (average)
  7756                           ;	Chosen strategy is simple_byte
  7757   004238  0A00               	xorlw	0	; case 0
  7758   00423A  B4D8               	btfsc	status,2,c
  7759   00423C  EF2A  F021         	goto	l8002
  7760   004240  0A01               	xorlw	1	; case 1
  7761   004242  B4D8               	btfsc	status,2,c
  7762   004244  EF02  F021         	goto	l7990
  7763   004248  0A03               	xorlw	3	; case 2
  7764   00424A  B4D8               	btfsc	status,2,c
  7765   00424C  EF0E  F021         	goto	l7994
  7766   004250  EF2A  F021         	goto	l8002
  7767   004254                     l8002:
  7768                           
  7769                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7770   004254  0E9B               	movlw	low moveDisplay@menuItem1
  7771   004256  0100               	movlb	0	; () banked
  7772   004258  6FCE               	movwf	sprintf@s& (0+255),b
  7773   00425A  0E01               	movlw	high moveDisplay@menuItem1
  7774   00425C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7775   00425E  0ECC               	movlw	low STR_31
  7776   004260  6FD0               	movwf	sprintf@fmt& (0+255),b
  7777   004262  0EFF               	movlw	high STR_31
  7778   004264  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7779   004266  0E00               	movlw	0
  7780   004268  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7781   00426A  0E0F               	movlw	15
  7782   00426C  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7783   00426E  0101               	movlb	1	; () banked
  7784   004270  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7785   004272  0D02               	mullw	2
  7786   004274  0EBD               	movlw	low moveDisplay@menuItems
  7787   004276  24F3               	addwf	243,w,c
  7788   004278  6ED9               	movwf	fsr2l,c
  7789   00427A  0E01               	movlw	high moveDisplay@menuItems
  7790   00427C  20F4               	addwfc	prodh,w,c
  7791   00427E  6EDA               	movwf	fsr2h,c
  7792   004280  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7793   004284  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7794   004288  EC25  F028         	call	_sprintf	;wreg free
  7795                           
  7796                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7797   00428C  0EAC               	movlw	low moveDisplay@menuItem2
  7798   00428E  0100               	movlb	0	; () banked
  7799   004290  6FCE               	movwf	sprintf@s& (0+255),b
  7800   004292  0E01               	movlw	high moveDisplay@menuItem2
  7801   004294  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7802   004296  0ECD               	movlw	low (STR_31+1)
  7803   004298  6FD0               	movwf	sprintf@fmt& (0+255),b
  7804   00429A  0EFF               	movlw	high (STR_31+1)
  7805   00429C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7806   00429E  0E00               	movlw	0
  7807   0042A0  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7808   0042A2  0E10               	movlw	16
  7809   0042A4  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7810   0042A6  0101               	movlb	1	; () banked
  7811   0042A8  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7812   0042AA  0100               	movlb	0	; () banked
  7813   0042AC  6FE8               	movwf	??_moveDisplay& (0+255),b
  7814   0042AE  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7815   0042B0  90D8               	bcf	status,0,c
  7816   0042B2  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7817   0042B4  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7818   0042B6  0E02               	movlw	2
  7819   0042B8  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7820   0042BA  0E00               	movlw	0
  7821   0042BC  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7822   0042BE  0EBD               	movlw	low moveDisplay@menuItems
  7823   0042C0  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7824   0042C2  6ED9               	movwf	fsr2l,c
  7825   0042C4  0E01               	movlw	high moveDisplay@menuItems
  7826   0042C6  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7827   0042C8  6EDA               	movwf	fsr2h,c
  7828   0042CA  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7829   0042CE  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7830   0042D2  EC25  F028         	call	_sprintf	;wreg free
  7831   0042D6                     
  7832                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7833   0042D6  0E9B               	movlw	low moveDisplay@menuItem1
  7834   0042D8  6E07               	movwf	LCD_ShowString@textData^0,c
  7835   0042DA  0E01               	movlw	high moveDisplay@menuItem1
  7836   0042DC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7837   0042DE  0E01               	movlw	1
  7838   0042E0  ECAD  F024         	call	_LCD_ShowString
  7839   0042E4                     
  7840                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7841   0042E4  0EAC               	movlw	low moveDisplay@menuItem2
  7842   0042E6  6E07               	movwf	LCD_ShowString@textData^0,c
  7843   0042E8  0E01               	movlw	high moveDisplay@menuItem2
  7844   0042EA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7845   0042EC  0E02               	movlw	2
  7846   0042EE  ECAD  F024         	call	_LCD_ShowString
  7847   0042F2                     
  7848                           ;menu.c: 35:     return menuI;
  7849   0042F2  0101               	movlb	1	; () banked
  7850   0042F4  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7851   0042F6                     
  7852                           ; BSR set to: 1
  7853   0042F6  0012               	return		;funcret
  7854   0042F8                     __end_of_moveDisplay:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _sprintf *****************
  7858 ;; Defined at:
  7859 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7862 ;;		 -> runGAME@approxText(25), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7863 ;;		 -> moveDisplay@menuItem1(17), 
  7864 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7865 ;;		 -> STR_38(18), STR_37(19), STR_36(17), STR_35(19), 
  7866 ;;		 -> STR_33(19), STR_32(5), STR_31(6), 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7869 ;;  ret             2    0        int 
  7870 ;;  ap              1  122[BANK0 ] PTR void [1]
  7871 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  2  110[BANK0 ] int 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7881 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;Total ram usage:       25 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; Hardware stack levels required when called: 8
  7888 ;; This function calls:
  7889 ;;		_vfprintf
  7890 ;; This function is called by:
  7891 ;;		_moveDisplay
  7892 ;;		_runADC
  7893 ;;		_runGAME
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text27
  7898   00504A                     __ptext27:
  7899                           	callstack 0
  7900   00504A                     _sprintf:
  7901                           	callstack 21
  7902   00504A  0ED2               	movlw	low (?_sprintf+4)
  7903   00504C  0100               	movlb	0	; () banked
  7904   00504E  6FDA               	movwf	sprintf@ap& (0+255),b
  7905   005050  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7906   005054  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7907   005058                     
  7908                           ; BSR set to: 0
  7909   005058  0E00               	movlw	0
  7910   00505A  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7911   00505C  0E00               	movlw	0
  7912   00505E  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7913   005060                     
  7914                           ; BSR set to: 0
  7915   005060  0E00               	movlw	0
  7916   005062  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7917   005064  0E00               	movlw	0
  7918   005066  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7919   005068                     
  7920                           ; BSR set to: 0
  7921   005068  0EDB               	movlw	low sprintf@f
  7922   00506A  6FC7               	movwf	vfprintf@fp& (0+255),b
  7923   00506C  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7924   00506E  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7925   005072  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7926   005076  0EDA               	movlw	low sprintf@ap
  7927   005078  6FCB               	movwf	vfprintf@ap& (0+255),b
  7928   00507A  ECDC  F027         	call	_vfprintf	;wreg free
  7929   00507E  0100               	movlb	0	; () banked
  7930   005080  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7931   005082  25CE               	addwf	sprintf@s& (0+255),w,b
  7932   005084  6ED9               	movwf	fsr2l,c
  7933   005086  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7934   005088  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7935   00508A  6EDA               	movwf	fsr2h,c
  7936   00508C  6ADF               	clrf	indf2,c
  7937   00508E                     
  7938                           ; BSR set to: 0
  7939   00508E  0012               	return		;funcret
  7940   005090                     __end_of_sprintf:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _vfprintf *****************
  7944 ;; Defined at:
  7945 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7948 ;;		 -> NULL(0), sprintf@f(12), 
  7949 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7950 ;;		 -> STR_38(18), STR_37(19), STR_36(17), STR_35(19), 
  7951 ;;		 -> STR_34(5), STR_33(19), STR_32(5), STR_31(6), 
  7952 ;;		 -> STR_22(5), 
  7953 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7954 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7957 ;;		 -> STR_38(18), STR_37(19), STR_36(17), STR_35(19), 
  7958 ;;		 -> STR_34(5), STR_33(19), STR_32(5), STR_31(6), 
  7959 ;;		 -> STR_22(5), 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  2  103[BANK0 ] int 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7969 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7970 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7972 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7973 ;;Total ram usage:        7 bytes
  7974 ;; Hardware stack levels used: 1
  7975 ;; Hardware stack levels required when called: 7
  7976 ;; This function calls:
  7977 ;;		_vfpfcnvrt
  7978 ;; This function is called by:
  7979 ;;		_sprintf
  7980 ;;		_printf
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text28
  7985   004FB8                     __ptext28:
  7986                           	callstack 0
  7987   004FB8                     _vfprintf:
  7988                           	callstack 21
  7989   004FB8                     
  7990                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7991   004FB8  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7992   004FBC  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7993                           
  7994                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7995   004FC0  EFED  F027         	goto	l7696
  7996   004FC4                     l7694:
  7997                           
  7998                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  7999   004FC4  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  8000   004FC8  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  8001   004FCC  0ECC               	movlw	low vfprintf@cfmt
  8002   004FCE  0100               	movlb	0	; () banked
  8003   004FD0  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  8004   004FD2  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  8005   004FD6  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  8006   004FDA                     l7696:
  8007                           
  8008                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  8009   004FDA  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  8010   004FDE  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8011   004FE2                     	if	0	;tblptru may be non-zero
  8012   004FE2                     	endif
  8013   004FE2                     	if	0	;tblptru may be non-zero
  8014   004FE2                     	endif
  8015   004FE2  0008               	tblrd		*
  8016   004FE4  50F5               	movf	tablat,w,c
  8017   004FE6  0900               	iorlw	0
  8018   004FE8  A4D8               	btfss	status,2,c
  8019   004FEA  EFF9  F027         	goto	u9301
  8020   004FEE  EFFB  F027         	goto	u9300
  8021   004FF2                     u9301:
  8022   004FF2  EFE2  F027         	goto	l7694
  8023   004FF6                     u9300:
  8024   004FF6                     
  8025                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8026   004FF6  0E00               	movlw	0
  8027   004FF8  0100               	movlb	0	; () banked
  8028   004FFA  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  8029   004FFC  0E00               	movlw	0
  8030   004FFE  6FC7               	movwf	?_vfprintf& (0+255),b
  8031   005000                     
  8032                           ; BSR set to: 0
  8033   005000  0012               	return		;funcret
  8034   005002                     __end_of_vfprintf:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _vfpfcnvrt *****************
  8038 ;; Defined at:
  8039 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  8042 ;;		 -> NULL(0), sprintf@f(12), 
  8043 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  8044 ;;		 -> vfprintf@cfmt(2), 
  8045 ;;  ap              1   92[BANK0 ] PTR PTR void 
  8046 ;;		 -> printf@ap(1), sprintf@ap(1), 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  convarg         4   96[BANK0 ] struct .
  8049 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  8050 ;;		 -> STR_38(18), STR_37(19), STR_36(17), STR_35(19), 
  8051 ;;		 -> STR_34(5), STR_33(19), STR_32(5), STR_31(6), 
  8052 ;;		 -> STR_22(5), 
  8053 ;;  c               1  100[BANK0 ] unsigned char 
  8054 ;;  done            1   95[BANK0 ] _Bool 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  1    wreg      void 
  8057 ;; Registers used:
  8058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;Total ram usage:       14 bytes
  8069 ;; Hardware stack levels used: 1
  8070 ;; Hardware stack levels required when called: 6
  8071 ;; This function calls:
  8072 ;;		_dtoa
  8073 ;;		_efgtoa
  8074 ;;		_fputc
  8075 ;;		_read_prec_or_width
  8076 ;;		_stoa
  8077 ;;		_utoa
  8078 ;; This function is called by:
  8079 ;;		_vfprintf
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text29
  8084   000B4C                     __ptext29:
  8085                           	callstack 0
  8086   000B4C                     _vfpfcnvrt:
  8087                           	callstack 21
  8088   000B4C                     
  8089                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  8090   000B4C  0100               	movlb	0	; () banked
  8091   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8092   000B50  6ED9               	movwf	fsr2l,c
  8093   000B52  6ADA               	clrf	fsr2h,c
  8094   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  8095   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  8096   000B5C                     	if	0	;tblptru may be non-zero
  8097   000B5C                     	endif
  8098   000B5C                     	if	0	;tblptru may be non-zero
  8099   000B5C                     	endif
  8100   000B5C  0008               	tblrd		*
  8101   000B5E  50F5               	movf	tablat,w,c
  8102   000B60  0A25               	xorlw	37
  8103   000B62  A4D8               	btfss	status,2,c
  8104   000B64  EFB6  F005         	goto	u9131
  8105   000B68  EFB8  F005         	goto	u9130
  8106   000B6C                     u9131:
  8107   000B6C  EF40  F008         	goto	l7666
  8108   000B70                     u9130:
  8109   000B70                     
  8110                           ; BSR set to: 0
  8111                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  8112   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8113   000B72  6ED9               	movwf	fsr2l,c
  8114   000B74  6ADA               	clrf	fsr2h,c
  8115   000B76  2ADE               	incf	postinc2,f,c
  8116   000B78  0E00               	movlw	0
  8117   000B7A  22DD               	addwfc	postdec2,f,c
  8118   000B7C                     
  8119                           ; BSR set to: 0
  8120                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  8121   000B7C  0E00               	movlw	0
  8122   000B7E  6E56               	movwf	(_width+1)^0,c
  8123   000B80  0E00               	movlw	0
  8124   000B82  6E55               	movwf	_width^0,c
  8125   000B84  C055  F059         	movff	_width,_flags
  8126   000B88                     
  8127                           ; BSR set to: 0
  8128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  8129   000B88  6857               	setf	_prec^0,c
  8130   000B8A  6858               	setf	(_prec+1)^0,c
  8131   000B8C                     
  8132                           ; BSR set to: 0
  8133                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  8134   000B8C  0E00               	movlw	0
  8135   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8136                           
  8137                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8138   000B90  EFE6  F005         	goto	l7538
  8139   000B94                     l7528:
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  8143   000B94  8059               	bsf	_flags^0,0,c
  8144   000B96                     
  8145                           ; BSR set to: 0
  8146                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  8147   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8148   000B98  6ED9               	movwf	fsr2l,c
  8149   000B9A  6ADA               	clrf	fsr2h,c
  8150   000B9C  2ADE               	incf	postinc2,f,c
  8151   000B9E  0E00               	movlw	0
  8152   000BA0  22DD               	addwfc	postdec2,f,c
  8153                           
  8154                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  8155   000BA2  EFE6  F005         	goto	l7538
  8156   000BA6                     l7532:
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  8160   000BA6  0E01               	movlw	1
  8161   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8162                           
  8163                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  8164   000BAA  EFE6  F005         	goto	l7538
  8165   000BAE                     l7536:
  8166                           
  8167                           ; BSR set to: 0
  8168   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8169   000BB0  6ED9               	movwf	fsr2l,c
  8170   000BB2  6ADA               	clrf	fsr2h,c
  8171   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  8172   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  8173   000BBC                     	if	0	;tblptru may be non-zero
  8174   000BBC                     	endif
  8175   000BBC                     	if	0	;tblptru may be non-zero
  8176   000BBC                     	endif
  8177   000BBC  0008               	tblrd		*
  8178   000BBE  50F5               	movf	tablat,w,c
  8179                           
  8180                           ; Switch size 1, requested type "simple"
  8181                           ; Number of cases is 1, Range of values is 45 to 45
  8182                           ; switch strategies available:
  8183                           ; Name         Instructions Cycles
  8184                           ; simple_byte            4     3 (average)
  8185                           ;	Chosen strategy is simple_byte
  8186   000BC0  0A2D               	xorlw	45	; case 45
  8187   000BC2  B4D8               	btfsc	status,2,c
  8188   000BC4  EFCA  F005         	goto	l7528
  8189   000BC8  EFD3  F005         	goto	l7532
  8190   000BCC                     l7538:
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  8194   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8195   000BCE  B4D8               	btfsc	status,2,c
  8196   000BD0  EFEC  F005         	goto	u9141
  8197   000BD4  EFEE  F005         	goto	u9140
  8198   000BD8                     u9141:
  8199   000BD8  EFD7  F005         	goto	l7536
  8200   000BDC                     u9140:
  8201   000BDC                     
  8202                           ; BSR set to: 0
  8203                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  8204   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8205   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8206   000BE4  EC5E  F025         	call	_read_prec_or_width	;wreg free
  8207   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  8208   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  8209   000BF0                     
  8210                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  8211   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  8212   000BF2  EFFF  F005         	goto	u9150
  8213   000BF6  EFFD  F005         	goto	u9151
  8214   000BFA                     u9151:
  8215   000BFA  EF04  F006         	goto	l7546
  8216   000BFE                     u9150:
  8217   000BFE                     
  8218                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  8219   000BFE  8059               	bsf	_flags^0,0,c
  8220                           
  8221                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  8222   000C00  6C55               	negf	_width^0,c
  8223   000C02  1E56               	comf	(_width+1)^0,f,c
  8224   000C04  B0D8               	btfsc	status,0,c
  8225   000C06  2A56               	incf	(_width+1)^0,f,c
  8226   000C08                     l7546:
  8227                           
  8228                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  8229   000C08  0100               	movlb	0	; () banked
  8230   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8231   000C0C  6ED9               	movwf	fsr2l,c
  8232   000C0E  6ADA               	clrf	fsr2h,c
  8233   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  8234   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  8235   000C18                     	if	0	;tblptru may be non-zero
  8236   000C18                     	endif
  8237   000C18                     	if	0	;tblptru may be non-zero
  8238   000C18                     	endif
  8239   000C18  0008               	tblrd		*
  8240   000C1A  50F5               	movf	tablat,w,c
  8241   000C1C  0A2E               	xorlw	46
  8242   000C1E  A4D8               	btfss	status,2,c
  8243   000C20  EF14  F006         	goto	u9161
  8244   000C24  EF16  F006         	goto	u9160
  8245   000C28                     u9161:
  8246   000C28  EF26  F006         	goto	l7552
  8247   000C2C                     u9160:
  8248   000C2C                     
  8249                           ; BSR set to: 0
  8250                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  8251   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8252   000C2E  6ED9               	movwf	fsr2l,c
  8253   000C30  6ADA               	clrf	fsr2h,c
  8254   000C32  2ADE               	incf	postinc2,f,c
  8255   000C34  0E00               	movlw	0
  8256   000C36  22DD               	addwfc	postdec2,f,c
  8257   000C38                     
  8258                           ; BSR set to: 0
  8259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  8260   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  8261   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  8262   000C40  EC5E  F025         	call	_read_prec_or_width	;wreg free
  8263   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8264   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8265   000C4C                     l7552:
  8266                           
  8267                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8268   000C4C  0100               	movlb	0	; () banked
  8269   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8270   000C50  6ED9               	movwf	fsr2l,c
  8271   000C52  6ADA               	clrf	fsr2h,c
  8272   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8273   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8274   000C5C                     
  8275                           ; BSR set to: 0
  8276                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8277   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8278   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8279   000C64                     	if	0	;tblptru may be non-zero
  8280   000C64                     	endif
  8281   000C64                     	if	0	;tblptru may be non-zero
  8282   000C64                     	endif
  8283   000C64  0008               	tblrd		*
  8284   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8285                           
  8286                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8287   000C6A  EF43  F006         	goto	l7564
  8288   000C6E                     l7556:
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8292   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8293   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8294                           
  8295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8296   000C72  EF56  F006         	goto	l7566
  8297   000C76                     l7558:
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8301   000C76  0E69               	movlw	105
  8302   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8303                           
  8304                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8305   000C7A  EF56  F006         	goto	l7566
  8306   000C7E                     l7560:
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8310   000C7E  0E00               	movlw	0
  8311   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8312                           
  8313                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8314   000C82  EF56  F006         	goto	l7566
  8315   000C86                     l7564:
  8316                           
  8317                           ; BSR set to: 0
  8318   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8319                           
  8320                           ; Switch size 1, requested type "simple"
  8321                           ; Number of cases is 4, Range of values is 100 to 117
  8322                           ; switch strategies available:
  8323                           ; Name         Instructions Cycles
  8324                           ; simple_byte           13     7 (average)
  8325                           ;	Chosen strategy is simple_byte
  8326   000C88  0A64               	xorlw	100	; case 100
  8327   000C8A  B4D8               	btfsc	status,2,c
  8328   000C8C  EF3B  F006         	goto	l7558
  8329   000C90  0A0C               	xorlw	12	; case 104
  8330   000C92  B4D8               	btfsc	status,2,c
  8331   000C94  EF37  F006         	goto	l7556
  8332   000C98  0A01               	xorlw	1	; case 105
  8333   000C9A  B4D8               	btfsc	status,2,c
  8334   000C9C  EF3B  F006         	goto	l7558
  8335   000CA0  0A1C               	xorlw	28	; case 117
  8336   000CA2  B4D8               	btfsc	status,2,c
  8337   000CA4  EF3B  F006         	goto	l7558
  8338   000CA8  EF3F  F006         	goto	l7560
  8339   000CAC                     l7566:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8343   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8344   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8345   000CB4                     	if	0	;tblptru may be non-zero
  8346   000CB4                     	endif
  8347   000CB4                     	if	0	;tblptru may be non-zero
  8348   000CB4                     	endif
  8349   000CB4  0008               	tblrd		*
  8350   000CB6  50F5               	movf	tablat,w,c
  8351   000CB8  0A64               	xorlw	100
  8352   000CBA  B4D8               	btfsc	status,2,c
  8353   000CBC  EF62  F006         	goto	u9171
  8354   000CC0  EF64  F006         	goto	u9170
  8355   000CC4                     u9171:
  8356   000CC4  EF90  F006         	goto	l7576
  8357   000CC8                     u9170:
  8358   000CC8                     
  8359                           ; BSR set to: 0
  8360   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8361   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8362   000CD0                     	if	0	;tblptru may be non-zero
  8363   000CD0                     	endif
  8364   000CD0                     	if	0	;tblptru may be non-zero
  8365   000CD0                     	endif
  8366   000CD0  0008               	tblrd		*
  8367   000CD2  50F5               	movf	tablat,w,c
  8368   000CD4  0A69               	xorlw	105
  8369   000CD6  A4D8               	btfss	status,2,c
  8370   000CD8  EF70  F006         	goto	u9181
  8371   000CDC  EF72  F006         	goto	u9180
  8372   000CE0                     u9181:
  8373   000CE0  EFB4  F006         	goto	l7584
  8374   000CE4                     u9180:
  8375   000CE4  EF90  F006         	goto	l7576
  8376   000CE8                     l7570:
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8380   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8381   000CEA  6ED9               	movwf	fsr2l,c
  8382   000CEC  6ADA               	clrf	fsr2h,c
  8383   000CEE  0E02               	movlw	2
  8384   000CF0  26DF               	addwf	indf2,f,c
  8385   000CF2  5CDF               	subwf	indf2,w,c
  8386   000CF4  6ED9               	movwf	fsr2l,c
  8387   000CF6  6ADA               	clrf	fsr2h,c
  8388   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8389   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8390                           
  8391                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8392   000D00  EF9B  F006         	goto	l7578
  8393   000D04                     l7572:
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8397   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8398   000D06  6ED9               	movwf	fsr2l,c
  8399   000D08  6ADA               	clrf	fsr2h,c
  8400   000D0A  0E02               	movlw	2
  8401   000D0C  26DF               	addwf	indf2,f,c
  8402   000D0E  5CDF               	subwf	indf2,w,c
  8403   000D10  6ED9               	movwf	fsr2l,c
  8404   000D12  6ADA               	clrf	fsr2h,c
  8405   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8406   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8407                           
  8408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8409   000D1C  EF9B  F006         	goto	l7578
  8410   000D20                     l7576:
  8411                           
  8412                           ; BSR set to: 0
  8413   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8414                           
  8415                           ; Switch size 1, requested type "simple"
  8416                           ; Number of cases is 2, Range of values is 104 to 105
  8417                           ; switch strategies available:
  8418                           ; Name         Instructions Cycles
  8419                           ; simple_byte            7     4 (average)
  8420                           ;	Chosen strategy is simple_byte
  8421   000D22  0A68               	xorlw	104	; case 104
  8422   000D24  B4D8               	btfsc	status,2,c
  8423   000D26  EF82  F006         	goto	l7572
  8424   000D2A  0A01               	xorlw	1	; case 105
  8425   000D2C  B4D8               	btfsc	status,2,c
  8426   000D2E  EF74  F006         	goto	l7570
  8427   000D32  EF9B  F006         	goto	l7578
  8428   000D36                     l7578:
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8432   000D36  0E01               	movlw	1
  8433   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8434   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8435   000D3C  0E00               	movlw	0
  8436   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8437   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8438   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8439   000D44  6ED9               	movwf	fsr2l,c
  8440   000D46  6ADA               	clrf	fsr2h,c
  8441   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8442   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8443   000D50                     
  8444                           ; BSR set to: 0
  8445                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8446   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8447   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8448   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8449   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8450   000D60  EC26  F01E         	call	_dtoa	;wreg free
  8451   000D64  EF53  F008         	goto	l1560
  8452   000D68                     l7584:
  8453                           
  8454                           ; BSR set to: 0
  8455   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8456   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8457   000D70                     	if	0	;tblptru may be non-zero
  8458   000D70                     	endif
  8459   000D70                     	if	0	;tblptru may be non-zero
  8460   000D70                     	endif
  8461   000D70  0008               	tblrd		*
  8462   000D72  50F5               	movf	tablat,w,c
  8463   000D74  0A75               	xorlw	117
  8464   000D76  A4D8               	btfss	status,2,c
  8465   000D78  EFC0  F006         	goto	u9191
  8466   000D7C  EFC2  F006         	goto	u9190
  8467   000D80                     u9191:
  8468   000D80  EF12  F007         	goto	l7604
  8469   000D84                     u9190:
  8470   000D84  EFE0  F006         	goto	l7592
  8471   000D88                     l7586:
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8475   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8476   000D8A  6ED9               	movwf	fsr2l,c
  8477   000D8C  6ADA               	clrf	fsr2h,c
  8478   000D8E  0E02               	movlw	2
  8479   000D90  26DF               	addwf	indf2,f,c
  8480   000D92  5CDF               	subwf	indf2,w,c
  8481   000D94  6ED9               	movwf	fsr2l,c
  8482   000D96  6ADA               	clrf	fsr2h,c
  8483   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8484   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8485                           
  8486                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8487   000DA0  EFEB  F006         	goto	l7594
  8488   000DA4                     l7588:
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8492   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8493   000DA6  6ED9               	movwf	fsr2l,c
  8494   000DA8  6ADA               	clrf	fsr2h,c
  8495   000DAA  0E02               	movlw	2
  8496   000DAC  26DF               	addwf	indf2,f,c
  8497   000DAE  5CDF               	subwf	indf2,w,c
  8498   000DB0  6ED9               	movwf	fsr2l,c
  8499   000DB2  6ADA               	clrf	fsr2h,c
  8500   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8501   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8502                           
  8503                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8504   000DBC  EFEB  F006         	goto	l7594
  8505   000DC0                     l7592:
  8506                           
  8507                           ; BSR set to: 0
  8508   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8509                           
  8510                           ; Switch size 1, requested type "simple"
  8511                           ; Number of cases is 2, Range of values is 104 to 105
  8512                           ; switch strategies available:
  8513                           ; Name         Instructions Cycles
  8514                           ; simple_byte            7     4 (average)
  8515                           ;	Chosen strategy is simple_byte
  8516   000DC2  0A68               	xorlw	104	; case 104
  8517   000DC4  B4D8               	btfsc	status,2,c
  8518   000DC6  EFD2  F006         	goto	l7588
  8519   000DCA  0A01               	xorlw	1	; case 105
  8520   000DCC  B4D8               	btfsc	status,2,c
  8521   000DCE  EFC4  F006         	goto	l7586
  8522   000DD2  EFEB  F006         	goto	l7594
  8523   000DD6                     l7594:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8527   000DD6  0E01               	movlw	1
  8528   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8529   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8530   000DDC  0E00               	movlw	0
  8531   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8532   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8533   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8534   000DE4  6ED9               	movwf	fsr2l,c
  8535   000DE6  6ADA               	clrf	fsr2h,c
  8536   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8537   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8538                           
  8539                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8540   000DF0  EF06  F007         	goto	l7602
  8541   000DF4                     l7596:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8545   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8546   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8547   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8548   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8549   000E04  EC01  F023         	call	_utoa	;wreg free
  8550   000E08  EF53  F008         	goto	l1560
  8551   000E0C                     l7602:
  8552                           
  8553                           ; BSR set to: 0
  8554   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8555   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8556   000E14                     	if	0	;tblptru may be non-zero
  8557   000E14                     	endif
  8558   000E14                     	if	0	;tblptru may be non-zero
  8559   000E14                     	endif
  8560   000E14  0008               	tblrd		*
  8561   000E16  50F5               	movf	tablat,w,c
  8562                           
  8563                           ; Switch size 1, requested type "simple"
  8564                           ; Number of cases is 1, Range of values is 117 to 117
  8565                           ; switch strategies available:
  8566                           ; Name         Instructions Cycles
  8567                           ; simple_byte            4     3 (average)
  8568                           ;	Chosen strategy is simple_byte
  8569   000E18  0A75               	xorlw	117	; case 117
  8570   000E1A  B4D8               	btfsc	status,2,c
  8571   000E1C  EFFA  F006         	goto	l7596
  8572   000E20  EF12  F007         	goto	l7604
  8573   000E24                     l7604:
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8577   000E24  0E00               	movlw	0
  8578   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8579   000E28                     
  8580                           ; BSR set to: 0
  8581                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8582   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8583   000E2A  6ED9               	movwf	fsr2l,c
  8584   000E2C  6ADA               	clrf	fsr2h,c
  8585   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8586   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8587   000E36                     	if	0	;tblptru may be non-zero
  8588   000E36                     	endif
  8589   000E36                     	if	0	;tblptru may be non-zero
  8590   000E36                     	endif
  8591   000E36  0008               	tblrd		*
  8592   000E38  50F5               	movf	tablat,w,c
  8593   000E3A  0A73               	xorlw	115
  8594   000E3C  A4D8               	btfss	status,2,c
  8595   000E3E  EF23  F007         	goto	u9201
  8596   000E42  EF25  F007         	goto	u9200
  8597   000E46                     u9201:
  8598   000E46  EF2F  F007         	goto	l7612
  8599   000E4A                     u9200:
  8600   000E4A                     
  8601                           ; BSR set to: 0
  8602                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8603   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8604   000E4C  6ED9               	movwf	fsr2l,c
  8605   000E4E  6ADA               	clrf	fsr2h,c
  8606   000E50  2ADE               	incf	postinc2,f,c
  8607   000E52  0E00               	movlw	0
  8608   000E54  22DD               	addwfc	postdec2,f,c
  8609   000E56                     l7610:
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8613   000E56  0E01               	movlw	1
  8614   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8615                           
  8616                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8617   000E5A  EF7B  F007         	goto	l7622
  8618   000E5E                     l7612:
  8619                           
  8620                           ; BSR set to: 0
  8621   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8622   000E60  6ED9               	movwf	fsr2l,c
  8623   000E62  6ADA               	clrf	fsr2h,c
  8624   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8625   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8626   000E6C                     	if	0	;tblptru may be non-zero
  8627   000E6C                     	endif
  8628   000E6C                     	if	0	;tblptru may be non-zero
  8629   000E6C                     	endif
  8630   000E6C  0008               	tblrd		*
  8631   000E6E  50F5               	movf	tablat,w,c
  8632   000E70  0A6C               	xorlw	108
  8633   000E72  A4D8               	btfss	status,2,c
  8634   000E74  EF3E  F007         	goto	u9211
  8635   000E78  EF40  F007         	goto	u9210
  8636   000E7C                     u9211:
  8637   000E7C  EF7B  F007         	goto	l7622
  8638   000E80                     u9210:
  8639   000E80                     
  8640                           ; BSR set to: 0
  8641   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8642   000E82  6ED9               	movwf	fsr2l,c
  8643   000E84  6ADA               	clrf	fsr2h,c
  8644   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8645   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8646   000E8E  0E01               	movlw	1
  8647   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8648   000E92  0E00               	movlw	0
  8649   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8650   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8651   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8652   000E9E                     	if	0	;tblptru may be non-zero
  8653   000E9E                     	endif
  8654   000E9E                     	if	0	;tblptru may be non-zero
  8655   000E9E                     	endif
  8656   000E9E  0008               	tblrd		*
  8657   000EA0  50F5               	movf	tablat,w,c
  8658   000EA2  0A6C               	xorlw	108
  8659   000EA4  A4D8               	btfss	status,2,c
  8660   000EA6  EF57  F007         	goto	u9221
  8661   000EAA  EF59  F007         	goto	u9220
  8662   000EAE                     u9221:
  8663   000EAE  EF7B  F007         	goto	l7622
  8664   000EB2                     u9220:
  8665   000EB2                     
  8666                           ; BSR set to: 0
  8667   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8668   000EB4  6ED9               	movwf	fsr2l,c
  8669   000EB6  6ADA               	clrf	fsr2h,c
  8670   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8671   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8672   000EC0  0E02               	movlw	2
  8673   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8674   000EC4  0E00               	movlw	0
  8675   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8676   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8677   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8678   000ED0                     	if	0	;tblptru may be non-zero
  8679   000ED0                     	endif
  8680   000ED0                     	if	0	;tblptru may be non-zero
  8681   000ED0                     	endif
  8682   000ED0  0008               	tblrd		*
  8683   000ED2  50F5               	movf	tablat,w,c
  8684   000ED4  0A73               	xorlw	115
  8685   000ED6  A4D8               	btfss	status,2,c
  8686   000ED8  EF70  F007         	goto	u9231
  8687   000EDC  EF72  F007         	goto	u9230
  8688   000EE0                     u9231:
  8689   000EE0  EF7B  F007         	goto	l7622
  8690   000EE4                     u9230:
  8691   000EE4                     
  8692                           ; BSR set to: 0
  8693                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8694   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8695   000EE6  6ED9               	movwf	fsr2l,c
  8696   000EE8  6ADA               	clrf	fsr2h,c
  8697   000EEA  0E03               	movlw	3
  8698   000EEC  26DE               	addwf	postinc2,f,c
  8699   000EEE  0E00               	movlw	0
  8700   000EF0  22DD               	addwfc	postdec2,f,c
  8701   000EF2  EF2B  F007         	goto	l7610
  8702   000EF6                     l7622:
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8706   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8707   000EF8  B4D8               	btfsc	status,2,c
  8708   000EFA  EF81  F007         	goto	u9241
  8709   000EFE  EF83  F007         	goto	u9240
  8710   000F02                     u9241:
  8711   000F02  EF97  F007         	goto	l7628
  8712   000F06                     u9240:
  8713   000F06                     
  8714                           ; BSR set to: 0
  8715                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8716   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8717   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8718   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8719   000F10  6ED9               	movwf	fsr2l,c
  8720   000F12  6ADA               	clrf	fsr2h,c
  8721   000F14  0E02               	movlw	2
  8722   000F16  26DF               	addwf	indf2,f,c
  8723   000F18  5CDF               	subwf	indf2,w,c
  8724   000F1A  6ED9               	movwf	fsr2l,c
  8725   000F1C  6ADA               	clrf	fsr2h,c
  8726   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8727   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8728   000F26  EC57  F01D         	call	_stoa	;wreg free
  8729   000F2A  EF53  F008         	goto	l1560
  8730   000F2E                     l7628:
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8734   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8735   000F30  6ED9               	movwf	fsr2l,c
  8736   000F32  6ADA               	clrf	fsr2h,c
  8737   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8738   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8739   000F3C                     
  8740                           ; BSR set to: 0
  8741                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8742   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8743   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8744   000F44                     	if	0	;tblptru may be non-zero
  8745   000F44                     	endif
  8746   000F44                     	if	0	;tblptru may be non-zero
  8747   000F44                     	endif
  8748   000F44  0008               	tblrd		*
  8749   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8750                           
  8751                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8752   000F4A  EFB3  F007         	goto	l7640
  8753   000F4E                     l7632:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8757   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8758   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8759                           
  8760                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8761   000F52  EFC2  F007         	goto	l7642
  8762   000F56                     l7634:
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8766   000F56  0E6C               	movlw	108
  8767   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8768                           
  8769                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8770   000F5A  EFC2  F007         	goto	l7642
  8771   000F5E                     l7636:
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8775   000F5E  0E00               	movlw	0
  8776   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8777                           
  8778                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8779   000F62  EFC2  F007         	goto	l7642
  8780   000F66                     l7640:
  8781                           
  8782                           ; BSR set to: 0
  8783   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8784                           
  8785                           ; Switch size 1, requested type "simple"
  8786                           ; Number of cases is 3, Range of values is 76 to 108
  8787                           ; switch strategies available:
  8788                           ; Name         Instructions Cycles
  8789                           ; simple_byte           10     6 (average)
  8790                           ;	Chosen strategy is simple_byte
  8791   000F68  0A4C               	xorlw	76	; case 76
  8792   000F6A  B4D8               	btfsc	status,2,c
  8793   000F6C  EFA7  F007         	goto	l7632
  8794   000F70  0A2A               	xorlw	42	; case 102
  8795   000F72  B4D8               	btfsc	status,2,c
  8796   000F74  EFAB  F007         	goto	l7634
  8797   000F78  0A0A               	xorlw	10	; case 108
  8798   000F7A  B4D8               	btfsc	status,2,c
  8799   000F7C  EFA7  F007         	goto	l7632
  8800   000F80  EFAF  F007         	goto	l7636
  8801   000F84                     l7642:
  8802                           
  8803                           ; BSR set to: 0
  8804   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8805   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8806   000F8C                     	if	0	;tblptru may be non-zero
  8807   000F8C                     	endif
  8808   000F8C                     	if	0	;tblptru may be non-zero
  8809   000F8C                     	endif
  8810   000F8C  0008               	tblrd		*
  8811   000F8E  50F5               	movf	tablat,w,c
  8812   000F90  0A66               	xorlw	102
  8813   000F92  A4D8               	btfss	status,2,c
  8814   000F94  EFCE  F007         	goto	u9251
  8815   000F98  EFD0  F007         	goto	u9250
  8816   000F9C                     u9251:
  8817   000F9C  EF37  F008         	goto	l7662
  8818   000FA0                     u9250:
  8819   000FA0  EFFA  F007         	goto	l7650
  8820   000FA4                     l7644:
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8824   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8825   000FA6  6ED9               	movwf	fsr2l,c
  8826   000FA8  6ADA               	clrf	fsr2h,c
  8827   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8828   000FAE  0E04               	movlw	4
  8829   000FB0  26DF               	addwf	indf2,f,c
  8830   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8831   000FB4  6ED9               	movwf	fsr2l,c
  8832   000FB6  6ADA               	clrf	fsr2h,c
  8833   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8834   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8835   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8836   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8837                           
  8838                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8839   000FC8  EF05  F008         	goto	l7652
  8840   000FCC                     l7646:
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8844   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8845   000FCE  6ED9               	movwf	fsr2l,c
  8846   000FD0  6ADA               	clrf	fsr2h,c
  8847   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8848   000FD6  0E04               	movlw	4
  8849   000FD8  26DF               	addwf	indf2,f,c
  8850   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8851   000FDC  6ED9               	movwf	fsr2l,c
  8852   000FDE  6ADA               	clrf	fsr2h,c
  8853   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8854   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8855   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8856   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8857                           
  8858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8859   000FF0  EF05  F008         	goto	l7652
  8860   000FF4                     l7650:
  8861                           
  8862                           ; BSR set to: 0
  8863   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8864                           
  8865                           ; Switch size 1, requested type "simple"
  8866                           ; Number of cases is 2, Range of values is 76 to 108
  8867                           ; switch strategies available:
  8868                           ; Name         Instructions Cycles
  8869                           ; simple_byte            7     4 (average)
  8870                           ;	Chosen strategy is simple_byte
  8871   000FF6  0A4C               	xorlw	76	; case 76
  8872   000FF8  B4D8               	btfsc	status,2,c
  8873   000FFA  EFE6  F007         	goto	l7646
  8874   000FFE  0A20               	xorlw	32	; case 108
  8875   001000  B4D8               	btfsc	status,2,c
  8876   001002  EFD2  F007         	goto	l7644
  8877   001006  EF05  F008         	goto	l7652
  8878   00100A                     l7652:
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8882   00100A  0E01               	movlw	1
  8883   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8884   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8885   001010  0E00               	movlw	0
  8886   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8887   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8888   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8889   001018  6ED9               	movwf	fsr2l,c
  8890   00101A  6ADA               	clrf	fsr2h,c
  8891   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8892   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8893                           
  8894                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8895   001024  EF2B  F008         	goto	l7660
  8896   001028                     l7654:
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8900   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8901   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8902   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8903   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8904   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8905   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8906   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8907   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8908   001048                     	if	0	;tblptru may be non-zero
  8909   001048                     	endif
  8910   001048                     	if	0	;tblptru may be non-zero
  8911   001048                     	endif
  8912   001048  0008               	tblrd		*
  8913   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8914   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8915   001052  EF53  F008         	goto	l1560
  8916   001056                     l7660:
  8917                           
  8918                           ; BSR set to: 0
  8919   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8920   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8921   00105E                     	if	0	;tblptru may be non-zero
  8922   00105E                     	endif
  8923   00105E                     	if	0	;tblptru may be non-zero
  8924   00105E                     	endif
  8925   00105E  0008               	tblrd		*
  8926   001060  50F5               	movf	tablat,w,c
  8927                           
  8928                           ; Switch size 1, requested type "simple"
  8929                           ; Number of cases is 1, Range of values is 102 to 102
  8930                           ; switch strategies available:
  8931                           ; Name         Instructions Cycles
  8932                           ; simple_byte            4     3 (average)
  8933                           ;	Chosen strategy is simple_byte
  8934   001062  0A66               	xorlw	102	; case 102
  8935   001064  B4D8               	btfsc	status,2,c
  8936   001066  EF14  F008         	goto	l7654
  8937   00106A  EF37  F008         	goto	l7662
  8938   00106E                     l7662:
  8939                           
  8940                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8941   00106E  0100               	movlb	0	; () banked
  8942   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8943   001072  6ED9               	movwf	fsr2l,c
  8944   001074  6ADA               	clrf	fsr2h,c
  8945   001076  2ADE               	incf	postinc2,f,c
  8946   001078  0E00               	movlw	0
  8947   00107A  22DD               	addwfc	postdec2,f,c
  8948   00107C  EF53  F008         	goto	l1560
  8949   001080                     l7666:
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8953   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8954   001082  6ED9               	movwf	fsr2l,c
  8955   001084  6ADA               	clrf	fsr2h,c
  8956   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8957   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8958   00108E                     	if	0	;tblptru may be non-zero
  8959   00108E                     	endif
  8960   00108E                     	if	0	;tblptru may be non-zero
  8961   00108E                     	endif
  8962   00108E  0008               	tblrd		*
  8963   001090  50F5               	movf	tablat,w,c
  8964   001092  6E07               	movwf	fputc@c^0,c
  8965   001094  6A08               	clrf	(fputc@c+1)^0,c
  8966   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8967   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8968   00109E  ECE6  F023         	call	_fputc	;wreg free
  8969   0010A2  EF37  F008         	goto	l7662
  8970   0010A6                     l1560:
  8971   0010A6  0012               	return		;funcret
  8972   0010A8                     __end_of_vfpfcnvrt:
  8973                           	callstack 0
  8974                           
  8975 ;; *************** function _utoa *****************
  8976 ;; Defined at:
  8977 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8980 ;;		 -> NULL(0), sprintf@f(12), 
  8981 ;;  d               2   33[COMRAM] unsigned int 
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;  i               2   39[COMRAM] int 
  8984 ;;  p               2   37[COMRAM] int 
  8985 ;;  w               2   35[COMRAM] int 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;Total ram usage:       10 bytes
  9000 ;; Hardware stack levels used: 1
  9001 ;; Hardware stack levels required when called: 5
  9002 ;; This function calls:
  9003 ;;		___lwdiv
  9004 ;;		___lwmod
  9005 ;;		_pad
  9006 ;; This function is called by:
  9007 ;;		_vfpfcnvrt
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text30
  9012   004602                     __ptext30:
  9013                           	callstack 0
  9014   004602                     _utoa:
  9015                           	callstack 21
  9016   004602                     
  9017                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  9018   004602  BE58               	btfsc	(_prec+1)^0,7,c
  9019   004604  EF08  F023         	goto	u8970
  9020   004608  EF06  F023         	goto	u8971
  9021   00460C                     u8971:
  9022   00460C  EF0E  F023         	goto	l1517
  9023   004610                     u8970:
  9024   004610  0E00               	movlw	0
  9025   004612  6E27               	movwf	(utoa@p+1)^0,c
  9026   004614  0E01               	movlw	1
  9027   004616  6E26               	movwf	utoa@p^0,c
  9028   004618  EF12  F023         	goto	l1519
  9029   00461C                     l1517:
  9030   00461C  C057  F026         	movff	_prec,utoa@p
  9031   004620  C058  F027         	movff	_prec+1,utoa@p+1
  9032   004624                     l1519:
  9033                           
  9034                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  9035   004624  C055  F024         	movff	_width,utoa@w
  9036   004628  C056  F025         	movff	_width+1,utoa@w+1
  9037   00462C                     
  9038                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  9039   00462C  0E00               	movlw	0
  9040   00462E  6E29               	movwf	(utoa@i+1)^0,c
  9041   004630  0E4F               	movlw	79
  9042   004632  6E28               	movwf	utoa@i^0,c
  9043   004634                     
  9044                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  9045   004634  0E00               	movlw	0
  9046   004636  0101               	movlb	1	; () banked
  9047   004638  6F76               	movwf	(_dbuf+79)& (0+255),b
  9048                           
  9049                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  9050   00463A  EF49  F023         	goto	l7448
  9051   00463E                     l7438:
  9052                           
  9053                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  9054   00463E  0628               	decf	utoa@i^0,f,c
  9055   004640  A0D8               	btfss	status,0,c
  9056   004642  0629               	decf	(utoa@i+1)^0,f,c
  9057   004644                     
  9058                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  9059   004644  0E27               	movlw	low _dbuf
  9060   004646  2428               	addwf	utoa@i^0,w,c
  9061   004648  6ED9               	movwf	fsr2l,c
  9062   00464A  0E01               	movlw	high _dbuf
  9063   00464C  2029               	addwfc	(utoa@i+1)^0,w,c
  9064   00464E  6EDA               	movwf	fsr2h,c
  9065   004650  C022  F006         	movff	utoa@d,___lwmod@dividend
  9066   004654  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  9067   004658  0E00               	movlw	0
  9068   00465A  6E09               	movwf	(___lwmod@divisor+1)^0,c
  9069   00465C  0E0A               	movlw	10
  9070   00465E  6E08               	movwf	___lwmod@divisor^0,c
  9071   004660  ECFF  F026         	call	___lwmod	;wreg free
  9072   004664  5006               	movf	?___lwmod^0,w,c
  9073   004666  0F30               	addlw	48
  9074   004668  6EDF               	movwf	indf2,c
  9075   00466A                     
  9076                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  9077   00466A  0626               	decf	utoa@p^0,f,c
  9078   00466C  A0D8               	btfss	status,0,c
  9079   00466E  0627               	decf	(utoa@p+1)^0,f,c
  9080   004670                     
  9081                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  9082   004670  0624               	decf	utoa@w^0,f,c
  9083   004672  A0D8               	btfss	status,0,c
  9084   004674  0625               	decf	(utoa@w+1)^0,f,c
  9085   004676                     
  9086                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  9087   004676  C022  F006         	movff	utoa@d,___lwdiv@dividend
  9088   00467A  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  9089   00467E  0E00               	movlw	0
  9090   004680  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  9091   004682  0E0A               	movlw	10
  9092   004684  6E08               	movwf	___lwdiv@divisor^0,c
  9093   004686  EC59  F026         	call	___lwdiv	;wreg free
  9094   00468A  C006  F022         	movff	?___lwdiv,utoa@d
  9095   00468E  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  9096   004692                     l7448:
  9097                           
  9098                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  9099   004692  5028               	movf	utoa@i^0,w,c
  9100   004694  1029               	iorwf	(utoa@i+1)^0,w,c
  9101   004696  B4D8               	btfsc	status,2,c
  9102   004698  EF50  F023         	goto	u8981
  9103   00469C  EF52  F023         	goto	u8980
  9104   0046A0                     u8981:
  9105   0046A0  EF68  F023         	goto	l7454
  9106   0046A4                     u8980:
  9107   0046A4  5022               	movf	utoa@d^0,w,c
  9108   0046A6  1023               	iorwf	(utoa@d+1)^0,w,c
  9109   0046A8  A4D8               	btfss	status,2,c
  9110   0046AA  EF59  F023         	goto	u8991
  9111   0046AE  EF5B  F023         	goto	u8990
  9112   0046B2                     u8991:
  9113   0046B2  EF1F  F023         	goto	l7438
  9114   0046B6                     u8990:
  9115   0046B6  BE27               	btfsc	(utoa@p+1)^0,7,c
  9116   0046B8  EF68  F023         	goto	u9000
  9117   0046BC  5027               	movf	(utoa@p+1)^0,w,c
  9118   0046BE  E106               	bnz	u9001
  9119   0046C0  0426               	decf	utoa@p^0,w,c
  9120   0046C2  B0D8               	btfsc	status,0,c
  9121   0046C4  EF66  F023         	goto	u9001
  9122   0046C8  EF68  F023         	goto	u9000
  9123   0046CC                     u9001:
  9124   0046CC  EF1F  F023         	goto	l7438
  9125   0046D0                     u9000:
  9126   0046D0                     l7454:
  9127                           
  9128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  9129   0046D0  C020  F017         	movff	utoa@fp,pad@fp
  9130   0046D4  C021  F018         	movff	utoa@fp+1,pad@fp+1
  9131   0046D8  0E27               	movlw	low _dbuf
  9132   0046DA  2428               	addwf	utoa@i^0,w,c
  9133   0046DC  6E19               	movwf	pad@buf^0,c
  9134   0046DE  0E01               	movlw	high _dbuf
  9135   0046E0  2029               	addwfc	(utoa@i+1)^0,w,c
  9136   0046E2  6E1A               	movwf	(pad@buf+1)^0,c
  9137   0046E4  C024  F01B         	movff	utoa@w,pad@p
  9138   0046E8  C025  F01C         	movff	utoa@w+1,pad@p+1
  9139   0046EC  EC0A  F026         	call	_pad	;wreg free
  9140   0046F0  0012               	return		;funcret
  9141   0046F2                     __end_of_utoa:
  9142                           	callstack 0
  9143                           
  9144 ;; *************** function ___lwmod *****************
  9145 ;; Defined at:
  9146 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  dividend        2    5[COMRAM] unsigned int 
  9149 ;;  divisor         2    7[COMRAM] unsigned int 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  counter         1    9[COMRAM] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  2    5[COMRAM] unsigned int 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;Total ram usage:        5 bytes
  9166 ;; Hardware stack levels used: 1
  9167 ;; Hardware stack levels required when called: 1
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_utoa
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           	psect	text31
  9176   004DFE                     __ptext31:
  9177                           	callstack 0
  9178   004DFE                     ___lwmod:
  9179                           	callstack 24
  9180   004DFE  5008               	movf	___lwmod@divisor^0,w,c
  9181   004E00  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  9182   004E02  B4D8               	btfsc	status,2,c
  9183   004E04  EF06  F027         	goto	u8171
  9184   004E08  EF08  F027         	goto	u8170
  9185   004E0C                     u8171:
  9186   004E0C  EF2C  F027         	goto	l1211
  9187   004E10                     u8170:
  9188   004E10  0E01               	movlw	1
  9189   004E12  6E0A               	movwf	___lwmod@counter^0,c
  9190   004E14  EF10  F027         	goto	l7022
  9191   004E18                     l7020:
  9192   004E18  90D8               	bcf	status,0,c
  9193   004E1A  3608               	rlcf	___lwmod@divisor^0,f,c
  9194   004E1C  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  9195   004E1E  2A0A               	incf	___lwmod@counter^0,f,c
  9196   004E20                     l7022:
  9197   004E20  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  9198   004E22  EF15  F027         	goto	u8181
  9199   004E26  EF17  F027         	goto	u8180
  9200   004E2A                     u8181:
  9201   004E2A  EF0C  F027         	goto	l7020
  9202   004E2E                     u8180:
  9203   004E2E                     l7024:
  9204   004E2E  5008               	movf	___lwmod@divisor^0,w,c
  9205   004E30  5C06               	subwf	___lwmod@dividend^0,w,c
  9206   004E32  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9207   004E34  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  9208   004E36  A0D8               	btfss	status,0,c
  9209   004E38  EF20  F027         	goto	u8191
  9210   004E3C  EF22  F027         	goto	u8190
  9211   004E40                     u8191:
  9212   004E40  EF26  F027         	goto	l7028
  9213   004E44                     u8190:
  9214   004E44  5008               	movf	___lwmod@divisor^0,w,c
  9215   004E46  5E06               	subwf	___lwmod@dividend^0,f,c
  9216   004E48  5009               	movf	(___lwmod@divisor+1)^0,w,c
  9217   004E4A  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  9218   004E4C                     l7028:
  9219   004E4C  90D8               	bcf	status,0,c
  9220   004E4E  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  9221   004E50  3208               	rrcf	___lwmod@divisor^0,f,c
  9222   004E52  2E0A               	decfsz	___lwmod@counter^0,f,c
  9223   004E54  EF17  F027         	goto	l7024
  9224   004E58                     l1211:
  9225   004E58  C006  F006         	movff	___lwmod@dividend,?___lwmod
  9226   004E5C  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  9227   004E60  0012               	return		;funcret
  9228   004E62                     __end_of___lwmod:
  9229                           	callstack 0
  9230                           
  9231 ;; *************** function ___lwdiv *****************
  9232 ;; Defined at:
  9233 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  dividend        2    5[COMRAM] unsigned int 
  9236 ;;  divisor         2    7[COMRAM] unsigned int 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  quotient        2   10[COMRAM] unsigned int 
  9239 ;;  counter         1    9[COMRAM] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  2    5[COMRAM] unsigned int 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;Total ram usage:        7 bytes
  9254 ;; Hardware stack levels used: 1
  9255 ;; Hardware stack levels required when called: 1
  9256 ;; This function calls:
  9257 ;;		Nothing
  9258 ;; This function is called by:
  9259 ;;		_utoa
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text32
  9264   004CB2                     __ptext32:
  9265                           	callstack 0
  9266   004CB2                     ___lwdiv:
  9267                           	callstack 24
  9268   004CB2  0E00               	movlw	0
  9269   004CB4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9270   004CB6  0E00               	movlw	0
  9271   004CB8  6E0B               	movwf	___lwdiv@quotient^0,c
  9272   004CBA  5008               	movf	___lwdiv@divisor^0,w,c
  9273   004CBC  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9274   004CBE  B4D8               	btfsc	status,2,c
  9275   004CC0  EF64  F026         	goto	u8141
  9276   004CC4  EF66  F026         	goto	u8140
  9277   004CC8                     u8141:
  9278   004CC8  EF8E  F026         	goto	l1201
  9279   004CCC                     u8140:
  9280   004CCC  0E01               	movlw	1
  9281   004CCE  6E0A               	movwf	___lwdiv@counter^0,c
  9282   004CD0  EF6E  F026         	goto	l7002
  9283   004CD4                     l7000:
  9284   004CD4  90D8               	bcf	status,0,c
  9285   004CD6  3608               	rlcf	___lwdiv@divisor^0,f,c
  9286   004CD8  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9287   004CDA  2A0A               	incf	___lwdiv@counter^0,f,c
  9288   004CDC                     l7002:
  9289   004CDC  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9290   004CDE  EF73  F026         	goto	u8151
  9291   004CE2  EF75  F026         	goto	u8150
  9292   004CE6                     u8151:
  9293   004CE6  EF6A  F026         	goto	l7000
  9294   004CEA                     u8150:
  9295   004CEA                     l7004:
  9296   004CEA  90D8               	bcf	status,0,c
  9297   004CEC  360B               	rlcf	___lwdiv@quotient^0,f,c
  9298   004CEE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9299   004CF0  5008               	movf	___lwdiv@divisor^0,w,c
  9300   004CF2  5C06               	subwf	___lwdiv@dividend^0,w,c
  9301   004CF4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9302   004CF6  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9303   004CF8  A0D8               	btfss	status,0,c
  9304   004CFA  EF81  F026         	goto	u8161
  9305   004CFE  EF83  F026         	goto	u8160
  9306   004D02                     u8161:
  9307   004D02  EF88  F026         	goto	l7012
  9308   004D06                     u8160:
  9309   004D06  5008               	movf	___lwdiv@divisor^0,w,c
  9310   004D08  5E06               	subwf	___lwdiv@dividend^0,f,c
  9311   004D0A  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9312   004D0C  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9313   004D0E  800B               	bsf	___lwdiv@quotient^0,0,c
  9314   004D10                     l7012:
  9315   004D10  90D8               	bcf	status,0,c
  9316   004D12  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9317   004D14  3208               	rrcf	___lwdiv@divisor^0,f,c
  9318   004D16  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9319   004D18  EF75  F026         	goto	l7004
  9320   004D1C                     l1201:
  9321   004D1C  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9322   004D20  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9323   004D24  0012               	return		;funcret
  9324   004D26                     __end_of___lwdiv:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _stoa *****************
  9328 ;; Defined at:
  9329 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9332 ;;		 -> NULL(0), sprintf@f(12), 
  9333 ;;  s               2   17[COMRAM] PTR unsigned char 
  9334 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_30(1), 
  9335 ;;		 -> STR_29(6), STR_28(5), STR_27(4), STR_26(4), 
  9336 ;;		 -> STR_25(4), STR_24(5), STR_23(5), 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  l               2   27[COMRAM] int 
  9339 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9340 ;;		 -> ?_printf(2), STR_46(7), ?_sprintf(2), runUART@reversed(31), 
  9341 ;;		 -> STR_30(1), STR_29(6), STR_28(5), STR_27(4), 
  9342 ;;		 -> STR_26(4), STR_25(4), STR_24(5), STR_23(5), 
  9343 ;;  w               2   23[COMRAM] int 
  9344 ;;  p               2   21[COMRAM] int 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  1    wreg      void 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;Total ram usage:       14 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; Hardware stack levels required when called: 3
  9361 ;; This function calls:
  9362 ;;		_fputc
  9363 ;; This function is called by:
  9364 ;;		_vfpfcnvrt
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text33
  9369   003AAE                     __ptext33:
  9370                           	callstack 0
  9371   003AAE                     _stoa:
  9372                           	callstack 23
  9373   003AAE                     
  9374                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9375   003AAE  C012  F01A         	movff	stoa@s,stoa@cp
  9376   003AB2  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9377                           
  9378                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9379   003AB6  501A               	movf	stoa@cp^0,w,c
  9380   003AB8  101B               	iorwf	(stoa@cp+1)^0,w,c
  9381   003ABA  A4D8               	btfss	status,2,c
  9382   003ABC  EF62  F01D         	goto	u8861
  9383   003AC0  EF64  F01D         	goto	u8860
  9384   003AC4                     u8861:
  9385   003AC4  EF68  F01D         	goto	l7396
  9386   003AC8                     u8860:
  9387   003AC8                     
  9388                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9389   003AC8  0EBF               	movlw	low STR_46
  9390   003ACA  6E1A               	movwf	stoa@cp^0,c
  9391   003ACC  0EFF               	movlw	high STR_46
  9392   003ACE  6E1B               	movwf	(stoa@cp+1)^0,c
  9393   003AD0                     l7396:
  9394                           
  9395                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9396   003AD0  0E00               	movlw	0
  9397   003AD2  6E1D               	movwf	(stoa@l+1)^0,c
  9398   003AD4  0E00               	movlw	0
  9399   003AD6  6E1C               	movwf	stoa@l^0,c
  9400   003AD8  EF70  F01D         	goto	l7400
  9401   003ADC                     l7398:
  9402   003ADC  4A1C               	infsnz	stoa@l^0,f,c
  9403   003ADE  2A1D               	incf	(stoa@l+1)^0,f,c
  9404   003AE0                     l7400:
  9405   003AE0  501C               	movf	stoa@l^0,w,c
  9406   003AE2  241A               	addwf	stoa@cp^0,w,c
  9407   003AE4  6E14               	movwf	??_stoa^0,c
  9408   003AE6  501D               	movf	(stoa@l+1)^0,w,c
  9409   003AE8  201B               	addwfc	(stoa@cp+1)^0,w,c
  9410   003AEA  6E15               	movwf	(??_stoa+1)^0,c
  9411   003AEC  C014  FFF6         	movff	??_stoa,tblptrl
  9412   003AF0  C015  FFF7         	movff	??_stoa+1,tblptrh
  9413   003AF4  0E00               	movlw	low (__mediumconst shr (0+16))
  9414   003AF6  6EF8               	movwf	tblptru,c
  9415   003AF8  0E0F               	movlw	(high __ramtop+-1)
  9416   003AFA  64F7               	cpfsgt	tblptrh,c
  9417   003AFC  D003               	bra	u8877
  9418   003AFE  0008               	tblrd		*
  9419   003B00  50F5               	movf	tablat,w,c
  9420   003B02  D005               	bra	u8870
  9421   003B04                     u8877:
  9422   003B04  CFF6 FFE1          	movff	tblptrl,fsr1l
  9423   003B08  CFF7 FFE2          	movff	tblptrh,fsr1h
  9424   003B0C  50E7               	movf	indf1,w,c
  9425   003B0E                     u8870:
  9426   003B0E  0900               	iorlw	0
  9427   003B10  A4D8               	btfss	status,2,c
  9428   003B12  EF8D  F01D         	goto	u8881
  9429   003B16  EF8F  F01D         	goto	u8880
  9430   003B1A                     u8881:
  9431   003B1A  EF6E  F01D         	goto	l7398
  9432   003B1E                     u8880:
  9433   003B1E                     
  9434                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9435   003B1E  BE58               	btfsc	(_prec+1)^0,7,c
  9436   003B20  EF94  F01D         	goto	u8891
  9437   003B24  EF96  F01D         	goto	u8890
  9438   003B28                     u8891:
  9439   003B28  EFA9  F01D         	goto	l1501
  9440   003B2C                     u8890:
  9441   003B2C  501C               	movf	stoa@l^0,w,c
  9442   003B2E  5C57               	subwf	_prec^0,w,c
  9443   003B30  5058               	movf	(_prec+1)^0,w,c
  9444   003B32  0A80               	xorlw	128
  9445   003B34  6E14               	movwf	??_stoa^0,c
  9446   003B36  501D               	movf	(stoa@l+1)^0,w,c
  9447   003B38  0A80               	xorlw	128
  9448   003B3A  5814               	subwfb	??_stoa^0,w,c
  9449   003B3C  B0D8               	btfsc	status,0,c
  9450   003B3E  EFA3  F01D         	goto	u8901
  9451   003B42  EFA5  F01D         	goto	u8900
  9452   003B46                     u8901:
  9453   003B46  EFA9  F01D         	goto	l1501
  9454   003B4A                     u8900:
  9455   003B4A                     
  9456                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9457   003B4A  C057  F01C         	movff	_prec,stoa@l
  9458   003B4E  C058  F01D         	movff	_prec+1,stoa@l+1
  9459   003B52                     l1501:
  9460                           
  9461                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9462   003B52  C01C  F016         	movff	stoa@l,stoa@p
  9463   003B56  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9464                           
  9465                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9466   003B5A  C055  F018         	movff	_width,stoa@w
  9467   003B5E  C056  F019         	movff	_width+1,stoa@w+1
  9468                           
  9469                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9470   003B62  B059               	btfsc	_flags^0,0,c
  9471   003B64  EFB6  F01D         	goto	u8911
  9472   003B68  EFB8  F01D         	goto	u8910
  9473   003B6C                     u8911:
  9474   003B6C  EFF4  F01D         	goto	l7420
  9475   003B70                     u8910:
  9476   003B70  EFC6  F01D         	goto	l7414
  9477   003B74                     l7410:
  9478                           
  9479                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9480   003B74  0E00               	movlw	0
  9481   003B76  6E08               	movwf	(fputc@c+1)^0,c
  9482   003B78  0E20               	movlw	32
  9483   003B7A  6E07               	movwf	fputc@c^0,c
  9484   003B7C  C010  F009         	movff	stoa@fp,fputc@fp
  9485   003B80  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9486   003B84  ECE6  F023         	call	_fputc	;wreg free
  9487   003B88                     
  9488                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9489   003B88  4A1C               	infsnz	stoa@l^0,f,c
  9490   003B8A  2A1D               	incf	(stoa@l+1)^0,f,c
  9491   003B8C                     l7414:
  9492                           
  9493                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9494   003B8C  5018               	movf	stoa@w^0,w,c
  9495   003B8E  5C1C               	subwf	stoa@l^0,w,c
  9496   003B90  501D               	movf	(stoa@l+1)^0,w,c
  9497   003B92  0A80               	xorlw	128
  9498   003B94  6E14               	movwf	??_stoa^0,c
  9499   003B96  5019               	movf	(stoa@w+1)^0,w,c
  9500   003B98  0A80               	xorlw	128
  9501   003B9A  5814               	subwfb	??_stoa^0,w,c
  9502   003B9C  A0D8               	btfss	status,0,c
  9503   003B9E  EFD3  F01D         	goto	u8921
  9504   003BA2  EFD5  F01D         	goto	u8920
  9505   003BA6                     u8921:
  9506   003BA6  EFBA  F01D         	goto	l7410
  9507   003BAA                     u8920:
  9508   003BAA  EFF4  F01D         	goto	l7420
  9509   003BAE                     l7416:
  9510                           
  9511                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9512   003BAE  C01A  FFF6         	movff	stoa@cp,tblptrl
  9513   003BB2  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9514   003BB6  0E00               	movlw	low (__mediumconst shr (0+16))
  9515   003BB8  6EF8               	movwf	tblptru,c
  9516   003BBA  0E0F               	movlw	(high __ramtop+-1)
  9517   003BBC  64F7               	cpfsgt	tblptrh,c
  9518   003BBE  D003               	bra	u8937
  9519   003BC0  0008               	tblrd		*
  9520   003BC2  50F5               	movf	tablat,w,c
  9521   003BC4  D005               	bra	u8930
  9522   003BC6                     u8937:
  9523   003BC6  CFF6 FFE1          	movff	tblptrl,fsr1l
  9524   003BCA  CFF7 FFE2          	movff	tblptrh,fsr1h
  9525   003BCE  50E7               	movf	indf1,w,c
  9526   003BD0                     u8930:
  9527   003BD0  6E14               	movwf	??_stoa^0,c
  9528   003BD2  5014               	movf	??_stoa^0,w,c
  9529   003BD4  6E07               	movwf	fputc@c^0,c
  9530   003BD6  6A08               	clrf	(fputc@c+1)^0,c
  9531   003BD8  C010  F009         	movff	stoa@fp,fputc@fp
  9532   003BDC  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9533   003BE0  ECE6  F023         	call	_fputc	;wreg free
  9534   003BE4                     
  9535                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9536   003BE4  4A1A               	infsnz	stoa@cp^0,f,c
  9537   003BE6  2A1B               	incf	(stoa@cp+1)^0,f,c
  9538   003BE8                     l7420:
  9539                           
  9540                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9541   003BE8  0616               	decf	stoa@p^0,f,c
  9542   003BEA  A0D8               	btfss	status,0,c
  9543   003BEC  0617               	decf	(stoa@p+1)^0,f,c
  9544   003BEE  2816               	incf	stoa@p^0,w,c
  9545   003BF0  E106               	bnz	u8941
  9546   003BF2  2817               	incf	(stoa@p+1)^0,w,c
  9547   003BF4  A4D8               	btfss	status,2,c
  9548   003BF6  EFFF  F01D         	goto	u8941
  9549   003BFA  EF01  F01E         	goto	u8940
  9550   003BFE                     u8941:
  9551   003BFE  EFD7  F01D         	goto	l7416
  9552   003C02                     u8940:
  9553   003C02                     
  9554                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9555   003C02  A059               	btfss	_flags^0,0,c
  9556   003C04  EF06  F01E         	goto	u8951
  9557   003C08  EF08  F01E         	goto	u8950
  9558   003C0C                     u8951:
  9559   003C0C  EF25  F01E         	goto	l1513
  9560   003C10                     u8950:
  9561   003C10  EF16  F01E         	goto	l7428
  9562   003C14                     l7424:
  9563                           
  9564                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9565   003C14  0E00               	movlw	0
  9566   003C16  6E08               	movwf	(fputc@c+1)^0,c
  9567   003C18  0E20               	movlw	32
  9568   003C1A  6E07               	movwf	fputc@c^0,c
  9569   003C1C  C010  F009         	movff	stoa@fp,fputc@fp
  9570   003C20  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9571   003C24  ECE6  F023         	call	_fputc	;wreg free
  9572   003C28                     
  9573                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9574   003C28  4A1C               	infsnz	stoa@l^0,f,c
  9575   003C2A  2A1D               	incf	(stoa@l+1)^0,f,c
  9576   003C2C                     l7428:
  9577                           
  9578                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9579   003C2C  5018               	movf	stoa@w^0,w,c
  9580   003C2E  5C1C               	subwf	stoa@l^0,w,c
  9581   003C30  501D               	movf	(stoa@l+1)^0,w,c
  9582   003C32  0A80               	xorlw	128
  9583   003C34  6E14               	movwf	??_stoa^0,c
  9584   003C36  5019               	movf	(stoa@w+1)^0,w,c
  9585   003C38  0A80               	xorlw	128
  9586   003C3A  5814               	subwfb	??_stoa^0,w,c
  9587   003C3C  A0D8               	btfss	status,0,c
  9588   003C3E  EF23  F01E         	goto	u8961
  9589   003C42  EF25  F01E         	goto	u8960
  9590   003C46                     u8961:
  9591   003C46  EF0A  F01E         	goto	l7424
  9592   003C4A                     u8960:
  9593   003C4A                     l1513:
  9594   003C4A  0012               	return		;funcret
  9595   003C4C                     __end_of_stoa:
  9596                           	callstack 0
  9597                           
  9598 ;; *************** function _read_prec_or_width *****************
  9599 ;; Defined at:
  9600 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9603 ;;		 -> vfprintf@cfmt(2), 
  9604 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9605 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  c               1   13[COMRAM] unsigned char 
  9608 ;;  n               2   14[COMRAM] int 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  2   11[COMRAM] int 
  9611 ;; Registers used:
  9612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;Total ram usage:        5 bytes
  9623 ;; Hardware stack levels used: 1
  9624 ;; Hardware stack levels required when called: 2
  9625 ;; This function calls:
  9626 ;;		___wmul
  9627 ;; This function is called by:
  9628 ;;		_vfpfcnvrt
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	text34
  9633   004ABC                     __ptext34:
  9634                           	callstack 0
  9635   004ABC                     _read_prec_or_width:
  9636                           	callstack 24
  9637   004ABC                     
  9638                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9639   004ABC  0E00               	movlw	0
  9640   004ABE  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9641   004AC0  0E00               	movlw	0
  9642   004AC2  6E0F               	movwf	read_prec_or_width@n^0,c
  9643   004AC4                     
  9644                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9645   004AC4  500C               	movf	read_prec_or_width@fmt^0,w,c
  9646   004AC6  6ED9               	movwf	fsr2l,c
  9647   004AC8  6ADA               	clrf	fsr2h,c
  9648   004ACA  CFDE FFF6          	movff	postinc2,tblptrl
  9649   004ACE  CFDD FFF7          	movff	postdec2,tblptrh
  9650   004AD2                     	if	0	;tblptru may be non-zero
  9651   004AD2                     	endif
  9652   004AD2                     	if	0	;tblptru may be non-zero
  9653   004AD2                     	endif
  9654   004AD2  0008               	tblrd		*
  9655   004AD4  50F5               	movf	tablat,w,c
  9656   004AD6  0A2A               	xorlw	42
  9657   004AD8  A4D8               	btfss	status,2,c
  9658   004ADA  EF71  F025         	goto	u9011
  9659   004ADE  EF73  F025         	goto	u9010
  9660   004AE2                     u9011:
  9661   004AE2  EF9D  F025         	goto	l7470
  9662   004AE6                     u9010:
  9663   004AE6                     
  9664                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9665   004AE6  500C               	movf	read_prec_or_width@fmt^0,w,c
  9666   004AE8  6ED9               	movwf	fsr2l,c
  9667   004AEA  6ADA               	clrf	fsr2h,c
  9668   004AEC  2ADE               	incf	postinc2,f,c
  9669   004AEE  0E00               	movlw	0
  9670   004AF0  22DD               	addwfc	postdec2,f,c
  9671   004AF2                     
  9672                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9673   004AF2  500D               	movf	read_prec_or_width@ap^0,w,c
  9674   004AF4  6ED9               	movwf	fsr2l,c
  9675   004AF6  6ADA               	clrf	fsr2h,c
  9676   004AF8  0E02               	movlw	2
  9677   004AFA  26DF               	addwf	indf2,f,c
  9678   004AFC  5CDF               	subwf	indf2,w,c
  9679   004AFE  6ED9               	movwf	fsr2l,c
  9680   004B00  6ADA               	clrf	fsr2h,c
  9681   004B02  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9682   004B06  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9683                           
  9684                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9685   004B0A  EFB0  F025         	goto	l1529
  9686   004B0E                     l7466:
  9687                           
  9688                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9689   004B0E  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9690   004B12  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9691   004B16  0E00               	movlw	0
  9692   004B18  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9693   004B1A  0E0A               	movlw	10
  9694   004B1C  6E08               	movwf	___wmul@multiplicand^0,c
  9695   004B1E  EC40  F029         	call	___wmul	;wreg free
  9696   004B22  500E               	movf	read_prec_or_width@c^0,w,c
  9697   004B24  2406               	addwf	?___wmul^0,w,c
  9698   004B26  6E0F               	movwf	read_prec_or_width@n^0,c
  9699   004B28  0E00               	movlw	0
  9700   004B2A  2007               	addwfc	(?___wmul+1)^0,w,c
  9701   004B2C  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9702   004B2E                     
  9703                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9704   004B2E  500C               	movf	read_prec_or_width@fmt^0,w,c
  9705   004B30  6ED9               	movwf	fsr2l,c
  9706   004B32  6ADA               	clrf	fsr2h,c
  9707   004B34  2ADE               	incf	postinc2,f,c
  9708   004B36  0E00               	movlw	0
  9709   004B38  22DD               	addwfc	postdec2,f,c
  9710   004B3A                     l7470:
  9711                           
  9712                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9713   004B3A  500C               	movf	read_prec_or_width@fmt^0,w,c
  9714   004B3C  6ED9               	movwf	fsr2l,c
  9715   004B3E  6ADA               	clrf	fsr2h,c
  9716   004B40  CFDE FFF6          	movff	postinc2,tblptrl
  9717   004B44  CFDD FFF7          	movff	postdec2,tblptrh
  9718   004B48                     	if	0	;tblptru may be non-zero
  9719   004B48                     	endif
  9720   004B48                     	if	0	;tblptru may be non-zero
  9721   004B48                     	endif
  9722   004B48  0008               	tblrd		*
  9723   004B4A  50F5               	movf	tablat,w,c
  9724   004B4C  0FD0               	addlw	208
  9725   004B4E  6E0E               	movwf	read_prec_or_width@c^0,c
  9726   004B50  0E09               	movlw	9
  9727   004B52  640E               	cpfsgt	read_prec_or_width@c^0,c
  9728   004B54  EFAE  F025         	goto	u9021
  9729   004B58  EFB0  F025         	goto	u9020
  9730   004B5C                     u9021:
  9731   004B5C  EF87  F025         	goto	l7466
  9732   004B60                     u9020:
  9733   004B60                     l1529:
  9734                           
  9735                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9736   004B60  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9737   004B64  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9738   004B68  0012               	return		;funcret
  9739   004B6A                     __end_of_read_prec_or_width:
  9740                           	callstack 0
  9741                           
  9742 ;; *************** function ___wmul *****************
  9743 ;; Defined at:
  9744 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;  multiplier      2    5[COMRAM] unsigned int 
  9747 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9748 ;; Auto vars:     Size  Location     Type
  9749 ;;  product         2    9[COMRAM] unsigned int 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  2    5[COMRAM] unsigned int 
  9752 ;; Registers used:
  9753 ;;		wreg, status,2, status,0, prodl, prodh
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9762 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;Total ram usage:        6 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; Hardware stack levels required when called: 1
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		_read_prec_or_width
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           	psect	text35
  9774   005280                     __ptext35:
  9775                           	callstack 0
  9776   005280                     ___wmul:
  9777                           	callstack 24
  9778   005280  5006               	movf	___wmul@multiplier^0,w,c
  9779   005282  0208               	mulwf	___wmul@multiplicand^0,c
  9780   005284  CFF3 F00A          	movff	prodl,___wmul@product
  9781   005288  CFF4 F00B          	movff	prodh,___wmul@product+1
  9782   00528C  5006               	movf	___wmul@multiplier^0,w,c
  9783   00528E  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9784   005290  50F3               	movf	243,w,c
  9785   005292  260B               	addwf	(___wmul@product+1)^0,f,c
  9786   005294  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9787   005296  0208               	mulwf	___wmul@multiplicand^0,c
  9788   005298  50F3               	movf	243,w,c
  9789   00529A  260B               	addwf	(___wmul@product+1)^0,f,c
  9790   00529C  C00A  F006         	movff	___wmul@product,?___wmul
  9791   0052A0  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9792   0052A4  0012               	return		;funcret
  9793   0052A6                     __end_of___wmul:
  9794                           	callstack 0
  9795                           
  9796 ;; *************** function _efgtoa *****************
  9797 ;; Defined at:
  9798 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9801 ;;		 -> NULL(0), sprintf@f(12), 
  9802 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9803 ;;  c               1   42[BANK0 ] unsigned char 
  9804 ;; Auto vars:     Size  Location     Type
  9805 ;;  u               4   85[BANK0 ] struct flui
  9806 ;;  g               4   79[BANK0 ] struct flui
  9807 ;;  l               4   74[BANK0 ] struct flui
  9808 ;;  h               4   70[BANK0 ] struct flui
  9809 ;;  ou              4   64[BANK0 ] struct flui
  9810 ;;  n               2   83[BANK0 ] int 
  9811 ;;  i               2   68[BANK0 ] int 
  9812 ;;  w               2   62[BANK0 ] int 
  9813 ;;  e               2   60[BANK0 ] int 
  9814 ;;  m               2   58[BANK0 ] int 
  9815 ;;  d               2   56[BANK0 ] int 
  9816 ;;  t               2   49[BANK0 ] int 
  9817 ;;  p               2   47[BANK0 ] int 
  9818 ;;  ne              2   45[BANK0 ] int 
  9819 ;;  sign            1   78[BANK0 ] unsigned char 
  9820 ;;  nmode           1   55[BANK0 ] unsigned char 
  9821 ;;  mode            1   54[BANK0 ] unsigned char 
  9822 ;;  pp              1   53[BANK0 ] unsigned char 
  9823 ;;  esign           1    0        unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9833 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;Total ram usage:       53 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 5
  9840 ;; This function calls:
  9841 ;;		___fladd
  9842 ;;		___fldiv
  9843 ;;		___fleq
  9844 ;;		___flge
  9845 ;;		___flmul
  9846 ;;		___flneg
  9847 ;;		___flsub
  9848 ;;		___fltol
  9849 ;;		___fpclassifyf
  9850 ;;		_floorf
  9851 ;;		_labs
  9852 ;;		_memcpy
  9853 ;;		_pad
  9854 ;;		_strcpy
  9855 ;; This function is called by:
  9856 ;;		_vfpfcnvrt
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text36
  9861   000152                     __ptext36:
  9862                           	callstack 0
  9863   000152                     _efgtoa:
  9864                           	callstack 21
  9865   000152                     
  9866                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9867   000152  0E00               	movlw	0
  9868   000154  0100               	movlb	0	; () banked
  9869   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9870   000158                     
  9871                           ; BSR set to: 0
  9872                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9873   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9874   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9875   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9876   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9877   000168                     
  9878                           ; BSR set to: 0
  9879                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9880   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9881   00016A  EFBB  F000         	goto	u8540
  9882   00016E  EFB9  F000         	goto	u8541
  9883   000172                     u8541:
  9884   000172  EFCF  F000         	goto	l7180
  9885   000176                     u8540:
  9886   000176                     
  9887                           ; BSR set to: 0
  9888                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9889   000176  0E01               	movlw	1
  9890   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9891   00017A                     
  9892                           ; BSR set to: 0
  9893                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9894   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9895   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9896   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9897   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9898   00018A  EC89  F028         	call	___flneg	;wreg free
  9899   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9900   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9901   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9902   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9903   00019E                     l7180:
  9904                           
  9905                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9906   00019E  0E00               	movlw	0
  9907   0001A0  0100               	movlb	0	; () banked
  9908   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9909   0001A4  0E00               	movlw	0
  9910   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9911   0001A8                     
  9912                           ; BSR set to: 0
  9913                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9914   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9915   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9916   0001B0                     
  9917                           ; BSR set to: 0
  9918                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9919   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9920   0001B2  B4D8               	btfsc	status,2,c
  9921   0001B4  EFDE  F000         	goto	u8551
  9922   0001B8  EFE0  F000         	goto	u8550
  9923   0001BC                     u8551:
  9924   0001BC  EFF4  F000         	goto	l7194
  9925   0001C0                     u8550:
  9926   0001C0                     
  9927                           ; BSR set to: 0
  9928                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9929   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9930   0001C2  A4D8               	btfss	status,2,c
  9931   0001C4  EFE6  F000         	goto	u8561
  9932   0001C8  EFE8  F000         	goto	u8560
  9933   0001CC                     u8561:
  9934   0001CC  EFEE  F000         	goto	l7190
  9935   0001D0                     u8560:
  9936   0001D0                     
  9937                           ; BSR set to: 0
  9938   0001D0  0E00               	movlw	0
  9939   0001D2  6F94               	movwf	(_efgtoa$4074+1)& (0+255),b
  9940   0001D4  0E2B               	movlw	43
  9941   0001D6  6F93               	movwf	_efgtoa$4074& (0+255),b
  9942   0001D8  EFF2  F000         	goto	l7192
  9943   0001DC                     l7190:
  9944                           
  9945                           ; BSR set to: 0
  9946   0001DC  0E00               	movlw	0
  9947   0001DE  6F94               	movwf	(_efgtoa$4074+1)& (0+255),b
  9948   0001E0  0E2D               	movlw	45
  9949   0001E2  6F93               	movwf	_efgtoa$4074& (0+255),b
  9950   0001E4                     l7192:
  9951                           
  9952                           ; BSR set to: 0
  9953   0001E4  C093  F0AE         	movff	_efgtoa$4074,efgtoa@sign
  9954   0001E8                     l7194:
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9958   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9959   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9960   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9961   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9962   0001F8  EC82  F022         	call	___fpclassifyf	;wreg free
  9963   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9964   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9965   000200  A4D8               	btfss	status,2,c
  9966   000202  EF05  F001         	goto	u8571
  9967   000206  EF07  F001         	goto	u8570
  9968   00020A                     u8571:
  9969   00020A  EF3A  F001         	goto	l7212
  9970   00020E                     u8570:
  9971   00020E                     
  9972                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9973   00020E  0100               	movlb	0	; () banked
  9974   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9975   000212  B4D8               	btfsc	status,2,c
  9976   000214  EF0E  F001         	goto	u8581
  9977   000218  EF10  F001         	goto	u8580
  9978   00021C                     u8581:
  9979   00021C  EF19  F001         	goto	l7204
  9980   000220                     u8580:
  9981   000220                     
  9982                           ; BSR set to: 0
  9983                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9984   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9985   000224                     
  9986                           ; BSR set to: 0
  9987                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9988   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9989   000226  A0D8               	btfss	status,0,c
  9990   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9991   00022A                     
  9992                           ; BSR set to: 0
  9993                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9994   00022A  0E00               	movlw	0
  9995   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9996   00022E  0E01               	movlw	1
  9997   000230  6FB3               	movwf	efgtoa@n& (0+255),b
  9998   000232                     l7204:
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
 10002   000232  0E27               	movlw	low _dbuf
 10003   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
 10004   000236  6E06               	movwf	strcpy@dest^0,c
 10005   000238  0E01               	movlw	high _dbuf
 10006   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10007   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
 10008   00023E  0EEB               	movlw	low STR_40
 10009   000240  6E08               	movwf	strcpy@src^0,c
 10010   000242  0EFF               	movlw	high STR_40
 10011   000244  6E09               	movwf	(strcpy@src+1)^0,c
 10012   000246  ECA6  F028         	call	_strcpy	;wreg free
 10013   00024A                     l7206:
 10014                           
 10015                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10016   00024A  0100               	movlb	0	; () banked
 10017   00024C  0EFD               	movlw	253
 10018   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
 10019   000250  0EFF               	movlw	255
 10020   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
 10021   000254                     
 10022                           ; BSR set to: 0
 10023                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
 10024   000254  C084  F017         	movff	efgtoa@fp,pad@fp
 10025   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10026   00025C  0E27               	movlw	low _dbuf
 10027   00025E  6E19               	movwf	pad@buf^0,c
 10028   000260  0E01               	movlw	high _dbuf
 10029   000262  6E1A               	movwf	(pad@buf+1)^0,c
 10030   000264  C09E  F01B         	movff	efgtoa@w,pad@p
 10031   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10032   00026C  EC0A  F026         	call	_pad	;wreg free
 10033   000270  EFA5  F005         	goto	l1452
 10034   000274                     l7212:
 10035                           
 10036                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
 10037   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
 10038   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
 10039   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
 10040   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
 10041   000284  EC82  F022         	call	___fpclassifyf	;wreg free
 10042   000288  5006               	movf	?___fpclassifyf^0,w,c
 10043   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
 10044   00028C  A4D8               	btfss	status,2,c
 10045   00028E  EF4B  F001         	goto	u8591
 10046   000292  EF4D  F001         	goto	u8590
 10047   000296                     u8591:
 10048   000296  EF6D  F001         	goto	l7230
 10049   00029A                     u8590:
 10050   00029A                     
 10051                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
 10052   00029A  0100               	movlb	0	; () banked
 10053   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
 10054   00029E  B4D8               	btfsc	status,2,c
 10055   0002A0  EF54  F001         	goto	u8601
 10056   0002A4  EF56  F001         	goto	u8600
 10057   0002A8                     u8601:
 10058   0002A8  EF5F  F001         	goto	l7222
 10059   0002AC                     u8600:
 10060   0002AC                     
 10061                           ; BSR set to: 0
 10062                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
 10063   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
 10064   0002B0                     
 10065                           ; BSR set to: 0
 10066                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
 10067   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
 10068   0002B2  A0D8               	btfss	status,0,c
 10069   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10070   0002B6                     
 10071                           ; BSR set to: 0
 10072                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 10073   0002B6  0E00               	movlw	0
 10074   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10075   0002BA  0E01               	movlw	1
 10076   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
 10077   0002BE                     l7222:
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
 10081   0002BE  0E27               	movlw	low _dbuf
 10082   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
 10083   0002C2  6E06               	movwf	strcpy@dest^0,c
 10084   0002C4  0E01               	movlw	high _dbuf
 10085   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10086   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
 10087   0002CA  0EEF               	movlw	low STR_43
 10088   0002CC  6E08               	movwf	strcpy@src^0,c
 10089   0002CE  0EFF               	movlw	high STR_43
 10090   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
 10091   0002D2  ECA6  F028         	call	_strcpy	;wreg free
 10092   0002D6  EF25  F001         	goto	l7206
 10093   0002DA                     l7230:
 10094                           
 10095                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
 10096   0002DA  0E00               	movlw	0
 10097   0002DC  0100               	movlb	0	; () banked
 10098   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
 10099   0002E0  0E00               	movlw	0
 10100   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10101   0002E4  0E80               	movlw	128
 10102   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10103   0002E8  0E3F               	movlw	63
 10104   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10105                           
 10106                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 10107   0002EC  0E00               	movlw	0
 10108   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10109   0002F0  0E00               	movlw	0
 10110   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
 10111   0002F4                     
 10112                           ; BSR set to: 0
 10113                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
 10114   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
 10115   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
 10116   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
 10117   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
 10118   000304  0E00               	movlw	0
 10119   000306  6E0A               	movwf	___fleq@ff2^0,c
 10120   000308  0E00               	movlw	0
 10121   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
 10122   00030C  0E00               	movlw	0
 10123   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
 10124   000310  0E00               	movlw	0
 10125   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
 10126   000314  ECB5  F025         	call	___fleq	;wreg free
 10127   000318  B0D8               	btfsc	status,0,c
 10128   00031A  EF91  F001         	goto	u8611
 10129   00031E  EF93  F001         	goto	u8610
 10130   000322                     u8611:
 10131   000322  EF72  F002         	goto	l1455
 10132   000326                     u8610:
 10133   000326  EFA0  F001         	goto	l7238
 10134   00032A                     l1457:
 10135                           
 10136                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 10137   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10138   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10139   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10140   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10141   00033A                     
 10142                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
 10143   00033A  0100               	movlb	0	; () banked
 10144   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10145   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10146   000340                     l7238:
 10147                           
 10148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 10149   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10150   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10151   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10152   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10153   000350  0E00               	movlw	0
 10154   000352  6E18               	movwf	___flmul@a^0,c
 10155   000354  0E00               	movlw	0
 10156   000356  6E19               	movwf	(___flmul@a+1)^0,c
 10157   000358  0E20               	movlw	32
 10158   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
 10159   00035C  0E41               	movlw	65
 10160   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
 10161   000360  EC3A  F00D         	call	___flmul	;wreg free
 10162   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10163   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10164   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10165   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10166   000374  0100               	movlb	0	; () banked
 10167   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
 10168   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10169   00037A  6E06               	movwf	labs@a^0,c
 10170   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
 10171   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10172   000380  6E07               	movwf	(labs@a+1)^0,c
 10173   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
 10174   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10175   000386  6E08               	movwf	(labs@a+2)^0,c
 10176   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
 10177   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10178   00038C  6E09               	movwf	(labs@a+3)^0,c
 10179   00038E  EC5F  F027         	call	_labs	;wreg free
 10180   000392  BE09               	btfsc	(?_labs+3)^0,7,c
 10181   000394  EFD7  F001         	goto	u8621
 10182   000398  5009               	movf	(?_labs+3)^0,w,c
 10183   00039A  1008               	iorwf	(?_labs+2)^0,w,c
 10184   00039C  1007               	iorwf	(?_labs+1)^0,w,c
 10185   00039E  E109               	bnz	u8620
 10186   0003A0  0E02               	movlw	2
 10187   0003A2  5C06               	subwf	?_labs^0,w,c
 10188   0003A4  A0D8               	btfss	status,0,c
 10189   0003A6  EFD7  F001         	goto	u8621
 10190   0003AA  EFD9  F001         	goto	u8620
 10191   0003AE                     u8621:
 10192   0003AE  EF95  F001         	goto	l1457
 10193   0003B2                     u8620:
 10194   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
 10195   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
 10196   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
 10197   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
 10198   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
 10199   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
 10200   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
 10201   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
 10202   0003D2  EC00  F022         	call	___flge	;wreg free
 10203   0003D6  A0D8               	btfss	status,0,c
 10204   0003D8  EFF0  F001         	goto	u8631
 10205   0003DC  EFF2  F001         	goto	u8630
 10206   0003E0                     u8631:
 10207   0003E0  EF95  F001         	goto	l1457
 10208   0003E4                     u8630:
 10209   0003E4                     
 10210                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
 10211   0003E4  0100               	movlb	0	; () banked
 10212   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
 10213   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10214   0003EA  6E06               	movwf	labs@a^0,c
 10215   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10216   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10217   0003F0  6E07               	movwf	(labs@a+1)^0,c
 10218   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10219   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10220   0003F6  6E08               	movwf	(labs@a+2)^0,c
 10221   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10222   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10223   0003FC  6E09               	movwf	(labs@a+3)^0,c
 10224   0003FE  EC5F  F027         	call	_labs	;wreg free
 10225   000402  BE09               	btfsc	(?_labs+3)^0,7,c
 10226   000404  EF11  F002         	goto	u8640
 10227   000408  5009               	movf	(?_labs+3)^0,w,c
 10228   00040A  1008               	iorwf	(?_labs+2)^0,w,c
 10229   00040C  1007               	iorwf	(?_labs+1)^0,w,c
 10230   00040E  E107               	bnz	u8641
 10231   000410  0E02               	movlw	2
 10232   000412  5C06               	subwf	?_labs^0,w,c
 10233   000414  B0D8               	btfsc	status,0,c
 10234   000416  EF0F  F002         	goto	u8641
 10235   00041A  EF11  F002         	goto	u8640
 10236   00041E                     u8641:
 10237   00041E  EF59  F002         	goto	l7256
 10238   000422                     u8640:
 10239   000422                     l7246:
 10240                           
 10241                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
 10242   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
 10243   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
 10244   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
 10245   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
 10246                           
 10247                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
 10248   000432  EF72  F002         	goto	l1455
 10249   000436                     l7248:
 10250                           
 10251                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
 10252   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10253   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10254   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10255   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10256   000446  0E00               	movlw	0
 10257   000448  6E31               	movwf	___fldiv@a^0,c
 10258   00044A  0E00               	movlw	0
 10259   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
 10260   00044E  0E20               	movlw	32
 10261   000450  6E33               	movwf	(___fldiv@a+2)^0,c
 10262   000452  0E41               	movlw	65
 10263   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10264   000456  EC10  F015         	call	___fldiv	;wreg free
 10265   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10266   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10267   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10268   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10269   00046A                     
 10270                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10271   00046A  0100               	movlb	0	; () banked
 10272   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10273   00046E  A0D8               	btfss	status,0,c
 10274   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10275   000472                     
 10276                           ; BSR set to: 0
 10277                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10278   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10279   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10280   000476  6E06               	movwf	labs@a^0,c
 10281   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10282   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10283   00047C  6E07               	movwf	(labs@a+1)^0,c
 10284   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10285   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10286   000482  6E08               	movwf	(labs@a+2)^0,c
 10287   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10288   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10289   000488  6E09               	movwf	(labs@a+3)^0,c
 10290   00048A  EC5F  F027         	call	_labs	;wreg free
 10291   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10292   000490  EF57  F002         	goto	u8650
 10293   000494  5009               	movf	(?_labs+3)^0,w,c
 10294   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10295   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10296   00049A  E107               	bnz	u8651
 10297   00049C  0E02               	movlw	2
 10298   00049E  5C06               	subwf	?_labs^0,w,c
 10299   0004A0  B0D8               	btfsc	status,0,c
 10300   0004A2  EF55  F002         	goto	u8651
 10301   0004A6  EF57  F002         	goto	u8650
 10302   0004AA                     u8651:
 10303   0004AA  EF59  F002         	goto	l7256
 10304   0004AE                     u8650:
 10305   0004AE  EF11  F002         	goto	l7246
 10306   0004B2                     l7256:
 10307                           
 10308                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10309   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10310   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10311   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10312   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10313   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10314   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10315   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10316   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10317   0004D2  EC00  F022         	call	___flge	;wreg free
 10318   0004D6  A0D8               	btfss	status,0,c
 10319   0004D8  EF70  F002         	goto	u8661
 10320   0004DC  EF72  F002         	goto	u8660
 10321   0004E0                     u8661:
 10322   0004E0  EF1B  F002         	goto	l7248
 10323   0004E4                     u8660:
 10324   0004E4                     l1455:
 10325                           
 10326                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10327   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10328                           
 10329                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10330   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10331   0004EC                     
 10332                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10333   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10334   0004EE  EF7B  F002         	goto	u8671
 10335   0004F2  EF7D  F002         	goto	u8670
 10336   0004F6                     u8671:
 10337   0004F6  EF83  F002         	goto	l7262
 10338   0004FA                     u8670:
 10339   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10340   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10341   000502  EF88  F002         	goto	l7264
 10342   000506                     l7262:
 10343   000506  0E00               	movlw	0
 10344   000508  0100               	movlb	0	; () banked
 10345   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10346   00050C  0E06               	movlw	6
 10347   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10348   000510                     l7264:
 10349                           
 10350                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10351   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10352   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10353   000518                     
 10354                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10355   000518  0100               	movlb	0	; () banked
 10356   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10357   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10358   00051E                     
 10359                           ; BSR set to: 0
 10360                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10361   00051E  0E66               	movlw	102
 10362   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10363   000522  A4D8               	btfss	status,2,c
 10364   000524  EF96  F002         	goto	u8681
 10365   000528  EF98  F002         	goto	u8680
 10366   00052C                     u8681:
 10367   00052C  EFB8  F002         	goto	l7278
 10368   000530                     u8680:
 10369   000530                     
 10370                           ; BSR set to: 0
 10371                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10372   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10373   000532  EF9F  F002         	goto	u8690
 10374   000536  EF9D  F002         	goto	u8691
 10375   00053A                     u8691:
 10376   00053A  EFAB  F002         	goto	l7274
 10377   00053E                     u8690:
 10378   00053E                     
 10379                           ; BSR set to: 0
 10380                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10381   00053E  0E00               	movlw	0
 10382   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10383   000542  0E00               	movlw	0
 10384   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10385   000546  0E80               	movlw	128
 10386   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10387   00054A  0E3F               	movlw	63
 10388   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10389                           
 10390                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10391   00054E  0E00               	movlw	0
 10392   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10393   000552  0E00               	movlw	0
 10394   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10395   000556                     l7274:
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10399   000556  0E67               	movlw	103
 10400   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10401   00055A  B4D8               	btfsc	status,2,c
 10402   00055C  EFB2  F002         	goto	u8701
 10403   000560  EFB4  F002         	goto	u8700
 10404   000564                     u8701:
 10405   000564  EFB8  F002         	goto	l7278
 10406   000568                     u8700:
 10407   000568                     
 10408                           ; BSR set to: 0
 10409                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10410   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10411   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10412   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10413   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10414   000570                     l7278:
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10418   000570  0E00               	movlw	0
 10419   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10420   000574  0E00               	movlw	0
 10421   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10422   000578                     
 10423                           ; BSR set to: 0
 10424                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10425   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10426   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10427   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10428   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10429   000588                     
 10430                           ; BSR set to: 0
 10431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10432   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10433   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10434   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10435   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10436                           
 10437                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10438   000598  EF49  F003         	goto	l7292
 10439   00059C                     l7284:
 10440                           
 10441                           ; BSR set to: 0
 10442                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10443   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10444   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10445   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10446   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10447   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10448   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10449   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10450   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10451   0005BC  EC10  F015         	call	___fldiv	;wreg free
 10452   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10453   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10454   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10455   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10456   0005D0  EC6A  F019         	call	_floorf	;wreg free
 10457   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10458   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10459   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10460   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10461                           
 10462                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10463   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10464   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10465   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10466   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10467   0005F4  EC7C  F021         	call	___fltol	;wreg free
 10468   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10469   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10470   000600                     
 10471                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10472   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10473   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10474   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10475   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10476   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10477   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10478   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10479   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10480   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10481   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10482   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10483   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10484   000630  EC3A  F00D         	call	___flmul	;wreg free
 10485   000634  C014  F068         	movff	?___flmul,___flsub@a
 10486   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10487   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10488   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10489   000644  EC01  F028         	call	___flsub	;wreg free
 10490   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10491   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10492   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10493   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10494   000658                     
 10495                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10496   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10497   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10498   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10499   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10500   000668  0E00               	movlw	0
 10501   00066A  6E31               	movwf	___fldiv@a^0,c
 10502   00066C  0E00               	movlw	0
 10503   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10504   000670  0E20               	movlw	32
 10505   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10506   000674  0E41               	movlw	65
 10507   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10508   000678  EC10  F015         	call	___fldiv	;wreg free
 10509   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10510   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10511   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10512   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10513   00068C                     
 10514                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10515   00068C  0100               	movlb	0	; () banked
 10516   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10517   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10518   000692                     l7292:
 10519                           
 10520                           ; BSR set to: 0
 10521                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10522   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10523   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10524   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10525   000698  0A80               	xorlw	128
 10526   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10527   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10528   00069E  0A80               	xorlw	128
 10529   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10530   0006A2  A0D8               	btfss	status,0,c
 10531   0006A4  EF56  F003         	goto	u8711
 10532   0006A8  EF58  F003         	goto	u8710
 10533   0006AC                     u8711:
 10534   0006AC  EFCE  F002         	goto	l7284
 10535   0006B0                     u8710:
 10536   0006B0                     
 10537                           ; BSR set to: 0
 10538                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10539   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10540   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10541   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10542   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10543   0006C0  0E00               	movlw	0
 10544   0006C2  6E18               	movwf	___flmul@a^0,c
 10545   0006C4  0E00               	movlw	0
 10546   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10547   0006C8  0EA0               	movlw	160
 10548   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10549   0006CC  0E40               	movlw	64
 10550   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10551   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10552   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10553   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10554   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10555   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10556   0006E4                     
 10557                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10558   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10559   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10560   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10561   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10562   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10563   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10564   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10565   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10566   000704  EC00  F022         	call	___flge	;wreg free
 10567   000708  B0D8               	btfsc	status,0,c
 10568   00070A  EF89  F003         	goto	u8721
 10569   00070E  EF8B  F003         	goto	u8720
 10570   000712                     u8721:
 10571   000712  EF96  F003         	goto	l7300
 10572   000716                     u8720:
 10573   000716                     
 10574                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10575   000716  0E00               	movlw	0
 10576   000718  0100               	movlb	0	; () banked
 10577   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10578   00071C  0E00               	movlw	0
 10579   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10580   000720  0E00               	movlw	0
 10581   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10582   000724  0E00               	movlw	0
 10583   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10584                           
 10585                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10586   000728  EFBF  F003         	goto	l7306
 10587   00072C                     l7300:
 10588                           
 10589                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10590   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10591   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10592   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10593   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10594   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10595   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10596   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10597   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10598   00074C  ECB5  F025         	call	___fleq	;wreg free
 10599   000750  A0D8               	btfss	status,0,c
 10600   000752  EFAD  F003         	goto	u8731
 10601   000756  EFAF  F003         	goto	u8730
 10602   00075A                     u8731:
 10603   00075A  EFBF  F003         	goto	l7306
 10604   00075E                     u8730:
 10605   00075E  0100               	movlb	0	; () banked
 10606   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10607   000762  EFB5  F003         	goto	u8741
 10608   000766  EFB7  F003         	goto	u8740
 10609   00076A                     u8741:
 10610   00076A  EFBF  F003         	goto	l7306
 10611   00076E                     u8740:
 10612   00076E                     
 10613                           ; BSR set to: 0
 10614                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10615   00076E  0E00               	movlw	0
 10616   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10617   000772  0E00               	movlw	0
 10618   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10619   000776  0E00               	movlw	0
 10620   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10621   00077A  0E00               	movlw	0
 10622   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10623   00077E                     l7306:
 10624                           
 10625                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10626   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10627   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10628   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10629   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10630   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10631   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10632   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10633   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10634   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10635   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10636   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10637   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10638   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10639   0007B2                     
 10640                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10641   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10642   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10643   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10644   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10645   0007C2  0E00               	movlw	0
 10646   0007C4  6E18               	movwf	___flmul@a^0,c
 10647   0007C6  0E00               	movlw	0
 10648   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10649   0007CA  0E20               	movlw	32
 10650   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10651   0007CE  0E41               	movlw	65
 10652   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10653   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10654   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10655   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10656   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10657   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10658   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10659   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10660   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10661   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10662   0007F6  EC00  F022         	call	___flge	;wreg free
 10663   0007FA  A0D8               	btfss	status,0,c
 10664   0007FC  EF02  F004         	goto	u8751
 10665   000800  EF04  F004         	goto	u8750
 10666   000804                     u8751:
 10667   000804  EF2D  F004         	goto	l7318
 10668   000808                     u8750:
 10669   000808                     
 10670                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10671   000808  0100               	movlb	0	; () banked
 10672   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10673   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10674   00080E                     
 10675                           ; BSR set to: 0
 10676                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10677   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10678   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10679   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10680   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10681   00081E  0E00               	movlw	0
 10682   000820  6E18               	movwf	___flmul@a^0,c
 10683   000822  0E00               	movlw	0
 10684   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10685   000826  0E20               	movlw	32
 10686   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10687   00082A  0E41               	movlw	65
 10688   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10689   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10690   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10691   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10692   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10693   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10694   000842                     
 10695                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10696   000842  0E66               	movlw	102
 10697   000844  0100               	movlb	0	; () banked
 10698   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10699   000848  A4D8               	btfss	status,2,c
 10700   00084A  EF29  F004         	goto	u8761
 10701   00084E  EF2B  F004         	goto	u8760
 10702   000852                     u8761:
 10703   000852  EF2D  F004         	goto	l7318
 10704   000856                     u8760:
 10705   000856                     
 10706                           ; BSR set to: 0
 10707                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10708   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10709   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10710   00085A                     l7318:
 10711                           
 10712                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10713   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10714   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10715   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10716   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10717   00086A                     
 10718                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10719   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10720   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10721   000872                     
 10722                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10723   000872  0E00               	movlw	0
 10724   000874  0100               	movlb	0	; () banked
 10725   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10726   000878                     
 10727                           ; BSR set to: 0
 10728                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10729   000878  0E00               	movlw	0
 10730   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10731   00087C  0E00               	movlw	0
 10732   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10733   000880                     
 10734                           ; BSR set to: 0
 10735                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10736   000880  0E00               	movlw	0
 10737   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10738   000884  0E00               	movlw	0
 10739   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10740                           
 10741                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10742   000888  EF2B  F005         	goto	l7368
 10743   00088C                     l7328:
 10744                           
 10745                           ; BSR set to: 0
 10746                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10747   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10748   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10749   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10750   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10751   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10752   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10753   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10754   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10755   0008AC  EC10  F015         	call	___fldiv	;wreg free
 10756   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10757   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10758   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10759   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10760   0008C0  EC6A  F019         	call	_floorf	;wreg free
 10761   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10762   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10763   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10764   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10765                           
 10766                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10767   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10768   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10769   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10770   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10771   0008E4  EC7C  F021         	call	___fltol	;wreg free
 10772   0008E8  0100               	movlb	0	; () banked
 10773   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10774   0008EC  EF83  F004         	goto	u8770
 10775   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10776   0008F2  E107               	bnz	u8771
 10777   0008F4  0E0A               	movlw	10
 10778   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10779   0008F8  B0D8               	btfsc	status,0,c
 10780   0008FA  EF81  F004         	goto	u8771
 10781   0008FE  EF83  F004         	goto	u8770
 10782   000902                     u8771:
 10783   000902  EF93  F004         	goto	l7332
 10784   000906                     u8770:
 10785   000906                     
 10786                           ; BSR set to: 0
 10787   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10788   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10789   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10790   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10791   000916  EC7C  F021         	call	___fltol	;wreg free
 10792   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10793   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10794   000922  EF97  F004         	goto	l1485
 10795   000926                     l7332:
 10796                           
 10797                           ; BSR set to: 0
 10798   000926  0E00               	movlw	0
 10799   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10800   00092A  0E09               	movlw	9
 10801   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10802   00092E                     l1485:
 10803                           
 10804                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10805   00092E  0100               	movlb	0	; () banked
 10806   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10807   000932  A4D8               	btfss	status,2,c
 10808   000934  EF9E  F004         	goto	u8781
 10809   000938  EFA0  F004         	goto	u8780
 10810   00093C                     u8781:
 10811   00093C  EFC8  F004         	goto	l7352
 10812   000940                     u8780:
 10813   000940                     
 10814                           ; BSR set to: 0
 10815   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10816   000942  EFA7  F004         	goto	u8790
 10817   000946  EFA5  F004         	goto	u8791
 10818   00094A                     u8791:
 10819   00094A  EFC8  F004         	goto	l7352
 10820   00094E                     u8790:
 10821   00094E                     
 10822                           ; BSR set to: 0
 10823                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10824   00094E  0E27               	movlw	low _dbuf
 10825   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10826   000952  6ED9               	movwf	fsr2l,c
 10827   000954  0E01               	movlw	high _dbuf
 10828   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10829   000958  6EDA               	movwf	fsr2h,c
 10830   00095A  0E2E               	movlw	46
 10831   00095C  6EDF               	movwf	indf2,c
 10832   00095E                     
 10833                           ; BSR set to: 0
 10834   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10835   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10836   000962                     
 10837                           ; BSR set to: 0
 10838                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10839   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10840   000964  A0D8               	btfss	status,0,c
 10841   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10842   000968                     
 10843                           ; BSR set to: 0
 10844                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10845   000968  0E01               	movlw	1
 10846   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10847   00096C  EFC8  F004         	goto	l7352
 10848   000970                     l7344:
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10852   000970  0E27               	movlw	low _dbuf
 10853   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10854   000974  6ED9               	movwf	fsr2l,c
 10855   000976  0E01               	movlw	high _dbuf
 10856   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10857   00097A  6EDA               	movwf	fsr2h,c
 10858   00097C  0E30               	movlw	48
 10859   00097E  6EDF               	movwf	indf2,c
 10860   000980                     
 10861                           ; BSR set to: 0
 10862   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10863   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10864   000984                     
 10865                           ; BSR set to: 0
 10866                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10867   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10868   000986  A0D8               	btfss	status,0,c
 10869   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10870   00098A                     
 10871                           ; BSR set to: 0
 10872                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10873   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10874   00098C  A0D8               	btfss	status,0,c
 10875   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10876   000990                     l7352:
 10877                           
 10878                           ; BSR set to: 0
 10879                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10880   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10881   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10882   000994  A4D8               	btfss	status,2,c
 10883   000996  EFCF  F004         	goto	u8801
 10884   00099A  EFD1  F004         	goto	u8800
 10885   00099E                     u8801:
 10886   00099E  EFB8  F004         	goto	l7344
 10887   0009A2                     u8800:
 10888   0009A2                     
 10889                           ; BSR set to: 0
 10890                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10891   0009A2  0E27               	movlw	low _dbuf
 10892   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10893   0009A6  6ED9               	movwf	fsr2l,c
 10894   0009A8  0E01               	movlw	high _dbuf
 10895   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10896   0009AC  6EDA               	movwf	fsr2h,c
 10897   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10898   0009B0  0F30               	addlw	48
 10899   0009B2  6EDF               	movwf	indf2,c
 10900   0009B4                     
 10901                           ; BSR set to: 0
 10902   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10903   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10904   0009B8                     
 10905                           ; BSR set to: 0
 10906                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10907   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10908   0009BA  A0D8               	btfss	status,0,c
 10909   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10910   0009BE                     
 10911                           ; BSR set to: 0
 10912                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10913   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10914   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10915   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10916   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10917   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10918   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10919   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10920   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10921   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10922   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10923   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10924   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10925   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10926   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10927   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10928   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10929   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10930   000A02  EC01  F028         	call	___flsub	;wreg free
 10931   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10932   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10933   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10934   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10935   000A16                     
 10936                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10937   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10938   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10939   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10940   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10941   000A26  0E00               	movlw	0
 10942   000A28  6E31               	movwf	___fldiv@a^0,c
 10943   000A2A  0E00               	movlw	0
 10944   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10945   000A2E  0E20               	movlw	32
 10946   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10947   000A32  0E41               	movlw	65
 10948   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10949   000A36  EC10  F015         	call	___fldiv	;wreg free
 10950   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10951   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10952   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10953   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10954   000A4A                     
 10955                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10956   000A4A  0100               	movlb	0	; () banked
 10957   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10958   000A4E  A0D8               	btfss	status,0,c
 10959   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10960   000A52                     
 10961                           ; BSR set to: 0
 10962                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10963   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10964   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10965   000A56                     l7368:
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10969   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10970   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10971   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10972   000A5C  0A80               	xorlw	128
 10973   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10974   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10975   000A62  0A80               	xorlw	128
 10976   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10977   000A66  B0D8               	btfsc	status,0,c
 10978   000A68  EF38  F005         	goto	u8811
 10979   000A6C  EF3A  F005         	goto	u8810
 10980   000A70                     u8811:
 10981   000A70  EF48  F005         	goto	l7372
 10982   000A74                     u8810:
 10983   000A74                     
 10984                           ; BSR set to: 0
 10985   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10986   000A76  EF46  F005         	goto	u8821
 10987   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10988   000A7C  E109               	bnz	u8820
 10989   000A7E  0E4B               	movlw	75
 10990   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10991   000A82  A0D8               	btfss	status,0,c
 10992   000A84  EF46  F005         	goto	u8821
 10993   000A88  EF48  F005         	goto	u8820
 10994   000A8C                     u8821:
 10995   000A8C  EF46  F004         	goto	l7328
 10996   000A90                     u8820:
 10997   000A90                     l7372:
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 11001   000A90  0E00               	movlw	0
 11002   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 11003   000A94  0E4F               	movlw	79
 11004   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 11005   000A98                     
 11006                           ; BSR set to: 0
 11007                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 11008   000A98  0E27               	movlw	low _dbuf
 11009   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 11010   000A9C  6ED9               	movwf	fsr2l,c
 11011   000A9E  0E01               	movlw	high _dbuf
 11012   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 11013   000AA2  6EDA               	movwf	fsr2h,c
 11014   000AA4  6ADF               	clrf	indf2,c
 11015   000AA6                     
 11016                           ; BSR set to: 0
 11017                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 11018   000AA6  0E27               	movlw	low _dbuf
 11019   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 11020   000AAA  0E01               	movlw	high _dbuf
 11021   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 11022   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 11023   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 11024   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 11025   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 11026   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 11027   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 11028   000ABA  6E06               	movwf	memcpy@d1^0,c
 11029   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 11030   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 11031   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 11032   000AC2  0E27               	movlw	low _dbuf
 11033   000AC4  6E08               	movwf	memcpy@s1^0,c
 11034   000AC6  0E01               	movlw	high _dbuf
 11035   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 11036   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 11037   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 11038   000AD2  ECB4  F027         	call	_memcpy	;wreg free
 11039   000AD6                     
 11040                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11041   000AD6  0100               	movlb	0	; () banked
 11042   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 11043   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 11044   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 11045   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 11046   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 11047   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 11048   000AE4                     
 11049                           ; BSR set to: 0
 11050                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 11051   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 11052   000AE6  A4D8               	btfss	status,2,c
 11053   000AE8  EF78  F005         	goto	u8831
 11054   000AEC  EF7B  F005         	goto	u8830
 11055   000AF0                     u8831:
 11056   000AF0  0E01               	movlw	1
 11057   000AF2  EF7C  F005         	goto	u8840
 11058   000AF6                     u8830:
 11059   000AF6  0E00               	movlw	0
 11060   000AF8                     u8840:
 11061   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 11062   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 11063   000AFC                     
 11064                           ; BSR set to: 0
 11065                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11066   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 11067   000AFE  B4D8               	btfsc	status,2,c
 11068   000B00  EF84  F005         	goto	u8851
 11069   000B04  EF86  F005         	goto	u8850
 11070   000B08                     u8851:
 11071   000B08  EF91  F005         	goto	l7386
 11072   000B0C                     u8850:
 11073   000B0C                     
 11074                           ; BSR set to: 0
 11075                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 11076   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 11077   000B0E  A0D8               	btfss	status,0,c
 11078   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 11079   000B12  0E27               	movlw	low _dbuf
 11080   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 11081   000B16  6ED9               	movwf	fsr2l,c
 11082   000B18  0E01               	movlw	high _dbuf
 11083   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11084   000B1C  6EDA               	movwf	fsr2h,c
 11085   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 11086   000B22                     l7386:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11090   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 11091   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 11092   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 11093   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 11094   000B2A                     
 11095                           ; BSR set to: 0
 11096                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 11097   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 11098   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 11099   000B32  0E27               	movlw	low _dbuf
 11100   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 11101   000B36  6E19               	movwf	pad@buf^0,c
 11102   000B38  0E01               	movlw	high _dbuf
 11103   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11104   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 11105   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 11106   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 11107   000B46  EC0A  F026         	call	_pad	;wreg free
 11108   000B4A                     l1452:
 11109   000B4A  0012               	return		;funcret
 11110   000B4C                     __end_of_efgtoa:
 11111                           	callstack 0
 11112                           
 11113 ;; *************** function _strcpy *****************
 11114 ;; Defined at:
 11115 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;  dest            2    5[COMRAM] PTR unsigned char 
 11118 ;;		 -> dbuf(80), 
 11119 ;;  src             2    7[COMRAM] PTR const unsigned char 
 11120 ;;		 -> STR_43(4), STR_40(4), 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;  d               2    9[COMRAM] PTR unsigned char 
 11123 ;;		 -> dbuf(80), 
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  2    5[COMRAM] PTR unsigned char 
 11126 ;; Registers used:
 11127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;Total ram usage:        6 bytes
 11138 ;; Hardware stack levels used: 1
 11139 ;; Hardware stack levels required when called: 1
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_efgtoa
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text37
 11148   00514C                     __ptext37:
 11149                           	callstack 0
 11150   00514C                     _strcpy:
 11151                           	callstack 24
 11152   00514C  C006  F00A         	movff	strcpy@dest,strcpy@d
 11153   005150  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 11154   005154                     l7076:
 11155   005154  C008  FFF6         	movff	strcpy@src,tblptrl
 11156   005158  C009  FFF7         	movff	strcpy@src+1,tblptrh
 11157   00515C  4A08               	infsnz	strcpy@src^0,f,c
 11158   00515E  2A09               	incf	(strcpy@src+1)^0,f,c
 11159   005160                     	if	0	;tblptru may be non-zero
 11160   005160                     	endif
 11161   005160                     	if	0	;tblptru may be non-zero
 11162   005160                     	endif
 11163   005160  C00A  FFD9         	movff	strcpy@d,fsr2l
 11164   005164  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 11165   005168  4A0A               	infsnz	strcpy@d^0,f,c
 11166   00516A  2A0B               	incf	(strcpy@d+1)^0,f,c
 11167   00516C  0008               	tblrd		*
 11168   00516E  CFF5 FFDF          	movff	tablat,indf2
 11169   005172  50DF               	movf	indf2,w,c
 11170   005174  A4D8               	btfss	status,2,c
 11171   005176  EFBF  F028         	goto	u8321
 11172   00517A  EFC1  F028         	goto	u8320
 11173   00517E                     u8321:
 11174   00517E  EFAA  F028         	goto	l7076
 11175   005182                     u8320:
 11176   005182  0012               	return		;funcret
 11177   005184                     __end_of_strcpy:
 11178                           	callstack 0
 11179                           
 11180 ;; *************** function _memcpy *****************
 11181 ;; Defined at:
 11182 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  d1              2    5[COMRAM] PTR void 
 11185 ;;		 -> dbuf(80), 
 11186 ;;  s1              2    7[COMRAM] PTR const void 
 11187 ;;		 -> dbuf(80), 
 11188 ;;  n               2    9[COMRAM] unsigned int 
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;  s               2   14[COMRAM] PTR const unsigned char 
 11191 ;;		 -> dbuf(80), 
 11192 ;;  d               2   12[COMRAM] PTR unsigned char 
 11193 ;;		 -> dbuf(80), 
 11194 ;;  tmp             1   11[COMRAM] unsigned char 
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  2    5[COMRAM] PTR void 
 11197 ;; Registers used:
 11198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11204 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11207 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11208 ;;Total ram usage:       11 bytes
 11209 ;; Hardware stack levels used: 1
 11210 ;; Hardware stack levels required when called: 1
 11211 ;; This function calls:
 11212 ;;		Nothing
 11213 ;; This function is called by:
 11214 ;;		_efgtoa
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text38
 11219   004F68                     __ptext38:
 11220                           	callstack 0
 11221   004F68                     _memcpy:
 11222                           	callstack 24
 11223   004F68  C008  F00F         	movff	memcpy@s1,memcpy@s
 11224   004F6C  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 11225   004F70  C006  F00D         	movff	memcpy@d1,memcpy@d
 11226   004F74  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 11227   004F78  EFCE  F027         	goto	l7124
 11228   004F7C                     l7116:
 11229   004F7C  C00F  FFD9         	movff	memcpy@s,fsr2l
 11230   004F80  C010  FFDA         	movff	memcpy@s+1,fsr2h
 11231   004F84  50DF               	movf	indf2,w,c
 11232   004F86  6E0C               	movwf	memcpy@tmp^0,c
 11233   004F88  4A0F               	infsnz	memcpy@s^0,f,c
 11234   004F8A  2A10               	incf	(memcpy@s+1)^0,f,c
 11235   004F8C  C00D  FFD9         	movff	memcpy@d,fsr2l
 11236   004F90  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 11237   004F94  C00C  FFDF         	movff	memcpy@tmp,indf2
 11238   004F98  4A0D               	infsnz	memcpy@d^0,f,c
 11239   004F9A  2A0E               	incf	(memcpy@d+1)^0,f,c
 11240   004F9C                     l7124:
 11241   004F9C  060A               	decf	memcpy@n^0,f,c
 11242   004F9E  A0D8               	btfss	status,0,c
 11243   004FA0  060B               	decf	(memcpy@n+1)^0,f,c
 11244   004FA2  280A               	incf	memcpy@n^0,w,c
 11245   004FA4  E106               	bnz	u8441
 11246   004FA6  280B               	incf	(memcpy@n+1)^0,w,c
 11247   004FA8  A4D8               	btfss	status,2,c
 11248   004FAA  EFD9  F027         	goto	u8441
 11249   004FAE  EFDB  F027         	goto	u8440
 11250   004FB2                     u8441:
 11251   004FB2  EFBE  F027         	goto	l7116
 11252   004FB6                     u8440:
 11253   004FB6  0012               	return		;funcret
 11254   004FB8                     __end_of_memcpy:
 11255                           	callstack 0
 11256                           
 11257 ;; *************** function _labs *****************
 11258 ;; Defined at:
 11259 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;  a               4    5[COMRAM] long 
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  4    5[COMRAM] long 
 11266 ;; Registers used:
 11267 ;;		wreg, status,2, status,0
 11268 ;; Tracked objects:
 11269 ;;		On entry : 0/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;Total ram usage:        8 bytes
 11278 ;; Hardware stack levels used: 1
 11279 ;; Hardware stack levels required when called: 1
 11280 ;; This function calls:
 11281 ;;		Nothing
 11282 ;; This function is called by:
 11283 ;;		_efgtoa
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text39
 11288   004EBE                     __ptext39:
 11289                           	callstack 0
 11290   004EBE                     _labs:
 11291                           	callstack 24
 11292   004EBE  BE09               	btfsc	(labs@a+3)^0,7,c
 11293   004EC0  EF64  F027         	goto	u8331
 11294   004EC4  EF66  F027         	goto	u8330
 11295   004EC8                     u8331:
 11296   004EC8  EF70  F027         	goto	l7082
 11297   004ECC                     u8330:
 11298   004ECC  C006  F006         	movff	labs@a,?_labs
 11299   004ED0  C007  F007         	movff	labs@a+1,?_labs+1
 11300   004ED4  C008  F008         	movff	labs@a+2,?_labs+2
 11301   004ED8  C009  F009         	movff	labs@a+3,?_labs+3
 11302   004EDC  EF89  F027         	goto	l1634
 11303   004EE0                     l7082:
 11304   004EE0  C006  F00A         	movff	labs@a,??_labs
 11305   004EE4  C007  F00B         	movff	labs@a+1,??_labs+1
 11306   004EE8  C008  F00C         	movff	labs@a+2,??_labs+2
 11307   004EEC  C009  F00D         	movff	labs@a+3,??_labs+3
 11308   004EF0  1E0A               	comf	??_labs^0,f,c
 11309   004EF2  1E0B               	comf	(??_labs+1)^0,f,c
 11310   004EF4  1E0C               	comf	(??_labs+2)^0,f,c
 11311   004EF6  1E0D               	comf	(??_labs+3)^0,f,c
 11312   004EF8  2A0A               	incf	??_labs^0,f,c
 11313   004EFA  0E00               	movlw	0
 11314   004EFC  220B               	addwfc	(??_labs+1)^0,f,c
 11315   004EFE  220C               	addwfc	(??_labs+2)^0,f,c
 11316   004F00  220D               	addwfc	(??_labs+3)^0,f,c
 11317   004F02  C00A  F006         	movff	??_labs,?_labs
 11318   004F06  C00B  F007         	movff	??_labs+1,?_labs+1
 11319   004F0A  C00C  F008         	movff	??_labs+2,?_labs+2
 11320   004F0E  C00D  F009         	movff	??_labs+3,?_labs+3
 11321   004F12                     l1634:
 11322   004F12  0012               	return		;funcret
 11323   004F14                     __end_of_labs:
 11324                           	callstack 0
 11325                           
 11326 ;; *************** function _floorf *****************
 11327 ;; Defined at:
 11328 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  x               4   69[COMRAM] float 
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;  u               4    6[BANK0 ] struct .
 11333 ;;  m               4    0[BANK0 ] unsigned long 
 11334 ;;  e               2    4[BANK0 ] int 
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  4   69[COMRAM] float 
 11337 ;; Registers used:
 11338 ;;		wreg, status,2, status,0
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11345 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11346 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;Total ram usage:       20 bytes
 11349 ;; Hardware stack levels used: 1
 11350 ;; Hardware stack levels required when called: 1
 11351 ;; This function calls:
 11352 ;;		Nothing
 11353 ;; This function is called by:
 11354 ;;		_efgtoa
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text40
 11359   0032D4                     __ptext40:
 11360                           	callstack 0
 11361   0032D4                     _floorf:
 11362                           	callstack 24
 11363   0032D4  C119  F066         	movff	floorf@F521,floorf@u
 11364   0032D8  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11365   0032DC  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11366   0032E0  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11367   0032E4  C046  F066         	movff	floorf@x,floorf@u
 11368   0032E8  C047  F067         	movff	floorf@x+1,floorf@u+1
 11369   0032EC  C048  F068         	movff	floorf@x+2,floorf@u+2
 11370   0032F0  C049  F069         	movff	floorf@x+3,floorf@u+3
 11371   0032F4  0E81               	movlw	129
 11372   0032F6  6E4A               	movwf	??_floorf^0,c
 11373   0032F8  0EFF               	movlw	255
 11374   0032FA  6E4B               	movwf	(??_floorf+1)^0,c
 11375   0032FC  C066  F04C         	movff	floorf@u,??_floorf+2
 11376   003300  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11377   003304  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11378   003308  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11379   00330C  0E18               	movlw	24
 11380   00330E  EF8E  F019         	goto	u8340
 11381   003312                     u8345:
 11382   003312  90D8               	bcf	status,0,c
 11383   003314  324F               	rrcf	(??_floorf+5)^0,f,c
 11384   003316  324E               	rrcf	(??_floorf+4)^0,f,c
 11385   003318  324D               	rrcf	(??_floorf+3)^0,f,c
 11386   00331A  324C               	rrcf	(??_floorf+2)^0,f,c
 11387   00331C                     u8340:
 11388   00331C  2EE8               	decfsz	wreg,f,c
 11389   00331E  EF89  F019         	goto	u8345
 11390   003322  504C               	movf	(??_floorf+2)^0,w,c
 11391   003324  244A               	addwf	??_floorf^0,w,c
 11392   003326  0100               	movlb	0	; () banked
 11393   003328  6F64               	movwf	floorf@e& (0+255),b
 11394   00332A  0E00               	movlw	0
 11395   00332C  204B               	addwfc	(??_floorf+1)^0,w,c
 11396   00332E  6F65               	movwf	(floorf@e+1)& (0+255),b
 11397   003330  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11398   003332  EFA4  F019         	goto	u8351
 11399   003336  5165               	movf	(floorf@e+1)& (0+255),w,b
 11400   003338  E109               	bnz	u8350
 11401   00333A  0E17               	movlw	23
 11402   00333C  5D64               	subwf	floorf@e& (0+255),w,b
 11403   00333E  A0D8               	btfss	status,0,c
 11404   003340  EFA4  F019         	goto	u8351
 11405   003344  EFA6  F019         	goto	u8350
 11406   003348                     u8351:
 11407   003348  EFB0  F019         	goto	l7092
 11408   00334C                     u8350:
 11409   00334C                     l7090:
 11410                           
 11411                           ; BSR set to: 0
 11412   00334C  C046  F046         	movff	floorf@x,?_floorf
 11413   003350  C047  F047         	movff	floorf@x+1,?_floorf+1
 11414   003354  C048  F048         	movff	floorf@x+2,?_floorf+2
 11415   003358  C049  F049         	movff	floorf@x+3,?_floorf+3
 11416   00335C  EF74  F01A         	goto	l1620
 11417   003360                     l7092:
 11418                           
 11419                           ; BSR set to: 0
 11420   003360  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11421   003362  EFB5  F019         	goto	u8361
 11422   003366  EFB7  F019         	goto	u8360
 11423   00336A                     u8361:
 11424   00336A  EF28  F01A         	goto	l7102
 11425   00336E                     u8360:
 11426   00336E                     
 11427                           ; BSR set to: 0
 11428   00336E  C064  F04A         	movff	floorf@e,??_floorf
 11429   003372  0EFF               	movlw	255
 11430   003374  6E4B               	movwf	(??_floorf+1)^0,c
 11431   003376  0EFF               	movlw	255
 11432   003378  6E4C               	movwf	(??_floorf+2)^0,c
 11433   00337A  0E7F               	movlw	127
 11434   00337C  6E4D               	movwf	(??_floorf+3)^0,c
 11435   00337E  0E00               	movlw	0
 11436   003380  6E4E               	movwf	(??_floorf+4)^0,c
 11437   003382                     u8375:
 11438   003382  664A               	tstfsz	??_floorf^0,c
 11439   003384  EFC6  F019         	goto	u8376
 11440   003388  EFCE  F019         	goto	u8377
 11441   00338C                     u8376:
 11442   00338C  344E               	rlcf	(??_floorf+4)^0,w,c
 11443   00338E  324E               	rrcf	(??_floorf+4)^0,f,c
 11444   003390  324D               	rrcf	(??_floorf+3)^0,f,c
 11445   003392  324C               	rrcf	(??_floorf+2)^0,f,c
 11446   003394  324B               	rrcf	(??_floorf+1)^0,f,c
 11447   003396  2E4A               	decfsz	??_floorf^0,f,c
 11448   003398  EFC1  F019         	goto	u8375
 11449   00339C                     u8377:
 11450   00339C  C04B  F060         	movff	??_floorf+1,floorf@m
 11451   0033A0  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11452   0033A4  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11453   0033A8  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11454   0033AC  0100               	movlb	0	; () banked
 11455   0033AE  5160               	movf	floorf@m& (0+255),w,b
 11456   0033B0  1566               	andwf	floorf@u& (0+255),w,b
 11457   0033B2  6E4A               	movwf	??_floorf^0,c
 11458   0033B4  5161               	movf	(floorf@m+1)& (0+255),w,b
 11459   0033B6  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11460   0033B8  6E4B               	movwf	(??_floorf+1)^0,c
 11461   0033BA  5162               	movf	(floorf@m+2)& (0+255),w,b
 11462   0033BC  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11463   0033BE  6E4C               	movwf	(??_floorf+2)^0,c
 11464   0033C0  5163               	movf	(floorf@m+3)& (0+255),w,b
 11465   0033C2  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11466   0033C4  6E4D               	movwf	(??_floorf+3)^0,c
 11467   0033C6  504A               	movf	??_floorf^0,w,c
 11468   0033C8  104B               	iorwf	(??_floorf+1)^0,w,c
 11469   0033CA  104C               	iorwf	(??_floorf+2)^0,w,c
 11470   0033CC  104D               	iorwf	(??_floorf+3)^0,w,c
 11471   0033CE  A4D8               	btfss	status,2,c
 11472   0033D0  EFEC  F019         	goto	u8381
 11473   0033D4  EFEE  F019         	goto	u8380
 11474   0033D8                     u8381:
 11475   0033D8  EFF0  F019         	goto	l7098
 11476   0033DC                     u8380:
 11477   0033DC  EFA6  F019         	goto	l7090
 11478   0033E0                     l7098:
 11479                           
 11480                           ; BSR set to: 0
 11481   0033E0  C066  F04A         	movff	floorf@u,??_floorf
 11482   0033E4  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11483   0033E8  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11484   0033EC  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11485   0033F0  0E20               	movlw	32
 11486   0033F2  EF00  F01A         	goto	u8390
 11487   0033F6                     u8395:
 11488   0033F6  90D8               	bcf	status,0,c
 11489   0033F8  324D               	rrcf	(??_floorf+3)^0,f,c
 11490   0033FA  324C               	rrcf	(??_floorf+2)^0,f,c
 11491   0033FC  324B               	rrcf	(??_floorf+1)^0,f,c
 11492   0033FE  324A               	rrcf	??_floorf^0,f,c
 11493   003400                     u8390:
 11494   003400  2EE8               	decfsz	wreg,f,c
 11495   003402  EFFB  F019         	goto	u8395
 11496   003406  504A               	movf	??_floorf^0,w,c
 11497   003408  104B               	iorwf	(??_floorf+1)^0,w,c
 11498   00340A  104C               	iorwf	(??_floorf+2)^0,w,c
 11499   00340C  104D               	iorwf	(??_floorf+3)^0,w,c
 11500   00340E  B4D8               	btfsc	status,2,c
 11501   003410  EF0C  F01A         	goto	u8401
 11502   003414  EF0E  F01A         	goto	u8400
 11503   003418                     u8401:
 11504   003418  EF16  F01A         	goto	l1623
 11505   00341C                     u8400:
 11506   00341C                     
 11507                           ; BSR set to: 0
 11508   00341C  5160               	movf	floorf@m& (0+255),w,b
 11509   00341E  2766               	addwf	floorf@u& (0+255),f,b
 11510   003420  5161               	movf	(floorf@m+1)& (0+255),w,b
 11511   003422  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11512   003424  5162               	movf	(floorf@m+2)& (0+255),w,b
 11513   003426  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11514   003428  5163               	movf	(floorf@m+3)& (0+255),w,b
 11515   00342A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11516   00342C                     l1623:
 11517                           
 11518                           ; BSR set to: 0
 11519   00342C  1D60               	comf	floorf@m& (0+255),w,b
 11520   00342E  6E4A               	movwf	??_floorf^0,c
 11521   003430  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11522   003432  6E4B               	movwf	(??_floorf+1)^0,c
 11523   003434  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11524   003436  6E4C               	movwf	(??_floorf+2)^0,c
 11525   003438  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11526   00343A  6E4D               	movwf	(??_floorf+3)^0,c
 11527   00343C  504A               	movf	??_floorf^0,w,c
 11528   00343E  1766               	andwf	floorf@u& (0+255),f,b
 11529   003440  504B               	movf	(??_floorf+1)^0,w,c
 11530   003442  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11531   003444  504C               	movf	(??_floorf+2)^0,w,c
 11532   003446  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11533   003448  504D               	movf	(??_floorf+3)^0,w,c
 11534   00344A  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11535   00344C  EF6C  F01A         	goto	l7110
 11536   003450                     l7102:
 11537                           
 11538                           ; BSR set to: 0
 11539   003450  C066  F04A         	movff	floorf@u,??_floorf
 11540   003454  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11541   003458  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11542   00345C  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11543   003460  0E20               	movlw	32
 11544   003462  EF38  F01A         	goto	u8410
 11545   003466                     u8415:
 11546   003466  90D8               	bcf	status,0,c
 11547   003468  324D               	rrcf	(??_floorf+3)^0,f,c
 11548   00346A  324C               	rrcf	(??_floorf+2)^0,f,c
 11549   00346C  324B               	rrcf	(??_floorf+1)^0,f,c
 11550   00346E  324A               	rrcf	??_floorf^0,f,c
 11551   003470                     u8410:
 11552   003470  2EE8               	decfsz	wreg,f,c
 11553   003472  EF33  F01A         	goto	u8415
 11554   003476  504A               	movf	??_floorf^0,w,c
 11555   003478  104B               	iorwf	(??_floorf+1)^0,w,c
 11556   00347A  104C               	iorwf	(??_floorf+2)^0,w,c
 11557   00347C  104D               	iorwf	(??_floorf+3)^0,w,c
 11558   00347E  A4D8               	btfss	status,2,c
 11559   003480  EF44  F01A         	goto	u8421
 11560   003484  EF46  F01A         	goto	u8420
 11561   003488                     u8421:
 11562   003488  EF50  F01A         	goto	l7106
 11563   00348C                     u8420:
 11564   00348C                     
 11565                           ; BSR set to: 0
 11566   00348C  0E00               	movlw	0
 11567   00348E  6F66               	movwf	floorf@u& (0+255),b
 11568   003490  0E00               	movlw	0
 11569   003492  6F67               	movwf	(floorf@u+1)& (0+255),b
 11570   003494  0E00               	movlw	0
 11571   003496  6F68               	movwf	(floorf@u+2)& (0+255),b
 11572   003498  0E00               	movlw	0
 11573   00349A  6F69               	movwf	(floorf@u+3)& (0+255),b
 11574   00349C  EF6C  F01A         	goto	l7110
 11575   0034A0                     l7106:
 11576                           
 11577                           ; BSR set to: 0
 11578   0034A0  90D8               	bcf	status,0,c
 11579   0034A2  3566               	rlcf	floorf@u& (0+255),w,b
 11580   0034A4  6E4A               	movwf	??_floorf^0,c
 11581   0034A6  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11582   0034A8  6E4B               	movwf	(??_floorf+1)^0,c
 11583   0034AA  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11584   0034AC  6E4C               	movwf	(??_floorf+2)^0,c
 11585   0034AE  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11586   0034B0  6E4D               	movwf	(??_floorf+3)^0,c
 11587   0034B2  504A               	movf	??_floorf^0,w,c
 11588   0034B4  104B               	iorwf	(??_floorf+1)^0,w,c
 11589   0034B6  104C               	iorwf	(??_floorf+2)^0,w,c
 11590   0034B8  104D               	iorwf	(??_floorf+3)^0,w,c
 11591   0034BA  B4D8               	btfsc	status,2,c
 11592   0034BC  EF62  F01A         	goto	u8431
 11593   0034C0  EF64  F01A         	goto	u8430
 11594   0034C4                     u8431:
 11595   0034C4  EF6C  F01A         	goto	l7110
 11596   0034C8                     u8430:
 11597   0034C8                     
 11598                           ; BSR set to: 0
 11599   0034C8  0E00               	movlw	0
 11600   0034CA  6F66               	movwf	floorf@u& (0+255),b
 11601   0034CC  0E00               	movlw	0
 11602   0034CE  6F67               	movwf	(floorf@u+1)& (0+255),b
 11603   0034D0  0E80               	movlw	128
 11604   0034D2  6F68               	movwf	(floorf@u+2)& (0+255),b
 11605   0034D4  0EBF               	movlw	191
 11606   0034D6  6F69               	movwf	(floorf@u+3)& (0+255),b
 11607   0034D8                     l7110:
 11608                           
 11609                           ; BSR set to: 0
 11610   0034D8  C066  F046         	movff	floorf@u,?_floorf
 11611   0034DC  C067  F047         	movff	floorf@u+1,?_floorf+1
 11612   0034E0  C068  F048         	movff	floorf@u+2,?_floorf+2
 11613   0034E4  C069  F049         	movff	floorf@u+3,?_floorf+3
 11614   0034E8                     l1620:
 11615                           
 11616                           ; BSR set to: 0
 11617   0034E8  0012               	return		;funcret
 11618   0034EA                     __end_of_floorf:
 11619                           	callstack 0
 11620                           
 11621 ;; *************** function ___fpclassifyf *****************
 11622 ;; Defined at:
 11623 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;  x               4    5[COMRAM] float 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  u               4   15[COMRAM] struct .
 11628 ;;  e               2   13[COMRAM] int 
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  2    5[COMRAM] int 
 11631 ;; Registers used:
 11632 ;;		wreg, status,2, status,0
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11641 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11642 ;;Total ram usage:       14 bytes
 11643 ;; Hardware stack levels used: 1
 11644 ;; Hardware stack levels required when called: 1
 11645 ;; This function calls:
 11646 ;;		Nothing
 11647 ;; This function is called by:
 11648 ;;		_efgtoa
 11649 ;; This function uses a non-reentrant model
 11650 ;;
 11651                           
 11652                           	psect	text41
 11653   004504                     __ptext41:
 11654                           	callstack 0
 11655   004504                     ___fpclassifyf:
 11656                           	callstack 24
 11657   004504  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11658   004508  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11659   00450C  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11660   004510  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11661   004514  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11662   004518  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11663   00451C  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11664   004520  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11665   004524  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11666   004528  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11667   00452C  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11668   004530  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11669   004534  0E18               	movlw	24
 11670   004536  EFA2  F022         	goto	u8250
 11671   00453A                     u8255:
 11672   00453A  90D8               	bcf	status,0,c
 11673   00453C  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11674   00453E  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11675   004540  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11676   004542  320A               	rrcf	??___fpclassifyf^0,f,c
 11677   004544                     u8250:
 11678   004544  2EE8               	decfsz	wreg,f,c
 11679   004546  EF9D  F022         	goto	u8255
 11680   00454A  500A               	movf	??___fpclassifyf^0,w,c
 11681   00454C  6E0E               	movwf	___fpclassifyf@e^0,c
 11682   00454E  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11683   004550  500E               	movf	___fpclassifyf@e^0,w,c
 11684   004552  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11685   004554  A4D8               	btfss	status,2,c
 11686   004556  EFAF  F022         	goto	u8261
 11687   00455A  EFB1  F022         	goto	u8260
 11688   00455E                     u8261:
 11689   00455E  EFD1  F022         	goto	l7064
 11690   004562                     u8260:
 11691   004562  90D8               	bcf	status,0,c
 11692   004564  3410               	rlcf	___fpclassifyf@u^0,w,c
 11693   004566  6E0A               	movwf	??___fpclassifyf^0,c
 11694   004568  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11695   00456A  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11696   00456C  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11697   00456E  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11698   004570  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11699   004572  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11700   004574  500A               	movf	??___fpclassifyf^0,w,c
 11701   004576  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11702   004578  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11703   00457A  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11704   00457C  A4D8               	btfss	status,2,c
 11705   00457E  EFC3  F022         	goto	u8271
 11706   004582  EFC5  F022         	goto	u8270
 11707   004586                     u8271:
 11708   004586  EFCB  F022         	goto	l7060
 11709   00458A                     u8270:
 11710   00458A  0E00               	movlw	0
 11711   00458C  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11712   00458E  0E02               	movlw	2
 11713   004590  6E06               	movwf	?___fpclassifyf^0,c
 11714   004592  EF00  F023         	goto	l1606
 11715   004596                     l7060:
 11716   004596  0E00               	movlw	0
 11717   004598  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11718   00459A  0E03               	movlw	3
 11719   00459C  6E06               	movwf	?___fpclassifyf^0,c
 11720   00459E  EF00  F023         	goto	l1606
 11721   0045A2                     l7064:
 11722   0045A2  280E               	incf	___fpclassifyf@e^0,w,c
 11723   0045A4  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11724   0045A6  A4D8               	btfss	status,2,c
 11725   0045A8  EFD8  F022         	goto	u8281
 11726   0045AC  EFDA  F022         	goto	u8280
 11727   0045B0                     u8281:
 11728   0045B0  EFFC  F022         	goto	l7070
 11729   0045B4                     u8280:
 11730   0045B4  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11731   0045B8  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11732   0045BC  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11733   0045C0  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11734   0045C4  0E09               	movlw	9
 11735   0045C6                     u8295:
 11736   0045C6  90D8               	bcf	status,0,c
 11737   0045C8  360A               	rlcf	??___fpclassifyf^0,f,c
 11738   0045CA  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11739   0045CC  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11740   0045CE  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11741   0045D0  2EE8               	decfsz	wreg,f,c
 11742   0045D2  EFE3  F022         	goto	u8295
 11743   0045D6  500A               	movf	??___fpclassifyf^0,w,c
 11744   0045D8  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11745   0045DA  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11746   0045DC  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11747   0045DE  B4D8               	btfsc	status,2,c
 11748   0045E0  EFF4  F022         	goto	u8301
 11749   0045E4  EFF7  F022         	goto	u8300
 11750   0045E8                     u8301:
 11751   0045E8  0E01               	movlw	1
 11752   0045EA  EFF8  F022         	goto	u8310
 11753   0045EE                     u8300:
 11754   0045EE  0E00               	movlw	0
 11755   0045F0                     u8310:
 11756   0045F0  6E06               	movwf	?___fpclassifyf^0,c
 11757   0045F2  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11758   0045F4  EF00  F023         	goto	l1606
 11759   0045F8                     l7070:
 11760   0045F8  0E00               	movlw	0
 11761   0045FA  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11762   0045FC  0E04               	movlw	4
 11763   0045FE  6E06               	movwf	?___fpclassifyf^0,c
 11764   004600                     l1606:
 11765   004600  0012               	return		;funcret
 11766   004602                     __end_of___fpclassifyf:
 11767                           	callstack 0
 11768                           
 11769 ;; *************** function ___fltol *****************
 11770 ;; Defined at:
 11771 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;  f1              4    4[BANK0 ] int 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  exp1            1   82[COMRAM] unsigned char 
 11776 ;;  sign1           1   81[COMRAM] unsigned char 
 11777 ;; Return value:  Size  Location     Type
 11778 ;;                  4    4[BANK0 ] long 
 11779 ;; Registers used:
 11780 ;;		wreg, status,2, status,0
 11781 ;; Tracked objects:
 11782 ;;		On entry : 0/0
 11783 ;;		On exit  : 0/0
 11784 ;;		Unchanged: 0/0
 11785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;Total ram usage:       10 bytes
 11791 ;; Hardware stack levels used: 1
 11792 ;; Hardware stack levels required when called: 1
 11793 ;; This function calls:
 11794 ;;		Nothing
 11795 ;; This function is called by:
 11796 ;;		_runDAC
 11797 ;;		_efgtoa
 11798 ;;		___rem_pio2f
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           	psect	text42
 11803   0042F8                     __ptext42:
 11804                           	callstack 0
 11805   0042F8                     ___fltol:
 11806                           	callstack 24
 11807   0042F8  0100               	movlb	0	; () banked
 11808   0042FA  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11809   0042FC  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11810   0042FE  6E53               	movwf	___fltol@exp1^0,c
 11811   004300  5053               	movf	___fltol@exp1^0,w,c
 11812   004302  A4D8               	btfss	status,2,c
 11813   004304  EF86  F021         	goto	u8071
 11814   004308  EF88  F021         	goto	u8070
 11815   00430C                     u8071:
 11816   00430C  EF92  F021         	goto	l6956
 11817   004310                     u8070:
 11818   004310                     l6952:
 11819                           
 11820                           ; BSR set to: 0
 11821   004310  0E00               	movlw	0
 11822   004312  6F64               	movwf	?___fltol& (0+255),b
 11823   004314  0E00               	movlw	0
 11824   004316  6F65               	movwf	(?___fltol+1)& (0+255),b
 11825   004318  0E00               	movlw	0
 11826   00431A  6F66               	movwf	(?___fltol+2)& (0+255),b
 11827   00431C  0E00               	movlw	0
 11828   00431E  6F67               	movwf	(?___fltol+3)& (0+255),b
 11829   004320  EFFF  F021         	goto	l1007
 11830   004324                     l6956:
 11831                           
 11832                           ; BSR set to: 0
 11833   004324  C064  F068         	movff	___fltol@f1,??___fltol
 11834   004328  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11835   00432C  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11836   004330  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11837   004334  0E20               	movlw	32
 11838   004336  EFA2  F021         	goto	u8080
 11839   00433A                     u8085:
 11840   00433A  90D8               	bcf	status,0,c
 11841   00433C  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11842   00433E  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11843   004340  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11844   004342  3368               	rrcf	??___fltol& (0+255),f,b
 11845   004344                     u8080:
 11846   004344  2EE8               	decfsz	wreg,f,c
 11847   004346  EF9D  F021         	goto	u8085
 11848   00434A  5168               	movf	??___fltol& (0+255),w,b
 11849   00434C  6E52               	movwf	___fltol@sign1^0,c
 11850   00434E                     
 11851                           ; BSR set to: 0
 11852   00434E  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11853   004350                     
 11854                           ; BSR set to: 0
 11855   004350  0EFF               	movlw	255
 11856   004352  1764               	andwf	___fltol@f1& (0+255),f,b
 11857   004354  0EFF               	movlw	255
 11858   004356  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11859   004358  0EFF               	movlw	255
 11860   00435A  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11861   00435C  0E00               	movlw	0
 11862   00435E  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11863   004360                     
 11864                           ; BSR set to: 0
 11865   004360  0E96               	movlw	150
 11866   004362  5E53               	subwf	___fltol@exp1^0,f,c
 11867   004364                     
 11868                           ; BSR set to: 0
 11869   004364  BE53               	btfsc	___fltol@exp1^0,7,c
 11870   004366  EFB9  F021         	goto	u8090
 11871   00436A  EFB7  F021         	goto	u8091
 11872   00436E                     u8091:
 11873   00436E  EFCF  F021         	goto	l6976
 11874   004372                     u8090:
 11875   004372                     
 11876                           ; BSR set to: 0
 11877   004372  5053               	movf	___fltol@exp1^0,w,c
 11878   004374  0A80               	xorlw	128
 11879   004376  0F97               	addlw	151
 11880   004378  B0D8               	btfsc	status,0,c
 11881   00437A  EFC1  F021         	goto	u8101
 11882   00437E  EFC3  F021         	goto	u8100
 11883   004382                     u8101:
 11884   004382  EFC5  F021         	goto	l6972
 11885   004386                     u8100:
 11886   004386  EF88  F021         	goto	l6952
 11887   00438A                     l6972:
 11888                           
 11889                           ; BSR set to: 0
 11890   00438A  90D8               	bcf	status,0,c
 11891   00438C  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11892   00438E  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11893   004390  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11894   004392  3364               	rrcf	___fltol@f1& (0+255),f,b
 11895   004394                     
 11896                           ; BSR set to: 0
 11897   004394  3E53               	incfsz	___fltol@exp1^0,f,c
 11898   004396  EFC5  F021         	goto	l6972
 11899   00439A  EFE7  F021         	goto	l6986
 11900   00439E                     l6976:
 11901                           
 11902                           ; BSR set to: 0
 11903   00439E  0E1F               	movlw	31
 11904   0043A0  6453               	cpfsgt	___fltol@exp1^0,c
 11905   0043A2  EFD5  F021         	goto	u8111
 11906   0043A6  EFD7  F021         	goto	u8110
 11907   0043AA                     u8111:
 11908   0043AA  EFDF  F021         	goto	l6984
 11909   0043AE                     u8110:
 11910   0043AE  EF88  F021         	goto	l6952
 11911   0043B2                     l6982:
 11912                           
 11913                           ; BSR set to: 0
 11914   0043B2  90D8               	bcf	status,0,c
 11915   0043B4  3764               	rlcf	___fltol@f1& (0+255),f,b
 11916   0043B6  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11917   0043B8  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11918   0043BA  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11919   0043BC  0653               	decf	___fltol@exp1^0,f,c
 11920   0043BE                     l6984:
 11921                           
 11922                           ; BSR set to: 0
 11923   0043BE  5053               	movf	___fltol@exp1^0,w,c
 11924   0043C0  A4D8               	btfss	status,2,c
 11925   0043C2  EFE5  F021         	goto	u8121
 11926   0043C6  EFE7  F021         	goto	u8120
 11927   0043CA                     u8121:
 11928   0043CA  EFD9  F021         	goto	l6982
 11929   0043CE                     u8120:
 11930   0043CE                     l6986:
 11931                           
 11932                           ; BSR set to: 0
 11933   0043CE  5052               	movf	___fltol@sign1^0,w,c
 11934   0043D0  B4D8               	btfsc	status,2,c
 11935   0043D2  EFED  F021         	goto	u8131
 11936   0043D6  EFEF  F021         	goto	u8130
 11937   0043DA                     u8131:
 11938   0043DA  EFF7  F021         	goto	l6990
 11939   0043DE                     u8130:
 11940   0043DE                     
 11941                           ; BSR set to: 0
 11942   0043DE  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11943   0043E0  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11944   0043E2  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11945   0043E4  6D64               	negf	___fltol@f1& (0+255),b
 11946   0043E6  0E00               	movlw	0
 11947   0043E8  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11948   0043EA  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11949   0043EC  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11950   0043EE                     l6990:
 11951                           
 11952                           ; BSR set to: 0
 11953   0043EE  C064  F064         	movff	___fltol@f1,?___fltol
 11954   0043F2  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11955   0043F6  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11956   0043FA  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11957   0043FE                     l1007:
 11958                           
 11959                           ; BSR set to: 0
 11960   0043FE  0012               	return		;funcret
 11961   004400                     __end_of___fltol:
 11962                           	callstack 0
 11963                           
 11964 ;; *************** function ___flsub *****************
 11965 ;; Defined at:
 11966 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  b               4    4[BANK0 ] long 
 11969 ;;  a               4    8[BANK0 ] long 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;		None
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  4    4[BANK0 ] long 
 11974 ;; Registers used:
 11975 ;;		wreg, status,2, status,0, cstack
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11981 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;Total ram usage:        8 bytes
 11986 ;; Hardware stack levels used: 1
 11987 ;; Hardware stack levels required when called: 2
 11988 ;; This function calls:
 11989 ;;		___fladd
 11990 ;; This function is called by:
 11991 ;;		_efgtoa
 11992 ;;		___rem_pio2f
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           	psect	text43
 11997   005002                     __ptext43:
 11998                           	callstack 0
 11999   005002                     ___flsub:
 12000                           	callstack 23
 12001   005002  0E00               	movlw	0
 12002   005004  0100               	movlb	0	; () banked
 12003   005006  1B68               	xorwf	___flsub@a& (0+255),f,b
 12004   005008  0E00               	movlw	0
 12005   00500A  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 12006   00500C  0E00               	movlw	0
 12007   00500E  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 12008   005010  0E80               	movlw	128
 12009   005012  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 12010   005014                     
 12011                           ; BSR set to: 0
 12012   005014  C064  F046         	movff	___flsub@b,___fladd@b
 12013   005018  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 12014   00501C  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 12015   005020  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 12016   005024  C068  F04A         	movff	___flsub@a,___fladd@a
 12017   005028  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 12018   00502C  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 12019   005030  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 12020   005034  ECD9  F00A         	call	___fladd	;wreg free
 12021   005038  C046  F064         	movff	?___fladd,?___flsub
 12022   00503C  C047  F065         	movff	?___fladd+1,?___flsub+1
 12023   005040  C048  F066         	movff	?___fladd+2,?___flsub+2
 12024   005044  C049  F067         	movff	?___fladd+3,?___flsub+3
 12025   005048  0012               	return		;funcret
 12026   00504A                     __end_of___flsub:
 12027                           	callstack 0
 12028                           
 12029 ;; *************** function ___fladd *****************
 12030 ;; Defined at:
 12031 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;  b               4   69[COMRAM] long 
 12034 ;;  a               4   73[COMRAM] long 
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  grs             1    3[BANK0 ] unsigned char 
 12037 ;;  bexp            1    2[BANK0 ] unsigned char 
 12038 ;;  aexp            1    1[BANK0 ] unsigned char 
 12039 ;;  signs           1    0[BANK0 ] unsigned char 
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  4   69[COMRAM] unsigned char 
 12042 ;; Registers used:
 12043 ;;		wreg, status,2, status,0
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/0
 12046 ;;		On exit  : 0/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12049 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;Total ram usage:       16 bytes
 12054 ;; Hardware stack levels used: 1
 12055 ;; Hardware stack levels required when called: 1
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_runDAC
 12060 ;;		___flsub
 12061 ;;		_efgtoa
 12062 ;;		_sinf
 12063 ;;		___cosdf
 12064 ;;		___rem_pio2f
 12065 ;;		___sindf
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text44
 12070   0015B2                     __ptext44:
 12071                           	callstack 0
 12072   0015B2                     ___fladd:
 12073                           	callstack 23
 12074   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 12075   0015B4  0B80               	andlw	128
 12076   0015B6  0100               	movlb	0	; () banked
 12077   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 12078   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 12079   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 12080   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 12081   0015C0                     
 12082                           ; BSR set to: 0
 12083   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 12084   0015C2  EFE5  F00A         	goto	u7041
 12085   0015C6  EFE7  F00A         	goto	u7040
 12086   0015CA                     u7041:
 12087   0015CA  EFE8  F00A         	goto	l6340
 12088   0015CE                     u7040:
 12089   0015CE                     
 12090                           ; BSR set to: 0
 12091   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 12092   0015D0                     l6340:
 12093                           
 12094                           ; BSR set to: 0
 12095   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 12096   0015D2  B4D8               	btfsc	status,2,c
 12097   0015D4  EFEE  F00A         	goto	u7051
 12098   0015D8  EFF0  F00A         	goto	u7050
 12099   0015DC                     u7051:
 12100   0015DC  EF05  F00B         	goto	l6350
 12101   0015E0                     u7050:
 12102   0015E0                     
 12103                           ; BSR set to: 0
 12104   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12105   0015E2  A4D8               	btfss	status,2,c
 12106   0015E4  EFF6  F00A         	goto	u7061
 12107   0015E8  EFF8  F00A         	goto	u7060
 12108   0015EC                     u7061:
 12109   0015EC  EF00  F00B         	goto	l6346
 12110   0015F0                     u7060:
 12111   0015F0                     
 12112                           ; BSR set to: 0
 12113   0015F0  0E00               	movlw	0
 12114   0015F2  6E46               	movwf	___fladd@b^0,c
 12115   0015F4  0E00               	movlw	0
 12116   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 12117   0015F8  0E00               	movlw	0
 12118   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 12119   0015FC  0E00               	movlw	0
 12120   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 12121   001600                     l6346:
 12122                           
 12123                           ; BSR set to: 0
 12124   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 12125   001602                     
 12126                           ; BSR set to: 0
 12127   001602  0E00               	movlw	0
 12128   001604  6E49               	movwf	(___fladd@b+3)^0,c
 12129   001606  EF0D  F00B         	goto	l6352
 12130   00160A                     l6350:
 12131                           
 12132                           ; BSR set to: 0
 12133   00160A  0E00               	movlw	0
 12134   00160C  6E46               	movwf	___fladd@b^0,c
 12135   00160E  0E00               	movlw	0
 12136   001610  6E47               	movwf	(___fladd@b+1)^0,c
 12137   001612  0E00               	movlw	0
 12138   001614  6E48               	movwf	(___fladd@b+2)^0,c
 12139   001616  0E00               	movlw	0
 12140   001618  6E49               	movwf	(___fladd@b+3)^0,c
 12141   00161A                     l6352:
 12142                           
 12143                           ; BSR set to: 0
 12144   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 12145   00161C  0B80               	andlw	128
 12146   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 12147   001620                     
 12148                           ; BSR set to: 0
 12149   001620  5160               	movf	___fladd@signs& (0+255),w,b
 12150   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 12151   001624  B4D8               	btfsc	status,2,c
 12152   001626  EF17  F00B         	goto	u7071
 12153   00162A  EF19  F00B         	goto	u7070
 12154   00162E                     u7071:
 12155   00162E  EF1A  F00B         	goto	l6358
 12156   001632                     u7070:
 12157   001632                     
 12158                           ; BSR set to: 0
 12159   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 12160   001634                     l6358:
 12161                           
 12162                           ; BSR set to: 0
 12163   001634  504D               	movf	(___fladd@a+3)^0,w,c
 12164   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 12165   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 12166   00163A                     
 12167                           ; BSR set to: 0
 12168   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 12169   00163C  EF22  F00B         	goto	u7081
 12170   001640  EF24  F00B         	goto	u7080
 12171   001644                     u7081:
 12172   001644  EF25  F00B         	goto	l6364
 12173   001648                     u7080:
 12174   001648                     
 12175                           ; BSR set to: 0
 12176   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 12177   00164A                     l6364:
 12178                           
 12179                           ; BSR set to: 0
 12180   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 12181   00164C  B4D8               	btfsc	status,2,c
 12182   00164E  EF2B  F00B         	goto	u7091
 12183   001652  EF2D  F00B         	goto	u7090
 12184   001656                     u7091:
 12185   001656  EF42  F00B         	goto	l6374
 12186   00165A                     u7090:
 12187   00165A                     
 12188                           ; BSR set to: 0
 12189   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 12190   00165C  A4D8               	btfss	status,2,c
 12191   00165E  EF33  F00B         	goto	u7101
 12192   001662  EF35  F00B         	goto	u7100
 12193   001666                     u7101:
 12194   001666  EF3D  F00B         	goto	l6370
 12195   00166A                     u7100:
 12196   00166A                     
 12197                           ; BSR set to: 0
 12198   00166A  0E00               	movlw	0
 12199   00166C  6E4A               	movwf	___fladd@a^0,c
 12200   00166E  0E00               	movlw	0
 12201   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 12202   001672  0E00               	movlw	0
 12203   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 12204   001676  0E00               	movlw	0
 12205   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 12206   00167A                     l6370:
 12207                           
 12208                           ; BSR set to: 0
 12209   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 12210   00167C                     
 12211                           ; BSR set to: 0
 12212   00167C  0E00               	movlw	0
 12213   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 12214   001680  EF4A  F00B         	goto	l6376
 12215   001684                     l6374:
 12216                           
 12217                           ; BSR set to: 0
 12218   001684  0E00               	movlw	0
 12219   001686  6E4A               	movwf	___fladd@a^0,c
 12220   001688  0E00               	movlw	0
 12221   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 12222   00168C  0E00               	movlw	0
 12223   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 12224   001690  0E00               	movlw	0
 12225   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 12226   001694                     l6376:
 12227                           
 12228                           ; BSR set to: 0
 12229   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 12230   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 12231   001698  B0D8               	btfsc	status,0,c
 12232   00169A  EF51  F00B         	goto	u7111
 12233   00169E  EF53  F00B         	goto	u7110
 12234   0016A2                     u7111:
 12235   0016A2  EF7A  F00B         	goto	l6412
 12236   0016A6                     u7110:
 12237   0016A6                     
 12238                           ; BSR set to: 0
 12239   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 12240   0016A8  EF58  F00B         	goto	u7121
 12241   0016AC  EF5A  F00B         	goto	u7120
 12242   0016B0                     u7121:
 12243   0016B0  EF5C  F00B         	goto	l6382
 12244   0016B4                     u7120:
 12245   0016B4                     
 12246                           ; BSR set to: 0
 12247   0016B4  0E80               	movlw	128
 12248   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12249   0016B8                     l6382:
 12250                           
 12251                           ; BSR set to: 0
 12252   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 12253   0016BC                     
 12254                           ; BSR set to: 0
 12255   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12256   0016C0                     
 12257                           ; BSR set to: 0
 12258   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 12259   0016C4                     
 12260                           ; BSR set to: 0
 12261   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 12262   0016C8                     
 12263                           ; BSR set to: 0
 12264   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12265   0016CC                     
 12266                           ; BSR set to: 0
 12267   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12268   0016D0                     
 12269                           ; BSR set to: 0
 12270   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12271   0016D4                     
 12272                           ; BSR set to: 0
 12273   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12274   0016D8                     
 12275                           ; BSR set to: 0
 12276   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12277   0016DC                     
 12278                           ; BSR set to: 0
 12279   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12280   0016E0                     
 12281                           ; BSR set to: 0
 12282   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12283   0016E4                     
 12284                           ; BSR set to: 0
 12285   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12286   0016E8                     
 12287                           ; BSR set to: 0
 12288   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12289   0016EC                     
 12290                           ; BSR set to: 0
 12291   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12292   0016F0                     
 12293                           ; BSR set to: 0
 12294   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12295   0016F4                     l6412:
 12296                           
 12297                           ; BSR set to: 0
 12298   0016F4  0E00               	movlw	0
 12299   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12300   0016F8                     
 12301                           ; BSR set to: 0
 12302   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12303   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12304   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12305   001700  5E4E               	subwf	??___fladd^0,f,c
 12306   001702  0E00               	movlw	0
 12307   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12308   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12309   001708  EF8F  F00B         	goto	u7131
 12310   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12311   00170E  E109               	bnz	u7130
 12312   001710  0E1A               	movlw	26
 12313   001712  5C4E               	subwf	??___fladd^0,w,c
 12314   001714  A0D8               	btfss	status,0,c
 12315   001716  EF8F  F00B         	goto	u7131
 12316   00171A  EF91  F00B         	goto	u7130
 12317   00171E                     u7131:
 12318   00171E  EFC8  F00B         	goto	l1239
 12319   001722                     u7130:
 12320   001722                     
 12321                           ; BSR set to: 0
 12322   001722  5046               	movf	___fladd@b^0,w,c
 12323   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12324   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12325   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12326   00172A  A4D8               	btfss	status,2,c
 12327   00172C  EF9A  F00B         	goto	u7141
 12328   001730  EF9D  F00B         	goto	u7140
 12329   001734                     u7141:
 12330   001734  0E01               	movlw	1
 12331   001736  EF9E  F00B         	goto	u7150
 12332   00173A                     u7140:
 12333   00173A  0E00               	movlw	0
 12334   00173C                     u7150:
 12335   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12336   00173E                     
 12337                           ; BSR set to: 0
 12338   00173E  0E00               	movlw	0
 12339   001740  6E46               	movwf	___fladd@b^0,c
 12340   001742  0E00               	movlw	0
 12341   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12342   001746  0E00               	movlw	0
 12343   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12344   00174A  0E00               	movlw	0
 12345   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12346   00174E                     
 12347                           ; BSR set to: 0
 12348   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12349   001752  EFD1  F00B         	goto	l1238
 12350   001756                     l1240:
 12351                           
 12352                           ; BSR set to: 0
 12353   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12354   001758  EFB0  F00B         	goto	u7161
 12355   00175C  EFB2  F00B         	goto	u7160
 12356   001760                     u7161:
 12357   001760  EFB8  F00B         	goto	l6424
 12358   001764                     u7160:
 12359   001764                     
 12360                           ; BSR set to: 0
 12361   001764  90D8               	bcf	status,0,c
 12362   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12363   001768  0901               	iorlw	1
 12364   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12365   00176C  EFBA  F00B         	goto	l6426
 12366   001770                     l6424:
 12367                           
 12368                           ; BSR set to: 0
 12369   001770  90D8               	bcf	status,0,c
 12370   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12371   001774                     l6426:
 12372                           
 12373                           ; BSR set to: 0
 12374   001774  A046               	btfss	___fladd@b^0,0,c
 12375   001776  EFBF  F00B         	goto	u7171
 12376   00177A  EFC1  F00B         	goto	u7170
 12377   00177E                     u7171:
 12378   00177E  EFC2  F00B         	goto	l6430
 12379   001782                     u7170:
 12380   001782                     
 12381                           ; BSR set to: 0
 12382   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12383   001784                     l6430:
 12384                           
 12385                           ; BSR set to: 0
 12386   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12387   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12388   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12389   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12390   00178C  3246               	rrcf	___fladd@b^0,f,c
 12391   00178E                     
 12392                           ; BSR set to: 0
 12393   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12394   001790                     l1239:
 12395                           
 12396                           ; BSR set to: 0
 12397   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12398   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12399   001794  A0D8               	btfss	status,0,c
 12400   001796  EFCF  F00B         	goto	u7181
 12401   00179A  EFD1  F00B         	goto	u7180
 12402   00179E                     u7181:
 12403   00179E  EFAB  F00B         	goto	l1240
 12404   0017A2                     u7180:
 12405   0017A2                     l1238:
 12406                           
 12407                           ; BSR set to: 0
 12408   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12409   0017A4  EFD6  F00B         	goto	u7191
 12410   0017A8  EFD8  F00B         	goto	u7190
 12411   0017AC                     u7191:
 12412   0017AC  EF18  F00C         	goto	l6458
 12413   0017B0                     u7190:
 12414   0017B0                     
 12415                           ; BSR set to: 0
 12416   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12417   0017B2  A4D8               	btfss	status,2,c
 12418   0017B4  EFDE  F00B         	goto	u7201
 12419   0017B8  EFE0  F00B         	goto	u7200
 12420   0017BC                     u7201:
 12421   0017BC  EFEA  F00B         	goto	l6440
 12422   0017C0                     u7200:
 12423   0017C0                     
 12424                           ; BSR set to: 0
 12425   0017C0  0E00               	movlw	0
 12426   0017C2  6E46               	movwf	?___fladd^0,c
 12427   0017C4  0E00               	movlw	0
 12428   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12429   0017C8  0E00               	movlw	0
 12430   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12431   0017CC  0E00               	movlw	0
 12432   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12433   0017D0  EF39  F00D         	goto	l1247
 12434   0017D4                     l6440:
 12435                           
 12436                           ; BSR set to: 0
 12437   0017D4  504A               	movf	___fladd@a^0,w,c
 12438   0017D6  2646               	addwf	___fladd@b^0,f,c
 12439   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12440   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12441   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12442   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12443   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12444   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12445   0017E4                     
 12446                           ; BSR set to: 0
 12447   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12448   0017E6  EFF7  F00B         	goto	u7211
 12449   0017EA  EFF9  F00B         	goto	u7210
 12450   0017EE                     u7211:
 12451   0017EE  EFA5  F00C         	goto	l6494
 12452   0017F2                     u7210:
 12453   0017F2                     
 12454                           ; BSR set to: 0
 12455   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12456   0017F4  EFFE  F00B         	goto	u7221
 12457   0017F8  EF00  F00C         	goto	u7220
 12458   0017FC                     u7221:
 12459   0017FC  EF06  F00C         	goto	l6448
 12460   001800                     u7220:
 12461   001800                     
 12462                           ; BSR set to: 0
 12463   001800  90D8               	bcf	status,0,c
 12464   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12465   001804  0901               	iorlw	1
 12466   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12467   001808  EF08  F00C         	goto	l6450
 12468   00180C                     l6448:
 12469                           
 12470                           ; BSR set to: 0
 12471   00180C  90D8               	bcf	status,0,c
 12472   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12473   001810                     l6450:
 12474                           
 12475                           ; BSR set to: 0
 12476   001810  A046               	btfss	___fladd@b^0,0,c
 12477   001812  EF0D  F00C         	goto	u7231
 12478   001816  EF0F  F00C         	goto	u7230
 12479   00181A                     u7231:
 12480   00181A  EF10  F00C         	goto	l6454
 12481   00181E                     u7230:
 12482   00181E                     
 12483                           ; BSR set to: 0
 12484   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12485   001820                     l6454:
 12486                           
 12487                           ; BSR set to: 0
 12488   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12489   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12490   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12491   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12492   001828  3246               	rrcf	___fladd@b^0,f,c
 12493   00182A                     
 12494                           ; BSR set to: 0
 12495   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12496   00182C  EFA5  F00C         	goto	l6494
 12497   001830                     l6458:
 12498                           
 12499                           ; BSR set to: 0
 12500   001830  504A               	movf	___fladd@a^0,w,c
 12501   001832  5C46               	subwf	___fladd@b^0,w,c
 12502   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12503   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12504   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12505   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12506   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12507   00183E  0A80               	xorlw	128
 12508   001840  6E4E               	movwf	??___fladd^0,c
 12509   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12510   001844  0A80               	xorlw	128
 12511   001846  584E               	subwfb	??___fladd^0,w,c
 12512   001848  B0D8               	btfsc	status,0,c
 12513   00184A  EF29  F00C         	goto	u7241
 12514   00184E  EF2B  F00C         	goto	u7240
 12515   001852                     u7241:
 12516   001852  EF56  F00C         	goto	l6468
 12517   001856                     u7240:
 12518   001856                     
 12519                           ; BSR set to: 0
 12520   001856  5046               	movf	___fladd@b^0,w,c
 12521   001858  5C4A               	subwf	___fladd@a^0,w,c
 12522   00185A  6E4E               	movwf	??___fladd^0,c
 12523   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12524   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12525   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12526   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12527   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12528   001866  6E50               	movwf	(??___fladd+2)^0,c
 12529   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12530   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12531   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12532   00186E  0EFF               	movlw	255
 12533   001870  244E               	addwf	??___fladd^0,w,c
 12534   001872  6E46               	movwf	___fladd@b^0,c
 12535   001874  0EFF               	movlw	255
 12536   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12537   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12538   00187A  0EFF               	movlw	255
 12539   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12540   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12541   001880  0EFF               	movlw	255
 12542   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12543   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12544   001886  0E80               	movlw	128
 12545   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12546   00188A                     
 12547                           ; BSR set to: 0
 12548   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12549   00188C                     
 12550                           ; BSR set to: 0
 12551   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12552   00188E  A4D8               	btfss	status,2,c
 12553   001890  EF4C  F00C         	goto	u7251
 12554   001894  EF4E  F00C         	goto	u7250
 12555   001898                     u7251:
 12556   001898  EF5E  F00C         	goto	l1255
 12557   00189C                     u7250:
 12558   00189C                     
 12559                           ; BSR set to: 0
 12560   00189C  0E01               	movlw	1
 12561   00189E  2646               	addwf	___fladd@b^0,f,c
 12562   0018A0  0E00               	movlw	0
 12563   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12564   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12565   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12566   0018A8  EF5E  F00C         	goto	l1255
 12567   0018AC                     l6468:
 12568                           
 12569                           ; BSR set to: 0
 12570   0018AC  504A               	movf	___fladd@a^0,w,c
 12571   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12572   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12573   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12574   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12575   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12576   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12577   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12578   0018BC                     l1255:
 12579                           
 12580                           ; BSR set to: 0
 12581   0018BC  5046               	movf	___fladd@b^0,w,c
 12582   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12583   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12584   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12585   0018C4  A4D8               	btfss	status,2,c
 12586   0018C6  EF67  F00C         	goto	u7261
 12587   0018CA  EF69  F00C         	goto	u7260
 12588   0018CE                     u7261:
 12589   0018CE  EF9E  F00C         	goto	l6492
 12590   0018D2                     u7260:
 12591   0018D2                     
 12592                           ; BSR set to: 0
 12593   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12594   0018D4  A4D8               	btfss	status,2,c
 12595   0018D6  EF6F  F00C         	goto	u7271
 12596   0018DA  EF71  F00C         	goto	u7270
 12597   0018DE                     u7271:
 12598   0018DE  EF9E  F00C         	goto	l6492
 12599   0018E2                     u7270:
 12600   0018E2                     
 12601                           ; BSR set to: 0
 12602   0018E2  0E00               	movlw	0
 12603   0018E4  6E46               	movwf	?___fladd^0,c
 12604   0018E6  0E00               	movlw	0
 12605   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12606   0018EA  0E00               	movlw	0
 12607   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12608   0018EE  0E00               	movlw	0
 12609   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12610   0018F2  EF39  F00D         	goto	l1247
 12611   0018F6                     l6476:
 12612                           
 12613                           ; BSR set to: 0
 12614   0018F6  90D8               	bcf	status,0,c
 12615   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12616   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12617   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12618   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12619   001900                     
 12620                           ; BSR set to: 0
 12621   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12622   001902  EF85  F00C         	goto	u7281
 12623   001906  EF87  F00C         	goto	u7280
 12624   00190A                     u7281:
 12625   00190A  EF88  F00C         	goto	l6482
 12626   00190E                     u7280:
 12627   00190E                     
 12628                           ; BSR set to: 0
 12629   00190E  8046               	bsf	___fladd@b^0,0,c
 12630   001910                     l6482:
 12631                           
 12632                           ; BSR set to: 0
 12633   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12634   001912  EF8D  F00C         	goto	u7291
 12635   001916  EF8F  F00C         	goto	u7290
 12636   00191A                     u7291:
 12637   00191A  EF93  F00C         	goto	l6486
 12638   00191E                     u7290:
 12639   00191E                     
 12640                           ; BSR set to: 0
 12641   00191E  80D8               	bsf	status,0,c
 12642   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12643   001922  EF95  F00C         	goto	l6488
 12644   001926                     l6486:
 12645                           
 12646                           ; BSR set to: 0
 12647   001926  90D8               	bcf	status,0,c
 12648   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12649   00192A                     l6488:
 12650                           
 12651                           ; BSR set to: 0
 12652   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12653   00192C  B4D8               	btfsc	status,2,c
 12654   00192E  EF9B  F00C         	goto	u7301
 12655   001932  EF9D  F00C         	goto	u7300
 12656   001936                     u7301:
 12657   001936  EF9E  F00C         	goto	l6492
 12658   00193A                     u7300:
 12659   00193A                     
 12660                           ; BSR set to: 0
 12661   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12662   00193C                     l6492:
 12663                           
 12664                           ; BSR set to: 0
 12665   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12666   00193E  EFA3  F00C         	goto	u7311
 12667   001942  EFA5  F00C         	goto	u7310
 12668   001946                     u7311:
 12669   001946  EF7B  F00C         	goto	l6476
 12670   00194A                     u7310:
 12671   00194A                     l6494:
 12672                           
 12673                           ; BSR set to: 0
 12674   00194A  0E00               	movlw	0
 12675   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12676   00194E                     
 12677                           ; BSR set to: 0
 12678   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12679   001950  EFAC  F00C         	goto	u7321
 12680   001954  EFAE  F00C         	goto	u7320
 12681   001958                     u7321:
 12682   001958  EFC6  F00C         	goto	l1264
 12683   00195C                     u7320:
 12684   00195C                     
 12685                           ; BSR set to: 0
 12686   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12687   001960  0E7F               	movlw	127
 12688   001962  164E               	andwf	??___fladd^0,f,c
 12689   001964  B4D8               	btfsc	status,2,c
 12690   001966  EFB7  F00C         	goto	u7331
 12691   00196A  EFB9  F00C         	goto	u7330
 12692   00196E                     u7331:
 12693   00196E  EFBD  F00C         	goto	l1265
 12694   001972                     u7330:
 12695   001972                     l6500:
 12696                           
 12697                           ; BSR set to: 0
 12698   001972  0E01               	movlw	1
 12699   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12700   001976  EFC6  F00C         	goto	l1264
 12701   00197A                     l1265:
 12702                           
 12703                           ; BSR set to: 0
 12704   00197A  A046               	btfss	___fladd@b^0,0,c
 12705   00197C  EFC2  F00C         	goto	u7341
 12706   001980  EFC4  F00C         	goto	u7340
 12707   001984                     u7341:
 12708   001984  EFC6  F00C         	goto	l1264
 12709   001988                     u7340:
 12710   001988  EFB9  F00C         	goto	l6500
 12711   00198C                     l1264:
 12712                           
 12713                           ; BSR set to: 0
 12714   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12715   00198E  B4D8               	btfsc	status,2,c
 12716   001990  EFCC  F00C         	goto	u7351
 12717   001994  EFCE  F00C         	goto	u7350
 12718   001998                     u7351:
 12719   001998  EFF9  F00C         	goto	l6512
 12720   00199C                     u7350:
 12721   00199C                     
 12722                           ; BSR set to: 0
 12723   00199C  0E01               	movlw	1
 12724   00199E  2646               	addwf	___fladd@b^0,f,c
 12725   0019A0  0E00               	movlw	0
 12726   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12727   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12728   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12729   0019A8                     
 12730                           ; BSR set to: 0
 12731   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12732   0019AA  EFD9  F00C         	goto	u7361
 12733   0019AE  EFDB  F00C         	goto	u7360
 12734   0019B2                     u7361:
 12735   0019B2  EFF9  F00C         	goto	l6512
 12736   0019B6                     u7360:
 12737   0019B6                     
 12738                           ; BSR set to: 0
 12739   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12740   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12741   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12742   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12743   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12744   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12745   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12746   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12747   0019CE  324E               	rrcf	??___fladd^0,f,c
 12748   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12749   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12750   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12751   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12752   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12753   0019E2  B4D8               	btfsc	status,2,c
 12754   0019E4  EFF6  F00C         	goto	u7371
 12755   0019E8  EFF8  F00C         	goto	u7370
 12756   0019EC                     u7371:
 12757   0019EC  EFF9  F00C         	goto	l6512
 12758   0019F0                     u7370:
 12759   0019F0                     
 12760                           ; BSR set to: 0
 12761   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12762   0019F2                     l6512:
 12763                           
 12764                           ; BSR set to: 0
 12765   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12766   0019F4  B4D8               	btfsc	status,2,c
 12767   0019F6  EFFF  F00C         	goto	u7381
 12768   0019FA  EF01  F00D         	goto	u7380
 12769   0019FE                     u7381:
 12770   0019FE  EF09  F00D         	goto	l6516
 12771   001A02                     u7380:
 12772   001A02                     
 12773                           ; BSR set to: 0
 12774   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12775   001A04  A4D8               	btfss	status,2,c
 12776   001A06  EF07  F00D         	goto	u7391
 12777   001A0A  EF09  F00D         	goto	u7390
 12778   001A0E                     u7391:
 12779   001A0E  EF1B  F00D         	goto	l6520
 12780   001A12                     u7390:
 12781   001A12                     l6516:
 12782                           
 12783                           ; BSR set to: 0
 12784   001A12  0E00               	movlw	0
 12785   001A14  6E46               	movwf	___fladd@b^0,c
 12786   001A16  0E00               	movlw	0
 12787   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12788   001A1A  0E00               	movlw	0
 12789   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12790   001A1E  0E00               	movlw	0
 12791   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12792   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12793   001A24  A4D8               	btfss	status,2,c
 12794   001A26  EF17  F00D         	goto	u7401
 12795   001A2A  EF19  F00D         	goto	u7400
 12796   001A2E                     u7401:
 12797   001A2E  EF1B  F00D         	goto	l6520
 12798   001A32                     u7400:
 12799   001A32                     
 12800                           ; BSR set to: 0
 12801   001A32  0E00               	movlw	0
 12802   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12803   001A36                     l6520:
 12804                           
 12805                           ; BSR set to: 0
 12806   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12807   001A38  EF20  F00D         	goto	u7411
 12808   001A3C  EF22  F00D         	goto	u7410
 12809   001A40                     u7411:
 12810   001A40  EF25  F00D         	goto	l6524
 12811   001A44                     u7410:
 12812   001A44                     
 12813                           ; BSR set to: 0
 12814   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12815   001A46  EF26  F00D         	goto	l6526
 12816   001A4A                     l6524:
 12817                           
 12818                           ; BSR set to: 0
 12819   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12820   001A4C                     l6526:
 12821                           
 12822                           ; BSR set to: 0
 12823   001A4C  90D8               	bcf	status,0,c
 12824   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12825   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12826   001A52                     
 12827                           ; BSR set to: 0
 12828   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12829   001A54  EF2E  F00D         	goto	u7421
 12830   001A58  EF30  F00D         	goto	u7420
 12831   001A5C                     u7421:
 12832   001A5C  EF31  F00D         	goto	l6532
 12833   001A60                     u7420:
 12834   001A60                     
 12835                           ; BSR set to: 0
 12836   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12837   001A62                     l6532:
 12838                           
 12839                           ; BSR set to: 0
 12840   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12841   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12842   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12843   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12844   001A72                     l1247:
 12845                           
 12846                           ; BSR set to: 0
 12847   001A72  0012               	return		;funcret
 12848   001A74                     __end_of___fladd:
 12849                           	callstack 0
 12850                           
 12851 ;; *************** function ___flneg *****************
 12852 ;; Defined at:
 12853 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  f1              4   32[BANK0 ] unsigned char 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  4   32[BANK0 ] unsigned char 
 12860 ;; Registers used:
 12861 ;;		wreg, status,2, status,0
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;Total ram usage:        4 bytes
 12872 ;; Hardware stack levels used: 1
 12873 ;; Hardware stack levels required when called: 1
 12874 ;; This function calls:
 12875 ;;		Nothing
 12876 ;; This function is called by:
 12877 ;;		_efgtoa
 12878 ;;		_sinf
 12879 ;;		___rem_pio2f
 12880 ;; This function uses a non-reentrant model
 12881 ;;
 12882                           
 12883                           	psect	text45
 12884   005112                     __ptext45:
 12885                           	callstack 0
 12886   005112                     ___flneg:
 12887                           	callstack 24
 12888   005112  0100               	movlb	0	; () banked
 12889   005114  5180               	movf	___flneg@f1& (0+255),w,b
 12890   005116  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12891   005118  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12892   00511A  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12893   00511C  B4D8               	btfsc	status,2,c
 12894   00511E  EF93  F028         	goto	u8061
 12895   005122  EF95  F028         	goto	u8060
 12896   005126                     u8061:
 12897   005126  EF9D  F028         	goto	l6946
 12898   00512A                     u8060:
 12899   00512A                     
 12900                           ; BSR set to: 0
 12901   00512A  0E00               	movlw	0
 12902   00512C  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12903   00512E  0E00               	movlw	0
 12904   005130  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12905   005132  0E00               	movlw	0
 12906   005134  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12907   005136  0E80               	movlw	128
 12908   005138  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12909   00513A                     l6946:
 12910                           
 12911                           ; BSR set to: 0
 12912   00513A  C080  F080         	movff	___flneg@f1,?___flneg
 12913   00513E  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12914   005142  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12915   005146  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12916   00514A                     
 12917                           ; BSR set to: 0
 12918   00514A  0012               	return		;funcret
 12919   00514C                     __end_of___flneg:
 12920                           	callstack 0
 12921                           
 12922 ;; *************** function ___flmul *****************
 12923 ;; Defined at:
 12924 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12925 ;; Parameters:    Size  Location     Type
 12926 ;;  b               4   19[COMRAM] unsigned char 
 12927 ;;  a               4   23[COMRAM] unsigned char 
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;  prod            4   38[COMRAM] struct .
 12930 ;;  grs             4   33[COMRAM] unsigned long 
 12931 ;;  temp            2   42[COMRAM] struct .
 12932 ;;  bexp            1   37[COMRAM] unsigned char 
 12933 ;;  aexp            1   32[COMRAM] unsigned char 
 12934 ;;  sign            1   31[COMRAM] unsigned char 
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  4   19[COMRAM] unsigned char 
 12937 ;; Registers used:
 12938 ;;		wreg, status,2, status,0, prodl, prodh
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12944 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12945 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12947 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;Total ram usage:       25 bytes
 12949 ;; Hardware stack levels used: 1
 12950 ;; Hardware stack levels required when called: 1
 12951 ;; This function calls:
 12952 ;;		Nothing
 12953 ;; This function is called by:
 12954 ;;		_runDAC
 12955 ;;		_runADC
 12956 ;;		_efgtoa
 12957 ;;		___cosdf
 12958 ;;		___rem_pio2f
 12959 ;;		___sindf
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text46
 12964   001A74                     __ptext46:
 12965                           	callstack 0
 12966   001A74                     ___flmul:
 12967                           	callstack 24
 12968   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12969   001A76  0B80               	andlw	128
 12970   001A78  6E20               	movwf	___flmul@sign^0,c
 12971   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12972   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12973   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12974   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12975   001A82  EF45  F00D         	goto	u7671
 12976   001A86  EF47  F00D         	goto	u7670
 12977   001A8A                     u7671:
 12978   001A8A  EF48  F00D         	goto	l6694
 12979   001A8E                     u7670:
 12980   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12981   001A90                     l6694:
 12982   001A90  5026               	movf	___flmul@bexp^0,w,c
 12983   001A92  B4D8               	btfsc	status,2,c
 12984   001A94  EF4E  F00D         	goto	u7681
 12985   001A98  EF50  F00D         	goto	u7680
 12986   001A9C                     u7681:
 12987   001A9C  EF63  F00D         	goto	l6702
 12988   001AA0                     u7680:
 12989   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12990   001AA2  A4D8               	btfss	status,2,c
 12991   001AA4  EF56  F00D         	goto	u7691
 12992   001AA8  EF58  F00D         	goto	u7690
 12993   001AAC                     u7691:
 12994   001AAC  EF60  F00D         	goto	l6700
 12995   001AB0                     u7690:
 12996   001AB0  0E00               	movlw	0
 12997   001AB2  6E14               	movwf	___flmul@b^0,c
 12998   001AB4  0E00               	movlw	0
 12999   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 13000   001AB8  0E00               	movlw	0
 13001   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 13002   001ABC  0E00               	movlw	0
 13003   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 13004   001AC0                     l6700:
 13005   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 13006   001AC2  EF6B  F00D         	goto	l6704
 13007   001AC6                     l6702:
 13008   001AC6  0E00               	movlw	0
 13009   001AC8  6E14               	movwf	___flmul@b^0,c
 13010   001ACA  0E00               	movlw	0
 13011   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 13012   001ACE  0E00               	movlw	0
 13013   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 13014   001AD2  0E00               	movlw	0
 13015   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 13016   001AD6                     l6704:
 13017   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 13018   001AD8  0B80               	andlw	128
 13019   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 13020   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 13021   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 13022   001AE0  6E21               	movwf	___flmul@aexp^0,c
 13023   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 13024   001AE4  EF76  F00D         	goto	u7701
 13025   001AE8  EF78  F00D         	goto	u7700
 13026   001AEC                     u7701:
 13027   001AEC  EF79  F00D         	goto	l6712
 13028   001AF0                     u7700:
 13029   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 13030   001AF2                     l6712:
 13031   001AF2  5021               	movf	___flmul@aexp^0,w,c
 13032   001AF4  B4D8               	btfsc	status,2,c
 13033   001AF6  EF7F  F00D         	goto	u7711
 13034   001AFA  EF81  F00D         	goto	u7710
 13035   001AFE                     u7711:
 13036   001AFE  EF94  F00D         	goto	l6720
 13037   001B02                     u7710:
 13038   001B02  2821               	incf	___flmul@aexp^0,w,c
 13039   001B04  A4D8               	btfss	status,2,c
 13040   001B06  EF87  F00D         	goto	u7721
 13041   001B0A  EF89  F00D         	goto	u7720
 13042   001B0E                     u7721:
 13043   001B0E  EF91  F00D         	goto	l6718
 13044   001B12                     u7720:
 13045   001B12  0E00               	movlw	0
 13046   001B14  6E18               	movwf	___flmul@a^0,c
 13047   001B16  0E00               	movlw	0
 13048   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 13049   001B1A  0E00               	movlw	0
 13050   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 13051   001B1E  0E00               	movlw	0
 13052   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 13053   001B22                     l6718:
 13054   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 13055   001B24  EF9C  F00D         	goto	l1324
 13056   001B28                     l6720:
 13057   001B28  0E00               	movlw	0
 13058   001B2A  6E18               	movwf	___flmul@a^0,c
 13059   001B2C  0E00               	movlw	0
 13060   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 13061   001B30  0E00               	movlw	0
 13062   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 13063   001B34  0E00               	movlw	0
 13064   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 13065   001B38                     l1324:
 13066   001B38  5021               	movf	___flmul@aexp^0,w,c
 13067   001B3A  B4D8               	btfsc	status,2,c
 13068   001B3C  EFA2  F00D         	goto	u7731
 13069   001B40  EFA4  F00D         	goto	u7730
 13070   001B44                     u7731:
 13071   001B44  EFAC  F00D         	goto	l6724
 13072   001B48                     u7730:
 13073   001B48  5026               	movf	___flmul@bexp^0,w,c
 13074   001B4A  A4D8               	btfss	status,2,c
 13075   001B4C  EFAA  F00D         	goto	u7741
 13076   001B50  EFAC  F00D         	goto	u7740
 13077   001B54                     u7741:
 13078   001B54  EFB6  F00D         	goto	l6728
 13079   001B58                     u7740:
 13080   001B58                     l6724:
 13081   001B58  0E00               	movlw	0
 13082   001B5A  6E14               	movwf	?___flmul^0,c
 13083   001B5C  0E00               	movlw	0
 13084   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 13085   001B60  0E00               	movlw	0
 13086   001B62  6E16               	movwf	(?___flmul+2)^0,c
 13087   001B64  0E00               	movlw	0
 13088   001B66  6E17               	movwf	(?___flmul+3)^0,c
 13089   001B68  EF4E  F00F         	goto	l1328
 13090   001B6C                     l6728:
 13091   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 13092   001B6E  0214               	mulwf	___flmul@b^0,c
 13093   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 13094   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13095   001B78  502B               	movf	___flmul@temp^0,w,c
 13096   001B7A  6E22               	movwf	___flmul@grs^0,c
 13097   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 13098   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 13099   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 13100   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 13101   001B84  6E27               	movwf	___flmul@prod^0,c
 13102   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 13103   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 13104   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 13105   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 13106   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 13107   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 13108   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13109   001B98  502B               	movf	___flmul@temp^0,w,c
 13110   001B9A  2622               	addwf	___flmul@grs^0,f,c
 13111   001B9C  0E00               	movlw	0
 13112   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13113   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13114   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13115   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 13116   001BA6  2627               	addwf	___flmul@prod^0,f,c
 13117   001BA8  0E00               	movlw	0
 13118   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13119   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13120   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13121   001BB0  5018               	movf	___flmul@a^0,w,c
 13122   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 13123   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 13124   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13125   001BBC  502B               	movf	___flmul@temp^0,w,c
 13126   001BBE  2622               	addwf	___flmul@grs^0,f,c
 13127   001BC0  0E00               	movlw	0
 13128   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13129   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13130   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13131   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 13132   001BCA  2627               	addwf	___flmul@prod^0,f,c
 13133   001BCC  0E00               	movlw	0
 13134   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13135   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13136   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13137   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13138   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13139   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13140   001BE0  6A22               	clrf	___flmul@grs^0,c
 13141   001BE2  5018               	movf	___flmul@a^0,w,c
 13142   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 13143   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 13144   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13145   001BEE  502B               	movf	___flmul@temp^0,w,c
 13146   001BF0  2622               	addwf	___flmul@grs^0,f,c
 13147   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 13148   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13149   001BF6  0E00               	movlw	0
 13150   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13151   001BFA  0E00               	movlw	0
 13152   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13153   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 13154   001C00  0214               	mulwf	___flmul@b^0,c
 13155   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 13156   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13157   001C0A  502B               	movf	___flmul@temp^0,w,c
 13158   001C0C  2622               	addwf	___flmul@grs^0,f,c
 13159   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 13160   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13161   001C12  0E00               	movlw	0
 13162   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13163   001C16  0E00               	movlw	0
 13164   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13165   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13166   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13167   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13168   001C26  6A22               	clrf	___flmul@grs^0,c
 13169   001C28  5018               	movf	___flmul@a^0,w,c
 13170   001C2A  0214               	mulwf	___flmul@b^0,c
 13171   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 13172   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13173   001C34  502B               	movf	___flmul@temp^0,w,c
 13174   001C36  2622               	addwf	___flmul@grs^0,f,c
 13175   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 13176   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13177   001C3C  0E00               	movlw	0
 13178   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13179   001C40  0E00               	movlw	0
 13180   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13181   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 13182   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 13183   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 13184   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13185   001C50  502B               	movf	___flmul@temp^0,w,c
 13186   001C52  2627               	addwf	___flmul@prod^0,f,c
 13187   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 13188   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13189   001C58  0E00               	movlw	0
 13190   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13191   001C5C  0E00               	movlw	0
 13192   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13193   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 13194   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 13195   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 13196   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13197   001C6C  502B               	movf	___flmul@temp^0,w,c
 13198   001C6E  2627               	addwf	___flmul@prod^0,f,c
 13199   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 13200   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13201   001C74  0E00               	movlw	0
 13202   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13203   001C78  0E00               	movlw	0
 13204   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13205   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 13206   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 13207   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 13208   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 13209   001C88  502B               	movf	___flmul@temp^0,w,c
 13210   001C8A  6E1C               	movwf	??___flmul^0,c
 13211   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 13212   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 13213   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 13214   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 13215   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 13216   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 13217   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 13218   001CA0  6A1C               	clrf	??___flmul^0,c
 13219   001CA2  501C               	movf	??___flmul^0,w,c
 13220   001CA4  2627               	addwf	___flmul@prod^0,f,c
 13221   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 13222   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13223   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 13224   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13225   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 13226   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13227   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 13228   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 13229   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 13230   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 13231   001CC2  0E19               	movlw	25
 13232   001CC4  EF69  F00E         	goto	u7750
 13233   001CC8                     u7755:
 13234   001CC8  90D8               	bcf	status,0,c
 13235   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 13236   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 13237   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 13238   001CD0  321C               	rrcf	??___flmul^0,f,c
 13239   001CD2                     u7750:
 13240   001CD2  2EE8               	decfsz	wreg,f,c
 13241   001CD4  EF64  F00E         	goto	u7755
 13242   001CD8  501C               	movf	??___flmul^0,w,c
 13243   001CDA  2627               	addwf	___flmul@prod^0,f,c
 13244   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 13245   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13246   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 13247   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13248   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 13249   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13250   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13251   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13252   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13253   001CF4  6A22               	clrf	___flmul@grs^0,c
 13254   001CF6  5021               	movf	___flmul@aexp^0,w,c
 13255   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 13256   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 13257   001CFE  261C               	addwf	??___flmul^0,f,c
 13258   001D00  0E00               	movlw	0
 13259   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 13260   001D04  0E82               	movlw	130
 13261   001D06  241C               	addwf	??___flmul^0,w,c
 13262   001D08  6E2B               	movwf	___flmul@temp^0,c
 13263   001D0A  0EFF               	movlw	255
 13264   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13265   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13266   001D10  EF9F  F00E         	goto	l6776
 13267   001D14                     l6770:
 13268   001D14  90D8               	bcf	status,0,c
 13269   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13270   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13271   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13272   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13273   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13274   001D20  EF94  F00E         	goto	u7761
 13275   001D24  EF96  F00E         	goto	u7760
 13276   001D28                     u7761:
 13277   001D28  EF97  F00E         	goto	l1331
 13278   001D2C                     u7760:
 13279   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13280   001D2E                     l1331:
 13281   001D2E  90D8               	bcf	status,0,c
 13282   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13283   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13284   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13285   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13286   001D38  062B               	decf	___flmul@temp^0,f,c
 13287   001D3A  A0D8               	btfss	status,0,c
 13288   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13289   001D3E                     l6776:
 13290   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13291   001D40  EFA4  F00E         	goto	u7771
 13292   001D44  EFA6  F00E         	goto	u7770
 13293   001D48                     u7771:
 13294   001D48  EF8A  F00E         	goto	l6770
 13295   001D4C                     u7770:
 13296   001D4C  0E00               	movlw	0
 13297   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13298   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13299   001D52  EFAD  F00E         	goto	u7781
 13300   001D56  EFAF  F00E         	goto	u7780
 13301   001D5A                     u7781:
 13302   001D5A  EFD3  F00E         	goto	l1333
 13303   001D5E                     u7780:
 13304   001D5E  0EFF               	movlw	255
 13305   001D60  1422               	andwf	___flmul@grs^0,w,c
 13306   001D62  6E1C               	movwf	??___flmul^0,c
 13307   001D64  0EFF               	movlw	255
 13308   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13309   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13310   001D6A  0EFF               	movlw	255
 13311   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13312   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13313   001D70  0E7F               	movlw	127
 13314   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13315   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13316   001D76  501C               	movf	??___flmul^0,w,c
 13317   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13318   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13319   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13320   001D7E  B4D8               	btfsc	status,2,c
 13321   001D80  EFC4  F00E         	goto	u7791
 13322   001D84  EFC6  F00E         	goto	u7790
 13323   001D88                     u7791:
 13324   001D88  EFCA  F00E         	goto	l1334
 13325   001D8C                     u7790:
 13326   001D8C                     l6784:
 13327   001D8C  0E01               	movlw	1
 13328   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13329   001D90  EFD3  F00E         	goto	l1333
 13330   001D94                     l1334:
 13331   001D94  A027               	btfss	___flmul@prod^0,0,c
 13332   001D96  EFCF  F00E         	goto	u7801
 13333   001D9A  EFD1  F00E         	goto	u7800
 13334   001D9E                     u7801:
 13335   001D9E  EFD3  F00E         	goto	l1333
 13336   001DA2                     u7800:
 13337   001DA2  EFC6  F00E         	goto	l6784
 13338   001DA6                     l1333:
 13339   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13340   001DA8  B4D8               	btfsc	status,2,c
 13341   001DAA  EFD9  F00E         	goto	u7811
 13342   001DAE  EFDB  F00E         	goto	u7810
 13343   001DB2                     u7811:
 13344   001DB2  EFFF  F00E         	goto	l6796
 13345   001DB6                     u7810:
 13346   001DB6  0E01               	movlw	1
 13347   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13348   001DBA  0E00               	movlw	0
 13349   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13350   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13351   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13352   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13353   001DC4  EFE6  F00E         	goto	u7821
 13354   001DC8  EFE8  F00E         	goto	u7820
 13355   001DCC                     u7821:
 13356   001DCC  EFFF  F00E         	goto	l6796
 13357   001DD0                     u7820:
 13358   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13359   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13360   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13361   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13362   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13363   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13364   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13365   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13366   001DE8  321C               	rrcf	??___flmul^0,f,c
 13367   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13368   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13369   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13370   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13371   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13372   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13373   001DFE                     l6796:
 13374   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13375   001E00  EF0A  F00F         	goto	u7831
 13376   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13377   001E06  E108               	bnz	u7830
 13378   001E08  282B               	incf	___flmul@temp^0,w,c
 13379   001E0A  A0D8               	btfss	status,0,c
 13380   001E0C  EF0A  F00F         	goto	u7831
 13381   001E10  EF0C  F00F         	goto	u7830
 13382   001E14                     u7831:
 13383   001E14  EF16  F00F         	goto	l6800
 13384   001E18                     u7830:
 13385   001E18  0E00               	movlw	0
 13386   001E1A  6E27               	movwf	___flmul@prod^0,c
 13387   001E1C  0E00               	movlw	0
 13388   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13389   001E20  0E80               	movlw	128
 13390   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13391   001E24  0E7F               	movlw	127
 13392   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13393   001E28  EF44  F00F         	goto	l6812
 13394   001E2C                     l6800:
 13395   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13396   001E2E  EF23  F00F         	goto	u7840
 13397   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13398   001E34  E106               	bnz	u7841
 13399   001E36  042B               	decf	___flmul@temp^0,w,c
 13400   001E38  B0D8               	btfsc	status,0,c
 13401   001E3A  EF21  F00F         	goto	u7841
 13402   001E3E  EF23  F00F         	goto	u7840
 13403   001E42                     u7841:
 13404   001E42  EF2F  F00F         	goto	l1341
 13405   001E46                     u7840:
 13406   001E46  0E00               	movlw	0
 13407   001E48  6E27               	movwf	___flmul@prod^0,c
 13408   001E4A  0E00               	movlw	0
 13409   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13410   001E4E  0E00               	movlw	0
 13411   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13412   001E52  0E00               	movlw	0
 13413   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13414   001E56  0E00               	movlw	0
 13415   001E58  6E20               	movwf	___flmul@sign^0,c
 13416   001E5A  EF44  F00F         	goto	l6812
 13417   001E5E                     l1341:
 13418   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13419   001E62  0EFF               	movlw	255
 13420   001E64  1627               	andwf	___flmul@prod^0,f,c
 13421   001E66  0EFF               	movlw	255
 13422   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13423   001E6A  0E7F               	movlw	127
 13424   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13425   001E6E  0E00               	movlw	0
 13426   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13427   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13428   001E74  EF3E  F00F         	goto	u7851
 13429   001E78  EF40  F00F         	goto	u7850
 13430   001E7C                     u7851:
 13431   001E7C  EF41  F00F         	goto	l6810
 13432   001E80                     u7850:
 13433   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13434   001E82                     l6810:
 13435   001E82  90D8               	bcf	status,0,c
 13436   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13437   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13438   001E88                     l6812:
 13439   001E88  5020               	movf	___flmul@sign^0,w,c
 13440   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13441   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13442   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13443   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13444   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13445   001E9C                     l1328:
 13446   001E9C  0012               	return		;funcret
 13447   001E9E                     __end_of___flmul:
 13448                           	callstack 0
 13449                           
 13450 ;; *************** function ___flge *****************
 13451 ;; Defined at:
 13452 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  ff1             4   44[COMRAM] unsigned char 
 13455 ;;  ff2             4   48[COMRAM] unsigned char 
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;		None               void
 13460 ;; Registers used:
 13461 ;;		wreg, status,2, status,0
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13467 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;Total ram usage:       12 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 1
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_efgtoa
 13478 ;; This function uses a non-reentrant model
 13479 ;;
 13480                           
 13481                           	psect	text47
 13482   004400                     __ptext47:
 13483                           	callstack 0
 13484   004400                     ___flge:
 13485                           	callstack 24
 13486   004400  0E00               	movlw	0
 13487   004402  142D               	andwf	___flge@ff1^0,w,c
 13488   004404  6E35               	movwf	??___flge^0,c
 13489   004406  0E00               	movlw	0
 13490   004408  142E               	andwf	(___flge@ff1+1)^0,w,c
 13491   00440A  6E36               	movwf	(??___flge+1)^0,c
 13492   00440C  0E80               	movlw	128
 13493   00440E  142F               	andwf	(___flge@ff1+2)^0,w,c
 13494   004410  6E37               	movwf	(??___flge+2)^0,c
 13495   004412  0E7F               	movlw	127
 13496   004414  1430               	andwf	(___flge@ff1+3)^0,w,c
 13497   004416  6E38               	movwf	(??___flge+3)^0,c
 13498   004418  5035               	movf	??___flge^0,w,c
 13499   00441A  1036               	iorwf	(??___flge+1)^0,w,c
 13500   00441C  1037               	iorwf	(??___flge+2)^0,w,c
 13501   00441E  1038               	iorwf	(??___flge+3)^0,w,c
 13502   004420  A4D8               	btfss	status,2,c
 13503   004422  EF15  F022         	goto	u8011
 13504   004426  EF17  F022         	goto	u8010
 13505   00442A                     u8011:
 13506   00442A  EF1F  F022         	goto	l6924
 13507   00442E                     u8010:
 13508   00442E  0E00               	movlw	0
 13509   004430  6E2D               	movwf	___flge@ff1^0,c
 13510   004432  0E00               	movlw	0
 13511   004434  6E2E               	movwf	(___flge@ff1+1)^0,c
 13512   004436  0E00               	movlw	0
 13513   004438  6E2F               	movwf	(___flge@ff1+2)^0,c
 13514   00443A  0E00               	movlw	0
 13515   00443C  6E30               	movwf	(___flge@ff1+3)^0,c
 13516   00443E                     l6924:
 13517   00443E  0E00               	movlw	0
 13518   004440  1431               	andwf	___flge@ff2^0,w,c
 13519   004442  6E35               	movwf	??___flge^0,c
 13520   004444  0E00               	movlw	0
 13521   004446  1432               	andwf	(___flge@ff2+1)^0,w,c
 13522   004448  6E36               	movwf	(??___flge+1)^0,c
 13523   00444A  0E80               	movlw	128
 13524   00444C  1433               	andwf	(___flge@ff2+2)^0,w,c
 13525   00444E  6E37               	movwf	(??___flge+2)^0,c
 13526   004450  0E7F               	movlw	127
 13527   004452  1434               	andwf	(___flge@ff2+3)^0,w,c
 13528   004454  6E38               	movwf	(??___flge+3)^0,c
 13529   004456  5035               	movf	??___flge^0,w,c
 13530   004458  1036               	iorwf	(??___flge+1)^0,w,c
 13531   00445A  1037               	iorwf	(??___flge+2)^0,w,c
 13532   00445C  1038               	iorwf	(??___flge+3)^0,w,c
 13533   00445E  A4D8               	btfss	status,2,c
 13534   004460  EF34  F022         	goto	u8021
 13535   004464  EF36  F022         	goto	u8020
 13536   004468                     u8021:
 13537   004468  EF3E  F022         	goto	l6928
 13538   00446C                     u8020:
 13539   00446C  0E00               	movlw	0
 13540   00446E  6E31               	movwf	___flge@ff2^0,c
 13541   004470  0E00               	movlw	0
 13542   004472  6E32               	movwf	(___flge@ff2+1)^0,c
 13543   004474  0E00               	movlw	0
 13544   004476  6E33               	movwf	(___flge@ff2+2)^0,c
 13545   004478  0E00               	movlw	0
 13546   00447A  6E34               	movwf	(___flge@ff2+3)^0,c
 13547   00447C                     l6928:
 13548   00447C  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13549   00447E  EF43  F022         	goto	u8031
 13550   004482  EF45  F022         	goto	u8030
 13551   004486                     u8031:
 13552   004486  EF4E  F022         	goto	l6932
 13553   00448A                     u8030:
 13554   00448A  6C2D               	negf	___flge@ff1^0,c
 13555   00448C  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13556   00448E  B0D8               	btfsc	status,0,c
 13557   004490  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13558   004492  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13559   004494  B0D8               	btfsc	status,0,c
 13560   004496  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13561   004498  0E80               	movlw	128
 13562   00449A  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13563   00449C                     l6932:
 13564   00449C  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13565   00449E  EF53  F022         	goto	u8041
 13566   0044A2  EF55  F022         	goto	u8040
 13567   0044A6                     u8041:
 13568   0044A6  EF5E  F022         	goto	l975
 13569   0044AA                     u8040:
 13570   0044AA  6C31               	negf	___flge@ff2^0,c
 13571   0044AC  1E32               	comf	(___flge@ff2+1)^0,f,c
 13572   0044AE  B0D8               	btfsc	status,0,c
 13573   0044B0  2A32               	incf	(___flge@ff2+1)^0,f,c
 13574   0044B2  1E33               	comf	(___flge@ff2+2)^0,f,c
 13575   0044B4  B0D8               	btfsc	status,0,c
 13576   0044B6  2A33               	incf	(___flge@ff2+2)^0,f,c
 13577   0044B8  0E80               	movlw	128
 13578   0044BA  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13579   0044BC                     l975:
 13580   0044BC  0E00               	movlw	0
 13581   0044BE  1A2D               	xorwf	___flge@ff1^0,f,c
 13582   0044C0  0E00               	movlw	0
 13583   0044C2  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13584   0044C4  0E00               	movlw	0
 13585   0044C6  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13586   0044C8  0E80               	movlw	128
 13587   0044CA  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13588   0044CC  0E00               	movlw	0
 13589   0044CE  1A31               	xorwf	___flge@ff2^0,f,c
 13590   0044D0  0E00               	movlw	0
 13591   0044D2  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13592   0044D4  0E00               	movlw	0
 13593   0044D6  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13594   0044D8  0E80               	movlw	128
 13595   0044DA  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13596   0044DC  5031               	movf	___flge@ff2^0,w,c
 13597   0044DE  5C2D               	subwf	___flge@ff1^0,w,c
 13598   0044E0  5032               	movf	(___flge@ff2+1)^0,w,c
 13599   0044E2  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13600   0044E4  5033               	movf	(___flge@ff2+2)^0,w,c
 13601   0044E6  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13602   0044E8  5034               	movf	(___flge@ff2+3)^0,w,c
 13603   0044EA  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13604   0044EC  B0D8               	btfsc	status,0,c
 13605   0044EE  EF7B  F022         	goto	u8051
 13606   0044F2  EF7D  F022         	goto	u8050
 13607   0044F6                     u8051:
 13608   0044F6  EF80  F022         	goto	l6938
 13609   0044FA                     u8050:
 13610   0044FA  90D8               	bcf	status,0,c
 13611   0044FC  EF81  F022         	goto	l980
 13612   004500                     l6938:
 13613   004500  80D8               	bsf	status,0,c
 13614   004502                     l980:
 13615   004502  0012               	return		;funcret
 13616   004504                     __end_of___flge:
 13617                           	callstack 0
 13618                           
 13619 ;; *************** function ___fleq *****************
 13620 ;; Defined at:
 13621 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  ff1             4    5[COMRAM] unsigned char 
 13624 ;;  ff2             4    9[COMRAM] unsigned char 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;		None
 13627 ;; Return value:  Size  Location     Type
 13628 ;;		None               void
 13629 ;; Registers used:
 13630 ;;		wreg, status,2, status,0
 13631 ;; Tracked objects:
 13632 ;;		On entry : 0/0
 13633 ;;		On exit  : 0/0
 13634 ;;		Unchanged: 0/0
 13635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13636 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13638 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13639 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13640 ;;Total ram usage:       12 bytes
 13641 ;; Hardware stack levels used: 1
 13642 ;; Hardware stack levels required when called: 1
 13643 ;; This function calls:
 13644 ;;		Nothing
 13645 ;; This function is called by:
 13646 ;;		_efgtoa
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           	psect	text48
 13651   004B6A                     __ptext48:
 13652                           	callstack 0
 13653   004B6A                     ___fleq:
 13654                           	callstack 24
 13655   004B6A  0E00               	movlw	0
 13656   004B6C  1406               	andwf	___fleq@ff1^0,w,c
 13657   004B6E  6E0E               	movwf	??___fleq^0,c
 13658   004B70  0E00               	movlw	0
 13659   004B72  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13660   004B74  6E0F               	movwf	(??___fleq+1)^0,c
 13661   004B76  0E80               	movlw	128
 13662   004B78  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13663   004B7A  6E10               	movwf	(??___fleq+2)^0,c
 13664   004B7C  0E7F               	movlw	127
 13665   004B7E  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13666   004B80  6E11               	movwf	(??___fleq+3)^0,c
 13667   004B82  500E               	movf	??___fleq^0,w,c
 13668   004B84  100F               	iorwf	(??___fleq+1)^0,w,c
 13669   004B86  1010               	iorwf	(??___fleq+2)^0,w,c
 13670   004B88  1011               	iorwf	(??___fleq+3)^0,w,c
 13671   004B8A  A4D8               	btfss	status,2,c
 13672   004B8C  EFCA  F025         	goto	u7981
 13673   004B90  EFCC  F025         	goto	u7980
 13674   004B94                     u7981:
 13675   004B94  EFD4  F025         	goto	l6908
 13676   004B98                     u7980:
 13677   004B98  0E00               	movlw	0
 13678   004B9A  6E06               	movwf	___fleq@ff1^0,c
 13679   004B9C  0E00               	movlw	0
 13680   004B9E  6E07               	movwf	(___fleq@ff1+1)^0,c
 13681   004BA0  0E00               	movlw	0
 13682   004BA2  6E08               	movwf	(___fleq@ff1+2)^0,c
 13683   004BA4  0E00               	movlw	0
 13684   004BA6  6E09               	movwf	(___fleq@ff1+3)^0,c
 13685   004BA8                     l6908:
 13686   004BA8  0E00               	movlw	0
 13687   004BAA  140A               	andwf	___fleq@ff2^0,w,c
 13688   004BAC  6E0E               	movwf	??___fleq^0,c
 13689   004BAE  0E00               	movlw	0
 13690   004BB0  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13691   004BB2  6E0F               	movwf	(??___fleq+1)^0,c
 13692   004BB4  0E80               	movlw	128
 13693   004BB6  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13694   004BB8  6E10               	movwf	(??___fleq+2)^0,c
 13695   004BBA  0E7F               	movlw	127
 13696   004BBC  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13697   004BBE  6E11               	movwf	(??___fleq+3)^0,c
 13698   004BC0  500E               	movf	??___fleq^0,w,c
 13699   004BC2  100F               	iorwf	(??___fleq+1)^0,w,c
 13700   004BC4  1010               	iorwf	(??___fleq+2)^0,w,c
 13701   004BC6  1011               	iorwf	(??___fleq+3)^0,w,c
 13702   004BC8  A4D8               	btfss	status,2,c
 13703   004BCA  EFE9  F025         	goto	u7991
 13704   004BCE  EFEB  F025         	goto	u7990
 13705   004BD2                     u7991:
 13706   004BD2  EFF3  F025         	goto	l6912
 13707   004BD6                     u7990:
 13708   004BD6  0E00               	movlw	0
 13709   004BD8  6E0A               	movwf	___fleq@ff2^0,c
 13710   004BDA  0E00               	movlw	0
 13711   004BDC  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13712   004BDE  0E00               	movlw	0
 13713   004BE0  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13714   004BE2  0E00               	movlw	0
 13715   004BE4  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13716   004BE6                     l6912:
 13717   004BE6  500A               	movf	___fleq@ff2^0,w,c
 13718   004BE8  1806               	xorwf	___fleq@ff1^0,w,c
 13719   004BEA  E10F               	bnz	u8000
 13720   004BEC  500B               	movf	(___fleq@ff2+1)^0,w,c
 13721   004BEE  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13722   004BF0  E10C               	bnz	u8000
 13723   004BF2  500C               	movf	(___fleq@ff2+2)^0,w,c
 13724   004BF4  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13725   004BF6  E109               	bnz	u8000
 13726   004BF8  500D               	movf	(___fleq@ff2+3)^0,w,c
 13727   004BFA  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13728   004BFC  B4D8               	btfsc	status,2,c
 13729   004BFE  EF03  F026         	goto	u8001
 13730   004C02  EF05  F026         	goto	u8000
 13731   004C06                     u8001:
 13732   004C06  EF08  F026         	goto	l6916
 13733   004C0A                     u8000:
 13734   004C0A  90D8               	bcf	status,0,c
 13735   004C0C  EF09  F026         	goto	l969
 13736   004C10                     l6916:
 13737   004C10  80D8               	bsf	status,0,c
 13738   004C12                     l969:
 13739   004C12  0012               	return		;funcret
 13740   004C14                     __end_of___fleq:
 13741                           	callstack 0
 13742                           
 13743 ;; *************** function ___fldiv *****************
 13744 ;; Defined at:
 13745 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  b               4   44[COMRAM] unsigned char 
 13748 ;;  a               4   48[COMRAM] unsigned char 
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;  grs             4   63[COMRAM] unsigned long 
 13751 ;;  rem             4   56[COMRAM] unsigned long 
 13752 ;;  new_exp         2   61[COMRAM] short 
 13753 ;;  aexp            1   68[COMRAM] unsigned char 
 13754 ;;  bexp            1   67[COMRAM] unsigned char 
 13755 ;;  sign            1   60[COMRAM] unsigned char 
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  4   44[COMRAM] unsigned char 
 13758 ;; Registers used:
 13759 ;;		wreg, status,2, status,0
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13769 ;;Total ram usage:       25 bytes
 13770 ;; Hardware stack levels used: 1
 13771 ;; Hardware stack levels required when called: 1
 13772 ;; This function calls:
 13773 ;;		Nothing
 13774 ;; This function is called by:
 13775 ;;		_runDAC
 13776 ;;		_runADC
 13777 ;;		_efgtoa
 13778 ;; This function uses a non-reentrant model
 13779 ;;
 13780                           
 13781                           	psect	text49
 13782   002A20                     __ptext49:
 13783                           	callstack 0
 13784   002A20                     ___fldiv:
 13785                           	callstack 24
 13786   002A20  5030               	movf	(___fldiv@b+3)^0,w,c
 13787   002A22  0B80               	andlw	128
 13788   002A24  6E3D               	movwf	___fldiv@sign^0,c
 13789   002A26  5030               	movf	(___fldiv@b+3)^0,w,c
 13790   002A28  2430               	addwf	(___fldiv@b+3)^0,w,c
 13791   002A2A  6E44               	movwf	___fldiv@bexp^0,c
 13792   002A2C  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13793   002A2E  EF1B  F015         	goto	u7441
 13794   002A32  EF1D  F015         	goto	u7440
 13795   002A36                     u7441:
 13796   002A36  EF1E  F015         	goto	l6556
 13797   002A3A                     u7440:
 13798   002A3A  8044               	bsf	___fldiv@bexp^0,0,c
 13799   002A3C                     l6556:
 13800   002A3C  5044               	movf	___fldiv@bexp^0,w,c
 13801   002A3E  B4D8               	btfsc	status,2,c
 13802   002A40  EF24  F015         	goto	u7451
 13803   002A44  EF26  F015         	goto	u7450
 13804   002A48                     u7451:
 13805   002A48  EF3B  F015         	goto	l6566
 13806   002A4C                     u7450:
 13807   002A4C  2844               	incf	___fldiv@bexp^0,w,c
 13808   002A4E  A4D8               	btfss	status,2,c
 13809   002A50  EF2C  F015         	goto	u7461
 13810   002A54  EF2E  F015         	goto	u7460
 13811   002A58                     u7461:
 13812   002A58  EF36  F015         	goto	l6562
 13813   002A5C                     u7460:
 13814   002A5C  0E00               	movlw	0
 13815   002A5E  6E2D               	movwf	___fldiv@b^0,c
 13816   002A60  0E00               	movlw	0
 13817   002A62  6E2E               	movwf	(___fldiv@b+1)^0,c
 13818   002A64  0E00               	movlw	0
 13819   002A66  6E2F               	movwf	(___fldiv@b+2)^0,c
 13820   002A68  0E00               	movlw	0
 13821   002A6A  6E30               	movwf	(___fldiv@b+3)^0,c
 13822   002A6C                     l6562:
 13823   002A6C  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13824   002A6E  0E00               	movlw	0
 13825   002A70  6E30               	movwf	(___fldiv@b+3)^0,c
 13826   002A72  EF43  F015         	goto	l6568
 13827   002A76                     l6566:
 13828   002A76  0E00               	movlw	0
 13829   002A78  6E2D               	movwf	___fldiv@b^0,c
 13830   002A7A  0E00               	movlw	0
 13831   002A7C  6E2E               	movwf	(___fldiv@b+1)^0,c
 13832   002A7E  0E00               	movlw	0
 13833   002A80  6E2F               	movwf	(___fldiv@b+2)^0,c
 13834   002A82  0E00               	movlw	0
 13835   002A84  6E30               	movwf	(___fldiv@b+3)^0,c
 13836   002A86                     l6568:
 13837   002A86  5034               	movf	(___fldiv@a+3)^0,w,c
 13838   002A88  0B80               	andlw	128
 13839   002A8A  1A3D               	xorwf	___fldiv@sign^0,f,c
 13840   002A8C  5034               	movf	(___fldiv@a+3)^0,w,c
 13841   002A8E  2434               	addwf	(___fldiv@a+3)^0,w,c
 13842   002A90  6E45               	movwf	___fldiv@aexp^0,c
 13843   002A92  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13844   002A94  EF4E  F015         	goto	u7471
 13845   002A98  EF50  F015         	goto	u7470
 13846   002A9C                     u7471:
 13847   002A9C  EF51  F015         	goto	l6576
 13848   002AA0                     u7470:
 13849   002AA0  8045               	bsf	___fldiv@aexp^0,0,c
 13850   002AA2                     l6576:
 13851   002AA2  5045               	movf	___fldiv@aexp^0,w,c
 13852   002AA4  B4D8               	btfsc	status,2,c
 13853   002AA6  EF57  F015         	goto	u7481
 13854   002AAA  EF59  F015         	goto	u7480
 13855   002AAE                     u7481:
 13856   002AAE  EF6E  F015         	goto	l6586
 13857   002AB2                     u7480:
 13858   002AB2  2845               	incf	___fldiv@aexp^0,w,c
 13859   002AB4  A4D8               	btfss	status,2,c
 13860   002AB6  EF5F  F015         	goto	u7491
 13861   002ABA  EF61  F015         	goto	u7490
 13862   002ABE                     u7491:
 13863   002ABE  EF69  F015         	goto	l6582
 13864   002AC2                     u7490:
 13865   002AC2  0E00               	movlw	0
 13866   002AC4  6E31               	movwf	___fldiv@a^0,c
 13867   002AC6  0E00               	movlw	0
 13868   002AC8  6E32               	movwf	(___fldiv@a+1)^0,c
 13869   002ACA  0E00               	movlw	0
 13870   002ACC  6E33               	movwf	(___fldiv@a+2)^0,c
 13871   002ACE  0E00               	movlw	0
 13872   002AD0  6E34               	movwf	(___fldiv@a+3)^0,c
 13873   002AD2                     l6582:
 13874   002AD2  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13875   002AD4  0E00               	movlw	0
 13876   002AD6  6E34               	movwf	(___fldiv@a+3)^0,c
 13877   002AD8  EF76  F015         	goto	l6588
 13878   002ADC                     l6586:
 13879   002ADC  0E00               	movlw	0
 13880   002ADE  6E31               	movwf	___fldiv@a^0,c
 13881   002AE0  0E00               	movlw	0
 13882   002AE2  6E32               	movwf	(___fldiv@a+1)^0,c
 13883   002AE4  0E00               	movlw	0
 13884   002AE6  6E33               	movwf	(___fldiv@a+2)^0,c
 13885   002AE8  0E00               	movlw	0
 13886   002AEA  6E34               	movwf	(___fldiv@a+3)^0,c
 13887   002AEC                     l6588:
 13888   002AEC  5031               	movf	___fldiv@a^0,w,c
 13889   002AEE  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13890   002AF0  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13891   002AF2  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13892   002AF4  A4D8               	btfss	status,2,c
 13893   002AF6  EF7F  F015         	goto	u7501
 13894   002AFA  EF81  F015         	goto	u7500
 13895   002AFE                     u7501:
 13896   002AFE  EF99  F015         	goto	l6600
 13897   002B02                     u7500:
 13898   002B02  0E00               	movlw	0
 13899   002B04  6E2D               	movwf	___fldiv@b^0,c
 13900   002B06  0E00               	movlw	0
 13901   002B08  6E2E               	movwf	(___fldiv@b+1)^0,c
 13902   002B0A  0E00               	movlw	0
 13903   002B0C  6E2F               	movwf	(___fldiv@b+2)^0,c
 13904   002B0E  0E00               	movlw	0
 13905   002B10  6E30               	movwf	(___fldiv@b+3)^0,c
 13906   002B12  0E80               	movlw	128
 13907   002B14  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13908   002B16  0E7F               	movlw	127
 13909   002B18  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13910   002B1A                     l6594:
 13911   002B1A  503D               	movf	___fldiv@sign^0,w,c
 13912   002B1C  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13913   002B1E  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13914   002B22  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13915   002B26  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13916   002B2A  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13917   002B2E  EFDC  F016         	goto	l1292
 13918   002B32                     l6600:
 13919   002B32  5044               	movf	___fldiv@bexp^0,w,c
 13920   002B34  A4D8               	btfss	status,2,c
 13921   002B36  EF9F  F015         	goto	u7511
 13922   002B3A  EFA1  F015         	goto	u7510
 13923   002B3E                     u7511:
 13924   002B3E  EFAB  F015         	goto	l6608
 13925   002B42                     u7510:
 13926   002B42  0E00               	movlw	0
 13927   002B44  6E2D               	movwf	?___fldiv^0,c
 13928   002B46  0E00               	movlw	0
 13929   002B48  6E2E               	movwf	(?___fldiv+1)^0,c
 13930   002B4A  0E00               	movlw	0
 13931   002B4C  6E2F               	movwf	(?___fldiv+2)^0,c
 13932   002B4E  0E00               	movlw	0
 13933   002B50  6E30               	movwf	(?___fldiv+3)^0,c
 13934   002B52  EFDC  F016         	goto	l1292
 13935   002B56                     l6608:
 13936   002B56  5045               	movf	___fldiv@aexp^0,w,c
 13937   002B58  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13938   002B5C  6A36               	clrf	(??___fldiv+1)^0,c
 13939   002B5E  5E35               	subwf	??___fldiv^0,f,c
 13940   002B60  0E00               	movlw	0
 13941   002B62  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13942   002B64  0E7F               	movlw	127
 13943   002B66  2435               	addwf	??___fldiv^0,w,c
 13944   002B68  6E3E               	movwf	___fldiv@new_exp^0,c
 13945   002B6A  0E00               	movlw	0
 13946   002B6C  2036               	addwfc	(??___fldiv+1)^0,w,c
 13947   002B6E  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13948   002B70  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13949   002B74  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13950   002B78  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13951   002B7C  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13952   002B80  0E00               	movlw	0
 13953   002B82  6E2D               	movwf	___fldiv@b^0,c
 13954   002B84  0E00               	movlw	0
 13955   002B86  6E2E               	movwf	(___fldiv@b+1)^0,c
 13956   002B88  0E00               	movlw	0
 13957   002B8A  6E2F               	movwf	(___fldiv@b+2)^0,c
 13958   002B8C  0E00               	movlw	0
 13959   002B8E  6E30               	movwf	(___fldiv@b+3)^0,c
 13960   002B90  0E00               	movlw	0
 13961   002B92  6E40               	movwf	___fldiv@grs^0,c
 13962   002B94  0E00               	movlw	0
 13963   002B96  6E41               	movwf	(___fldiv@grs+1)^0,c
 13964   002B98  0E00               	movlw	0
 13965   002B9A  6E42               	movwf	(___fldiv@grs+2)^0,c
 13966   002B9C  0E00               	movlw	0
 13967   002B9E  6E43               	movwf	(___fldiv@grs+3)^0,c
 13968   002BA0  0E00               	movlw	0
 13969   002BA2  6E45               	movwf	___fldiv@aexp^0,c
 13970   002BA4  EF0C  F016         	goto	l1294
 13971   002BA8                     l6618:
 13972   002BA8  5045               	movf	___fldiv@aexp^0,w,c
 13973   002BAA  B4D8               	btfsc	status,2,c
 13974   002BAC  EFDA  F015         	goto	u7521
 13975   002BB0  EFDC  F015         	goto	u7520
 13976   002BB4                     u7521:
 13977   002BB4  EFF3  F015         	goto	l6626
 13978   002BB8                     u7520:
 13979   002BB8  90D8               	bcf	status,0,c
 13980   002BBA  3639               	rlcf	___fldiv@rem^0,f,c
 13981   002BBC  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13982   002BBE  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13983   002BC0  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13984   002BC2  90D8               	bcf	status,0,c
 13985   002BC4  362D               	rlcf	___fldiv@b^0,f,c
 13986   002BC6  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13987   002BC8  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13988   002BCA  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13989   002BCC  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13990   002BCE  EFEB  F015         	goto	u7531
 13991   002BD2  EFED  F015         	goto	u7530
 13992   002BD6                     u7531:
 13993   002BD6  EFEE  F015         	goto	l1297
 13994   002BDA                     u7530:
 13995   002BDA  802D               	bsf	___fldiv@b^0,0,c
 13996   002BDC                     l1297:
 13997   002BDC  90D8               	bcf	status,0,c
 13998   002BDE  3640               	rlcf	___fldiv@grs^0,f,c
 13999   002BE0  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 14000   002BE2  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 14001   002BE4  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 14002   002BE6                     l6626:
 14003   002BE6  5031               	movf	___fldiv@a^0,w,c
 14004   002BE8  5C39               	subwf	___fldiv@rem^0,w,c
 14005   002BEA  5032               	movf	(___fldiv@a+1)^0,w,c
 14006   002BEC  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 14007   002BEE  5033               	movf	(___fldiv@a+2)^0,w,c
 14008   002BF0  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 14009   002BF2  5034               	movf	(___fldiv@a+3)^0,w,c
 14010   002BF4  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 14011   002BF6  A0D8               	btfss	status,0,c
 14012   002BF8  EF00  F016         	goto	u7541
 14013   002BFC  EF02  F016         	goto	u7540
 14014   002C00                     u7541:
 14015   002C00  EF0B  F016         	goto	l6632
 14016   002C04                     u7540:
 14017   002C04  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 14018   002C06  5031               	movf	___fldiv@a^0,w,c
 14019   002C08  5E39               	subwf	___fldiv@rem^0,f,c
 14020   002C0A  5032               	movf	(___fldiv@a+1)^0,w,c
 14021   002C0C  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 14022   002C0E  5033               	movf	(___fldiv@a+2)^0,w,c
 14023   002C10  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 14024   002C12  5034               	movf	(___fldiv@a+3)^0,w,c
 14025   002C14  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 14026   002C16                     l6632:
 14027   002C16  2A45               	incf	___fldiv@aexp^0,f,c
 14028   002C18                     l1294:
 14029   002C18  0E19               	movlw	25
 14030   002C1A  6445               	cpfsgt	___fldiv@aexp^0,c
 14031   002C1C  EF12  F016         	goto	u7551
 14032   002C20  EF14  F016         	goto	u7550
 14033   002C24                     u7551:
 14034   002C24  EFD4  F015         	goto	l6618
 14035   002C28                     u7550:
 14036   002C28  5039               	movf	___fldiv@rem^0,w,c
 14037   002C2A  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 14038   002C2C  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 14039   002C2E  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 14040   002C30  B4D8               	btfsc	status,2,c
 14041   002C32  EF1D  F016         	goto	u7561
 14042   002C36  EF1F  F016         	goto	u7560
 14043   002C3A                     u7561:
 14044   002C3A  EF37  F016         	goto	l6644
 14045   002C3E                     u7560:
 14046   002C3E  8040               	bsf	___fldiv@grs^0,0,c
 14047   002C40  EF37  F016         	goto	l6644
 14048   002C44                     l6638:
 14049   002C44  90D8               	bcf	status,0,c
 14050   002C46  362D               	rlcf	___fldiv@b^0,f,c
 14051   002C48  362E               	rlcf	(___fldiv@b+1)^0,f,c
 14052   002C4A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 14053   002C4C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 14054   002C4E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 14055   002C50  EF2C  F016         	goto	u7571
 14056   002C54  EF2E  F016         	goto	u7570
 14057   002C58                     u7571:
 14058   002C58  EF2F  F016         	goto	l1303
 14059   002C5C                     u7570:
 14060   002C5C  802D               	bsf	___fldiv@b^0,0,c
 14061   002C5E                     l1303:
 14062   002C5E  90D8               	bcf	status,0,c
 14063   002C60  3640               	rlcf	___fldiv@grs^0,f,c
 14064   002C62  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 14065   002C64  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 14066   002C66  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 14067   002C68  063E               	decf	___fldiv@new_exp^0,f,c
 14068   002C6A  A0D8               	btfss	status,0,c
 14069   002C6C  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 14070   002C6E                     l6644:
 14071   002C6E  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 14072   002C70  EF3C  F016         	goto	u7581
 14073   002C74  EF3E  F016         	goto	u7580
 14074   002C78                     u7581:
 14075   002C78  EF22  F016         	goto	l6638
 14076   002C7C                     u7580:
 14077   002C7C  0E00               	movlw	0
 14078   002C7E  6E45               	movwf	___fldiv@aexp^0,c
 14079   002C80  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 14080   002C82  EF45  F016         	goto	u7591
 14081   002C86  EF47  F016         	goto	u7590
 14082   002C8A                     u7591:
 14083   002C8A  EF6B  F016         	goto	l1305
 14084   002C8E                     u7590:
 14085   002C8E  0EFF               	movlw	255
 14086   002C90  1440               	andwf	___fldiv@grs^0,w,c
 14087   002C92  6E35               	movwf	??___fldiv^0,c
 14088   002C94  0EFF               	movlw	255
 14089   002C96  1441               	andwf	(___fldiv@grs+1)^0,w,c
 14090   002C98  6E36               	movwf	(??___fldiv+1)^0,c
 14091   002C9A  0EFF               	movlw	255
 14092   002C9C  1442               	andwf	(___fldiv@grs+2)^0,w,c
 14093   002C9E  6E37               	movwf	(??___fldiv+2)^0,c
 14094   002CA0  0E7F               	movlw	127
 14095   002CA2  1443               	andwf	(___fldiv@grs+3)^0,w,c
 14096   002CA4  6E38               	movwf	(??___fldiv+3)^0,c
 14097   002CA6  5035               	movf	??___fldiv^0,w,c
 14098   002CA8  1036               	iorwf	(??___fldiv+1)^0,w,c
 14099   002CAA  1037               	iorwf	(??___fldiv+2)^0,w,c
 14100   002CAC  1038               	iorwf	(??___fldiv+3)^0,w,c
 14101   002CAE  B4D8               	btfsc	status,2,c
 14102   002CB0  EF5C  F016         	goto	u7601
 14103   002CB4  EF5E  F016         	goto	u7600
 14104   002CB8                     u7601:
 14105   002CB8  EF62  F016         	goto	l1306
 14106   002CBC                     u7600:
 14107   002CBC                     l6652:
 14108   002CBC  0E01               	movlw	1
 14109   002CBE  6E45               	movwf	___fldiv@aexp^0,c
 14110   002CC0  EF6B  F016         	goto	l1305
 14111   002CC4                     l1306:
 14112   002CC4  A02D               	btfss	___fldiv@b^0,0,c
 14113   002CC6  EF67  F016         	goto	u7611
 14114   002CCA  EF69  F016         	goto	u7610
 14115   002CCE                     u7611:
 14116   002CCE  EF6B  F016         	goto	l1305
 14117   002CD2                     u7610:
 14118   002CD2  EF5E  F016         	goto	l6652
 14119   002CD6                     l1305:
 14120   002CD6  5045               	movf	___fldiv@aexp^0,w,c
 14121   002CD8  B4D8               	btfsc	status,2,c
 14122   002CDA  EF71  F016         	goto	u7621
 14123   002CDE  EF73  F016         	goto	u7620
 14124   002CE2                     u7621:
 14125   002CE2  EF97  F016         	goto	l6664
 14126   002CE6                     u7620:
 14127   002CE6  0E01               	movlw	1
 14128   002CE8  262D               	addwf	___fldiv@b^0,f,c
 14129   002CEA  0E00               	movlw	0
 14130   002CEC  222E               	addwfc	(___fldiv@b+1)^0,f,c
 14131   002CEE  222F               	addwfc	(___fldiv@b+2)^0,f,c
 14132   002CF0  2230               	addwfc	(___fldiv@b+3)^0,f,c
 14133   002CF2  A030               	btfss	(___fldiv@b+3)^0,0,c
 14134   002CF4  EF7E  F016         	goto	u7631
 14135   002CF8  EF80  F016         	goto	u7630
 14136   002CFC                     u7631:
 14137   002CFC  EF97  F016         	goto	l6664
 14138   002D00                     u7630:
 14139   002D00  C02D  F035         	movff	___fldiv@b,??___fldiv
 14140   002D04  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 14141   002D08  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 14142   002D0C  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 14143   002D10  3438               	rlcf	(??___fldiv+3)^0,w,c
 14144   002D12  3238               	rrcf	(??___fldiv+3)^0,f,c
 14145   002D14  3237               	rrcf	(??___fldiv+2)^0,f,c
 14146   002D16  3236               	rrcf	(??___fldiv+1)^0,f,c
 14147   002D18  3235               	rrcf	??___fldiv^0,f,c
 14148   002D1A  C035  F02D         	movff	??___fldiv,___fldiv@b
 14149   002D1E  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 14150   002D22  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 14151   002D26  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 14152   002D2A  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 14153   002D2C  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 14154   002D2E                     l6664:
 14155   002D2E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14156   002D30  EFA2  F016         	goto	u7641
 14157   002D34  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14158   002D36  E108               	bnz	u7640
 14159   002D38  283E               	incf	___fldiv@new_exp^0,w,c
 14160   002D3A  A0D8               	btfss	status,0,c
 14161   002D3C  EFA2  F016         	goto	u7641
 14162   002D40  EFA4  F016         	goto	u7640
 14163   002D44                     u7641:
 14164   002D44  EFAF  F016         	goto	l6668
 14165   002D48                     u7640:
 14166   002D48  0E00               	movlw	0
 14167   002D4A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14168   002D4C  683E               	setf	___fldiv@new_exp^0,c
 14169   002D4E  0E00               	movlw	0
 14170   002D50  6E2D               	movwf	___fldiv@b^0,c
 14171   002D52  0E00               	movlw	0
 14172   002D54  6E2E               	movwf	(___fldiv@b+1)^0,c
 14173   002D56  0E00               	movlw	0
 14174   002D58  6E2F               	movwf	(___fldiv@b+2)^0,c
 14175   002D5A  0E00               	movlw	0
 14176   002D5C  6E30               	movwf	(___fldiv@b+3)^0,c
 14177   002D5E                     l6668:
 14178   002D5E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14179   002D60  EFBC  F016         	goto	u7650
 14180   002D64  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 14181   002D66  E106               	bnz	u7651
 14182   002D68  043E               	decf	___fldiv@new_exp^0,w,c
 14183   002D6A  B0D8               	btfsc	status,0,c
 14184   002D6C  EFBA  F016         	goto	u7651
 14185   002D70  EFBC  F016         	goto	u7650
 14186   002D74                     u7651:
 14187   002D74  EFCA  F016         	goto	l6672
 14188   002D78                     u7650:
 14189   002D78  0E00               	movlw	0
 14190   002D7A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 14191   002D7C  0E00               	movlw	0
 14192   002D7E  6E3E               	movwf	___fldiv@new_exp^0,c
 14193   002D80  0E00               	movlw	0
 14194   002D82  6E2D               	movwf	___fldiv@b^0,c
 14195   002D84  0E00               	movlw	0
 14196   002D86  6E2E               	movwf	(___fldiv@b+1)^0,c
 14197   002D88  0E00               	movlw	0
 14198   002D8A  6E2F               	movwf	(___fldiv@b+2)^0,c
 14199   002D8C  0E00               	movlw	0
 14200   002D8E  6E30               	movwf	(___fldiv@b+3)^0,c
 14201   002D90  0E00               	movlw	0
 14202   002D92  6E3D               	movwf	___fldiv@sign^0,c
 14203   002D94                     l6672:
 14204   002D94  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 14205   002D98  A044               	btfss	___fldiv@bexp^0,0,c
 14206   002D9A  EFD1  F016         	goto	u7661
 14207   002D9E  EFD3  F016         	goto	u7660
 14208   002DA2                     u7661:
 14209   002DA2  EFD6  F016         	goto	l6678
 14210   002DA6                     u7660:
 14211   002DA6  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 14212   002DA8  EFD7  F016         	goto	l6680
 14213   002DAC                     l6678:
 14214   002DAC  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 14215   002DAE                     l6680:
 14216   002DAE  90D8               	bcf	status,0,c
 14217   002DB0  3044               	rrcf	___fldiv@bexp^0,w,c
 14218   002DB2  6E30               	movwf	(___fldiv@b+3)^0,c
 14219   002DB4  EF8D  F015         	goto	l6594
 14220   002DB8                     l1292:
 14221   002DB8  0012               	return		;funcret
 14222   002DBA                     __end_of___fldiv:
 14223                           	callstack 0
 14224                           
 14225 ;; *************** function _dtoa *****************
 14226 ;; Defined at:
 14227 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 14230 ;;		 -> NULL(0), sprintf@f(12), 
 14231 ;;  d               2   33[COMRAM] int 
 14232 ;; Auto vars:     Size  Location     Type
 14233 ;;  i               2   42[COMRAM] int 
 14234 ;;  p               2   39[COMRAM] int 
 14235 ;;  w               2   37[COMRAM] int 
 14236 ;;  s               1   41[COMRAM] unsigned char 
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      void 
 14239 ;; Registers used:
 14240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14247 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14249 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14250 ;;Total ram usage:       13 bytes
 14251 ;; Hardware stack levels used: 1
 14252 ;; Hardware stack levels required when called: 5
 14253 ;; This function calls:
 14254 ;;		___awdiv
 14255 ;;		___awmod
 14256 ;;		_abs
 14257 ;;		_pad
 14258 ;; This function is called by:
 14259 ;;		_vfpfcnvrt
 14260 ;; This function uses a non-reentrant model
 14261 ;;
 14262                           
 14263                           	psect	text50
 14264   003C4C                     __ptext50:
 14265                           	callstack 0
 14266   003C4C                     _dtoa:
 14267                           	callstack 21
 14268   003C4C                     
 14269                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14270   003C4C  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14271   003C4E  EF2B  F01E         	goto	u8451
 14272   003C52  EF2E  F01E         	goto	u8450
 14273   003C56                     u8451:
 14274   003C56  0E01               	movlw	1
 14275   003C58  EF2F  F01E         	goto	u8460
 14276   003C5C                     u8450:
 14277   003C5C  0E00               	movlw	0
 14278   003C5E                     u8460:
 14279   003C5E  6E2A               	movwf	dtoa@s^0,c
 14280                           
 14281                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14282   003C60  BE58               	btfsc	(_prec+1)^0,7,c
 14283   003C62  EF37  F01E         	goto	u8470
 14284   003C66  EF35  F01E         	goto	u8471
 14285   003C6A                     u8471:
 14286   003C6A  EF3D  F01E         	goto	l1427
 14287   003C6E                     u8470:
 14288   003C6E  0E00               	movlw	0
 14289   003C70  6E29               	movwf	(dtoa@p+1)^0,c
 14290   003C72  0E01               	movlw	1
 14291   003C74  6E28               	movwf	dtoa@p^0,c
 14292   003C76  EF41  F01E         	goto	l1429
 14293   003C7A                     l1427:
 14294   003C7A  C057  F028         	movff	_prec,dtoa@p
 14295   003C7E  C058  F029         	movff	_prec+1,dtoa@p+1
 14296   003C82                     l1429:
 14297                           
 14298                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14299   003C82  C055  F026         	movff	_width,dtoa@w
 14300   003C86  C056  F027         	movff	_width+1,dtoa@w+1
 14301   003C8A                     
 14302                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14303   003C8A  502A               	movf	dtoa@s^0,w,c
 14304   003C8C  B4D8               	btfsc	status,2,c
 14305   003C8E  EF4B  F01E         	goto	u8481
 14306   003C92  EF4D  F01E         	goto	u8480
 14307   003C96                     u8481:
 14308   003C96  EF64  F01E         	goto	l1430
 14309   003C9A                     u8480:
 14310   003C9A                     
 14311                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14312   003C9A  0626               	decf	dtoa@w^0,f,c
 14313   003C9C  A0D8               	btfss	status,0,c
 14314   003C9E  0627               	decf	(dtoa@w+1)^0,f,c
 14315   003CA0                     
 14316                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14317   003CA0  502A               	movf	dtoa@s^0,w,c
 14318   003CA2  A4D8               	btfss	status,2,c
 14319   003CA4  EF56  F01E         	goto	u8491
 14320   003CA8  EF58  F01E         	goto	u8490
 14321   003CAC                     u8491:
 14322   003CAC  EF5E  F01E         	goto	l7138
 14323   003CB0                     u8490:
 14324   003CB0  0E00               	movlw	0
 14325   003CB2  6E25               	movwf	(_dtoa$4043+1)^0,c
 14326   003CB4  0E2B               	movlw	43
 14327   003CB6  6E24               	movwf	_dtoa$4043^0,c
 14328   003CB8  EF62  F01E         	goto	l7140
 14329   003CBC                     l7138:
 14330   003CBC  0E00               	movlw	0
 14331   003CBE  6E25               	movwf	(_dtoa$4043+1)^0,c
 14332   003CC0  0E2D               	movlw	45
 14333   003CC2  6E24               	movwf	_dtoa$4043^0,c
 14334   003CC4                     l7140:
 14335   003CC4  C024  F02A         	movff	_dtoa$4043,dtoa@s
 14336   003CC8                     l1430:
 14337                           
 14338                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14339   003CC8  0E00               	movlw	0
 14340   003CCA  6E2C               	movwf	(dtoa@i+1)^0,c
 14341   003CCC  0E4F               	movlw	79
 14342   003CCE  6E2B               	movwf	dtoa@i^0,c
 14343   003CD0                     
 14344                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14345   003CD0  0E00               	movlw	0
 14346   003CD2  0101               	movlb	1	; () banked
 14347   003CD4  6F76               	movwf	(_dbuf+79)& (0+255),b
 14348                           
 14349                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14350   003CD6  EF9D  F01E         	goto	l7154
 14351   003CDA                     l7144:
 14352                           
 14353                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14354   003CDA  062B               	decf	dtoa@i^0,f,c
 14355   003CDC  A0D8               	btfss	status,0,c
 14356   003CDE  062C               	decf	(dtoa@i+1)^0,f,c
 14357   003CE0                     
 14358                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14359   003CE0  0E27               	movlw	low _dbuf
 14360   003CE2  242B               	addwf	dtoa@i^0,w,c
 14361   003CE4  6ED9               	movwf	fsr2l,c
 14362   003CE6  0E01               	movlw	high _dbuf
 14363   003CE8  202C               	addwfc	(dtoa@i+1)^0,w,c
 14364   003CEA  6EDA               	movwf	fsr2h,c
 14365   003CEC  C022  F006         	movff	dtoa@d,___awmod@dividend
 14366   003CF0  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14367   003CF4  0E00               	movlw	0
 14368   003CF6  6E09               	movwf	(___awmod@divisor+1)^0,c
 14369   003CF8  0E0A               	movlw	10
 14370   003CFA  6E08               	movwf	___awmod@divisor^0,c
 14371   003CFC  EC06  F025         	call	___awmod	;wreg free
 14372   003D00  C006  F00C         	movff	?___awmod,abs@a
 14373   003D04  C007  F00D         	movff	?___awmod+1,abs@a+1
 14374   003D08  EC12  F029         	call	_abs	;wreg free
 14375   003D0C  500C               	movf	?_abs^0,w,c
 14376   003D0E  0F30               	addlw	48
 14377   003D10  6EDF               	movwf	indf2,c
 14378   003D12                     
 14379                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14380   003D12  0628               	decf	dtoa@p^0,f,c
 14381   003D14  A0D8               	btfss	status,0,c
 14382   003D16  0629               	decf	(dtoa@p+1)^0,f,c
 14383   003D18                     
 14384                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14385   003D18  0626               	decf	dtoa@w^0,f,c
 14386   003D1A  A0D8               	btfss	status,0,c
 14387   003D1C  0627               	decf	(dtoa@w+1)^0,f,c
 14388   003D1E                     
 14389                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14390   003D1E  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14391   003D22  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14392   003D26  0E00               	movlw	0
 14393   003D28  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14394   003D2A  0E0A               	movlw	10
 14395   003D2C  6E1A               	movwf	___awdiv@divisor^0,c
 14396   003D2E  EC4B  F024         	call	___awdiv	;wreg free
 14397   003D32  C018  F022         	movff	?___awdiv,dtoa@d
 14398   003D36  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14399   003D3A                     l7154:
 14400                           
 14401                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14402   003D3A  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14403   003D3C  EFA8  F01E         	goto	u8501
 14404   003D40  502C               	movf	(dtoa@i+1)^0,w,c
 14405   003D42  E108               	bnz	u8500
 14406   003D44  042B               	decf	dtoa@i^0,w,c
 14407   003D46  A0D8               	btfss	status,0,c
 14408   003D48  EFA8  F01E         	goto	u8501
 14409   003D4C  EFAA  F01E         	goto	u8500
 14410   003D50                     u8501:
 14411   003D50  EFC0  F01E         	goto	l7160
 14412   003D54                     u8500:
 14413   003D54  5022               	movf	dtoa@d^0,w,c
 14414   003D56  1023               	iorwf	(dtoa@d+1)^0,w,c
 14415   003D58  A4D8               	btfss	status,2,c
 14416   003D5A  EFB1  F01E         	goto	u8511
 14417   003D5E  EFB3  F01E         	goto	u8510
 14418   003D62                     u8511:
 14419   003D62  EF6D  F01E         	goto	l7144
 14420   003D66                     u8510:
 14421   003D66  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14422   003D68  EFC0  F01E         	goto	u8520
 14423   003D6C  5029               	movf	(dtoa@p+1)^0,w,c
 14424   003D6E  E106               	bnz	u8521
 14425   003D70  0428               	decf	dtoa@p^0,w,c
 14426   003D72  B0D8               	btfsc	status,0,c
 14427   003D74  EFBE  F01E         	goto	u8521
 14428   003D78  EFC0  F01E         	goto	u8520
 14429   003D7C                     u8521:
 14430   003D7C  EF6D  F01E         	goto	l7144
 14431   003D80                     u8520:
 14432   003D80                     l7160:
 14433                           
 14434                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14435   003D80  502A               	movf	dtoa@s^0,w,c
 14436   003D82  B4D8               	btfsc	status,2,c
 14437   003D84  EFC6  F01E         	goto	u8531
 14438   003D88  EFC8  F01E         	goto	u8530
 14439   003D8C                     u8531:
 14440   003D8C  EFD3  F01E         	goto	l7166
 14441   003D90                     u8530:
 14442   003D90                     
 14443                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14444   003D90  062B               	decf	dtoa@i^0,f,c
 14445   003D92  A0D8               	btfss	status,0,c
 14446   003D94  062C               	decf	(dtoa@i+1)^0,f,c
 14447   003D96                     
 14448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14449   003D96  0E27               	movlw	low _dbuf
 14450   003D98  242B               	addwf	dtoa@i^0,w,c
 14451   003D9A  6ED9               	movwf	fsr2l,c
 14452   003D9C  0E01               	movlw	high _dbuf
 14453   003D9E  202C               	addwfc	(dtoa@i+1)^0,w,c
 14454   003DA0  6EDA               	movwf	fsr2h,c
 14455   003DA2  C02A  FFDF         	movff	dtoa@s,indf2
 14456   003DA6                     l7166:
 14457                           
 14458                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14459   003DA6  C020  F017         	movff	dtoa@fp,pad@fp
 14460   003DAA  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14461   003DAE  0E27               	movlw	low _dbuf
 14462   003DB0  242B               	addwf	dtoa@i^0,w,c
 14463   003DB2  6E19               	movwf	pad@buf^0,c
 14464   003DB4  0E01               	movlw	high _dbuf
 14465   003DB6  202C               	addwfc	(dtoa@i+1)^0,w,c
 14466   003DB8  6E1A               	movwf	(pad@buf+1)^0,c
 14467   003DBA  C026  F01B         	movff	dtoa@w,pad@p
 14468   003DBE  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14469   003DC2  EC0A  F026         	call	_pad	;wreg free
 14470   003DC6  0012               	return		;funcret
 14471   003DC8                     __end_of_dtoa:
 14472                           	callstack 0
 14473                           
 14474 ;; *************** function _pad *****************
 14475 ;; Defined at:
 14476 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14479 ;;		 -> NULL(0), sprintf@f(12), 
 14480 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14481 ;;		 -> dbuf(80), 
 14482 ;;  p               2   26[COMRAM] int 
 14483 ;; Auto vars:     Size  Location     Type
 14484 ;;  i               2   29[COMRAM] int 
 14485 ;; Return value:  Size  Location     Type
 14486 ;;                  1    wreg      void 
 14487 ;; Registers used:
 14488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14489 ;; Tracked objects:
 14490 ;;		On entry : 0/0
 14491 ;;		On exit  : 0/0
 14492 ;;		Unchanged: 0/0
 14493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14494 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14497 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14498 ;;Total ram usage:        9 bytes
 14499 ;; Hardware stack levels used: 1
 14500 ;; Hardware stack levels required when called: 4
 14501 ;; This function calls:
 14502 ;;		_fputc
 14503 ;;		_fputs
 14504 ;; This function is called by:
 14505 ;;		_dtoa
 14506 ;;		_efgtoa
 14507 ;;		_utoa
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511                           	psect	text51
 14512   004C14                     __ptext51:
 14513                           	callstack 0
 14514   004C14                     _pad:
 14515                           	callstack 21
 14516   004C14                     
 14517                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14518   004C14  A059               	btfss	_flags^0,0,c
 14519   004C16  EF0F  F026         	goto	u8201
 14520   004C1A  EF11  F026         	goto	u8200
 14521   004C1E                     u8201:
 14522   004C1E  EF1B  F026         	goto	l7036
 14523   004C22                     u8200:
 14524   004C22                     
 14525                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14526   004C22  C019  F010         	movff	pad@buf,fputs@s
 14527   004C26  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14528   004C2A  C017  F012         	movff	pad@fp,fputs@fp
 14529   004C2E  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14530   004C32  EC48  F028         	call	_fputs	;wreg free
 14531   004C36                     l7036:
 14532                           
 14533                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14534   004C36  BE1C               	btfsc	(pad@p+1)^0,7,c
 14535   004C38  EF22  F026         	goto	u8210
 14536   004C3C  EF20  F026         	goto	u8211
 14537   004C40                     u8211:
 14538   004C40  EF26  F026         	goto	l1418
 14539   004C44                     u8210:
 14540   004C44                     
 14541                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14542   004C44  0E00               	movlw	0
 14543   004C46  6E1C               	movwf	(pad@p+1)^0,c
 14544   004C48  0E00               	movlw	0
 14545   004C4A  6E1B               	movwf	pad@p^0,c
 14546   004C4C                     l1418:
 14547                           
 14548                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14549   004C4C  0E00               	movlw	0
 14550   004C4E  6E1F               	movwf	(pad@i+1)^0,c
 14551   004C50  0E00               	movlw	0
 14552   004C52  6E1E               	movwf	pad@i^0,c
 14553                           
 14554                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14555   004C54  EF38  F026         	goto	l7044
 14556   004C58                     l7040:
 14557                           
 14558                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14559   004C58  0E00               	movlw	0
 14560   004C5A  6E08               	movwf	(fputc@c+1)^0,c
 14561   004C5C  0E20               	movlw	32
 14562   004C5E  6E07               	movwf	fputc@c^0,c
 14563   004C60  C017  F009         	movff	pad@fp,fputc@fp
 14564   004C64  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14565   004C68  ECE6  F023         	call	_fputc	;wreg free
 14566   004C6C                     
 14567                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14568   004C6C  4A1E               	infsnz	pad@i^0,f,c
 14569   004C6E  2A1F               	incf	(pad@i+1)^0,f,c
 14570   004C70                     l7044:
 14571                           
 14572                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14573   004C70  501B               	movf	pad@p^0,w,c
 14574   004C72  5C1E               	subwf	pad@i^0,w,c
 14575   004C74  501F               	movf	(pad@i+1)^0,w,c
 14576   004C76  0A80               	xorlw	128
 14577   004C78  6E1D               	movwf	??_pad^0,c
 14578   004C7A  501C               	movf	(pad@p+1)^0,w,c
 14579   004C7C  0A80               	xorlw	128
 14580   004C7E  581D               	subwfb	??_pad^0,w,c
 14581   004C80  A0D8               	btfss	status,0,c
 14582   004C82  EF45  F026         	goto	u8221
 14583   004C86  EF47  F026         	goto	u8220
 14584   004C8A                     u8221:
 14585   004C8A  EF2C  F026         	goto	l7040
 14586   004C8E                     u8220:
 14587   004C8E                     
 14588                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14589   004C8E  B059               	btfsc	_flags^0,0,c
 14590   004C90  EF4C  F026         	goto	u8231
 14591   004C94  EF4E  F026         	goto	u8230
 14592   004C98                     u8231:
 14593   004C98  EF58  F026         	goto	l1423
 14594   004C9C                     u8230:
 14595   004C9C                     
 14596                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14597   004C9C  C019  F010         	movff	pad@buf,fputs@s
 14598   004CA0  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14599   004CA4  C017  F012         	movff	pad@fp,fputs@fp
 14600   004CA8  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14601   004CAC  EC48  F028         	call	_fputs	;wreg free
 14602   004CB0                     l1423:
 14603   004CB0  0012               	return		;funcret
 14604   004CB2                     __end_of_pad:
 14605                           	callstack 0
 14606                           
 14607 ;; *************** function _fputs *****************
 14608 ;; Defined at:
 14609 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14610 ;; Parameters:    Size  Location     Type
 14611 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14612 ;;		 -> dbuf(80), 
 14613 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14614 ;;		 -> NULL(0), sprintf@f(12), 
 14615 ;; Auto vars:     Size  Location     Type
 14616 ;;  i               2   20[COMRAM] int 
 14617 ;;  c               1   19[COMRAM] unsigned char 
 14618 ;; Return value:  Size  Location     Type
 14619 ;;                  2   15[COMRAM] int 
 14620 ;; Registers used:
 14621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14622 ;; Tracked objects:
 14623 ;;		On entry : 0/0
 14624 ;;		On exit  : 0/0
 14625 ;;		Unchanged: 0/0
 14626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14628 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14631 ;;Total ram usage:        7 bytes
 14632 ;; Hardware stack levels used: 1
 14633 ;; Hardware stack levels required when called: 3
 14634 ;; This function calls:
 14635 ;;		_fputc
 14636 ;; This function is called by:
 14637 ;;		_pad
 14638 ;; This function uses a non-reentrant model
 14639 ;;
 14640                           
 14641                           	psect	text52
 14642   005090                     __ptext52:
 14643                           	callstack 0
 14644   005090                     _fputs:
 14645                           	callstack 21
 14646   005090  0E00               	movlw	0
 14647   005092  6E16               	movwf	(fputs@i+1)^0,c
 14648   005094  0E00               	movlw	0
 14649   005096  6E15               	movwf	fputs@i^0,c
 14650   005098  EF59  F028         	goto	l6542
 14651   00509C                     l6538:
 14652   00509C  C014  F007         	movff	fputs@c,fputc@c
 14653   0050A0  6A08               	clrf	(fputc@c+1)^0,c
 14654   0050A2  C012  F009         	movff	fputs@fp,fputc@fp
 14655   0050A6  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14656   0050AA  ECE6  F023         	call	_fputc	;wreg free
 14657   0050AE  4A15               	infsnz	fputs@i^0,f,c
 14658   0050B0  2A16               	incf	(fputs@i+1)^0,f,c
 14659   0050B2                     l6542:
 14660   0050B2  5015               	movf	fputs@i^0,w,c
 14661   0050B4  2410               	addwf	fputs@s^0,w,c
 14662   0050B6  6ED9               	movwf	fsr2l,c
 14663   0050B8  5016               	movf	(fputs@i+1)^0,w,c
 14664   0050BA  2011               	addwfc	(fputs@s+1)^0,w,c
 14665   0050BC  6EDA               	movwf	fsr2h,c
 14666   0050BE  50DF               	movf	indf2,w,c
 14667   0050C0  6E14               	movwf	fputs@c^0,c
 14668   0050C2  5014               	movf	fputs@c^0,w,c
 14669   0050C4  A4D8               	btfss	status,2,c
 14670   0050C6  EF67  F028         	goto	u7431
 14671   0050CA  EF69  F028         	goto	u7430
 14672   0050CE                     u7431:
 14673   0050CE  EF4E  F028         	goto	l6538
 14674   0050D2                     u7430:
 14675   0050D2  0012               	return		;funcret
 14676   0050D4                     __end_of_fputs:
 14677                           	callstack 0
 14678                           
 14679 ;; *************** function _fputc *****************
 14680 ;; Defined at:
 14681 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14682 ;; Parameters:    Size  Location     Type
 14683 ;;  c               2    6[COMRAM] int 
 14684 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14685 ;;		 -> NULL(0), sprintf@f(12), 
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;		None
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  2    6[COMRAM] int 
 14690 ;; Registers used:
 14691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;Total ram usage:        9 bytes
 14702 ;; Hardware stack levels used: 1
 14703 ;; Hardware stack levels required when called: 2
 14704 ;; This function calls:
 14705 ;;		_putch
 14706 ;; This function is called by:
 14707 ;;		_pad
 14708 ;;		_stoa
 14709 ;;		_vfpfcnvrt
 14710 ;;		_fputs
 14711 ;; This function uses a non-reentrant model
 14712 ;;
 14713                           
 14714                           	psect	text53
 14715   0047CC                     __ptext53:
 14716                           	callstack 0
 14717   0047CC                     _fputc:
 14718                           	callstack 21
 14719   0047CC  5009               	movf	fputc@fp^0,w,c
 14720   0047CE  100A               	iorwf	(fputc@fp+1)^0,w,c
 14721   0047D0  B4D8               	btfsc	status,2,c
 14722   0047D2  EFED  F023         	goto	u7001
 14723   0047D6  EFEF  F023         	goto	u7000
 14724   0047DA                     u7001:
 14725   0047DA  EFF8  F023         	goto	l6324
 14726   0047DE                     u7000:
 14727   0047DE  5009               	movf	fputc@fp^0,w,c
 14728   0047E0  100A               	iorwf	(fputc@fp+1)^0,w,c
 14729   0047E2  A4D8               	btfss	status,2,c
 14730   0047E4  EFF6  F023         	goto	u7011
 14731   0047E8  EFF8  F023         	goto	u7010
 14732   0047EC                     u7011:
 14733   0047EC  EFFD  F023         	goto	l6326
 14734   0047F0                     u7010:
 14735   0047F0                     l6324:
 14736   0047F0  5007               	movf	fputc@c^0,w,c
 14737   0047F2  EC76  F029         	call	_putch
 14738   0047F6  EF4A  F024         	goto	l1652
 14739   0047FA                     l6326:
 14740   0047FA  EE20 F00A          	lfsr	2,10
 14741   0047FE  5009               	movf	fputc@fp^0,w,c
 14742   004800  26D9               	addwf	fsr2l,f,c
 14743   004802  500A               	movf	(fputc@fp+1)^0,w,c
 14744   004804  22DA               	addwfc	fsr2h,f,c
 14745   004806  50DE               	movf	postinc2,w,c
 14746   004808  10DE               	iorwf	postinc2,w,c
 14747   00480A  B4D8               	btfsc	status,2,c
 14748   00480C  EF0A  F024         	goto	u7021
 14749   004810  EF0C  F024         	goto	u7020
 14750   004814                     u7021:
 14751   004814  EF27  F024         	goto	l6330
 14752   004818                     u7020:
 14753   004818  EE20 F00A          	lfsr	2,10
 14754   00481C  5009               	movf	fputc@fp^0,w,c
 14755   00481E  26D9               	addwf	fsr2l,f,c
 14756   004820  500A               	movf	(fputc@fp+1)^0,w,c
 14757   004822  22DA               	addwfc	fsr2h,f,c
 14758   004824  EE10 F003          	lfsr	1,3
 14759   004828  5009               	movf	fputc@fp^0,w,c
 14760   00482A  26E1               	addwf	fsr1l,f,c
 14761   00482C  500A               	movf	(fputc@fp+1)^0,w,c
 14762   00482E  22E2               	addwfc	fsr1h,f,c
 14763   004830  50DE               	movf	postinc2,w,c
 14764   004832  5CE6               	subwf	postinc1,w,c
 14765   004834  50E6               	movf	postinc1,w,c
 14766   004836  0A80               	xorlw	128
 14767   004838  6E0F               	movwf	(??_fputc+4)^0,c
 14768   00483A  50DE               	movf	postinc2,w,c
 14769   00483C  0A80               	xorlw	128
 14770   00483E  580F               	subwfb	(??_fputc+4)^0,w,c
 14771   004840  B0D8               	btfsc	status,0,c
 14772   004842  EF25  F024         	goto	u7031
 14773   004846  EF27  F024         	goto	u7030
 14774   00484A                     u7031:
 14775   00484A  EF4A  F024         	goto	l1652
 14776   00484E                     u7030:
 14777   00484E                     l6330:
 14778   00484E  EE20 F003          	lfsr	2,3
 14779   004852  5009               	movf	fputc@fp^0,w,c
 14780   004854  26D9               	addwf	fsr2l,f,c
 14781   004856  500A               	movf	(fputc@fp+1)^0,w,c
 14782   004858  22DA               	addwfc	fsr2h,f,c
 14783   00485A  CFDE F00B          	movff	postinc2,??_fputc
 14784   00485E  CFDD F00C          	movff	postdec2,??_fputc+1
 14785   004862  C009  FFD9         	movff	fputc@fp,fsr2l
 14786   004866  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14787   00486A  CFDE F00D          	movff	postinc2,??_fputc+2
 14788   00486E  CFDD F00E          	movff	postdec2,??_fputc+3
 14789   004872  500B               	movf	??_fputc^0,w,c
 14790   004874  240D               	addwf	(??_fputc+2)^0,w,c
 14791   004876  6ED9               	movwf	fsr2l,c
 14792   004878  500C               	movf	(??_fputc+1)^0,w,c
 14793   00487A  200E               	addwfc	(??_fputc+3)^0,w,c
 14794   00487C  6EDA               	movwf	fsr2h,c
 14795   00487E  C007  FFDF         	movff	fputc@c,indf2
 14796   004882  EE20 F003          	lfsr	2,3
 14797   004886  5009               	movf	fputc@fp^0,w,c
 14798   004888  26D9               	addwf	fsr2l,f,c
 14799   00488A  500A               	movf	(fputc@fp+1)^0,w,c
 14800   00488C  22DA               	addwfc	fsr2h,f,c
 14801   00488E  2ADE               	incf	postinc2,f,c
 14802   004890  0E00               	movlw	0
 14803   004892  22DD               	addwfc	postdec2,f,c
 14804   004894                     l1652:
 14805   004894  0012               	return		;funcret
 14806   004896                     __end_of_fputc:
 14807                           	callstack 0
 14808                           
 14809 ;; *************** function _putch *****************
 14810 ;; Defined at:
 14811 ;;		line 11 in file "putch.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;  data            1    wreg     unsigned char 
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;  data            1    5[COMRAM] unsigned char 
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1    wreg      void 
 14818 ;; Registers used:
 14819 ;;		wreg
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;Total ram usage:        1 bytes
 14830 ;; Hardware stack levels used: 1
 14831 ;; Hardware stack levels required when called: 1
 14832 ;; This function calls:
 14833 ;;		Nothing
 14834 ;; This function is called by:
 14835 ;;		_fputc
 14836 ;; This function uses a non-reentrant model
 14837 ;;
 14838                           
 14839                           	psect	text54
 14840   0052EC                     __ptext54:
 14841                           	callstack 0
 14842   0052EC                     _putch:
 14843                           	callstack 21
 14844                           
 14845                           ;incstack = 0
 14846                           ;putch@data stored from wreg
 14847   0052EC  6E06               	movwf	putch@data^0,c
 14848   0052EE                     l270:
 14849   0052EE  A89E               	btfss	3998,4,c	;volatile
 14850   0052F0  EF7C  F029         	goto	u6991
 14851   0052F4  EF7E  F029         	goto	u6990
 14852   0052F8                     u6991:
 14853   0052F8  EF77  F029         	goto	l270
 14854   0052FC                     u6990:
 14855   0052FC                     
 14856                           ;putch.c: 13:     TXREG1 = data;
 14857   0052FC  C006  FFAD         	movff	putch@data,4013	;volatile
 14858   005300  0012               	return		;funcret
 14859   005302                     __end_of_putch:
 14860                           	callstack 0
 14861                           
 14862 ;; *************** function _abs *****************
 14863 ;; Defined at:
 14864 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;  a               2   11[COMRAM] int 
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;		None
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  2   11[COMRAM] int 
 14871 ;; Registers used:
 14872 ;;		wreg, status,2, status,0
 14873 ;; Tracked objects:
 14874 ;;		On entry : 0/0
 14875 ;;		On exit  : 0/0
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;Total ram usage:        4 bytes
 14883 ;; Hardware stack levels used: 1
 14884 ;; Hardware stack levels required when called: 1
 14885 ;; This function calls:
 14886 ;;		Nothing
 14887 ;; This function is called by:
 14888 ;;		_dtoa
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892                           	psect	text55
 14893   005224                     __ptext55:
 14894                           	callstack 0
 14895   005224                     _abs:
 14896                           	callstack 24
 14897   005224  BE0D               	btfsc	(abs@a+1)^0,7,c
 14898   005226  EF17  F029         	goto	u8241
 14899   00522A  EF19  F029         	goto	u8240
 14900   00522E                     u8241:
 14901   00522E  EF1F  F029         	goto	l1611
 14902   005232                     u8240:
 14903   005232  C00C  F00C         	movff	abs@a,?_abs
 14904   005236  C00D  F00D         	movff	abs@a+1,?_abs+1
 14905   00523A  EF2B  F029         	goto	l1614
 14906   00523E                     l1611:
 14907   00523E  C00C  F00E         	movff	abs@a,??_abs
 14908   005242  C00D  F00F         	movff	abs@a+1,??_abs+1
 14909   005246  1E0E               	comf	??_abs^0,f,c
 14910   005248  1E0F               	comf	(??_abs+1)^0,f,c
 14911   00524A  4A0E               	infsnz	??_abs^0,f,c
 14912   00524C  2A0F               	incf	(??_abs+1)^0,f,c
 14913   00524E  C00E  F00C         	movff	??_abs,?_abs
 14914   005252  C00F  F00D         	movff	??_abs+1,?_abs+1
 14915   005256                     l1614:
 14916   005256  0012               	return		;funcret
 14917   005258                     __end_of_abs:
 14918                           	callstack 0
 14919                           
 14920 ;; *************** function ___awmod *****************
 14921 ;; Defined at:
 14922 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;  dividend        2    5[COMRAM] int 
 14925 ;;  divisor         2    7[COMRAM] int 
 14926 ;; Auto vars:     Size  Location     Type
 14927 ;;  sign            1   10[COMRAM] unsigned char 
 14928 ;;  counter         1    9[COMRAM] unsigned char 
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  2    5[COMRAM] int 
 14931 ;; Registers used:
 14932 ;;		wreg, status,2, status,0
 14933 ;; Tracked objects:
 14934 ;;		On entry : 0/0
 14935 ;;		On exit  : 0/0
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14941 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14942 ;;Total ram usage:        6 bytes
 14943 ;; Hardware stack levels used: 1
 14944 ;; Hardware stack levels required when called: 1
 14945 ;; This function calls:
 14946 ;;		Nothing
 14947 ;; This function is called by:
 14948 ;;		_dtoa
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           	psect	text56
 14953   004A0C                     __ptext56:
 14954                           	callstack 0
 14955   004A0C                     ___awmod:
 14956                           	callstack 24
 14957   004A0C  0E00               	movlw	0
 14958   004A0E  6E0B               	movwf	___awmod@sign^0,c
 14959   004A10  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14960   004A12  EF0F  F025         	goto	u7920
 14961   004A16  EF0D  F025         	goto	u7921
 14962   004A1A                     u7921:
 14963   004A1A  EF15  F025         	goto	l6876
 14964   004A1E                     u7920:
 14965   004A1E  6C06               	negf	___awmod@dividend^0,c
 14966   004A20  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14967   004A22  B0D8               	btfsc	status,0,c
 14968   004A24  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14969   004A26  0E01               	movlw	1
 14970   004A28  6E0B               	movwf	___awmod@sign^0,c
 14971   004A2A                     l6876:
 14972   004A2A  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14973   004A2C  EF1C  F025         	goto	u7930
 14974   004A30  EF1A  F025         	goto	u7931
 14975   004A34                     u7931:
 14976   004A34  EF20  F025         	goto	l6880
 14977   004A38                     u7930:
 14978   004A38  6C08               	negf	___awmod@divisor^0,c
 14979   004A3A  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14980   004A3C  B0D8               	btfsc	status,0,c
 14981   004A3E  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14982   004A40                     l6880:
 14983   004A40  5008               	movf	___awmod@divisor^0,w,c
 14984   004A42  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14985   004A44  B4D8               	btfsc	status,2,c
 14986   004A46  EF27  F025         	goto	u7941
 14987   004A4A  EF29  F025         	goto	u7940
 14988   004A4E                     u7941:
 14989   004A4E  EF4D  F025         	goto	l6896
 14990   004A52                     u7940:
 14991   004A52  0E01               	movlw	1
 14992   004A54  6E0A               	movwf	___awmod@counter^0,c
 14993   004A56  EF31  F025         	goto	l6886
 14994   004A5A                     l6884:
 14995   004A5A  90D8               	bcf	status,0,c
 14996   004A5C  3608               	rlcf	___awmod@divisor^0,f,c
 14997   004A5E  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14998   004A60  2A0A               	incf	___awmod@counter^0,f,c
 14999   004A62                     l6886:
 15000   004A62  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 15001   004A64  EF36  F025         	goto	u7951
 15002   004A68  EF38  F025         	goto	u7950
 15003   004A6C                     u7951:
 15004   004A6C  EF2D  F025         	goto	l6884
 15005   004A70                     u7950:
 15006   004A70                     l6888:
 15007   004A70  5008               	movf	___awmod@divisor^0,w,c
 15008   004A72  5C06               	subwf	___awmod@dividend^0,w,c
 15009   004A74  5009               	movf	(___awmod@divisor+1)^0,w,c
 15010   004A76  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 15011   004A78  A0D8               	btfss	status,0,c
 15012   004A7A  EF41  F025         	goto	u7961
 15013   004A7E  EF43  F025         	goto	u7960
 15014   004A82                     u7961:
 15015   004A82  EF47  F025         	goto	l6892
 15016   004A86                     u7960:
 15017   004A86  5008               	movf	___awmod@divisor^0,w,c
 15018   004A88  5E06               	subwf	___awmod@dividend^0,f,c
 15019   004A8A  5009               	movf	(___awmod@divisor+1)^0,w,c
 15020   004A8C  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 15021   004A8E                     l6892:
 15022   004A8E  90D8               	bcf	status,0,c
 15023   004A90  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 15024   004A92  3208               	rrcf	___awmod@divisor^0,f,c
 15025   004A94  2E0A               	decfsz	___awmod@counter^0,f,c
 15026   004A96  EF38  F025         	goto	l6888
 15027   004A9A                     l6896:
 15028   004A9A  500B               	movf	___awmod@sign^0,w,c
 15029   004A9C  B4D8               	btfsc	status,2,c
 15030   004A9E  EF53  F025         	goto	u7971
 15031   004AA2  EF55  F025         	goto	u7970
 15032   004AA6                     u7971:
 15033   004AA6  EF59  F025         	goto	l6900
 15034   004AAA                     u7970:
 15035   004AAA  6C06               	negf	___awmod@dividend^0,c
 15036   004AAC  1E07               	comf	(___awmod@dividend+1)^0,f,c
 15037   004AAE  B0D8               	btfsc	status,0,c
 15038   004AB0  2A07               	incf	(___awmod@dividend+1)^0,f,c
 15039   004AB2                     l6900:
 15040   004AB2  C006  F006         	movff	___awmod@dividend,?___awmod
 15041   004AB6  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 15042   004ABA  0012               	return		;funcret
 15043   004ABC                     __end_of___awmod:
 15044                           	callstack 0
 15045                           
 15046 ;; *************** function ___awdiv *****************
 15047 ;; Defined at:
 15048 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 15049 ;; Parameters:    Size  Location     Type
 15050 ;;  dividend        2   23[COMRAM] int 
 15051 ;;  divisor         2   25[COMRAM] int 
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;  quotient        2   29[COMRAM] int 
 15054 ;;  sign            1   28[COMRAM] unsigned char 
 15055 ;;  counter         1   27[COMRAM] unsigned char 
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  2   23[COMRAM] int 
 15058 ;; Registers used:
 15059 ;;		wreg, status,2, status,0
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15066 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15068 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;Total ram usage:        8 bytes
 15070 ;; Hardware stack levels used: 1
 15071 ;; Hardware stack levels required when called: 1
 15072 ;; This function calls:
 15073 ;;		Nothing
 15074 ;; This function is called by:
 15075 ;;		_runPWM
 15076 ;;		_runGAME
 15077 ;;		_dtoa
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           	psect	text57
 15082   004896                     __ptext57:
 15083                           	callstack 0
 15084   004896                     ___awdiv:
 15085                           	callstack 24
 15086   004896  0E00               	movlw	0
 15087   004898  6E1D               	movwf	___awdiv@sign^0,c
 15088   00489A  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 15089   00489C  EF54  F024         	goto	u7860
 15090   0048A0  EF52  F024         	goto	u7861
 15091   0048A4                     u7861:
 15092   0048A4  EF5A  F024         	goto	l6832
 15093   0048A8                     u7860:
 15094   0048A8  6C1A               	negf	___awdiv@divisor^0,c
 15095   0048AA  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 15096   0048AC  B0D8               	btfsc	status,0,c
 15097   0048AE  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 15098   0048B0  0E01               	movlw	1
 15099   0048B2  6E1D               	movwf	___awdiv@sign^0,c
 15100   0048B4                     l6832:
 15101   0048B4  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 15102   0048B6  EF61  F024         	goto	u7870
 15103   0048BA  EF5F  F024         	goto	u7871
 15104   0048BE                     u7871:
 15105   0048BE  EF67  F024         	goto	l6838
 15106   0048C2                     u7870:
 15107   0048C2  6C18               	negf	___awdiv@dividend^0,c
 15108   0048C4  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 15109   0048C6  B0D8               	btfsc	status,0,c
 15110   0048C8  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 15111   0048CA  0E01               	movlw	1
 15112   0048CC  1A1D               	xorwf	___awdiv@sign^0,f,c
 15113   0048CE                     l6838:
 15114   0048CE  0E00               	movlw	0
 15115   0048D0  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 15116   0048D2  0E00               	movlw	0
 15117   0048D4  6E1E               	movwf	___awdiv@quotient^0,c
 15118   0048D6  501A               	movf	___awdiv@divisor^0,w,c
 15119   0048D8  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 15120   0048DA  B4D8               	btfsc	status,2,c
 15121   0048DC  EF72  F024         	goto	u7881
 15122   0048E0  EF74  F024         	goto	u7880
 15123   0048E4                     u7881:
 15124   0048E4  EF9C  F024         	goto	l6860
 15125   0048E8                     u7880:
 15126   0048E8  0E01               	movlw	1
 15127   0048EA  6E1C               	movwf	___awdiv@counter^0,c
 15128   0048EC  EF7C  F024         	goto	l6846
 15129   0048F0                     l6844:
 15130   0048F0  90D8               	bcf	status,0,c
 15131   0048F2  361A               	rlcf	___awdiv@divisor^0,f,c
 15132   0048F4  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 15133   0048F6  2A1C               	incf	___awdiv@counter^0,f,c
 15134   0048F8                     l6846:
 15135   0048F8  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 15136   0048FA  EF81  F024         	goto	u7891
 15137   0048FE  EF83  F024         	goto	u7890
 15138   004902                     u7891:
 15139   004902  EF78  F024         	goto	l6844
 15140   004906                     u7890:
 15141   004906                     l6848:
 15142   004906  90D8               	bcf	status,0,c
 15143   004908  361E               	rlcf	___awdiv@quotient^0,f,c
 15144   00490A  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 15145   00490C  501A               	movf	___awdiv@divisor^0,w,c
 15146   00490E  5C18               	subwf	___awdiv@dividend^0,w,c
 15147   004910  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15148   004912  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 15149   004914  A0D8               	btfss	status,0,c
 15150   004916  EF8F  F024         	goto	u7901
 15151   00491A  EF91  F024         	goto	u7900
 15152   00491E                     u7901:
 15153   00491E  EF96  F024         	goto	l6856
 15154   004922                     u7900:
 15155   004922  501A               	movf	___awdiv@divisor^0,w,c
 15156   004924  5E18               	subwf	___awdiv@dividend^0,f,c
 15157   004926  501B               	movf	(___awdiv@divisor+1)^0,w,c
 15158   004928  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 15159   00492A  801E               	bsf	___awdiv@quotient^0,0,c
 15160   00492C                     l6856:
 15161   00492C  90D8               	bcf	status,0,c
 15162   00492E  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 15163   004930  321A               	rrcf	___awdiv@divisor^0,f,c
 15164   004932  2E1C               	decfsz	___awdiv@counter^0,f,c
 15165   004934  EF83  F024         	goto	l6848
 15166   004938                     l6860:
 15167   004938  501D               	movf	___awdiv@sign^0,w,c
 15168   00493A  B4D8               	btfsc	status,2,c
 15169   00493C  EFA2  F024         	goto	u7911
 15170   004940  EFA4  F024         	goto	u7910
 15171   004944                     u7911:
 15172   004944  EFA8  F024         	goto	l6864
 15173   004948                     u7910:
 15174   004948  6C1E               	negf	___awdiv@quotient^0,c
 15175   00494A  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 15176   00494C  B0D8               	btfsc	status,0,c
 15177   00494E  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 15178   004950                     l6864:
 15179   004950  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 15180   004954  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 15181   004958  0012               	return		;funcret
 15182   00495A                     __end_of___awdiv:
 15183                           	callstack 0
 15184                           
 15185 ;; *************** function _LCD_ShowString *****************
 15186 ;; Defined at:
 15187 ;;		line 55 in file "lcd.c"
 15188 ;; Parameters:    Size  Location     Type
 15189 ;;  lineNum         1    wreg     unsigned char 
 15190 ;;  textData        2    6[COMRAM] PTR unsigned char 
 15191 ;;		 -> STR_39(17), runGAME@approxText(25), runGAME@text(17), runADC@text(17), 
 15192 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_21(17), STR_20(17), 
 15193 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(17), 
 15194 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
 15195 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
 15196 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 15197 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;  lineNum         1   10[COMRAM] unsigned char 
 15200 ;;  i               1   11[COMRAM] unsigned char 
 15201 ;; Return value:  Size  Location     Type
 15202 ;;                  1    wreg      void 
 15203 ;; Registers used:
 15204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15205 ;; Tracked objects:
 15206 ;;		On entry : 0/0
 15207 ;;		On exit  : 0/0
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15214 ;;Total ram usage:        6 bytes
 15215 ;; Hardware stack levels used: 1
 15216 ;; Hardware stack levels required when called: 2
 15217 ;; This function calls:
 15218 ;;		_LCD_Send
 15219 ;; This function is called by:
 15220 ;;		_main
 15221 ;;		_moveDisplay
 15222 ;;		_runADC
 15223 ;;		_runGAME
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           	psect	text58
 15228   00495A                     __ptext58:
 15229                           	callstack 0
 15230   00495A                     _LCD_ShowString:
 15231                           	callstack 27
 15232                           
 15233                           ;incstack = 0
 15234                           ;LCD_ShowString@lineNum stored from wreg
 15235   00495A  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 15236   00495C                     
 15237                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 15238   00495C  806B               	bsf	107,0,c	;volatile
 15239   00495E                     l132:
 15240   00495E  B06B               	btfsc	107,0,c	;volatile
 15241   004960  EFB4  F024         	goto	u9361
 15242   004964  EFB6  F024         	goto	u9360
 15243   004968                     u9361:
 15244   004968  EFAF  F024         	goto	l132
 15245   00496C                     u9360:
 15246   00496C                     
 15247                           ;lcd.c: 62:     SSP2IF = 0;
 15248   00496C  9EA4               	bcf	4004,7,c	;volatile
 15249   00496E                     
 15250                           ;lcd.c: 64:     LCD_Send(0x7c);
 15251   00496E  0E7C               	movlw	124
 15252   004970  EC53  F029         	call	_LCD_Send
 15253                           
 15254                           ;lcd.c: 66:     LCD_Send(0x80);
 15255   004974  0E80               	movlw	128
 15256   004976  EC53  F029         	call	_LCD_Send
 15257   00497A                     
 15258                           ;lcd.c: 68:     if(lineNum == 1){
 15259   00497A  040B               	decf	LCD_ShowString@lineNum^0,w,c
 15260   00497C  A4D8               	btfss	status,2,c
 15261   00497E  EFC3  F024         	goto	u9371
 15262   004982  EFC5  F024         	goto	u9370
 15263   004986                     u9371:
 15264   004986  EFCA  F024         	goto	l7766
 15265   00498A                     u9370:
 15266   00498A                     
 15267                           ;lcd.c: 69:         LCD_Send(0x80);
 15268   00498A  0E80               	movlw	128
 15269   00498C  EC53  F029         	call	_LCD_Send
 15270                           
 15271                           ;lcd.c: 70:     }
 15272   004990  EFD6  F024         	goto	l136
 15273   004994                     l7766:
 15274   004994  0E02               	movlw	2
 15275   004996  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15276   004998  A4D8               	btfss	status,2,c
 15277   00499A  EFD1  F024         	goto	u9381
 15278   00499E  EFD3  F024         	goto	u9380
 15279   0049A2                     u9381:
 15280   0049A2  EFD6  F024         	goto	l136
 15281   0049A6                     u9380:
 15282   0049A6                     
 15283                           ;lcd.c: 72:         LCD_Send(0xC0);
 15284   0049A6  0EC0               	movlw	192
 15285   0049A8  EC53  F029         	call	_LCD_Send
 15286   0049AC                     l136:
 15287                           
 15288                           ;lcd.c: 75:     LCD_Send(0x40);
 15289   0049AC  0E40               	movlw	64
 15290   0049AE  EC53  F029         	call	_LCD_Send
 15291   0049B2                     
 15292                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15293   0049B2  0E00               	movlw	0
 15294   0049B4  6E0C               	movwf	LCD_ShowString@i^0,c
 15295   0049B6                     l7776:
 15296                           
 15297                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15298   0049B6  500C               	movf	LCD_ShowString@i^0,w,c
 15299   0049B8  2407               	addwf	LCD_ShowString@textData^0,w,c
 15300   0049BA  6E09               	movwf	??_LCD_ShowString^0,c
 15301   0049BC  0E00               	movlw	0
 15302   0049BE  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15303   0049C0  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15304   0049C2  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15305   0049C6  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15306   0049CA  0E00               	movlw	low (__mediumconst shr (0+16))
 15307   0049CC  6EF8               	movwf	tblptru,c
 15308   0049CE  0E0F               	movlw	(high __ramtop+-1)
 15309   0049D0  64F7               	cpfsgt	tblptrh,c
 15310   0049D2  D003               	bra	u9397
 15311   0049D4  0008               	tblrd		*
 15312   0049D6  50F5               	movf	tablat,w,c
 15313   0049D8  D005               	bra	u9390
 15314   0049DA                     u9397:
 15315   0049DA  CFF6 FFE1          	movff	tblptrl,fsr1l
 15316   0049DE  CFF7 FFE2          	movff	tblptrh,fsr1h
 15317   0049E2  50E7               	movf	indf1,w,c
 15318   0049E4                     u9390:
 15319   0049E4  EC53  F029         	call	_LCD_Send
 15320   0049E8                     
 15321                           ;lcd.c: 79:     }
 15322   0049E8  2A0C               	incf	LCD_ShowString@i^0,f,c
 15323   0049EA  0E0F               	movlw	15
 15324   0049EC  640C               	cpfsgt	LCD_ShowString@i^0,c
 15325   0049EE  EFFB  F024         	goto	u9401
 15326   0049F2  EFFD  F024         	goto	u9400
 15327   0049F6                     u9401:
 15328   0049F6  EFDB  F024         	goto	l7776
 15329   0049FA                     u9400:
 15330   0049FA                     
 15331                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15332   0049FA  846B               	bsf	107,2,c	;volatile
 15333   0049FC                     l140:
 15334   0049FC  B46B               	btfsc	107,2,c	;volatile
 15335   0049FE  EF03  F025         	goto	u9411
 15336   004A02  EF05  F025         	goto	u9410
 15337   004A06                     u9411:
 15338   004A06  EFFE  F024         	goto	l140
 15339   004A0A                     u9410:
 15340   004A0A  0012               	return		;funcret
 15341   004A0C                     __end_of_LCD_ShowString:
 15342                           	callstack 0
 15343                           
 15344 ;; *************** function _LCD_Clear *****************
 15345 ;; Defined at:
 15346 ;;		line 94 in file "lcd.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;		None
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;		None
 15351 ;; Return value:  Size  Location     Type
 15352 ;;                  1    wreg      void 
 15353 ;; Registers used:
 15354 ;;		wreg, cstack
 15355 ;; Tracked objects:
 15356 ;;		On entry : 0/0
 15357 ;;		On exit  : 0/0
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;Total ram usage:        0 bytes
 15365 ;; Hardware stack levels used: 1
 15366 ;; Hardware stack levels required when called: 2
 15367 ;; This function calls:
 15368 ;;		_LCD_Send
 15369 ;; This function is called by:
 15370 ;;		_moveDisplay
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           	psect	text59
 15375   0051BA                     __ptext59:
 15376                           	callstack 0
 15377   0051BA                     _LCD_Clear:
 15378                           	callstack 27
 15379   0051BA                     
 15380                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15381   0051BA  806B               	bsf	107,0,c	;volatile
 15382   0051BC                     l155:
 15383   0051BC  B06B               	btfsc	107,0,c	;volatile
 15384   0051BE  EFE3  F028         	goto	u9421
 15385   0051C2  EFE5  F028         	goto	u9420
 15386   0051C6                     u9421:
 15387   0051C6  EFDE  F028         	goto	l155
 15388   0051CA                     u9420:
 15389   0051CA                     
 15390                           ;lcd.c: 97:     SSP2IF = 0;
 15391   0051CA  9EA4               	bcf	4004,7,c	;volatile
 15392   0051CC                     
 15393                           ;lcd.c: 99:     LCD_Send(0x7C);
 15394   0051CC  0E7C               	movlw	124
 15395   0051CE  EC53  F029         	call	_LCD_Send
 15396                           
 15397                           ;lcd.c: 100:     LCD_Send(0x80);
 15398   0051D2  0E80               	movlw	128
 15399   0051D4  EC53  F029         	call	_LCD_Send
 15400                           
 15401                           ;lcd.c: 101:     LCD_Send(0x01);
 15402   0051D8  0E01               	movlw	1
 15403   0051DA  EC53  F029         	call	_LCD_Send
 15404   0051DE                     
 15405                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15406   0051DE  846B               	bsf	107,2,c	;volatile
 15407   0051E0                     l158:
 15408   0051E0  B46B               	btfsc	107,2,c	;volatile
 15409   0051E2  EFF5  F028         	goto	u9431
 15410   0051E6  EFF7  F028         	goto	u9430
 15411   0051EA                     u9431:
 15412   0051EA  EFF0  F028         	goto	l158
 15413   0051EE                     u9430:
 15414   0051EE  0012               	return		;funcret
 15415   0051F0                     __end_of_LCD_Clear:
 15416                           	callstack 0
 15417                           
 15418 ;; *************** function _LCD_Init *****************
 15419 ;; Defined at:
 15420 ;;		line 3 in file "lcd.c"
 15421 ;; Parameters:    Size  Location     Type
 15422 ;;		None
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;		None
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1    wreg      void 
 15427 ;; Registers used:
 15428 ;;		wreg, status,2, cstack
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15438 ;;Total ram usage:        1 bytes
 15439 ;; Hardware stack levels used: 1
 15440 ;; Hardware stack levels required when called: 2
 15441 ;; This function calls:
 15442 ;;		_LCD_Send
 15443 ;; This function is called by:
 15444 ;;		_main
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448                           	psect	text60
 15449   0046F2                     __ptext60:
 15450                           	callstack 0
 15451   0046F2                     _LCD_Init:
 15452                           	callstack 28
 15453   0046F2                     
 15454                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15455   0046F2  010F               	movlb	15	; () banked
 15456   0046F4  913B               	bcf	59,0,b	;volatile
 15457                           
 15458                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15459   0046F6  933B               	bcf	59,1,b	;volatile
 15460                           
 15461                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15462   0046F8  8095               	bsf	149,0,c	;volatile
 15463                           
 15464                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15465   0046FA  8295               	bsf	149,1,c	;volatile
 15466                           
 15467                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15468   0046FC  9092               	bcf	146,0,c	;volatile
 15469                           
 15470                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15471   0046FE  8089               	bsf	137,0,c	;volatile
 15472   004700                     
 15473                           ; BSR set to: 15
 15474                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15475   004700  506C               	movf	108,w,c	;volatile
 15476   004702  0BF0               	andlw	-16
 15477   004704  0908               	iorlw	8
 15478   004706  6E6C               	movwf	108,c	;volatile
 15479                           
 15480                           ;lcd.c: 15:     SSP2ADD = 19;
 15481   004708  0E13               	movlw	19
 15482   00470A  6E6E               	movwf	110,c	;volatile
 15483   00470C                     
 15484                           ; BSR set to: 15
 15485                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15486   00470C  8A6C               	bsf	108,5,c	;volatile
 15487   00470E                     
 15488                           ; BSR set to: 15
 15489                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15490   00470E  0E34               	movlw	52
 15491   004710  6E07               	movwf	??_LCD_Init^0,c
 15492   004712  0EF2               	movlw	242
 15493   004714                     u10547:
 15494   004714  2EE8               	decfsz	wreg,f,c
 15495   004716  D7FE               	bra	u10547
 15496   004718  2E07               	decfsz	??_LCD_Init^0,f,c
 15497   00471A  D7FC               	bra	u10547
 15498   00471C                     
 15499                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15500   00471C  806B               	bsf	107,0,c	;volatile
 15501   00471E                     l123:
 15502   00471E  B06B               	btfsc	107,0,c	;volatile
 15503   004720  EF94  F023         	goto	u9701
 15504   004724  EF96  F023         	goto	u9700
 15505   004728                     u9701:
 15506   004728  EF8F  F023         	goto	l123
 15507   00472C                     u9700:
 15508   00472C                     
 15509                           ;lcd.c: 22:     SSP2IF = 0;
 15510   00472C  9EA4               	bcf	4004,7,c	;volatile
 15511   00472E                     
 15512                           ;lcd.c: 27:     LCD_Send(0x7C);
 15513   00472E  0E7C               	movlw	124
 15514   004730  EC53  F029         	call	_LCD_Send
 15515                           
 15516                           ;lcd.c: 28:     LCD_Send(0x80);
 15517   004734  0E80               	movlw	128
 15518   004736  EC53  F029         	call	_LCD_Send
 15519                           
 15520                           ;lcd.c: 29:     LCD_Send(0x38);
 15521   00473A  0E38               	movlw	56
 15522   00473C  EC53  F029         	call	_LCD_Send
 15523                           
 15524                           ;lcd.c: 30:     LCD_Send(0x80);
 15525   004740  0E80               	movlw	128
 15526   004742  EC53  F029         	call	_LCD_Send
 15527                           
 15528                           ;lcd.c: 31:     LCD_Send(0x39);
 15529   004746  0E39               	movlw	57
 15530   004748  EC53  F029         	call	_LCD_Send
 15531                           
 15532                           ;lcd.c: 32:     LCD_Send(0x80);
 15533   00474C  0E80               	movlw	128
 15534   00474E  EC53  F029         	call	_LCD_Send
 15535                           
 15536                           ;lcd.c: 33:     LCD_Send(0x17);
 15537   004752  0E17               	movlw	23
 15538   004754  EC53  F029         	call	_LCD_Send
 15539                           
 15540                           ;lcd.c: 34:     LCD_Send(0x80);
 15541   004758  0E80               	movlw	128
 15542   00475A  EC53  F029         	call	_LCD_Send
 15543                           
 15544                           ;lcd.c: 35:     LCD_Send(0x7A);
 15545   00475E  0E7A               	movlw	122
 15546   004760  EC53  F029         	call	_LCD_Send
 15547                           
 15548                           ;lcd.c: 36:     LCD_Send(0x80);
 15549   004764  0E80               	movlw	128
 15550   004766  EC53  F029         	call	_LCD_Send
 15551                           
 15552                           ;lcd.c: 37:     LCD_Send(0x5E);
 15553   00476A  0E5E               	movlw	94
 15554   00476C  EC53  F029         	call	_LCD_Send
 15555                           
 15556                           ;lcd.c: 38:     LCD_Send(0x80);
 15557   004770  0E80               	movlw	128
 15558   004772  EC53  F029         	call	_LCD_Send
 15559                           
 15560                           ;lcd.c: 39:     LCD_Send(0x6B);
 15561   004776  0E6B               	movlw	107
 15562   004778  EC53  F029         	call	_LCD_Send
 15563                           
 15564                           ;lcd.c: 40:     LCD_Send(0x80);
 15565   00477C  0E80               	movlw	128
 15566   00477E  EC53  F029         	call	_LCD_Send
 15567                           
 15568                           ;lcd.c: 41:     LCD_Send(0x0C);
 15569   004782  0E0C               	movlw	12
 15570   004784  EC53  F029         	call	_LCD_Send
 15571                           
 15572                           ;lcd.c: 42:     LCD_Send(0x80);
 15573   004788  0E80               	movlw	128
 15574   00478A  EC53  F029         	call	_LCD_Send
 15575                           
 15576                           ;lcd.c: 43:     LCD_Send(0x01);
 15577   00478E  0E01               	movlw	1
 15578   004790  EC53  F029         	call	_LCD_Send
 15579                           
 15580                           ;lcd.c: 44:     LCD_Send(0x80);
 15581   004794  0E80               	movlw	128
 15582   004796  EC53  F029         	call	_LCD_Send
 15583                           
 15584                           ;lcd.c: 45:     LCD_Send(0x06);
 15585   00479A  0E06               	movlw	6
 15586   00479C  EC53  F029         	call	_LCD_Send
 15587                           
 15588                           ;lcd.c: 46:     LCD_Send(0x80);
 15589   0047A0  0E80               	movlw	128
 15590   0047A2  EC53  F029         	call	_LCD_Send
 15591                           
 15592                           ;lcd.c: 47:     LCD_Send(0x02);
 15593   0047A6  0E02               	movlw	2
 15594   0047A8  EC53  F029         	call	_LCD_Send
 15595   0047AC                     
 15596                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15597   0047AC  846B               	bsf	107,2,c	;volatile
 15598   0047AE                     l126:
 15599   0047AE  B46B               	btfsc	107,2,c	;volatile
 15600   0047B0  EFDC  F023         	goto	u9711
 15601   0047B4  EFDE  F023         	goto	u9710
 15602   0047B8                     u9711:
 15603   0047B8  EFD7  F023         	goto	l126
 15604   0047BC                     u9710:
 15605   0047BC                     
 15606                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15607   0047BC  0E34               	movlw	52
 15608   0047BE  6E07               	movwf	??_LCD_Init^0,c
 15609   0047C0  0EF2               	movlw	242
 15610   0047C2                     u10557:
 15611   0047C2  2EE8               	decfsz	wreg,f,c
 15612   0047C4  D7FE               	bra	u10557
 15613   0047C6  2E07               	decfsz	??_LCD_Init^0,f,c
 15614   0047C8  D7FC               	bra	u10557
 15615   0047CA  0012               	return		;funcret
 15616   0047CC                     __end_of_LCD_Init:
 15617                           	callstack 0
 15618                           
 15619 ;; *************** function _LCD_Send *****************
 15620 ;; Defined at:
 15621 ;;		line 85 in file "lcd.c"
 15622 ;; Parameters:    Size  Location     Type
 15623 ;;  data            1    wreg     unsigned char 
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;  data            1    5[COMRAM] unsigned char 
 15626 ;; Return value:  Size  Location     Type
 15627 ;;                  1    wreg      void 
 15628 ;; Registers used:
 15629 ;;		wreg
 15630 ;; Tracked objects:
 15631 ;;		On entry : 0/0
 15632 ;;		On exit  : 0/0
 15633 ;;		Unchanged: 0/0
 15634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15639 ;;Total ram usage:        1 bytes
 15640 ;; Hardware stack levels used: 1
 15641 ;; Hardware stack levels required when called: 1
 15642 ;; This function calls:
 15643 ;;		Nothing
 15644 ;; This function is called by:
 15645 ;;		_LCD_Init
 15646 ;;		_LCD_ShowString
 15647 ;;		_LCD_Clear
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text61
 15652   0052A6                     __ptext61:
 15653                           	callstack 0
 15654   0052A6                     _LCD_Send:
 15655                           	callstack 27
 15656                           
 15657                           ;incstack = 0
 15658                           ;LCD_Send@data stored from wreg
 15659   0052A6  6E06               	movwf	LCD_Send@data^0,c
 15660   0052A8                     
 15661                           ;lcd.c: 87:     SSP2BUF = data;
 15662   0052A8  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15663   0052AC                     l146:
 15664   0052AC  B06D               	btfsc	109,0,c	;volatile
 15665   0052AE  EF5B  F029         	goto	u9261
 15666   0052B2  EF5D  F029         	goto	u9260
 15667   0052B6                     u9261:
 15668   0052B6  EF56  F029         	goto	l146
 15669   0052BA                     u9260:
 15670   0052BA                     l149:
 15671   0052BA  AEA4               	btfss	4004,7,c	;volatile
 15672   0052BC  EF62  F029         	goto	u9271
 15673   0052C0  EF64  F029         	goto	u9270
 15674   0052C4                     u9271:
 15675   0052C4  EF5D  F029         	goto	l149
 15676   0052C8                     u9270:
 15677   0052C8                     
 15678                           ;lcd.c: 90:     SSP2IF = 0;
 15679   0052C8  9EA4               	bcf	4004,7,c	;volatile
 15680   0052CA  0012               	return		;funcret
 15681   0052CC                     __end_of_LCD_Send:
 15682                           	callstack 0
 15683                           
 15684 ;; *************** function _ISR *****************
 15685 ;; Defined at:
 15686 ;;		line 11 in file "interrupt.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;		None
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;  temp            1    4[COMRAM] unsigned char 
 15691 ;; Return value:  Size  Location     Type
 15692 ;;                  1    wreg      void 
 15693 ;; Registers used:
 15694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15695 ;; Tracked objects:
 15696 ;;		On entry : 0/0
 15697 ;;		On exit  : 0/0
 15698 ;;		Unchanged: 0/0
 15699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15702 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15703 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15704 ;;Total ram usage:        5 bytes
 15705 ;; Hardware stack levels used: 1
 15706 ;; This function calls:
 15707 ;;		Nothing
 15708 ;; This function is called by:
 15709 ;;		Interrupt level 2
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	intcode
 15714   000008                     __pintcode:
 15715                           	callstack 0
 15716   000008                     _ISR:
 15717                           	callstack 21
 15718                           
 15719                           ;incstack = 0
 15720   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15721   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15722   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15723   000012                     
 15724                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15725   000012  A09D               	btfss	3997,0,c	;volatile
 15726   000014  EF0E  F000         	goto	i2u686_41
 15727   000018  EF10  F000         	goto	i2u686_40
 15728   00001C                     i2u686_41:
 15729   00001C  EF49  F000         	goto	i2l6284
 15730   000020                     i2u686_40:
 15731   000020  A09E               	btfss	3998,0,c	;volatile
 15732   000022  EF15  F000         	goto	i2u687_41
 15733   000026  EF17  F000         	goto	i2u687_40
 15734   00002A                     i2u687_41:
 15735   00002A  EF49  F000         	goto	i2l6284
 15736   00002E                     i2u687_40:
 15737   00002E  0101               	movlb	1	; () banked
 15738   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15739   000032  B4D8               	btfsc	status,2,c
 15740   000034  EF1E  F000         	goto	i2u688_41
 15741   000038  EF20  F000         	goto	i2u688_40
 15742   00003C                     i2u688_41:
 15743   00003C  EF49  F000         	goto	i2l6284
 15744   000040                     i2u688_40:
 15745   000040                     
 15746                           ; BSR set to: 1
 15747                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15748   000040  A480               	btfss	128,2,c	;volatile
 15749   000042  EF25  F000         	goto	i2u689_41
 15750   000046  EF27  F000         	goto	i2u689_40
 15751   00004A                     i2u689_41:
 15752   00004A  EF44  F000         	goto	i2l412
 15753   00004E                     i2u689_40:
 15754   00004E                     
 15755                           ; BSR set to: 1
 15756                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15757   00004E  0E03               	movlw	3
 15758   000050  6E02               	movwf	(??_ISR+1)^0,c
 15759   000052  0E08               	movlw	8
 15760   000054  6E01               	movwf	??_ISR^0,c
 15761   000056  0E77               	movlw	119
 15762   000058                     i2u1056_47:
 15763   000058  2EE8               	decfsz	wreg,f,c
 15764   00005A  D7FE               	bra	i2u1056_47
 15765   00005C  2E01               	decfsz	??_ISR^0,f,c
 15766   00005E  D7FC               	bra	i2u1056_47
 15767   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15768   000062  D7FA               	bra	i2u1056_47
 15769   000064  0000               	nop	
 15770   000066                     
 15771                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15772   000066  A480               	btfss	128,2,c	;volatile
 15773   000068  EF38  F000         	goto	i2u690_41
 15774   00006C  EF3A  F000         	goto	i2u690_40
 15775   000070                     i2u690_41:
 15776   000070  EF44  F000         	goto	i2l412
 15777   000074                     i2u690_40:
 15778   000074                     i2l414:
 15779   000074  B480               	btfsc	128,2,c	;volatile
 15780   000076  EF3F  F000         	goto	i2u691_41
 15781   00007A  EF41  F000         	goto	i2u691_40
 15782   00007E                     i2u691_41:
 15783   00007E  EF3A  F000         	goto	i2l414
 15784   000082                     i2u691_40:
 15785   000082                     
 15786                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15787   000082  0E00               	movlw	0
 15788   000084  0100               	movlb	0	; () banked
 15789   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15790   000088                     i2l412:
 15791                           
 15792                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15793   000088  0E9E               	movlw	158
 15794   00008A  6ECF               	movwf	207,c	;volatile
 15795   00008C  0E58               	movlw	88
 15796   00008E  6ECE               	movwf	206,c	;volatile
 15797   000090                     
 15798                           ;interrupt.c: 23:         TMR1IF = 0;
 15799   000090  909E               	bcf	3998,0,c	;volatile
 15800   000092                     i2l6284:
 15801                           
 15802                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15803   000092  A09D               	btfss	3997,0,c	;volatile
 15804   000094  EF4E  F000         	goto	i2u692_41
 15805   000098  EF50  F000         	goto	i2u692_40
 15806   00009C                     i2u692_41:
 15807   00009C  EF66  F000         	goto	i2l6296
 15808   0000A0                     i2u692_40:
 15809   0000A0  A09E               	btfss	3998,0,c	;volatile
 15810   0000A2  EF55  F000         	goto	i2u693_41
 15811   0000A6  EF57  F000         	goto	i2u693_40
 15812   0000AA                     i2u693_41:
 15813   0000AA  EF66  F000         	goto	i2l6296
 15814   0000AE                     i2u693_40:
 15815   0000AE  0101               	movlb	1	; () banked
 15816   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15817   0000B2  B4D8               	btfsc	status,2,c
 15818   0000B4  EF5E  F000         	goto	i2u694_41
 15819   0000B8  EF60  F000         	goto	i2u694_40
 15820   0000BC                     i2u694_41:
 15821   0000BC  EF66  F000         	goto	i2l6296
 15822   0000C0                     i2u694_40:
 15823   0000C0                     
 15824                           ; BSR set to: 1
 15825                           ;interrupt.c: 27:         GAMEtime += 1;
 15826   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15827   0000C2                     
 15828                           ; BSR set to: 1
 15829                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15830   0000C2  0E0B               	movlw	11
 15831   0000C4  6ECF               	movwf	207,c	;volatile
 15832   0000C6  0EDC               	movlw	220
 15833   0000C8  6ECE               	movwf	206,c	;volatile
 15834   0000CA                     
 15835                           ; BSR set to: 1
 15836                           ;interrupt.c: 30:         TMR1IF = 0;
 15837   0000CA  909E               	bcf	3998,0,c	;volatile
 15838   0000CC                     i2l6296:
 15839                           
 15840                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15841   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15842   0000CE  EF6B  F000         	goto	i2u695_41
 15843   0000D2  EF6D  F000         	goto	i2u695_40
 15844   0000D6                     i2u695_41:
 15845   0000D6  EFA1  F000         	goto	i2l423
 15846   0000DA                     i2u695_40:
 15847   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15848   0000DC  EF72  F000         	goto	i2u696_41
 15849   0000E0  EF74  F000         	goto	i2u696_40
 15850   0000E4                     i2u696_41:
 15851   0000E4  EFA1  F000         	goto	i2l423
 15852   0000E8                     i2u696_40:
 15853   0000E8  0101               	movlb	1	; () banked
 15854   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15855   0000EC  B4D8               	btfsc	status,2,c
 15856   0000EE  EF7B  F000         	goto	i2u697_41
 15857   0000F2  EF7D  F000         	goto	i2u697_40
 15858   0000F6                     i2u697_41:
 15859   0000F6  EFA1  F000         	goto	i2l423
 15860   0000FA                     i2u697_40:
 15861   0000FA                     
 15862                           ; BSR set to: 1
 15863                           ;interrupt.c: 34:         char temp = RCREG1;
 15864   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15865   0000FE                     
 15866                           ; BSR set to: 1
 15867                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15868   0000FE  0E0A               	movlw	10
 15869   000100  1805               	xorwf	ISR@temp^0,w,c
 15870   000102  B4D8               	btfsc	status,2,c
 15871   000104  EF86  F000         	goto	i2u698_41
 15872   000108  EF88  F000         	goto	i2u698_40
 15873   00010C                     i2u698_41:
 15874   00010C  EF94  F000         	goto	i2l6310
 15875   000110                     i2u698_40:
 15876   000110                     
 15877                           ; BSR set to: 1
 15878                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15879   000110  0E77               	movlw	low _gmail
 15880   000112  2521               	addwf	ISR@i& (0+255),w,b
 15881   000114  6ED9               	movwf	fsr2l,c
 15882   000116  0E01               	movlw	high _gmail
 15883   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15884   00011A  6EDA               	movwf	fsr2h,c
 15885   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15886   000120                     
 15887                           ; BSR set to: 1
 15888                           ;interrupt.c: 39:             i++;
 15889   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15890   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15891                           
 15892                           ;interrupt.c: 40:         } else {
 15893   000124  EFA1  F000         	goto	i2l423
 15894   000128                     i2l6310:
 15895                           
 15896                           ; BSR set to: 1
 15897                           ;interrupt.c: 41:             gmail.full = 1;
 15898   000128  0E01               	movlw	1
 15899   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15900   00012C                     
 15901                           ; BSR set to: 1
 15902                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15903   00012C  0E77               	movlw	low _gmail
 15904   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15905   000130  6ED9               	movwf	fsr2l,c
 15906   000132  0E01               	movlw	high _gmail
 15907   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15908   000136  6EDA               	movwf	fsr2h,c
 15909   000138  6ADF               	clrf	indf2,c
 15910   00013A                     
 15911                           ; BSR set to: 1
 15912                           ;interrupt.c: 43:             i = 0;
 15913   00013A  0E00               	movlw	0
 15914   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15915   00013E  0E00               	movlw	0
 15916   000140  6F21               	movwf	ISR@i& (0+255),b
 15917   000142                     i2l423:
 15918   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15919   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15920   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15921   00014C  0011               	retfie		f
 15922   00014E                     __end_of_ISR:
 15923                           	callstack 0
 15924                           
 15925                           	psect	rparam
 15926   000000                     
 15927                           	psect	temp
 15928   00005A                     btemp:
 15929                           	callstack 0
 15930   00005A                     	ds	1
 15931   000000                     int$flags	set	btemp
 15932   000000                     wtemp8	set	btemp+1
 15933   000000                     ttemp5	set	btemp+1
 15934   000000                     ttemp6	set	btemp+4
 15935   000000                     ttemp7	set	btemp+8
 15936                           
 15937                           	psect	config
 15938                           
 15939                           ; Padding undefined space
 15940   300000                     	org	3145728
 15941   300000  FF                 	db	255
 15942                           
 15943                           ;Config register CONFIG1H @ 0x300001
 15944                           ;	Oscillator Selection bits
 15945                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15946                           ;	4X PLL Enable
 15947                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15948                           ;	Primary clock enable bit
 15949                           ;	PRICLKEN = 0x1, unprogrammed default
 15950                           ;	Fail-Safe Clock Monitor Enable bit
 15951                           ;	FCMEN = 0x0, unprogrammed default
 15952                           ;	Internal/External Oscillator Switchover bit
 15953                           ;	IESO = 0x0, unprogrammed default
 15954   300001                     	org	3145729
 15955   300001  33                 	db	51
 15956                           
 15957                           ;Config register CONFIG2L @ 0x300002
 15958                           ;	unspecified, using default values
 15959                           ;	Power-up Timer Enable bit
 15960                           ;	PWRTEN = 0x1, unprogrammed default
 15961                           ;	Brown-out Reset Enable bits
 15962                           ;	BOREN = 0x3, unprogrammed default
 15963                           ;	Brown Out Reset Voltage bits
 15964                           ;	BORV = 0x3, unprogrammed default
 15965   300002                     	org	3145730
 15966   300002  1F                 	db	31
 15967                           
 15968                           ;Config register CONFIG2H @ 0x300003
 15969                           ;	Watchdog Timer Enable bits
 15970                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15971                           ;	Watchdog Timer Postscale Select bits
 15972                           ;	WDTPS = 0xF, unprogrammed default
 15973   300003                     	org	3145731
 15974   300003  3C                 	db	60
 15975                           tosu	equ	0xFFF
 15976                           tosh	equ	0xFFE
 15977                           tosl	equ	0xFFD
 15978                           stkptr	equ	0xFFC
 15979                           pclatu	equ	0xFFB
 15980                           pclath	equ	0xFFA
 15981                           pcl	equ	0xFF9
 15982                           tblptru	equ	0xFF8
 15983                           tblptrh	equ	0xFF7
 15984                           tblptrl	equ	0xFF6
 15985                           tablat	equ	0xFF5
 15986                           prodh	equ	0xFF4
 15987                           prodl	equ	0xFF3
 15988                           indf0	equ	0xFEF
 15989                           postinc0	equ	0xFEE
 15990                           postdec0	equ	0xFED
 15991                           preinc0	equ	0xFEC
 15992                           plusw0	equ	0xFEB
 15993                           fsr0h	equ	0xFEA
 15994                           fsr0l	equ	0xFE9
 15995                           wreg	equ	0xFE8
 15996                           indf1	equ	0xFE7
 15997                           postinc1	equ	0xFE6
 15998                           postdec1	equ	0xFE5
 15999                           preinc1	equ	0xFE4
 16000                           plusw1	equ	0xFE3
 16001                           fsr1h	equ	0xFE2
 16002                           fsr1l	equ	0xFE1
 16003                           bsr	equ	0xFE0
 16004                           indf2	equ	0xFDF
 16005                           postinc2	equ	0xFDE
 16006                           postdec2	equ	0xFDD
 16007                           preinc2	equ	0xFDC
 16008                           plusw2	equ	0xFDB
 16009                           fsr2h	equ	0xFDA
 16010                           fsr2l	equ	0xFD9
 16011                           status	equ	0xFD8

Data Sizes:
    Strings     460
    Constant    64
    Data        40
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      42
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[17]), STR_17(CODE[17]), STR_18(CODE[17]), STR_19(CODE[17]), 
		 -> STR_2(CODE[17]), STR_20(CODE[17]), STR_21(CODE[17]), STR_3(CODE[17]), 
		 -> STR_39(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), STR_6(CODE[17]), 
		 -> STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4532	PTR unsigned char  size(2) Largest target is 6
		 -> STR_23(CODE[5]), STR_24(CODE[5]), STR_25(CODE[4]), STR_26(CODE[4]), 
		 -> STR_27(CODE[4]), STR_28(CODE[5]), STR_29(CODE[6]), STR_30(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_23(CODE[5]), STR_24(CODE[5]), STR_25(CODE[4]), STR_26(CODE[4]), 
		 -> STR_27(CODE[4]), STR_28(CODE[5]), STR_29(CODE[6]), STR_30(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_23(CODE[5]), STR_24(CODE[5]), STR_25(CODE[4]), STR_26(CODE[4]), 
		 -> STR_27(CODE[4]), STR_28(CODE[5]), STR_29(CODE[6]), STR_30(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_22(CODE[5]), STR_34(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3933$buffer	PTR unsigned char  size(2) Largest target is 0

    S3933$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_31(CODE[6]), STR_32(CODE[5]), STR_33(CODE[19]), STR_35(CODE[19]), 
		 -> STR_36(CODE[17]), STR_37(CODE[19]), STR_38(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[25]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_23(CODE[5]), 
		 -> STR_24(CODE[5]), STR_25(CODE[4]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[5]), STR_29(CODE[6]), STR_30(CODE[1]), STR_46(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_23(CODE[5]), 
		 -> STR_24(CODE[5]), STR_25(CODE[4]), STR_26(CODE[4]), STR_27(CODE[4]), 
		 -> STR_28(CODE[5]), STR_29(CODE[6]), STR_30(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_40(CODE[4]), STR_43(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[5]), STR_31(CODE[6]), STR_32(CODE[5]), STR_33(CODE[19]), 
		 -> STR_34(CODE[5]), STR_35(CODE[19]), STR_36(CODE[17]), STR_37(CODE[19]), 
		 -> STR_38(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[5]), STR_31(CODE[6]), STR_32(CODE[5]), STR_33(CODE[19]), 
		 -> STR_34(CODE[5]), STR_35(CODE[19]), STR_36(CODE[17]), STR_37(CODE[19]), 
		 -> STR_38(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_22(CODE[5]), STR_31(CODE[6]), STR_32(CODE[5]), STR_33(CODE[19]), 
		 -> STR_34(CODE[5]), STR_35(CODE[19]), STR_36(CODE[17]), STR_37(CODE[19]), 
		 -> STR_38(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  440201
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             52    52      0   69991
                                            135 BANK0      2     2      0
                                              0 BANK1     50    50      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   80227
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   68140
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2836
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      2A       9       16.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     218      54        0.0%
DATA                 0      0     218       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 22:03:09 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FE1F                          _C1 FE1B                          _C2 FE17  
                        _C3 FE13                          l61 23CA                          l63 23BC  
                        l56 2378                          l66 2630                          l58 236A  
                        _S1 FDFF                          l68 23FE                          _S2 FDFB  
                        _S3 FDF7                          _S4 FDF3                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 471E                         l140 49FC  
                       l132 495E                         l125 472C                         l126 47AE  
                       l134 496C                         l151 52C8                         l143 4A0A  
                       l303 42F6                         l231 3004                         l152 52CA  
                       l136 49AC                         l129 47CA                         l161 51EE  
                       l146 52AC                         l250 510C                         l242 30A0  
                       l234 3006                         l155 51BC                         l139 49FA  
                       l251 5110                         l149 52BA                         l157 51CA  
                       l245 50EA                         l158 51E0                         l270 52EE  
                       l350 5346                         l247 50F8                         l248 50FE  
                       l273 5300                         l353 5338                         l521 40CE  
                       l362 530E                         l522 41CC                         l356 532A  
                       l372 4076                         l365 5354                         l525 4186  
                       l710 52A4                         l462 36E6                         l534 41BA  
                       l526 4148                         l359 531C                         l519 40C0  
                       l472 36D2                         l464 3524                         l721 4DEC  
                       l377 4088                         l722 4DFC                         l378 409E  
                       l538 41E4                         l475 36F8                         l467 35C4  
                       l707 5356                         l476 36FA                         l581 3EC6  
                       l680 208A                         l664 1F84                         l592 3F20  
                       l593 3F32                         l682 209A                         l691 227E  
                       l683 20AA                         l579 3F0E                         l692 2292  
                       l684 20BA                         l676 2072                         l941 4958  
                       l685 20CA                         l589 3EFA                         l686 20DA  
                       l687 20EA                         l689 21BC                         l954 4ABA  
                       l980 4502                         l975 44BC                         l984 514A  
                       l969 4C12                         _GIE 7F97                         _PR2 0FBB  
                       _ISR 0008                         _abs 5224                         _pad 4C14  
              ___awmod@sign 000B                         prod 0FF3                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0021  
              ___flmul@bexp 0026                ___flmul@sign 0020                ___flmul@temp 002B  
              ___flmul@prod 0027                        ?_ISR 0001                        ISR@i 0121  
              ___fltol@exp1 0053                        l1007 43FE                        l1201 4D1C  
                      l1211 4E58                        ?_abs 000C                        l1116 4EBC  
                      l1303 2C5E                        l1240 1756                        l1208 4D24  
                      l1305 2CD6                        l1306 2CC4                        l1218 4E60  
                      l1331 1D2E                        l1324 1B38                        l1421 4C8E  
                      l1341 1E5E                        l1333 1DA6                        l1501 3B52  
                      l1430 3CC8                        l1334 1D94                        l1238 17A2  
                      l1423 4CB0                        l1255 18BC                        l1247 1A72  
                      l1239 1790                        l1328 1E9C                        l1264 198C  
                      l1280 5048                        l1441 3DC6                        l1265 197A  
                      l1513 3C4A                        l1418 4C4C                        l1611 523E  
                      l1427 3C7A                        l1292 2DB8                        l1620 34E8  
                      l1452 0B4A                        l1508 3C02                        l1372 39E8  
                      l1429 3C82                        l1533 4B68                        l1525 46F0  
                      l1517 461C                        l1365 3950                        l1614 5256  
                      l1294 2C18                        l1606 4600                        l1623 342C  
                      l1455 04E4                        l1519 4624                        l1640 4FB6  
                      l1560 10A6                        l1368 3AAC                        l1297 2BDC  
                      l1457 032A                        l1529 4B60                        l1634 4F12  
                      l1379 3A44                        l1652 4894                        l1660 50D2  
                      l1388 508E                        l1485 092E                        l1728 38F8  
                      l1744 2880                        l1745 2A1E                        l1762 5222  
                      l1667 52EA                        l1675 4D92                        l1596 5000  
                      l1757 32D2                        l1694 15B0                        l1774 51B8  
                      l1768 5182                        l7000 4CD4                        l7010 4D0E  
                      l7002 4CDC                        l7100 341C                        l7012 4D10  
                      l7004 4CEA                        l7020 4E18                        l7110 34D8  
                      l7102 3450                        l7014 4D16                        l7006 4CF0  
                      l7030 4E52                        l7022 4E20                        ?_pad 0017  
                      l6320 47CC                        l7040 4C58                        l7032 4C14  
                      l6400 16DC                        l7104 348C                        l7120 4F8C  
                      l7200 0224                        l7008 4D06                        l7024 4E2E  
                      l7016 4DFE                        l8000 4234                        l7050 5232  
                      l6330 484E                        l6322 47DE                        l7042 4C6C  
                      l7034 4C22                        l7130 3C8A                        l6410 16F0  
                      l6402 16E0                        l7106 34A0                        l7122 4F98  
                      l7114 4F68                        l7202 022A                        l7026 4E44  
                      l7018 4E10                        l8002 4254                        l6316 52EE  
                      l6324 47F0                        l7044 4C70                        l7036 4C36  
                      l7140 3CC4                        l7132 3C9A                        l6500 1972  
                      l6420 174E                        l6404 16E4                        l6412 16F4  
                      l6340 15D0                        l7060 4596                        l7052 4504  
                      l7108 34C8                        l7116 4F7C                        l7124 4F9C  
                      l7300 072C                        l7220 02B6                        l7204 0232  
                      l7212 0274                        l7028 4E4C                        l8004 42D6  
                      l8020 3F6A                        l8012 3F34                        l8100 3ED4  
                      l6318 52FC                        l6326 47FA                        l7046 4C9C  
                      l7038 4C44                        l7150 3D18                        l7142 3CD0  
                      l7134 3CA0                        l7126 3C4C                        l6510 19F0  
                      l6430 1784                        l6422 1764                        l6414 16F8  
                      l6406 16E8                        l6342 15E0                        l6350 160A  
                      l6334 15B2                        l7070 45F8                        l7054 4524  
                      l7118 4F88                        l7310 0808                        l7302 075E  
                      l7222 02BE                        l7214 029A                        l7230 02DA  
                      l7206 024A                        l8006 42E4                        l8030 3FB8  
                      l8022 3F72                        l8014 3F5E                        l8110 3F2C  
                      l8102 3EEC                        l7048 5224                        l6328 4818  
                      l7160 3D80                        l7152 3D1E                        l7144 3CDA  
                      l7136 3CB0                        l7128 3C6E                        l6600 2B32  
                      l6520 1A36                        l6504 199C                        l6512 19F2  
                      l6440 17D4                        l6432 178E                        l6424 1770  
                      l6416 1722                        l6408 16EC                        l6360 163A  
                      l6352 161A                        l6344 15F0                        l6336 15C0  
                      l7056 4562                        l7064 45A2                        l7080 4ECC  
                      l7320 086A                        l7312 080E                        l7304 076E  
                      l7240 0374                        l7232 02F4                        l7216 02AC  
                      l7208 0254                        l7400 3AE0                        l8008 42F2  
                      l8040 401E                        l8024 3F7C                        l8016 3F66  
                      l8120 40A2                        l8112 3F2E                        l7162 3D90  
                      l7146 3CE0                        l7154 3D3A                        l7138 3CBC  
                      l6610 2B70                        l6602 2B42                        l6530 1A60  
                      l6522 1A44                        l6514 1A02                        l6506 19A8  
                      l6450 1810                        l6442 17E4                        l6434 17B0  
                      l6426 1774                        l6418 173E                        l6370 167A  
                      l6362 1648                        l6354 1620                        l6346 1600  
                      l6338 15CE                        l7066 45B4                        l7058 458A  
                      l7090 334C                        l7082 4EE0                        l7074 514C  
                      l7330 0906                        l7322 0872                        l7314 0842  
                      l7306 077E                        l7250 046A                        l7242 03B2  
                      l7218 02B0                        l7170 0152                        l7410 3B74  
                      l7402 3B1E                        l8202 36E0                        l8210 2DD8  
                      l8042 403A                        l8026 3F84                        l8018 3F68  
                      l8130 4114                        l8122 40BC                        l8114 3F30  
                      l8106 3F08                        l6540 50AE                        l7164 3D96  
                      l7156 3D54                        l7148 3D12                        l6620 2BB8  
                      l6612 2B80                        l6604 2B42                        l6700 1AC0  
                      l6532 1A62                        l6524 1A4A                        l6516 1A12  
                      l6508 19B6                        l6460 1856                        l6452 181E  
                      l6444 17F2                        l6436 17C0                        l6428 1782  
                      l6380 16B4                        l6372 167C                        l6364 164A  
                      l6356 1632                        l6348 1602                        l7092 3360  
                      l7076 5154                        l7340 0962                        l7332 0926  
                      l7324 0878                        l7316 0856                        l7308 07B2  
                      l7260 04FA                        l7252 0472                        l7244 03E4  
                      l7236 033A                        l7180 019E                        l7172 0158  
                      l7412 3B88                        l7420 3BE8                        l7404 3B2C  
                      l7500 3A34                        l8220 2DF6                        l8212 2DDA  
                      l8204 2DBA                        l8300 1F0A                        l8044 4052  
                      l8036 3FC0                        l8028 3F96                        l8140 4168  
                      l8132 4122                        l8124 40BE                        l8108 3F26  
                      l8060 3DDC                        l8052 3DC8                        l6542 50B2  
                      l7166 3DA6                        l7158 3D66                        l6630 2C06  
                      l6622 2BCC                        l6614 2B90                        l6550 2A20  
                      l6710 1AF0                        l6702 1AC6                        l6526 1A4C  
                      l6518 1A32                        l6470 18D2                        l6462 188A  
                      l6454 1820                        l6446 1800                        l6390 16C8  
                      l6382 16B8                        l6366 165A                        l6374 1684  
                      l6358 1634                        l7094 336E                        l7086 32D4  
                      l7078 4EBE                        l7350 098A                        l7342 0968  
                      l7334 0940                        l7326 0880                        l7318 085A  
                      l7270 0530                        l7262 0506                        l7246 0422  
                      l7238 0340                        l7190 01DC                        l7182 01A8  
                      l7174 0168                        l7414 3B8C                        l7406 3B4A  
                      l7430 4602                        l7510 3A8C                        l7502 3A52  
                      l8230 2E1A                        l8222 2DF8                        l8214 2DDC  
                      l8206 2DCE                        l8310 1F1E                        l8302 1F0E  
                      l8046 4072                        l8038 401A                        l8150 41AC  
                      l8142 4170                        l8134 413A                        l8126 40EC  
                      l8118 40A0                        l8070 3DF6                        l8062 3DDE  
                      l8054 3DD4                        l6536 5090                        l6640 2C4E  
                      l6632 2C16                        l6624 2BDA                        l6616 2BA0  
                      l6608 2B56                        l6560 2A5C                        l6552 2A2C  
                      l6800 1E2C                        l6720 1B28                        l6712 1AF2  
                      l6704 1AD6                        l6528 1A52                        l6480 190E  
                      l6472 18E2                        l6464 188C                        l6456 182A  
                      l6448 180C                        l6392 16CC                        l6384 16BC  
                      l6376 1694                        l6368 166A                        l7088 32F4  
                      l7360 09BE                        l7344 0970                        l7336 094E  
                      l7352 0990                        l7328 088C                        l7280 0578  
                      l7272 053E                        l7264 0510                        l7248 0436  
                      l7256 04B2                        l7192 01E4                        l7184 01B0  
                      l7176 0176                        l6544 5280                        l7424 3C14  
                      l7416 3BAE                        l7440 4644                        l7432 4610  
                      l7520 0B70                        l7512 3A9A                        l7504 3A54  
                      l8240 2F4E                        l8232 2E2A                        l8224 2DFA  
                      l8216 2DDE                        l8208 2DD6                        l8320 1F82  
                      l8312 1F44                        l8304 1F12                        l8048 4098  
                      l8160 41E2                        l8144 4180                        l8128 40F8  
                      l8080 3E56                        l8072 3E08                        l8064 3DE6  
                      l8056 3DD8                        l8400 22B2                        l6538 509C  
                      l6650 2C8E                        l6642 2C5C                        l6634 2C28  
                      l6626 2BE6                        l6618 2BA8                        l6570 2A8C  
                      l6562 2A6C                        l6554 2A3A                        l6810 1E82  
                      l6802 1E46                        l6730 1B78                        l6722 1B48  
                      l6714 1B02                        l6706 1ADC                        l6490 193A  
                      l6482 1910                        l6466 189C                        l6458 1830  
                      l6394 16D0                        l6386 16C0                        l6378 16A6  
                      l7098 33E0                        l7370 0A74                        l7362 0A16  
                      l7354 09A2                        l7346 0980                        l7338 095E  
                      l7290 068C                        l7282 0588                        l7274 0556  
                      l7266 0518                        l7258 04EC                        l7186 01C0  
                      l7194 01E8                        l7178 017A                        l6546 529C  
                      l7426 3C28                        l7418 3BE4                        l7450 46A4  
                      l7442 466A                        l7434 462C                        l7610 0E56  
                      l7602 0E0C                        l7530 0B96                        l7522 0B7C  
                      l7514 3A9C                        l7506 3A58                        l8170 3504  
                      l8250 3014                        l8242 2F72                        l8234 2E7A  
                      l8226 2DFC                        l8218 2DF0                        l8330 1FE8  
                      l8322 1F92                        l8314 1F62                        l8306 1F12  
                      l8154 41C8                        l8138 4156                        l8146 4186  
                      l8082 3E6C                        l8074 3E1C                        l8066 3DE8  
                      l8058 3DDA                        l8410 22BE                        l8402 22B4  
                      l6900 4AB2                        l6660 2D00                        l6652 2CBC  
                      l6636 2C3E                        l6644 2C6E                        l6628 2C04  
                      l6580 2AC2                        l6572 2A92                        l6564 2A6E  
                      l6556 2A3C                        l6804 1E62                        l6812 1E88  
                      l6740 1BC8                        l6732 1B82                        l6724 1B58  
                      l6716 1B12                        l6708 1AE2                        l6484 191E  
                      l6476 18F6                        l6492 193C                        l6468 18AC  
                      l6396 16D4                        l6388 16C4                        l6820 5014  
                      l7380 0AE4                        l7372 0A90                        l7364 0A4A  
                      l7356 09B4                        l7348 0984                        l7284 059C  
                      l7292 0692                        l7276 0568                        l7268 051E  
                      l7196 020E                        l7188 01D0                        l7460 4AC4  
                      l7428 3C2C                        l7452 46B6                        l7444 4670  
                      l7436 4634                        l7612 0E5E                        l7604 0E24  
                      l7540 0BDC                        l7532 0BA6                        l7524 0B88  
                      l7508 3A7C                        l8180 3550                        l8172 3510  
                      l8164 34EA                        l8260 3050                        l8252 3028  
                      l8244 2FDA                        l8236 2E8C                        l8228 2DFE  
                      l8332 1FF0                        l8340 2008                        l8324 1FB0  
                      l8316 1F70                        l8308 1F12                        l8156 41DC  
                      l8148 4194                        l8084 3E76                        l8076 3E2A  
                      l8068 3DEA                        l8500 24FE                        l8420 22C8  
                      l8412 22C0                        l8404 22B8                        l6830 48B0  
                      l6670 2D78                        l6662 2D2A                        l6646 2C7C  
                      l6638 2C44                        l6590 2B02                        l6582 2AD2  
                      l6574 2AA0                        l6558 2A4C                        l6566 2A76  
                      l6910 4BD6                        l6814 1E8C                        l6806 1E72  
                      l6750 1C0A                        l6742 1BD4                        l6734 1B98  
                      l6718 1B22                        l6486 1926                        l6478 1900  
                      l6494 194A                        l6398 16D8                        l7382 0AFC  
                      l7374 0A98                        l7366 0A52                        l7358 09B8  
                      l7294 06B0                        l7286 0600                        l7278 0570  
                      l7198 0220                        l7462 4AE6                        l7470 4B3A  
                      l7454 46D0                        l7446 4676                        l7438 463E  
                      l7630 0F3C                        l7614 0E80                        l7622 0EF6  
                      l7606 0E28                        l7550 0C38                        l7542 0BF0  
                      l7526 0B8C                        l7518 0B4C                        l8190 365A  
                      l8182 35BA                        l8174 351A                        l8166 34F2  
                      l7710 265E                        l7702 30A2                        l8270 307C  
                      l8262 305E                        l8254 3036                        l8238 2EE6  
                      l8334 1FF8                        l8342 2030                        l8326 1FCE  
                      l8318 1F7A                        l8158 41E0                        l8094 3E98  
                      l8086 3E88                        l8078 3E52                        l8510 2590  
                      l8502 250C                        l8430 22D2                        l8422 22CA  
                      l8414 22C2                        l8406 22BA                        l6840 48D6  
                      l6832 48B4                        l6824 4896                        l6680 2DAE  
                      l6672 2D94                        l6656 2CE6                        l6664 2D2E  
                      l6648 2C80                        l6592 2B12                        l6584 2AD4  
                      l6576 2AA2                        l6568 2A86                        l6912 4BE6  
                      l6904 4B6A                        l6920 4400                        l6808 1E80  
                      l6760 1C6C                        l6752 1C1A                        l6744 1BE2  
                      l6736 1BA4                        l6728 1B6C                        l6496 194E  
                      l6488 192A                        l7384 0B0C                        l7376 0AA6  
                      l7368 0A56                        l7296 06E4                        l7288 0658  
                      l7464 4AF2                        l7392 3AAE                        l7448 4692  
                      l7632 0F4E                        l7640 0F66                        l7624 0F06  
                      l7616 0EB2                        l7608 0E4A                        l7560 0C7E  
                      l7552 0C4C                        l7544 0BFE                        l7536 0BAE  
                      l7528 0B94                        l7480 3976                        l7472 38FC  
                      l8192 3690                        l8184 35C2                        l8176 3522  
                      l8168 3502                        l7720 26D8                        l7712 267E  
                      l7800 10D0                        l8264 3064                        l8256 303C  
                      l8248 2FE6                        l8272 308E                        l8360 215C  
                      l8352 2080                        l8344 203E                        l8336 2000  
                      l8328 1FE0                        l8280 1EDE                        l8096 3EA6  
                      l8088 3E8E                        l8520 25E8                        l8512 25AA  
                      l8504 2542                        l8440 22FC                        l8432 22D6  
                      l8424 22CC                        l8416 22C4                        l8408 22BC  
                      l6850 490C                        l6842 48E8                        l6834 48C2  
                      l6826 489A                        l6674 2D98                        l6666 2D48  
                      l6658 2CF2                        l6594 2B1A                        l6578 2AB2  
                      l6586 2ADC                        l6914 4C0A                        l6906 4B98  
                      l6930 448A                        l6922 442E                        l6770 1D14  
                      l6762 1C88                        l6754 1C34                        l6746 1BEE  
                      l6738 1BBC                        l6690 1A80                        l6498 195C  
                      l6818 5002                        l7386 0B22                        l7378 0AD6  
                      l7298 0716                        l7466 4B0E                        l7458 4ABC  
                      l7394 3AC8                        l7650 0FF4                        l7634 0F56  
                      l7642 0F84                        l7618 0EE4                        l7570 0CE8  
                      l7554 0C5C                        l7546 0C08                        l7538 0BCC  
                      l7490 39D0                        l7474 390C                        l8194 369E  
                      l8186 35D2                        l8178 3532                        l7706 36FC  
                      l7730 2832                        l7722 2744                        l7714 2694  
                      l7802 10EE                        l7810 1140                        l8266 3072  
                      l8258 304A                        l8370 21BE                        l8362 2160  
                      l8354 20FA                        l8346 204C                        l8290 1EF6  
                      l8282 1EEA                        l8274 1E9E                        l8098 3EAA  
                      l8530 2644                        l8506 255C                        l8450 235A  
                      l8442 2316                        l8434 22DC                        l8426 22CE  
                      l8418 22C6                        l6852 4922                        l6844 48F0  
                      l6860 4938                        l6836 48CA                        l6828 48A8  
                      l6676 2DA6                        l6668 2D5E                        l6596 2B1E  
                      l6588 2AEC                        l6916 4C10                        l6908 4BA8  
                      l6932 449C                        l6924 443E                        l6780 1D50  
                      l6772 1D1E                        l6764 1CB2                        l6756 1C44  
                      l6748 1BFE                        l6692 1A8E                        l7388 0B2A  
                      l7468 4B2E                        l7396 3AD0                        l7660 1056  
                      l7652 100A                        l7644 0FA4                        l7636 0F5E  
                      l7628 0F2E                        l7580 0D50                        l7572 0D04  
                      l7556 0C6E                        l7564 0C86                        l7548 0C2C  
                      l7492 39D2                        l7484 398A                        l7476 391A  
                      l8196 36AC                        l8188 35F0                        l7900 52D0  
                      l7740 291C                        l7732 2864                        l7724 276A  
                      l7716 2696                        l7812 115E                        l7804 1104  
                      l8268 3078                        l8372 21E4                        l8364 2186  
                      l8356 20FE                        l8348 2064                        l8292 1EF8  
                      l8284 1EEE                        l8276 1ECC                        l8532 2652  
                      l8516 25B2                        l8508 2582                        l8460 23F0  
                      l8452 2386                        l8444 2326                        l8436 22E0  
                      l8428 22D0                        l6862 4948                        l6854 492A  
                      l6846 48F8                        l6838 48CE                        l6870 4A10  
                      l6678 2DAC                        l6934 44AA                        l6926 446C  
                      l6790 1DC2                        l6782 1D5E                        l6774 1D2C  
                      l6766 1CE8                        l6758 1C60                        l6694 1A90  
                      l6942 5112                        l6950 42F8                        l7398 3ADC  
                      l7654 1028                        l7646 0FCC                        l7662 106E  
                      l7558 0C76                        l7566 0CAC                        l7910 5068  
                      l7494 39DE                        l7486 3992                        l7478 3960  
                      l8198 36C4                        l7742 2942                        l7726 27C2  
                      l7718 26B4                        l7814 117C                        l7830 1258  
                      l7806 1118                        l8374 21F2                        l8366 21A4  
                      l8358 212C                        l8382 2224                        l8294 1EFE  
                      l8286 1EF2                        l8278 1EDC                        l8390 5356  
                      l8518 25CE                        l8470 243A                        l8526 25F0  
                      l8454 239E                        l8446 2334                        l8438 22EE  
                      l7680 52A8                        l7760 496E                        l6864 4950  
                      l6856 492C                        l6848 4906                        l6880 4A40  
                      l6872 4A1E                        l6936 44FA                        l6928 447C  
                      l6792 1DD0                        l6784 1D8C                        l6776 1D3E  
                      l6768 1CF6                        l6696 1AA0                        l6688 1A74  
                      l6944 512A                        l6960 4350                        l6952 4310  
                      l7592 0DC0                        l7584 0D68                        l7568 0CC8  
                      l7576 0D20                        l7912 507E                        l7904 504A  
                      l7496 3A1A                        l7488 399E                        l7672 51F0  
                      l7744 299A                        l7728 2822                        l7736 288C  
                      l7832 1268                        l7816 118C                        l7824 11FC  
                      l7840 1324                        l8376 2200                        l8368 21AA  
                      l8384 226C                        l8296 1F00                        l8288 1EF4  
                      l7920 5320                        l8528 2632                        l8472 2456  
                      l8464 2410                        l8456 23AC                        l8448 234C  
                      l8392 2294                        l7770 49B2                        l7762 497A  
                      l6858 4932                        l6890 4A86                        l6882 4A52  
                      l6874 4A26                        l6938 4500                        l6794 1DFA  
                      l6778 1D4C                        l6698 1AB0                        l6946 513A  
                      l6962 4360                        l7594 0DD6                        l7586 0D88  
                      l7578 0D36                        l7666 1080                        l7906 5058  
                      l7498 3A26                        l7674 5210                        l7746 29F2  
                      l7738 28B0                        l7842 1342                        l7834 12B4  
                      l7826 1230                        l7818 11C0                        l7690 4DCC  
                      l7682 4D94                        l8386 228E                        l8378 2206  
                      l8298 1F08                        l7922 5312                        l7930 5190  
                      l8490 24B4                        l8482 2482                        l8466 242C  
                      l8458 23D8                        l8394 22AC                        l7780 49EA  
                      l7764 498A                        l7756 495C                        l6892 4A8E  
                      l6884 4A5A                        l6876 4A2A                        l6868 4A0C  
                      l6788 1DB6                        l6796 1DFE                        l6972 438A  
                      l6964 4364                        l6956 4324                        l7596 0DF4  
                      l7588 0DA4                        l7692 4FB8                        l7908 5060  
                      l7676 5212                        l7748 2A0A                        l7844 1360  
                      l7860 13E0                        l7836 12FC                        l7684 4DA4  
                      l7940 4D64                        l7916 533C                        l7924 5304  
                      l7932 5194                        l8484 2490                        l8476 245E  
                      l8468 2430                        l8396 22AE                        l7782 51BA  
                      l7766 4994                        l7758 495C                        l6894 4A94  
                      l6886 4A62                        l6878 4A38                        l6798 1E18  
                      l6990 43EE                        l6982 43B2                        l6974 4394  
                      l6966 4372                        l6958 434E                        l7694 4FC4  
                      l7790 50E4                        l7862 13F0                        l7846 1370  
                      l7854 13A8                        l7870 1484                        l7950 4E80  
                      l7686 4DB2                        l7926 534A                        l7918 532E  
                      l7934 51AC                        l8494 24BC                        l8478 247A  
                      l8398 22B0                        l7784 51CC                        l7776 49B6  
                      l7768 49A6                        l6888 4A70                        l6896 4A9A  
                      l6984 43BE                        l6976 439E                        l7696 4FDA  
                      l7792 50E6                        l7880 14E2                        l7872 149A  
                      l7864 1428                        l7960 4EAE                        l7952 4E84  
                      l7944 4E64                        l7688 4DC2                        l7928 5184  
                      l8496 24D8                        l8488 2498                        l7970 46F2  
                      l7786 51DE                        l7778 49E8                        l6898 4AAA  
                      l6986 43CE                        l6994 4CB2                        l7698 4FF6  
                      l7890 1556                        l7882 1506                        l7874 14AA  
                      l7866 145C                        l7794 10A8                        l7962 4EB0  
                      l7954 4E86                        l7946 4E68                        l7938 4D26  
                      l8498 24F0                        l7980 472E                        l7972 4700  
                      l6988 43DE                        l6996 4CBA                        l7788 50D6  
                      l7796 10B8                        l7964 4EB4                        l7956 4E94  
                      l7948 4E78                        l7982 47AC                        l7974 470C  
                      l6998 4CCC                        l7990 4204                        l7886 152E  
                      l7878 14BE                        l7798 10CE                        l7958 4EAA  
                      l7966 4EBA                        l7984 47BC                        l7976 470E  
                      l7992 4216                        l7896 1592                        l7978 471C  
                      l7994 421C                        l7986 41EA                        l7898 52CC  
                      l7996 422E                        l7988 41EE                        STR_1 FEC0  
                      STR_2 FF26                        STR_3 FF15                        STR_4 FE35  
                      STR_5 FEAF                        STR_6 FF8C                        STR_7 FF48  
                      STR_8 FE35                        STR_9 FF7B                        u7000 47DE  
                      u7001 47DA                        u7010 47F0                        u7011 47EC  
                      _PEIE 7F96                        u7020 4818                        u7100 166A  
                      u7021 4814                        u7101 1666                        u7030 484E  
                      u7110 16A6                        u7031 484A                        u7111 16A2  
                      u8000 4C0A                        u7200 17C0                        u7120 16B4  
                      u7040 15CE                        u8001 4C06                        u7201 17BC  
                      u7121 16B0                        u7041 15CA                        u8010 442E  
                      u7210 17F2                        u7130 1722                        u7050 15E0  
                      u8011 442A                        u7211 17EE                        u7131 171E  
                      u7051 15DC                        u8020 446C                        u7300 193A  
                      u7220 1800                        u7140 173A                        u7060 15F0  
                      u8100 4386                        u8021 4468                        u7301 1936  
                      u7221 17FC                        u7141 1734                        u7061 15EC  
                      u8101 4382                        u8030 448A                        u7310 194A  
                      u7230 181E                        u7150 173C                        u7070 1632  
                      u8110 43AE                        u8031 4486                        u7311 1946  
                      u7231 181A                        u7071 162E                        u8111 43AA  
                      u8200 4C22                        u8040 44AA                        u7400 1A32  
                      u7320 195C                        u7240 1856                        u7160 1764  
                      u7080 1648                        u8120 43CE                        u9000 46D0  
                      u8201 4C1E                        u8041 44A6                        u7401 1A2E  
                      u7321 1958                        u7241 1852                        u7161 1760  
                      u7081 1644                        u8121 43CA                        u9001 46CC  
                      u8210 4C44                        u8050 44FA                        u7410 1A44  
                      u7330 1972                        u7250 189C                        u7170 1782  
                      u7090 165A                        u8130 43DE                        u9010 4AE6  
                      u8211 4C40                        u8051 44F6                        u7411 1A40  
                      u7331 196E                        u7251 1898                        u7171 177E  
                      u7091 1656                        u8131 43DA                        u9011 4AE2  
                      u8220 4C8E                        u7500 2B02                        u8060 512A  
                      u7420 1A60                        u7340 1988                        u7260 18D2  
                      u7180 17A2                        u8300 45EE                        u9020 4B60  
                      u8140 4CCC                        u9100 3A52                        u8221 4C8A  
                      u7501 2AFE                        u8061 5126                        u7421 1A5C  
                      u7341 1984                        u7261 18CE                        u7181 179E  
                      u8301 45E8                        u9021 4B5C                        u8141 4CC8  
                      u9101 3A4E                        u7430 50D2                        u8230 4C9C  
                      u7510 2B42                        u7350 199C                        u7270 18E2  
                      u7190 17B0                        u8070 4310                        u8310 45F0  
                      u8150 4CEA                        u9110 3A8C                        u9030 390C  
                      u7431 50CE                        u8231 4C98                        u7511 2B3E  
                      u7351 1998                        u7271 18DE                        u7191 17AC  
                      u8071 430C                        u8151 4CE6                        u9111 3A88  
                      u9031 3908                        u8240 5232                        u7600 2CBC  
                      u7520 2BB8                        u7440 2A3A                        u7360 19B6  
                      u7280 190E                        u8080 4344                        u8400 341C  
                      u8320 5182                        u8160 4D06                        u9200 0E4A  
                      u9120 3A9A                        u9040 391A                        u8241 522E  
                      u7601 2CB8                        u7521 2BB4                        u7441 2A36  
                      u7361 19B2                        u7281 190A                        u8401 3418  
                      u8321 517E                        u8161 4D02                        u9201 0E46  
                      u9121 3A96                        u9041 3916                        u7610 2CD2  
                      u7530 2BDA                        u7450 2A4C                        u7370 19F0  
                      u7290 191E                        u8090 4372                        u8250 4544  
                      u8410 3470                        u8330 4ECC                        u8170 4E10  
                      u9210 0E80                        u9130 0B70                        u9050 3976  
                      u7611 2CCE                        u7531 2BD6                        u7451 2A48  
                      u7371 19EC                        u7291 191A                        u8091 436E  
                      u8331 4EC8                        u8171 4E0C                        u9211 0E7C  
                      u9131 0B6C                        u9051 3972                        u8500 3D54  
                      u7620 2CE6                        u7540 2C04                        u7460 2A5C  
                      u7700 1AF0                        u7380 1A02                        u8260 4562  
                      u8420 348C                        u8340 331C                        u8180 4E2E  
                      u9220 0EB2                        u9140 0BDC                        u9300 4FF6  
                      u9060 39CC                        u8501 3D50                        u7621 2CE2  
                      u7541 2C00                        u7461 2A58                        u7701 1AEC  
                      u7381 19FE                        u8085 433A                        u8261 455E  
                      u8421 3488                        u8181 4E2A                        u9221 0EAE  
                      u9141 0BD8                        u9301 4FF2                        u9061 39C8  
                      u8510 3D66                        u7630 2D00                        u7550 2C28  
                      u7470 2AA0                        u7710 1B02                        u7390 1A12  
                      u8270 458A                        u8430 34C8                        u8350 334C  
                      u8190 4E44                        u9230 0EE4                        u9150 0BFE  
                      u9070 3A16                        u9310 2690                        u8511 3D62  
                      u7631 2CFC                        u7551 2C24                        u7471 2A9C  
                      u7711 1AFE                        u7391 1A0E                        u8271 4586  
                      u8255 453A                        u8431 34C4                        u8415 3466  
                      u8351 3348                        u8191 4E40                        u9231 0EE0  
                      u9151 0BFA                        u9071 3A12                        u9311 268A  
                      u9400 49FA                        u8520 3D80                        u7640 2D48  
                      u7560 2C3E                        u7480 2AB2                        u7800 1DA2  
                      u7720 1B12                        u8280 45B4                        u8360 336E  
                      u8440 4FB6                        u8600 02AC                        u9240 0F06  
                      u9160 0C2C                        u9080 3A34                        u9320 2692  
                      u9401 49F6                        u8521 3D7C                        u7641 2D44  
                      u7561 2C3A                        u7481 2AAE                        u7801 1D9E  
                      u7721 1B0E                        u8281 45B0                        u8361 336A  
                      u8345 3312                        u8441 4FB2                        u8601 02A8  
                      u9241 0F02                        u9161 0C28                        u9081 3A30  
                      u9410 4A0A                        u8530 3D90                        u8450 3C5C  
                      u7650 2D78                        u7570 2C5C                        u7490 2AC2  
                      u7810 1DB6                        u7730 1B48                        u8610 0326  
                      u9250 0FA0                        u9170 0CC8                        u9090 3A44  
                      u9330 26B4                        u9411 4A06                        u8531 3D8C  
                      u8451 3C56                        u7651 2D74                        u7571 2C58  
                      u7491 2ABE                        u7811 1DB2                        u7731 1B44  
                      u8611 0322                        u9251 0F9C                        u9171 0CC4  
                      u9091 3A40                        u9331 26B0                        u9260 52BA  
                      u9420 51CA                        u7900 4922                        u8460 3C5E  
                      u7660 2DA6                        u7580 2C7C                        u7820 1DD0  
                      u7740 1B58                        u8380 33DC                        u8700 0568  
                      u8620 03B2                        u8540 0176                        u9180 0CE4  
                      u9340 2832                        u9500 115E                        u9261 52B6  
                      u9421 51C6                        u7901 491E                        u7661 2DA2  
                      u7581 2C78                        u7821 1DCC                        u7741 1B54  
                      u8381 33D8                        u8701 0564                        u8621 03AE  
                      u8541 0172                        u9181 0CE0                        u9341 282E  
                      u9501 115A                        u9270 52C8                        u9430 51EE  
                      u7910 4948                        u8470 3C6E                        u7590 2C8E  
                      u7830 1E18                        u7750 1CD2                        u7670 1A8E  
                      u8390 3400                        u8710 06B0                        u8630 03E4  
                      u8550 01C0                        u9190 0D84                        u9350 2A1A  
                      u9510 117C                        u9271 52C4                        u9431 51EA  
                      u7911 4944                        u8471 3C6A                        u7591 2C8A  
                      u7831 1E14                        u7671 1A8A                        u8295 45C6  
                      u8375 3382                        u8711 06AC                        u8631 03E0  
                      u8551 01BC                        u9191 0D80                        u9351 2A16  
                      u9511 1178                        u9360 496C                        u7920 4A1E  
                      u8480 3C9A                        u7840 1E46                        u7760 1D2C  
                      u7680 1AA0                        u8376 338C                        u8800 09A2  
                      u8720 0716                        u8640 0422                        u8560 01D0  
                      u9440 50F8                        u9520 118C                        u9280 4DB2  
                      u9361 4968                        u7921 4A1A                        u8481 3C96  
                      u7841 1E42                        u7761 1D28                        u7681 1A9C  
                      u8377 339C                        u8801 099E                        u8721 0712  
                      u8641 041E                        u8561 01CC                        u9441 50F4  
                      u9521 1188                        u9281 4DAE                        u9370 498A  
                      u7930 4A38                        u8490 3CB0                        u7850 1E80  
                      u7770 1D4C                        u7690 1AB0                        u8810 0A74  
                      u8730 075E                        u8650 04AE                        u8570 020E  
                      u9450 510C                        u9530 1268                        u9290 4DEC  
                      u9371 4986                        u7931 4A34                        u8491 3CAC  
                      u7851 1E7C                        u7771 1D48                        u7755 1CC8  
                      u7691 1AAC                        u8395 33F6                        u8811 0A70  
                      u8731 075A                        u8651 04AA                        u8571 020A  
                      u9451 5108                        u9531 1264                        u9291 4DE8  
                      u9700 472C                        u9380 49A6                        u7860 48A8  
                      u7940 4A52                        u7780 1D5E                        u8820 0A90  
                      u8740 076E                        u8660 04E4                        u8580 0220  
                      u8900 3B4A                        u9540 1342                        u9460 10CA  
                      u9701 4728                        u9381 49A2                        u7861 48A4  
                      u7941 4A4E                        u7781 1D5A                        u8821 0A8C  
                      u8741 076A                        u8661 04E0                        u8581 021C  
                      u8901 3B46                        u9541 133E                        u9461 10C4  
                      u9605 5336                        u9710 47BC                        u9390 49E4  
                      u7870 48C2                        u7950 4A70                        u6990 52FC  
                      u7790 1D8C                        u8830 0AF6                        u8750 0808  
                      u8670 04FA                        u8590 029A                        u8910 3B70  
                      u9550 1360                        u9470 10CC                        u9606 5338  
                      u9711 47B8                        u7871 48BE                        u7951 4A6C  
                      u6991 52F8                        u7791 1D88                        u8831 0AF0  
                      u8751 0804                        u8671 04F6                        u8591 0296  
                      u8911 3B6C                        u9551 135C                        u9615 5328  
                      u7880 48E8                        u7960 4A86                        u8840 0AF8  
                      u8760 0856                        u8680 0530                        u8920 3BAA  
                      u9560 1370                        u9480 10EE                        u9616 532A  
                      u9800 4018                        u7881 48E4                        u7961 4A82  
                      u8761 0852                        u8681 052C                        u8921 3BA6  
                      u9721 41F8                        u9561 136C                        u9481 10EA  
                      u9625 531A                        u7890 4906                        u7970 4AAA  
                      u8850 0B0C                        u8770 0906                        u8690 053E  
                      u8930 3BD0                        u9730 4216                        u9570 13F0  
                      u9490 1104                        u9626 531C                        u9810 403A  
                      u9650 51AC                        u7891 4902                        u7971 4AA6  
                      u8851 0B08                        u8771 0902                        u8691 053A  
                      u9731 4212                        u9571 13EC                        u9491 1100  
                      u9635 530C                        u9811 4036                        u9651 51A8  
                      u7980 4B98                        u8780 0940                        u8940 3C02  
                      u8860 3AC8                        u9740 422E                        u9580 149A  
                      u9660 4D84                        u9636 530E                        u9820 4072  
                      u9900 3F20                        u9397 49DA                        u7981 4B94  
                      u8781 093C                        u8941 3BFE                        u8861 3AC4  
                      u9741 422A                        u9581 1496                        u9645 5352  
                      u9821 406E                        u9901 3F1C                        u7990 4BD6  
                      u8790 094E                        u8950 3C10                        u8870 3B0E  
                      u9670 4E78                        u9646 5354                        u9830 4088  
                      u9910 40CE                        u7991 4BD2                        u8791 094A  
                      u8951 3C0C                        u9671 4E74                        u9831 4084  
                      u9751 3F8E                        u9911 40CA                        u8960 3C4A  
                      u8880 3B1E                        u9680 4E94                        u9920 4122  
                      u9840 3E08                        u8961 3C46                        u8937 3BC6  
                      u8881 3B1A                        u9681 4E90                        u9665 4D7A  
                      u9761 3FA0                        u9921 411E                        u9841 3E04  
                      u8890 3B2C                        u8970 4610                        u9690 4EAA  
                      u9930 4148                        u9850 3E6C                        u8891 3B28  
                      u8971 460C                        u9691 4EA6                        u9595 5344  
                      u9931 4144                        u9851 3E68                        u8980 46A4  
                      u9596 5346                        u9940 4156                        u9860 3EC6  
                      u8877 3B04                        u8981 46A0                        u9941 4152  
                      u9861 3EC2                        u8990 46B6                        u9790 4016  
                      u9950 4168                        u9870 3ED4                        u8991 46B2  
                      u9791 4010                        u9951 4164                        u9871 3ED0  
                      u9784 4000                        u9960 4180                        u9880 3EFA  
                      u9785 3FFC                        u9961 417C                        u9881 3EF6  
                      _TMR1 0FCE                        u9778 3FD2                        u9970 4194  
                      u9890 3F08                        u9779 401A                        u9971 4190  
                      u9891 3F04                        u9980 41BA                        u9981 41B6  
                      u9990 41C8                        u9991 41C4                        abs@a 000C  
                      _dbuf 0127                        _half FE0F                        _labs 4EBE  
                      _main 2294                        _dtoa 3C4C                        _rand 4D26  
                      _seed 0197                        _prec 0057                        _sinf 10A8  
                      pad@i 001E                        pad@p 001B                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _stoa 3AAE  
                      btemp 005A                        _utoa 4602               ___fpclassifyf 4504  
                      prodh 0FF4                        prodl 0FF3                        start 014E  
           ___fldiv@new_exp 003E                ___param_bank 0000                       ??_ISR 0001  
            _LCD_ShowString 495A                       ??_abs 000E                       ??_pad 001D  
          __end_of_LCD_Init 47CC            __end_of_LCD_Send 52CC               ___fltol@sign1 0052  
                     ?_labs 0006             __end_of___fladd 1A74                       ?_main 0001  
                     ?_dtoa 0020             __end_of___fldiv 2DBA                       ?_rand 0012  
           __end_of___awdiv 495A             __end_of___cosdf 38FA             __end_of___lbdiv 4EBE  
           __end_of___flneg 514C                       STR_10 FF6A                       STR_11 FF9D  
                     STR_12 FF37                       STR_20 FE9E                       STR_13 FE35  
                     STR_21 FF59                       STR_22 FFE6                       STR_14 FF04  
                     STR_30 FFD6                       STR_31 FFCC                       STR_15 FE8D  
                     STR_23 FFDC                       STR_32 FFCD                       STR_40 FFEB  
                     STR_16 FEE2                       STR_24 FFE1                       STR_17 FEF3  
                     STR_33 FE46                       STR_25 FFFB                       STR_34 FFD2  
                     STR_18 FED1                       STR_26 FFF7                       STR_43 FFEF  
                     STR_19 FFAE                       STR_35 FE33                       STR_27 FFF3  
                     STR_36 FE6B                       STR_28 FFD7             __end_of___awmod 4ABC  
                     STR_37 FE33                       STR_29 FFC6                       STR_46 FFBF  
                     STR_38 FE59                       STR_39 FE7C                       ?_sinf 00A4  
           __end_of___flmul 1E9E             __end_of___flsub 504A             __end_of___fltol 4400  
                     ?_stoa 0010                       u10000 41DC                       u10001 41D8  
                     u10011 350A                       u10020 3532                       u10100 3014  
                     u10021 352E                       u10101 3010                       u10030 35D2  
                     u10110 3036                       u10031 35CE                       u10111 3032  
                     ?_utoa 0020                       u10040 36AC                       u10120 304A  
                     u10200 2072                       u10041 36A8                       u10121 3046  
                     u10201 206E                       u10050 36D2                       u10130 305E  
                     u10210 2080                       u10051 36CE                       u10131 305A  
                     u10211 207C                       u10060 36E0                       u10140 3072  
                     u10220 212C                       u10300 23CA                       u10061 36DC  
                     u10141 306E                       u10221 2128                       u10301 23C6  
                     u10070 36F8                       u10150 30A0                       u10230 215C  
                     u10310 23D8                       u10071 36F4                       u10151 309C  
                     u10231 2158                       u10311 23D4                       u10080 2E2A  
                     u10240 227E                       u10320 23FE                       u10081 2E26  
                     u10241 227A                       u10161 1EE4                       u10321 23FA  
                     u10090 2E8C                       u10330 240C                       u10250 2334  
                     u10091 2E88                       u10171 1F18                       u10331 2408  
                     u10251 2330                       u10180 1F92                       u10340 2644  
                     u10260 235A                       u10181 1F8E                       u10341 2640  
                     u10261 2356                       u10190 204C                       u10270 2378  
                     u10191 2048                       u10407 24E4                       u10271 2374  
                     u10280 2386                       u10417 2518                       u10281 2382  
                     u10290 23AC                       u10507 2058                       u10427 254E  
                     u10291 23A8             ___awdiv@divisor 001A                       u10517 2212  
                     u10437 2576                       u10357 22A0                       u10527 3084  
                     u10447 259C                       u10367 2308                       u10537 36B8  
                     u10457 25DA                       u10377 2340                       u10547 4714  
                     u10467 3EE0                       u10387 2392                       u10557 47C2  
                     u10477 412C                       u10397 23E4                       u10487 419E  
                     u10497 4044                       _RC1IE 7CED                       _RC1IF 7CF5  
           __end_of___lwdiv 4D26             __end_of___sindf 32D4             __end_of___lwmod 4E62  
                     i2l412 0088                       i2l414 0074                       i2l423 0142  
              ___sindf$4540 0078             ___awdiv@counter 001C                ___sindf$4538 0070  
              ___sindf$4539 0074                vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4  
       ___lmul@multiplicand 000A             __end_of_pio2_1t FE07                       _fabsf 51F0  
                     _flags 0059                       _gmail 0177         read_prec_or_width@c 000E  
       read_prec_or_width@n 000F                       _fputc 47CC                       _fputs 5090  
                     labs@a 0006                       pad@fp 0017                       _width 0055  
           __end_of_invpio2 FE0F                       _putch 52EC                       dtoa@d 0022  
                     dtoa@i 002B                       dtoa@p 0028                       dtoa@s 002A  
                     dtoa@w 0026        __end_of_LED1_Control 5348             __end_of_runGAME 2294  
           __end_of_runGPIO 40A0                       pclath 0FFA                       tablat 0FF5  
           __end_of_runUART 3F34        __end_of_LED2_Control 533A                       sinf@n 00B0  
                     sinf@x 00A4                       sinf@y 00B6                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 001C                       stoa@p 0016  
                     stoa@s 0012                       stoa@w 0018                       ttemp5 005B  
                     ttemp6 005E                       ttemp7 0062                       utoa@d 0022  
      __end_of_LED3_Control 532C                       utoa@i 0028                       utoa@p 0026  
                     utoa@w 0024                       status 0FD8                       wtemp8 005B  
           __end_of_sprintf 5090              ?___fpclassifyf 0006             ___lbdiv@divisor 0006  
      __end_of_LED4_Control 531E             ___lbdiv@counter 0008        __end_of_LED5_Control 5310  
           runUART@reversed 00D4        __end_of_LED6_Control 5356             __initialization 4F14  
    __end_of_LCD_ShowString 4A0C                __end_of_half FE13                __end_of_labs 4F14  
              __end_of_main 265E                __end_of_dtoa 3DC8                __end_of_rand 4D94  
              __end_of_sinf 15B2                __end_of_stoa 3C4C                __end_of_utoa 46F2  
              LCD_Send@data 0006                      ??_labs 000A                      ??_main 00FA  
                    ??_dtoa 0024                      ??_rand 0014                      ??_sinf 0054  
                    ??_stoa 0014                      ??_utoa 0024           __end_of_LCD_Clear 51F0  
             __activetblptr 0002  __end_of_read_prec_or_width 4B6A                ?_moveDisplay 00E7  
                    ?_fabsf 0006                      ?_fputc 0007                      ?_fputs 0010  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      _CCPR1L 0FBE  
          ___awdiv@dividend 0018                      _GAMEIE 0124                      ?_putch 0001  
                    _GODONE 7E11                      _GPIOIE 0126                      i2l6300 00E8  
                    i2l6310 0128                      i2l6302 00FA                      i2l6312 012C  
                    i2l6304 00FE                      i2l6314 013A                      i2l6306 0110  
                    i2l6308 0120                      i2l6270 002E                      i2l6280 0082  
                    i2l6272 0040                      i2l6290 00C0                      i2l6282 0090  
                    i2l6274 004E                      i2l6266 0012                      i2l6292 00C2  
                    i2l6276 0066                      i2l6268 0020                      i2l6284 0092  
                    i2l6294 00CA                      i2l6286 00A0                      i2l6288 00AE  
                    i2l6296 00CC                      i2l6298 00DA                      _RCREG1 0FAE  
             ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C               ___rem_pio2f@x 0084  
             ___rem_pio2f@y 0088               vfpfcnvrt@done 00BF                      _UARTIE 0125  
                    _SPBRG1 0FAF                      _TMR1IE 7CE8                      _TMR1IF 7CF0  
                    _TMR2IE 7CE9                      _TMR2IF 7CF1                      _TMR1ON 7E68  
                    _TMR2ON 7DD2                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 3AAE                _CCPTMRS0bits 0F49  
              vfprintf@cfmt 00CC             ?_LCD_ShowString 0007                      _s1pio2 FE2F  
                    _s2pio2 FE2B                      _s3pio2 FE27                      _s4pio2 FE23  
                    ___flge 4400                      ___fleq 4B6A                      ___lmul 4D94  
                 ??___fladd 004E                      ___wmul 5280                   ??___fldiv 0035  
                 ??___awdiv 001C                   ??___cosdf 0052                   ??___lbdiv 0007  
                 ??___flneg 0052                   ??___awmod 000A                   ??___flmul 001C  
                 ??___flsub 0052                   ??___fltol 0068            runUART@keepState 00F3  
                    _efgtoa 0152                   ??___lwdiv 000A                   ??___sindf 0052  
                 ??___lwmod 000A                      _pio2_1 FE07                      _floorf 32D4  
                    fabsf@u 000A                      fabsf@x 0006                      _memcpy 4F68  
      read_prec_or_width@ap 000D                      clear_0 4F3A                      clear_1 4F46  
          ___awdiv@quotient 001E                      _runADC 34EA                      _runDAC 2DBA  
           ___awmod@divisor 0008                      isa$std 0001                      _runPWM 40A0  
      runGAME@keepStateGAME 01C5             ___awmod@counter 000A                      _printf 52CC  
                    pad@buf 0019                      dtoa@fp 0020                      _strcpy 514C  
                    _strlen 5184                      fputc@c 0007                      fputs@c 0014  
                    fputs@i 0015                      fputs@s 0010            __end_of_runMUSIC 5358  
           ___fpclassifyf@e 000E             ___fpclassifyf@u 0010             ___fpclassifyf@x 0006  
              __mediumconst FDF2                   ??_runGAME 00E7                      sinf@ux 00BA  
                 ??_runGPIO 0007                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_SPI_write 5112                   ??_runUART 00D2  
                    stoa@cp 001A                      stoa@fp 0010            __end_of_vfprintf 5002  
                    utoa@fp 0020                   ??_sprintf 0054            ___lbdiv@dividend 0007  
                ___flge@ff1 002D                  ___flge@ff2 0031             ??___fpclassifyf 000A  
              ___xxtofl@arg 0010                ___xxtofl@exp 000F                ___xxtofl@val 0006  
                ___fleq@ff1 0006                  ___fleq@ff2 000A                  __accesstop 0060  
   __end_of__initialization 4F5A                   ?_LCD_Init 0001                   ?_LCD_Send 0001  
                ___flneg@f1 0080               ___rparam_used 0001                  ___fltol@f1 0064  
            __pcstackCOMRAM 0001           LED4_Control@state 0006                __pidataBANK1 5258  
             __end_of_fabsf 5224               __end_of_fputc 4896               __end_of_fputs 50D4  
             __end_of_putch 5302                  __end_of_C0 FE23                  __end_of_C1 FE1F  
                __end_of_C2 FE1B                  __end_of_C3 FE17                  __end_of_S1 FE03  
                __end_of_S2 FDFF                  __end_of_S3 FDFB                  __end_of_S4 FDF7  
          ___lbdiv@quotient 0009                     ??_fabsf 000A                     ??_fputc 000B  
                   ??_fputs 0014                     ??_putch 0006                  __pbssBANK0 00FE  
                __pbssBANK1 0100                  __pbssBANK2 0200                  ??_LCD_Init 0007  
                ??_LCD_Send 0006                 runADC@F6967 0100                SPI_write@LSB 0007  
              SPI_write@MSB 0006                     ISR@temp 0005                     ?___flge 002D  
                   ?___fleq 0006                     ?___lmul 0006                     ?___wmul 0006  
                   ?_efgtoa 0084               ??___rem_pio2f 0089                     ?_floorf 0046  
              _LED1_Control 533A                     ?_memcpy 0006              ___lmul@product 000E  
                   ?_runADC 0001                     ?_runDAC 0001                _LED2_Control 532C  
       runGAME@randomNumber 01CB                     ?_runPWM 0001                     ?_printf 00CE  
                   ?_strcpy 0006                     ?_strlen 0006                _LED3_Control 531E  
              _LED4_Control 5310                   ?___xxtofl 0006                _LED5_Control 5302  
            ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094  
              _LED6_Control 5348                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F                 runGAME@pot1 01C9                 runGAME@text 019B  
         runGPIO@LEDControl 0015             LCD_ShowString@i 000C                     __Hparam 0000  
                   __Lparam 0000                   ?_runMUSIC 0001                     ___fladd 15B2  
                   ___fldiv 2A20                     ___awdiv 4896                     ___cosdf 36FC  
                   ___lbdiv 4E62                     ___flneg 5112                     ___awmod 4A0C  
                   ___flmul 1A74                     ___flsub 5002                     ___fltol 42F8  
                   ___lwdiv 4CB2                     ___sindf 30A2                     ___lwmod 4DFE  
                 ?_vfprintf 00C7              main@setUpAgain 00FC                     __pcinit 4F14  
                   __ramtop 1000                     __ptext0 2294                     __ptext1 3DC8  
                   __ptext2 5184                     __ptext3 40A0                     __ptext4 5356  
                   __ptext5 3F34                     __ptext6 5302                     __ptext7 5310  
                   __ptext8 531E                     __ptext9 532C                     _pio2_1t FE03  
                 _T1CONbits 0FCD             runPWM@keepState 0022       read_prec_or_width@fmt 000C  
                ??___xxtofl 000A         __end_of___rem_pio2f 2A20            ___awmod@dividend 0006  
                   _invpio2 FE0B                     _runGAME 1E9E                     _runGPIO 3F34  
                   efgtoa@c 008A                     efgtoa@d 0098                     efgtoa@e 009C  
                   efgtoa@f 0086                     efgtoa@g 00AF                     efgtoa@h 00A6  
                   efgtoa@i 00A4                     efgtoa@l 00AA                     efgtoa@m 009A  
                   efgtoa@n 00B3                     efgtoa@p 008F                     efgtoa@t 0091  
                   efgtoa@u 00B5                     efgtoa@w 009E                     _runUART 3DC8  
                 _LCD_Clear 51BA                     _sprintf 504A            ___rem_pio2f$4537 008F  
      end_of_initialization 4F5A                     floorf@e 0064                     floorf@m 0060  
                   floorf@u 0066                     floorf@x 0046                     memcpy@d 000D  
                   memcpy@n 000A                     memcpy@s 000F                     fputc@fp 0009  
          ___rem_pio2f@F526 0115               __Lmediumconst FDF2                     fputs@fp 0012  
          ??_LCD_ShowString 0009          _read_prec_or_width 4ABC                   i2u1056_47 0058  
         LED1_Control@state 0006       LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093  
        runGAME@GAMEdivider 01C8                  ??_runMUSIC 0006           __end_of_vfpfcnvrt 10A8  
                efgtoa@mode 0096                  efgtoa@sign 00AE                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 000C                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 00C0  
                ??_vfprintf 0054                     strcpy@d 000A                     strlen@a 0008  
                   strlen@s 0006                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0063               ___xxtofl@sign 000E                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000E                 ___fldiv@grs 0040  
               ___fldiv@rem 0039                   _SPI_write 50D4                 ___flmul@grs 0022  
               _CCP1CONbits 0FBD           LED5_Control@state 0006              __end_of_s1pio2 FE33  
            __end_of_s2pio2 FE2F              __end_of_s3pio2 FE2B              __end_of_s4pio2 FE27  
            __end_of___flge 4504              __end_of___fleq 4C14              __end_of___lmul 4DFE  
               vfpfcnvrt@ap 00BC                 vfpfcnvrt@cp 00C5                 ___rem_pio2f 265E  
               vfpfcnvrt@fp 00B9              __end_of___wmul 52A6              __end_of_efgtoa 0B4C  
            __end_of_pio2_1 FE0B        moveDisplay@menuItem1 019B        moveDisplay@menuItem2 01AC  
            __end_of_floorf 34EA        moveDisplay@menuItems 01BD              __end_of_memcpy 4FB8  
                floorf@F521 0119              __end_of_runADC 36FC              __end_of_runDAC 30A2  
            __end_of_runPWM 41E6              __end_of_printf 52EC              __end_of_strcpy 5184  
            __end_of_strlen 51BA         start_initialization 4F14                 __end_of_ISR 014E  
               __end_of_abs 5258                 __end_of_pad 4CB2                  ?_SPI_write 0001  
     __end_of___fpclassifyf 4602             runADC@keepState 01B8                 vfprintf@fmt 00C9  
                  ??___flge 0035                    ??___fleq 000E                    ??___lmul 000E  
                  ??___wmul 000A                    ??_efgtoa 008B                 __pdataBANK1 01CE  
                  ??_floorf 004A                    ??_memcpy 000C                    ??_runADC 00E7  
                  ??_runDAC 00D2                    ??_runPWM 0020                    ??_printf 0054  
                  ??_strcpy 000A                    ??_strlen 0008            runGAME@GAMEround 01C7  
                 ___fladd@a 004A                   ___fladd@b 0046                   ___fldiv@a 0031  
                 ___fldiv@b 002D               runGPIO@states 0009                   ___cosdf@r 0068  
                 ___cosdf@w 0078                   ___cosdf@x 0064                   ___cosdf@z 007C  
                 ___flmul@a 0018                   ___flmul@b 0014                 __pbssCOMRAM 0055  
                 ___flsub@a 0068                   ___flsub@b 0064               __pcstackBANK0 0060  
             __pcstackBANK1 019B                 ??_LCD_Clear 0007                   ___sindf@r 0068  
                 ___sindf@s 007C                   ___sindf@w 006C                   ___sindf@x 0064  
                 ___sindf@z 0080       runGPIO@numberOfStates 0021                 _efgtoa$4074 0093  
          ___lwdiv@dividend 0006                   _dtoa$4043 0024               SPI_write@data 0008  
                 __pintcode 0008               __pmediumconst FDF2                    ?___fladd 0046  
                  ?___fldiv 002D                    ?___awdiv 0018                    ?___cosdf 0064  
                  ?___lbdiv 0006                    ?___flneg 0080                    ?___awmod 0006  
                  ?___flmul 0014                    ?___flsub 0064                    ?___fltol 0064  
                runADC@pot1 01B4                  runADC@pot2 01B6                    ?___lwdiv 0006  
                  ?___sindf 0064                    ?___lwmod 0006                  runADC@text 019B  
                 fabsf@F465 0111               ??_moveDisplay 00E8                    ?_runGAME 0001  
                  ?_runGPIO 0001                    ?_runUART 0001             runDAC@keepState 00DB  
          ___lwdiv@quotient 000B                    ?_sprintf 00CE                   _sinf$4250 00AC  
                 _sinf$4249 00A8                   _sinf$4533 00B2                    _GAMEtime 0123  
               ??_SPI_write 0006              runDAC@DACindex 00DD                    _LCD_Init 46F2  
                  _LCD_Send 52A6              ___wmul@product 000A                    _LATAbits 0F89  
                  _LATBbits 0F8A                    _LATCbits 0F8B                    _LATDbits 0F8C  
              runGAME@F6970 0200                runGAME@F6964 0219                  runUART@len 00F4  
         LED2_Control@state 0006                    i2u690_40 0074                    i2u690_41 0070  
                  i2u691_40 0082                    i2u691_41 007E                    i2u692_40 00A0  
                  i2u692_41 009C                    i2u693_40 00AE                    i2u693_41 00AA  
                  i2u694_40 00C0                    i2u686_40 0020                    i2u694_41 00BC  
                  i2u686_41 001C                    i2u695_40 00DA                    i2u687_40 002E  
                  i2u695_41 00D6                    i2u687_41 002A                    i2u696_40 00E8  
                  i2u688_40 0040                    i2u696_41 00E4                    i2u688_41 003C  
                  i2u697_40 00FA                    i2u689_40 004E                    i2u697_41 00F6  
                  i2u689_41 004A                    i2u698_40 0110                    i2u698_41 010C  
                 _vfpfcnvrt 0B4C                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0006                   main@menuI 00FD            moveDisplay@F6965 01CE  
                vfpfcnvrt@c 00C4           ___lmul@multiplier 0006                   copy_data0 4F28  
         runGAME@approxText 01AC         __end_of_moveDisplay 42F8            moveDisplay@menuI 01CD  
          moveDisplay@where 00E7                runGPIO@F6975 01EA                runGPIO@F6993 01DE  
              runGPIO@GPIOi 0023                    __Hrparam 0000                   memcpy@tmp 000C  
                vfprintf@ap 00CB                    __Lrparam 0000                  vfprintf@fp 00C7  
           runGAME@GAMEpart 01C6           LED6_Control@state 0006                ?___rem_pio2f 0084  
                ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38  
                _ANSELBbits 0F39                  _ANSELCbits 0F3A                  _ANSELDbits 0F3B  
                _ANSELEbits 0F3C          ___fpclassifyf@F465 011D                  sprintf@fmt 00D0  
                  ___xxtofl 38FA             ___lwdiv@divisor 0008             ___lwdiv@counter 000A  
                  __ptext10 533A                    __ptext11 5348                    __ptext20 51F0  
                  __ptext12 1E9E                    __ptext21 36FC                    __ptext13 4D26  
                  __ptext30 4602                    __ptext22 52CC                    __ptext14 4D94  
                  __ptext31 4DFE                    __ptext23 50D4                    __ptext15 4E62  
                  __ptext40 32D4                    __ptext32 4CB2                    __ptext24 34EA  
                  __ptext16 2DBA                    __ptext41 4504                    __ptext33 3AAE  
                  __ptext25 38FA                    __ptext17 10A8                    __ptext50 3C4C  
                  __ptext42 42F8                    __ptext34 4ABC                    __ptext26 41E6  
                  __ptext18 30A2                    __ptext51 4C14                    __ptext43 5002  
                  __ptext35 5280                    __ptext27 504A                    __ptext19 265E  
                  __ptext60 46F2                    __ptext52 5090                    __ptext44 15B2  
                  __ptext36 0152                    __ptext28 4FB8                    __ptext61 52A6  
                  __ptext53 47CC                    __ptext45 5112                    __ptext37 514C  
                  __ptext29 0B4C                    __ptext54 52EC                    __ptext46 1A74  
                  __ptext38 4F68                    __ptext55 5224                    __ptext47 4400  
                  __ptext39 4EBE                    __ptext56 4A0C                    __ptext48 4B6A  
                  __ptext57 4896                    __ptext49 2A20                    __ptext58 495A  
                  __ptext59 51BA              runADC@voltage1 01AC              runADC@voltage2 01B0  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                strcpy@dest 0006                    efgtoa@fp 0084                    efgtoa@ne 008D  
                  efgtoa@pp 0095                    efgtoa@ou 00A0                    _runMUSIC 5356  
                  isa$xinst 0000                    int$flags 005A                 _runDAC$4530 00D3  
               _runDAC$4531 00D7                    _vfprintf 4FB8               ?_LED1_Control 0001  
                 printf@fmt 00CE                _SSP1STATbits 0FC7               ?_LED2_Control 0001  
              _SSP2STATbits 0F6D               ?_LED3_Control 0001               ?_LED4_Control 0001  
                 putch@data 0006               ?_LED5_Control 0001                    memcpy@d1 0006  
             ?_LED6_Control 0001                    memcpy@s1 0008                 _moveDisplay 41E6  
                  intlevel2 0000                   sprintf@ap 00DA            ___lwmod@dividend 0006  
                 strcpy@src 0008                  _RCSTA1bits 0FAB                    sinf@sign 00B1  
                  runGPIO@j 0024                    runUART@i 00F6                    runUART@p 00F8  
               efgtoa@nmode 0097                    printf@ap 0054              ??_LED1_Control 0006  
            ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007  
            ??_LED3_Control 0006              ??_LED4_Control 0006                    sprintf@f 00DB  
                  sprintf@s 00CE              ??_LED5_Control 0006             ___lwmod@divisor 0008  
            ??_LED6_Control 0006             ___lwmod@counter 000A            runPWM@multiplier 0023  
             ___fladd@signs 0060                ___fladd@aexp 0061                ___fladd@bexp 0062  
              ___cosdf$4534 006C                ___cosdf$4535 0070                ___cosdf$4536 0074  
             _keepStateGPIO 00FE           LED3_Control@state 0006  
