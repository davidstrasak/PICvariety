

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 12:06:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 12/10/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F46K22 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataBANK1
   111   0047DE                     __pidataBANK1:
   112                           	callstack 0
   113                           
   114                           ;initializer for moveDisplay@F6961
   115   0047DE  DB                 	db	low STR_11
   116   0047DF  FF                 	db	high STR_11
   117   0047E0  E0                 	db	low STR_12
   118   0047E1  FF                 	db	high STR_12
   119   0047E2  FA                 	db	low STR_13
   120   0047E3  FF                 	db	high STR_13
   121   0047E4  F6                 	db	low STR_14
   122   0047E5  FF                 	db	high STR_14
   123   0047E6  F2                 	db	low STR_15
   124   0047E7  FF                 	db	high STR_15
   125   0047E8  D6                 	db	low STR_16
   126   0047E9  FF                 	db	high STR_16
   127   0047EA  CA                 	db	low STR_17
   128   0047EB  FF                 	db	high STR_17
   129   0047EC  3A                 	db	low (STR_22+16)
   130   0047ED  FF                 	db	high (STR_22+16)
   131                           
   132                           ;initializer for runGPIO@F6991
   133   0047EE  20                 	db	32
   134   0047EF  30                 	db	48
   135   0047F0  18                 	db	24
   136   0047F1  0C                 	db	12
   137   0047F2  06                 	db	6
   138   0047F3  03                 	db	3
   139   0047F4  01                 	db	1
   140   0047F5  03                 	db	3
   141   0047F6  06                 	db	6
   142   0047F7  0C                 	db	12
   143   0047F8  18                 	db	24
   144   0047F9  30                 	db	48
   145                           
   146                           ;initializer for runGPIO@F6973
   147   0047FA  C0                 	db	low _LED1_Control
   148   0047FB  48                 	db	high _LED1_Control
   149   0047FC  B2                 	db	low _LED2_Control
   150   0047FD  48                 	db	high _LED2_Control
   151   0047FE  A4                 	db	low _LED3_Control
   152   0047FF  48                 	db	high _LED3_Control
   153   004800  96                 	db	low _LED4_Control
   154   004801  48                 	db	high _LED4_Control
   155   004802  88                 	db	low _LED5_Control
   156   004803  48                 	db	high _LED5_Control
   157   004804  CE                 	db	low _LED6_Control
   158   004805  48                 	db	high _LED6_Control
   159                           
   160                           	psect	mediumconst
   161   00FED6                     __pmediumconst:
   162                           	callstack 0
   163   00FED6  00                 	db	0
   164   00FED7  6C3C               	dw	27708
   165   00FED9  3636               	dw	13878
   166   00FEDB                     __end_of_S4:
   167                           	callstack 0
   168   00FEDB  07CF               	dw	1999
   169   00FEDD  B950               	dw	47440
   170   00FEDF                     __end_of_S3:
   171                           	callstack 0
   172   00FEDF  8884               	dw	34948
   173   00FEE1  3C08               	dw	15368
   174   00FEE3                     __end_of_S2:
   175                           	callstack 0
   176   00FEE3  AAAB               	dw	43691
   177   00FEE5  BE2A               	dw	48682
   178   00FEE7                     __end_of_S1:
   179                           	callstack 0
   180   00FEE7  85A3               	dw	34211
   181   00FEE9  3288               	dw	12936
   182   00FEEB                     __end_of_pio2_1t:
   183                           	callstack 0
   184   00FEEB  0FDA               	dw	4058
   185   00FEED  3FC9               	dw	16329
   186   00FEEF                     __end_of_pio2_1:
   187                           	callstack 0
   188   00FEEF  F983               	dw	63875
   189   00FEF1  3F22               	dw	16162
   190   00FEF3                     __end_of_invpio2:
   191                           	callstack 0
   192   00FEF3  0000               	dw	0
   193   00FEF5  3F00               	dw	16128
   194   00FEF7                     __end_of_half:
   195                           	callstack 0
   196   00FEF7  9A17               	dw	39447
   197   00FEF9  37CC               	dw	14284
   198   00FEFB                     __end_of_C3:
   199                           	callstack 0
   200   00FEFB  043F               	dw	1087
   201   00FEFD  BAB6               	dw	47798
   202   00FEFF                     __end_of_C2:
   203                           	callstack 0
   204   00FEFF  AA9F               	dw	43679
   205   00FF01  3D2A               	dw	15658
   206   00FF03                     __end_of_C1:
   207                           	callstack 0
   208   00FF03  0000               	dw	0
   209   00FF05  BF00               	dw	48896
   210   00FF07                     __end_of_C0:
   211                           	callstack 0
   212   00FF07  0FDB               	dw	4059
   213   00FF09  40C9               	dw	16585
   214   00FF0B                     __end_of_s4pio2:
   215                           	callstack 0
   216   00FF0B  CBE4               	dw	52196
   217   00FF0D  4096               	dw	16534
   218   00FF0F                     __end_of_s3pio2:
   219                           	callstack 0
   220   00FF0F  0FDB               	dw	4059
   221   00FF11  4049               	dw	16457
   222   00FF13                     __end_of_s2pio2:
   223                           	callstack 0
   224   00FF13  0FDB               	dw	4059
   225   00FF15  3FC9               	dw	16329
   226   00FF17                     __end_of_s1pio2:
   227                           	callstack 0
   228   000000                     _ADRESL	set	4035
   229   000000                     _RCREG1	set	4014
   230   000000                     _ANSELCbits	set	3898
   231   000000                     _TXREG1	set	4013
   232   000000                     _ADRESH	set	4036
   233   000000                     _LATBbits	set	3978
   234   000000                     _TXSTA1bits	set	4012
   235   000000                     _ANSELBbits	set	3897
   236   000000                     _TRISBbits	set	3987
   237   000000                     _SSP2STATbits	set	3949
   238   000000                     _SSP2ADD	set	3950
   239   000000                     _ANSELDbits	set	3899
   240   000000                     _PORTAbits	set	3968
   241   000000                     _PORTCbits	set	3970
   242   000000                     _LATCbits	set	3979
   243   000000                     _LATDbits	set	3980
   244   000000                     _ANSELAbits	set	3896
   245   000000                     _TRISAbits	set	3986
   246   000000                     _TRISCbits	set	3988
   247   000000                     _TMR2IE	set	31977
   248   000000                     _TMR2IF	set	31985
   249   000000                     _RC1IF	set	31989
   250   000000                     _RC1IE	set	31981
   251   000000                     _TMR1ON	set	32360
   252   000000                     _TMR1IF	set	31984
   253   000000                     _GIE	set	32663
   254   000000                     _TX1IF	set	31988
   255   000000                     _GODONE	set	32273
   256   000000                     _TRISDbits	set	3989
   257   000000                     _TMR1IE	set	31976
   258   000000                     _SSP1IF	set	31987
   259   000000                     _SSP2IF	set	32039
   260   000000                     _LATAbits	set	3977
   261   000000                     _CCPTMRS0bits	set	3913
   262   000000                     _ANSELEbits	set	3900
   263   000000                     _SSP2CON2bits	set	3947
   264   000000                     _SSP2CON1bits	set	3948
   265   000000                     _SSP2BUF	set	3951
   266   000000                     _RCSTA1bits	set	4011
   267   000000                     _SPBRG1	set	4015
   268   000000                     _ADCON2bits	set	4032
   269   000000                     _SSP1CON1bits	set	4038
   270   000000                     _SSP1BUF	set	4041
   271   000000                     _SSP1STATbits	set	4039
   272   000000                     _ADCON0bits	set	4034
   273   000000                     _PR2	set	4027
   274   000000                     _TMR2ON	set	32210
   275   000000                     _T1CONbits	set	4045
   276   000000                     _TMR1	set	4046
   277   000000                     _PEIE	set	32662
   278   000000                     _CCP1CONbits	set	4029
   279   000000                     _CCPR1L	set	4030
   280   00FF17                     STR_21:
   281   00FF17  50                 	db	80	;'P'
   282   00FF18  4F                 	db	79	;'O'
   283   00FF19  54                 	db	84	;'T'
   284   00FF1A  31                 	db	49	;'1'
   285   00FF1B  3A                 	db	58	;':'
   286   00FF1C  25                 	db	37
   287   00FF1D  2E                 	db	46
   288   00FF1E  31                 	db	49	;'1'
   289   00FF1F  66                 	db	102	;'f'
   290   00FF20  50                 	db	80	;'P'
   291   00FF21  4F                 	db	79	;'O'
   292   00FF22  54                 	db	84	;'T'
   293   00FF23  32                 	db	50	;'2'
   294   00FF24  3A                 	db	58	;':'
   295   00FF25  25                 	db	37
   296   00FF26  2E                 	db	46
   297   00FF27  31                 	db	49	;'1'
   298   00FF28  66                 	db	102	;'f'
   299   00FF29  00                 	db	0
   300   00FF2A                     STR_22:
   301   00FF2A  44                 	db	68	;'D'
   302   00FF2B  6F                 	db	111	;'o'
   303   00FF2C  73                 	db	115	;'s'
   304   00FF2D  74                 	db	116	;'t'
   305   00FF2E  61                 	db	97	;'a'
   306   00FF2F  6C                 	db	108	;'l'
   307   00FF30  20                 	db	32
   308   00FF31  6A                 	db	106	;'j'
   309   00FF32  73                 	db	115	;'s'
   310   00FF33  65                 	db	101	;'e'
   311   00FF34  6D                 	db	109	;'m'
   312   00FF35  20                 	db	32
   313   00FF36  25                 	db	37
   314   00FF37  73                 	db	115	;'s'
   315   00FF38  20                 	db	32
   316   00FF39  0A                 	db	10
   317   00FF3A  00                 	db	0
   318   00FF3B                     STR_2:
   319   00FF3B  20                 	db	32
   320   00FF3C  20                 	db	32
   321   00FF3D  20                 	db	32
   322   00FF3E  20                 	db	32
   323   00FF3F  20                 	db	32
   324   00FF40  20                 	db	32
   325   00FF41  20                 	db	32
   326   00FF42  20                 	db	32
   327   00FF43  20                 	db	32
   328   00FF44  20                 	db	32
   329   00FF45  20                 	db	32
   330   00FF46  20                 	db	32
   331   00FF47  20                 	db	32
   332   00FF48  20                 	db	32
   333   00FF49  20                 	db	32
   334   00FF4A  20                 	db	32
   335   00FF4B  00                 	db	0
   336   00FF4C                     STR_3:
   337   00FF4C  42                 	db	66	;'B'
   338   00FF4D  52                 	db	82	;'R'
   339   00FF4E  3A                 	db	58	;':'
   340   00FF4F  20                 	db	32
   341   00FF50  31                 	db	49	;'1'
   342   00FF51  39                 	db	57	;'9'
   343   00FF52  32                 	db	50	;'2'
   344   00FF53  30                 	db	48	;'0'
   345   00FF54  30                 	db	48	;'0'
   346   00FF55  20                 	db	32
   347   00FF56  20                 	db	32
   348   00FF57  20                 	db	32
   349   00FF58  20                 	db	32
   350   00FF59  20                 	db	32
   351   00FF5A  20                 	db	32
   352   00FF5B  20                 	db	32
   353   00FF5C  00                 	db	0
   354   00FF5D                     STR_1:
   355   00FF5D  50                 	db	80	;'P'
   356   00FF5E  6F                 	db	111	;'o'
   357   00FF5F  7A                 	db	122	;'z'
   358   00FF60  6F                 	db	111	;'o'
   359   00FF61  72                 	db	114	;'r'
   360   00FF62  21                 	db	33
   361   00FF63  20                 	db	32
   362   00FF64  48                 	db	72	;'H'
   363   00FF65  61                 	db	97	;'a'
   364   00FF66  64                 	db	100	;'d'
   365   00FF67  21                 	db	33
   366   00FF68  21                 	db	33
   367   00FF69  21                 	db	33
   368   00FF6A  20                 	db	32
   369   00FF6B  20                 	db	32
   370   00FF6C  20                 	db	32
   371   00FF6D  00                 	db	0
   372   00FF6E                     STR_5:
   373   00FF6E  5A                 	db	90	;'Z'
   374   00FF6F  6D                 	db	109	;'m'
   375   00FF70  61                 	db	97	;'a'
   376   00FF71  63                 	db	99	;'c'
   377   00FF72  6B                 	db	107	;'k'
   378   00FF73  6E                 	db	110	;'n'
   379   00FF74  65                 	db	101	;'e'
   380   00FF75  74                 	db	116	;'t'
   381   00FF76  65                 	db	101	;'e'
   382   00FF77  20                 	db	32
   383   00FF78  42                 	db	66	;'B'
   384   00FF79  54                 	db	84	;'T'
   385   00FF7A  4E                 	db	78	;'N'
   386   00FF7B  32                 	db	50	;'2'
   387   00FF7C  20                 	db	32
   388   00FF7D  20                 	db	32
   389   00FF7E  00                 	db	0
   390   00FF7F                     STR_8:
   391   00FF7F  52                 	db	82	;'R'
   392   00FF80  42                 	db	66	;'B'
   393   00FF81  30                 	db	48	;'0'
   394   00FF82  2D                 	db	45
   395   00FF83  41                 	db	65	;'A'
   396   00FF84  32                 	db	50	;'2'
   397   00FF85  2C                 	db	44
   398   00FF86  20                 	db	32
   399   00FF87  42                 	db	66	;'B'
   400   00FF88  52                 	db	82	;'R'
   401   00FF89  3A                 	db	58	;':'
   402   00FF8A  31                 	db	49	;'1'
   403   00FF8B  39                 	db	57	;'9'
   404   00FF8C  32                 	db	50	;'2'
   405   00FF8D  30                 	db	48	;'0'
   406   00FF8E  30                 	db	48	;'0'
   407   00FF8F  00                 	db	0
   408   00FF90                     STR_7:
   409   00FF90  56                 	db	86	;'V'
   410   00FF91  6F                 	db	111	;'o'
   411   00FF92  6C                 	db	108	;'l'
   412   00FF93  74                 	db	116	;'t'
   413   00FF94  79                 	db	121	;'y'
   414   00FF95  20                 	db	32
   415   00FF96  6E                 	db	110	;'n'
   416   00FF97  61                 	db	97	;'a'
   417   00FF98  20                 	db	32
   418   00FF99  50                 	db	80	;'P'
   419   00FF9A  4F                 	db	79	;'O'
   420   00FF9B  54                 	db	84	;'T'
   421   00FF9C  65                 	db	101	;'e'
   422   00FF9D  63                 	db	99	;'c'
   423   00FF9E  68                 	db	104	;'h'
   424   00FF9F  3A                 	db	58	;':'
   425   00FFA0  00                 	db	0
   426   00FFA1                     STR_4:
   427   00FFA1  4B                 	db	75	;'K'
   428   00FFA2  6F                 	db	111	;'o'
   429   00FFA3  6E                 	db	110	;'n'
   430   00FFA4  65                 	db	101	;'e'
   431   00FFA5  63                 	db	99	;'c'
   432   00FFA6  20                 	db	32
   433   00FFA7  2D                 	db	45
   434   00FFA8  20                 	db	32
   435   00FFA9  6E                 	db	110	;'n'
   436   00FFAA  65                 	db	101	;'e'
   437   00FFAB  77                 	db	119	;'w'
   438   00FFAC  20                 	db	32
   439   00FFAD  6C                 	db	108	;'l'
   440   00FFAE  69                 	db	105	;'i'
   441   00FFAF  6E                 	db	110	;'n'
   442   00FFB0  65                 	db	101	;'e'
   443   00FFB1  00                 	db	0
   444   00FFB2                     STR_9:
   445   00FFB2  31                 	db	49	;'1'
   446   00FFB3  3A                 	db	58	;':'
   447   00FFB4  74                 	db	116	;'t'
   448   00FFB5  72                 	db	114	;'r'
   449   00FFB6  2C                 	db	44
   450   00FFB7  32                 	db	50	;'2'
   451   00FFB8  3A                 	db	58	;':'
   452   00FFB9  73                 	db	115	;'s'
   453   00FFBA  69                 	db	105	;'i'
   454   00FFBB  6E                 	db	110	;'n'
   455   00FFBC  2C                 	db	44
   456   00FFBD  33                 	db	51	;'3'
   457   00FFBE  3A                 	db	58	;':'
   458   00FFBF  70                 	db	112	;'p'
   459   00FFC0  69                 	db	105	;'i'
   460   00FFC1  6C                 	db	108	;'l'
   461   00FFC2  00                 	db	0
   462   00FFC3                     STR_29:
   463   00FFC3  28                 	db	40
   464   00FFC4  6E                 	db	110	;'n'
   465   00FFC5  75                 	db	117	;'u'
   466   00FFC6  6C                 	db	108	;'l'
   467   00FFC7  6C                 	db	108	;'l'
   468   00FFC8  29                 	db	41
   469   00FFC9  00                 	db	0
   470   00FFCA                     STR_17:
   471   00FFCA  4D                 	db	77	;'M'
   472   00FFCB  55                 	db	85	;'U'
   473   00FFCC  53                 	db	83	;'S'
   474   00FFCD  49                 	db	73	;'I'
   475   00FFCE  43                 	db	67	;'C'
   476   00FFCF  00                 	db	0
   477   00FFD0                     STR_19:
   478   00FFD0  3E                 	db	62	;'>'
   479   00FFD1  25                 	db	37
   480   00FFD2  2D                 	db	45
   481   00FFD3  2A                 	db	42
   482   00FFD4  73                 	db	115	;'s'
   483   00FFD5  00                 	db	0
   484   00FFD6                     STR_16:
   485   00FFD6  47                 	db	71	;'G'
   486   00FFD7  41                 	db	65	;'A'
   487   00FFD8  4D                 	db	77	;'M'
   488   00FFD9  45                 	db	69	;'E'
   489   00FFDA  00                 	db	0
   490   00FFDB                     STR_11:
   491   00FFDB  47                 	db	71	;'G'
   492   00FFDC  50                 	db	80	;'P'
   493   00FFDD  49                 	db	73	;'I'
   494   00FFDE  4F                 	db	79	;'O'
   495   00FFDF  00                 	db	0
   496   00FFE0                     STR_12:
   497   00FFE0  55                 	db	85	;'U'
   498   00FFE1  41                 	db	65	;'A'
   499   00FFE2  52                 	db	82	;'R'
   500   00FFE3  54                 	db	84	;'T'
   501   00FFE4  00                 	db	0
   502   00FFE5                     STR_10:
   503   00FFE5  25                 	db	37
   504   00FFE6  64                 	db	100	;'d'
   505   00FFE7  20                 	db	32
   506   00FFE8  0D                 	db	13
   507   00FFE9  00                 	db	0
   508   00FFEA                     STR_23:
   509   00FFEA  69                 	db	105	;'i'
   510   00FFEB  6E                 	db	110	;'n'
   511   00FFEC  66                 	db	102	;'f'
   512   00FFED  00                 	db	0
   513   00FFEE                     STR_26:
   514   00FFEE  6E                 	db	110	;'n'
   515   00FFEF  61                 	db	97	;'a'
   516   00FFF0  6E                 	db	110	;'n'
   517   00FFF1  00                 	db	0
   518   00FFF2                     STR_15:
   519   00FFF2  44                 	db	68	;'D'
   520   00FFF3  41                 	db	65	;'A'
   521   00FFF4  43                 	db	67	;'C'
   522   00FFF5  00                 	db	0
   523   00FFF6                     STR_14:
   524   00FFF6  41                 	db	65	;'A'
   525   00FFF7  44                 	db	68	;'D'
   526   00FFF8  43                 	db	67	;'C'
   527   00FFF9  00                 	db	0
   528   00FFFA                     STR_13:
   529   00FFFA  50                 	db	80	;'P'
   530   00FFFB  57                 	db	87	;'W'
   531   00FFFC  4D                 	db	77	;'M'
   532   00FFFD  00                 	db	0
   533   00FFFE  00                 	db	0	; dummy byte at the end
   534   000000                     
   535                           ; #config settings
   536                           
   537                           	psect	cinit
   538   0044D0                     __pcinit:
   539                           	callstack 0
   540   0044D0                     start_initialization:
   541                           	callstack 0
   542   0044D0                     __initialization:
   543                           	callstack 0
   544                           
   545                           ; Initialize objects allocated to BANK1 (40 bytes)
   546                           ; load TBLPTR registers with __pidataBANK1
   547   0044D0  0EDE               	movlw	low __pidataBANK1
   548   0044D2  6EF6               	movwf	tblptrl,c
   549   0044D4  0E47               	movlw	high __pidataBANK1
   550   0044D6  6EF7               	movwf	tblptrh,c
   551   0044D8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   552   0044DA  6EF8               	movwf	tblptru,c
   553   0044DC  EE01  F095         	lfsr	0,__pdataBANK1
   554   0044E0  EE10 F028          	lfsr	1,40
   555   0044E4                     copy_data0:
   556   0044E4  0009               	tblrd		*+
   557   0044E6  CFF5 FFEE          	movff	tablat,postinc0
   558   0044EA  50E5               	movf	postdec1,w,c
   559   0044EC  50E1               	movf	fsr1l,w,c
   560   0044EE  E1FA               	bnz	copy_data0
   561                           
   562                           ; Clear objects allocated to BANK2 (80 bytes)
   563   0044F0  EE02  F000         	lfsr	0,__pbssBANK2
   564   0044F4  0E50               	movlw	80
   565   0044F6                     clear_0:
   566   0044F6  6AEE               	clrf	postinc0,c
   567   0044F8  06E8               	decf	wreg,f,c
   568   0044FA  E1FD               	bnz	clear_0
   569                           
   570                           ; Clear objects allocated to BANK1 (98 bytes)
   571   0044FC  EE01  F000         	lfsr	0,__pbssBANK1
   572   004500  0E62               	movlw	98
   573   004502                     clear_1:
   574   004502  6AEE               	clrf	postinc0,c
   575   004504  06E8               	decf	wreg,f,c
   576   004506  E1FD               	bnz	clear_1
   577                           
   578                           ; Clear objects allocated to BANK0 (1 bytes)
   579   004508  0100               	movlb	0
   580   00450A  6BEE               	clrf	__pbssBANK0& (0+255),b
   581                           
   582                           ; Clear objects allocated to COMRAM (5 bytes)
   583   00450C  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   584   00450E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   585   004510  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   586   004512  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   587   004514  6A55               	clrf	__pbssCOMRAM& (0+255),c
   588   004516                     end_of_initialization:
   589                           	callstack 0
   590   004516                     __end_of__initialization:
   591                           	callstack 0
   592   004516  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   593   004518  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   594   00451A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   595   00451C  6EF8               	movwf	tblptru,c
   596   00451E  0100               	movlb	0
   597   004520  EFB1  F013         	goto	_main	;jump to C main() function
   598                           
   599                           	psect	bssCOMRAM
   600   000055                     __pbssCOMRAM:
   601                           	callstack 0
   602   000055                     _width:
   603                           	callstack 0
   604   000055                     	ds	2
   605   000057                     _prec:
   606                           	callstack 0
   607   000057                     	ds	2
   608   000059                     _flags:
   609                           	callstack 0
   610   000059                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613   0000EE                     __pbssBANK0:
   614                           	callstack 0
   615   0000EE                     _keepStateGPIO:
   616                           	callstack 0
   617   0000EE                     	ds	1
   618                           
   619                           	psect	bssBANK1
   620   000100                     __pbssBANK1:
   621                           	callstack 0
   622   000100                     	ds	17
   623   000111                     fabsf@F465:
   624                           	callstack 0
   625   000111                     	ds	4
   626   000115                     ___rem_pio2f@F526:
   627                           	callstack 0
   628   000115                     	ds	4
   629   000119                     floorf@F521:
   630                           	callstack 0
   631   000119                     	ds	4
   632   00011D                     ___fpclassifyf@F465:
   633                           	callstack 0
   634   00011D                     	ds	4
   635   000121                     ISR@i:
   636                           	callstack 0
   637   000121                     	ds	2
   638   000123                     _UARTIE:
   639                           	callstack 0
   640   000123                     	ds	1
   641   000124                     _GPIOIE:
   642                           	callstack 0
   643   000124                     	ds	1
   644   000125                     _gmail:
   645                           	callstack 0
   646   000125                     	ds	61
   647                           
   648                           	psect	dataBANK1
   649   000195                     __pdataBANK1:
   650                           	callstack 0
   651   000195                     moveDisplay@F6961:
   652                           	callstack 0
   653   000195                     	ds	16
   654   0001A5                     runGPIO@F6991:
   655                           	callstack 0
   656   0001A5                     	ds	12
   657   0001B1                     runGPIO@F6973:
   658                           	callstack 0
   659   0001B1                     	ds	12
   660                           
   661                           	psect	bssBANK2
   662   000200                     __pbssBANK2:
   663                           	callstack 0
   664   000200                     _dbuf:
   665                           	callstack 0
   666   000200                     	ds	80
   667                           
   668                           	psect	cstackBANK1
   669   000162                     __pcstackBANK1:
   670                           	callstack 0
   671   000162                     moveDisplay@menuItem1:
   672                           	callstack 0
   673   000162                     runADC@text:
   674                           	callstack 0
   675                           
   676                           ; 17 bytes @ 0x0
   677   000162                     	ds	17
   678   000173                     runADC@voltage1:
   679                           	callstack 0
   680   000173                     moveDisplay@menuItem2:
   681                           	callstack 0
   682                           
   683                           ; 17 bytes @ 0x11
   684   000173                     	ds	4
   685   000177                     runADC@voltage2:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x15
   689   000177                     	ds	4
   690   00017B                     runADC@pot1:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694   00017B                     	ds	2
   695   00017D                     runADC@pot2:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x1B
   699   00017D                     	ds	2
   700   00017F                     runADC@keepState:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x1D
   704   00017F                     	ds	5
   705   000184                     moveDisplay@menuItems:
   706                           	callstack 0
   707                           
   708                           ; 16 bytes @ 0x22
   709   000184                     	ds	16
   710   000194                     moveDisplay@menuI:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x32
   714   000194                     	ds	1
   715                           
   716                           	psect	cstackBANK0
   717   000060                     __pcstackBANK0:
   718                           	callstack 0
   719   000060                     ___fladd@signs:
   720                           	callstack 0
   721   000060                     floorf@m:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x0
   725   000060                     	ds	1
   726   000061                     ___fladd@aexp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x1
   730   000061                     	ds	1
   731   000062                     ___fladd@bexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x2
   735   000062                     	ds	1
   736   000063                     ___fladd@grs:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x3
   740   000063                     	ds	1
   741   000064                     ?___flsub:
   742                           	callstack 0
   743   000064                     ?___sindf:
   744                           	callstack 0
   745   000064                     ?___cosdf:
   746                           	callstack 0
   747   000064                     ?___fltol:
   748                           	callstack 0
   749   000064                     floorf@e:
   750                           	callstack 0
   751   000064                     ___fltol@f1:
   752                           	callstack 0
   753   000064                     ___flsub@b:
   754                           	callstack 0
   755   000064                     ___cosdf@x:
   756                           	callstack 0
   757   000064                     ___sindf@x:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x4
   761   000064                     	ds	2
   762   000066                     floorf@u:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x6
   766   000066                     	ds	2
   767   000068                     ??___fltol:
   768   000068                     ___flsub@a:
   769                           	callstack 0
   770   000068                     ___cosdf@r:
   771                           	callstack 0
   772   000068                     ___sindf@r:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x8
   776   000068                     	ds	4
   777   00006C                     ___sindf@w:
   778                           	callstack 0
   779   00006C                     ___cosdf$4110:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0xC
   783   00006C                     	ds	4
   784   000070                     ___cosdf$4111:
   785                           	callstack 0
   786   000070                     ___sindf$4114:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x10
   790   000070                     	ds	4
   791   000074                     ___cosdf$4112:
   792                           	callstack 0
   793   000074                     ___sindf$4115:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x14
   797   000074                     	ds	4
   798   000078                     ___cosdf@w:
   799                           	callstack 0
   800   000078                     ___sindf$4116:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x18
   804   000078                     	ds	4
   805   00007C                     ___cosdf@z:
   806                           	callstack 0
   807   00007C                     ___sindf@s:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x1C
   811   00007C                     	ds	4
   812   000080                     ?___flneg:
   813                           	callstack 0
   814   000080                     ___flneg@f1:
   815                           	callstack 0
   816   000080                     ___sindf@z:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x20
   820   000080                     	ds	4
   821   000084                     ?___rem_pio2f:
   822                           	callstack 0
   823   000084                     efgtoa@fp:
   824                           	callstack 0
   825   000084                     ___rem_pio2f@x:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x24
   829   000084                     	ds	2
   830   000086                     efgtoa@f:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x26
   834   000086                     	ds	2
   835   000088                     ___rem_pio2f@y:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x28
   839   000088                     	ds	1
   840   000089                     ??___rem_pio2f:
   841                           
   842                           ; 1 bytes @ 0x29
   843   000089                     	ds	1
   844   00008A                     efgtoa@c:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x2A
   848   00008A                     	ds	1
   849   00008B                     ??_efgtoa:
   850   00008B                     ___rem_pio2f@ty:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x2B
   854   00008B                     	ds	2
   855   00008D                     efgtoa@ne:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x2D
   859   00008D                     	ds	2
   860   00008F                     efgtoa@p:
   861                           	callstack 0
   862   00008F                     ___rem_pio2f$4113:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x2F
   866   00008F                     	ds	2
   867   000091                     efgtoa@t:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x31
   871   000091                     	ds	2
   872   000093                     ___rem_pio2f@sign:
   873                           	callstack 0
   874   000093                     _efgtoa$3669:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x33
   878   000093                     	ds	1
   879   000094                     ___rem_pio2f@ux:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x34
   883   000094                     	ds	1
   884   000095                     efgtoa@pp:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x35
   888   000095                     	ds	1
   889   000096                     efgtoa@mode:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x36
   893   000096                     	ds	1
   894   000097                     efgtoa@nmode:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x37
   898   000097                     	ds	1
   899   000098                     efgtoa@d:
   900                           	callstack 0
   901   000098                     ___rem_pio2f@fn:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x38
   905   000098                     	ds	2
   906   00009A                     efgtoa@m:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x3A
   910   00009A                     	ds	2
   911   00009C                     efgtoa@e:
   912                           	callstack 0
   913   00009C                     ___rem_pio2f@t:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x3C
   917   00009C                     	ds	2
   918   00009E                     efgtoa@w:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x3E
   922   00009E                     	ds	2
   923   0000A0                     efgtoa@ou:
   924                           	callstack 0
   925   0000A0                     ___rem_pio2f@n:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x40
   929   0000A0                     	ds	4
   930   0000A4                     ?_sinf:
   931                           	callstack 0
   932   0000A4                     efgtoa@i:
   933                           	callstack 0
   934   0000A4                     sinf@x:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x44
   938   0000A4                     	ds	2
   939   0000A6                     efgtoa@h:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x46
   943   0000A6                     	ds	2
   944   0000A8                     _sinf$3833:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x48
   948   0000A8                     	ds	2
   949   0000AA                     efgtoa@l:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x4A
   953   0000AA                     	ds	2
   954   0000AC                     _sinf$3834:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x4C
   958   0000AC                     	ds	2
   959   0000AE                     efgtoa@sign:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x4E
   963   0000AE                     	ds	1
   964   0000AF                     efgtoa@g:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x4F
   968   0000AF                     	ds	1
   969   0000B0                     sinf@n:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x50
   973   0000B0                     	ds	1
   974   0000B1                     sinf@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x51
   978   0000B1                     	ds	1
   979   0000B2                     _sinf$4109:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x52
   983   0000B2                     	ds	1
   984   0000B3                     efgtoa@n:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x53
   988   0000B3                     	ds	2
   989   0000B5                     efgtoa@u:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x55
   993   0000B5                     	ds	1
   994   0000B6                     sinf@y:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x56
   998   0000B6                     	ds	3
   999   0000B9                     vfpfcnvrt@fp:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x59
  1003   0000B9                     	ds	1
  1004   0000BA                     sinf@ux:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x5A
  1008   0000BA                     	ds	1
  1009   0000BB                     vfpfcnvrt@fmt:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x5B
  1013   0000BB                     	ds	1
  1014   0000BC                     vfpfcnvrt@ap:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x5C
  1018   0000BC                     	ds	1
  1019   0000BD                     ??_vfpfcnvrt:
  1020                           
  1021                           ; 1 bytes @ 0x5D
  1022   0000BD                     	ds	2
  1023   0000BF                     vfpfcnvrt@convarg:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x5F
  1027   0000BF                     	ds	4
  1028   0000C3                     vfpfcnvrt@c:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x63
  1032   0000C3                     	ds	1
  1033   0000C4                     vfpfcnvrt@done:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x64
  1037   0000C4                     	ds	1
  1038   0000C5                     vfpfcnvrt@cp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x65
  1042   0000C5                     	ds	2
  1043   0000C7                     ?_vfprintf:
  1044                           	callstack 0
  1045   0000C7                     vfprintf@fp:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x67
  1049   0000C7                     	ds	2
  1050   0000C9                     vfprintf@fmt:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x69
  1054   0000C9                     	ds	2
  1055   0000CB                     vfprintf@ap:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x6B
  1059   0000CB                     	ds	1
  1060   0000CC                     vfprintf@cfmt:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x6C
  1064   0000CC                     	ds	2
  1065   0000CE                     ?_printf:
  1066                           	callstack 0
  1067   0000CE                     ?_sprintf:
  1068                           	callstack 0
  1069   0000CE                     sprintf@s:
  1070                           	callstack 0
  1071   0000CE                     printf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x6E
  1075   0000CE                     	ds	2
  1076   0000D0                     sprintf@fmt:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x70
  1080   0000D0                     	ds	2
  1081   0000D2                     ??_runUART:
  1082   0000D2                     ??_runDAC:
  1083                           
  1084                           ; 1 bytes @ 0x72
  1085   0000D2                     	ds	1
  1086   0000D3                     _runDAC$4106:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x73
  1090   0000D3                     	ds	1
  1091   0000D4                     runUART@keepState:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x74
  1095   0000D4                     	ds	1
  1096   0000D5                     runUART@p:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x75
  1100   0000D5                     	ds	2
  1101   0000D7                     _runDAC$4107:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x77
  1105   0000D7                     	ds	3
  1106   0000DA                     sprintf@ap:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x7A
  1110   0000DA                     	ds	1
  1111   0000DB                     runDAC@keepState:
  1112                           	callstack 0
  1113   0000DB                     sprintf@f:
  1114                           	callstack 0
  1115                           
  1116                           ; 12 bytes @ 0x7B
  1117   0000DB                     	ds	1
  1118   0000DC                     runDAC@selectModeDAC:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x7C
  1122   0000DC                     	ds	1
  1123   0000DD                     runDAC@DACindex:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x7D
  1127   0000DD                     	ds	10
  1128   0000E7                     ??_runADC:
  1129   0000E7                     moveDisplay@where:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x87
  1133   0000E7                     	ds	1
  1134   0000E8                     ??_moveDisplay:
  1135                           
  1136                           ; 1 bytes @ 0x88
  1137   0000E8                     	ds	2
  1138   0000EA                     ??_main:
  1139                           
  1140                           ; 1 bytes @ 0x8A
  1141   0000EA                     	ds	2
  1142   0000EC                     main@setUpAgain:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x8C
  1146   0000EC                     	ds	1
  1147   0000ED                     main@menuI:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x8D
  1151   0000ED                     	ds	1
  1152                           
  1153                           	psect	cstackCOMRAM
  1154   000001                     __pcstackCOMRAM:
  1155                           	callstack 0
  1156   000001                     ??_ISR:
  1157                           
  1158                           ; 1 bytes @ 0x0
  1159   000001                     	ds	4
  1160   000005                     ISR@temp:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x4
  1164   000005                     	ds	1
  1165   000006                     ?___fpclassifyf:
  1166                           	callstack 0
  1167   000006                     ?___wmul:
  1168                           	callstack 0
  1169   000006                     ?___awdiv:
  1170                           	callstack 0
  1171   000006                     ?___awmod:
  1172                           	callstack 0
  1173   000006                     ?_labs:
  1174                           	callstack 0
  1175   000006                     ?_fabsf:
  1176                           	callstack 0
  1177   000006                     ?___xxtofl:
  1178                           	callstack 0
  1179   000006                     LCD_Send@data:
  1180                           	callstack 0
  1181   000006                     SPI_write@MSB:
  1182                           	callstack 0
  1183   000006                     putch@data:
  1184                           	callstack 0
  1185   000006                     LED1_Control@state:
  1186                           	callstack 0
  1187   000006                     LED2_Control@state:
  1188                           	callstack 0
  1189   000006                     LED3_Control@state:
  1190                           	callstack 0
  1191   000006                     LED4_Control@state:
  1192                           	callstack 0
  1193   000006                     LED5_Control@state:
  1194                           	callstack 0
  1195   000006                     LED6_Control@state:
  1196                           	callstack 0
  1197   000006                     ___wmul@multiplier:
  1198                           	callstack 0
  1199   000006                     ___awdiv@dividend:
  1200                           	callstack 0
  1201   000006                     ___awmod@dividend:
  1202                           	callstack 0
  1203   000006                     memcpy@d1:
  1204                           	callstack 0
  1205   000006                     strcpy@dest:
  1206                           	callstack 0
  1207   000006                     ___fleq@ff1:
  1208                           	callstack 0
  1209   000006                     ___xxtofl@val:
  1210                           	callstack 0
  1211   000006                     ___fpclassifyf@x:
  1212                           	callstack 0
  1213   000006                     labs@a:
  1214                           	callstack 0
  1215   000006                     fabsf@x:
  1216                           	callstack 0
  1217                           
  1218                           ; 4 bytes @ 0x5
  1219   000006                     	ds	1
  1220   000007                     ??_LCD_Init:
  1221   000007                     ??_runGPIO:
  1222   000007                     SPI_write@LSB:
  1223                           	callstack 0
  1224   000007                     LCD_ShowString@textData:
  1225                           	callstack 0
  1226   000007                     fputc@c:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x6
  1230   000007                     	ds	1
  1231   000008                     SPI_write@data:
  1232                           	callstack 0
  1233   000008                     ___wmul@multiplicand:
  1234                           	callstack 0
  1235   000008                     ___awdiv@divisor:
  1236                           	callstack 0
  1237   000008                     ___awmod@divisor:
  1238                           	callstack 0
  1239   000008                     memcpy@s1:
  1240                           	callstack 0
  1241   000008                     strcpy@src:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x7
  1245   000008                     	ds	1
  1246   000009                     ??_LCD_ShowString:
  1247   000009                     fputc@fp:
  1248                           	callstack 0
  1249   000009                     runGPIO@states:
  1250                           	callstack 0
  1251                           
  1252                           ; 12 bytes @ 0x8
  1253   000009                     	ds	1
  1254   00000A                     ??___fpclassifyf:
  1255   00000A                     ??_labs:
  1256   00000A                     ??___xxtofl:
  1257   00000A                     ___awdiv@counter:
  1258                           	callstack 0
  1259   00000A                     ___awmod@counter:
  1260                           	callstack 0
  1261   00000A                     ___wmul@product:
  1262                           	callstack 0
  1263   00000A                     memcpy@n:
  1264                           	callstack 0
  1265   00000A                     strcpy@d:
  1266                           	callstack 0
  1267   00000A                     ___fleq@ff2:
  1268                           	callstack 0
  1269   00000A                     fabsf@u:
  1270                           	callstack 0
  1271                           
  1272                           ; 4 bytes @ 0x9
  1273   00000A                     	ds	1
  1274   00000B                     ??_fputc:
  1275   00000B                     LCD_ShowString@lineNum:
  1276                           	callstack 0
  1277   00000B                     ___awdiv@sign:
  1278                           	callstack 0
  1279   00000B                     ___awmod@sign:
  1280                           	callstack 0
  1281                           
  1282                           ; 1 bytes @ 0xA
  1283   00000B                     	ds	1
  1284   00000C                     ?_abs:
  1285                           	callstack 0
  1286   00000C                     ?_read_prec_or_width:
  1287                           	callstack 0
  1288   00000C                     LCD_ShowString@i:
  1289                           	callstack 0
  1290   00000C                     read_prec_or_width@fmt:
  1291                           	callstack 0
  1292   00000C                     memcpy@tmp:
  1293                           	callstack 0
  1294   00000C                     ___awdiv@quotient:
  1295                           	callstack 0
  1296   00000C                     abs@a:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0xB
  1300   00000C                     	ds	1
  1301   00000D                     read_prec_or_width@ap:
  1302                           	callstack 0
  1303   00000D                     memcpy@d:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0xC
  1307   00000D                     	ds	1
  1308   00000E                     ??_runPWM:
  1309   00000E                     ??_abs:
  1310   00000E                     ??___fleq:
  1311   00000E                     ___xxtofl@sign:
  1312                           	callstack 0
  1313   00000E                     read_prec_or_width@c:
  1314                           	callstack 0
  1315   00000E                     ___fpclassifyf@e:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0xD
  1319   00000E                     	ds	1
  1320   00000F                     ___xxtofl@exp:
  1321                           	callstack 0
  1322   00000F                     read_prec_or_width@n:
  1323                           	callstack 0
  1324   00000F                     memcpy@s:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0xE
  1328   00000F                     	ds	1
  1329   000010                     runPWM@keepState:
  1330                           	callstack 0
  1331   000010                     stoa@fp:
  1332                           	callstack 0
  1333   000010                     fputs@s:
  1334                           	callstack 0
  1335   000010                     ___xxtofl@arg:
  1336                           	callstack 0
  1337   000010                     ___fpclassifyf@u:
  1338                           	callstack 0
  1339                           
  1340                           ; 4 bytes @ 0xF
  1341   000010                     	ds	1
  1342   000011                     runPWM@multiplier:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x10
  1346   000011                     	ds	1
  1347   000012                     stoa@s:
  1348                           	callstack 0
  1349   000012                     fputs@fp:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x11
  1353   000012                     	ds	2
  1354   000014                     ??_stoa:
  1355   000014                     ?___flmul:
  1356                           	callstack 0
  1357   000014                     fputs@c:
  1358                           	callstack 0
  1359   000014                     ___flmul@b:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x13
  1363   000014                     	ds	1
  1364   000015                     fputs@i:
  1365                           	callstack 0
  1366   000015                     runGPIO@LEDControl:
  1367                           	callstack 0
  1368                           
  1369                           ; 12 bytes @ 0x14
  1370   000015                     	ds	1
  1371   000016                     stoa@p:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x15
  1375   000016                     	ds	1
  1376   000017                     pad@fp:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x16
  1380   000017                     	ds	1
  1381   000018                     stoa@w:
  1382                           	callstack 0
  1383   000018                     ___flmul@a:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x17
  1387   000018                     	ds	1
  1388   000019                     pad@buf:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x18
  1392   000019                     	ds	1
  1393   00001A                     stoa@cp:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x19
  1397   00001A                     	ds	1
  1398   00001B                     pad@p:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x1A
  1402   00001B                     	ds	1
  1403   00001C                     ??___flmul:
  1404   00001C                     stoa@l:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x1B
  1408   00001C                     	ds	1
  1409   00001D                     ??_pad:
  1410                           
  1411                           ; 1 bytes @ 0x1C
  1412   00001D                     	ds	1
  1413   00001E                     pad@i:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x1D
  1417   00001E                     	ds	2
  1418   000020                     ___flmul@sign:
  1419                           	callstack 0
  1420   000020                     dtoa@fp:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x1F
  1424   000020                     	ds	1
  1425   000021                     runGPIO@GPIOreverse:
  1426                           	callstack 0
  1427   000021                     ___flmul@aexp:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x20
  1431   000021                     	ds	1
  1432   000022                     runGPIO@numberOfStates:
  1433                           	callstack 0
  1434   000022                     dtoa@d:
  1435                           	callstack 0
  1436   000022                     ___flmul@grs:
  1437                           	callstack 0
  1438                           
  1439                           ; 4 bytes @ 0x21
  1440   000022                     	ds	2
  1441   000024                     runGPIO@GPIOi:
  1442                           	callstack 0
  1443   000024                     _dtoa$3638:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x23
  1447   000024                     	ds	1
  1448   000025                     runGPIO@j:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x24
  1452   000025                     	ds	1
  1453   000026                     ___flmul@bexp:
  1454                           	callstack 0
  1455   000026                     dtoa@w:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x25
  1459   000026                     	ds	1
  1460   000027                     ___flmul@prod:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0x26
  1464   000027                     	ds	1
  1465   000028                     dtoa@p:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x27
  1469   000028                     	ds	2
  1470   00002A                     dtoa@s:
  1471                           	callstack 0
  1472                           
  1473                           ; 1 bytes @ 0x29
  1474   00002A                     	ds	1
  1475   00002B                     ___flmul@temp:
  1476                           	callstack 0
  1477   00002B                     dtoa@i:
  1478                           	callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x2A
  1481   00002B                     	ds	2
  1482   00002D                     ?___fldiv:
  1483                           	callstack 0
  1484   00002D                     ___flge@ff1:
  1485                           	callstack 0
  1486   00002D                     ___fldiv@b:
  1487                           	callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x2C
  1490   00002D                     	ds	4
  1491   000031                     ___flge@ff2:
  1492                           	callstack 0
  1493   000031                     ___fldiv@a:
  1494                           	callstack 0
  1495                           
  1496                           ; 4 bytes @ 0x30
  1497   000031                     	ds	4
  1498   000035                     ??___fldiv:
  1499   000035                     ??___flge:
  1500                           
  1501                           ; 1 bytes @ 0x34
  1502   000035                     	ds	4
  1503   000039                     ___fldiv@rem:
  1504                           	callstack 0
  1505                           
  1506                           ; 4 bytes @ 0x38
  1507   000039                     	ds	4
  1508   00003D                     ___fldiv@sign:
  1509                           	callstack 0
  1510                           
  1511                           ; 1 bytes @ 0x3C
  1512   00003D                     	ds	1
  1513   00003E                     ___fldiv@new_exp:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x3D
  1517   00003E                     	ds	2
  1518   000040                     ___fldiv@grs:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0x3F
  1522   000040                     	ds	4
  1523   000044                     ___fldiv@bexp:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x43
  1527   000044                     	ds	1
  1528   000045                     ___fldiv@aexp:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x44
  1532   000045                     	ds	1
  1533   000046                     ?___fladd:
  1534                           	callstack 0
  1535   000046                     ?_floorf:
  1536                           	callstack 0
  1537   000046                     ___fladd@b:
  1538                           	callstack 0
  1539   000046                     floorf@x:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x45
  1543   000046                     	ds	4
  1544   00004A                     ??_floorf:
  1545   00004A                     ___fladd@a:
  1546                           	callstack 0
  1547                           
  1548                           ; 4 bytes @ 0x49
  1549   00004A                     	ds	4
  1550   00004E                     ??___fladd:
  1551                           
  1552                           ; 1 bytes @ 0x4D
  1553   00004E                     	ds	4
  1554   000052                     ___fltol@sign1:
  1555                           	callstack 0
  1556                           
  1557                           ; 1 bytes @ 0x51
  1558   000052                     	ds	1
  1559   000053                     ___fltol@exp1:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0x52
  1563   000053                     	ds	1
  1564   000054                     printf@ap:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x53
  1568   000054                     	ds	1
  1569                           
  1570 ;;
  1571 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1572 ;;
  1573 ;; *************** function _main *****************
  1574 ;; Defined at:
  1575 ;;		line 10 in file "main.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  menuI           1  141[BANK0 ] unsigned char 
  1580 ;;  setUpAgain      1  140[BANK0 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;Total ram usage:        4 bytes
  1595 ;; Hardware stack levels required when called: 10
  1596 ;; This function calls:
  1597 ;;		_LCD_Init
  1598 ;;		_LCD_ShowString
  1599 ;;		_moveDisplay
  1600 ;;		_runADC
  1601 ;;		_runDAC
  1602 ;;		_runGPIO
  1603 ;;		_runPWM
  1604 ;;		_runUART
  1605 ;; This function is called by:
  1606 ;;		Startup code after reset
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text0
  1611   002762                     __ptext0:
  1612                           	callstack 0
  1613   002762                     _main:
  1614                           	callstack 21
  1615   002762                     
  1616                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1617   002762  0E05               	movlw	5
  1618   002764  0100               	movlb	0	; () banked
  1619   002766  6FEB               	movwf	(??_main+1)& (0+255),b
  1620   002768  0E0F               	movlw	15
  1621   00276A  6FEA               	movwf	??_main& (0+255),b
  1622   00276C  0EF1               	movlw	241
  1623   00276E                     u9457:
  1624   00276E  2EE8               	decfsz	wreg,f,c
  1625   002770  D7FE               	bra	u9457
  1626   002772  2FEA               	decfsz	??_main& (0+255),f,b
  1627   002774  D7FC               	bra	u9457
  1628   002776  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1629   002778  D7FA               	bra	u9457
  1630   00277A                     
  1631                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1632   00277A  8094               	bsf	148,0,c	;volatile
  1633   00277C                     
  1634                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1635   00277C  8892               	bsf	146,4,c	;volatile
  1636   00277E                     
  1637                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1638   00277E  8692               	bsf	146,3,c	;volatile
  1639   002780                     
  1640                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1641   002780  8492               	bsf	146,2,c	;volatile
  1642   002782                     
  1643                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1644   002782  010F               	movlb	15	; () banked
  1645   002784  9738               	bcf	56,3,b	;volatile
  1646   002786                     
  1647                           ; BSR set to: 15
  1648                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1649   002786  9538               	bcf	56,2,b	;volatile
  1650   002788                     
  1651                           ; BSR set to: 15
  1652                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1653   002788  9495               	bcf	149,2,c	;volatile
  1654   00278A                     
  1655                           ; BSR set to: 15
  1656                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1657   00278A  9695               	bcf	149,3,c	;volatile
  1658   00278C                     
  1659                           ; BSR set to: 15
  1660                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1661   00278C  9894               	bcf	148,4,c	;volatile
  1662   00278E                     
  1663                           ; BSR set to: 15
  1664                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1665   00278E  9895               	bcf	149,4,c	;volatile
  1666   002790                     
  1667                           ; BSR set to: 15
  1668                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1669   002790  9A95               	bcf	149,5,c	;volatile
  1670   002792                     
  1671                           ; BSR set to: 15
  1672                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1673   002792  9C95               	bcf	149,6,c	;volatile
  1674   002794                     
  1675                           ; BSR set to: 15
  1676                           ;main.c: 27:     LATDbits.LD2 = 1;
  1677   002794  848C               	bsf	140,2,c	;volatile
  1678   002796                     
  1679                           ; BSR set to: 15
  1680                           ;main.c: 28:     LATDbits.LD3 = 1;
  1681   002796  868C               	bsf	140,3,c	;volatile
  1682   002798                     
  1683                           ; BSR set to: 15
  1684                           ;main.c: 29:     LATCbits.LC4 = 1;
  1685   002798  888B               	bsf	139,4,c	;volatile
  1686   00279A                     
  1687                           ; BSR set to: 15
  1688                           ;main.c: 30:     LATDbits.LD4 = 1;
  1689   00279A  888C               	bsf	140,4,c	;volatile
  1690   00279C                     
  1691                           ; BSR set to: 15
  1692                           ;main.c: 31:     LATDbits.LD5 = 1;
  1693   00279C  8A8C               	bsf	140,5,c	;volatile
  1694   00279E                     
  1695                           ; BSR set to: 15
  1696                           ;main.c: 32:     LATDbits.LD6 = 1;
  1697   00279E  8C8C               	bsf	140,6,c	;volatile
  1698   0027A0                     
  1699                           ; BSR set to: 15
  1700                           ;main.c: 35:     LCD_Init();
  1701   0027A0  EC5D  F01F         	call	_LCD_Init	;wreg free
  1702   0027A4                     
  1703                           ;main.c: 36:     uint8_t menuI = 0;
  1704   0027A4  0E00               	movlw	0
  1705   0027A6  0100               	movlb	0	; () banked
  1706   0027A8  6FED               	movwf	main@menuI& (0+255),b
  1707   0027AA                     
  1708                           ; BSR set to: 0
  1709                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1710   0027AA  0E00               	movlw	0
  1711   0027AC  6FEC               	movwf	main@setUpAgain& (0+255),b
  1712   0027AE                     
  1713                           ; BSR set to: 0
  1714                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1715   0027AE  0E00               	movlw	0
  1716   0027B0  6FE7               	movwf	moveDisplay@where& (0+255),b
  1717   0027B2  51ED               	movf	main@menuI& (0+255),w,b
  1718   0027B4  ECCE  F01C         	call	_moveDisplay
  1719   0027B8  0100               	movlb	0	; () banked
  1720   0027BA  6FED               	movwf	main@menuI& (0+255),b
  1721   0027BC                     l7289:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 47:         if(PORTCbits.RC0){
  1725   0027BC  A082               	btfss	130,0,c	;volatile
  1726   0027BE  EFE3  F013         	goto	u9351
  1727   0027C2  EFE5  F013         	goto	u9350
  1728   0027C6                     u9351:
  1729   0027C6  EF07  F014         	goto	l7299
  1730   0027CA                     u9350:
  1731   0027CA                     
  1732                           ; BSR set to: 0
  1733                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1734   0027CA  0E03               	movlw	3
  1735   0027CC  0100               	movlb	0	; () banked
  1736   0027CE  6FEB               	movwf	(??_main+1)& (0+255),b
  1737   0027D0  0E08               	movlw	8
  1738   0027D2  6FEA               	movwf	??_main& (0+255),b
  1739   0027D4  0E77               	movlw	119
  1740   0027D6                     u9467:
  1741   0027D6  2EE8               	decfsz	wreg,f,c
  1742   0027D8  D7FE               	bra	u9467
  1743   0027DA  2FEA               	decfsz	??_main& (0+255),f,b
  1744   0027DC  D7FC               	bra	u9467
  1745   0027DE  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1746   0027E0  D7FA               	bra	u9467
  1747   0027E2                     
  1748                           ;main.c: 49:             if(PORTCbits.RC0){
  1749   0027E2  A082               	btfss	130,0,c	;volatile
  1750   0027E4  EFF6  F013         	goto	u9361
  1751   0027E8  EFF8  F013         	goto	u9360
  1752   0027EC                     u9361:
  1753   0027EC  EF07  F014         	goto	l7299
  1754   0027F0                     u9360:
  1755   0027F0                     l50:
  1756   0027F0  B082               	btfsc	130,0,c	;volatile
  1757   0027F2  EFFD  F013         	goto	u9371
  1758   0027F6  EFFF  F013         	goto	u9370
  1759   0027FA                     u9371:
  1760   0027FA  EFF8  F013         	goto	l50
  1761   0027FE                     u9370:
  1762   0027FE                     
  1763                           ;main.c: 51:                 menuI = moveDisplay(menuI,2);
  1764   0027FE  0E02               	movlw	2
  1765   002800  0100               	movlb	0	; () banked
  1766   002802  6FE7               	movwf	moveDisplay@where& (0+255),b
  1767   002804  51ED               	movf	main@menuI& (0+255),w,b
  1768   002806  ECCE  F01C         	call	_moveDisplay
  1769   00280A  0100               	movlb	0	; () banked
  1770   00280C  6FED               	movwf	main@menuI& (0+255),b
  1771   00280E                     l7299:
  1772                           
  1773                           ;main.c: 54:         if(PORTAbits.RA4){
  1774   00280E  A880               	btfss	128,4,c	;volatile
  1775   002810  EF0C  F014         	goto	u9381
  1776   002814  EF0E  F014         	goto	u9380
  1777   002818                     u9381:
  1778   002818  EF30  F014         	goto	l7309
  1779   00281C                     u9380:
  1780   00281C                     
  1781                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1782   00281C  0E03               	movlw	3
  1783   00281E  0100               	movlb	0	; () banked
  1784   002820  6FEB               	movwf	(??_main+1)& (0+255),b
  1785   002822  0E08               	movlw	8
  1786   002824  6FEA               	movwf	??_main& (0+255),b
  1787   002826  0E77               	movlw	119
  1788   002828                     u9477:
  1789   002828  2EE8               	decfsz	wreg,f,c
  1790   00282A  D7FE               	bra	u9477
  1791   00282C  2FEA               	decfsz	??_main& (0+255),f,b
  1792   00282E  D7FC               	bra	u9477
  1793   002830  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1794   002832  D7FA               	bra	u9477
  1795   002834                     
  1796                           ;main.c: 56:             if(PORTAbits.RA4){
  1797   002834  A880               	btfss	128,4,c	;volatile
  1798   002836  EF1F  F014         	goto	u9391
  1799   00283A  EF21  F014         	goto	u9390
  1800   00283E                     u9391:
  1801   00283E  EF30  F014         	goto	l7309
  1802   002842                     u9390:
  1803   002842                     l55:
  1804   002842  B880               	btfsc	128,4,c	;volatile
  1805   002844  EF26  F014         	goto	u9401
  1806   002848  EF28  F014         	goto	u9400
  1807   00284C                     u9401:
  1808   00284C  EF21  F014         	goto	l55
  1809   002850                     u9400:
  1810   002850                     
  1811                           ;main.c: 58:                 menuI = moveDisplay(menuI,1);
  1812   002850  0E01               	movlw	1
  1813   002852  0100               	movlb	0	; () banked
  1814   002854  6FE7               	movwf	moveDisplay@where& (0+255),b
  1815   002856  51ED               	movf	main@menuI& (0+255),w,b
  1816   002858  ECCE  F01C         	call	_moveDisplay
  1817   00285C  0100               	movlb	0	; () banked
  1818   00285E  6FED               	movwf	main@menuI& (0+255),b
  1819   002860                     l7309:
  1820                           
  1821                           ;main.c: 61:         if(PORTAbits.RA3){
  1822   002860  A680               	btfss	128,3,c	;volatile
  1823   002862  EF35  F014         	goto	u9411
  1824   002866  EF37  F014         	goto	u9410
  1825   00286A                     u9411:
  1826   00286A  EFC9  F014         	goto	l58
  1827   00286E                     u9410:
  1828   00286E                     
  1829                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1830   00286E  0E03               	movlw	3
  1831   002870  0100               	movlb	0	; () banked
  1832   002872  6FEB               	movwf	(??_main+1)& (0+255),b
  1833   002874  0E08               	movlw	8
  1834   002876  6FEA               	movwf	??_main& (0+255),b
  1835   002878  0E77               	movlw	119
  1836   00287A                     u9487:
  1837   00287A  2EE8               	decfsz	wreg,f,c
  1838   00287C  D7FE               	bra	u9487
  1839   00287E  2FEA               	decfsz	??_main& (0+255),f,b
  1840   002880  D7FC               	bra	u9487
  1841   002882  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1842   002884  D7FA               	bra	u9487
  1843   002886                     
  1844                           ;main.c: 63:             if(PORTAbits.RA3){
  1845   002886  A680               	btfss	128,3,c	;volatile
  1846   002888  EF48  F014         	goto	u9421
  1847   00288C  EF4A  F014         	goto	u9420
  1848   002890                     u9421:
  1849   002890  EFC9  F014         	goto	l58
  1850   002894                     u9420:
  1851   002894                     l60:
  1852   002894  B680               	btfsc	128,3,c	;volatile
  1853   002896  EF4F  F014         	goto	u9431
  1854   00289A  EF51  F014         	goto	u9430
  1855   00289E                     u9431:
  1856   00289E  EF4A  F014         	goto	l60
  1857   0028A2                     u9430:
  1858   0028A2  EFA9  F014         	goto	l7349
  1859   0028A6                     l7317:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1863   0028A6  0E5D               	movlw	low STR_1
  1864   0028A8  6E07               	movwf	LCD_ShowString@textData^0,c
  1865   0028AA  0EFF               	movlw	high STR_1
  1866   0028AC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1867   0028AE  0E01               	movlw	1
  1868   0028B0  EC91  F020         	call	_LCD_ShowString
  1869                           
  1870                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1871   0028B4  0E3B               	movlw	low STR_2
  1872   0028B6  6E07               	movwf	LCD_ShowString@textData^0,c
  1873   0028B8  0EFF               	movlw	high STR_2
  1874   0028BA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1875   0028BC  0E02               	movlw	2
  1876   0028BE  EC91  F020         	call	_LCD_ShowString
  1877   0028C2                     
  1878                           ;main.c: 69:                         runGPIO();
  1879   0028C2  EC73  F01B         	call	_runGPIO	;wreg free
  1880   0028C6                     l7321:
  1881                           
  1882                           ;main.c: 70:                         setUpAgain = 1;
  1883   0028C6  0E01               	movlw	1
  1884   0028C8  0100               	movlb	0	; () banked
  1885   0028CA  6FEC               	movwf	main@setUpAgain& (0+255),b
  1886                           
  1887                           ;main.c: 71:                         break;
  1888   0028CC  EFC9  F014         	goto	l58
  1889   0028D0                     l7323:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  1893   0028D0  0E4C               	movlw	low STR_3
  1894   0028D2  6E07               	movwf	LCD_ShowString@textData^0,c
  1895   0028D4  0EFF               	movlw	high STR_3
  1896   0028D6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1897   0028D8  0E01               	movlw	1
  1898   0028DA  EC91  F020         	call	_LCD_ShowString
  1899                           
  1900                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  1901   0028DE  0EA1               	movlw	low STR_4
  1902   0028E0  6E07               	movwf	LCD_ShowString@textData^0,c
  1903   0028E2  0EFF               	movlw	high STR_4
  1904   0028E4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1905   0028E6  0E02               	movlw	2
  1906   0028E8  EC91  F020         	call	_LCD_ShowString
  1907   0028EC                     
  1908                           ;main.c: 75:                         runUART();
  1909   0028EC  EC5D  F01E         	call	_runUART	;wreg free
  1910   0028F0  EF63  F014         	goto	l7321
  1911   0028F4                     l7329:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1915   0028F4  0E6E               	movlw	low STR_5
  1916   0028F6  6E07               	movwf	LCD_ShowString@textData^0,c
  1917   0028F8  0EFF               	movlw	high STR_5
  1918   0028FA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1919   0028FC  0E01               	movlw	1
  1920   0028FE  EC91  F020         	call	_LCD_ShowString
  1921                           
  1922                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  1923   002902  0E3B               	movlw	low STR_2
  1924   002904  6E07               	movwf	LCD_ShowString@textData^0,c
  1925   002906  0EFF               	movlw	high STR_2
  1926   002908  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1927   00290A  0E02               	movlw	2
  1928   00290C  EC91  F020         	call	_LCD_ShowString
  1929   002910                     
  1930                           ;main.c: 81:                         runPWM();
  1931   002910  EC2B  F01C         	call	_runPWM	;wreg free
  1932   002914  EF63  F014         	goto	l7321
  1933   002918                     l7335:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  1937   002918  0E90               	movlw	low STR_7
  1938   00291A  6E07               	movwf	LCD_ShowString@textData^0,c
  1939   00291C  0EFF               	movlw	high STR_7
  1940   00291E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1941   002920  0E01               	movlw	1
  1942   002922  EC91  F020         	call	_LCD_ShowString
  1943   002926                     
  1944                           ;main.c: 86:                         runADC();
  1945   002926  EC04  F017         	call	_runADC	;wreg free
  1946   00292A  EF63  F014         	goto	l7321
  1947   00292E                     l7341:
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  1951   00292E  0E7F               	movlw	low STR_8
  1952   002930  6E07               	movwf	LCD_ShowString@textData^0,c
  1953   002932  0EFF               	movlw	high STR_8
  1954   002934  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1955   002936  0E01               	movlw	1
  1956   002938  EC91  F020         	call	_LCD_ShowString
  1957                           
  1958                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1959   00293C  0EB2               	movlw	low STR_9
  1960   00293E  6E07               	movwf	LCD_ShowString@textData^0,c
  1961   002940  0EFF               	movlw	high STR_9
  1962   002942  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1963   002944  0E02               	movlw	2
  1964   002946  EC91  F020         	call	_LCD_ShowString
  1965   00294A                     
  1966                           ;main.c: 92:                         runDAC();
  1967   00294A  EC3D  F012         	call	_runDAC	;wreg free
  1968   00294E  EF63  F014         	goto	l7321
  1969   002952                     l7349:
  1970   002952  0100               	movlb	0	; () banked
  1971   002954  51ED               	movf	main@menuI& (0+255),w,b
  1972                           
  1973                           ; Switch size 1, requested type "simple"
  1974                           ; Number of cases is 7, Range of values is 0 to 6
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte           22    12 (average)
  1978                           ;	Chosen strategy is simple_byte
  1979   002956  0A00               	xorlw	0	; case 0
  1980   002958  B4D8               	btfsc	status,2,c
  1981   00295A  EF53  F014         	goto	l7317
  1982   00295E  0A01               	xorlw	1	; case 1
  1983   002960  B4D8               	btfsc	status,2,c
  1984   002962  EF68  F014         	goto	l7323
  1985   002966  0A03               	xorlw	3	; case 2
  1986   002968  B4D8               	btfsc	status,2,c
  1987   00296A  EF7A  F014         	goto	l7329
  1988   00296E  0A01               	xorlw	1	; case 3
  1989   002970  B4D8               	btfsc	status,2,c
  1990   002972  EF8C  F014         	goto	l7335
  1991   002976  0A07               	xorlw	7	; case 4
  1992   002978  B4D8               	btfsc	status,2,c
  1993   00297A  EF97  F014         	goto	l7341
  1994   00297E  0A01               	xorlw	1	; case 5
  1995   002980  B4D8               	btfsc	status,2,c
  1996   002982  EFC9  F014         	goto	l58
  1997   002986  0A03               	xorlw	3	; case 6
  1998   002988  B4D8               	btfsc	status,2,c
  1999   00298A  EFC9  F014         	goto	l58
  2000   00298E  EFC9  F014         	goto	l58
  2001   002992                     l58:
  2002                           
  2003                           ;main.c: 103:         if(PORTAbits.RA2){
  2004   002992  5080               	movf	128,w,c	;volatile
  2005   002994                     
  2006                           ;main.c: 107:         if(setUpAgain){
  2007   002994  0100               	movlb	0	; () banked
  2008   002996  51EC               	movf	main@setUpAgain& (0+255),w,b
  2009   002998  B4D8               	btfsc	status,2,c
  2010   00299A  EFD1  F014         	goto	u9441
  2011   00299E  EFD3  F014         	goto	u9440
  2012   0029A2                     u9441:
  2013   0029A2  EFDE  F013         	goto	l7289
  2014   0029A6                     u9440:
  2015   0029A6                     
  2016                           ; BSR set to: 0
  2017                           ;main.c: 108:         menuI = moveDisplay(menuI,0);
  2018   0029A6  0E00               	movlw	0
  2019   0029A8  6FE7               	movwf	moveDisplay@where& (0+255),b
  2020   0029AA  51ED               	movf	main@menuI& (0+255),w,b
  2021   0029AC  ECCE  F01C         	call	_moveDisplay
  2022   0029B0  0100               	movlb	0	; () banked
  2023   0029B2  6FED               	movwf	main@menuI& (0+255),b
  2024   0029B4                     
  2025                           ; BSR set to: 0
  2026                           ;main.c: 109:         setUpAgain = 0;
  2027   0029B4  0E00               	movlw	0
  2028   0029B6  6FEC               	movwf	main@setUpAgain& (0+255),b
  2029   0029B8  EFDE  F013         	goto	l7289
  2030   0029BC  EF8A  F000         	goto	start
  2031   0029C0                     __end_of_main:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _runUART *****************
  2035 ;; Defined at:
  2036 ;;		line 4 in file "UART.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  p               2  117[BANK0 ] int 
  2041 ;;  keepState       1  116[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        5 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 9
  2058 ;; This function calls:
  2059 ;;		_printf
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text1
  2066   003CBA                     __ptext1:
  2067                           	callstack 0
  2068   003CBA                     _runUART:
  2069                           	callstack 21
  2070   003CBA                     
  2071                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2072   003CBA  8492               	bsf	146,2,c	;volatile
  2073                           
  2074                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2075   003CBC  010F               	movlb	15	; () banked
  2076   003CBE  9D3A               	bcf	58,6,b	;volatile
  2077                           
  2078                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2079   003CC0  9F3A               	bcf	58,7,b	;volatile
  2080                           
  2081                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2082   003CC2  8C94               	bsf	148,6,c	;volatile
  2083                           
  2084                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2085   003CC4  8E94               	bsf	148,7,c	;volatile
  2086   003CC6                     
  2087                           ; BSR set to: 15
  2088                           ;UART.c: 14:     SPBRG1 = 25;
  2089   003CC6  0E19               	movlw	25
  2090   003CC8  6EAF               	movwf	175,c	;volatile
  2091   003CCA                     
  2092                           ; BSR set to: 15
  2093                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2094   003CCA  98AC               	bcf	172,4,c	;volatile
  2095   003CCC                     
  2096                           ; BSR set to: 15
  2097                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2098   003CCC  8EAB               	bsf	171,7,c	;volatile
  2099   003CCE                     
  2100                           ; BSR set to: 15
  2101                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2102   003CCE  8AAC               	bsf	172,5,c	;volatile
  2103   003CD0                     
  2104                           ; BSR set to: 15
  2105                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2106   003CD0  88AB               	bsf	171,4,c	;volatile
  2107                           
  2108                           ;UART.c: 21:     UARTIE = 1;
  2109   003CD2  0E01               	movlw	1
  2110   003CD4  0101               	movlb	1	; () banked
  2111   003CD6  6F23               	movwf	_UARTIE& (0+255),b
  2112   003CD8                     
  2113                           ; BSR set to: 1
  2114                           ;UART.c: 22:     RC1IE = 1;
  2115   003CD8  8A9D               	bsf	3997,5,c	;volatile
  2116   003CDA                     
  2117                           ; BSR set to: 1
  2118                           ;UART.c: 23:     PEIE = 1;
  2119   003CDA  8CF2               	bsf	4082,6,c	;volatile
  2120   003CDC                     
  2121                           ; BSR set to: 1
  2122                           ;UART.c: 24:     GIE = 1;
  2123   003CDC  8EF2               	bsf	4082,7,c	;volatile
  2124                           
  2125                           ;UART.c: 26:     uint8_t keepState = 1;
  2126   003CDE  0E01               	movlw	1
  2127   003CE0  0100               	movlb	0	; () banked
  2128   003CE2  6FD4               	movwf	runUART@keepState& (0+255),b
  2129                           
  2130                           ;UART.c: 28:     while(keepState){
  2131   003CE4  EFCB  F01E         	goto	l532
  2132   003CE8                     l7051:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;UART.c: 29:         if(gmail.full){
  2136   003CE8  0101               	movlb	1	; () banked
  2137   003CEA  5161               	movf	(_gmail+60)& (0+255),w,b	;volatile
  2138   003CEC  B4D8               	btfsc	status,2,c
  2139   003CEE  EF7B  F01E         	goto	u9041
  2140   003CF2  EF7D  F01E         	goto	u9040
  2141   003CF6                     u9041:
  2142   003CF6  EFA7  F01E         	goto	l534
  2143   003CFA                     u9040:
  2144   003CFA                     
  2145                           ; BSR set to: 1
  2146                           ;UART.c: 30:             printf("Dostal jsem %s \n",gmail.data);
  2147   003CFA  0E2A               	movlw	low STR_22
  2148   003CFC  0100               	movlb	0	; () banked
  2149   003CFE  6FCE               	movwf	printf@fmt& (0+255),b
  2150   003D00  0EFF               	movlw	high STR_22
  2151   003D02  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2152   003D04  0E25               	movlw	low _gmail
  2153   003D06  6FD0               	movwf	(?_printf+2)& (0+255),b
  2154   003D08  0E01               	movlw	high _gmail
  2155   003D0A  6FD1               	movwf	(?_printf+3)& (0+255),b
  2156   003D0C  EC29  F024         	call	_printf	;wreg free
  2157   003D10                     
  2158                           ;UART.c: 31:             gmail.full = 0;
  2159   003D10  0E00               	movlw	0
  2160   003D12  0101               	movlb	1	; () banked
  2161   003D14  6F61               	movwf	(_gmail+60)& (0+255),b	;volatile
  2162   003D16                     
  2163                           ; BSR set to: 1
  2164                           ;UART.c: 33:             for(int p = 0; p < 60; p++) {
  2165   003D16  0E00               	movlw	0
  2166   003D18  0100               	movlb	0	; () banked
  2167   003D1A  6FD6               	movwf	(runUART@p+1)& (0+255),b
  2168   003D1C  0E00               	movlw	0
  2169   003D1E  6FD5               	movwf	runUART@p& (0+255),b
  2170   003D20                     l7063:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;UART.c: 34:                 gmail.data[p] = '\0';
  2174   003D20  0E25               	movlw	low _gmail
  2175   003D22  25D5               	addwf	runUART@p& (0+255),w,b
  2176   003D24  6ED9               	movwf	fsr2l,c
  2177   003D26  0E01               	movlw	high _gmail
  2178   003D28  21D6               	addwfc	(runUART@p+1)& (0+255),w,b
  2179   003D2A  6EDA               	movwf	fsr2h,c
  2180   003D2C  6ADF               	clrf	indf2,c
  2181   003D2E                     
  2182                           ; BSR set to: 0
  2183                           ;UART.c: 35:             }
  2184   003D2E  4BD5               	infsnz	runUART@p& (0+255),f,b
  2185   003D30  2BD6               	incf	(runUART@p+1)& (0+255),f,b
  2186   003D32                     
  2187                           ; BSR set to: 0
  2188   003D32  BFD6               	btfsc	(runUART@p+1)& (0+255),7,b
  2189   003D34  EFA5  F01E         	goto	u9051
  2190   003D38  51D6               	movf	(runUART@p+1)& (0+255),w,b
  2191   003D3A  E109               	bnz	u9050
  2192   003D3C  0E3C               	movlw	60
  2193   003D3E  5DD5               	subwf	runUART@p& (0+255),w,b
  2194   003D40  A0D8               	btfss	status,0,c
  2195   003D42  EFA5  F01E         	goto	u9051
  2196   003D46  EFA7  F01E         	goto	u9050
  2197   003D4A                     u9051:
  2198   003D4A  EF90  F01E         	goto	l7063
  2199   003D4E                     u9050:
  2200   003D4E                     l534:
  2201                           
  2202                           ;UART.c: 39:         if(PORTAbits.RA2){
  2203   003D4E  A480               	btfss	128,2,c	;volatile
  2204   003D50  EFAC  F01E         	goto	u9061
  2205   003D54  EFAE  F01E         	goto	u9060
  2206   003D58                     u9061:
  2207   003D58  EFCB  F01E         	goto	l532
  2208   003D5C                     u9060:
  2209   003D5C                     
  2210                           ;UART.c: 40:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2211   003D5C  0E03               	movlw	3
  2212   003D5E  0100               	movlb	0	; () banked
  2213   003D60  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2214   003D62  0E08               	movlw	8
  2215   003D64  6FD2               	movwf	??_runUART& (0+255),b
  2216   003D66  0E77               	movlw	119
  2217   003D68                     u9497:
  2218   003D68  2EE8               	decfsz	wreg,f,c
  2219   003D6A  D7FE               	bra	u9497
  2220   003D6C  2FD2               	decfsz	??_runUART& (0+255),f,b
  2221   003D6E  D7FC               	bra	u9497
  2222   003D70  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2223   003D72  D7FA               	bra	u9497
  2224   003D74                     
  2225                           ;UART.c: 41:             if(PORTAbits.RA2){
  2226   003D74  A480               	btfss	128,2,c	;volatile
  2227   003D76  EFBF  F01E         	goto	u9071
  2228   003D7A  EFC1  F01E         	goto	u9070
  2229   003D7E                     u9071:
  2230   003D7E  EFCB  F01E         	goto	l532
  2231   003D82                     u9070:
  2232   003D82                     l539:
  2233   003D82  B480               	btfsc	128,2,c	;volatile
  2234   003D84  EFC6  F01E         	goto	u9081
  2235   003D88  EFC8  F01E         	goto	u9080
  2236   003D8C                     u9081:
  2237   003D8C  EFC1  F01E         	goto	l539
  2238   003D90                     u9080:
  2239   003D90                     
  2240                           ;UART.c: 43:                 keepState = 0;
  2241   003D90  0E00               	movlw	0
  2242   003D92  0100               	movlb	0	; () banked
  2243   003D94  6FD4               	movwf	runUART@keepState& (0+255),b
  2244   003D96                     l532:
  2245                           
  2246                           ;UART.c: 28:     while(keepState){
  2247   003D96  0100               	movlb	0	; () banked
  2248   003D98  51D4               	movf	runUART@keepState& (0+255),w,b
  2249   003D9A  A4D8               	btfss	status,2,c
  2250   003D9C  EFD2  F01E         	goto	u9091
  2251   003DA0  EFD4  F01E         	goto	u9090
  2252   003DA4                     u9091:
  2253   003DA4  EF74  F01E         	goto	l7051
  2254   003DA8                     u9090:
  2255   003DA8                     
  2256                           ; BSR set to: 0
  2257                           ;UART.c: 50:     RCSTA1bits.SPEN = 0;
  2258   003DA8  9EAB               	bcf	171,7,c	;volatile
  2259                           
  2260                           ;UART.c: 51:     TXSTA1bits.TXEN = 0;
  2261   003DAA  9AAC               	bcf	172,5,c	;volatile
  2262                           
  2263                           ;UART.c: 52:     RCSTA1bits.CREN = 0;
  2264   003DAC  98AB               	bcf	171,4,c	;volatile
  2265   003DAE                     
  2266                           ; BSR set to: 0
  2267                           ;UART.c: 53:     UARTIE = 0;
  2268   003DAE  0E00               	movlw	0
  2269   003DB0  0101               	movlb	1	; () banked
  2270   003DB2  6F23               	movwf	_UARTIE& (0+255),b
  2271   003DB4                     
  2272                           ; BSR set to: 1
  2273                           ;UART.c: 54:     RC1IE = 0;
  2274   003DB4  9A9D               	bcf	3997,5,c	;volatile
  2275   003DB6                     
  2276                           ; BSR set to: 1
  2277                           ;UART.c: 55:     PEIE = 0;
  2278   003DB6  9CF2               	bcf	4082,6,c	;volatile
  2279   003DB8                     
  2280                           ; BSR set to: 1
  2281                           ;UART.c: 56:     GIE = 0;
  2282   003DB8  9EF2               	bcf	4082,7,c	;volatile
  2283   003DBA                     
  2284                           ; BSR set to: 1
  2285   003DBA  0012               	return		;funcret
  2286   003DBC                     __end_of_runUART:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _runPWM *****************
  2290 ;; Defined at:
  2291 ;;		line 11 in file "PWM.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  multiplier      1   16[COMRAM] unsigned char 
  2296 ;;  keepState       1   15[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;Total ram usage:        4 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 2
  2313 ;; This function calls:
  2314 ;;		___awdiv
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text2
  2321   003856                     __ptext2:
  2322                           	callstack 0
  2323   003856                     _runPWM:
  2324                           	callstack 28
  2325   003856                     
  2326                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2327   003856  8494               	bsf	148,2,c	;volatile
  2328   003858                     
  2329                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2330   003858  0EFC               	movlw	-4
  2331   00385A  010F               	movlb	15	; () banked
  2332   00385C  1749               	andwf	73,f,b	;volatile
  2333                           
  2334                           ;PWM.c: 15:     PR2 = 199;
  2335   00385E  0EC7               	movlw	199
  2336   003860  6EBB               	movwf	187,c	;volatile
  2337                           
  2338                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2339   003862  0E0C               	movlw	12
  2340   003864  12BD               	iorwf	189,f,c	;volatile
  2341                           
  2342                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2343   003866  50BD               	movf	189,w,c	;volatile
  2344   003868  0B3F               	andlw	-193
  2345   00386A  0980               	iorlw	128
  2346   00386C  6EBD               	movwf	189,c	;volatile
  2347                           
  2348                           ;PWM.c: 18:     CCPR1L = 0;
  2349   00386E  0E00               	movlw	0
  2350   003870  6EBE               	movwf	190,c	;volatile
  2351   003872                     
  2352                           ; BSR set to: 15
  2353                           ;PWM.c: 19:     TMR2IF = 0;
  2354   003872  929E               	bcf	3998,1,c	;volatile
  2355   003874                     
  2356                           ; BSR set to: 15
  2357                           ;PWM.c: 20:     TMR2ON = 1;
  2358   003874  84BA               	bsf	4026,2,c	;volatile
  2359   003876                     l478:
  2360   003876  A29E               	btfss	3998,1,c	;volatile
  2361   003878  EF40  F01C         	goto	u9101
  2362   00387C  EF42  F01C         	goto	u9100
  2363   003880                     u9101:
  2364   003880  EF3B  F01C         	goto	l478
  2365   003884                     u9100:
  2366   003884                     
  2367                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2368   003884  8494               	bsf	148,2,c	;volatile
  2369                           
  2370                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2371   003886  8892               	bsf	146,4,c	;volatile
  2372                           
  2373                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2374   003888  8492               	bsf	146,2,c	;volatile
  2375                           
  2376                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2377   00388A  9495               	bcf	149,2,c	;volatile
  2378                           
  2379                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2380   00388C  9695               	bcf	149,3,c	;volatile
  2381                           
  2382                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2383   00388E  9894               	bcf	148,4,c	;volatile
  2384                           
  2385                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2386   003890  9895               	bcf	149,4,c	;volatile
  2387                           
  2388                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2389   003892  9A95               	bcf	149,5,c	;volatile
  2390                           
  2391                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2392   003894  9C95               	bcf	149,6,c	;volatile
  2393                           
  2394                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2395   003896  848C               	bsf	140,2,c	;volatile
  2396                           
  2397                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2398   003898  868C               	bsf	140,3,c	;volatile
  2399                           
  2400                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2401   00389A  888B               	bsf	139,4,c	;volatile
  2402                           
  2403                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2404   00389C  888C               	bsf	140,4,c	;volatile
  2405                           
  2406                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2407   00389E  8A8C               	bsf	140,5,c	;volatile
  2408                           
  2409                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2410   0038A0  8C8C               	bsf	140,6,c	;volatile
  2411   0038A2                     
  2412                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2413   0038A2  0E01               	movlw	1
  2414   0038A4  6E10               	movwf	runPWM@keepState^0,c
  2415                           
  2416                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2417   0038A6  0E00               	movlw	0
  2418   0038A8  6E11               	movwf	runPWM@multiplier^0,c
  2419                           
  2420                           ;PWM.c: 47:     while(keepState){
  2421   0038AA  EFC1  F01C         	goto	l481
  2422   0038AE                     l7097:
  2423                           
  2424                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2425   0038AE  5011               	movf	runPWM@multiplier^0,w,c
  2426   0038B0  0DC7               	mullw	199
  2427   0038B2  CFF3 F006          	movff	prodl,___awdiv@dividend
  2428   0038B6  CFF4 F007          	movff	prodh,___awdiv@dividend+1
  2429   0038BA  0E00               	movlw	0
  2430   0038BC  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2431   0038BE  0E05               	movlw	5
  2432   0038C0  6E08               	movwf	___awdiv@divisor^0,c
  2433   0038C2  EC2F  F020         	call	___awdiv	;wreg free
  2434   0038C6  5006               	movf	?___awdiv^0,w,c
  2435   0038C8  6EBE               	movwf	190,c	;volatile
  2436   0038CA                     
  2437                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2438   0038CA  A880               	btfss	128,4,c	;volatile
  2439   0038CC  EF6A  F01C         	goto	u9111
  2440   0038D0  EF6C  F01C         	goto	u9110
  2441   0038D4                     u9111:
  2442   0038D4  EF9E  F01C         	goto	l7115
  2443   0038D8                     u9110:
  2444   0038D8                     
  2445                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2446   0038D8  0E03               	movlw	3
  2447   0038DA  6E0F               	movwf	(??_runPWM+1)^0,c
  2448   0038DC  0E08               	movlw	8
  2449   0038DE  6E0E               	movwf	??_runPWM^0,c
  2450   0038E0  0E77               	movlw	119
  2451   0038E2                     u9507:
  2452   0038E2  2EE8               	decfsz	wreg,f,c
  2453   0038E4  D7FE               	bra	u9507
  2454   0038E6  2E0E               	decfsz	??_runPWM^0,f,c
  2455   0038E8  D7FC               	bra	u9507
  2456   0038EA  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2457   0038EC  D7FA               	bra	u9507
  2458   0038EE  0000               	nop	
  2459   0038F0                     
  2460                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2461   0038F0  A880               	btfss	128,4,c	;volatile
  2462   0038F2  EF7D  F01C         	goto	u9121
  2463   0038F6  EF7F  F01C         	goto	u9120
  2464   0038FA                     u9121:
  2465   0038FA  EF9E  F01C         	goto	l7115
  2466   0038FE                     u9120:
  2467   0038FE                     l485:
  2468   0038FE  B880               	btfsc	128,4,c	;volatile
  2469   003900  EF84  F01C         	goto	u9131
  2470   003904  EF86  F01C         	goto	u9130
  2471   003908                     u9131:
  2472   003908  EF7F  F01C         	goto	l485
  2473   00390C                     u9130:
  2474   00390C                     
  2475                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2476   00390C  0E05               	movlw	5
  2477   00390E  1811               	xorwf	runPWM@multiplier^0,w,c
  2478   003910  A4D8               	btfss	status,2,c
  2479   003912  EF8D  F01C         	goto	u9141
  2480   003916  EF8F  F01C         	goto	u9140
  2481   00391A                     u9141:
  2482   00391A  EF93  F01C         	goto	l7111
  2483   00391E                     u9140:
  2484   00391E                     
  2485                           ;PWM.c: 56:                     multiplier = 0;
  2486   00391E  0E00               	movlw	0
  2487   003920  6E11               	movwf	runPWM@multiplier^0,c
  2488                           
  2489                           ;PWM.c: 57:                 } else if(multiplier <5){
  2490   003922  EF9E  F01C         	goto	l7115
  2491   003926                     l7111:
  2492   003926  0E05               	movlw	5
  2493   003928  6011               	cpfslt	runPWM@multiplier^0,c
  2494   00392A  EF99  F01C         	goto	u9151
  2495   00392E  EF9B  F01C         	goto	u9150
  2496   003932                     u9151:
  2497   003932  EF9E  F01C         	goto	l484
  2498   003936                     u9150:
  2499   003936                     
  2500                           ;PWM.c: 58:                     multiplier++;
  2501   003936  2A11               	incf	runPWM@multiplier^0,f,c
  2502   003938  EF9E  F01C         	goto	l7115
  2503   00393C                     l484:
  2504   00393C                     l7115:
  2505                           
  2506                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2507   00393C  A480               	btfss	128,2,c	;volatile
  2508   00393E  EFA3  F01C         	goto	u9161
  2509   003942  EFA5  F01C         	goto	u9160
  2510   003946                     u9161:
  2511   003946  EFC1  F01C         	goto	l481
  2512   00394A                     u9160:
  2513   00394A                     
  2514                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2515   00394A  0E03               	movlw	3
  2516   00394C  6E0F               	movwf	(??_runPWM+1)^0,c
  2517   00394E  0E08               	movlw	8
  2518   003950  6E0E               	movwf	??_runPWM^0,c
  2519   003952  0E77               	movlw	119
  2520   003954                     u9517:
  2521   003954  2EE8               	decfsz	wreg,f,c
  2522   003956  D7FE               	bra	u9517
  2523   003958  2E0E               	decfsz	??_runPWM^0,f,c
  2524   00395A  D7FC               	bra	u9517
  2525   00395C  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2526   00395E  D7FA               	bra	u9517
  2527   003960  0000               	nop	
  2528   003962                     
  2529                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2530   003962  A480               	btfss	128,2,c	;volatile
  2531   003964  EFB6  F01C         	goto	u9171
  2532   003968  EFB8  F01C         	goto	u9170
  2533   00396C                     u9171:
  2534   00396C  EFC1  F01C         	goto	l481
  2535   003970                     u9170:
  2536   003970                     l493:
  2537   003970  B480               	btfsc	128,2,c	;volatile
  2538   003972  EFBD  F01C         	goto	u9181
  2539   003976  EFBF  F01C         	goto	u9180
  2540   00397A                     u9181:
  2541   00397A  EFB8  F01C         	goto	l493
  2542   00397E                     u9180:
  2543   00397E                     
  2544                           ;PWM.c: 67:             keepState = 0;
  2545   00397E  0E00               	movlw	0
  2546   003980  6E10               	movwf	runPWM@keepState^0,c
  2547   003982                     l481:
  2548                           
  2549                           ;PWM.c: 47:     while(keepState){
  2550   003982  5010               	movf	runPWM@keepState^0,w,c
  2551   003984  A4D8               	btfss	status,2,c
  2552   003986  EFC7  F01C         	goto	u9191
  2553   00398A  EFC9  F01C         	goto	u9190
  2554   00398E                     u9191:
  2555   00398E  EF57  F01C         	goto	l7097
  2556   003992                     u9190:
  2557   003992                     
  2558                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2559   003992  0EF0               	movlw	-16
  2560   003994  16BD               	andwf	189,f,c	;volatile
  2561   003996                     
  2562                           ;PWM.c: 75:     TMR2ON = 0;
  2563   003996  94BA               	bcf	4026,2,c	;volatile
  2564   003998                     
  2565                           ;PWM.c: 76:     TMR2IE = 0;
  2566   003998  929D               	bcf	3997,1,c	;volatile
  2567   00399A  0012               	return		;funcret
  2568   00399C                     __end_of_runPWM:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _runGPIO *****************
  2572 ;; Defined at:
  2573 ;;		line 19 in file "GPIO.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  j               2   36[COMRAM] int 
  2578 ;;  states         12    8[COMRAM] unsigned char [12]
  2579 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2580 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2581 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2582 ;;  numberOfStat    2   33[COMRAM] int 
  2583 ;;  GPIOi           1   35[COMRAM] unsigned char 
  2584 ;;  GPIOreverse     1   32[COMRAM] unsigned char 
  2585 ;;  GPIOindex       1    0        unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;Total ram usage:       32 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 2
  2602 ;; This function calls:
  2603 ;;		_LED1_Control
  2604 ;;		_LED2_Control
  2605 ;;		_LED3_Control
  2606 ;;		_LED4_Control
  2607 ;;		_LED5_Control
  2608 ;;		_LED6_Control
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text3
  2615   0036E6                     __ptext3:
  2616                           	callstack 0
  2617   0036E6                     _runGPIO:
  2618                           	callstack 28
  2619   0036E6                     
  2620                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2621   0036E6  9495               	bcf	149,2,c	;volatile
  2622                           
  2623                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2624   0036E8  9695               	bcf	149,3,c	;volatile
  2625                           
  2626                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2627   0036EA  9894               	bcf	148,4,c	;volatile
  2628                           
  2629                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2630   0036EC  9895               	bcf	149,4,c	;volatile
  2631                           
  2632                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2633   0036EE  9A95               	bcf	149,5,c	;volatile
  2634                           
  2635                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2636   0036F0  9C95               	bcf	149,6,c	;volatile
  2637                           
  2638                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2639   0036F2  010F               	movlb	15	; () banked
  2640   0036F4  953B               	bcf	59,2,b	;volatile
  2641                           
  2642                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2643   0036F6  973B               	bcf	59,3,b	;volatile
  2644                           
  2645                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2646   0036F8  993A               	bcf	58,4,b	;volatile
  2647                           
  2648                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2649   0036FA  993B               	bcf	59,4,b	;volatile
  2650                           
  2651                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2652   0036FC  9B3B               	bcf	59,5,b	;volatile
  2653                           
  2654                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2655   0036FE  9D3B               	bcf	59,6,b	;volatile
  2656                           
  2657                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2658   003700  848C               	bsf	140,2,c	;volatile
  2659                           
  2660                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2661   003702  868C               	bsf	140,3,c	;volatile
  2662                           
  2663                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  2664   003704  888B               	bsf	139,4,c	;volatile
  2665                           
  2666                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  2667   003706  888C               	bsf	140,4,c	;volatile
  2668                           
  2669                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  2670   003708  8A8C               	bsf	140,5,c	;volatile
  2671                           
  2672                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  2673   00370A  8C8C               	bsf	140,6,c	;volatile
  2674                           
  2675                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  2676   00370C  8492               	bsf	146,2,c	;volatile
  2677                           
  2678                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  2679   00370E  9538               	bcf	56,2,b	;volatile
  2680   003710                     
  2681                           ; BSR set to: 15
  2682                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  2683   003710  0E3F               	movlw	-193
  2684   003712  16CD               	andwf	205,f,c	;volatile
  2685                           
  2686                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  2687   003714  0E30               	movlw	48
  2688   003716  12CD               	iorwf	205,f,c	;volatile
  2689   003718                     
  2690                           ; BSR set to: 15
  2691                           ;GPIO.c: 49:     TMR1IE = 1;
  2692   003718  809D               	bsf	3997,0,c	;volatile
  2693   00371A                     
  2694                           ; BSR set to: 15
  2695                           ;GPIO.c: 50:     PEIE = 1;
  2696   00371A  8CF2               	bsf	4082,6,c	;volatile
  2697   00371C                     
  2698                           ; BSR set to: 15
  2699                           ;GPIO.c: 51:     GIE = 1;
  2700   00371C  8EF2               	bsf	4082,7,c	;volatile
  2701                           
  2702                           ;GPIO.c: 52:     GPIOIE = 1;
  2703   00371E  0E01               	movlw	1
  2704   003720  0101               	movlb	1	; () banked
  2705   003722  6F24               	movwf	_GPIOIE& (0+255),b
  2706   003724                     
  2707                           ; BSR set to: 1
  2708                           ;GPIO.c: 53:     TMR1IF = 1;
  2709   003724  809E               	bsf	3998,0,c	;volatile
  2710                           
  2711                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  2712   003726  0E9E               	movlw	158
  2713   003728  6ECF               	movwf	207,c	;volatile
  2714   00372A  0E58               	movlw	88
  2715   00372C  6ECE               	movwf	206,c	;volatile
  2716   00372E                     
  2717                           ; BSR set to: 1
  2718                           ;GPIO.c: 55:     TMR1ON = 1;
  2719   00372E  80CD               	bsf	4045,0,c	;volatile
  2720                           
  2721                           ;GPIO.c: 58:     keepStateGPIO = 1;
  2722   003730  0E01               	movlw	1
  2723   003732  0100               	movlb	0	; () banked
  2724   003734  6FEE               	movwf	_keepStateGPIO& (0+255),b
  2725                           
  2726                           ;GPIO.c: 61:     uint8_t GPIOreverse;;GPIO.c: 62:     GPIOreverse = 0;
  2727   003736  0E00               	movlw	0
  2728   003738  6E21               	movwf	runGPIO@GPIOreverse^0,c
  2729   00373A                     
  2730                           ; BSR set to: 0
  2731                           ;GPIO.c: 64:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  2732   00373A  EE21  F0B1         	lfsr	2,runGPIO@F6973
  2733   00373E  EE10  F015         	lfsr	1,runGPIO@LEDControl
  2734   003742  0E0B               	movlw	11
  2735   003744                     u8951:
  2736   003744  CFDB FFE3          	movff	plusw2,plusw1
  2737   003748  06E8               	decf	wreg,f,c
  2738   00374A  E2FC               	bc	u8951
  2739   00374C                     
  2740                           ; BSR set to: 0
  2741                           ;GPIO.c: 65:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2742   00374C  EE21  F0A5         	lfsr	2,runGPIO@F6991
  2743   003750  EE10  F009         	lfsr	1,runGPIO@states
  2744   003754  0E0B               	movlw	11
  2745   003756                     u8961:
  2746   003756  CFDB FFE3          	movff	plusw2,plusw1
  2747   00375A  06E8               	decf	wreg,f,c
  2748   00375C  E2FC               	bc	u8961
  2749                           
  2750                           ;GPIO.c: 66:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2751   00375E  0E00               	movlw	0
  2752   003760  6E23               	movwf	(runGPIO@numberOfStates+1)^0,c
  2753   003762  0E0C               	movlw	12
  2754   003764  6E22               	movwf	runGPIO@numberOfStates^0,c
  2755                           
  2756                           ;GPIO.c: 67:     uint8_t GPIOi;;GPIO.c: 68:     GPIOi = 0;
  2757   003766  0E00               	movlw	0
  2758   003768  6E24               	movwf	runGPIO@GPIOi^0,c
  2759                           
  2760                           ;GPIO.c: 70:     while(keepStateGPIO){
  2761   00376A  EF16  F01C         	goto	l344
  2762   00376E                     l7011:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;GPIO.c: 72:         for(int j = 0; j < 6; j++) {
  2766   00376E  0E00               	movlw	0
  2767   003770  6E26               	movwf	(runGPIO@j+1)^0,c
  2768   003772  0E00               	movlw	0
  2769   003774  6E25               	movwf	runGPIO@j^0,c
  2770   003776                     l7017:
  2771                           
  2772                           ;GPIO.c: 73:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2773   003776  5025               	movf	runGPIO@j^0,w,c
  2774   003778  0D02               	mullw	2
  2775   00377A  50F3               	movf	243,w,c
  2776   00377C  0F15               	addlw	low runGPIO@LEDControl
  2777   00377E  6ED9               	movwf	fsr2l,c
  2778   003780  6ADA               	clrf	fsr2h,c
  2779   003782  D802               	call	u8978
  2780   003784  EFE8  F01B         	goto	u8979
  2781   003788                     u8978:
  2782   003788  0005               	push	
  2783   00378A  6EFA               	movwf	pclath,c
  2784   00378C  50DE               	movf	postinc2,w,c
  2785   00378E  6EFD               	movwf	tosl,c
  2786   003790  50DE               	movf	postinc2,w,c
  2787   003792  6EFE               	movwf	tosh,c
  2788   003794  50F8               	movf	tblptru,w,c
  2789   003796  6EFF               	movwf	tosu,c
  2790   003798  50FA               	movf	pclath,w,c
  2791   00379A  5025               	movf	runGPIO@j^0,w,c
  2792   00379C  0805               	sublw	5
  2793   00379E  6E07               	movwf	??_runGPIO^0,c
  2794   0037A0  5024               	movf	runGPIO@GPIOi^0,w,c
  2795   0037A2  0F09               	addlw	low runGPIO@states
  2796   0037A4  6ED9               	movwf	fsr2l,c
  2797   0037A6  6ADA               	clrf	fsr2h,c
  2798   0037A8  50DF               	movf	indf2,w,c
  2799   0037AA  6E08               	movwf	(??_runGPIO+1)^0,c
  2800   0037AC  2A07               	incf	??_runGPIO^0,f,c
  2801   0037AE  EFDB  F01B         	goto	u8984
  2802   0037B2                     u8985:
  2803   0037B2  90D8               	bcf	status,0,c
  2804   0037B4  3208               	rrcf	(??_runGPIO+1)^0,f,c
  2805   0037B6                     u8984:
  2806   0037B6  2E07               	decfsz	??_runGPIO^0,f,c
  2807   0037B8  EFD9  F01B         	goto	u8985
  2808   0037BC  A008               	btfss	(??_runGPIO+1)^0,0,c
  2809   0037BE  EFE3  F01B         	goto	u8991
  2810   0037C2  EFE6  F01B         	goto	u8990
  2811   0037C6                     u8991:
  2812   0037C6  0E01               	movlw	1
  2813   0037C8  EFE7  F01B         	goto	u9000
  2814   0037CC                     u8990:
  2815   0037CC  0E00               	movlw	0
  2816   0037CE                     u9000:
  2817   0037CE  0012               	return		;indir
  2818   0037D0                     u8979:
  2819   0037D0                     
  2820                           ;GPIO.c: 74:         }
  2821   0037D0  4A25               	infsnz	runGPIO@j^0,f,c
  2822   0037D2  2A26               	incf	(runGPIO@j+1)^0,f,c
  2823   0037D4  BE26               	btfsc	(runGPIO@j+1)^0,7,c
  2824   0037D6  EFF6  F01B         	goto	u9011
  2825   0037DA  5026               	movf	(runGPIO@j+1)^0,w,c
  2826   0037DC  E109               	bnz	u9010
  2827   0037DE  0E06               	movlw	6
  2828   0037E0  5C25               	subwf	runGPIO@j^0,w,c
  2829   0037E2  A0D8               	btfss	status,0,c
  2830   0037E4  EFF6  F01B         	goto	u9011
  2831   0037E8  EFF8  F01B         	goto	u9010
  2832   0037EC                     u9011:
  2833   0037EC  EFBB  F01B         	goto	l7017
  2834   0037F0                     u9010:
  2835   0037F0                     
  2836                           ;GPIO.c: 75:         _delay((unsigned long)((400)*(32E6/4000.0)));
  2837   0037F0  0E11               	movlw	17
  2838   0037F2  6E08               	movwf	(??_runGPIO+1)^0,c
  2839   0037F4  0E3C               	movlw	60
  2840   0037F6  6E07               	movwf	??_runGPIO^0,c
  2841   0037F8  0ECB               	movlw	203
  2842   0037FA                     u9527:
  2843   0037FA  2EE8               	decfsz	wreg,f,c
  2844   0037FC  D7FE               	bra	u9527
  2845   0037FE  2E07               	decfsz	??_runGPIO^0,f,c
  2846   003800  D7FC               	bra	u9527
  2847   003802  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  2848   003804  D7FA               	bra	u9527
  2849   003806  0000               	nop	
  2850   003808                     
  2851                           ;GPIO.c: 76:         GPIOi++;
  2852   003808  2A24               	incf	runGPIO@GPIOi^0,f,c
  2853                           
  2854                           ;GPIO.c: 77:         if(GPIOi == numberOfStates){
  2855   00380A  5024               	movf	runGPIO@GPIOi^0,w,c
  2856   00380C  6E07               	movwf	??_runGPIO^0,c
  2857   00380E  6A08               	clrf	(??_runGPIO+1)^0,c
  2858   003810  5022               	movf	runGPIO@numberOfStates^0,w,c
  2859   003812  1807               	xorwf	??_runGPIO^0,w,c
  2860   003814  E107               	bnz	u9021
  2861   003816  5023               	movf	(runGPIO@numberOfStates+1)^0,w,c
  2862   003818  1808               	xorwf	(??_runGPIO+1)^0,w,c
  2863   00381A  A4D8               	btfss	status,2,c
  2864   00381C  EF12  F01C         	goto	u9021
  2865   003820  EF14  F01C         	goto	u9020
  2866   003824                     u9021:
  2867   003824  EF16  F01C         	goto	l344
  2868   003828                     u9020:
  2869   003828                     
  2870                           ;GPIO.c: 78:             GPIOi = 0;
  2871   003828  0E00               	movlw	0
  2872   00382A  6E24               	movwf	runGPIO@GPIOi^0,c
  2873   00382C                     l344:
  2874                           
  2875                           ;GPIO.c: 70:     while(keepStateGPIO){
  2876   00382C  0100               	movlb	0	; () banked
  2877   00382E  51EE               	movf	_keepStateGPIO& (0+255),w,b
  2878   003830  A4D8               	btfss	status,2,c
  2879   003832  EF1D  F01C         	goto	u9031
  2880   003836  EF1F  F01C         	goto	u9030
  2881   00383A                     u9031:
  2882   00383A  EFB7  F01B         	goto	l7011
  2883   00383E                     u9030:
  2884   00383E                     
  2885                           ; BSR set to: 0
  2886                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  2887   00383E  848C               	bsf	140,2,c	;volatile
  2888                           
  2889                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  2890   003840  868C               	bsf	140,3,c	;volatile
  2891                           
  2892                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  2893   003842  888B               	bsf	139,4,c	;volatile
  2894                           
  2895                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  2896   003844  888C               	bsf	140,4,c	;volatile
  2897                           
  2898                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  2899   003846  8A8C               	bsf	140,5,c	;volatile
  2900                           
  2901                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  2902   003848  8C8C               	bsf	140,6,c	;volatile
  2903                           
  2904                           ;GPIO.c: 89:     TMR1ON = 0;
  2905   00384A  90CD               	bcf	4045,0,c	;volatile
  2906                           
  2907                           ;GPIO.c: 90:     TMR1IE = 0;
  2908   00384C  909D               	bcf	3997,0,c	;volatile
  2909   00384E                     
  2910                           ; BSR set to: 0
  2911                           ;GPIO.c: 91:     GPIOIE = 0;
  2912   00384E  0E00               	movlw	0
  2913   003850  0101               	movlb	1	; () banked
  2914   003852  6F24               	movwf	_GPIOIE& (0+255),b
  2915   003854                     
  2916                           ; BSR set to: 1
  2917   003854  0012               	return		;funcret
  2918   003856                     __end_of_runGPIO:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _LED5_Control *****************
  2922 ;; Defined at:
  2923 ;;		line 14 in file "GPIO.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  state           1    wreg     unsigned char 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  state           1    5[COMRAM] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_runGPIO
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text4
  2952   004888                     __ptext4:
  2953                           	callstack 0
  2954   004888                     _LED5_Control:
  2955                           	callstack 28
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;incstack = 0
  2959                           ;LED5_Control@state stored from wreg
  2960   004888  6E06               	movwf	LED5_Control@state^0,c
  2961   00488A  B006               	btfsc	LED5_Control@state^0,0,c
  2962   00488C  D002               	bra	u8885
  2963   00488E  9A8C               	bcf	140,5,c	;volatile
  2964   004890  D001               	bra	u8886
  2965   004892                     u8885:
  2966   004892  8A8C               	bsf	140,5,c	;volatile
  2967   004894                     u8886:
  2968   004894  0012               	return		;funcret
  2969   004896                     __end_of_LED5_Control:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _LED4_Control *****************
  2973 ;; Defined at:
  2974 ;;		line 13 in file "GPIO.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  state           1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  state           1    5[COMRAM] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        1 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_runGPIO
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text5
  3003   004896                     __ptext5:
  3004                           	callstack 0
  3005   004896                     _LED4_Control:
  3006                           	callstack 28
  3007                           
  3008                           ;incstack = 0
  3009                           ;LED4_Control@state stored from wreg
  3010   004896  6E06               	movwf	LED4_Control@state^0,c
  3011   004898  B006               	btfsc	LED4_Control@state^0,0,c
  3012   00489A  D002               	bra	u8875
  3013   00489C  988C               	bcf	140,4,c	;volatile
  3014   00489E  D001               	bra	u8876
  3015   0048A0                     u8875:
  3016   0048A0  888C               	bsf	140,4,c	;volatile
  3017   0048A2                     u8876:
  3018   0048A2  0012               	return		;funcret
  3019   0048A4                     __end_of_LED4_Control:
  3020                           	callstack 0
  3021                           
  3022 ;; *************** function _LED3_Control *****************
  3023 ;; Defined at:
  3024 ;;		line 12 in file "GPIO.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  state           1    wreg     unsigned char 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  state           1    5[COMRAM] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;Total ram usage:        1 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_runGPIO
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text6
  3053   0048A4                     __ptext6:
  3054                           	callstack 0
  3055   0048A4                     _LED3_Control:
  3056                           	callstack 28
  3057                           
  3058                           ;incstack = 0
  3059                           ;LED3_Control@state stored from wreg
  3060   0048A4  6E06               	movwf	LED3_Control@state^0,c
  3061   0048A6  B006               	btfsc	LED3_Control@state^0,0,c
  3062   0048A8  D002               	bra	u8865
  3063   0048AA  988B               	bcf	139,4,c	;volatile
  3064   0048AC  D001               	bra	u8866
  3065   0048AE                     u8865:
  3066   0048AE  888B               	bsf	139,4,c	;volatile
  3067   0048B0                     u8866:
  3068   0048B0  0012               	return		;funcret
  3069   0048B2                     __end_of_LED3_Control:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _LED2_Control *****************
  3073 ;; Defined at:
  3074 ;;		line 11 in file "GPIO.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  state           1    wreg     unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  state           1    5[COMRAM] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:        1 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_runGPIO
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text7
  3103   0048B2                     __ptext7:
  3104                           	callstack 0
  3105   0048B2                     _LED2_Control:
  3106                           	callstack 28
  3107                           
  3108                           ;incstack = 0
  3109                           ;LED2_Control@state stored from wreg
  3110   0048B2  6E06               	movwf	LED2_Control@state^0,c
  3111   0048B4  B006               	btfsc	LED2_Control@state^0,0,c
  3112   0048B6  D002               	bra	u8855
  3113   0048B8  968C               	bcf	140,3,c	;volatile
  3114   0048BA  D001               	bra	u8856
  3115   0048BC                     u8855:
  3116   0048BC  868C               	bsf	140,3,c	;volatile
  3117   0048BE                     u8856:
  3118   0048BE  0012               	return		;funcret
  3119   0048C0                     __end_of_LED2_Control:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _LED1_Control *****************
  3123 ;; Defined at:
  3124 ;;		line 10 in file "GPIO.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  state           1    wreg     unsigned char 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  state           1    5[COMRAM] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_runGPIO
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text8
  3153   0048C0                     __ptext8:
  3154                           	callstack 0
  3155   0048C0                     _LED1_Control:
  3156                           	callstack 28
  3157                           
  3158                           ;incstack = 0
  3159                           ;LED1_Control@state stored from wreg
  3160   0048C0  6E06               	movwf	LED1_Control@state^0,c
  3161   0048C2  B006               	btfsc	LED1_Control@state^0,0,c
  3162   0048C4  D002               	bra	u8845
  3163   0048C6  948C               	bcf	140,2,c	;volatile
  3164   0048C8  D001               	bra	u8846
  3165   0048CA                     u8845:
  3166   0048CA  848C               	bsf	140,2,c	;volatile
  3167   0048CC                     u8846:
  3168   0048CC  0012               	return		;funcret
  3169   0048CE                     __end_of_LED1_Control:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _LED6_Control *****************
  3173 ;; Defined at:
  3174 ;;		line 15 in file "GPIO.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  state           1    wreg     unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  state           1    5[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        1 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_runGPIO
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text9
  3203   0048CE                     __ptext9:
  3204                           	callstack 0
  3205   0048CE                     _LED6_Control:
  3206                           	callstack 28
  3207                           
  3208                           ;incstack = 0
  3209                           ;LED6_Control@state stored from wreg
  3210   0048CE  6E06               	movwf	LED6_Control@state^0,c
  3211   0048D0  B006               	btfsc	LED6_Control@state^0,0,c
  3212   0048D2  D002               	bra	u8895
  3213   0048D4  9C8C               	bcf	140,6,c	;volatile
  3214   0048D6  D001               	bra	u8896
  3215   0048D8                     u8895:
  3216   0048D8  8C8C               	bsf	140,6,c	;volatile
  3217   0048DA                     u8896:
  3218   0048DA  0012               	return		;funcret
  3219   0048DC                     __end_of_LED6_Control:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _runDAC *****************
  3223 ;; Defined at:
  3224 ;;		line 10 in file "DAC.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  DACindex        1  125[BANK0 ] unsigned char 
  3229 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  3230 ;;  keepState       1  123[BANK0 ] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:       12 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 9
  3247 ;; This function calls:
  3248 ;;		_SPI_write
  3249 ;;		___fladd
  3250 ;;		___fldiv
  3251 ;;		___flmul
  3252 ;;		___fltol
  3253 ;;		___xxtofl
  3254 ;;		_printf
  3255 ;;		_sinf
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text10
  3262   00247A                     __ptext10:
  3263                           	callstack 0
  3264   00247A                     _runDAC:
  3265                           	callstack 21
  3266   00247A                     
  3267                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  3268   00247A  8094               	bsf	148,0,c	;volatile
  3269                           
  3270                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  3271   00247C  8892               	bsf	146,4,c	;volatile
  3272                           
  3273                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  3274   00247E  8692               	bsf	146,3,c	;volatile
  3275                           
  3276                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  3277   002480  8492               	bsf	146,2,c	;volatile
  3278                           
  3279                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  3280   002482  010F               	movlb	15	; () banked
  3281   002484  9738               	bcf	56,3,b	;volatile
  3282                           
  3283                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  3284   002486  9538               	bcf	56,2,b	;volatile
  3285                           
  3286                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  3287   002488  9693               	bcf	147,3,c	;volatile
  3288                           
  3289                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  3290   00248A  9694               	bcf	148,3,c	;volatile
  3291                           
  3292                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  3293   00248C  9A94               	bcf	148,5,c	;volatile
  3294   00248E                     
  3295                           ; BSR set to: 15
  3296                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  3297   00248E  50C6               	movf	198,w,c	;volatile
  3298   002490  0BF0               	andlw	-16
  3299   002492  0902               	iorlw	2
  3300   002494  6EC6               	movwf	198,c	;volatile
  3301   002496                     
  3302                           ; BSR set to: 15
  3303                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  3304   002496  98C6               	bcf	198,4,c	;volatile
  3305   002498                     
  3306                           ; BSR set to: 15
  3307                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  3308   002498  8CC7               	bsf	199,6,c	;volatile
  3309   00249A                     
  3310                           ; BSR set to: 15
  3311                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  3312   00249A  8AC6               	bsf	198,5,c	;volatile
  3313   00249C                     
  3314                           ; BSR set to: 15
  3315                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  3316   00249C  8139               	bsf	57,0,b	;volatile
  3317   00249E                     
  3318                           ; BSR set to: 15
  3319                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  3320   00249E  9EC0               	bcf	192,7,c	;volatile
  3321                           
  3322                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  3323   0024A0  50C0               	movf	192,w,c	;volatile
  3324   0024A2  0BF8               	andlw	-8
  3325   0024A4  0906               	iorlw	6
  3326   0024A6  6EC0               	movwf	192,c	;volatile
  3327                           
  3328                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  3329   0024A8  50C0               	movf	192,w,c	;volatile
  3330   0024AA  0BC7               	andlw	-57
  3331   0024AC  0930               	iorlw	48
  3332   0024AE  6EC0               	movwf	192,c	;volatile
  3333   0024B0                     
  3334                           ; BSR set to: 15
  3335                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  3336   0024B0  80C2               	bsf	194,0,c	;volatile
  3337                           
  3338                           ;DAC.c: 38:     SPBRG1 = 25;
  3339   0024B2  0E19               	movlw	25
  3340   0024B4  6EAF               	movwf	175,c	;volatile
  3341   0024B6                     
  3342                           ; BSR set to: 15
  3343                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  3344   0024B6  8EAB               	bsf	171,7,c	;volatile
  3345   0024B8                     
  3346                           ; BSR set to: 15
  3347                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  3348   0024B8  98AC               	bcf	172,4,c	;volatile
  3349   0024BA                     
  3350                           ; BSR set to: 15
  3351                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  3352   0024BA  8AAC               	bsf	172,5,c	;volatile
  3353   0024BC                     
  3354                           ; BSR set to: 15
  3355                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  3356   0024BC  88AB               	bsf	171,4,c	;volatile
  3357   0024BE                     
  3358                           ; BSR set to: 15
  3359                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  3360   0024BE  868A               	bsf	138,3,c	;volatile
  3361                           
  3362                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  3363   0024C0  50C2               	movf	194,w,c	;volatile
  3364   0024C2  0B83               	andlw	-125
  3365   0024C4  0930               	iorlw	48
  3366   0024C6  6EC2               	movwf	194,c	;volatile
  3367                           
  3368                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  3369   0024C8  0E01               	movlw	1
  3370   0024CA  0100               	movlb	0	; () banked
  3371   0024CC  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3372                           
  3373                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  3374   0024CE  0E01               	movlw	1
  3375   0024D0  6FDB               	movwf	runDAC@keepState& (0+255),b
  3376                           
  3377                           ;DAC.c: 52:     uint8_t DACindex = 0;
  3378   0024D2  0E00               	movlw	0
  3379   0024D4  6FDD               	movwf	runDAC@DACindex& (0+255),b
  3380                           
  3381                           ;DAC.c: 54:     while(keepState){
  3382   0024D6  EFA7  F013         	goto	l7241
  3383   0024DA                     l7199:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;DAC.c: 57:                 if(DACindex<255/2){
  3387   0024DA  0E7F               	movlw	127
  3388   0024DC  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  3389   0024DE  EF73  F012         	goto	u9271
  3390   0024E2  EF75  F012         	goto	u9270
  3391   0024E6                     u9271:
  3392   0024E6  EF9D  F012         	goto	l7203
  3393   0024EA                     u9270:
  3394   0024EA                     
  3395                           ; BSR set to: 0
  3396                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  3397   0024EA  0E33               	movlw	51
  3398   0024EC  6E18               	movwf	___flmul@a^0,c
  3399   0024EE  0E33               	movlw	51
  3400   0024F0  6E19               	movwf	(___flmul@a+1)^0,c
  3401   0024F2  0EF3               	movlw	243
  3402   0024F4  6E1A               	movwf	(___flmul@a+2)^0,c
  3403   0024F6  0E3F               	movlw	63
  3404   0024F8  6E1B               	movwf	(___flmul@a+3)^0,c
  3405   0024FA  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3406   0024FC  6E06               	movwf	___xxtofl@val^0,c
  3407   0024FE  6A07               	clrf	(___xxtofl@val+1)^0,c
  3408   002500  6A08               	clrf	(___xxtofl@val+2)^0,c
  3409   002502  6A09               	clrf	(___xxtofl@val+3)^0,c
  3410   002504  0E01               	movlw	1
  3411   002506  EC0C  F019         	call	___xxtofl
  3412   00250A  C006  F014         	movff	?___xxtofl,___flmul@b
  3413   00250E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3414   002512  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3415   002516  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3416   00251A  EC6F  F00A         	call	___flmul	;wreg free
  3417   00251E  C014  F064         	movff	?___flmul,___fltol@f1
  3418   002522  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3419   002526  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3420   00252A  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3421   00252E  EC57  F01D         	call	___fltol	;wreg free
  3422   002532  0100               	movlb	0	; () banked
  3423   002534  5164               	movf	?___fltol& (0+255),w,b
  3424   002536  EC48  F023         	call	_SPI_write
  3425   00253A                     l7203:
  3426                           
  3427                           ;DAC.c: 60:                 if(DACindex>=255/2){
  3428   00253A  0E7E               	movlw	126
  3429   00253C  0100               	movlb	0	; () banked
  3430   00253E  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  3431   002540  EFA4  F012         	goto	u9281
  3432   002544  EFA6  F012         	goto	u9280
  3433   002548                     u9281:
  3434   002548  EF62  F013         	goto	l215
  3435   00254C                     u9280:
  3436   00254C                     
  3437                           ; BSR set to: 0
  3438                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  3439   00254C  0E33               	movlw	51
  3440   00254E  6E18               	movwf	___flmul@a^0,c
  3441   002550  0E33               	movlw	51
  3442   002552  6E19               	movwf	(___flmul@a+1)^0,c
  3443   002554  0EF3               	movlw	243
  3444   002556  6E1A               	movwf	(___flmul@a+2)^0,c
  3445   002558  0E3F               	movlw	63
  3446   00255A  6E1B               	movwf	(___flmul@a+3)^0,c
  3447   00255C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3448   00255E  0AFF               	xorlw	255
  3449   002560  6FD2               	movwf	??_runDAC& (0+255),b
  3450   002562  51D2               	movf	??_runDAC& (0+255),w,b
  3451   002564  6E06               	movwf	___xxtofl@val^0,c
  3452   002566  6A07               	clrf	(___xxtofl@val+1)^0,c
  3453   002568  6A08               	clrf	(___xxtofl@val+2)^0,c
  3454   00256A  6A09               	clrf	(___xxtofl@val+3)^0,c
  3455   00256C  0E01               	movlw	1
  3456   00256E  EC0C  F019         	call	___xxtofl
  3457   002572  C006  F014         	movff	?___xxtofl,___flmul@b
  3458   002576  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3459   00257A  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3460   00257E  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3461   002582  EC6F  F00A         	call	___flmul	;wreg free
  3462   002586  C014  F064         	movff	?___flmul,___fltol@f1
  3463   00258A  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3464   00258E  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3465   002592  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3466   002596  EC57  F01D         	call	___fltol	;wreg free
  3467   00259A  0100               	movlb	0	; () banked
  3468   00259C  5164               	movf	?___fltol& (0+255),w,b
  3469   00259E  EC48  F023         	call	_SPI_write
  3470   0025A2  EF62  F013         	goto	l215
  3471   0025A6                     l7207:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3475   0025A6  0E00               	movlw	0
  3476   0025A8  6E31               	movwf	___fldiv@a^0,c
  3477   0025AA  0E00               	movlw	0
  3478   0025AC  6E32               	movwf	(___fldiv@a+1)^0,c
  3479   0025AE  0E7F               	movlw	127
  3480   0025B0  6E33               	movwf	(___fldiv@a+2)^0,c
  3481   0025B2  0E43               	movlw	67
  3482   0025B4  6E34               	movwf	(___fldiv@a+3)^0,c
  3483   0025B6  0EC3               	movlw	195
  3484   0025B8  6E18               	movwf	___flmul@a^0,c
  3485   0025BA  0EF5               	movlw	245
  3486   0025BC  6E19               	movwf	(___flmul@a+1)^0,c
  3487   0025BE  0EC8               	movlw	200
  3488   0025C0  6E1A               	movwf	(___flmul@a+2)^0,c
  3489   0025C2  0E40               	movlw	64
  3490   0025C4  6E1B               	movwf	(___flmul@a+3)^0,c
  3491   0025C6  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3492   0025C8  6E06               	movwf	___xxtofl@val^0,c
  3493   0025CA  6A07               	clrf	(___xxtofl@val+1)^0,c
  3494   0025CC  6A08               	clrf	(___xxtofl@val+2)^0,c
  3495   0025CE  6A09               	clrf	(___xxtofl@val+3)^0,c
  3496   0025D0  0E01               	movlw	1
  3497   0025D2  EC0C  F019         	call	___xxtofl
  3498   0025D6  C006  F014         	movff	?___xxtofl,___flmul@b
  3499   0025DA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3500   0025DE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3501   0025E2  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3502   0025E6  EC6F  F00A         	call	___flmul	;wreg free
  3503   0025EA  C014  F02D         	movff	?___flmul,___fldiv@b
  3504   0025EE  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3505   0025F2  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3506   0025F6  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3507   0025FA  EC70  F010         	call	___fldiv	;wreg free
  3508   0025FE  C02D  F0D3         	movff	?___fldiv,_runDAC$4106
  3509   002602  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4106+1
  3510   002606  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4106+2
  3511   00260A  C030  F0D6         	movff	?___fldiv+3,_runDAC$4106+3
  3512   00260E                     
  3513                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3514   00260E  C0D3  F0A4         	movff	_runDAC$4106,sinf@x
  3515   002612  C0D4  F0A5         	movff	_runDAC$4106+1,sinf@x+1
  3516   002616  C0D5  F0A6         	movff	_runDAC$4106+2,sinf@x+2
  3517   00261A  C0D6  F0A7         	movff	_runDAC$4106+3,sinf@x+3
  3518   00261E  EC89  F005         	call	_sinf	;wreg free
  3519   002622  C0A4  F0D7         	movff	?_sinf,_runDAC$4107
  3520   002626  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4107+1
  3521   00262A  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4107+2
  3522   00262E  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4107+3
  3523   002632                     
  3524                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3525   002632  0E00               	movlw	0
  3526   002634  6E4A               	movwf	___fladd@a^0,c
  3527   002636  0E00               	movlw	0
  3528   002638  6E4B               	movwf	(___fladd@a+1)^0,c
  3529   00263A  0EFE               	movlw	254
  3530   00263C  6E4C               	movwf	(___fladd@a+2)^0,c
  3531   00263E  0E42               	movlw	66
  3532   002640  6E4D               	movwf	(___fladd@a+3)^0,c
  3533   002642  0E00               	movlw	0
  3534   002644  6E18               	movwf	___flmul@a^0,c
  3535   002646  0E00               	movlw	0
  3536   002648  6E19               	movwf	(___flmul@a+1)^0,c
  3537   00264A  0EFE               	movlw	254
  3538   00264C  6E1A               	movwf	(___flmul@a+2)^0,c
  3539   00264E  0E42               	movlw	66
  3540   002650  6E1B               	movwf	(___flmul@a+3)^0,c
  3541   002652  C0D7  F014         	movff	_runDAC$4107,___flmul@b
  3542   002656  C0D8  F015         	movff	_runDAC$4107+1,___flmul@b+1
  3543   00265A  C0D9  F016         	movff	_runDAC$4107+2,___flmul@b+2
  3544   00265E  C0DA  F017         	movff	_runDAC$4107+3,___flmul@b+3
  3545   002662  EC6F  F00A         	call	___flmul	;wreg free
  3546   002666  C014  F046         	movff	?___flmul,___fladd@b
  3547   00266A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  3548   00266E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  3549   002672  C017  F049         	movff	?___flmul+3,___fladd@b+3
  3550   002676  EC0E  F008         	call	___fladd	;wreg free
  3551   00267A  C046  F064         	movff	?___fladd,___fltol@f1
  3552   00267E  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  3553   002682  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  3554   002686  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  3555   00268A  EC57  F01D         	call	___fltol	;wreg free
  3556   00268E  0100               	movlb	0	; () banked
  3557   002690  5164               	movf	?___fltol& (0+255),w,b
  3558   002692  EC48  F023         	call	_SPI_write
  3559                           
  3560                           ;DAC.c: 66:                 break;
  3561   002696  EF62  F013         	goto	l215
  3562   00269A                     l7213:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  3566   00269A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3567   00269C  0AFF               	xorlw	255
  3568   00269E  EC48  F023         	call	_SPI_write
  3569                           
  3570                           ;DAC.c: 69:                 break;
  3571   0026A2  EF62  F013         	goto	l215
  3572   0026A6                     l7217:
  3573                           
  3574                           ; BSR set to: 0
  3575   0026A6  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  3576                           
  3577                           ; Switch size 1, requested type "simple"
  3578                           ; Number of cases is 3, Range of values is 1 to 3
  3579                           ; switch strategies available:
  3580                           ; Name         Instructions Cycles
  3581                           ; simple_byte           10     6 (average)
  3582                           ;	Chosen strategy is simple_byte
  3583   0026A8  0A01               	xorlw	1	; case 1
  3584   0026AA  B4D8               	btfsc	status,2,c
  3585   0026AC  EF6D  F012         	goto	l7199
  3586   0026B0  0A03               	xorlw	3	; case 2
  3587   0026B2  B4D8               	btfsc	status,2,c
  3588   0026B4  EFD3  F012         	goto	l7207
  3589   0026B8  0A01               	xorlw	1	; case 3
  3590   0026BA  B4D8               	btfsc	status,2,c
  3591   0026BC  EF4D  F013         	goto	l7213
  3592   0026C0  EF62  F013         	goto	l215
  3593   0026C4                     l215:
  3594                           
  3595                           ;DAC.c: 71:         GODONE = 1;
  3596   0026C4  82C2               	bsf	4034,1,c	;volatile
  3597   0026C6                     l218:
  3598   0026C6  B2C2               	btfsc	4034,1,c	;volatile
  3599   0026C8  EF68  F013         	goto	u9291
  3600   0026CC  EF6A  F013         	goto	u9290
  3601   0026D0                     u9291:
  3602   0026D0  EF63  F013         	goto	l218
  3603   0026D4                     u9290:
  3604   0026D4                     
  3605                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  3606   0026D4  0EE5               	movlw	low STR_10
  3607   0026D6  0100               	movlb	0	; () banked
  3608   0026D8  6FCE               	movwf	printf@fmt& (0+255),b
  3609   0026DA  0EFF               	movlw	high STR_10
  3610   0026DC  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  3611   0026DE  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  3612   0026E2  6BD1               	clrf	(?_printf+3)& (0+255),b
  3613   0026E4  EC29  F024         	call	_printf	;wreg free
  3614   0026E8                     
  3615                           ;DAC.c: 75:         if(PORTCbits.RC0){
  3616   0026E8  A082               	btfss	130,0,c	;volatile
  3617   0026EA  EF79  F013         	goto	u9301
  3618   0026EE  EF7B  F013         	goto	u9300
  3619   0026F2                     u9301:
  3620   0026F2  EF7E  F013         	goto	l7225
  3621   0026F6                     u9300:
  3622   0026F6                     
  3623                           ;DAC.c: 76:             selectModeDAC = 1;
  3624   0026F6  0E01               	movlw	1
  3625   0026F8  0100               	movlb	0	; () banked
  3626   0026FA  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3627   0026FC                     l7225:
  3628                           
  3629                           ;DAC.c: 78:         if(PORTAbits.RA4){
  3630   0026FC  A880               	btfss	128,4,c	;volatile
  3631   0026FE  EF83  F013         	goto	u9311
  3632   002702  EF85  F013         	goto	u9310
  3633   002706                     u9311:
  3634   002706  EF88  F013         	goto	l7229
  3635   00270A                     u9310:
  3636   00270A                     
  3637                           ;DAC.c: 79:             selectModeDAC = 2;
  3638   00270A  0E02               	movlw	2
  3639   00270C  0100               	movlb	0	; () banked
  3640   00270E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3641   002710                     l7229:
  3642                           
  3643                           ;DAC.c: 81:         if(PORTAbits.RA3){
  3644   002710  A680               	btfss	128,3,c	;volatile
  3645   002712  EF8D  F013         	goto	u9321
  3646   002716  EF8F  F013         	goto	u9320
  3647   00271A                     u9321:
  3648   00271A  EF92  F013         	goto	l7233
  3649   00271E                     u9320:
  3650   00271E                     
  3651                           ;DAC.c: 82:             selectModeDAC = 3;
  3652   00271E  0E03               	movlw	3
  3653   002720  0100               	movlb	0	; () banked
  3654   002722  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3655   002724                     l7233:
  3656                           
  3657                           ;DAC.c: 84:         if(PORTAbits.RA2){
  3658   002724  A480               	btfss	128,2,c	;volatile
  3659   002726  EF97  F013         	goto	u9331
  3660   00272A  EF99  F013         	goto	u9330
  3661   00272E                     u9331:
  3662   00272E  EF9C  F013         	goto	l7237
  3663   002732                     u9330:
  3664   002732                     
  3665                           ;DAC.c: 85:             keepState = 0;
  3666   002732  0E00               	movlw	0
  3667   002734  0100               	movlb	0	; () banked
  3668   002736  6FDB               	movwf	runDAC@keepState& (0+255),b
  3669   002738                     l7237:
  3670                           
  3671                           ;DAC.c: 87:         DACindex++;
  3672   002738  0100               	movlb	0	; () banked
  3673   00273A  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  3674   00273C                     
  3675                           ; BSR set to: 0
  3676                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  3677   00273C  0E68               	movlw	104
  3678   00273E  0100               	movlb	0	; () banked
  3679   002740  6FD2               	movwf	??_runDAC& (0+255),b
  3680   002742  0EE4               	movlw	228
  3681   002744                     u9537:
  3682   002744  2EE8               	decfsz	wreg,f,c
  3683   002746  D7FE               	bra	u9537
  3684   002748  2FD2               	decfsz	??_runDAC& (0+255),f,b
  3685   00274A  D7FC               	bra	u9537
  3686   00274C  0000               	nop	
  3687   00274E                     l7241:
  3688                           
  3689                           ;DAC.c: 54:     while(keepState){
  3690   00274E  0100               	movlb	0	; () banked
  3691   002750  51DB               	movf	runDAC@keepState& (0+255),w,b
  3692   002752  A4D8               	btfss	status,2,c
  3693   002754  EFAE  F013         	goto	u9341
  3694   002758  EFB0  F013         	goto	u9340
  3695   00275C                     u9341:
  3696   00275C  EF53  F013         	goto	l7217
  3697   002760                     u9340:
  3698   002760                     
  3699                           ; BSR set to: 0
  3700   002760  0012               	return		;funcret
  3701   002762                     __end_of_runDAC:
  3702                           	callstack 0
  3703                           
  3704 ;; *************** function _sinf *****************
  3705 ;; Defined at:
  3706 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  x               4   68[BANK0 ] float 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  ux              4   90[BANK0 ] struct .
  3711 ;;  y               4   86[BANK0 ] struct .
  3712 ;;  sign            1   81[BANK0 ] _Bool 
  3713 ;;  n               1   80[BANK0 ] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  4   68[BANK0 ] float 
  3716 ;; Registers used:
  3717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3723 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;Total ram usage:       26 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 4
  3730 ;; This function calls:
  3731 ;;		___cosdf
  3732 ;;		___fladd
  3733 ;;		___flneg
  3734 ;;		___rem_pio2f
  3735 ;;		___sindf
  3736 ;; This function is called by:
  3737 ;;		_runDAC
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text11
  3742   000B12                     __ptext11:
  3743                           	callstack 0
  3744   000B12                     _sinf:
  3745                           	callstack 25
  3746   000B12  C0A4  F0BA         	movff	sinf@x,sinf@ux
  3747   000B16  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  3748   000B1A  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  3749   000B1E  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  3750   000B22  0100               	movlb	0	; () banked
  3751   000B24  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  3752   000B26  EF97  F005         	goto	u8711
  3753   000B2A  EF9A  F005         	goto	u8710
  3754   000B2E                     u8711:
  3755   000B2E  0E01               	movlw	1
  3756   000B30  EF9B  F005         	goto	u8720
  3757   000B34                     u8710:
  3758   000B34  0E00               	movlw	0
  3759   000B36                     u8720:
  3760   000B36  6FB1               	movwf	sinf@sign& (0+255),b
  3761   000B38                     
  3762                           ; BSR set to: 0
  3763   000B38  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  3764   000B3A                     
  3765                           ; BSR set to: 0
  3766   000B3A  0EDB               	movlw	219
  3767   000B3C  5DBA               	subwf	sinf@ux& (0+255),w,b
  3768   000B3E  0E0F               	movlw	15
  3769   000B40  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3770   000B42  0E49               	movlw	73
  3771   000B44  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3772   000B46  0E3F               	movlw	63
  3773   000B48  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3774   000B4A  B0D8               	btfsc	status,0,c
  3775   000B4C  EFAA  F005         	goto	u8731
  3776   000B50  EFAC  F005         	goto	u8730
  3777   000B54                     u8731:
  3778   000B54  EFD5  F005         	goto	l6833
  3779   000B58                     u8730:
  3780   000B58                     
  3781                           ; BSR set to: 0
  3782   000B58  0E80               	movlw	128
  3783   000B5A  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  3784   000B5C  0E39               	movlw	57
  3785   000B5E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3786   000B60  B0D8               	btfsc	status,0,c
  3787   000B62  EFB5  F005         	goto	u8741
  3788   000B66  EFB7  F005         	goto	u8740
  3789   000B6A                     u8741:
  3790   000B6A  EFC1  F005         	goto	l6829
  3791   000B6E                     u8740:
  3792   000B6E                     
  3793                           ; BSR set to: 0
  3794   000B6E  C0A4  F0A4         	movff	sinf@x,?_sinf
  3795   000B72  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  3796   000B76  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  3797   000B7A  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  3798   000B7E  EF0D  F008         	goto	l1489
  3799   000B82                     l6829:
  3800                           
  3801                           ; BSR set to: 0
  3802   000B82  C0A4  F064         	movff	sinf@x,___sindf@x
  3803   000B86  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  3804   000B8A  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  3805   000B8E  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  3806   000B92  ECE0  F014         	call	___sindf	;wreg free
  3807   000B96  C064  F0A4         	movff	?___sindf,?_sinf
  3808   000B9A  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  3809   000B9E  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  3810   000BA2  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  3811   000BA6  EF0D  F008         	goto	l1489
  3812   000BAA                     l6833:
  3813                           
  3814                           ; BSR set to: 0
  3815   000BAA  0ED2               	movlw	210
  3816   000BAC  5DBA               	subwf	sinf@ux& (0+255),w,b
  3817   000BAE  0E53               	movlw	83
  3818   000BB0  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3819   000BB2  0E7B               	movlw	123
  3820   000BB4  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3821   000BB6  0E40               	movlw	64
  3822   000BB8  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3823   000BBA  B0D8               	btfsc	status,0,c
  3824   000BBC  EFE2  F005         	goto	u8751
  3825   000BC0  EFE4  F005         	goto	u8750
  3826   000BC4                     u8751:
  3827   000BC4  EFC7  F006         	goto	l6863
  3828   000BC8                     u8750:
  3829   000BC8                     
  3830                           ; BSR set to: 0
  3831   000BC8  0EE4               	movlw	228
  3832   000BCA  5DBA               	subwf	sinf@ux& (0+255),w,b
  3833   000BCC  0ECB               	movlw	203
  3834   000BCE  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3835   000BD0  0E16               	movlw	22
  3836   000BD2  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3837   000BD4  0E40               	movlw	64
  3838   000BD6  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3839   000BD8  B0D8               	btfsc	status,0,c
  3840   000BDA  EFF1  F005         	goto	u8761
  3841   000BDE  EFF3  F005         	goto	u8760
  3842   000BE2                     u8761:
  3843   000BE2  EF61  F006         	goto	l6853
  3844   000BE6                     u8760:
  3845   000BE6                     
  3846                           ; BSR set to: 0
  3847   000BE6  51B1               	movf	sinf@sign& (0+255),w,b
  3848   000BE8  B4D8               	btfsc	status,2,c
  3849   000BEA  EFF9  F005         	goto	u8771
  3850   000BEE  EFFB  F005         	goto	u8770
  3851   000BF2                     u8771:
  3852   000BF2  EF33  F006         	goto	l6847
  3853   000BF6                     u8770:
  3854   000BF6                     
  3855                           ; BSR set to: 0
  3856   000BF6  0EDB               	movlw	219
  3857   000BF8  6E4A               	movwf	___fladd@a^0,c
  3858   000BFA  0E0F               	movlw	15
  3859   000BFC  6E4B               	movwf	(___fladd@a+1)^0,c
  3860   000BFE  0EC9               	movlw	201
  3861   000C00  6E4C               	movwf	(___fladd@a+2)^0,c
  3862   000C02  0E3F               	movlw	63
  3863   000C04  6E4D               	movwf	(___fladd@a+3)^0,c
  3864   000C06  C0A4  F046         	movff	sinf@x,___fladd@b
  3865   000C0A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3866   000C0E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3867   000C12  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3868   000C16  EC0E  F008         	call	___fladd	;wreg free
  3869   000C1A  C046  F0B2         	movff	?___fladd,_sinf$4109
  3870   000C1E  C047  F0B3         	movff	?___fladd+1,_sinf$4109+1
  3871   000C22  C048  F0B4         	movff	?___fladd+2,_sinf$4109+2
  3872   000C26  C049  F0B5         	movff	?___fladd+3,_sinf$4109+3
  3873   000C2A                     l6841:
  3874   000C2A  C0B2  F064         	movff	_sinf$4109,___cosdf@x
  3875   000C2E  C0B3  F065         	movff	_sinf$4109+1,___cosdf@x+1
  3876   000C32  C0B4  F066         	movff	_sinf$4109+2,___cosdf@x+2
  3877   000C36  C0B5  F067         	movff	_sinf$4109+3,___cosdf@x+3
  3878   000C3A  EC0D  F018         	call	___cosdf	;wreg free
  3879   000C3E  C064  F080         	movff	?___cosdf,___flneg@f1
  3880   000C42  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  3881   000C46  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  3882   000C4A  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  3883   000C4E  EC67  F023         	call	___flneg	;wreg free
  3884   000C52  C080  F0A4         	movff	?___flneg,?_sinf
  3885   000C56  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  3886   000C5A  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  3887   000C5E  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  3888   000C62  EF0D  F008         	goto	l1489
  3889   000C66                     l6847:
  3890                           
  3891                           ; BSR set to: 0
  3892   000C66  C0A4  F046         	movff	sinf@x,___fladd@b
  3893   000C6A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3894   000C6E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3895   000C72  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3896   000C76  0EDB               	movlw	219
  3897   000C78  6E4A               	movwf	___fladd@a^0,c
  3898   000C7A  0E0F               	movlw	15
  3899   000C7C  6E4B               	movwf	(___fladd@a+1)^0,c
  3900   000C7E  0EC9               	movlw	201
  3901   000C80  6E4C               	movwf	(___fladd@a+2)^0,c
  3902   000C82  0EBF               	movlw	191
  3903   000C84  6E4D               	movwf	(___fladd@a+3)^0,c
  3904   000C86  EC0E  F008         	call	___fladd	;wreg free
  3905   000C8A  C046  F0B2         	movff	?___fladd,_sinf$4109
  3906   000C8E  C047  F0B3         	movff	?___fladd+1,_sinf$4109+1
  3907   000C92  C048  F0B4         	movff	?___fladd+2,_sinf$4109+2
  3908   000C96  C049  F0B5         	movff	?___fladd+3,_sinf$4109+3
  3909   000C9A                     l6849:
  3910   000C9A  C0B2  F064         	movff	_sinf$4109,___cosdf@x
  3911   000C9E  C0B3  F065         	movff	_sinf$4109+1,___cosdf@x+1
  3912   000CA2  C0B4  F066         	movff	_sinf$4109+2,___cosdf@x+2
  3913   000CA6  C0B5  F067         	movff	_sinf$4109+3,___cosdf@x+3
  3914   000CAA  EC0D  F018         	call	___cosdf	;wreg free
  3915   000CAE  C064  F0A4         	movff	?___cosdf,?_sinf
  3916   000CB2  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  3917   000CB6  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  3918   000CBA  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  3919   000CBE  EF0D  F008         	goto	l1489
  3920   000CC2                     l6853:
  3921                           
  3922                           ; BSR set to: 0
  3923   000CC2  51B1               	movf	sinf@sign& (0+255),w,b
  3924   000CC4  A4D8               	btfss	status,2,c
  3925   000CC6  EF67  F006         	goto	u8781
  3926   000CCA  EF69  F006         	goto	u8780
  3927   000CCE                     u8781:
  3928   000CCE  EF8F  F006         	goto	l6857
  3929   000CD2                     u8780:
  3930   000CD2                     
  3931                           ; BSR set to: 0
  3932   000CD2  0EDB               	movlw	219
  3933   000CD4  6E4A               	movwf	___fladd@a^0,c
  3934   000CD6  0E0F               	movlw	15
  3935   000CD8  6E4B               	movwf	(___fladd@a+1)^0,c
  3936   000CDA  0E49               	movlw	73
  3937   000CDC  6E4C               	movwf	(___fladd@a+2)^0,c
  3938   000CDE  0EC0               	movlw	192
  3939   000CE0  6E4D               	movwf	(___fladd@a+3)^0,c
  3940   000CE2  C0A4  F046         	movff	sinf@x,___fladd@b
  3941   000CE6  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3942   000CEA  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3943   000CEE  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3944   000CF2  EC0E  F008         	call	___fladd	;wreg free
  3945   000CF6  C046  F080         	movff	?___fladd,___flneg@f1
  3946   000CFA  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  3947   000CFE  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  3948   000D02  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  3949   000D06  EC67  F023         	call	___flneg	;wreg free
  3950   000D0A  C080  F0A8         	movff	?___flneg,_sinf$3833
  3951   000D0E  C081  F0A9         	movff	?___flneg+1,_sinf$3833+1
  3952   000D12  C082  F0AA         	movff	?___flneg+2,_sinf$3833+2
  3953   000D16  C083  F0AB         	movff	?___flneg+3,_sinf$3833+3
  3954   000D1A  EFB3  F006         	goto	l6859
  3955   000D1E                     l6857:
  3956                           
  3957                           ; BSR set to: 0
  3958   000D1E  0EDB               	movlw	219
  3959   000D20  6E4A               	movwf	___fladd@a^0,c
  3960   000D22  0E0F               	movlw	15
  3961   000D24  6E4B               	movwf	(___fladd@a+1)^0,c
  3962   000D26  0E49               	movlw	73
  3963   000D28  6E4C               	movwf	(___fladd@a+2)^0,c
  3964   000D2A  0E40               	movlw	64
  3965   000D2C  6E4D               	movwf	(___fladd@a+3)^0,c
  3966   000D2E  C0A4  F046         	movff	sinf@x,___fladd@b
  3967   000D32  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3968   000D36  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3969   000D3A  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3970   000D3E  EC0E  F008         	call	___fladd	;wreg free
  3971   000D42  C046  F080         	movff	?___fladd,___flneg@f1
  3972   000D46  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  3973   000D4A  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  3974   000D4E  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  3975   000D52  EC67  F023         	call	___flneg	;wreg free
  3976   000D56  C080  F0A8         	movff	?___flneg,_sinf$3833
  3977   000D5A  C081  F0A9         	movff	?___flneg+1,_sinf$3833+1
  3978   000D5E  C082  F0AA         	movff	?___flneg+2,_sinf$3833+2
  3979   000D62  C083  F0AB         	movff	?___flneg+3,_sinf$3833+3
  3980   000D66                     l6859:
  3981   000D66  C0A8  F064         	movff	_sinf$3833,___sindf@x
  3982   000D6A  C0A9  F065         	movff	_sinf$3833+1,___sindf@x+1
  3983   000D6E  C0AA  F066         	movff	_sinf$3833+2,___sindf@x+2
  3984   000D72  C0AB  F067         	movff	_sinf$3833+3,___sindf@x+3
  3985   000D76  ECE0  F014         	call	___sindf	;wreg free
  3986   000D7A  C064  F0A4         	movff	?___sindf,?_sinf
  3987   000D7E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  3988   000D82  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  3989   000D86  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  3990   000D8A  EF0D  F008         	goto	l1489
  3991   000D8E                     l6863:
  3992                           
  3993                           ; BSR set to: 0
  3994   000D8E  0ED6               	movlw	214
  3995   000D90  5DBA               	subwf	sinf@ux& (0+255),w,b
  3996   000D92  0E31               	movlw	49
  3997   000D94  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3998   000D96  0EE2               	movlw	226
  3999   000D98  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4000   000D9A  0E40               	movlw	64
  4001   000D9C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4002   000D9E  B0D8               	btfsc	status,0,c
  4003   000DA0  EFD4  F006         	goto	u8791
  4004   000DA4  EFD6  F006         	goto	u8790
  4005   000DA8                     u8791:
  4006   000DA8  EF77  F007         	goto	l6893
  4007   000DAC                     u8790:
  4008   000DAC                     
  4009                           ; BSR set to: 0
  4010   000DAC  0EE0               	movlw	224
  4011   000DAE  5DBA               	subwf	sinf@ux& (0+255),w,b
  4012   000DB0  0EED               	movlw	237
  4013   000DB2  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4014   000DB4  0EAF               	movlw	175
  4015   000DB6  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4016   000DB8  0E40               	movlw	64
  4017   000DBA  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4018   000DBC  B0D8               	btfsc	status,0,c
  4019   000DBE  EFE3  F006         	goto	u8801
  4020   000DC2  EFE5  F006         	goto	u8800
  4021   000DC6                     u8801:
  4022   000DC6  EF25  F007         	goto	l6883
  4023   000DCA                     u8800:
  4024   000DCA                     
  4025                           ; BSR set to: 0
  4026   000DCA  51B1               	movf	sinf@sign& (0+255),w,b
  4027   000DCC  B4D8               	btfsc	status,2,c
  4028   000DCE  EFEB  F006         	goto	u8811
  4029   000DD2  EFED  F006         	goto	u8810
  4030   000DD6                     u8811:
  4031   000DD6  EF09  F007         	goto	l6877
  4032   000DDA                     u8810:
  4033   000DDA                     
  4034                           ; BSR set to: 0
  4035   000DDA  C0A4  F046         	movff	sinf@x,___fladd@b
  4036   000DDE  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4037   000DE2  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4038   000DE6  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4039   000DEA  0EE4               	movlw	228
  4040   000DEC  6E4A               	movwf	___fladd@a^0,c
  4041   000DEE  0ECB               	movlw	203
  4042   000DF0  6E4B               	movwf	(___fladd@a+1)^0,c
  4043   000DF2  0E96               	movlw	150
  4044   000DF4  6E4C               	movwf	(___fladd@a+2)^0,c
  4045   000DF6  0E40               	movlw	64
  4046   000DF8  6E4D               	movwf	(___fladd@a+3)^0,c
  4047   000DFA  EC0E  F008         	call	___fladd	;wreg free
  4048   000DFE  C046  F0B2         	movff	?___fladd,_sinf$4109
  4049   000E02  C047  F0B3         	movff	?___fladd+1,_sinf$4109+1
  4050   000E06  C048  F0B4         	movff	?___fladd+2,_sinf$4109+2
  4051   000E0A  C049  F0B5         	movff	?___fladd+3,_sinf$4109+3
  4052   000E0E  EF4D  F006         	goto	l6849
  4053   000E12                     l6877:
  4054                           
  4055                           ; BSR set to: 0
  4056   000E12  0EE4               	movlw	228
  4057   000E14  6E4A               	movwf	___fladd@a^0,c
  4058   000E16  0ECB               	movlw	203
  4059   000E18  6E4B               	movwf	(___fladd@a+1)^0,c
  4060   000E1A  0E96               	movlw	150
  4061   000E1C  6E4C               	movwf	(___fladd@a+2)^0,c
  4062   000E1E  0EC0               	movlw	192
  4063   000E20  6E4D               	movwf	(___fladd@a+3)^0,c
  4064   000E22  C0A4  F046         	movff	sinf@x,___fladd@b
  4065   000E26  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4066   000E2A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4067   000E2E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4068   000E32  EC0E  F008         	call	___fladd	;wreg free
  4069   000E36  C046  F0B2         	movff	?___fladd,_sinf$4109
  4070   000E3A  C047  F0B3         	movff	?___fladd+1,_sinf$4109+1
  4071   000E3E  C048  F0B4         	movff	?___fladd+2,_sinf$4109+2
  4072   000E42  C049  F0B5         	movff	?___fladd+3,_sinf$4109+3
  4073   000E46  EF15  F006         	goto	l6841
  4074   000E4A                     l6883:
  4075                           
  4076                           ; BSR set to: 0
  4077   000E4A  51B1               	movf	sinf@sign& (0+255),w,b
  4078   000E4C  A4D8               	btfss	status,2,c
  4079   000E4E  EF2B  F007         	goto	u8821
  4080   000E52  EF2D  F007         	goto	u8820
  4081   000E56                     u8821:
  4082   000E56  EF49  F007         	goto	l6887
  4083   000E5A                     u8820:
  4084   000E5A                     
  4085                           ; BSR set to: 0
  4086   000E5A  C0A4  F046         	movff	sinf@x,___fladd@b
  4087   000E5E  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4088   000E62  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4089   000E66  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4090   000E6A  0EDB               	movlw	219
  4091   000E6C  6E4A               	movwf	___fladd@a^0,c
  4092   000E6E  0E0F               	movlw	15
  4093   000E70  6E4B               	movwf	(___fladd@a+1)^0,c
  4094   000E72  0EC9               	movlw	201
  4095   000E74  6E4C               	movwf	(___fladd@a+2)^0,c
  4096   000E76  0EC0               	movlw	192
  4097   000E78  6E4D               	movwf	(___fladd@a+3)^0,c
  4098   000E7A  EC0E  F008         	call	___fladd	;wreg free
  4099   000E7E  C046  F0AC         	movff	?___fladd,_sinf$3834
  4100   000E82  C047  F0AD         	movff	?___fladd+1,_sinf$3834+1
  4101   000E86  C048  F0AE         	movff	?___fladd+2,_sinf$3834+2
  4102   000E8A  C049  F0AF         	movff	?___fladd+3,_sinf$3834+3
  4103   000E8E  EF63  F007         	goto	l6889
  4104   000E92                     l6887:
  4105                           
  4106                           ; BSR set to: 0
  4107   000E92  C0A4  F046         	movff	sinf@x,___fladd@b
  4108   000E96  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4109   000E9A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4110   000E9E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4111   000EA2  0EDB               	movlw	219
  4112   000EA4  6E4A               	movwf	___fladd@a^0,c
  4113   000EA6  0E0F               	movlw	15
  4114   000EA8  6E4B               	movwf	(___fladd@a+1)^0,c
  4115   000EAA  0EC9               	movlw	201
  4116   000EAC  6E4C               	movwf	(___fladd@a+2)^0,c
  4117   000EAE  0E40               	movlw	64
  4118   000EB0  6E4D               	movwf	(___fladd@a+3)^0,c
  4119   000EB2  EC0E  F008         	call	___fladd	;wreg free
  4120   000EB6  C046  F0AC         	movff	?___fladd,_sinf$3834
  4121   000EBA  C047  F0AD         	movff	?___fladd+1,_sinf$3834+1
  4122   000EBE  C048  F0AE         	movff	?___fladd+2,_sinf$3834+2
  4123   000EC2  C049  F0AF         	movff	?___fladd+3,_sinf$3834+3
  4124   000EC6                     l6889:
  4125   000EC6  C0AC  F064         	movff	_sinf$3834,___sindf@x
  4126   000ECA  C0AD  F065         	movff	_sinf$3834+1,___sindf@x+1
  4127   000ECE  C0AE  F066         	movff	_sinf$3834+2,___sindf@x+2
  4128   000ED2  C0AF  F067         	movff	_sinf$3834+3,___sindf@x+3
  4129   000ED6  ECE0  F014         	call	___sindf	;wreg free
  4130   000EDA  C064  F0A4         	movff	?___sindf,?_sinf
  4131   000EDE  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4132   000EE2  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4133   000EE6  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4134   000EEA  EF0D  F008         	goto	l1489
  4135   000EEE                     l6893:
  4136                           
  4137                           ; BSR set to: 0
  4138   000EEE  0E80               	movlw	128
  4139   000EF0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4140   000EF2  0E7F               	movlw	127
  4141   000EF4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4142   000EF6  A0D8               	btfss	status,0,c
  4143   000EF8  EF80  F007         	goto	u8831
  4144   000EFC  EF82  F007         	goto	u8830
  4145   000F00                     u8831:
  4146   000F00  EF94  F007         	goto	l6901
  4147   000F04                     u8830:
  4148   000F04                     
  4149                           ; BSR set to: 0
  4150   000F04  0EFF               	movlw	255
  4151   000F06  13BA               	iorwf	sinf@ux& (0+255),f,b
  4152   000F08  0EFF               	movlw	255
  4153   000F0A  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  4154   000F0C  0EFF               	movlw	255
  4155   000F0E  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  4156   000F10  0E00               	movlw	0
  4157   000F12  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  4158   000F14                     
  4159                           ; BSR set to: 0
  4160   000F14  C0BA  F0A4         	movff	sinf@ux,?_sinf
  4161   000F18  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  4162   000F1C  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  4163   000F20  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  4164   000F24  EF0D  F008         	goto	l1489
  4165   000F28                     l6901:
  4166                           
  4167                           ; BSR set to: 0
  4168   000F28  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  4169   000F2C  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  4170   000F30  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  4171   000F34  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  4172   000F38  0EB6               	movlw	low sinf@y
  4173   000F3A  6F88               	movwf	___rem_pio2f@y& (0+255),b
  4174   000F3C  EC8F  F00E         	call	___rem_pio2f	;wreg free
  4175   000F40  0100               	movlb	0	; () banked
  4176   000F42  5184               	movf	?___rem_pio2f& (0+255),w,b
  4177   000F44  0B03               	andlw	3
  4178   000F46  6FB0               	movwf	sinf@n& (0+255),b
  4179   000F48  EFFE  F007         	goto	l6919
  4180   000F4C                     l6903:
  4181                           
  4182                           ; BSR set to: 0
  4183   000F4C  C0B6  F080         	movff	sinf@y,___flneg@f1
  4184   000F50  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  4185   000F54  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  4186   000F58  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  4187   000F5C  EC67  F023         	call	___flneg	;wreg free
  4188   000F60  C080  F0B6         	movff	?___flneg,sinf@y
  4189   000F64  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  4190   000F68  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  4191   000F6C  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  4192   000F70                     l6905:
  4193   000F70  C0B6  F064         	movff	sinf@y,___sindf@x
  4194   000F74  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  4195   000F78  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  4196   000F7C  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  4197   000F80  ECE0  F014         	call	___sindf	;wreg free
  4198   000F84  C064  F0A4         	movff	?___sindf,?_sinf
  4199   000F88  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4200   000F8C  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4201   000F90  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4202   000F94  EF0D  F008         	goto	l1489
  4203   000F98                     l6909:
  4204                           
  4205                           ; BSR set to: 0
  4206   000F98  C0B6  F064         	movff	sinf@y,___cosdf@x
  4207   000F9C  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4208   000FA0  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4209   000FA4  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4210   000FA8  EC0D  F018         	call	___cosdf	;wreg free
  4211   000FAC  C064  F0A4         	movff	?___cosdf,?_sinf
  4212   000FB0  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4213   000FB4  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4214   000FB8  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4215   000FBC  EF0D  F008         	goto	l1489
  4216   000FC0                     l6913:
  4217                           
  4218                           ; BSR set to: 0
  4219   000FC0  C0B6  F064         	movff	sinf@y,___cosdf@x
  4220   000FC4  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4221   000FC8  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4222   000FCC  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4223   000FD0  EC0D  F018         	call	___cosdf	;wreg free
  4224   000FD4  C064  F080         	movff	?___cosdf,___flneg@f1
  4225   000FD8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4226   000FDC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4227   000FE0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4228   000FE4  EC67  F023         	call	___flneg	;wreg free
  4229   000FE8  C080  F0A4         	movff	?___flneg,?_sinf
  4230   000FEC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4231   000FF0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4232   000FF4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4233   000FF8  EF0D  F008         	goto	l1489
  4234   000FFC                     l6919:
  4235                           
  4236                           ; BSR set to: 0
  4237   000FFC  51B0               	movf	sinf@n& (0+255),w,b
  4238                           
  4239                           ; Switch size 1, requested type "simple"
  4240                           ; Number of cases is 3, Range of values is 0 to 2
  4241                           ; switch strategies available:
  4242                           ; Name         Instructions Cycles
  4243                           ; simple_byte           10     6 (average)
  4244                           ;	Chosen strategy is simple_byte
  4245   000FFE  0A00               	xorlw	0	; case 0
  4246   001000  B4D8               	btfsc	status,2,c
  4247   001002  EFB8  F007         	goto	l6905
  4248   001006  0A01               	xorlw	1	; case 1
  4249   001008  B4D8               	btfsc	status,2,c
  4250   00100A  EFCC  F007         	goto	l6909
  4251   00100E  0A03               	xorlw	3	; case 2
  4252   001010  B4D8               	btfsc	status,2,c
  4253   001012  EFA6  F007         	goto	l6903
  4254   001016  EFE0  F007         	goto	l6913
  4255   00101A                     l1489:
  4256   00101A  0012               	return		;funcret
  4257   00101C                     __end_of_sinf:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function ___sindf *****************
  4261 ;; Defined at:
  4262 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  x               4    4[BANK0 ] float 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  z               4   32[BANK0 ] float 
  4267 ;;  s               4   28[BANK0 ] float 
  4268 ;;  w               4   12[BANK0 ] float 
  4269 ;;  r               4    8[BANK0 ] float 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4    4[BANK0 ] float 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4279 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;Total ram usage:       32 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 2
  4286 ;; This function calls:
  4287 ;;		___fladd
  4288 ;;		___flmul
  4289 ;; This function is called by:
  4290 ;;		_sinf
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text12
  4295   0029C0                     __ptext12:
  4296                           	callstack 0
  4297   0029C0                     ___sindf:
  4298                           	callstack 26
  4299   0029C0  C064  F014         	movff	___sindf@x,___flmul@b
  4300   0029C4  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  4301   0029C8  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  4302   0029CC  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  4303   0029D0  C064  F018         	movff	___sindf@x,___flmul@a
  4304   0029D4  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4305   0029D8  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4306   0029DC  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4307   0029E0  EC6F  F00A         	call	___flmul	;wreg free
  4308   0029E4  C014  F080         	movff	?___flmul,___sindf@z
  4309   0029E8  C015  F081         	movff	?___flmul+1,___sindf@z+1
  4310   0029EC  C016  F082         	movff	?___flmul+2,___sindf@z+2
  4311   0029F0  C017  F083         	movff	?___flmul+3,___sindf@z+3
  4312   0029F4  C080  F014         	movff	___sindf@z,___flmul@b
  4313   0029F8  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4314   0029FC  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4315   002A00  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4316   002A04  C080  F018         	movff	___sindf@z,___flmul@a
  4317   002A08  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  4318   002A0C  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  4319   002A10  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  4320   002A14  EC6F  F00A         	call	___flmul	;wreg free
  4321   002A18  C014  F06C         	movff	?___flmul,___sindf@w
  4322   002A1C  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  4323   002A20  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  4324   002A24  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  4325   002A28  0E3C               	movlw	60
  4326   002A2A  6E18               	movwf	___flmul@a^0,c
  4327   002A2C  0E6C               	movlw	108
  4328   002A2E  6E19               	movwf	(___flmul@a+1)^0,c
  4329   002A30  0E36               	movlw	54
  4330   002A32  6E1A               	movwf	(___flmul@a+2)^0,c
  4331   002A34  0E36               	movlw	54
  4332   002A36  6E1B               	movwf	(___flmul@a+3)^0,c
  4333   002A38  C080  F014         	movff	___sindf@z,___flmul@b
  4334   002A3C  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4335   002A40  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4336   002A44  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4337   002A48  EC6F  F00A         	call	___flmul	;wreg free
  4338   002A4C  C014  F046         	movff	?___flmul,___fladd@b
  4339   002A50  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4340   002A54  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4341   002A58  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4342   002A5C  0ECF               	movlw	207
  4343   002A5E  6E4A               	movwf	___fladd@a^0,c
  4344   002A60  0E07               	movlw	7
  4345   002A62  6E4B               	movwf	(___fladd@a+1)^0,c
  4346   002A64  0E50               	movlw	80
  4347   002A66  6E4C               	movwf	(___fladd@a+2)^0,c
  4348   002A68  0EB9               	movlw	185
  4349   002A6A  6E4D               	movwf	(___fladd@a+3)^0,c
  4350   002A6C  EC0E  F008         	call	___fladd	;wreg free
  4351   002A70  C046  F068         	movff	?___fladd,___sindf@r
  4352   002A74  C047  F069         	movff	?___fladd+1,___sindf@r+1
  4353   002A78  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  4354   002A7C  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  4355   002A80  C080  F014         	movff	___sindf@z,___flmul@b
  4356   002A84  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4357   002A88  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4358   002A8C  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4359   002A90  C064  F018         	movff	___sindf@x,___flmul@a
  4360   002A94  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4361   002A98  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4362   002A9C  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4363   002AA0  EC6F  F00A         	call	___flmul	;wreg free
  4364   002AA4  C014  F07C         	movff	?___flmul,___sindf@s
  4365   002AA8  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  4366   002AAC  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  4367   002AB0  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  4368   002AB4  0EAB               	movlw	171
  4369   002AB6  6E4A               	movwf	___fladd@a^0,c
  4370   002AB8  0EAA               	movlw	170
  4371   002ABA  6E4B               	movwf	(___fladd@a+1)^0,c
  4372   002ABC  0E2A               	movlw	42
  4373   002ABE  6E4C               	movwf	(___fladd@a+2)^0,c
  4374   002AC0  0EBE               	movlw	190
  4375   002AC2  6E4D               	movwf	(___fladd@a+3)^0,c
  4376   002AC4  0E84               	movlw	132
  4377   002AC6  6E18               	movwf	___flmul@a^0,c
  4378   002AC8  0E88               	movlw	136
  4379   002ACA  6E19               	movwf	(___flmul@a+1)^0,c
  4380   002ACC  0E08               	movlw	8
  4381   002ACE  6E1A               	movwf	(___flmul@a+2)^0,c
  4382   002AD0  0E3C               	movlw	60
  4383   002AD2  6E1B               	movwf	(___flmul@a+3)^0,c
  4384   002AD4  C080  F014         	movff	___sindf@z,___flmul@b
  4385   002AD8  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4386   002ADC  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4387   002AE0  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4388   002AE4  EC6F  F00A         	call	___flmul	;wreg free
  4389   002AE8  C014  F046         	movff	?___flmul,___fladd@b
  4390   002AEC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4391   002AF0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4392   002AF4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4393   002AF8  EC0E  F008         	call	___fladd	;wreg free
  4394   002AFC  C046  F070         	movff	?___fladd,___sindf$4114
  4395   002B00  C047  F071         	movff	?___fladd+1,___sindf$4114+1
  4396   002B04  C048  F072         	movff	?___fladd+2,___sindf$4114+2
  4397   002B08  C049  F073         	movff	?___fladd+3,___sindf$4114+3
  4398   002B0C  C06C  F018         	movff	___sindf@w,___flmul@a
  4399   002B10  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  4400   002B14  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  4401   002B18  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  4402   002B1C  C07C  F014         	movff	___sindf@s,___flmul@b
  4403   002B20  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  4404   002B24  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  4405   002B28  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  4406   002B2C  EC6F  F00A         	call	___flmul	;wreg free
  4407   002B30  C014  F074         	movff	?___flmul,___sindf$4115
  4408   002B34  C015  F075         	movff	?___flmul+1,___sindf$4115+1
  4409   002B38  C016  F076         	movff	?___flmul+2,___sindf$4115+2
  4410   002B3C  C017  F077         	movff	?___flmul+3,___sindf$4115+3
  4411   002B40  C064  F04A         	movff	___sindf@x,___fladd@a
  4412   002B44  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  4413   002B48  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  4414   002B4C  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  4415   002B50  C07C  F018         	movff	___sindf@s,___flmul@a
  4416   002B54  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  4417   002B58  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  4418   002B5C  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  4419   002B60  C070  F014         	movff	___sindf$4114,___flmul@b
  4420   002B64  C071  F015         	movff	___sindf$4114+1,___flmul@b+1
  4421   002B68  C072  F016         	movff	___sindf$4114+2,___flmul@b+2
  4422   002B6C  C073  F017         	movff	___sindf$4114+3,___flmul@b+3
  4423   002B70  EC6F  F00A         	call	___flmul	;wreg free
  4424   002B74  C014  F046         	movff	?___flmul,___fladd@b
  4425   002B78  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4426   002B7C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4427   002B80  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4428   002B84  EC0E  F008         	call	___fladd	;wreg free
  4429   002B88  C046  F078         	movff	?___fladd,___sindf$4116
  4430   002B8C  C047  F079         	movff	?___fladd+1,___sindf$4116+1
  4431   002B90  C048  F07A         	movff	?___fladd+2,___sindf$4116+2
  4432   002B94  C049  F07B         	movff	?___fladd+3,___sindf$4116+3
  4433   002B98  C078  F046         	movff	___sindf$4116,___fladd@b
  4434   002B9C  C079  F047         	movff	___sindf$4116+1,___fladd@b+1
  4435   002BA0  C07A  F048         	movff	___sindf$4116+2,___fladd@b+2
  4436   002BA4  C07B  F049         	movff	___sindf$4116+3,___fladd@b+3
  4437   002BA8  C068  F018         	movff	___sindf@r,___flmul@a
  4438   002BAC  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  4439   002BB0  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  4440   002BB4  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  4441   002BB8  C074  F014         	movff	___sindf$4115,___flmul@b
  4442   002BBC  C075  F015         	movff	___sindf$4115+1,___flmul@b+1
  4443   002BC0  C076  F016         	movff	___sindf$4115+2,___flmul@b+2
  4444   002BC4  C077  F017         	movff	___sindf$4115+3,___flmul@b+3
  4445   002BC8  EC6F  F00A         	call	___flmul	;wreg free
  4446   002BCC  C014  F04A         	movff	?___flmul,___fladd@a
  4447   002BD0  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4448   002BD4  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4449   002BD8  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4450   002BDC  EC0E  F008         	call	___fladd	;wreg free
  4451   002BE0  C046  F064         	movff	?___fladd,?___sindf
  4452   002BE4  C047  F065         	movff	?___fladd+1,?___sindf+1
  4453   002BE8  C048  F066         	movff	?___fladd+2,?___sindf+2
  4454   002BEC  C049  F067         	movff	?___fladd+3,?___sindf+3
  4455   002BF0  0012               	return		;funcret
  4456   002BF2                     __end_of___sindf:
  4457                           	callstack 0
  4458                           
  4459 ;; *************** function ___rem_pio2f *****************
  4460 ;; Defined at:
  4461 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  x               4   36[BANK0 ] float 
  4464 ;;  y               1   40[BANK0 ] PTR 
  4465 ;;		 -> sinf@y(4), 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  n               4   64[BANK0 ] long 
  4468 ;;  t               4   60[BANK0 ] float 
  4469 ;;  fn              4   56[BANK0 ] float 
  4470 ;;  ux              4   52[BANK0 ] struct .
  4471 ;;  ty              4   43[BANK0 ] [1]
  4472 ;;  sign            1   51[BANK0 ] _Bool 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  2   36[BANK0 ] int 
  4475 ;; Registers used:
  4476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4482 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;Total ram usage:       32 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 3
  4489 ;; This function calls:
  4490 ;;		___fladd
  4491 ;;		___flmul
  4492 ;;		___flneg
  4493 ;;		___flsub
  4494 ;;		___fltol
  4495 ;;		___xxtofl
  4496 ;;		_fabsf
  4497 ;; This function is called by:
  4498 ;;		_sinf
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text13
  4503   001D1E                     __ptext13:
  4504                           	callstack 0
  4505   001D1E                     ___rem_pio2f:
  4506                           	callstack 25
  4507   001D1E  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  4508   001D22  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  4509   001D26  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  4510   001D2A  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  4511   001D2E  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  4512   001D32  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  4513   001D36  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  4514   001D3A  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  4515   001D3E  0100               	movlb	0	; () banked
  4516   001D40  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  4517   001D42  EFA5  F00E         	goto	u8561
  4518   001D46  EFA8  F00E         	goto	u8560
  4519   001D4A                     u8561:
  4520   001D4A  0E01               	movlw	1
  4521   001D4C  EFA9  F00E         	goto	u8570
  4522   001D50                     u8560:
  4523   001D50  0E00               	movlw	0
  4524   001D52                     u8570:
  4525   001D52  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  4526   001D54                     
  4527                           ; BSR set to: 0
  4528   001D54  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  4529   001D56                     
  4530                           ; BSR set to: 0
  4531   001D56  0EDB               	movlw	219
  4532   001D58  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  4533   001D5A  0E0F               	movlw	15
  4534   001D5C  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  4535   001D5E  0EC9               	movlw	201
  4536   001D60  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  4537   001D62  0E4D               	movlw	77
  4538   001D64  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  4539   001D66  B0D8               	btfsc	status,0,c
  4540   001D68  EFB8  F00E         	goto	u8581
  4541   001D6C  EFBA  F00E         	goto	u8580
  4542   001D70                     u8581:
  4543   001D70  EFA6  F00F         	goto	l6759
  4544   001D74                     u8580:
  4545   001D74                     
  4546                           ; BSR set to: 0
  4547   001D74  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4548   001D78  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4549   001D7C  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4550   001D80  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4551   001D84  ECBB  F023         	call	_fabsf	;wreg free
  4552   001D88  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4553   001D8C  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4554   001D90  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4555   001D94  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4556   001D98  0E00               	movlw	0
  4557   001D9A  6E4A               	movwf	___fladd@a^0,c
  4558   001D9C  0E00               	movlw	0
  4559   001D9E  6E4B               	movwf	(___fladd@a+1)^0,c
  4560   001DA0  0E00               	movlw	0
  4561   001DA2  6E4C               	movwf	(___fladd@a+2)^0,c
  4562   001DA4  0E3F               	movlw	63
  4563   001DA6  6E4D               	movwf	(___fladd@a+3)^0,c
  4564   001DA8  0E83               	movlw	131
  4565   001DAA  6E18               	movwf	___flmul@a^0,c
  4566   001DAC  0EF9               	movlw	249
  4567   001DAE  6E19               	movwf	(___flmul@a+1)^0,c
  4568   001DB0  0E22               	movlw	34
  4569   001DB2  6E1A               	movwf	(___flmul@a+2)^0,c
  4570   001DB4  0E3F               	movlw	63
  4571   001DB6  6E1B               	movwf	(___flmul@a+3)^0,c
  4572   001DB8  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4573   001DBC  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4574   001DC0  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4575   001DC4  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4576   001DC8  EC6F  F00A         	call	___flmul	;wreg free
  4577   001DCC  C014  F046         	movff	?___flmul,___fladd@b
  4578   001DD0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4579   001DD4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4580   001DD8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4581   001DDC  EC0E  F008         	call	___fladd	;wreg free
  4582   001DE0  C046  F064         	movff	?___fladd,___fltol@f1
  4583   001DE4  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4584   001DE8  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4585   001DEC  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4586   001DF0  EC57  F01D         	call	___fltol	;wreg free
  4587   001DF4  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4588   001DF8  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4589   001DFC  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4590   001E00  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4591   001E04  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4592   001E08  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4593   001E0C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4594   001E10  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4595   001E14  0E01               	movlw	1
  4596   001E16  EC0C  F019         	call	___xxtofl
  4597   001E1A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4598   001E1E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4599   001E22  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4600   001E26  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4601   001E2A  0EDA               	movlw	218
  4602   001E2C  6E18               	movwf	___flmul@a^0,c
  4603   001E2E  0E0F               	movlw	15
  4604   001E30  6E19               	movwf	(___flmul@a+1)^0,c
  4605   001E32  0EC9               	movlw	201
  4606   001E34  6E1A               	movwf	(___flmul@a+2)^0,c
  4607   001E36  0E3F               	movlw	63
  4608   001E38  6E1B               	movwf	(___flmul@a+3)^0,c
  4609   001E3A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4610   001E3E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4611   001E42  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4612   001E46  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4613   001E4A  EC6F  F00A         	call	___flmul	;wreg free
  4614   001E4E  C014  F068         	movff	?___flmul,___flsub@a
  4615   001E52  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4616   001E56  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4617   001E5A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4618   001E5E  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4619   001E62  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4620   001E66  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4621   001E6A  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4622   001E6E  ECDF  F022         	call	___flsub	;wreg free
  4623   001E72  C064  F08F         	movff	?___flsub,___rem_pio2f$4113
  4624   001E76  C065  F090         	movff	?___flsub+1,___rem_pio2f$4113+1
  4625   001E7A  C066  F091         	movff	?___flsub+2,___rem_pio2f$4113+2
  4626   001E7E  C067  F092         	movff	?___flsub+3,___rem_pio2f$4113+3
  4627   001E82  C08F  F064         	movff	___rem_pio2f$4113,___flsub@b
  4628   001E86  C090  F065         	movff	___rem_pio2f$4113+1,___flsub@b+1
  4629   001E8A  C091  F066         	movff	___rem_pio2f$4113+2,___flsub@b+2
  4630   001E8E  C092  F067         	movff	___rem_pio2f$4113+3,___flsub@b+3
  4631   001E92  0EA3               	movlw	163
  4632   001E94  6E18               	movwf	___flmul@a^0,c
  4633   001E96  0E85               	movlw	133
  4634   001E98  6E19               	movwf	(___flmul@a+1)^0,c
  4635   001E9A  0E88               	movlw	136
  4636   001E9C  6E1A               	movwf	(___flmul@a+2)^0,c
  4637   001E9E  0E32               	movlw	50
  4638   001EA0  6E1B               	movwf	(___flmul@a+3)^0,c
  4639   001EA2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4640   001EA6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4641   001EAA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4642   001EAE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4643   001EB2  EC6F  F00A         	call	___flmul	;wreg free
  4644   001EB6  C014  F068         	movff	?___flmul,___flsub@a
  4645   001EBA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4646   001EBE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4647   001EC2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4648   001EC6  ECDF  F022         	call	___flsub	;wreg free
  4649   001ECA  0100               	movlb	0	; () banked
  4650   001ECC  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4651   001ECE  6ED9               	movwf	fsr2l,c
  4652   001ED0  6ADA               	clrf	fsr2h,c
  4653   001ED2  C064  FFDE         	movff	?___flsub,postinc2
  4654   001ED6  C065  FFDE         	movff	?___flsub+1,postinc2
  4655   001EDA  C066  FFDE         	movff	?___flsub+2,postinc2
  4656   001EDE  C067  FFDE         	movff	?___flsub+3,postinc2
  4657   001EE2                     
  4658                           ; BSR set to: 0
  4659   001EE2  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4660   001EE4  B4D8               	btfsc	status,2,c
  4661   001EE6  EF77  F00F         	goto	u8591
  4662   001EEA  EF79  F00F         	goto	u8590
  4663   001EEE                     u8591:
  4664   001EEE  EFA0  F00F         	goto	l1539
  4665   001EF2                     u8590:
  4666   001EF2                     l6753:
  4667                           
  4668                           ; BSR set to: 0
  4669   001EF2  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4670   001EF4  6ED9               	movwf	fsr2l,c
  4671   001EF6  6ADA               	clrf	fsr2h,c
  4672   001EF8  CFDE F080          	movff	postinc2,___flneg@f1
  4673   001EFC  CFDE F081          	movff	postinc2,___flneg@f1+1
  4674   001F00  CFDE F082          	movff	postinc2,___flneg@f1+2
  4675   001F04  CFDE F083          	movff	postinc2,___flneg@f1+3
  4676   001F08  EC67  F023         	call	___flneg	;wreg free
  4677   001F0C  0100               	movlb	0	; () banked
  4678   001F0E  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4679   001F10  6ED9               	movwf	fsr2l,c
  4680   001F12  6ADA               	clrf	fsr2h,c
  4681   001F14  C080  FFDE         	movff	?___flneg,postinc2
  4682   001F18  C081  FFDE         	movff	?___flneg+1,postinc2
  4683   001F1C  C082  FFDE         	movff	?___flneg+2,postinc2
  4684   001F20  C083  FFDE         	movff	?___flneg+3,postinc2
  4685   001F24                     
  4686                           ; BSR set to: 0
  4687   001F24  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  4688   001F28  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  4689   001F2C  1F89               	comf	??___rem_pio2f& (0+255),f,b
  4690   001F2E  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  4691   001F30  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  4692   001F32  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  4693   001F34  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  4694   001F38  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  4695   001F3C  EF6F  F010         	goto	l1540
  4696   001F40                     l1539:
  4697                           
  4698                           ; BSR set to: 0
  4699   001F40  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  4700   001F44  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  4701   001F48  EF6F  F010         	goto	l1540
  4702   001F4C                     l6759:
  4703                           
  4704                           ; BSR set to: 0
  4705   001F4C  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4706   001F50  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4707   001F54  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4708   001F58  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4709   001F5C  ECBB  F023         	call	_fabsf	;wreg free
  4710   001F60  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4711   001F64  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4712   001F68  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4713   001F6C  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4714   001F70  0E00               	movlw	0
  4715   001F72  6E4A               	movwf	___fladd@a^0,c
  4716   001F74  0E00               	movlw	0
  4717   001F76  6E4B               	movwf	(___fladd@a+1)^0,c
  4718   001F78  0E00               	movlw	0
  4719   001F7A  6E4C               	movwf	(___fladd@a+2)^0,c
  4720   001F7C  0E3F               	movlw	63
  4721   001F7E  6E4D               	movwf	(___fladd@a+3)^0,c
  4722   001F80  0E83               	movlw	131
  4723   001F82  6E18               	movwf	___flmul@a^0,c
  4724   001F84  0EF9               	movlw	249
  4725   001F86  6E19               	movwf	(___flmul@a+1)^0,c
  4726   001F88  0E22               	movlw	34
  4727   001F8A  6E1A               	movwf	(___flmul@a+2)^0,c
  4728   001F8C  0E3F               	movlw	63
  4729   001F8E  6E1B               	movwf	(___flmul@a+3)^0,c
  4730   001F90  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4731   001F94  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4732   001F98  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4733   001F9C  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4734   001FA0  EC6F  F00A         	call	___flmul	;wreg free
  4735   001FA4  C014  F046         	movff	?___flmul,___fladd@b
  4736   001FA8  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4737   001FAC  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4738   001FB0  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4739   001FB4  EC0E  F008         	call	___fladd	;wreg free
  4740   001FB8  C046  F064         	movff	?___fladd,___fltol@f1
  4741   001FBC  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4742   001FC0  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4743   001FC4  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4744   001FC8  EC57  F01D         	call	___fltol	;wreg free
  4745   001FCC  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4746   001FD0  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4747   001FD4  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4748   001FD8  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4749   001FDC  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4750   001FE0  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4751   001FE4  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4752   001FE8  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4753   001FEC  0E01               	movlw	1
  4754   001FEE  EC0C  F019         	call	___xxtofl
  4755   001FF2  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4756   001FF6  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4757   001FFA  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4758   001FFE  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4759   002002  0EDA               	movlw	218
  4760   002004  6E18               	movwf	___flmul@a^0,c
  4761   002006  0E0F               	movlw	15
  4762   002008  6E19               	movwf	(___flmul@a+1)^0,c
  4763   00200A  0EC9               	movlw	201
  4764   00200C  6E1A               	movwf	(___flmul@a+2)^0,c
  4765   00200E  0E3F               	movlw	63
  4766   002010  6E1B               	movwf	(___flmul@a+3)^0,c
  4767   002012  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4768   002016  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4769   00201A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4770   00201E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4771   002022  EC6F  F00A         	call	___flmul	;wreg free
  4772   002026  C014  F068         	movff	?___flmul,___flsub@a
  4773   00202A  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4774   00202E  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4775   002032  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4776   002036  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4777   00203A  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4778   00203E  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4779   002042  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4780   002046  ECDF  F022         	call	___flsub	;wreg free
  4781   00204A  C064  F08F         	movff	?___flsub,___rem_pio2f$4113
  4782   00204E  C065  F090         	movff	?___flsub+1,___rem_pio2f$4113+1
  4783   002052  C066  F091         	movff	?___flsub+2,___rem_pio2f$4113+2
  4784   002056  C067  F092         	movff	?___flsub+3,___rem_pio2f$4113+3
  4785   00205A  C08F  F064         	movff	___rem_pio2f$4113,___flsub@b
  4786   00205E  C090  F065         	movff	___rem_pio2f$4113+1,___flsub@b+1
  4787   002062  C091  F066         	movff	___rem_pio2f$4113+2,___flsub@b+2
  4788   002066  C092  F067         	movff	___rem_pio2f$4113+3,___flsub@b+3
  4789   00206A  0EA3               	movlw	163
  4790   00206C  6E18               	movwf	___flmul@a^0,c
  4791   00206E  0E85               	movlw	133
  4792   002070  6E19               	movwf	(___flmul@a+1)^0,c
  4793   002072  0E88               	movlw	136
  4794   002074  6E1A               	movwf	(___flmul@a+2)^0,c
  4795   002076  0E32               	movlw	50
  4796   002078  6E1B               	movwf	(___flmul@a+3)^0,c
  4797   00207A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4798   00207E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4799   002082  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4800   002086  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4801   00208A  EC6F  F00A         	call	___flmul	;wreg free
  4802   00208E  C014  F068         	movff	?___flmul,___flsub@a
  4803   002092  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4804   002096  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4805   00209A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4806   00209E  ECDF  F022         	call	___flsub	;wreg free
  4807   0020A2  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  4808   0020A6  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  4809   0020AA  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  4810   0020AE  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  4811   0020B2  0100               	movlb	0	; () banked
  4812   0020B4  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4813   0020B6  6ED9               	movwf	fsr2l,c
  4814   0020B8  6ADA               	clrf	fsr2h,c
  4815   0020BA  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  4816   0020BE  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  4817   0020C2  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  4818   0020C6  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  4819   0020CA                     
  4820                           ; BSR set to: 0
  4821   0020CA  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4822   0020CC  B4D8               	btfsc	status,2,c
  4823   0020CE  EF6B  F010         	goto	u8601
  4824   0020D2  EF6D  F010         	goto	u8600
  4825   0020D6                     u8601:
  4826   0020D6  EFA0  F00F         	goto	l1539
  4827   0020DA                     u8600:
  4828   0020DA  EF79  F00F         	goto	l6753
  4829   0020DE                     l1540:
  4830                           
  4831                           ; BSR set to: 0
  4832   0020DE  0012               	return		;funcret
  4833   0020E0                     __end_of___rem_pio2f:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _fabsf *****************
  4837 ;; Defined at:
  4838 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  x               4    5[COMRAM] float 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  u               4    9[COMRAM] struct .
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  4    5[COMRAM] float 
  4845 ;; Registers used:
  4846 ;;		status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;Total ram usage:        8 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 1
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		___rem_pio2f
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text14
  4867   004776                     __ptext14:
  4868                           	callstack 0
  4869   004776                     _fabsf:
  4870                           	callstack 26
  4871   004776  C111  F00A         	movff	fabsf@F465,fabsf@u
  4872   00477A  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  4873   00477E  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  4874   004782  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  4875   004786  C006  F00A         	movff	fabsf@x,fabsf@u
  4876   00478A  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  4877   00478E  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  4878   004792  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  4879   004796  9E0D               	bcf	(fabsf@u+3)^0,7,c
  4880   004798  C00A  F006         	movff	fabsf@u,?_fabsf
  4881   00479C  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  4882   0047A0  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  4883   0047A4  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  4884   0047A8  0012               	return		;funcret
  4885   0047AA                     __end_of_fabsf:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function ___cosdf *****************
  4889 ;; Defined at:
  4890 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  x               4    4[BANK0 ] float 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  z               4   28[BANK0 ] float 
  4895 ;;  w               4   24[BANK0 ] float 
  4896 ;;  r               4    8[BANK0 ] float 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  4    4[BANK0 ] float 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;Total ram usage:       28 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 2
  4913 ;; This function calls:
  4914 ;;		___fladd
  4915 ;;		___flmul
  4916 ;; This function is called by:
  4917 ;;		_sinf
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text15
  4922   00301A                     __ptext15:
  4923                           	callstack 0
  4924   00301A                     ___cosdf:
  4925                           	callstack 26
  4926   00301A  C064  F014         	movff	___cosdf@x,___flmul@b
  4927   00301E  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  4928   003022  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  4929   003026  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  4930   00302A  C064  F018         	movff	___cosdf@x,___flmul@a
  4931   00302E  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  4932   003032  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  4933   003036  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  4934   00303A  EC6F  F00A         	call	___flmul	;wreg free
  4935   00303E  C014  F07C         	movff	?___flmul,___cosdf@z
  4936   003042  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  4937   003046  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  4938   00304A  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  4939   00304E  C07C  F014         	movff	___cosdf@z,___flmul@b
  4940   003052  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  4941   003056  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  4942   00305A  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  4943   00305E  C07C  F018         	movff	___cosdf@z,___flmul@a
  4944   003062  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  4945   003066  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  4946   00306A  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  4947   00306E  EC6F  F00A         	call	___flmul	;wreg free
  4948   003072  C014  F078         	movff	?___flmul,___cosdf@w
  4949   003076  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  4950   00307A  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  4951   00307E  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  4952   003082  0E17               	movlw	23
  4953   003084  6E18               	movwf	___flmul@a^0,c
  4954   003086  0E9A               	movlw	154
  4955   003088  6E19               	movwf	(___flmul@a+1)^0,c
  4956   00308A  0ECC               	movlw	204
  4957   00308C  6E1A               	movwf	(___flmul@a+2)^0,c
  4958   00308E  0E37               	movlw	55
  4959   003090  6E1B               	movwf	(___flmul@a+3)^0,c
  4960   003092  C07C  F014         	movff	___cosdf@z,___flmul@b
  4961   003096  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  4962   00309A  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  4963   00309E  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  4964   0030A2  EC6F  F00A         	call	___flmul	;wreg free
  4965   0030A6  C014  F046         	movff	?___flmul,___fladd@b
  4966   0030AA  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4967   0030AE  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4968   0030B2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4969   0030B6  0E3F               	movlw	63
  4970   0030B8  6E4A               	movwf	___fladd@a^0,c
  4971   0030BA  0E04               	movlw	4
  4972   0030BC  6E4B               	movwf	(___fladd@a+1)^0,c
  4973   0030BE  0EB6               	movlw	182
  4974   0030C0  6E4C               	movwf	(___fladd@a+2)^0,c
  4975   0030C2  0EBA               	movlw	186
  4976   0030C4  6E4D               	movwf	(___fladd@a+3)^0,c
  4977   0030C6  EC0E  F008         	call	___fladd	;wreg free
  4978   0030CA  C046  F068         	movff	?___fladd,___cosdf@r
  4979   0030CE  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  4980   0030D2  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  4981   0030D6  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  4982   0030DA  0E00               	movlw	0
  4983   0030DC  6E4A               	movwf	___fladd@a^0,c
  4984   0030DE  0E00               	movlw	0
  4985   0030E0  6E4B               	movwf	(___fladd@a+1)^0,c
  4986   0030E2  0E80               	movlw	128
  4987   0030E4  6E4C               	movwf	(___fladd@a+2)^0,c
  4988   0030E6  0E3F               	movlw	63
  4989   0030E8  6E4D               	movwf	(___fladd@a+3)^0,c
  4990   0030EA  0E00               	movlw	0
  4991   0030EC  6E18               	movwf	___flmul@a^0,c
  4992   0030EE  0E00               	movlw	0
  4993   0030F0  6E19               	movwf	(___flmul@a+1)^0,c
  4994   0030F2  0E00               	movlw	0
  4995   0030F4  6E1A               	movwf	(___flmul@a+2)^0,c
  4996   0030F6  0EBF               	movlw	191
  4997   0030F8  6E1B               	movwf	(___flmul@a+3)^0,c
  4998   0030FA  C07C  F014         	movff	___cosdf@z,___flmul@b
  4999   0030FE  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5000   003102  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5001   003106  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5002   00310A  EC6F  F00A         	call	___flmul	;wreg free
  5003   00310E  C014  F046         	movff	?___flmul,___fladd@b
  5004   003112  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5005   003116  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5006   00311A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5007   00311E  EC0E  F008         	call	___fladd	;wreg free
  5008   003122  C046  F06C         	movff	?___fladd,___cosdf$4110
  5009   003126  C047  F06D         	movff	?___fladd+1,___cosdf$4110+1
  5010   00312A  C048  F06E         	movff	?___fladd+2,___cosdf$4110+2
  5011   00312E  C049  F06F         	movff	?___fladd+3,___cosdf$4110+3
  5012   003132  C07C  F018         	movff	___cosdf@z,___flmul@a
  5013   003136  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5014   00313A  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5015   00313E  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5016   003142  C078  F014         	movff	___cosdf@w,___flmul@b
  5017   003146  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5018   00314A  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5019   00314E  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5020   003152  EC6F  F00A         	call	___flmul	;wreg free
  5021   003156  C014  F070         	movff	?___flmul,___cosdf$4111
  5022   00315A  C015  F071         	movff	?___flmul+1,___cosdf$4111+1
  5023   00315E  C016  F072         	movff	?___flmul+2,___cosdf$4111+2
  5024   003162  C017  F073         	movff	?___flmul+3,___cosdf$4111+3
  5025   003166  0E9F               	movlw	159
  5026   003168  6E18               	movwf	___flmul@a^0,c
  5027   00316A  0EAA               	movlw	170
  5028   00316C  6E19               	movwf	(___flmul@a+1)^0,c
  5029   00316E  0E2A               	movlw	42
  5030   003170  6E1A               	movwf	(___flmul@a+2)^0,c
  5031   003172  0E3D               	movlw	61
  5032   003174  6E1B               	movwf	(___flmul@a+3)^0,c
  5033   003176  C078  F014         	movff	___cosdf@w,___flmul@b
  5034   00317A  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5035   00317E  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5036   003182  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5037   003186  EC6F  F00A         	call	___flmul	;wreg free
  5038   00318A  C014  F04A         	movff	?___flmul,___fladd@a
  5039   00318E  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5040   003192  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5041   003196  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5042   00319A  C06C  F046         	movff	___cosdf$4110,___fladd@b
  5043   00319E  C06D  F047         	movff	___cosdf$4110+1,___fladd@b+1
  5044   0031A2  C06E  F048         	movff	___cosdf$4110+2,___fladd@b+2
  5045   0031A6  C06F  F049         	movff	___cosdf$4110+3,___fladd@b+3
  5046   0031AA  EC0E  F008         	call	___fladd	;wreg free
  5047   0031AE  C046  F074         	movff	?___fladd,___cosdf$4112
  5048   0031B2  C047  F075         	movff	?___fladd+1,___cosdf$4112+1
  5049   0031B6  C048  F076         	movff	?___fladd+2,___cosdf$4112+2
  5050   0031BA  C049  F077         	movff	?___fladd+3,___cosdf$4112+3
  5051   0031BE  C074  F046         	movff	___cosdf$4112,___fladd@b
  5052   0031C2  C075  F047         	movff	___cosdf$4112+1,___fladd@b+1
  5053   0031C6  C076  F048         	movff	___cosdf$4112+2,___fladd@b+2
  5054   0031CA  C077  F049         	movff	___cosdf$4112+3,___fladd@b+3
  5055   0031CE  C068  F018         	movff	___cosdf@r,___flmul@a
  5056   0031D2  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  5057   0031D6  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  5058   0031DA  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  5059   0031DE  C070  F014         	movff	___cosdf$4111,___flmul@b
  5060   0031E2  C071  F015         	movff	___cosdf$4111+1,___flmul@b+1
  5061   0031E6  C072  F016         	movff	___cosdf$4111+2,___flmul@b+2
  5062   0031EA  C073  F017         	movff	___cosdf$4111+3,___flmul@b+3
  5063   0031EE  EC6F  F00A         	call	___flmul	;wreg free
  5064   0031F2  C014  F04A         	movff	?___flmul,___fladd@a
  5065   0031F6  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5066   0031FA  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5067   0031FE  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5068   003202  EC0E  F008         	call	___fladd	;wreg free
  5069   003206  C046  F064         	movff	?___fladd,?___cosdf
  5070   00320A  C047  F065         	movff	?___fladd+1,?___cosdf+1
  5071   00320E  C048  F066         	movff	?___fladd+2,?___cosdf+2
  5072   003212  C049  F067         	movff	?___fladd+3,?___cosdf+3
  5073   003216  0012               	return		;funcret
  5074   003218                     __end_of___cosdf:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function _printf *****************
  5078 ;; Defined at:
  5079 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  5082 ;;		 -> STR_22(17), STR_10(5), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  ret             2    0        int 
  5085 ;;  ap              1   83[COMRAM] PTR void [1]
  5086 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2  110[BANK0 ] int 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;Total ram usage:        5 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 8
  5103 ;; This function calls:
  5104 ;;		_vfprintf
  5105 ;; This function is called by:
  5106 ;;		_runDAC
  5107 ;;		_runUART
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text16
  5112   004852                     __ptext16:
  5113                           	callstack 0
  5114   004852                     _printf:
  5115                           	callstack 21
  5116   004852  0ED0               	movlw	low (?_printf+2)
  5117   004854  6E54               	movwf	printf@ap^0,c
  5118   004856  0E00               	movlw	0
  5119   004858  0100               	movlb	0	; () banked
  5120   00485A  6FC7               	movwf	vfprintf@fp& (0+255),b
  5121   00485C  0E00               	movlw	0
  5122   00485E  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5123   004860  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  5124   004864  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  5125   004868  0E54               	movlw	low printf@ap
  5126   00486A  6FCB               	movwf	vfprintf@ap& (0+255),b
  5127   00486C  ECBA  F022         	call	_vfprintf	;wreg free
  5128   004870  0012               	return		;funcret
  5129   004872                     __end_of_printf:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _SPI_write *****************
  5133 ;; Defined at:
  5134 ;;		line 93 in file "DAC.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  data            1    wreg     unsigned char 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  data            1    7[COMRAM] unsigned char 
  5139 ;;  LSB             1    6[COMRAM] unsigned char 
  5140 ;;  MSB             1    5[COMRAM] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;Total ram usage:        3 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 1
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_runDAC
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text17
  5165   004690                     __ptext17:
  5166                           	callstack 0
  5167   004690                     _SPI_write:
  5168                           	callstack 28
  5169                           
  5170                           ;incstack = 0
  5171                           ;SPI_write@data stored from wreg
  5172   004690  6E08               	movwf	SPI_write@data^0,c
  5173   004692                     
  5174                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5175   004692  3808               	swapf	SPI_write@data^0,w,c
  5176   004694  0B0F               	andlw	15
  5177   004696  0930               	iorlw	48
  5178   004698  6E06               	movwf	SPI_write@MSB^0,c
  5179                           
  5180                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5181   00469A  3808               	swapf	SPI_write@data^0,w,c
  5182   00469C  0BF0               	andlw	240
  5183   00469E  6E07               	movwf	SPI_write@LSB^0,c
  5184   0046A0                     
  5185                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5186   0046A0  968A               	bcf	138,3,c	;volatile
  5187   0046A2                     
  5188                           ;DAC.c: 101:     SSP1BUF = MSB;
  5189   0046A2  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5190   0046A6                     l229:
  5191   0046A6  A69E               	btfss	3998,3,c	;volatile
  5192   0046A8  EF58  F023         	goto	u8691
  5193   0046AC  EF5A  F023         	goto	u8690
  5194   0046B0                     u8691:
  5195   0046B0  EF53  F023         	goto	l229
  5196   0046B4                     u8690:
  5197   0046B4                     
  5198                           ;DAC.c: 103:     SSP1IF = 0;
  5199   0046B4  969E               	bcf	3998,3,c	;volatile
  5200                           
  5201                           ;DAC.c: 105:     SSP1BUF = LSB;
  5202   0046B6  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5203   0046BA                     l232:
  5204   0046BA  A69E               	btfss	3998,3,c	;volatile
  5205   0046BC  EF62  F023         	goto	u8701
  5206   0046C0  EF64  F023         	goto	u8700
  5207   0046C4                     u8701:
  5208   0046C4  EF5D  F023         	goto	l232
  5209   0046C8                     u8700:
  5210   0046C8                     
  5211                           ;DAC.c: 107:     SSP1IF = 0;
  5212   0046C8  969E               	bcf	3998,3,c	;volatile
  5213                           
  5214                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5215   0046CA  868A               	bsf	138,3,c	;volatile
  5216   0046CC  0012               	return		;funcret
  5217   0046CE                     __end_of_SPI_write:
  5218                           	callstack 0
  5219                           
  5220 ;; *************** function _runADC *****************
  5221 ;; Defined at:
  5222 ;;		line 13 in file "ADC.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  text           17    0[BANK1 ] unsigned char [17]
  5227 ;;  voltage2        4   21[BANK1 ] float 
  5228 ;;  voltage1        4   17[BANK1 ] float 
  5229 ;;  pot2            2   27[BANK1 ] unsigned short 
  5230 ;;  pot1            2   25[BANK1 ] unsigned short 
  5231 ;;  keepState       1   29[BANK1 ] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;Total ram usage:       32 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 9
  5248 ;; This function calls:
  5249 ;;		_LCD_ShowString
  5250 ;;		___fldiv
  5251 ;;		___flmul
  5252 ;;		___xxtofl
  5253 ;;		_sprintf
  5254 ;; This function is called by:
  5255 ;;		_main
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text18
  5260   002E08                     __ptext18:
  5261                           	callstack 0
  5262   002E08                     _runADC:
  5263                           	callstack 21
  5264   002E08                     
  5265                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  5266   002E08  010F               	movlb	15	; () banked
  5267   002E0A  8B38               	bsf	56,5,b	;volatile
  5268                           
  5269                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  5270   002E0C  813C               	bsf	60,0,b	;volatile
  5271                           
  5272                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  5273   002E0E  8EC0               	bsf	192,7,c	;volatile
  5274   002E10                     
  5275                           ; BSR set to: 15
  5276                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  5277   002E10  50C0               	movf	192,w,c	;volatile
  5278   002E12  0BF8               	andlw	-8
  5279   002E14  0906               	iorlw	6
  5280   002E16  6EC0               	movwf	192,c	;volatile
  5281                           
  5282                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  5283   002E18  50C0               	movf	192,w,c	;volatile
  5284   002E1A  0BC7               	andlw	-57
  5285   002E1C  0930               	iorlw	48
  5286   002E1E  6EC0               	movwf	192,c	;volatile
  5287   002E20                     
  5288                           ; BSR set to: 15
  5289                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  5290   002E20  80C2               	bsf	194,0,c	;volatile
  5291   002E22                     
  5292                           ; BSR set to: 15
  5293                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  5294   002E22  EE21  F062         	lfsr	2,runADC@text
  5295   002E26  0E10               	movlw	16
  5296   002E28                     u9201:
  5297   002E28  6ADE               	clrf	postinc2,c
  5298   002E2A  06E8               	decf	wreg,f,c
  5299   002E2C  E2FD               	bc	u9201
  5300   002E2E                     
  5301                           ; BSR set to: 15
  5302                           ;ADC.c: 28: uint8_t keepState = 1;
  5303   002E2E  0E01               	movlw	1
  5304   002E30  0101               	movlb	1	; () banked
  5305   002E32  6F7F               	movwf	runADC@keepState& (0+255),b
  5306                           
  5307                           ;ADC.c: 30: while(keepState){
  5308   002E34  EF02  F018         	goto	l425
  5309   002E38                     l7143:
  5310                           
  5311                           ; BSR set to: 1
  5312                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  5313   002E38  50C2               	movf	194,w,c	;volatile
  5314   002E3A  0B83               	andlw	-125
  5315   002E3C  0914               	iorlw	20
  5316   002E3E  6EC2               	movwf	194,c	;volatile
  5317   002E40                     
  5318                           ; BSR set to: 1
  5319                           ;ADC.c: 33:     GODONE = 1;
  5320   002E40  82C2               	bsf	4034,1,c	;volatile
  5321   002E42                     l427:
  5322   002E42  B2C2               	btfsc	4034,1,c	;volatile
  5323   002E44  EF26  F017         	goto	u9211
  5324   002E48  EF28  F017         	goto	u9210
  5325   002E4C                     u9211:
  5326   002E4C  EF21  F017         	goto	l427
  5327   002E50                     u9210:
  5328   002E50                     
  5329                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  5330   002E50  50C3               	movf	195,w,c	;volatile
  5331   002E52  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5332   002E56  0100               	movlb	0	; () banked
  5333   002E58  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5334   002E5A  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5335   002E5E  6BE7               	clrf	??_runADC& (0+255),b
  5336   002E60  11E7               	iorwf	??_runADC& (0+255),w,b
  5337   002E62  0101               	movlb	1	; () banked
  5338   002E64  6F7B               	movwf	runADC@pot1& (0+255),b
  5339   002E66  0100               	movlb	0	; () banked
  5340   002E68  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5341   002E6A  0101               	movlb	1	; () banked
  5342   002E6C  6F7C               	movwf	(runADC@pot1+1)& (0+255),b
  5343   002E6E                     
  5344                           ; BSR set to: 1
  5345                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  5346   002E6E  0E00               	movlw	0
  5347   002E70  6E31               	movwf	___fldiv@a^0,c
  5348   002E72  0EC0               	movlw	192
  5349   002E74  6E32               	movwf	(___fldiv@a+1)^0,c
  5350   002E76  0E7F               	movlw	127
  5351   002E78  6E33               	movwf	(___fldiv@a+2)^0,c
  5352   002E7A  0E44               	movlw	68
  5353   002E7C  6E34               	movwf	(___fldiv@a+3)^0,c
  5354   002E7E  C17B  F006         	movff	runADC@pot1,___xxtofl@val
  5355   002E82  C17C  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  5356   002E86  6A08               	clrf	(___xxtofl@val+2)^0,c
  5357   002E88  6A09               	clrf	(___xxtofl@val+3)^0,c
  5358   002E8A  0E00               	movlw	0
  5359   002E8C  EC0C  F019         	call	___xxtofl
  5360   002E90  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5361   002E94  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5362   002E98  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5363   002E9C  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5364   002EA0  EC70  F010         	call	___fldiv	;wreg free
  5365   002EA4  C02D  F014         	movff	?___fldiv,___flmul@b
  5366   002EA8  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5367   002EAC  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5368   002EB0  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5369   002EB4  0E33               	movlw	51
  5370   002EB6  6E18               	movwf	___flmul@a^0,c
  5371   002EB8  0E33               	movlw	51
  5372   002EBA  6E19               	movwf	(___flmul@a+1)^0,c
  5373   002EBC  0E53               	movlw	83
  5374   002EBE  6E1A               	movwf	(___flmul@a+2)^0,c
  5375   002EC0  0E40               	movlw	64
  5376   002EC2  6E1B               	movwf	(___flmul@a+3)^0,c
  5377   002EC4  EC6F  F00A         	call	___flmul	;wreg free
  5378   002EC8  C014  F173         	movff	?___flmul,runADC@voltage1
  5379   002ECC  C015  F174         	movff	?___flmul+1,runADC@voltage1+1
  5380   002ED0  C016  F175         	movff	?___flmul+2,runADC@voltage1+2
  5381   002ED4  C017  F176         	movff	?___flmul+3,runADC@voltage1+3
  5382   002ED8                     
  5383                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  5384   002ED8  50C2               	movf	194,w,c	;volatile
  5385   002EDA  0B83               	andlw	-125
  5386   002EDC  0910               	iorlw	16
  5387   002EDE  6EC2               	movwf	194,c	;volatile
  5388   002EE0                     
  5389                           ;ADC.c: 40:     GODONE = 1;
  5390   002EE0  82C2               	bsf	4034,1,c	;volatile
  5391   002EE2                     l430:
  5392   002EE2  B2C2               	btfsc	4034,1,c	;volatile
  5393   002EE4  EF76  F017         	goto	u9221
  5394   002EE8  EF78  F017         	goto	u9220
  5395   002EEC                     u9221:
  5396   002EEC  EF71  F017         	goto	l430
  5397   002EF0                     u9220:
  5398   002EF0                     
  5399                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  5400   002EF0  50C3               	movf	195,w,c	;volatile
  5401   002EF2  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5402   002EF6  0100               	movlb	0	; () banked
  5403   002EF8  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5404   002EFA  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5405   002EFE  6BE7               	clrf	??_runADC& (0+255),b
  5406   002F00  11E7               	iorwf	??_runADC& (0+255),w,b
  5407   002F02  0101               	movlb	1	; () banked
  5408   002F04  6F7D               	movwf	runADC@pot2& (0+255),b
  5409   002F06  0100               	movlb	0	; () banked
  5410   002F08  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5411   002F0A  0101               	movlb	1	; () banked
  5412   002F0C  6F7E               	movwf	(runADC@pot2+1)& (0+255),b
  5413   002F0E                     
  5414                           ; BSR set to: 1
  5415                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  5416   002F0E  0E00               	movlw	0
  5417   002F10  6E31               	movwf	___fldiv@a^0,c
  5418   002F12  0EC0               	movlw	192
  5419   002F14  6E32               	movwf	(___fldiv@a+1)^0,c
  5420   002F16  0E7F               	movlw	127
  5421   002F18  6E33               	movwf	(___fldiv@a+2)^0,c
  5422   002F1A  0E44               	movlw	68
  5423   002F1C  6E34               	movwf	(___fldiv@a+3)^0,c
  5424   002F1E  C17D  F006         	movff	runADC@pot2,___xxtofl@val
  5425   002F22  C17E  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  5426   002F26  6A08               	clrf	(___xxtofl@val+2)^0,c
  5427   002F28  6A09               	clrf	(___xxtofl@val+3)^0,c
  5428   002F2A  0E00               	movlw	0
  5429   002F2C  EC0C  F019         	call	___xxtofl
  5430   002F30  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5431   002F34  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5432   002F38  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5433   002F3C  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5434   002F40  EC70  F010         	call	___fldiv	;wreg free
  5435   002F44  C02D  F014         	movff	?___fldiv,___flmul@b
  5436   002F48  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5437   002F4C  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5438   002F50  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5439   002F54  0E33               	movlw	51
  5440   002F56  6E18               	movwf	___flmul@a^0,c
  5441   002F58  0E33               	movlw	51
  5442   002F5A  6E19               	movwf	(___flmul@a+1)^0,c
  5443   002F5C  0E53               	movlw	83
  5444   002F5E  6E1A               	movwf	(___flmul@a+2)^0,c
  5445   002F60  0E40               	movlw	64
  5446   002F62  6E1B               	movwf	(___flmul@a+3)^0,c
  5447   002F64  EC6F  F00A         	call	___flmul	;wreg free
  5448   002F68  C014  F177         	movff	?___flmul,runADC@voltage2
  5449   002F6C  C015  F178         	movff	?___flmul+1,runADC@voltage2+1
  5450   002F70  C016  F179         	movff	?___flmul+2,runADC@voltage2+2
  5451   002F74  C017  F17A         	movff	?___flmul+3,runADC@voltage2+3
  5452   002F78                     
  5453                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  5454   002F78  0E62               	movlw	low runADC@text
  5455   002F7A  0100               	movlb	0	; () banked
  5456   002F7C  6FCE               	movwf	sprintf@s& (0+255),b
  5457   002F7E  0E01               	movlw	high runADC@text
  5458   002F80  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5459   002F82  0E17               	movlw	low STR_21
  5460   002F84  6FD0               	movwf	sprintf@fmt& (0+255),b
  5461   002F86  0EFF               	movlw	high STR_21
  5462   002F88  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5463   002F8A  C173  F0D2         	movff	runADC@voltage1,?_sprintf+4
  5464   002F8E  C174  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  5465   002F92  C175  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  5466   002F96  C176  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  5467   002F9A  C177  F0D6         	movff	runADC@voltage2,?_sprintf+8
  5468   002F9E  C178  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  5469   002FA2  C179  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  5470   002FA6  C17A  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  5471   002FAA  EC03  F023         	call	_sprintf	;wreg free
  5472   002FAE                     
  5473                           ;ADC.c: 46:     LCD_ShowString(2, text);
  5474   002FAE  0E62               	movlw	low runADC@text
  5475   002FB0  6E07               	movwf	LCD_ShowString@textData^0,c
  5476   002FB2  0E01               	movlw	high runADC@text
  5477   002FB4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5478   002FB6  0E02               	movlw	2
  5479   002FB8  EC91  F020         	call	_LCD_ShowString
  5480   002FBC                     
  5481                           ;ADC.c: 48:     if(PORTAbits.RA2){
  5482   002FBC  A480               	btfss	128,2,c	;volatile
  5483   002FBE  EFE3  F017         	goto	u9231
  5484   002FC2  EFE5  F017         	goto	u9230
  5485   002FC6                     u9231:
  5486   002FC6  EF02  F018         	goto	l425
  5487   002FCA                     u9230:
  5488   002FCA                     
  5489                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  5490   002FCA  0E03               	movlw	3
  5491   002FCC  0100               	movlb	0	; () banked
  5492   002FCE  6FE8               	movwf	(??_runADC+1)& (0+255),b
  5493   002FD0  0E08               	movlw	8
  5494   002FD2  6FE7               	movwf	??_runADC& (0+255),b
  5495   002FD4  0E77               	movlw	119
  5496   002FD6                     u9547:
  5497   002FD6  2EE8               	decfsz	wreg,f,c
  5498   002FD8  D7FE               	bra	u9547
  5499   002FDA  2FE7               	decfsz	??_runADC& (0+255),f,b
  5500   002FDC  D7FC               	bra	u9547
  5501   002FDE  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  5502   002FE0  D7FA               	bra	u9547
  5503   002FE2                     
  5504                           ;ADC.c: 50:         if(PORTAbits.RA2){
  5505   002FE2  A480               	btfss	128,2,c	;volatile
  5506   002FE4  EFF6  F017         	goto	u9241
  5507   002FE8  EFF8  F017         	goto	u9240
  5508   002FEC                     u9241:
  5509   002FEC  EF02  F018         	goto	l425
  5510   002FF0                     u9240:
  5511   002FF0                     l435:
  5512   002FF0  B480               	btfsc	128,2,c	;volatile
  5513   002FF2  EFFD  F017         	goto	u9251
  5514   002FF6  EFFF  F017         	goto	u9250
  5515   002FFA                     u9251:
  5516   002FFA  EFF8  F017         	goto	l435
  5517   002FFE                     u9250:
  5518   002FFE                     
  5519                           ;ADC.c: 52:             keepState = 0;
  5520   002FFE  0E00               	movlw	0
  5521   003000  0101               	movlb	1	; () banked
  5522   003002  6F7F               	movwf	runADC@keepState& (0+255),b
  5523   003004                     l425:
  5524                           
  5525                           ;ADC.c: 30: while(keepState){
  5526   003004  0101               	movlb	1	; () banked
  5527   003006  517F               	movf	runADC@keepState& (0+255),w,b
  5528   003008  A4D8               	btfss	status,2,c
  5529   00300A  EF09  F018         	goto	u9261
  5530   00300E  EF0B  F018         	goto	u9260
  5531   003012                     u9261:
  5532   003012  EF1C  F017         	goto	l7143
  5533   003016                     u9260:
  5534   003016                     
  5535                           ; BSR set to: 1
  5536                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  5537   003016  90C2               	bcf	194,0,c	;volatile
  5538   003018                     
  5539                           ; BSR set to: 1
  5540   003018  0012               	return		;funcret
  5541   00301A                     __end_of_runADC:
  5542                           	callstack 0
  5543                           
  5544 ;; *************** function ___xxtofl *****************
  5545 ;; Defined at:
  5546 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  sign            1    wreg     unsigned char 
  5549 ;;  val             4    5[COMRAM] long 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  sign            1   13[COMRAM] unsigned char 
  5552 ;;  arg             4   15[COMRAM] unsigned long 
  5553 ;;  exp             1   14[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  4    5[COMRAM] unsigned char 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:       14 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; Hardware stack levels required when called: 1
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_runDAC
  5574 ;;		_runADC
  5575 ;;		___rem_pio2f
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text19
  5580   003218                     __ptext19:
  5581                           	callstack 0
  5582   003218                     ___xxtofl:
  5583                           	callstack 26
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;incstack = 0
  5587                           ;___xxtofl@sign stored from wreg
  5588   003218  6E0E               	movwf	___xxtofl@sign^0,c
  5589   00321A  500E               	movf	___xxtofl@sign^0,w,c
  5590   00321C  B4D8               	btfsc	status,2,c
  5591   00321E  EF13  F019         	goto	u8311
  5592   003222  EF15  F019         	goto	u8310
  5593   003226                     u8311:
  5594   003226  EF37  F019         	goto	l1201
  5595   00322A                     u8310:
  5596   00322A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5597   00322C  EF1C  F019         	goto	u8320
  5598   003230  EF1A  F019         	goto	u8321
  5599   003234                     u8321:
  5600   003234  EF37  F019         	goto	l1201
  5601   003238                     u8320:
  5602   003238  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5603   00323C  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5604   003240  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5605   003244  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5606   003248  1E0A               	comf	??___xxtofl^0,f,c
  5607   00324A  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5608   00324C  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5609   00324E  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5610   003250  2A0A               	incf	??___xxtofl^0,f,c
  5611   003252  0E00               	movlw	0
  5612   003254  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5613   003256  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5614   003258  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5615   00325A  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5616   00325E  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5617   003262  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5618   003266  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5619   00326A  EF3F  F019         	goto	l6549
  5620   00326E                     l1201:
  5621   00326E  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5622   003272  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5623   003276  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5624   00327A  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5625   00327E                     l6549:
  5626   00327E  5006               	movf	___xxtofl@val^0,w,c
  5627   003280  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5628   003282  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5629   003284  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5630   003286  A4D8               	btfss	status,2,c
  5631   003288  EF48  F019         	goto	u8331
  5632   00328C  EF4A  F019         	goto	u8330
  5633   003290                     u8331:
  5634   003290  EF54  F019         	goto	l6555
  5635   003294                     u8330:
  5636   003294  0E00               	movlw	0
  5637   003296  6E06               	movwf	?___xxtofl^0,c
  5638   003298  0E00               	movlw	0
  5639   00329A  6E07               	movwf	(?___xxtofl+1)^0,c
  5640   00329C  0E00               	movlw	0
  5641   00329E  6E08               	movwf	(?___xxtofl+2)^0,c
  5642   0032A0  0E00               	movlw	0
  5643   0032A2  6E09               	movwf	(?___xxtofl+3)^0,c
  5644   0032A4  EFE5  F019         	goto	l1204
  5645   0032A8                     l6555:
  5646   0032A8  0E96               	movlw	150
  5647   0032AA  6E0F               	movwf	___xxtofl@exp^0,c
  5648   0032AC  EF5E  F019         	goto	l6559
  5649   0032B0                     l6557:
  5650   0032B0  2A0F               	incf	___xxtofl@exp^0,f,c
  5651   0032B2  90D8               	bcf	status,0,c
  5652   0032B4  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5653   0032B6  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5654   0032B8  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5655   0032BA  3210               	rrcf	___xxtofl@arg^0,f,c
  5656   0032BC                     l6559:
  5657   0032BC  0E00               	movlw	0
  5658   0032BE  1410               	andwf	___xxtofl@arg^0,w,c
  5659   0032C0  6E0A               	movwf	??___xxtofl^0,c
  5660   0032C2  0E00               	movlw	0
  5661   0032C4  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5662   0032C6  6E0B               	movwf	(??___xxtofl+1)^0,c
  5663   0032C8  0E00               	movlw	0
  5664   0032CA  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5665   0032CC  6E0C               	movwf	(??___xxtofl+2)^0,c
  5666   0032CE  0EFE               	movlw	254
  5667   0032D0  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5668   0032D2  6E0D               	movwf	(??___xxtofl+3)^0,c
  5669   0032D4  500A               	movf	??___xxtofl^0,w,c
  5670   0032D6  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5671   0032D8  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5672   0032DA  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5673   0032DC  A4D8               	btfss	status,2,c
  5674   0032DE  EF73  F019         	goto	u8341
  5675   0032E2  EF75  F019         	goto	u8340
  5676   0032E6                     u8341:
  5677   0032E6  EF58  F019         	goto	l6557
  5678   0032EA                     u8340:
  5679   0032EA  EF83  F019         	goto	l1208
  5680   0032EE                     l6561:
  5681   0032EE  2A0F               	incf	___xxtofl@exp^0,f,c
  5682   0032F0  0E01               	movlw	1
  5683   0032F2  2610               	addwf	___xxtofl@arg^0,f,c
  5684   0032F4  0E00               	movlw	0
  5685   0032F6  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5686   0032F8  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5687   0032FA  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5688   0032FC  90D8               	bcf	status,0,c
  5689   0032FE  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5690   003300  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5691   003302  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5692   003304  3210               	rrcf	___xxtofl@arg^0,f,c
  5693   003306                     l1208:
  5694   003306  0E00               	movlw	0
  5695   003308  1410               	andwf	___xxtofl@arg^0,w,c
  5696   00330A  6E0A               	movwf	??___xxtofl^0,c
  5697   00330C  0E00               	movlw	0
  5698   00330E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5699   003310  6E0B               	movwf	(??___xxtofl+1)^0,c
  5700   003312  0E00               	movlw	0
  5701   003314  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5702   003316  6E0C               	movwf	(??___xxtofl+2)^0,c
  5703   003318  0EFF               	movlw	255
  5704   00331A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5705   00331C  6E0D               	movwf	(??___xxtofl+3)^0,c
  5706   00331E  500A               	movf	??___xxtofl^0,w,c
  5707   003320  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5708   003322  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5709   003324  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5710   003326  A4D8               	btfss	status,2,c
  5711   003328  EF98  F019         	goto	u8351
  5712   00332C  EF9A  F019         	goto	u8350
  5713   003330                     u8351:
  5714   003330  EF77  F019         	goto	l6561
  5715   003334                     u8350:
  5716   003334  EFA2  F019         	goto	l6569
  5717   003338                     l6567:
  5718   003338  060F               	decf	___xxtofl@exp^0,f,c
  5719   00333A  90D8               	bcf	status,0,c
  5720   00333C  3610               	rlcf	___xxtofl@arg^0,f,c
  5721   00333E  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5722   003340  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5723   003342  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5724   003344                     l6569:
  5725   003344  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5726   003346  EFA7  F019         	goto	u8361
  5727   00334A  EFA9  F019         	goto	u8360
  5728   00334E                     u8361:
  5729   00334E  EFB1  F019         	goto	l1215
  5730   003352                     u8360:
  5731   003352  0E02               	movlw	2
  5732   003354  600F               	cpfslt	___xxtofl@exp^0,c
  5733   003356  EFAF  F019         	goto	u8371
  5734   00335A  EFB1  F019         	goto	u8370
  5735   00335E                     u8371:
  5736   00335E  EF9C  F019         	goto	l6567
  5737   003362                     u8370:
  5738   003362                     l1215:
  5739   003362  B00F               	btfsc	___xxtofl@exp^0,0,c
  5740   003364  EFB6  F019         	goto	u8381
  5741   003368  EFB8  F019         	goto	u8380
  5742   00336C                     u8381:
  5743   00336C  EFB9  F019         	goto	l6575
  5744   003370                     u8380:
  5745   003370  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5746   003372                     l6575:
  5747   003372  90D8               	bcf	status,0,c
  5748   003374  320F               	rrcf	___xxtofl@exp^0,f,c
  5749   003376  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5750   00337A  6A0B               	clrf	(??___xxtofl+1)^0,c
  5751   00337C  6A0C               	clrf	(??___xxtofl+2)^0,c
  5752   00337E  6A0D               	clrf	(??___xxtofl+3)^0,c
  5753   003380  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5754   003384  6A0C               	clrf	(??___xxtofl+2)^0,c
  5755   003386  6A0B               	clrf	(??___xxtofl+1)^0,c
  5756   003388  6A0A               	clrf	??___xxtofl^0,c
  5757   00338A  500A               	movf	??___xxtofl^0,w,c
  5758   00338C  1210               	iorwf	___xxtofl@arg^0,f,c
  5759   00338E  500B               	movf	(??___xxtofl+1)^0,w,c
  5760   003390  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5761   003392  500C               	movf	(??___xxtofl+2)^0,w,c
  5762   003394  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5763   003396  500D               	movf	(??___xxtofl+3)^0,w,c
  5764   003398  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5765   00339A  500E               	movf	___xxtofl@sign^0,w,c
  5766   00339C  B4D8               	btfsc	status,2,c
  5767   00339E  EFD3  F019         	goto	u8391
  5768   0033A2  EFD5  F019         	goto	u8390
  5769   0033A6                     u8391:
  5770   0033A6  EFDD  F019         	goto	l6585
  5771   0033AA                     u8390:
  5772   0033AA  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5773   0033AC  EFDC  F019         	goto	u8400
  5774   0033B0  EFDA  F019         	goto	u8401
  5775   0033B4                     u8401:
  5776   0033B4  EFDD  F019         	goto	l6585
  5777   0033B8                     u8400:
  5778   0033B8  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5779   0033BA                     l6585:
  5780   0033BA  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5781   0033BE  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5782   0033C2  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5783   0033C6  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5784   0033CA                     l1204:
  5785   0033CA  0012               	return		;funcret
  5786   0033CC                     __end_of___xxtofl:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function _moveDisplay *****************
  5790 ;; Defined at:
  5791 ;;		line 11 in file "menu.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  menuI           1    wreg     unsigned char 
  5794 ;;  where           1  135[BANK0 ] unsigned char 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  menuI           1   50[BANK1 ] unsigned char 
  5797 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  5798 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  5799 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  5800 ;;		 -> STR_18(1), STR_17(6), STR_16(5), STR_15(4), 
  5801 ;;		 -> STR_14(4), STR_13(4), STR_12(5), STR_11(5), 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      unsigned char 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5811 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;Total ram usage:       54 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 9
  5818 ;; This function calls:
  5819 ;;		_LCD_Clear
  5820 ;;		_LCD_ShowString
  5821 ;;		_sprintf
  5822 ;; This function is called by:
  5823 ;;		_main
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text20
  5828   00399C                     __ptext20:
  5829                           	callstack 0
  5830   00399C                     _moveDisplay:
  5831                           	callstack 21
  5832                           
  5833                           ;incstack = 0
  5834                           ;moveDisplay@menuI stored from wreg
  5835   00399C  0101               	movlb	1	; () banked
  5836   00399E  6F94               	movwf	moveDisplay@menuI& (0+255),b
  5837   0039A0                     
  5838                           ;menu.c: 12:     LCD_Clear();
  5839   0039A0  ECA0  F023         	call	_LCD_Clear	;wreg free
  5840   0039A4                     
  5841                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  5842   0039A4  EE21  F095         	lfsr	2,moveDisplay@F6961
  5843   0039A8  EE11  F084         	lfsr	1,moveDisplay@menuItems
  5844   0039AC  0E0F               	movlw	15
  5845   0039AE                     u8921:
  5846   0039AE  CFDB FFE3          	movff	plusw2,plusw1
  5847   0039B2  06E8               	decf	wreg,f,c
  5848   0039B4  E2FC               	bc	u8921
  5849                           
  5850                           ;menu.c: 14:     switch (where){
  5851   0039B6  EFF5  F01C         	goto	l6981
  5852   0039BA                     l6971:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;menu.c: 18:             if(menuI<6){
  5856   0039BA  0E06               	movlw	6
  5857   0039BC  0101               	movlb	1	; () banked
  5858   0039BE  6194               	cpfslt	moveDisplay@menuI& (0+255),b
  5859   0039C0  EFE4  F01C         	goto	u8931
  5860   0039C4  EFE6  F01C         	goto	u8930
  5861   0039C8                     u8931:
  5862   0039C8  EF05  F01D         	goto	l6983
  5863   0039CC                     u8930:
  5864   0039CC                     
  5865                           ; BSR set to: 1
  5866                           ;menu.c: 19:             menuI++;
  5867   0039CC  2B94               	incf	moveDisplay@menuI& (0+255),f,b
  5868   0039CE  EF05  F01D         	goto	l6983
  5869   0039D2                     l6975:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;menu.c: 23:             if(menuI>0){
  5873   0039D2  0101               	movlb	1	; () banked
  5874   0039D4  5194               	movf	moveDisplay@menuI& (0+255),w,b
  5875   0039D6  B4D8               	btfsc	status,2,c
  5876   0039D8  EFF0  F01C         	goto	u8941
  5877   0039DC  EFF2  F01C         	goto	u8940
  5878   0039E0                     u8941:
  5879   0039E0  EF05  F01D         	goto	l6983
  5880   0039E4                     u8940:
  5881   0039E4                     
  5882                           ; BSR set to: 1
  5883                           ;menu.c: 24:             menuI--;
  5884   0039E4  0794               	decf	moveDisplay@menuI& (0+255),f,b
  5885   0039E6  EF05  F01D         	goto	l6983
  5886   0039EA                     l6981:
  5887   0039EA  0100               	movlb	0	; () banked
  5888   0039EC  51E7               	movf	moveDisplay@where& (0+255),w,b
  5889                           
  5890                           ; Switch size 1, requested type "simple"
  5891                           ; Number of cases is 3, Range of values is 0 to 2
  5892                           ; switch strategies available:
  5893                           ; Name         Instructions Cycles
  5894                           ; simple_byte           10     6 (average)
  5895                           ;	Chosen strategy is simple_byte
  5896   0039EE  0A00               	xorlw	0	; case 0
  5897   0039F0  B4D8               	btfsc	status,2,c
  5898   0039F2  EF05  F01D         	goto	l6983
  5899   0039F6  0A01               	xorlw	1	; case 1
  5900   0039F8  B4D8               	btfsc	status,2,c
  5901   0039FA  EFDD  F01C         	goto	l6971
  5902   0039FE  0A03               	xorlw	3	; case 2
  5903   003A00  B4D8               	btfsc	status,2,c
  5904   003A02  EFE9  F01C         	goto	l6975
  5905   003A06  EF05  F01D         	goto	l6983
  5906   003A0A                     l6983:
  5907                           
  5908                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  5909   003A0A  0E62               	movlw	low moveDisplay@menuItem1
  5910   003A0C  0100               	movlb	0	; () banked
  5911   003A0E  6FCE               	movwf	sprintf@s& (0+255),b
  5912   003A10  0E01               	movlw	high moveDisplay@menuItem1
  5913   003A12  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5914   003A14  0ED0               	movlw	low STR_19
  5915   003A16  6FD0               	movwf	sprintf@fmt& (0+255),b
  5916   003A18  0EFF               	movlw	high STR_19
  5917   003A1A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5918   003A1C  0E00               	movlw	0
  5919   003A1E  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  5920   003A20  0E0F               	movlw	15
  5921   003A22  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  5922   003A24  0101               	movlb	1	; () banked
  5923   003A26  5194               	movf	moveDisplay@menuI& (0+255),w,b
  5924   003A28  0D02               	mullw	2
  5925   003A2A  0E84               	movlw	low moveDisplay@menuItems
  5926   003A2C  24F3               	addwf	243,w,c
  5927   003A2E  6ED9               	movwf	fsr2l,c
  5928   003A30  0E01               	movlw	high moveDisplay@menuItems
  5929   003A32  20F4               	addwfc	prodh,w,c
  5930   003A34  6EDA               	movwf	fsr2h,c
  5931   003A36  CFDE F0D4          	movff	postinc2,?_sprintf+6
  5932   003A3A  CFDD F0D5          	movff	postdec2,?_sprintf+7
  5933   003A3E  EC03  F023         	call	_sprintf	;wreg free
  5934                           
  5935                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  5936   003A42  0E73               	movlw	low moveDisplay@menuItem2
  5937   003A44  0100               	movlb	0	; () banked
  5938   003A46  6FCE               	movwf	sprintf@s& (0+255),b
  5939   003A48  0E01               	movlw	high moveDisplay@menuItem2
  5940   003A4A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5941   003A4C  0ED1               	movlw	low (STR_19+1)
  5942   003A4E  6FD0               	movwf	sprintf@fmt& (0+255),b
  5943   003A50  0EFF               	movlw	high (STR_19+1)
  5944   003A52  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5945   003A54  0E00               	movlw	0
  5946   003A56  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  5947   003A58  0E10               	movlw	16
  5948   003A5A  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  5949   003A5C  0101               	movlb	1	; () banked
  5950   003A5E  5194               	movf	moveDisplay@menuI& (0+255),w,b
  5951   003A60  0100               	movlb	0	; () banked
  5952   003A62  6FE8               	movwf	??_moveDisplay& (0+255),b
  5953   003A64  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  5954   003A66  90D8               	bcf	status,0,c
  5955   003A68  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  5956   003A6A  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  5957   003A6C  0E02               	movlw	2
  5958   003A6E  27E8               	addwf	??_moveDisplay& (0+255),f,b
  5959   003A70  0E00               	movlw	0
  5960   003A72  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  5961   003A74  0E84               	movlw	low moveDisplay@menuItems
  5962   003A76  25E8               	addwf	??_moveDisplay& (0+255),w,b
  5963   003A78  6ED9               	movwf	fsr2l,c
  5964   003A7A  0E01               	movlw	high moveDisplay@menuItems
  5965   003A7C  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  5966   003A7E  6EDA               	movwf	fsr2h,c
  5967   003A80  CFDE F0D4          	movff	postinc2,?_sprintf+6
  5968   003A84  CFDD F0D5          	movff	postdec2,?_sprintf+7
  5969   003A88  EC03  F023         	call	_sprintf	;wreg free
  5970   003A8C                     
  5971                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  5972   003A8C  0E62               	movlw	low moveDisplay@menuItem1
  5973   003A8E  6E07               	movwf	LCD_ShowString@textData^0,c
  5974   003A90  0E01               	movlw	high moveDisplay@menuItem1
  5975   003A92  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5976   003A94  0E01               	movlw	1
  5977   003A96  EC91  F020         	call	_LCD_ShowString
  5978   003A9A                     
  5979                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  5980   003A9A  0E73               	movlw	low moveDisplay@menuItem2
  5981   003A9C  6E07               	movwf	LCD_ShowString@textData^0,c
  5982   003A9E  0E01               	movlw	high moveDisplay@menuItem2
  5983   003AA0  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5984   003AA2  0E02               	movlw	2
  5985   003AA4  EC91  F020         	call	_LCD_ShowString
  5986   003AA8                     
  5987                           ;menu.c: 35:     return menuI;
  5988   003AA8  0101               	movlb	1	; () banked
  5989   003AAA  5194               	movf	moveDisplay@menuI& (0+255),w,b
  5990   003AAC                     
  5991                           ; BSR set to: 1
  5992   003AAC  0012               	return		;funcret
  5993   003AAE                     __end_of_moveDisplay:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function _sprintf *****************
  5997 ;; Defined at:
  5998 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  s               2  110[BANK0 ] PTR unsigned char 
  6001 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6002 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  6003 ;;		 -> STR_21(19), STR_20(5), STR_19(6), 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  f              12  123[BANK0 ] struct _IO_FILE
  6006 ;;  ret             2    0        int 
  6007 ;;  ap              1  122[BANK0 ] PTR void [1]
  6008 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  2  110[BANK0 ] int 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6018 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;Total ram usage:       25 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 8
  6025 ;; This function calls:
  6026 ;;		_vfprintf
  6027 ;; This function is called by:
  6028 ;;		_moveDisplay
  6029 ;;		_runADC
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text21
  6034   004606                     __ptext21:
  6035                           	callstack 0
  6036   004606                     _sprintf:
  6037                           	callstack 21
  6038   004606  0ED2               	movlw	low (?_sprintf+4)
  6039   004608  0100               	movlb	0	; () banked
  6040   00460A  6FDA               	movwf	sprintf@ap& (0+255),b
  6041   00460C  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  6042   004610  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6043   004614                     
  6044                           ; BSR set to: 0
  6045   004614  0E00               	movlw	0
  6046   004616  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6047   004618  0E00               	movlw	0
  6048   00461A  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6049   00461C                     
  6050                           ; BSR set to: 0
  6051   00461C  0E00               	movlw	0
  6052   00461E  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  6053   004620  0E00               	movlw	0
  6054   004622  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  6055   004624                     
  6056                           ; BSR set to: 0
  6057   004624  0EDB               	movlw	low sprintf@f
  6058   004626  6FC7               	movwf	vfprintf@fp& (0+255),b
  6059   004628  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  6060   00462A  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6061   00462E  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6062   004632  0EDA               	movlw	low sprintf@ap
  6063   004634  6FCB               	movwf	vfprintf@ap& (0+255),b
  6064   004636  ECBA  F022         	call	_vfprintf	;wreg free
  6065   00463A  0100               	movlb	0	; () banked
  6066   00463C  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6067   00463E  25CE               	addwf	sprintf@s& (0+255),w,b
  6068   004640  6ED9               	movwf	fsr2l,c
  6069   004642  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  6070   004644  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  6071   004646  6EDA               	movwf	fsr2h,c
  6072   004648  6ADF               	clrf	indf2,c
  6073   00464A                     
  6074                           ; BSR set to: 0
  6075   00464A  0012               	return		;funcret
  6076   00464C                     __end_of_sprintf:
  6077                           	callstack 0
  6078                           
  6079 ;; *************** function _vfprintf *****************
  6080 ;; Defined at:
  6081 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6084 ;;		 -> NULL(0), sprintf@f(12), 
  6085 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6086 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6087 ;;		 -> STR_10(5), 
  6088 ;;  ap              1  107[BANK0 ] PTR PTR void 
  6089 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  6092 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6093 ;;		 -> STR_10(5), 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  2  103[BANK0 ] int 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6103 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;Total ram usage:        7 bytes
  6108 ;; Hardware stack levels used: 1
  6109 ;; Hardware stack levels required when called: 7
  6110 ;; This function calls:
  6111 ;;		_vfpfcnvrt
  6112 ;; This function is called by:
  6113 ;;		_sprintf
  6114 ;;		_printf
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text22
  6119   004574                     __ptext22:
  6120                           	callstack 0
  6121   004574                     _vfprintf:
  6122                           	callstack 21
  6123   004574                     
  6124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6125   004574  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  6126   004578  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6127                           
  6128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6129   00457C  EFCB  F022         	goto	l6719
  6130   004580                     l6717:
  6131                           
  6132                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  6133   004580  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  6134   004584  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6135   004588  0ECC               	movlw	low vfprintf@cfmt
  6136   00458A  0100               	movlb	0	; () banked
  6137   00458C  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  6138   00458E  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  6139   004592  EC84  F00C         	call	_vfpfcnvrt	;wreg free
  6140   004596                     l6719:
  6141                           
  6142                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6143   004596  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  6144   00459A  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6145   00459E                     	if	0	;tblptru may be non-zero
  6146   00459E                     	endif
  6147   00459E                     	if	0	;tblptru may be non-zero
  6148   00459E                     	endif
  6149   00459E  0008               	tblrd		*
  6150   0045A0  50F5               	movf	tablat,w,c
  6151   0045A2  0900               	iorlw	0
  6152   0045A4  A4D8               	btfss	status,2,c
  6153   0045A6  EFD7  F022         	goto	u8551
  6154   0045AA  EFD9  F022         	goto	u8550
  6155   0045AE                     u8551:
  6156   0045AE  EFC0  F022         	goto	l6717
  6157   0045B2                     u8550:
  6158   0045B2                     
  6159                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6160   0045B2  0E00               	movlw	0
  6161   0045B4  0100               	movlb	0	; () banked
  6162   0045B6  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  6163   0045B8  0E00               	movlw	0
  6164   0045BA  6FC7               	movwf	?_vfprintf& (0+255),b
  6165   0045BC                     
  6166                           ; BSR set to: 0
  6167   0045BC  0012               	return		;funcret
  6168   0045BE                     __end_of_vfprintf:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function _vfpfcnvrt *****************
  6172 ;; Defined at:
  6173 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  6176 ;;		 -> NULL(0), sprintf@f(12), 
  6177 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  6178 ;;		 -> vfprintf@cfmt(2), 
  6179 ;;  ap              1   92[BANK0 ] PTR PTR void 
  6180 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  convarg         4   95[BANK0 ] struct .
  6183 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  6184 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6185 ;;		 -> STR_10(5), 
  6186 ;;  done            1  100[BANK0 ] _Bool 
  6187 ;;  c               1   99[BANK0 ] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6197 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6198 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;Total ram usage:       14 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 6
  6204 ;; This function calls:
  6205 ;;		_dtoa
  6206 ;;		_efgtoa
  6207 ;;		_fputc
  6208 ;;		_read_prec_or_width
  6209 ;;		_stoa
  6210 ;; This function is called by:
  6211 ;;		_vfprintf
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text23
  6216   001908                     __ptext23:
  6217                           	callstack 0
  6218   001908                     _vfpfcnvrt:
  6219                           	callstack 21
  6220   001908                     
  6221                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  6222   001908  0100               	movlb	0	; () banked
  6223   00190A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6224   00190C  6ED9               	movwf	fsr2l,c
  6225   00190E  6ADA               	clrf	fsr2h,c
  6226   001910  CFDE FFF6          	movff	postinc2,tblptrl
  6227   001914  CFDD FFF7          	movff	postdec2,tblptrh
  6228   001918                     	if	0	;tblptru may be non-zero
  6229   001918                     	endif
  6230   001918                     	if	0	;tblptru may be non-zero
  6231   001918                     	endif
  6232   001918  0008               	tblrd		*
  6233   00191A  50F5               	movf	tablat,w,c
  6234   00191C  0A25               	xorlw	37
  6235   00191E  A4D8               	btfss	status,2,c
  6236   001920  EF94  F00C         	goto	u8411
  6237   001924  EF96  F00C         	goto	u8410
  6238   001928                     u8411:
  6239   001928  EF7B  F00E         	goto	l6699
  6240   00192C                     u8410:
  6241   00192C                     
  6242                           ; BSR set to: 0
  6243                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  6244   00192C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6245   00192E  6ED9               	movwf	fsr2l,c
  6246   001930  6ADA               	clrf	fsr2h,c
  6247   001932  2ADE               	incf	postinc2,f,c
  6248   001934  0E00               	movlw	0
  6249   001936  22DD               	addwfc	postdec2,f,c
  6250   001938                     
  6251                           ; BSR set to: 0
  6252                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  6253   001938  0E00               	movlw	0
  6254   00193A  6E56               	movwf	(_width+1)^0,c
  6255   00193C  0E00               	movlw	0
  6256   00193E  6E55               	movwf	_width^0,c
  6257   001940  C055  F059         	movff	_width,_flags
  6258   001944                     
  6259                           ; BSR set to: 0
  6260                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  6261   001944  6857               	setf	_prec^0,c
  6262   001946  6858               	setf	(_prec+1)^0,c
  6263   001948                     
  6264                           ; BSR set to: 0
  6265                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  6266   001948  0E00               	movlw	0
  6267   00194A  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6268                           
  6269                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6270   00194C  EFC4  F00C         	goto	l6609
  6271   001950                     l6599:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  6275   001950  8059               	bsf	_flags^0,0,c
  6276   001952                     
  6277                           ; BSR set to: 0
  6278                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  6279   001952  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6280   001954  6ED9               	movwf	fsr2l,c
  6281   001956  6ADA               	clrf	fsr2h,c
  6282   001958  2ADE               	incf	postinc2,f,c
  6283   00195A  0E00               	movlw	0
  6284   00195C  22DD               	addwfc	postdec2,f,c
  6285                           
  6286                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  6287   00195E  EFC4  F00C         	goto	l6609
  6288   001962                     l6603:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  6292   001962  0E01               	movlw	1
  6293   001964  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6294                           
  6295                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  6296   001966  EFC4  F00C         	goto	l6609
  6297   00196A                     l6607:
  6298                           
  6299                           ; BSR set to: 0
  6300   00196A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6301   00196C  6ED9               	movwf	fsr2l,c
  6302   00196E  6ADA               	clrf	fsr2h,c
  6303   001970  CFDE FFF6          	movff	postinc2,tblptrl
  6304   001974  CFDD FFF7          	movff	postdec2,tblptrh
  6305   001978                     	if	0	;tblptru may be non-zero
  6306   001978                     	endif
  6307   001978                     	if	0	;tblptru may be non-zero
  6308   001978                     	endif
  6309   001978  0008               	tblrd		*
  6310   00197A  50F5               	movf	tablat,w,c
  6311                           
  6312                           ; Switch size 1, requested type "simple"
  6313                           ; Number of cases is 1, Range of values is 45 to 45
  6314                           ; switch strategies available:
  6315                           ; Name         Instructions Cycles
  6316                           ; simple_byte            4     3 (average)
  6317                           ;	Chosen strategy is simple_byte
  6318   00197C  0A2D               	xorlw	45	; case 45
  6319   00197E  B4D8               	btfsc	status,2,c
  6320   001980  EFA8  F00C         	goto	l6599
  6321   001984  EFB1  F00C         	goto	l6603
  6322   001988                     l6609:
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6326   001988  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6327   00198A  B4D8               	btfsc	status,2,c
  6328   00198C  EFCA  F00C         	goto	u8421
  6329   001990  EFCC  F00C         	goto	u8420
  6330   001994                     u8421:
  6331   001994  EFB5  F00C         	goto	l6607
  6332   001998                     u8420:
  6333   001998                     
  6334                           ; BSR set to: 0
  6335                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  6336   001998  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6337   00199C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6338   0019A0  EC42  F021         	call	_read_prec_or_width	;wreg free
  6339   0019A4  C00C  F055         	movff	?_read_prec_or_width,_width
  6340   0019A8  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  6341   0019AC                     
  6342                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  6343   0019AC  BE56               	btfsc	(_width+1)^0,7,c
  6344   0019AE  EFDD  F00C         	goto	u8430
  6345   0019B2  EFDB  F00C         	goto	u8431
  6346   0019B6                     u8431:
  6347   0019B6  EFE2  F00C         	goto	l6617
  6348   0019BA                     u8430:
  6349   0019BA                     
  6350                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  6351   0019BA  8059               	bsf	_flags^0,0,c
  6352                           
  6353                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  6354   0019BC  6C55               	negf	_width^0,c
  6355   0019BE  1E56               	comf	(_width+1)^0,f,c
  6356   0019C0  B0D8               	btfsc	status,0,c
  6357   0019C2  2A56               	incf	(_width+1)^0,f,c
  6358   0019C4                     l6617:
  6359                           
  6360                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  6361   0019C4  0100               	movlb	0	; () banked
  6362   0019C6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6363   0019C8  6ED9               	movwf	fsr2l,c
  6364   0019CA  6ADA               	clrf	fsr2h,c
  6365   0019CC  CFDE FFF6          	movff	postinc2,tblptrl
  6366   0019D0  CFDD FFF7          	movff	postdec2,tblptrh
  6367   0019D4                     	if	0	;tblptru may be non-zero
  6368   0019D4                     	endif
  6369   0019D4                     	if	0	;tblptru may be non-zero
  6370   0019D4                     	endif
  6371   0019D4  0008               	tblrd		*
  6372   0019D6  50F5               	movf	tablat,w,c
  6373   0019D8  0A2E               	xorlw	46
  6374   0019DA  A4D8               	btfss	status,2,c
  6375   0019DC  EFF2  F00C         	goto	u8441
  6376   0019E0  EFF4  F00C         	goto	u8440
  6377   0019E4                     u8441:
  6378   0019E4  EF04  F00D         	goto	l6623
  6379   0019E8                     u8440:
  6380   0019E8                     
  6381                           ; BSR set to: 0
  6382                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  6383   0019E8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6384   0019EA  6ED9               	movwf	fsr2l,c
  6385   0019EC  6ADA               	clrf	fsr2h,c
  6386   0019EE  2ADE               	incf	postinc2,f,c
  6387   0019F0  0E00               	movlw	0
  6388   0019F2  22DD               	addwfc	postdec2,f,c
  6389   0019F4                     
  6390                           ; BSR set to: 0
  6391                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  6392   0019F4  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6393   0019F8  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6394   0019FC  EC42  F021         	call	_read_prec_or_width	;wreg free
  6395   001A00  C00C  F057         	movff	?_read_prec_or_width,_prec
  6396   001A04  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  6397   001A08                     l6623:
  6398                           
  6399                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  6400   001A08  0100               	movlb	0	; () banked
  6401   001A0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6402   001A0C  6ED9               	movwf	fsr2l,c
  6403   001A0E  6ADA               	clrf	fsr2h,c
  6404   001A10  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6405   001A14  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6406   001A18                     
  6407                           ; BSR set to: 0
  6408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  6409   001A18  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6410   001A1C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6411   001A20                     	if	0	;tblptru may be non-zero
  6412   001A20                     	endif
  6413   001A20                     	if	0	;tblptru may be non-zero
  6414   001A20                     	endif
  6415   001A20  0008               	tblrd		*
  6416   001A22  50F5               	movf	tablat,w,c
  6417   001A24  0A64               	xorlw	100
  6418   001A26  B4D8               	btfsc	status,2,c
  6419   001A28  EF18  F00D         	goto	u8451
  6420   001A2C  EF1A  F00D         	goto	u8450
  6421   001A30                     u8451:
  6422   001A30  EF28  F00D         	goto	l6629
  6423   001A34                     u8450:
  6424   001A34                     
  6425                           ; BSR set to: 0
  6426   001A34  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6427   001A38  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6428   001A3C                     	if	0	;tblptru may be non-zero
  6429   001A3C                     	endif
  6430   001A3C                     	if	0	;tblptru may be non-zero
  6431   001A3C                     	endif
  6432   001A3C  0008               	tblrd		*
  6433   001A3E  50F5               	movf	tablat,w,c
  6434   001A40  0A69               	xorlw	105
  6435   001A42  A4D8               	btfss	status,2,c
  6436   001A44  EF26  F00D         	goto	u8461
  6437   001A48  EF28  F00D         	goto	u8460
  6438   001A4C                     u8461:
  6439   001A4C  EF4D  F00D         	goto	l6637
  6440   001A50                     u8460:
  6441   001A50                     l6629:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1404:    convarg.sint = (vfpf_sint_
      +                          t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6445   001A50  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6446   001A52  6ED9               	movwf	fsr2l,c
  6447   001A54  6ADA               	clrf	fsr2h,c
  6448   001A56  0E02               	movlw	2
  6449   001A58  26DF               	addwf	indf2,f,c
  6450   001A5A  5CDF               	subwf	indf2,w,c
  6451   001A5C  6ED9               	movwf	fsr2l,c
  6452   001A5E  6ADA               	clrf	fsr2h,c
  6453   001A60  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6454   001A64  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6455   001A68                     
  6456                           ; BSR set to: 0
  6457                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  6458   001A68  0E01               	movlw	1
  6459   001A6A  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6460   001A6C  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6461   001A6E  0E00               	movlw	0
  6462   001A70  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6463   001A72  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6464   001A74  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6465   001A76  6ED9               	movwf	fsr2l,c
  6466   001A78  6ADA               	clrf	fsr2h,c
  6467   001A7A  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6468   001A7E  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6469   001A82                     
  6470                           ; BSR set to: 0
  6471                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  6472   001A82  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  6473   001A86  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6474   001A8A  C0BF  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  6475   001A8E  C0C0  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6476   001A92  ECB5  F01A         	call	_dtoa	;wreg free
  6477   001A96  EF8E  F00E         	goto	l1373
  6478   001A9A                     l6637:
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6482   001A9A  0E00               	movlw	0
  6483   001A9C  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6484   001A9E                     
  6485                           ; BSR set to: 0
  6486                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  6487   001A9E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6488   001AA0  6ED9               	movwf	fsr2l,c
  6489   001AA2  6ADA               	clrf	fsr2h,c
  6490   001AA4  CFDE FFF6          	movff	postinc2,tblptrl
  6491   001AA8  CFDD FFF7          	movff	postdec2,tblptrh
  6492   001AAC                     	if	0	;tblptru may be non-zero
  6493   001AAC                     	endif
  6494   001AAC                     	if	0	;tblptru may be non-zero
  6495   001AAC                     	endif
  6496   001AAC  0008               	tblrd		*
  6497   001AAE  50F5               	movf	tablat,w,c
  6498   001AB0  0A73               	xorlw	115
  6499   001AB2  A4D8               	btfss	status,2,c
  6500   001AB4  EF5E  F00D         	goto	u8471
  6501   001AB8  EF60  F00D         	goto	u8470
  6502   001ABC                     u8471:
  6503   001ABC  EF6A  F00D         	goto	l6645
  6504   001AC0                     u8470:
  6505   001AC0                     
  6506                           ; BSR set to: 0
  6507                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6508   001AC0  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6509   001AC2  6ED9               	movwf	fsr2l,c
  6510   001AC4  6ADA               	clrf	fsr2h,c
  6511   001AC6  2ADE               	incf	postinc2,f,c
  6512   001AC8  0E00               	movlw	0
  6513   001ACA  22DD               	addwfc	postdec2,f,c
  6514   001ACC                     l6643:
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  6518   001ACC  0E01               	movlw	1
  6519   001ACE  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6520                           
  6521                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  6522   001AD0  EFB6  F00D         	goto	l6655
  6523   001AD4                     l6645:
  6524                           
  6525                           ; BSR set to: 0
  6526   001AD4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6527   001AD6  6ED9               	movwf	fsr2l,c
  6528   001AD8  6ADA               	clrf	fsr2h,c
  6529   001ADA  CFDE FFF6          	movff	postinc2,tblptrl
  6530   001ADE  CFDD FFF7          	movff	postdec2,tblptrh
  6531   001AE2                     	if	0	;tblptru may be non-zero
  6532   001AE2                     	endif
  6533   001AE2                     	if	0	;tblptru may be non-zero
  6534   001AE2                     	endif
  6535   001AE2  0008               	tblrd		*
  6536   001AE4  50F5               	movf	tablat,w,c
  6537   001AE6  0A6C               	xorlw	108
  6538   001AE8  A4D8               	btfss	status,2,c
  6539   001AEA  EF79  F00D         	goto	u8481
  6540   001AEE  EF7B  F00D         	goto	u8480
  6541   001AF2                     u8481:
  6542   001AF2  EFB6  F00D         	goto	l6655
  6543   001AF6                     u8480:
  6544   001AF6                     
  6545                           ; BSR set to: 0
  6546   001AF6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6547   001AF8  6ED9               	movwf	fsr2l,c
  6548   001AFA  6ADA               	clrf	fsr2h,c
  6549   001AFC  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6550   001B00  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6551   001B04  0E01               	movlw	1
  6552   001B06  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6553   001B08  0E00               	movlw	0
  6554   001B0A  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6555   001B0C  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6556   001B10  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6557   001B14                     	if	0	;tblptru may be non-zero
  6558   001B14                     	endif
  6559   001B14                     	if	0	;tblptru may be non-zero
  6560   001B14                     	endif
  6561   001B14  0008               	tblrd		*
  6562   001B16  50F5               	movf	tablat,w,c
  6563   001B18  0A6C               	xorlw	108
  6564   001B1A  A4D8               	btfss	status,2,c
  6565   001B1C  EF92  F00D         	goto	u8491
  6566   001B20  EF94  F00D         	goto	u8490
  6567   001B24                     u8491:
  6568   001B24  EFB6  F00D         	goto	l6655
  6569   001B28                     u8490:
  6570   001B28                     
  6571                           ; BSR set to: 0
  6572   001B28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6573   001B2A  6ED9               	movwf	fsr2l,c
  6574   001B2C  6ADA               	clrf	fsr2h,c
  6575   001B2E  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6576   001B32  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6577   001B36  0E02               	movlw	2
  6578   001B38  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6579   001B3A  0E00               	movlw	0
  6580   001B3C  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6581   001B3E  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6582   001B42  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6583   001B46                     	if	0	;tblptru may be non-zero
  6584   001B46                     	endif
  6585   001B46                     	if	0	;tblptru may be non-zero
  6586   001B46                     	endif
  6587   001B46  0008               	tblrd		*
  6588   001B48  50F5               	movf	tablat,w,c
  6589   001B4A  0A73               	xorlw	115
  6590   001B4C  A4D8               	btfss	status,2,c
  6591   001B4E  EFAB  F00D         	goto	u8501
  6592   001B52  EFAD  F00D         	goto	u8500
  6593   001B56                     u8501:
  6594   001B56  EFB6  F00D         	goto	l6655
  6595   001B5A                     u8500:
  6596   001B5A                     
  6597                           ; BSR set to: 0
  6598                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  6599   001B5A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6600   001B5C  6ED9               	movwf	fsr2l,c
  6601   001B5E  6ADA               	clrf	fsr2h,c
  6602   001B60  0E03               	movlw	3
  6603   001B62  26DE               	addwf	postinc2,f,c
  6604   001B64  0E00               	movlw	0
  6605   001B66  22DD               	addwfc	postdec2,f,c
  6606   001B68  EF66  F00D         	goto	l6643
  6607   001B6C                     l6655:
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  6611   001B6C  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6612   001B6E  B4D8               	btfsc	status,2,c
  6613   001B70  EFBC  F00D         	goto	u8511
  6614   001B74  EFBE  F00D         	goto	u8510
  6615   001B78                     u8511:
  6616   001B78  EFD2  F00D         	goto	l6661
  6617   001B7C                     u8510:
  6618   001B7C                     
  6619                           ; BSR set to: 0
  6620                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  6621   001B7C  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  6622   001B80  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6623   001B84  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6624   001B86  6ED9               	movwf	fsr2l,c
  6625   001B88  6ADA               	clrf	fsr2h,c
  6626   001B8A  0E02               	movlw	2
  6627   001B8C  26DF               	addwf	indf2,f,c
  6628   001B8E  5CDF               	subwf	indf2,w,c
  6629   001B90  6ED9               	movwf	fsr2l,c
  6630   001B92  6ADA               	clrf	fsr2h,c
  6631   001B94  CFDE F012          	movff	postinc2,stoa@s
  6632   001B98  CFDE F013          	movff	postinc2,stoa@s+1
  6633   001B9C  ECE6  F019         	call	_stoa	;wreg free
  6634   001BA0  EF8E  F00E         	goto	l1373
  6635   001BA4                     l6661:
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  6639   001BA4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6640   001BA6  6ED9               	movwf	fsr2l,c
  6641   001BA8  6ADA               	clrf	fsr2h,c
  6642   001BAA  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6643   001BAE  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6644   001BB2                     
  6645                           ; BSR set to: 0
  6646                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6647   001BB2  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6648   001BB6  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6649   001BBA                     	if	0	;tblptru may be non-zero
  6650   001BBA                     	endif
  6651   001BBA                     	if	0	;tblptru may be non-zero
  6652   001BBA                     	endif
  6653   001BBA  0008               	tblrd		*
  6654   001BBC  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  6655                           
  6656                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  6657   001BC0  EFEE  F00D         	goto	l6673
  6658   001BC4                     l6665:
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6662   001BC4  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  6663   001BC6  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  6664                           
  6665                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  6666   001BC8  EFFD  F00D         	goto	l6675
  6667   001BCC                     l6667:
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  6671   001BCC  0E6C               	movlw	108
  6672   001BCE  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6673                           
  6674                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  6675   001BD0  EFFD  F00D         	goto	l6675
  6676   001BD4                     l6669:
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6680   001BD4  0E00               	movlw	0
  6681   001BD6  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6682                           
  6683                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  6684   001BD8  EFFD  F00D         	goto	l6675
  6685   001BDC                     l6673:
  6686                           
  6687                           ; BSR set to: 0
  6688   001BDC  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6689                           
  6690                           ; Switch size 1, requested type "simple"
  6691                           ; Number of cases is 3, Range of values is 76 to 108
  6692                           ; switch strategies available:
  6693                           ; Name         Instructions Cycles
  6694                           ; simple_byte           10     6 (average)
  6695                           ;	Chosen strategy is simple_byte
  6696   001BDE  0A4C               	xorlw	76	; case 76
  6697   001BE0  B4D8               	btfsc	status,2,c
  6698   001BE2  EFE2  F00D         	goto	l6665
  6699   001BE6  0A2A               	xorlw	42	; case 102
  6700   001BE8  B4D8               	btfsc	status,2,c
  6701   001BEA  EFE6  F00D         	goto	l6667
  6702   001BEE  0A0A               	xorlw	10	; case 108
  6703   001BF0  B4D8               	btfsc	status,2,c
  6704   001BF2  EFE2  F00D         	goto	l6665
  6705   001BF6  EFEA  F00D         	goto	l6669
  6706   001BFA                     l6675:
  6707                           
  6708                           ; BSR set to: 0
  6709   001BFA  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6710   001BFE  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6711   001C02                     	if	0	;tblptru may be non-zero
  6712   001C02                     	endif
  6713   001C02                     	if	0	;tblptru may be non-zero
  6714   001C02                     	endif
  6715   001C02  0008               	tblrd		*
  6716   001C04  50F5               	movf	tablat,w,c
  6717   001C06  0A66               	xorlw	102
  6718   001C08  A4D8               	btfss	status,2,c
  6719   001C0A  EF09  F00E         	goto	u8521
  6720   001C0E  EF0B  F00E         	goto	u8520
  6721   001C12                     u8521:
  6722   001C12  EF72  F00E         	goto	l6695
  6723   001C16                     u8520:
  6724   001C16  EF35  F00E         	goto	l6683
  6725   001C1A                     l6677:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  6729   001C1A  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6730   001C1C  6ED9               	movwf	fsr2l,c
  6731   001C1E  6ADA               	clrf	fsr2h,c
  6732   001C20  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6733   001C24  0E04               	movlw	4
  6734   001C26  26DF               	addwf	indf2,f,c
  6735   001C28  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6736   001C2A  6ED9               	movwf	fsr2l,c
  6737   001C2C  6ADA               	clrf	fsr2h,c
  6738   001C2E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6739   001C32  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6740   001C36  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6741   001C3A  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6742                           
  6743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  6744   001C3E  EF40  F00E         	goto	l6685
  6745   001C42                     l6679:
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6749   001C42  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6750   001C44  6ED9               	movwf	fsr2l,c
  6751   001C46  6ADA               	clrf	fsr2h,c
  6752   001C48  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6753   001C4C  0E04               	movlw	4
  6754   001C4E  26DF               	addwf	indf2,f,c
  6755   001C50  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6756   001C52  6ED9               	movwf	fsr2l,c
  6757   001C54  6ADA               	clrf	fsr2h,c
  6758   001C56  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6759   001C5A  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6760   001C5E  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6761   001C62  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6762                           
  6763                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  6764   001C66  EF40  F00E         	goto	l6685
  6765   001C6A                     l6683:
  6766                           
  6767                           ; BSR set to: 0
  6768   001C6A  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6769                           
  6770                           ; Switch size 1, requested type "simple"
  6771                           ; Number of cases is 2, Range of values is 76 to 108
  6772                           ; switch strategies available:
  6773                           ; Name         Instructions Cycles
  6774                           ; simple_byte            7     4 (average)
  6775                           ;	Chosen strategy is simple_byte
  6776   001C6C  0A4C               	xorlw	76	; case 76
  6777   001C6E  B4D8               	btfsc	status,2,c
  6778   001C70  EF21  F00E         	goto	l6679
  6779   001C74  0A20               	xorlw	32	; case 108
  6780   001C76  B4D8               	btfsc	status,2,c
  6781   001C78  EF0D  F00E         	goto	l6677
  6782   001C7C  EF40  F00E         	goto	l6685
  6783   001C80                     l6685:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  6787   001C80  0E01               	movlw	1
  6788   001C82  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6789   001C84  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6790   001C86  0E00               	movlw	0
  6791   001C88  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6792   001C8A  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6793   001C8C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6794   001C8E  6ED9               	movwf	fsr2l,c
  6795   001C90  6ADA               	clrf	fsr2h,c
  6796   001C92  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6797   001C96  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6798                           
  6799                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  6800   001C9A  EF66  F00E         	goto	l6693
  6801   001C9E                     l6687:
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6805   001C9E  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  6806   001CA2  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6807   001CA6  C0BF  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  6808   001CAA  C0C0  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6809   001CAE  C0C1  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6810   001CB2  C0C2  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6811   001CB6  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6812   001CBA  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6813   001CBE                     	if	0	;tblptru may be non-zero
  6814   001CBE                     	endif
  6815   001CBE                     	if	0	;tblptru may be non-zero
  6816   001CBE                     	endif
  6817   001CBE  0008               	tblrd		*
  6818   001CC0  CFF5 F08A          	movff	tablat,efgtoa@c
  6819   001CC4  EC8C  F000         	call	_efgtoa	;wreg free
  6820   001CC8  EF8E  F00E         	goto	l1373
  6821   001CCC                     l6693:
  6822                           
  6823                           ; BSR set to: 0
  6824   001CCC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6825   001CD0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6826   001CD4                     	if	0	;tblptru may be non-zero
  6827   001CD4                     	endif
  6828   001CD4                     	if	0	;tblptru may be non-zero
  6829   001CD4                     	endif
  6830   001CD4  0008               	tblrd		*
  6831   001CD6  50F5               	movf	tablat,w,c
  6832                           
  6833                           ; Switch size 1, requested type "simple"
  6834                           ; Number of cases is 1, Range of values is 102 to 102
  6835                           ; switch strategies available:
  6836                           ; Name         Instructions Cycles
  6837                           ; simple_byte            4     3 (average)
  6838                           ;	Chosen strategy is simple_byte
  6839   001CD8  0A66               	xorlw	102	; case 102
  6840   001CDA  B4D8               	btfsc	status,2,c
  6841   001CDC  EF4F  F00E         	goto	l6687
  6842   001CE0  EF72  F00E         	goto	l6695
  6843   001CE4                     l6695:
  6844                           
  6845                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  6846   001CE4  0100               	movlb	0	; () banked
  6847   001CE6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6848   001CE8  6ED9               	movwf	fsr2l,c
  6849   001CEA  6ADA               	clrf	fsr2h,c
  6850   001CEC  2ADE               	incf	postinc2,f,c
  6851   001CEE  0E00               	movlw	0
  6852   001CF0  22DD               	addwfc	postdec2,f,c
  6853   001CF2  EF8E  F00E         	goto	l1373
  6854   001CF6                     l6699:
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  6858   001CF6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6859   001CF8  6ED9               	movwf	fsr2l,c
  6860   001CFA  6ADA               	clrf	fsr2h,c
  6861   001CFC  CFDE FFF6          	movff	postinc2,tblptrl
  6862   001D00  CFDD FFF7          	movff	postdec2,tblptrh
  6863   001D04                     	if	0	;tblptru may be non-zero
  6864   001D04                     	endif
  6865   001D04                     	if	0	;tblptru may be non-zero
  6866   001D04                     	endif
  6867   001D04  0008               	tblrd		*
  6868   001D06  50F5               	movf	tablat,w,c
  6869   001D08  6E07               	movwf	fputc@c^0,c
  6870   001D0A  6A08               	clrf	(fputc@c+1)^0,c
  6871   001D0C  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  6872   001D10  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6873   001D14  ECCA  F01F         	call	_fputc	;wreg free
  6874   001D18  EF72  F00E         	goto	l6695
  6875   001D1C                     l1373:
  6876   001D1C  0012               	return		;funcret
  6877   001D1E                     __end_of_vfpfcnvrt:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function _stoa *****************
  6881 ;; Defined at:
  6882 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6885 ;;		 -> NULL(0), sprintf@f(12), 
  6886 ;;  s               2   17[COMRAM] PTR unsigned char 
  6887 ;;		 -> ?_printf(2), ?_sprintf(2), STR_18(1), STR_17(6), 
  6888 ;;		 -> STR_16(5), STR_15(4), STR_14(4), STR_13(4), 
  6889 ;;		 -> STR_12(5), STR_11(5), gmail(61), 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  l               2   27[COMRAM] int 
  6892 ;;  cp              2   25[COMRAM] PTR unsigned char 
  6893 ;;		 -> ?_printf(2), STR_29(7), ?_sprintf(2), STR_18(1), 
  6894 ;;		 -> STR_17(6), STR_16(5), STR_15(4), STR_14(4), 
  6895 ;;		 -> STR_13(4), STR_12(5), STR_11(5), gmail(61), 
  6896 ;;  w               2   23[COMRAM] int 
  6897 ;;  p               2   21[COMRAM] int 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;Total ram usage:       14 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 3
  6914 ;; This function calls:
  6915 ;;		_fputc
  6916 ;; This function is called by:
  6917 ;;		_vfpfcnvrt
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text24
  6922   0033CC                     __ptext24:
  6923                           	callstack 0
  6924   0033CC                     _stoa:
  6925                           	callstack 23
  6926   0033CC                     
  6927                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  6928   0033CC  C012  F01A         	movff	stoa@s,stoa@cp
  6929   0033D0  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  6930                           
  6931                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  6932   0033D4  501A               	movf	stoa@cp^0,w,c
  6933   0033D6  101B               	iorwf	(stoa@cp+1)^0,w,c
  6934   0033D8  A4D8               	btfss	status,2,c
  6935   0033DA  EFF1  F019         	goto	u8181
  6936   0033DE  EFF3  F019         	goto	u8180
  6937   0033E2                     u8181:
  6938   0033E2  EFF7  F019         	goto	l6495
  6939   0033E6                     u8180:
  6940   0033E6                     
  6941                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  6942   0033E6  0EC3               	movlw	low STR_29
  6943   0033E8  6E1A               	movwf	stoa@cp^0,c
  6944   0033EA  0EFF               	movlw	high STR_29
  6945   0033EC  6E1B               	movwf	(stoa@cp+1)^0,c
  6946   0033EE                     l6495:
  6947                           
  6948                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  6949   0033EE  0E00               	movlw	0
  6950   0033F0  6E1D               	movwf	(stoa@l+1)^0,c
  6951   0033F2  0E00               	movlw	0
  6952   0033F4  6E1C               	movwf	stoa@l^0,c
  6953   0033F6  EFFF  F019         	goto	l6499
  6954   0033FA                     l6497:
  6955   0033FA  4A1C               	infsnz	stoa@l^0,f,c
  6956   0033FC  2A1D               	incf	(stoa@l+1)^0,f,c
  6957   0033FE                     l6499:
  6958   0033FE  501C               	movf	stoa@l^0,w,c
  6959   003400  241A               	addwf	stoa@cp^0,w,c
  6960   003402  6E14               	movwf	??_stoa^0,c
  6961   003404  501D               	movf	(stoa@l+1)^0,w,c
  6962   003406  201B               	addwfc	(stoa@cp+1)^0,w,c
  6963   003408  6E15               	movwf	(??_stoa+1)^0,c
  6964   00340A  C014  FFF6         	movff	??_stoa,tblptrl
  6965   00340E  C015  FFF7         	movff	??_stoa+1,tblptrh
  6966   003412  0E00               	movlw	low (__mediumconst shr (0+16))
  6967   003414  6EF8               	movwf	tblptru,c
  6968   003416  0E0F               	movlw	(high __ramtop+-1)
  6969   003418  64F7               	cpfsgt	tblptrh,c
  6970   00341A  D003               	bra	u8197
  6971   00341C  0008               	tblrd		*
  6972   00341E  50F5               	movf	tablat,w,c
  6973   003420  D005               	bra	u8190
  6974   003422                     u8197:
  6975   003422  CFF6 FFE1          	movff	tblptrl,fsr1l
  6976   003426  CFF7 FFE2          	movff	tblptrh,fsr1h
  6977   00342A  50E7               	movf	indf1,w,c
  6978   00342C                     u8190:
  6979   00342C  0900               	iorlw	0
  6980   00342E  A4D8               	btfss	status,2,c
  6981   003430  EF1C  F01A         	goto	u8201
  6982   003434  EF1E  F01A         	goto	u8200
  6983   003438                     u8201:
  6984   003438  EFFD  F019         	goto	l6497
  6985   00343C                     u8200:
  6986   00343C                     
  6987                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  6988   00343C  BE58               	btfsc	(_prec+1)^0,7,c
  6989   00343E  EF23  F01A         	goto	u8211
  6990   003442  EF25  F01A         	goto	u8210
  6991   003446                     u8211:
  6992   003446  EF38  F01A         	goto	l1337
  6993   00344A                     u8210:
  6994   00344A  501C               	movf	stoa@l^0,w,c
  6995   00344C  5C57               	subwf	_prec^0,w,c
  6996   00344E  5058               	movf	(_prec+1)^0,w,c
  6997   003450  0A80               	xorlw	128
  6998   003452  6E14               	movwf	??_stoa^0,c
  6999   003454  501D               	movf	(stoa@l+1)^0,w,c
  7000   003456  0A80               	xorlw	128
  7001   003458  5814               	subwfb	??_stoa^0,w,c
  7002   00345A  B0D8               	btfsc	status,0,c
  7003   00345C  EF32  F01A         	goto	u8221
  7004   003460  EF34  F01A         	goto	u8220
  7005   003464                     u8221:
  7006   003464  EF38  F01A         	goto	l1337
  7007   003468                     u8220:
  7008   003468                     
  7009                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  7010   003468  C057  F01C         	movff	_prec,stoa@l
  7011   00346C  C058  F01D         	movff	_prec+1,stoa@l+1
  7012   003470                     l1337:
  7013                           
  7014                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7015   003470  C01C  F016         	movff	stoa@l,stoa@p
  7016   003474  C01D  F017         	movff	stoa@l+1,stoa@p+1
  7017                           
  7018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  7019   003478  C055  F018         	movff	_width,stoa@w
  7020   00347C  C056  F019         	movff	_width+1,stoa@w+1
  7021                           
  7022                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  7023   003480  B059               	btfsc	_flags^0,0,c
  7024   003482  EF45  F01A         	goto	u8231
  7025   003486  EF47  F01A         	goto	u8230
  7026   00348A                     u8231:
  7027   00348A  EF83  F01A         	goto	l6519
  7028   00348E                     u8230:
  7029   00348E  EF55  F01A         	goto	l6513
  7030   003492                     l6509:
  7031                           
  7032                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  7033   003492  0E00               	movlw	0
  7034   003494  6E08               	movwf	(fputc@c+1)^0,c
  7035   003496  0E20               	movlw	32
  7036   003498  6E07               	movwf	fputc@c^0,c
  7037   00349A  C010  F009         	movff	stoa@fp,fputc@fp
  7038   00349E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7039   0034A2  ECCA  F01F         	call	_fputc	;wreg free
  7040   0034A6                     
  7041                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  7042   0034A6  4A1C               	infsnz	stoa@l^0,f,c
  7043   0034A8  2A1D               	incf	(stoa@l+1)^0,f,c
  7044   0034AA                     l6513:
  7045                           
  7046                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  7047   0034AA  5018               	movf	stoa@w^0,w,c
  7048   0034AC  5C1C               	subwf	stoa@l^0,w,c
  7049   0034AE  501D               	movf	(stoa@l+1)^0,w,c
  7050   0034B0  0A80               	xorlw	128
  7051   0034B2  6E14               	movwf	??_stoa^0,c
  7052   0034B4  5019               	movf	(stoa@w+1)^0,w,c
  7053   0034B6  0A80               	xorlw	128
  7054   0034B8  5814               	subwfb	??_stoa^0,w,c
  7055   0034BA  A0D8               	btfss	status,0,c
  7056   0034BC  EF62  F01A         	goto	u8241
  7057   0034C0  EF64  F01A         	goto	u8240
  7058   0034C4                     u8241:
  7059   0034C4  EF49  F01A         	goto	l6509
  7060   0034C8                     u8240:
  7061   0034C8  EF83  F01A         	goto	l6519
  7062   0034CC                     l6515:
  7063                           
  7064                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  7065   0034CC  C01A  FFF6         	movff	stoa@cp,tblptrl
  7066   0034D0  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7067   0034D4  0E00               	movlw	low (__mediumconst shr (0+16))
  7068   0034D6  6EF8               	movwf	tblptru,c
  7069   0034D8  0E0F               	movlw	(high __ramtop+-1)
  7070   0034DA  64F7               	cpfsgt	tblptrh,c
  7071   0034DC  D003               	bra	u8257
  7072   0034DE  0008               	tblrd		*
  7073   0034E0  50F5               	movf	tablat,w,c
  7074   0034E2  D005               	bra	u8250
  7075   0034E4                     u8257:
  7076   0034E4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7077   0034E8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7078   0034EC  50E7               	movf	indf1,w,c
  7079   0034EE                     u8250:
  7080   0034EE  6E14               	movwf	??_stoa^0,c
  7081   0034F0  5014               	movf	??_stoa^0,w,c
  7082   0034F2  6E07               	movwf	fputc@c^0,c
  7083   0034F4  6A08               	clrf	(fputc@c+1)^0,c
  7084   0034F6  C010  F009         	movff	stoa@fp,fputc@fp
  7085   0034FA  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7086   0034FE  ECCA  F01F         	call	_fputc	;wreg free
  7087   003502                     
  7088                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  7089   003502  4A1A               	infsnz	stoa@cp^0,f,c
  7090   003504  2A1B               	incf	(stoa@cp+1)^0,f,c
  7091   003506                     l6519:
  7092                           
  7093                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  7094   003506  0616               	decf	stoa@p^0,f,c
  7095   003508  A0D8               	btfss	status,0,c
  7096   00350A  0617               	decf	(stoa@p+1)^0,f,c
  7097   00350C  2816               	incf	stoa@p^0,w,c
  7098   00350E  E106               	bnz	u8261
  7099   003510  2817               	incf	(stoa@p+1)^0,w,c
  7100   003512  A4D8               	btfss	status,2,c
  7101   003514  EF8E  F01A         	goto	u8261
  7102   003518  EF90  F01A         	goto	u8260
  7103   00351C                     u8261:
  7104   00351C  EF66  F01A         	goto	l6515
  7105   003520                     u8260:
  7106   003520                     
  7107                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  7108   003520  A059               	btfss	_flags^0,0,c
  7109   003522  EF95  F01A         	goto	u8271
  7110   003526  EF97  F01A         	goto	u8270
  7111   00352A                     u8271:
  7112   00352A  EFB4  F01A         	goto	l1349
  7113   00352E                     u8270:
  7114   00352E  EFA5  F01A         	goto	l6527
  7115   003532                     l6523:
  7116                           
  7117                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  7118   003532  0E00               	movlw	0
  7119   003534  6E08               	movwf	(fputc@c+1)^0,c
  7120   003536  0E20               	movlw	32
  7121   003538  6E07               	movwf	fputc@c^0,c
  7122   00353A  C010  F009         	movff	stoa@fp,fputc@fp
  7123   00353E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7124   003542  ECCA  F01F         	call	_fputc	;wreg free
  7125   003546                     
  7126                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  7127   003546  4A1C               	infsnz	stoa@l^0,f,c
  7128   003548  2A1D               	incf	(stoa@l+1)^0,f,c
  7129   00354A                     l6527:
  7130                           
  7131                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  7132   00354A  5018               	movf	stoa@w^0,w,c
  7133   00354C  5C1C               	subwf	stoa@l^0,w,c
  7134   00354E  501D               	movf	(stoa@l+1)^0,w,c
  7135   003550  0A80               	xorlw	128
  7136   003552  6E14               	movwf	??_stoa^0,c
  7137   003554  5019               	movf	(stoa@w+1)^0,w,c
  7138   003556  0A80               	xorlw	128
  7139   003558  5814               	subwfb	??_stoa^0,w,c
  7140   00355A  A0D8               	btfss	status,0,c
  7141   00355C  EFB2  F01A         	goto	u8281
  7142   003560  EFB4  F01A         	goto	u8280
  7143   003564                     u8281:
  7144   003564  EF99  F01A         	goto	l6523
  7145   003568                     u8280:
  7146   003568                     l1349:
  7147   003568  0012               	return		;funcret
  7148   00356A                     __end_of_stoa:
  7149                           	callstack 0
  7150                           
  7151 ;; *************** function _read_prec_or_width *****************
  7152 ;; Defined at:
  7153 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  7156 ;;		 -> vfprintf@cfmt(2), 
  7157 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  7158 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  c               1   13[COMRAM] unsigned char 
  7161 ;;  n               2   14[COMRAM] int 
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  2   11[COMRAM] int 
  7164 ;; Registers used:
  7165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7172 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;Total ram usage:        5 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 2
  7178 ;; This function calls:
  7179 ;;		___wmul
  7180 ;; This function is called by:
  7181 ;;		_vfpfcnvrt
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text25
  7186   004284                     __ptext25:
  7187                           	callstack 0
  7188   004284                     _read_prec_or_width:
  7189                           	callstack 24
  7190   004284                     
  7191                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  7192   004284  0E00               	movlw	0
  7193   004286  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7194   004288  0E00               	movlw	0
  7195   00428A  6E0F               	movwf	read_prec_or_width@n^0,c
  7196   00428C                     
  7197                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  7198   00428C  500C               	movf	read_prec_or_width@fmt^0,w,c
  7199   00428E  6ED9               	movwf	fsr2l,c
  7200   004290  6ADA               	clrf	fsr2h,c
  7201   004292  CFDE FFF6          	movff	postinc2,tblptrl
  7202   004296  CFDD FFF7          	movff	postdec2,tblptrh
  7203   00429A                     	if	0	;tblptru may be non-zero
  7204   00429A                     	endif
  7205   00429A                     	if	0	;tblptru may be non-zero
  7206   00429A                     	endif
  7207   00429A  0008               	tblrd		*
  7208   00429C  50F5               	movf	tablat,w,c
  7209   00429E  0A2A               	xorlw	42
  7210   0042A0  A4D8               	btfss	status,2,c
  7211   0042A2  EF55  F021         	goto	u8291
  7212   0042A6  EF57  F021         	goto	u8290
  7213   0042AA                     u8291:
  7214   0042AA  EF81  F021         	goto	l6541
  7215   0042AE                     u8290:
  7216   0042AE                     
  7217                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  7218   0042AE  500C               	movf	read_prec_or_width@fmt^0,w,c
  7219   0042B0  6ED9               	movwf	fsr2l,c
  7220   0042B2  6ADA               	clrf	fsr2h,c
  7221   0042B4  2ADE               	incf	postinc2,f,c
  7222   0042B6  0E00               	movlw	0
  7223   0042B8  22DD               	addwfc	postdec2,f,c
  7224   0042BA                     
  7225                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  7226   0042BA  500D               	movf	read_prec_or_width@ap^0,w,c
  7227   0042BC  6ED9               	movwf	fsr2l,c
  7228   0042BE  6ADA               	clrf	fsr2h,c
  7229   0042C0  0E02               	movlw	2
  7230   0042C2  26DF               	addwf	indf2,f,c
  7231   0042C4  5CDF               	subwf	indf2,w,c
  7232   0042C6  6ED9               	movwf	fsr2l,c
  7233   0042C8  6ADA               	clrf	fsr2h,c
  7234   0042CA  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  7235   0042CE  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  7236                           
  7237                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  7238   0042D2  EF94  F021         	goto	l1353
  7239   0042D6                     l6537:
  7240                           
  7241                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  7242   0042D6  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  7243   0042DA  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7244   0042DE  0E00               	movlw	0
  7245   0042E0  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7246   0042E2  0E0A               	movlw	10
  7247   0042E4  6E08               	movwf	___wmul@multiplicand^0,c
  7248   0042E6  EC03  F024         	call	___wmul	;wreg free
  7249   0042EA  500E               	movf	read_prec_or_width@c^0,w,c
  7250   0042EC  2406               	addwf	?___wmul^0,w,c
  7251   0042EE  6E0F               	movwf	read_prec_or_width@n^0,c
  7252   0042F0  0E00               	movlw	0
  7253   0042F2  2007               	addwfc	(?___wmul+1)^0,w,c
  7254   0042F4  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7255   0042F6                     
  7256                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  7257   0042F6  500C               	movf	read_prec_or_width@fmt^0,w,c
  7258   0042F8  6ED9               	movwf	fsr2l,c
  7259   0042FA  6ADA               	clrf	fsr2h,c
  7260   0042FC  2ADE               	incf	postinc2,f,c
  7261   0042FE  0E00               	movlw	0
  7262   004300  22DD               	addwfc	postdec2,f,c
  7263   004302                     l6541:
  7264                           
  7265                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  7266   004302  500C               	movf	read_prec_or_width@fmt^0,w,c
  7267   004304  6ED9               	movwf	fsr2l,c
  7268   004306  6ADA               	clrf	fsr2h,c
  7269   004308  CFDE FFF6          	movff	postinc2,tblptrl
  7270   00430C  CFDD FFF7          	movff	postdec2,tblptrh
  7271   004310                     	if	0	;tblptru may be non-zero
  7272   004310                     	endif
  7273   004310                     	if	0	;tblptru may be non-zero
  7274   004310                     	endif
  7275   004310  0008               	tblrd		*
  7276   004312  50F5               	movf	tablat,w,c
  7277   004314  0FD0               	addlw	208
  7278   004316  6E0E               	movwf	read_prec_or_width@c^0,c
  7279   004318  0E09               	movlw	9
  7280   00431A  640E               	cpfsgt	read_prec_or_width@c^0,c
  7281   00431C  EF92  F021         	goto	u8301
  7282   004320  EF94  F021         	goto	u8300
  7283   004324                     u8301:
  7284   004324  EF6B  F021         	goto	l6537
  7285   004328                     u8300:
  7286   004328                     l1353:
  7287                           
  7288                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  7289   004328  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  7290   00432C  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7291   004330  0012               	return		;funcret
  7292   004332                     __end_of_read_prec_or_width:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function ___wmul *****************
  7296 ;; Defined at:
  7297 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  multiplier      2    5[COMRAM] unsigned int 
  7300 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  product         2    9[COMRAM] unsigned int 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  2    5[COMRAM] unsigned int 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0, prodl, prodh
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;Total ram usage:        6 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_read_prec_or_width
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text26
  7327   004806                     __ptext26:
  7328                           	callstack 0
  7329   004806                     ___wmul:
  7330                           	callstack 24
  7331   004806  5006               	movf	___wmul@multiplier^0,w,c
  7332   004808  0208               	mulwf	___wmul@multiplicand^0,c
  7333   00480A  CFF3 F00A          	movff	prodl,___wmul@product
  7334   00480E  CFF4 F00B          	movff	prodh,___wmul@product+1
  7335   004812  5006               	movf	___wmul@multiplier^0,w,c
  7336   004814  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7337   004816  50F3               	movf	243,w,c
  7338   004818  260B               	addwf	(___wmul@product+1)^0,f,c
  7339   00481A  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7340   00481C  0208               	mulwf	___wmul@multiplicand^0,c
  7341   00481E  50F3               	movf	243,w,c
  7342   004820  260B               	addwf	(___wmul@product+1)^0,f,c
  7343   004822  C00A  F006         	movff	___wmul@product,?___wmul
  7344   004826  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7345   00482A  0012               	return		;funcret
  7346   00482C                     __end_of___wmul:
  7347                           	callstack 0
  7348                           
  7349 ;; *************** function _efgtoa *****************
  7350 ;; Defined at:
  7351 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  7354 ;;		 -> NULL(0), sprintf@f(12), 
  7355 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  7356 ;;  c               1   42[BANK0 ] unsigned char 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  u               4   85[BANK0 ] struct flui
  7359 ;;  g               4   79[BANK0 ] struct flui
  7360 ;;  l               4   74[BANK0 ] struct flui
  7361 ;;  h               4   70[BANK0 ] struct flui
  7362 ;;  ou              4   64[BANK0 ] struct flui
  7363 ;;  n               2   83[BANK0 ] int 
  7364 ;;  i               2   68[BANK0 ] int 
  7365 ;;  w               2   62[BANK0 ] int 
  7366 ;;  e               2   60[BANK0 ] int 
  7367 ;;  m               2   58[BANK0 ] int 
  7368 ;;  d               2   56[BANK0 ] int 
  7369 ;;  t               2   49[BANK0 ] int 
  7370 ;;  p               2   47[BANK0 ] int 
  7371 ;;  ne              2   45[BANK0 ] int 
  7372 ;;  sign            1   78[BANK0 ] unsigned char 
  7373 ;;  nmode           1   55[BANK0 ] unsigned char 
  7374 ;;  mode            1   54[BANK0 ] unsigned char 
  7375 ;;  pp              1   53[BANK0 ] unsigned char 
  7376 ;;  esign           1    0        unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7386 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7387 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7388 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;Total ram usage:       53 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 5
  7393 ;; This function calls:
  7394 ;;		___fladd
  7395 ;;		___fldiv
  7396 ;;		___fleq
  7397 ;;		___flge
  7398 ;;		___flmul
  7399 ;;		___flneg
  7400 ;;		___flsub
  7401 ;;		___fltol
  7402 ;;		___fpclassifyf
  7403 ;;		_floorf
  7404 ;;		_labs
  7405 ;;		_memcpy
  7406 ;;		_pad
  7407 ;;		_strcpy
  7408 ;; This function is called by:
  7409 ;;		_vfpfcnvrt
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text27
  7414   000118                     __ptext27:
  7415                           	callstack 0
  7416   000118                     _efgtoa:
  7417                           	callstack 21
  7418   000118                     
  7419                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  7420   000118  0E00               	movlw	0
  7421   00011A  0100               	movlb	0	; () banked
  7422   00011C  6FAE               	movwf	efgtoa@sign& (0+255),b
  7423   00011E                     
  7424                           ; BSR set to: 0
  7425                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7426   00011E  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  7427   000122  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  7428   000126  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  7429   00012A  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  7430   00012E                     
  7431                           ; BSR set to: 0
  7432                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  7433   00012E  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7434   000130  EF9E  F000         	goto	u7860
  7435   000134  EF9C  F000         	goto	u7861
  7436   000138                     u7861:
  7437   000138  EFB2  F000         	goto	l6279
  7438   00013C                     u7860:
  7439   00013C                     
  7440                           ; BSR set to: 0
  7441                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  7442   00013C  0E01               	movlw	1
  7443   00013E  6FAE               	movwf	efgtoa@sign& (0+255),b
  7444   000140                     
  7445                           ; BSR set to: 0
  7446                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  7447   000140  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  7448   000144  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  7449   000148  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  7450   00014C  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  7451   000150  EC67  F023         	call	___flneg	;wreg free
  7452   000154  C080  F0AF         	movff	?___flneg,efgtoa@g
  7453   000158  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  7454   00015C  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  7455   000160  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  7456   000164                     l6279:
  7457                           
  7458                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7459   000164  0E00               	movlw	0
  7460   000166  0100               	movlb	0	; () banked
  7461   000168  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7462   00016A  0E00               	movlw	0
  7463   00016C  6FB3               	movwf	efgtoa@n& (0+255),b
  7464   00016E                     
  7465                           ; BSR set to: 0
  7466                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  7467   00016E  C055  F09E         	movff	_width,efgtoa@w
  7468   000172  C056  F09F         	movff	_width+1,efgtoa@w+1
  7469   000176                     
  7470                           ; BSR set to: 0
  7471                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7472   000176  51AE               	movf	efgtoa@sign& (0+255),w,b
  7473   000178  B4D8               	btfsc	status,2,c
  7474   00017A  EFC1  F000         	goto	u7871
  7475   00017E  EFC3  F000         	goto	u7870
  7476   000182                     u7871:
  7477   000182  EFD7  F000         	goto	l6293
  7478   000186                     u7870:
  7479   000186                     
  7480                           ; BSR set to: 0
  7481                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  7482   000186  51AE               	movf	efgtoa@sign& (0+255),w,b
  7483   000188  A4D8               	btfss	status,2,c
  7484   00018A  EFC9  F000         	goto	u7881
  7485   00018E  EFCB  F000         	goto	u7880
  7486   000192                     u7881:
  7487   000192  EFD1  F000         	goto	l6289
  7488   000196                     u7880:
  7489   000196                     
  7490                           ; BSR set to: 0
  7491   000196  0E00               	movlw	0
  7492   000198  6F94               	movwf	(_efgtoa$3669+1)& (0+255),b
  7493   00019A  0E2B               	movlw	43
  7494   00019C  6F93               	movwf	_efgtoa$3669& (0+255),b
  7495   00019E  EFD5  F000         	goto	l6291
  7496   0001A2                     l6289:
  7497                           
  7498                           ; BSR set to: 0
  7499   0001A2  0E00               	movlw	0
  7500   0001A4  6F94               	movwf	(_efgtoa$3669+1)& (0+255),b
  7501   0001A6  0E2D               	movlw	45
  7502   0001A8  6F93               	movwf	_efgtoa$3669& (0+255),b
  7503   0001AA                     l6291:
  7504                           
  7505                           ; BSR set to: 0
  7506   0001AA  C093  F0AE         	movff	_efgtoa$3669,efgtoa@sign
  7507   0001AE                     l6293:
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  7511   0001AE  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7512   0001B2  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7513   0001B6  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7514   0001BA  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7515   0001BE  ECDE  F01E         	call	___fpclassifyf	;wreg free
  7516   0001C2  0406               	decf	?___fpclassifyf^0,w,c
  7517   0001C4  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7518   0001C6  A4D8               	btfss	status,2,c
  7519   0001C8  EFE8  F000         	goto	u7891
  7520   0001CC  EFEA  F000         	goto	u7890
  7521   0001D0                     u7891:
  7522   0001D0  EF1D  F001         	goto	l6311
  7523   0001D4                     u7890:
  7524   0001D4                     
  7525                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  7526   0001D4  0100               	movlb	0	; () banked
  7527   0001D6  51AE               	movf	efgtoa@sign& (0+255),w,b
  7528   0001D8  B4D8               	btfsc	status,2,c
  7529   0001DA  EFF1  F000         	goto	u7901
  7530   0001DE  EFF3  F000         	goto	u7900
  7531   0001E2                     u7901:
  7532   0001E2  EFFC  F000         	goto	l6303
  7533   0001E6                     u7900:
  7534   0001E6                     
  7535                           ; BSR set to: 0
  7536                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  7537   0001E6  C0AE  F200         	movff	efgtoa@sign,_dbuf
  7538   0001EA                     
  7539                           ; BSR set to: 0
  7540                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  7541   0001EA  079E               	decf	efgtoa@w& (0+255),f,b
  7542   0001EC  A0D8               	btfss	status,0,c
  7543   0001EE  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7544   0001F0                     
  7545                           ; BSR set to: 0
  7546                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7547   0001F0  0E00               	movlw	0
  7548   0001F2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7549   0001F4  0E01               	movlw	1
  7550   0001F6  6FB3               	movwf	efgtoa@n& (0+255),b
  7551   0001F8                     l6303:
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  7555   0001F8  0E00               	movlw	low _dbuf
  7556   0001FA  25B3               	addwf	efgtoa@n& (0+255),w,b
  7557   0001FC  6E06               	movwf	strcpy@dest^0,c
  7558   0001FE  0E02               	movlw	high _dbuf
  7559   000200  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7560   000202  6E07               	movwf	(strcpy@dest+1)^0,c
  7561   000204  0EEA               	movlw	low STR_23
  7562   000206  6E08               	movwf	strcpy@src^0,c
  7563   000208  0EFF               	movlw	high STR_23
  7564   00020A  6E09               	movwf	(strcpy@src+1)^0,c
  7565   00020C  EC84  F023         	call	_strcpy	;wreg free
  7566   000210                     l6305:
  7567                           
  7568                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7569   000210  0100               	movlb	0	; () banked
  7570   000212  0EFD               	movlw	253
  7571   000214  279E               	addwf	efgtoa@w& (0+255),f,b
  7572   000216  0EFF               	movlw	255
  7573   000218  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7574   00021A                     
  7575                           ; BSR set to: 0
  7576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  7577   00021A  C084  F017         	movff	efgtoa@fp,pad@fp
  7578   00021E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  7579   000222  0E00               	movlw	low _dbuf
  7580   000224  6E19               	movwf	pad@buf^0,c
  7581   000226  0E02               	movlw	high _dbuf
  7582   000228  6E1A               	movwf	(pad@buf+1)^0,c
  7583   00022A  C09E  F01B         	movff	efgtoa@w,pad@p
  7584   00022E  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  7585   000232  ECEE  F021         	call	_pad	;wreg free
  7586   000236  EF88  F005         	goto	l1288
  7587   00023A                     l6311:
  7588                           
  7589                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  7590   00023A  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7591   00023E  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7592   000242  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7593   000246  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7594   00024A  ECDE  F01E         	call	___fpclassifyf	;wreg free
  7595   00024E  5006               	movf	?___fpclassifyf^0,w,c
  7596   000250  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7597   000252  A4D8               	btfss	status,2,c
  7598   000254  EF2E  F001         	goto	u7911
  7599   000258  EF30  F001         	goto	u7910
  7600   00025C                     u7911:
  7601   00025C  EF50  F001         	goto	l6329
  7602   000260                     u7910:
  7603   000260                     
  7604                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  7605   000260  0100               	movlb	0	; () banked
  7606   000262  51AE               	movf	efgtoa@sign& (0+255),w,b
  7607   000264  B4D8               	btfsc	status,2,c
  7608   000266  EF37  F001         	goto	u7921
  7609   00026A  EF39  F001         	goto	u7920
  7610   00026E                     u7921:
  7611   00026E  EF42  F001         	goto	l6321
  7612   000272                     u7920:
  7613   000272                     
  7614                           ; BSR set to: 0
  7615                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  7616   000272  C0AE  F200         	movff	efgtoa@sign,_dbuf
  7617   000276                     
  7618                           ; BSR set to: 0
  7619                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  7620   000276  079E               	decf	efgtoa@w& (0+255),f,b
  7621   000278  A0D8               	btfss	status,0,c
  7622   00027A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7623   00027C                     
  7624                           ; BSR set to: 0
  7625                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7626   00027C  0E00               	movlw	0
  7627   00027E  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7628   000280  0E01               	movlw	1
  7629   000282  6FB3               	movwf	efgtoa@n& (0+255),b
  7630   000284                     l6321:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  7634   000284  0E00               	movlw	low _dbuf
  7635   000286  25B3               	addwf	efgtoa@n& (0+255),w,b
  7636   000288  6E06               	movwf	strcpy@dest^0,c
  7637   00028A  0E02               	movlw	high _dbuf
  7638   00028C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7639   00028E  6E07               	movwf	(strcpy@dest+1)^0,c
  7640   000290  0EEE               	movlw	low STR_26
  7641   000292  6E08               	movwf	strcpy@src^0,c
  7642   000294  0EFF               	movlw	high STR_26
  7643   000296  6E09               	movwf	(strcpy@src+1)^0,c
  7644   000298  EC84  F023         	call	_strcpy	;wreg free
  7645   00029C  EF08  F001         	goto	l6305
  7646   0002A0                     l6329:
  7647                           
  7648                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  7649   0002A0  0E00               	movlw	0
  7650   0002A2  0100               	movlb	0	; () banked
  7651   0002A4  6FB5               	movwf	efgtoa@u& (0+255),b
  7652   0002A6  0E00               	movlw	0
  7653   0002A8  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  7654   0002AA  0E80               	movlw	128
  7655   0002AC  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  7656   0002AE  0E3F               	movlw	63
  7657   0002B0  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  7658                           
  7659                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7660   0002B2  0E00               	movlw	0
  7661   0002B4  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7662   0002B6  0E00               	movlw	0
  7663   0002B8  6F9C               	movwf	efgtoa@e& (0+255),b
  7664   0002BA                     
  7665                           ; BSR set to: 0
  7666                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  7667   0002BA  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  7668   0002BE  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  7669   0002C2  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  7670   0002C6  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  7671   0002CA  0E00               	movlw	0
  7672   0002CC  6E0A               	movwf	___fleq@ff2^0,c
  7673   0002CE  0E00               	movlw	0
  7674   0002D0  6E0B               	movwf	(___fleq@ff2+1)^0,c
  7675   0002D2  0E00               	movlw	0
  7676   0002D4  6E0C               	movwf	(___fleq@ff2+2)^0,c
  7677   0002D6  0E00               	movlw	0
  7678   0002D8  6E0D               	movwf	(___fleq@ff2+3)^0,c
  7679   0002DA  EC99  F021         	call	___fleq	;wreg free
  7680   0002DE  B0D8               	btfsc	status,0,c
  7681   0002E0  EF74  F001         	goto	u7931
  7682   0002E4  EF76  F001         	goto	u7930
  7683   0002E8                     u7931:
  7684   0002E8  EF55  F002         	goto	l1291
  7685   0002EC                     u7930:
  7686   0002EC  EF83  F001         	goto	l6337
  7687   0002F0                     l1293:
  7688                           
  7689                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7690   0002F0  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  7691   0002F4  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  7692   0002F8  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  7693   0002FC  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  7694   000300                     
  7695                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7696   000300  0100               	movlb	0	; () banked
  7697   000302  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  7698   000304  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7699   000306                     l6337:
  7700                           
  7701                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7702   000306  C0B5  F014         	movff	efgtoa@u,___flmul@b
  7703   00030A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  7704   00030E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  7705   000312  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  7706   000316  0E00               	movlw	0
  7707   000318  6E18               	movwf	___flmul@a^0,c
  7708   00031A  0E00               	movlw	0
  7709   00031C  6E19               	movwf	(___flmul@a+1)^0,c
  7710   00031E  0E20               	movlw	32
  7711   000320  6E1A               	movwf	(___flmul@a+2)^0,c
  7712   000322  0E41               	movlw	65
  7713   000324  6E1B               	movwf	(___flmul@a+3)^0,c
  7714   000326  EC6F  F00A         	call	___flmul	;wreg free
  7715   00032A  C014  F0A0         	movff	?___flmul,efgtoa@ou
  7716   00032E  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  7717   000332  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  7718   000336  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  7719   00033A  0100               	movlb	0	; () banked
  7720   00033C  51A0               	movf	efgtoa@ou& (0+255),w,b
  7721   00033E  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7722   000340  6E06               	movwf	labs@a^0,c
  7723   000342  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  7724   000344  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7725   000346  6E07               	movwf	(labs@a+1)^0,c
  7726   000348  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  7727   00034A  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7728   00034C  6E08               	movwf	(labs@a+2)^0,c
  7729   00034E  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  7730   000350  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7731   000352  6E09               	movwf	(labs@a+3)^0,c
  7732   000354  EC3D  F022         	call	_labs	;wreg free
  7733   000358  BE09               	btfsc	(?_labs+3)^0,7,c
  7734   00035A  EFBA  F001         	goto	u7941
  7735   00035E  5009               	movf	(?_labs+3)^0,w,c
  7736   000360  1008               	iorwf	(?_labs+2)^0,w,c
  7737   000362  1007               	iorwf	(?_labs+1)^0,w,c
  7738   000364  E109               	bnz	u7940
  7739   000366  0E02               	movlw	2
  7740   000368  5C06               	subwf	?_labs^0,w,c
  7741   00036A  A0D8               	btfss	status,0,c
  7742   00036C  EFBA  F001         	goto	u7941
  7743   000370  EFBC  F001         	goto	u7940
  7744   000374                     u7941:
  7745   000374  EF78  F001         	goto	l1293
  7746   000378                     u7940:
  7747   000378  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  7748   00037C  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  7749   000380  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  7750   000384  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  7751   000388  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  7752   00038C  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  7753   000390  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  7754   000394  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  7755   000398  ECDB  F01D         	call	___flge	;wreg free
  7756   00039C  A0D8               	btfss	status,0,c
  7757   00039E  EFD3  F001         	goto	u7951
  7758   0003A2  EFD5  F001         	goto	u7950
  7759   0003A6                     u7951:
  7760   0003A6  EF78  F001         	goto	l1293
  7761   0003AA                     u7950:
  7762   0003AA                     
  7763                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  7764   0003AA  0100               	movlb	0	; () banked
  7765   0003AC  51B5               	movf	efgtoa@u& (0+255),w,b
  7766   0003AE  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7767   0003B0  6E06               	movwf	labs@a^0,c
  7768   0003B2  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  7769   0003B4  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7770   0003B6  6E07               	movwf	(labs@a+1)^0,c
  7771   0003B8  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  7772   0003BA  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7773   0003BC  6E08               	movwf	(labs@a+2)^0,c
  7774   0003BE  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  7775   0003C0  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7776   0003C2  6E09               	movwf	(labs@a+3)^0,c
  7777   0003C4  EC3D  F022         	call	_labs	;wreg free
  7778   0003C8  BE09               	btfsc	(?_labs+3)^0,7,c
  7779   0003CA  EFF4  F001         	goto	u7960
  7780   0003CE  5009               	movf	(?_labs+3)^0,w,c
  7781   0003D0  1008               	iorwf	(?_labs+2)^0,w,c
  7782   0003D2  1007               	iorwf	(?_labs+1)^0,w,c
  7783   0003D4  E107               	bnz	u7961
  7784   0003D6  0E02               	movlw	2
  7785   0003D8  5C06               	subwf	?_labs^0,w,c
  7786   0003DA  B0D8               	btfsc	status,0,c
  7787   0003DC  EFF2  F001         	goto	u7961
  7788   0003E0  EFF4  F001         	goto	u7960
  7789   0003E4                     u7961:
  7790   0003E4  EF3C  F002         	goto	l6355
  7791   0003E8                     u7960:
  7792   0003E8                     l6345:
  7793                           
  7794                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7795   0003E8  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  7796   0003EC  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  7797   0003F0  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  7798   0003F4  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  7799                           
  7800                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  7801   0003F8  EF55  F002         	goto	l1291
  7802   0003FC                     l6347:
  7803                           
  7804                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  7805   0003FC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  7806   000400  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  7807   000404  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  7808   000408  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  7809   00040C  0E00               	movlw	0
  7810   00040E  6E31               	movwf	___fldiv@a^0,c
  7811   000410  0E00               	movlw	0
  7812   000412  6E32               	movwf	(___fldiv@a+1)^0,c
  7813   000414  0E20               	movlw	32
  7814   000416  6E33               	movwf	(___fldiv@a+2)^0,c
  7815   000418  0E41               	movlw	65
  7816   00041A  6E34               	movwf	(___fldiv@a+3)^0,c
  7817   00041C  EC70  F010         	call	___fldiv	;wreg free
  7818   000420  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  7819   000424  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  7820   000428  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  7821   00042C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  7822   000430                     
  7823                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
  7824   000430  0100               	movlb	0	; () banked
  7825   000432  079C               	decf	efgtoa@e& (0+255),f,b
  7826   000434  A0D8               	btfss	status,0,c
  7827   000436  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  7828   000438                     
  7829                           ; BSR set to: 0
  7830                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
  7831   000438  51B5               	movf	efgtoa@u& (0+255),w,b
  7832   00043A  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7833   00043C  6E06               	movwf	labs@a^0,c
  7834   00043E  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  7835   000440  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7836   000442  6E07               	movwf	(labs@a+1)^0,c
  7837   000444  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  7838   000446  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7839   000448  6E08               	movwf	(labs@a+2)^0,c
  7840   00044A  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  7841   00044C  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7842   00044E  6E09               	movwf	(labs@a+3)^0,c
  7843   000450  EC3D  F022         	call	_labs	;wreg free
  7844   000454  BE09               	btfsc	(?_labs+3)^0,7,c
  7845   000456  EF3A  F002         	goto	u7970
  7846   00045A  5009               	movf	(?_labs+3)^0,w,c
  7847   00045C  1008               	iorwf	(?_labs+2)^0,w,c
  7848   00045E  1007               	iorwf	(?_labs+1)^0,w,c
  7849   000460  E107               	bnz	u7971
  7850   000462  0E02               	movlw	2
  7851   000464  5C06               	subwf	?_labs^0,w,c
  7852   000466  B0D8               	btfsc	status,0,c
  7853   000468  EF38  F002         	goto	u7971
  7854   00046C  EF3A  F002         	goto	u7970
  7855   000470                     u7971:
  7856   000470  EF3C  F002         	goto	l6355
  7857   000474                     u7970:
  7858   000474  EFF4  F001         	goto	l6345
  7859   000478                     l6355:
  7860                           
  7861                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
  7862   000478  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  7863   00047C  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  7864   000480  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  7865   000484  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  7866   000488  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  7867   00048C  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  7868   000490  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  7869   000494  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  7870   000498  ECDB  F01D         	call	___flge	;wreg free
  7871   00049C  A0D8               	btfss	status,0,c
  7872   00049E  EF53  F002         	goto	u7981
  7873   0004A2  EF55  F002         	goto	u7980
  7874   0004A6                     u7981:
  7875   0004A6  EFFE  F001         	goto	l6347
  7876   0004AA                     u7980:
  7877   0004AA                     l1291:
  7878                           
  7879                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7880   0004AA  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  7881                           
  7882                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
  7883   0004AE  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  7884   0004B2                     
  7885                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  7886   0004B2  BE58               	btfsc	(_prec+1)^0,7,c
  7887   0004B4  EF5E  F002         	goto	u7991
  7888   0004B8  EF60  F002         	goto	u7990
  7889   0004BC                     u7991:
  7890   0004BC  EF66  F002         	goto	l6361
  7891   0004C0                     u7990:
  7892   0004C0  C057  F08F         	movff	_prec,efgtoa@p
  7893   0004C4  C058  F090         	movff	_prec+1,efgtoa@p+1
  7894   0004C8  EF6B  F002         	goto	l6363
  7895   0004CC                     l6361:
  7896   0004CC  0E00               	movlw	0
  7897   0004CE  0100               	movlb	0	; () banked
  7898   0004D0  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  7899   0004D2  0E06               	movlw	6
  7900   0004D4  6F8F               	movwf	efgtoa@p& (0+255),b
  7901   0004D6                     l6363:
  7902                           
  7903                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
  7904   0004D6  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  7905   0004DA  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  7906   0004DE                     
  7907                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
  7908   0004DE  0100               	movlb	0	; () banked
  7909   0004E0  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  7910   0004E2  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  7911   0004E4                     
  7912                           ; BSR set to: 0
  7913                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
  7914   0004E4  0E66               	movlw	102
  7915   0004E6  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  7916   0004E8  A4D8               	btfss	status,2,c
  7917   0004EA  EF79  F002         	goto	u8001
  7918   0004EE  EF7B  F002         	goto	u8000
  7919   0004F2                     u8001:
  7920   0004F2  EF9B  F002         	goto	l6377
  7921   0004F6                     u8000:
  7922   0004F6                     
  7923                           ; BSR set to: 0
  7924                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
  7925   0004F6  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7926   0004F8  EF82  F002         	goto	u8010
  7927   0004FC  EF80  F002         	goto	u8011
  7928   000500                     u8011:
  7929   000500  EF8E  F002         	goto	l6373
  7930   000504                     u8010:
  7931   000504                     
  7932                           ; BSR set to: 0
  7933                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
  7934   000504  0E00               	movlw	0
  7935   000506  6FB5               	movwf	efgtoa@u& (0+255),b
  7936   000508  0E00               	movlw	0
  7937   00050A  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  7938   00050C  0E80               	movlw	128
  7939   00050E  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  7940   000510  0E3F               	movlw	63
  7941   000512  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  7942                           
  7943                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
  7944   000514  0E00               	movlw	0
  7945   000516  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7946   000518  0E00               	movlw	0
  7947   00051A  6F9C               	movwf	efgtoa@e& (0+255),b
  7948   00051C                     l6373:
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
  7952   00051C  0E67               	movlw	103
  7953   00051E  1996               	xorwf	efgtoa@mode& (0+255),w,b
  7954   000520  B4D8               	btfsc	status,2,c
  7955   000522  EF95  F002         	goto	u8021
  7956   000526  EF97  F002         	goto	u8020
  7957   00052A                     u8021:
  7958   00052A  EF9B  F002         	goto	l6377
  7959   00052E                     u8020:
  7960   00052E                     
  7961                           ; BSR set to: 0
  7962                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
  7963   00052E  519C               	movf	efgtoa@e& (0+255),w,b
  7964   000530  279A               	addwf	efgtoa@m& (0+255),f,b
  7965   000532  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  7966   000534  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7967   000536                     l6377:
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7971   000536  0E00               	movlw	0
  7972   000538  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  7973   00053A  0E00               	movlw	0
  7974   00053C  6FA4               	movwf	efgtoa@i& (0+255),b
  7975   00053E                     
  7976                           ; BSR set to: 0
  7977                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  7978   00053E  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  7979   000542  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  7980   000546  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  7981   00054A  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  7982   00054E                     
  7983                           ; BSR set to: 0
  7984                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  7985   00054E  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  7986   000552  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  7987   000556  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  7988   00055A  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  7989                           
  7990                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  7991   00055E  EF2C  F003         	goto	l6391
  7992   000562                     l6383:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
  7996   000562  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  7997   000566  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  7998   00056A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  7999   00056E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8000   000572  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8001   000576  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8002   00057A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8003   00057E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8004   000582  EC70  F010         	call	___fldiv	;wreg free
  8005   000586  C02D  F046         	movff	?___fldiv,floorf@x
  8006   00058A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8007   00058E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8008   000592  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8009   000596  ECF9  F015         	call	_floorf	;wreg free
  8010   00059A  C046  F0AA         	movff	?_floorf,efgtoa@l
  8011   00059E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8012   0005A2  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8013   0005A6  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8014                           
  8015                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
  8016   0005AA  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8017   0005AE  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8018   0005B2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8019   0005B6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8020   0005BA  EC57  F01D         	call	___fltol	;wreg free
  8021   0005BE  C064  F098         	movff	?___fltol,efgtoa@d
  8022   0005C2  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8023   0005C6                     
  8024                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
  8025   0005C6  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8026   0005CA  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8027   0005CE  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8028   0005D2  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8029   0005D6  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8030   0005DA  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8031   0005DE  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8032   0005E2  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8033   0005E6  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8034   0005EA  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8035   0005EE  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8036   0005F2  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8037   0005F6  EC6F  F00A         	call	___flmul	;wreg free
  8038   0005FA  C014  F068         	movff	?___flmul,___flsub@a
  8039   0005FE  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8040   000602  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8041   000606  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8042   00060A  ECDF  F022         	call	___flsub	;wreg free
  8043   00060E  C064  F0A6         	movff	?___flsub,efgtoa@h
  8044   000612  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8045   000616  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8046   00061A  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8047   00061E                     
  8048                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
  8049   00061E  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8050   000622  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8051   000626  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8052   00062A  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8053   00062E  0E00               	movlw	0
  8054   000630  6E31               	movwf	___fldiv@a^0,c
  8055   000632  0E00               	movlw	0
  8056   000634  6E32               	movwf	(___fldiv@a+1)^0,c
  8057   000636  0E20               	movlw	32
  8058   000638  6E33               	movwf	(___fldiv@a+2)^0,c
  8059   00063A  0E41               	movlw	65
  8060   00063C  6E34               	movwf	(___fldiv@a+3)^0,c
  8061   00063E  EC70  F010         	call	___fldiv	;wreg free
  8062   000642  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8063   000646  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8064   00064A  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8065   00064E  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8066   000652                     
  8067                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8068   000652  0100               	movlb	0	; () banked
  8069   000654  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8070   000656  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8071   000658                     l6391:
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  8075   000658  519A               	movf	efgtoa@m& (0+255),w,b
  8076   00065A  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8077   00065C  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8078   00065E  0A80               	xorlw	128
  8079   000660  6F8B               	movwf	??_efgtoa& (0+255),b
  8080   000662  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8081   000664  0A80               	xorlw	128
  8082   000666  598B               	subwfb	??_efgtoa& (0+255),w,b
  8083   000668  A0D8               	btfss	status,0,c
  8084   00066A  EF39  F003         	goto	u8031
  8085   00066E  EF3B  F003         	goto	u8030
  8086   000672                     u8031:
  8087   000672  EFB1  F002         	goto	l6383
  8088   000676                     u8030:
  8089   000676                     
  8090                           ; BSR set to: 0
  8091                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
  8092   000676  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8093   00067A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8094   00067E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8095   000682  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8096   000686  0E00               	movlw	0
  8097   000688  6E18               	movwf	___flmul@a^0,c
  8098   00068A  0E00               	movlw	0
  8099   00068C  6E19               	movwf	(___flmul@a+1)^0,c
  8100   00068E  0EA0               	movlw	160
  8101   000690  6E1A               	movwf	(___flmul@a+2)^0,c
  8102   000692  0E40               	movlw	64
  8103   000694  6E1B               	movwf	(___flmul@a+3)^0,c
  8104   000696  EC6F  F00A         	call	___flmul	;wreg free
  8105   00069A  C014  F0AA         	movff	?___flmul,efgtoa@l
  8106   00069E  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  8107   0006A2  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  8108   0006A6  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  8109   0006AA                     
  8110                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
  8111   0006AA  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8112   0006AE  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8113   0006B2  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8114   0006B6  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8115   0006BA  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  8116   0006BE  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  8117   0006C2  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  8118   0006C6  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  8119   0006CA  ECDB  F01D         	call	___flge	;wreg free
  8120   0006CE  B0D8               	btfsc	status,0,c
  8121   0006D0  EF6C  F003         	goto	u8041
  8122   0006D4  EF6E  F003         	goto	u8040
  8123   0006D8                     u8041:
  8124   0006D8  EF79  F003         	goto	l6399
  8125   0006DC                     u8040:
  8126   0006DC                     
  8127                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
  8128   0006DC  0E00               	movlw	0
  8129   0006DE  0100               	movlb	0	; () banked
  8130   0006E0  6FAA               	movwf	efgtoa@l& (0+255),b
  8131   0006E2  0E00               	movlw	0
  8132   0006E4  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8133   0006E6  0E00               	movlw	0
  8134   0006E8  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8135   0006EA  0E00               	movlw	0
  8136   0006EC  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8137                           
  8138                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
  8139   0006EE  EFA2  F003         	goto	l6405
  8140   0006F2                     l6399:
  8141                           
  8142                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
  8143   0006F2  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
  8144   0006F6  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  8145   0006FA  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  8146   0006FE  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  8147   000702  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
  8148   000706  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  8149   00070A  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  8150   00070E  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  8151   000712  EC99  F021         	call	___fleq	;wreg free
  8152   000716  A0D8               	btfss	status,0,c
  8153   000718  EF90  F003         	goto	u8051
  8154   00071C  EF92  F003         	goto	u8050
  8155   000720                     u8051:
  8156   000720  EFA2  F003         	goto	l6405
  8157   000724                     u8050:
  8158   000724  0100               	movlb	0	; () banked
  8159   000726  B198               	btfsc	efgtoa@d& (0+255),0,b
  8160   000728  EF98  F003         	goto	u8061
  8161   00072C  EF9A  F003         	goto	u8060
  8162   000730                     u8061:
  8163   000730  EFA2  F003         	goto	l6405
  8164   000734                     u8060:
  8165   000734                     
  8166                           ; BSR set to: 0
  8167                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
  8168   000734  0E00               	movlw	0
  8169   000736  6FAA               	movwf	efgtoa@l& (0+255),b
  8170   000738  0E00               	movlw	0
  8171   00073A  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8172   00073C  0E00               	movlw	0
  8173   00073E  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8174   000740  0E00               	movlw	0
  8175   000742  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8176   000744                     l6405:
  8177                           
  8178                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
  8179   000744  C0AF  F046         	movff	efgtoa@g,___fladd@b
  8180   000748  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
  8181   00074C  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
  8182   000750  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
  8183   000754  C0AA  F04A         	movff	efgtoa@l,___fladd@a
  8184   000758  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
  8185   00075C  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
  8186   000760  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
  8187   000764  EC0E  F008         	call	___fladd	;wreg free
  8188   000768  C046  F0A6         	movff	?___fladd,efgtoa@h
  8189   00076C  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
  8190   000770  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
  8191   000774  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
  8192   000778                     
  8193                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  8194   000778  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8195   00077C  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8196   000780  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8197   000784  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8198   000788  0E00               	movlw	0
  8199   00078A  6E18               	movwf	___flmul@a^0,c
  8200   00078C  0E00               	movlw	0
  8201   00078E  6E19               	movwf	(___flmul@a+1)^0,c
  8202   000790  0E20               	movlw	32
  8203   000792  6E1A               	movwf	(___flmul@a+2)^0,c
  8204   000794  0E41               	movlw	65
  8205   000796  6E1B               	movwf	(___flmul@a+3)^0,c
  8206   000798  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8207   00079C  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8208   0007A0  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8209   0007A4  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8210   0007A8  EC6F  F00A         	call	___flmul	;wreg free
  8211   0007AC  C014  F031         	movff	?___flmul,___flge@ff2
  8212   0007B0  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  8213   0007B4  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  8214   0007B8  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  8215   0007BC  ECDB  F01D         	call	___flge	;wreg free
  8216   0007C0  A0D8               	btfss	status,0,c
  8217   0007C2  EFE5  F003         	goto	u8071
  8218   0007C6  EFE7  F003         	goto	u8070
  8219   0007CA                     u8071:
  8220   0007CA  EF10  F004         	goto	l6417
  8221   0007CE                     u8070:
  8222   0007CE                     
  8223                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
  8224   0007CE  0100               	movlb	0	; () banked
  8225   0007D0  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8226   0007D2  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8227   0007D4                     
  8228                           ; BSR set to: 0
  8229                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
  8230   0007D4  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8231   0007D8  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8232   0007DC  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8233   0007E0  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8234   0007E4  0E00               	movlw	0
  8235   0007E6  6E18               	movwf	___flmul@a^0,c
  8236   0007E8  0E00               	movlw	0
  8237   0007EA  6E19               	movwf	(___flmul@a+1)^0,c
  8238   0007EC  0E20               	movlw	32
  8239   0007EE  6E1A               	movwf	(___flmul@a+2)^0,c
  8240   0007F0  0E41               	movlw	65
  8241   0007F2  6E1B               	movwf	(___flmul@a+3)^0,c
  8242   0007F4  EC6F  F00A         	call	___flmul	;wreg free
  8243   0007F8  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8244   0007FC  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8245   000800  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8246   000804  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8247   000808                     
  8248                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
  8249   000808  0E66               	movlw	102
  8250   00080A  0100               	movlb	0	; () banked
  8251   00080C  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8252   00080E  A4D8               	btfss	status,2,c
  8253   000810  EF0C  F004         	goto	u8081
  8254   000814  EF0E  F004         	goto	u8080
  8255   000818                     u8081:
  8256   000818  EF10  F004         	goto	l6417
  8257   00081C                     u8080:
  8258   00081C                     
  8259                           ; BSR set to: 0
  8260                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
  8261   00081C  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8262   00081E  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8263   000820                     l6417:
  8264                           
  8265                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8266   000820  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8267   000824  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8268   000828  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8269   00082C  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8270   000830                     
  8271                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8272   000830  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
  8273   000834  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
  8274   000838                     
  8275                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8276   000838  0E00               	movlw	0
  8277   00083A  0100               	movlb	0	; () banked
  8278   00083C  6F95               	movwf	efgtoa@pp& (0+255),b
  8279   00083E                     
  8280                           ; BSR set to: 0
  8281                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8282   00083E  0E00               	movlw	0
  8283   000840  6F92               	movwf	(efgtoa@t+1)& (0+255),b
  8284   000842  0E00               	movlw	0
  8285   000844  6F91               	movwf	efgtoa@t& (0+255),b
  8286   000846                     
  8287                           ; BSR set to: 0
  8288                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8289   000846  0E00               	movlw	0
  8290   000848  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8291   00084A  0E00               	movlw	0
  8292   00084C  6FA4               	movwf	efgtoa@i& (0+255),b
  8293                           
  8294                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8295   00084E  EF0E  F005         	goto	l6467
  8296   000852                     l6427:
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
  8300   000852  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8301   000856  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8302   00085A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8303   00085E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8304   000862  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8305   000866  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8306   00086A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8307   00086E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8308   000872  EC70  F010         	call	___fldiv	;wreg free
  8309   000876  C02D  F046         	movff	?___fldiv,floorf@x
  8310   00087A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8311   00087E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8312   000882  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8313   000886  ECF9  F015         	call	_floorf	;wreg free
  8314   00088A  C046  F0AA         	movff	?_floorf,efgtoa@l
  8315   00088E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8316   000892  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8317   000896  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8318                           
  8319                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
  8320   00089A  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8321   00089E  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8322   0008A2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8323   0008A6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8324   0008AA  EC57  F01D         	call	___fltol	;wreg free
  8325   0008AE  0100               	movlb	0	; () banked
  8326   0008B0  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  8327   0008B2  EF66  F004         	goto	u8090
  8328   0008B6  5165               	movf	(?___fltol+1)& (0+255),w,b
  8329   0008B8  E107               	bnz	u8091
  8330   0008BA  0E0A               	movlw	10
  8331   0008BC  5D64               	subwf	?___fltol& (0+255),w,b
  8332   0008BE  B0D8               	btfsc	status,0,c
  8333   0008C0  EF64  F004         	goto	u8091
  8334   0008C4  EF66  F004         	goto	u8090
  8335   0008C8                     u8091:
  8336   0008C8  EF76  F004         	goto	l6431
  8337   0008CC                     u8090:
  8338   0008CC                     
  8339                           ; BSR set to: 0
  8340   0008CC  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8341   0008D0  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8342   0008D4  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8343   0008D8  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8344   0008DC  EC57  F01D         	call	___fltol	;wreg free
  8345   0008E0  C064  F098         	movff	?___fltol,efgtoa@d
  8346   0008E4  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8347   0008E8  EF7A  F004         	goto	l1321
  8348   0008EC                     l6431:
  8349                           
  8350                           ; BSR set to: 0
  8351   0008EC  0E00               	movlw	0
  8352   0008EE  6F99               	movwf	(efgtoa@d+1)& (0+255),b
  8353   0008F0  0E09               	movlw	9
  8354   0008F2  6F98               	movwf	efgtoa@d& (0+255),b
  8355   0008F4                     l1321:
  8356                           
  8357                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
  8358   0008F4  0100               	movlb	0	; () banked
  8359   0008F6  5195               	movf	efgtoa@pp& (0+255),w,b
  8360   0008F8  A4D8               	btfss	status,2,c
  8361   0008FA  EF81  F004         	goto	u8101
  8362   0008FE  EF83  F004         	goto	u8100
  8363   000902                     u8101:
  8364   000902  EFAB  F004         	goto	l6451
  8365   000906                     u8100:
  8366   000906                     
  8367                           ; BSR set to: 0
  8368   000906  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8369   000908  EF8A  F004         	goto	u8110
  8370   00090C  EF88  F004         	goto	u8111
  8371   000910                     u8111:
  8372   000910  EFAB  F004         	goto	l6451
  8373   000914                     u8110:
  8374   000914                     
  8375                           ; BSR set to: 0
  8376                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
  8377   000914  0E00               	movlw	low _dbuf
  8378   000916  25B3               	addwf	efgtoa@n& (0+255),w,b
  8379   000918  6ED9               	movwf	fsr2l,c
  8380   00091A  0E02               	movlw	high _dbuf
  8381   00091C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8382   00091E  6EDA               	movwf	fsr2h,c
  8383   000920  0E2E               	movlw	46
  8384   000922  6EDF               	movwf	indf2,c
  8385   000924                     
  8386                           ; BSR set to: 0
  8387   000924  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8388   000926  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8389   000928                     
  8390                           ; BSR set to: 0
  8391                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
  8392   000928  079E               	decf	efgtoa@w& (0+255),f,b
  8393   00092A  A0D8               	btfss	status,0,c
  8394   00092C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8395   00092E                     
  8396                           ; BSR set to: 0
  8397                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
  8398   00092E  0E01               	movlw	1
  8399   000930  6F95               	movwf	efgtoa@pp& (0+255),b
  8400   000932  EFAB  F004         	goto	l6451
  8401   000936                     l6443:
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
  8405   000936  0E00               	movlw	low _dbuf
  8406   000938  25B3               	addwf	efgtoa@n& (0+255),w,b
  8407   00093A  6ED9               	movwf	fsr2l,c
  8408   00093C  0E02               	movlw	high _dbuf
  8409   00093E  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8410   000940  6EDA               	movwf	fsr2h,c
  8411   000942  0E30               	movlw	48
  8412   000944  6EDF               	movwf	indf2,c
  8413   000946                     
  8414                           ; BSR set to: 0
  8415   000946  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8416   000948  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8417   00094A                     
  8418                           ; BSR set to: 0
  8419                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
  8420   00094A  079E               	decf	efgtoa@w& (0+255),f,b
  8421   00094C  A0D8               	btfss	status,0,c
  8422   00094E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8423   000950                     
  8424                           ; BSR set to: 0
  8425                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
  8426   000950  0791               	decf	efgtoa@t& (0+255),f,b
  8427   000952  A0D8               	btfss	status,0,c
  8428   000954  0792               	decf	(efgtoa@t+1)& (0+255),f,b
  8429   000956                     l6451:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
  8433   000956  5191               	movf	efgtoa@t& (0+255),w,b
  8434   000958  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8435   00095A  A4D8               	btfss	status,2,c
  8436   00095C  EFB2  F004         	goto	u8121
  8437   000960  EFB4  F004         	goto	u8120
  8438   000964                     u8121:
  8439   000964  EF9B  F004         	goto	l6443
  8440   000968                     u8120:
  8441   000968                     
  8442                           ; BSR set to: 0
  8443                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
  8444   000968  0E00               	movlw	low _dbuf
  8445   00096A  25B3               	addwf	efgtoa@n& (0+255),w,b
  8446   00096C  6ED9               	movwf	fsr2l,c
  8447   00096E  0E02               	movlw	high _dbuf
  8448   000970  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8449   000972  6EDA               	movwf	fsr2h,c
  8450   000974  5198               	movf	efgtoa@d& (0+255),w,b
  8451   000976  0F30               	addlw	48
  8452   000978  6EDF               	movwf	indf2,c
  8453   00097A                     
  8454                           ; BSR set to: 0
  8455   00097A  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8456   00097C  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8457   00097E                     
  8458                           ; BSR set to: 0
  8459                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
  8460   00097E  079E               	decf	efgtoa@w& (0+255),f,b
  8461   000980  A0D8               	btfss	status,0,c
  8462   000982  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8463   000984                     
  8464                           ; BSR set to: 0
  8465                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
  8466   000984  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8467   000988  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8468   00098C  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8469   000990  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8470   000994  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8471   000998  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8472   00099C  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8473   0009A0  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8474   0009A4  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8475   0009A8  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8476   0009AC  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8477   0009B0  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8478   0009B4  EC6F  F00A         	call	___flmul	;wreg free
  8479   0009B8  C014  F068         	movff	?___flmul,___flsub@a
  8480   0009BC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8481   0009C0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8482   0009C4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8483   0009C8  ECDF  F022         	call	___flsub	;wreg free
  8484   0009CC  C064  F0A6         	movff	?___flsub,efgtoa@h
  8485   0009D0  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8486   0009D4  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8487   0009D8  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8488   0009DC                     
  8489                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
  8490   0009DC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8491   0009E0  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8492   0009E4  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8493   0009E8  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8494   0009EC  0E00               	movlw	0
  8495   0009EE  6E31               	movwf	___fldiv@a^0,c
  8496   0009F0  0E00               	movlw	0
  8497   0009F2  6E32               	movwf	(___fldiv@a+1)^0,c
  8498   0009F4  0E20               	movlw	32
  8499   0009F6  6E33               	movwf	(___fldiv@a+2)^0,c
  8500   0009F8  0E41               	movlw	65
  8501   0009FA  6E34               	movwf	(___fldiv@a+3)^0,c
  8502   0009FC  EC70  F010         	call	___fldiv	;wreg free
  8503   000A00  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8504   000A04  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8505   000A08  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8506   000A0C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8507   000A10                     
  8508                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
  8509   000A10  0100               	movlb	0	; () banked
  8510   000A12  078D               	decf	efgtoa@ne& (0+255),f,b
  8511   000A14  A0D8               	btfss	status,0,c
  8512   000A16  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  8513   000A18                     
  8514                           ; BSR set to: 0
  8515                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8516   000A18  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8517   000A1A  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8518   000A1C                     l6467:
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8522   000A1C  519A               	movf	efgtoa@m& (0+255),w,b
  8523   000A1E  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8524   000A20  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8525   000A22  0A80               	xorlw	128
  8526   000A24  6F8B               	movwf	??_efgtoa& (0+255),b
  8527   000A26  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8528   000A28  0A80               	xorlw	128
  8529   000A2A  598B               	subwfb	??_efgtoa& (0+255),w,b
  8530   000A2C  B0D8               	btfsc	status,0,c
  8531   000A2E  EF1B  F005         	goto	u8131
  8532   000A32  EF1D  F005         	goto	u8130
  8533   000A36                     u8131:
  8534   000A36  EF2B  F005         	goto	l6471
  8535   000A3A                     u8130:
  8536   000A3A                     
  8537                           ; BSR set to: 0
  8538   000A3A  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8539   000A3C  EF29  F005         	goto	u8141
  8540   000A40  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8541   000A42  E109               	bnz	u8140
  8542   000A44  0E4B               	movlw	75
  8543   000A46  5DB3               	subwf	efgtoa@n& (0+255),w,b
  8544   000A48  A0D8               	btfss	status,0,c
  8545   000A4A  EF29  F005         	goto	u8141
  8546   000A4E  EF2B  F005         	goto	u8140
  8547   000A52                     u8141:
  8548   000A52  EF29  F004         	goto	l6427
  8549   000A56                     u8140:
  8550   000A56                     l6471:
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
  8554   000A56  0E00               	movlw	0
  8555   000A58  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8556   000A5A  0E4F               	movlw	79
  8557   000A5C  6FA4               	movwf	efgtoa@i& (0+255),b
  8558   000A5E                     
  8559                           ; BSR set to: 0
  8560                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
  8561   000A5E  0E00               	movlw	low _dbuf
  8562   000A60  25A4               	addwf	efgtoa@i& (0+255),w,b
  8563   000A62  6ED9               	movwf	fsr2l,c
  8564   000A64  0E02               	movlw	high _dbuf
  8565   000A66  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8566   000A68  6EDA               	movwf	fsr2h,c
  8567   000A6A  6ADF               	clrf	indf2,c
  8568   000A6C                     
  8569                           ; BSR set to: 0
  8570                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
  8571   000A6C  0E00               	movlw	low _dbuf
  8572   000A6E  6F8B               	movwf	??_efgtoa& (0+255),b
  8573   000A70  0E02               	movlw	high _dbuf
  8574   000A72  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
  8575   000A74  51B3               	movf	efgtoa@n& (0+255),w,b
  8576   000A76  5F8B               	subwf	??_efgtoa& (0+255),f,b
  8577   000A78  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8578   000A7A  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8579   000A7C  51A4               	movf	efgtoa@i& (0+255),w,b
  8580   000A7E  258B               	addwf	??_efgtoa& (0+255),w,b
  8581   000A80  6E06               	movwf	memcpy@d1^0,c
  8582   000A82  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8583   000A84  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8584   000A86  6E07               	movwf	(memcpy@d1+1)^0,c
  8585   000A88  0E00               	movlw	low _dbuf
  8586   000A8A  6E08               	movwf	memcpy@s1^0,c
  8587   000A8C  0E02               	movlw	high _dbuf
  8588   000A8E  6E09               	movwf	(memcpy@s1+1)^0,c
  8589   000A90  C0B3  F00A         	movff	efgtoa@n,memcpy@n
  8590   000A94  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
  8591   000A98  EC92  F022         	call	_memcpy	;wreg free
  8592   000A9C                     
  8593                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8594   000A9C  0100               	movlb	0	; () banked
  8595   000A9E  51B3               	movf	efgtoa@n& (0+255),w,b
  8596   000AA0  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8597   000AA2  6FB3               	movwf	efgtoa@n& (0+255),b
  8598   000AA4  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8599   000AA6  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8600   000AA8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8601   000AAA                     
  8602                           ; BSR set to: 0
  8603                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  8604   000AAA  51AE               	movf	efgtoa@sign& (0+255),w,b
  8605   000AAC  A4D8               	btfss	status,2,c
  8606   000AAE  EF5B  F005         	goto	u8151
  8607   000AB2  EF5E  F005         	goto	u8150
  8608   000AB6                     u8151:
  8609   000AB6  0E01               	movlw	1
  8610   000AB8  EF5F  F005         	goto	u8160
  8611   000ABC                     u8150:
  8612   000ABC  0E00               	movlw	0
  8613   000ABE                     u8160:
  8614   000ABE  6FA4               	movwf	efgtoa@i& (0+255),b
  8615   000AC0  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
  8616   000AC2                     
  8617                           ; BSR set to: 0
  8618                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8619   000AC2  51AE               	movf	efgtoa@sign& (0+255),w,b
  8620   000AC4  B4D8               	btfsc	status,2,c
  8621   000AC6  EF67  F005         	goto	u8171
  8622   000ACA  EF69  F005         	goto	u8170
  8623   000ACE                     u8171:
  8624   000ACE  EF74  F005         	goto	l6485
  8625   000AD2                     u8170:
  8626   000AD2                     
  8627                           ; BSR set to: 0
  8628                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
  8629   000AD2  07B3               	decf	efgtoa@n& (0+255),f,b
  8630   000AD4  A0D8               	btfss	status,0,c
  8631   000AD6  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
  8632   000AD8  0E00               	movlw	low _dbuf
  8633   000ADA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8634   000ADC  6ED9               	movwf	fsr2l,c
  8635   000ADE  0E02               	movlw	high _dbuf
  8636   000AE0  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8637   000AE2  6EDA               	movwf	fsr2h,c
  8638   000AE4  C0AE  FFDF         	movff	efgtoa@sign,indf2
  8639   000AE8                     l6485:
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8643   000AE8  51A4               	movf	efgtoa@i& (0+255),w,b
  8644   000AEA  5F9E               	subwf	efgtoa@w& (0+255),f,b
  8645   000AEC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8646   000AEE  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8647   000AF0                     
  8648                           ; BSR set to: 0
  8649                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
  8650   000AF0  C084  F017         	movff	efgtoa@fp,pad@fp
  8651   000AF4  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  8652   000AF8  0E00               	movlw	low _dbuf
  8653   000AFA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8654   000AFC  6E19               	movwf	pad@buf^0,c
  8655   000AFE  0E02               	movlw	high _dbuf
  8656   000B00  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8657   000B02  6E1A               	movwf	(pad@buf+1)^0,c
  8658   000B04  C09E  F01B         	movff	efgtoa@w,pad@p
  8659   000B08  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  8660   000B0C  ECEE  F021         	call	_pad	;wreg free
  8661   000B10                     l1288:
  8662   000B10  0012               	return		;funcret
  8663   000B12                     __end_of_efgtoa:
  8664                           	callstack 0
  8665                           
  8666 ;; *************** function _strcpy *****************
  8667 ;; Defined at:
  8668 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  dest            2    5[COMRAM] PTR unsigned char 
  8671 ;;		 -> dbuf(80), 
  8672 ;;  src             2    7[COMRAM] PTR const unsigned char 
  8673 ;;		 -> STR_26(4), STR_23(4), 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;  d               2    9[COMRAM] PTR unsigned char 
  8676 ;;		 -> dbuf(80), 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  2    5[COMRAM] PTR unsigned char 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;Total ram usage:        6 bytes
  8691 ;; Hardware stack levels used: 1
  8692 ;; Hardware stack levels required when called: 1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_efgtoa
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text28
  8701   004708                     __ptext28:
  8702                           	callstack 0
  8703   004708                     _strcpy:
  8704                           	callstack 24
  8705   004708  C006  F00A         	movff	strcpy@dest,strcpy@d
  8706   00470C  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
  8707   004710                     l6175:
  8708   004710  C008  FFF6         	movff	strcpy@src,tblptrl
  8709   004714  C009  FFF7         	movff	strcpy@src+1,tblptrh
  8710   004718  4A08               	infsnz	strcpy@src^0,f,c
  8711   00471A  2A09               	incf	(strcpy@src+1)^0,f,c
  8712   00471C                     	if	0	;tblptru may be non-zero
  8713   00471C                     	endif
  8714   00471C                     	if	0	;tblptru may be non-zero
  8715   00471C                     	endif
  8716   00471C  C00A  FFD9         	movff	strcpy@d,fsr2l
  8717   004720  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  8718   004724  4A0A               	infsnz	strcpy@d^0,f,c
  8719   004726  2A0B               	incf	(strcpy@d+1)^0,f,c
  8720   004728  0008               	tblrd		*
  8721   00472A  CFF5 FFDF          	movff	tablat,indf2
  8722   00472E  50DF               	movf	indf2,w,c
  8723   004730  A4D8               	btfss	status,2,c
  8724   004732  EF9D  F023         	goto	u7641
  8725   004736  EF9F  F023         	goto	u7640
  8726   00473A                     u7641:
  8727   00473A  EF88  F023         	goto	l6175
  8728   00473E                     u7640:
  8729   00473E  0012               	return		;funcret
  8730   004740                     __end_of_strcpy:
  8731                           	callstack 0
  8732                           
  8733 ;; *************** function _memcpy *****************
  8734 ;; Defined at:
  8735 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  d1              2    5[COMRAM] PTR void 
  8738 ;;		 -> dbuf(80), 
  8739 ;;  s1              2    7[COMRAM] PTR const void 
  8740 ;;		 -> dbuf(80), 
  8741 ;;  n               2    9[COMRAM] unsigned int 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8744 ;;		 -> dbuf(80), 
  8745 ;;  d               2   12[COMRAM] PTR unsigned char 
  8746 ;;		 -> dbuf(80), 
  8747 ;;  tmp             1   11[COMRAM] unsigned char 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  2    5[COMRAM] PTR void 
  8750 ;; Registers used:
  8751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8757 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;Total ram usage:       11 bytes
  8762 ;; Hardware stack levels used: 1
  8763 ;; Hardware stack levels required when called: 1
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_efgtoa
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text29
  8772   004524                     __ptext29:
  8773                           	callstack 0
  8774   004524                     _memcpy:
  8775                           	callstack 24
  8776   004524  C008  F00F         	movff	memcpy@s1,memcpy@s
  8777   004528  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  8778   00452C  C006  F00D         	movff	memcpy@d1,memcpy@d
  8779   004530  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  8780   004534  EFAC  F022         	goto	l6223
  8781   004538                     l6215:
  8782   004538  C00F  FFD9         	movff	memcpy@s,fsr2l
  8783   00453C  C010  FFDA         	movff	memcpy@s+1,fsr2h
  8784   004540  50DF               	movf	indf2,w,c
  8785   004542  6E0C               	movwf	memcpy@tmp^0,c
  8786   004544  4A0F               	infsnz	memcpy@s^0,f,c
  8787   004546  2A10               	incf	(memcpy@s+1)^0,f,c
  8788   004548  C00D  FFD9         	movff	memcpy@d,fsr2l
  8789   00454C  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  8790   004550  C00C  FFDF         	movff	memcpy@tmp,indf2
  8791   004554  4A0D               	infsnz	memcpy@d^0,f,c
  8792   004556  2A0E               	incf	(memcpy@d+1)^0,f,c
  8793   004558                     l6223:
  8794   004558  060A               	decf	memcpy@n^0,f,c
  8795   00455A  A0D8               	btfss	status,0,c
  8796   00455C  060B               	decf	(memcpy@n+1)^0,f,c
  8797   00455E  280A               	incf	memcpy@n^0,w,c
  8798   004560  E106               	bnz	u7761
  8799   004562  280B               	incf	(memcpy@n+1)^0,w,c
  8800   004564  A4D8               	btfss	status,2,c
  8801   004566  EFB7  F022         	goto	u7761
  8802   00456A  EFB9  F022         	goto	u7760
  8803   00456E                     u7761:
  8804   00456E  EF9C  F022         	goto	l6215
  8805   004572                     u7760:
  8806   004572  0012               	return		;funcret
  8807   004574                     __end_of_memcpy:
  8808                           	callstack 0
  8809                           
  8810 ;; *************** function _labs *****************
  8811 ;; Defined at:
  8812 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  a               4    5[COMRAM] long 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  4    5[COMRAM] long 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8829 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;Total ram usage:        8 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; Hardware stack levels required when called: 1
  8833 ;; This function calls:
  8834 ;;		Nothing
  8835 ;; This function is called by:
  8836 ;;		_efgtoa
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           	psect	text30
  8841   00447A                     __ptext30:
  8842                           	callstack 0
  8843   00447A                     _labs:
  8844                           	callstack 24
  8845   00447A  BE09               	btfsc	(labs@a+3)^0,7,c
  8846   00447C  EF42  F022         	goto	u7651
  8847   004480  EF44  F022         	goto	u7650
  8848   004484                     u7651:
  8849   004484  EF4E  F022         	goto	l6181
  8850   004488                     u7650:
  8851   004488  C006  F006         	movff	labs@a,?_labs
  8852   00448C  C007  F007         	movff	labs@a+1,?_labs+1
  8853   004490  C008  F008         	movff	labs@a+2,?_labs+2
  8854   004494  C009  F009         	movff	labs@a+3,?_labs+3
  8855   004498  EF67  F022         	goto	l1437
  8856   00449C                     l6181:
  8857   00449C  C006  F00A         	movff	labs@a,??_labs
  8858   0044A0  C007  F00B         	movff	labs@a+1,??_labs+1
  8859   0044A4  C008  F00C         	movff	labs@a+2,??_labs+2
  8860   0044A8  C009  F00D         	movff	labs@a+3,??_labs+3
  8861   0044AC  1E0A               	comf	??_labs^0,f,c
  8862   0044AE  1E0B               	comf	(??_labs+1)^0,f,c
  8863   0044B0  1E0C               	comf	(??_labs+2)^0,f,c
  8864   0044B2  1E0D               	comf	(??_labs+3)^0,f,c
  8865   0044B4  2A0A               	incf	??_labs^0,f,c
  8866   0044B6  0E00               	movlw	0
  8867   0044B8  220B               	addwfc	(??_labs+1)^0,f,c
  8868   0044BA  220C               	addwfc	(??_labs+2)^0,f,c
  8869   0044BC  220D               	addwfc	(??_labs+3)^0,f,c
  8870   0044BE  C00A  F006         	movff	??_labs,?_labs
  8871   0044C2  C00B  F007         	movff	??_labs+1,?_labs+1
  8872   0044C6  C00C  F008         	movff	??_labs+2,?_labs+2
  8873   0044CA  C00D  F009         	movff	??_labs+3,?_labs+3
  8874   0044CE                     l1437:
  8875   0044CE  0012               	return		;funcret
  8876   0044D0                     __end_of_labs:
  8877                           	callstack 0
  8878                           
  8879 ;; *************** function _floorf *****************
  8880 ;; Defined at:
  8881 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  x               4   69[COMRAM] float 
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;  u               4    6[BANK0 ] struct .
  8886 ;;  m               4    0[BANK0 ] unsigned long 
  8887 ;;  e               2    4[BANK0 ] int 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  4   69[COMRAM] float 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;Total ram usage:       20 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 1
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_efgtoa
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text31
  8912   002BF2                     __ptext31:
  8913                           	callstack 0
  8914   002BF2                     _floorf:
  8915                           	callstack 24
  8916   002BF2  C119  F066         	movff	floorf@F521,floorf@u
  8917   002BF6  C11A  F067         	movff	floorf@F521+1,floorf@u+1
  8918   002BFA  C11B  F068         	movff	floorf@F521+2,floorf@u+2
  8919   002BFE  C11C  F069         	movff	floorf@F521+3,floorf@u+3
  8920   002C02  C046  F066         	movff	floorf@x,floorf@u
  8921   002C06  C047  F067         	movff	floorf@x+1,floorf@u+1
  8922   002C0A  C048  F068         	movff	floorf@x+2,floorf@u+2
  8923   002C0E  C049  F069         	movff	floorf@x+3,floorf@u+3
  8924   002C12  0E81               	movlw	129
  8925   002C14  6E4A               	movwf	??_floorf^0,c
  8926   002C16  0EFF               	movlw	255
  8927   002C18  6E4B               	movwf	(??_floorf+1)^0,c
  8928   002C1A  C066  F04C         	movff	floorf@u,??_floorf+2
  8929   002C1E  C067  F04D         	movff	floorf@u+1,??_floorf+3
  8930   002C22  C068  F04E         	movff	floorf@u+2,??_floorf+4
  8931   002C26  C069  F04F         	movff	floorf@u+3,??_floorf+5
  8932   002C2A  0E18               	movlw	24
  8933   002C2C  EF1D  F016         	goto	u7660
  8934   002C30                     u7665:
  8935   002C30  90D8               	bcf	status,0,c
  8936   002C32  324F               	rrcf	(??_floorf+5)^0,f,c
  8937   002C34  324E               	rrcf	(??_floorf+4)^0,f,c
  8938   002C36  324D               	rrcf	(??_floorf+3)^0,f,c
  8939   002C38  324C               	rrcf	(??_floorf+2)^0,f,c
  8940   002C3A                     u7660:
  8941   002C3A  2EE8               	decfsz	wreg,f,c
  8942   002C3C  EF18  F016         	goto	u7665
  8943   002C40  504C               	movf	(??_floorf+2)^0,w,c
  8944   002C42  244A               	addwf	??_floorf^0,w,c
  8945   002C44  0100               	movlb	0	; () banked
  8946   002C46  6F64               	movwf	floorf@e& (0+255),b
  8947   002C48  0E00               	movlw	0
  8948   002C4A  204B               	addwfc	(??_floorf+1)^0,w,c
  8949   002C4C  6F65               	movwf	(floorf@e+1)& (0+255),b
  8950   002C4E  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  8951   002C50  EF33  F016         	goto	u7671
  8952   002C54  5165               	movf	(floorf@e+1)& (0+255),w,b
  8953   002C56  E109               	bnz	u7670
  8954   002C58  0E17               	movlw	23
  8955   002C5A  5D64               	subwf	floorf@e& (0+255),w,b
  8956   002C5C  A0D8               	btfss	status,0,c
  8957   002C5E  EF33  F016         	goto	u7671
  8958   002C62  EF35  F016         	goto	u7670
  8959   002C66                     u7671:
  8960   002C66  EF3F  F016         	goto	l6191
  8961   002C6A                     u7670:
  8962   002C6A                     l6189:
  8963                           
  8964                           ; BSR set to: 0
  8965   002C6A  C046  F046         	movff	floorf@x,?_floorf
  8966   002C6E  C047  F047         	movff	floorf@x+1,?_floorf+1
  8967   002C72  C048  F048         	movff	floorf@x+2,?_floorf+2
  8968   002C76  C049  F049         	movff	floorf@x+3,?_floorf+3
  8969   002C7A  EF03  F017         	goto	l1423
  8970   002C7E                     l6191:
  8971                           
  8972                           ; BSR set to: 0
  8973   002C7E  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  8974   002C80  EF44  F016         	goto	u7681
  8975   002C84  EF46  F016         	goto	u7680
  8976   002C88                     u7681:
  8977   002C88  EFB7  F016         	goto	l6201
  8978   002C8C                     u7680:
  8979   002C8C                     
  8980                           ; BSR set to: 0
  8981   002C8C  C064  F04A         	movff	floorf@e,??_floorf
  8982   002C90  0EFF               	movlw	255
  8983   002C92  6E4B               	movwf	(??_floorf+1)^0,c
  8984   002C94  0EFF               	movlw	255
  8985   002C96  6E4C               	movwf	(??_floorf+2)^0,c
  8986   002C98  0E7F               	movlw	127
  8987   002C9A  6E4D               	movwf	(??_floorf+3)^0,c
  8988   002C9C  0E00               	movlw	0
  8989   002C9E  6E4E               	movwf	(??_floorf+4)^0,c
  8990   002CA0                     u7695:
  8991   002CA0  664A               	tstfsz	??_floorf^0,c
  8992   002CA2  EF55  F016         	goto	u7696
  8993   002CA6  EF5D  F016         	goto	u7697
  8994   002CAA                     u7696:
  8995   002CAA  344E               	rlcf	(??_floorf+4)^0,w,c
  8996   002CAC  324E               	rrcf	(??_floorf+4)^0,f,c
  8997   002CAE  324D               	rrcf	(??_floorf+3)^0,f,c
  8998   002CB0  324C               	rrcf	(??_floorf+2)^0,f,c
  8999   002CB2  324B               	rrcf	(??_floorf+1)^0,f,c
  9000   002CB4  2E4A               	decfsz	??_floorf^0,f,c
  9001   002CB6  EF50  F016         	goto	u7695
  9002   002CBA                     u7697:
  9003   002CBA  C04B  F060         	movff	??_floorf+1,floorf@m
  9004   002CBE  C04C  F061         	movff	??_floorf+2,floorf@m+1
  9005   002CC2  C04D  F062         	movff	??_floorf+3,floorf@m+2
  9006   002CC6  C04E  F063         	movff	??_floorf+4,floorf@m+3
  9007   002CCA  0100               	movlb	0	; () banked
  9008   002CCC  5160               	movf	floorf@m& (0+255),w,b
  9009   002CCE  1566               	andwf	floorf@u& (0+255),w,b
  9010   002CD0  6E4A               	movwf	??_floorf^0,c
  9011   002CD2  5161               	movf	(floorf@m+1)& (0+255),w,b
  9012   002CD4  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9013   002CD6  6E4B               	movwf	(??_floorf+1)^0,c
  9014   002CD8  5162               	movf	(floorf@m+2)& (0+255),w,b
  9015   002CDA  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9016   002CDC  6E4C               	movwf	(??_floorf+2)^0,c
  9017   002CDE  5163               	movf	(floorf@m+3)& (0+255),w,b
  9018   002CE0  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9019   002CE2  6E4D               	movwf	(??_floorf+3)^0,c
  9020   002CE4  504A               	movf	??_floorf^0,w,c
  9021   002CE6  104B               	iorwf	(??_floorf+1)^0,w,c
  9022   002CE8  104C               	iorwf	(??_floorf+2)^0,w,c
  9023   002CEA  104D               	iorwf	(??_floorf+3)^0,w,c
  9024   002CEC  A4D8               	btfss	status,2,c
  9025   002CEE  EF7B  F016         	goto	u7701
  9026   002CF2  EF7D  F016         	goto	u7700
  9027   002CF6                     u7701:
  9028   002CF6  EF7F  F016         	goto	l6197
  9029   002CFA                     u7700:
  9030   002CFA  EF35  F016         	goto	l6189
  9031   002CFE                     l6197:
  9032                           
  9033                           ; BSR set to: 0
  9034   002CFE  C066  F04A         	movff	floorf@u,??_floorf
  9035   002D02  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9036   002D06  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9037   002D0A  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9038   002D0E  0E20               	movlw	32
  9039   002D10  EF8F  F016         	goto	u7710
  9040   002D14                     u7715:
  9041   002D14  90D8               	bcf	status,0,c
  9042   002D16  324D               	rrcf	(??_floorf+3)^0,f,c
  9043   002D18  324C               	rrcf	(??_floorf+2)^0,f,c
  9044   002D1A  324B               	rrcf	(??_floorf+1)^0,f,c
  9045   002D1C  324A               	rrcf	??_floorf^0,f,c
  9046   002D1E                     u7710:
  9047   002D1E  2EE8               	decfsz	wreg,f,c
  9048   002D20  EF8A  F016         	goto	u7715
  9049   002D24  504A               	movf	??_floorf^0,w,c
  9050   002D26  104B               	iorwf	(??_floorf+1)^0,w,c
  9051   002D28  104C               	iorwf	(??_floorf+2)^0,w,c
  9052   002D2A  104D               	iorwf	(??_floorf+3)^0,w,c
  9053   002D2C  B4D8               	btfsc	status,2,c
  9054   002D2E  EF9B  F016         	goto	u7721
  9055   002D32  EF9D  F016         	goto	u7720
  9056   002D36                     u7721:
  9057   002D36  EFA5  F016         	goto	l1426
  9058   002D3A                     u7720:
  9059   002D3A                     
  9060                           ; BSR set to: 0
  9061   002D3A  5160               	movf	floorf@m& (0+255),w,b
  9062   002D3C  2766               	addwf	floorf@u& (0+255),f,b
  9063   002D3E  5161               	movf	(floorf@m+1)& (0+255),w,b
  9064   002D40  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9065   002D42  5162               	movf	(floorf@m+2)& (0+255),w,b
  9066   002D44  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9067   002D46  5163               	movf	(floorf@m+3)& (0+255),w,b
  9068   002D48  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9069   002D4A                     l1426:
  9070                           
  9071                           ; BSR set to: 0
  9072   002D4A  1D60               	comf	floorf@m& (0+255),w,b
  9073   002D4C  6E4A               	movwf	??_floorf^0,c
  9074   002D4E  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9075   002D50  6E4B               	movwf	(??_floorf+1)^0,c
  9076   002D52  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9077   002D54  6E4C               	movwf	(??_floorf+2)^0,c
  9078   002D56  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9079   002D58  6E4D               	movwf	(??_floorf+3)^0,c
  9080   002D5A  504A               	movf	??_floorf^0,w,c
  9081   002D5C  1766               	andwf	floorf@u& (0+255),f,b
  9082   002D5E  504B               	movf	(??_floorf+1)^0,w,c
  9083   002D60  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9084   002D62  504C               	movf	(??_floorf+2)^0,w,c
  9085   002D64  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9086   002D66  504D               	movf	(??_floorf+3)^0,w,c
  9087   002D68  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9088   002D6A  EFFB  F016         	goto	l6209
  9089   002D6E                     l6201:
  9090                           
  9091                           ; BSR set to: 0
  9092   002D6E  C066  F04A         	movff	floorf@u,??_floorf
  9093   002D72  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9094   002D76  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9095   002D7A  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9096   002D7E  0E20               	movlw	32
  9097   002D80  EFC7  F016         	goto	u7730
  9098   002D84                     u7735:
  9099   002D84  90D8               	bcf	status,0,c
  9100   002D86  324D               	rrcf	(??_floorf+3)^0,f,c
  9101   002D88  324C               	rrcf	(??_floorf+2)^0,f,c
  9102   002D8A  324B               	rrcf	(??_floorf+1)^0,f,c
  9103   002D8C  324A               	rrcf	??_floorf^0,f,c
  9104   002D8E                     u7730:
  9105   002D8E  2EE8               	decfsz	wreg,f,c
  9106   002D90  EFC2  F016         	goto	u7735
  9107   002D94  504A               	movf	??_floorf^0,w,c
  9108   002D96  104B               	iorwf	(??_floorf+1)^0,w,c
  9109   002D98  104C               	iorwf	(??_floorf+2)^0,w,c
  9110   002D9A  104D               	iorwf	(??_floorf+3)^0,w,c
  9111   002D9C  A4D8               	btfss	status,2,c
  9112   002D9E  EFD3  F016         	goto	u7741
  9113   002DA2  EFD5  F016         	goto	u7740
  9114   002DA6                     u7741:
  9115   002DA6  EFDF  F016         	goto	l6205
  9116   002DAA                     u7740:
  9117   002DAA                     
  9118                           ; BSR set to: 0
  9119   002DAA  0E00               	movlw	0
  9120   002DAC  6F66               	movwf	floorf@u& (0+255),b
  9121   002DAE  0E00               	movlw	0
  9122   002DB0  6F67               	movwf	(floorf@u+1)& (0+255),b
  9123   002DB2  0E00               	movlw	0
  9124   002DB4  6F68               	movwf	(floorf@u+2)& (0+255),b
  9125   002DB6  0E00               	movlw	0
  9126   002DB8  6F69               	movwf	(floorf@u+3)& (0+255),b
  9127   002DBA  EFFB  F016         	goto	l6209
  9128   002DBE                     l6205:
  9129                           
  9130                           ; BSR set to: 0
  9131   002DBE  90D8               	bcf	status,0,c
  9132   002DC0  3566               	rlcf	floorf@u& (0+255),w,b
  9133   002DC2  6E4A               	movwf	??_floorf^0,c
  9134   002DC4  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9135   002DC6  6E4B               	movwf	(??_floorf+1)^0,c
  9136   002DC8  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9137   002DCA  6E4C               	movwf	(??_floorf+2)^0,c
  9138   002DCC  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9139   002DCE  6E4D               	movwf	(??_floorf+3)^0,c
  9140   002DD0  504A               	movf	??_floorf^0,w,c
  9141   002DD2  104B               	iorwf	(??_floorf+1)^0,w,c
  9142   002DD4  104C               	iorwf	(??_floorf+2)^0,w,c
  9143   002DD6  104D               	iorwf	(??_floorf+3)^0,w,c
  9144   002DD8  B4D8               	btfsc	status,2,c
  9145   002DDA  EFF1  F016         	goto	u7751
  9146   002DDE  EFF3  F016         	goto	u7750
  9147   002DE2                     u7751:
  9148   002DE2  EFFB  F016         	goto	l6209
  9149   002DE6                     u7750:
  9150   002DE6                     
  9151                           ; BSR set to: 0
  9152   002DE6  0E00               	movlw	0
  9153   002DE8  6F66               	movwf	floorf@u& (0+255),b
  9154   002DEA  0E00               	movlw	0
  9155   002DEC  6F67               	movwf	(floorf@u+1)& (0+255),b
  9156   002DEE  0E80               	movlw	128
  9157   002DF0  6F68               	movwf	(floorf@u+2)& (0+255),b
  9158   002DF2  0EBF               	movlw	191
  9159   002DF4  6F69               	movwf	(floorf@u+3)& (0+255),b
  9160   002DF6                     l6209:
  9161                           
  9162                           ; BSR set to: 0
  9163   002DF6  C066  F046         	movff	floorf@u,?_floorf
  9164   002DFA  C067  F047         	movff	floorf@u+1,?_floorf+1
  9165   002DFE  C068  F048         	movff	floorf@u+2,?_floorf+2
  9166   002E02  C069  F049         	movff	floorf@u+3,?_floorf+3
  9167   002E06                     l1423:
  9168                           
  9169                           ; BSR set to: 0
  9170   002E06  0012               	return		;funcret
  9171   002E08                     __end_of_floorf:
  9172                           	callstack 0
  9173                           
  9174 ;; *************** function ___fpclassifyf *****************
  9175 ;; Defined at:
  9176 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  x               4    5[COMRAM] float 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  u               4   15[COMRAM] struct .
  9181 ;;  e               2   13[COMRAM] int 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  2    5[COMRAM] int 
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;Total ram usage:       14 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; Hardware stack levels required when called: 1
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_efgtoa
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text32
  9206   003DBC                     __ptext32:
  9207                           	callstack 0
  9208   003DBC                     ___fpclassifyf:
  9209                           	callstack 24
  9210   003DBC  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9211   003DC0  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9212   003DC4  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9213   003DC8  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9214   003DCC  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  9215   003DD0  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9216   003DD4  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9217   003DD8  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9218   003DDC  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9219   003DE0  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9220   003DE4  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9221   003DE8  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9222   003DEC  0E18               	movlw	24
  9223   003DEE  EFFE  F01E         	goto	u7570
  9224   003DF2                     u7575:
  9225   003DF2  90D8               	bcf	status,0,c
  9226   003DF4  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  9227   003DF6  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  9228   003DF8  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  9229   003DFA  320A               	rrcf	??___fpclassifyf^0,f,c
  9230   003DFC                     u7570:
  9231   003DFC  2EE8               	decfsz	wreg,f,c
  9232   003DFE  EFF9  F01E         	goto	u7575
  9233   003E02  500A               	movf	??___fpclassifyf^0,w,c
  9234   003E04  6E0E               	movwf	___fpclassifyf@e^0,c
  9235   003E06  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  9236   003E08  500E               	movf	___fpclassifyf@e^0,w,c
  9237   003E0A  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9238   003E0C  A4D8               	btfss	status,2,c
  9239   003E0E  EF0B  F01F         	goto	u7581
  9240   003E12  EF0D  F01F         	goto	u7580
  9241   003E16                     u7581:
  9242   003E16  EF2D  F01F         	goto	l6163
  9243   003E1A                     u7580:
  9244   003E1A  90D8               	bcf	status,0,c
  9245   003E1C  3410               	rlcf	___fpclassifyf@u^0,w,c
  9246   003E1E  6E0A               	movwf	??___fpclassifyf^0,c
  9247   003E20  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9248   003E22  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  9249   003E24  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9250   003E26  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  9251   003E28  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9252   003E2A  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  9253   003E2C  500A               	movf	??___fpclassifyf^0,w,c
  9254   003E2E  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9255   003E30  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9256   003E32  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9257   003E34  A4D8               	btfss	status,2,c
  9258   003E36  EF1F  F01F         	goto	u7591
  9259   003E3A  EF21  F01F         	goto	u7590
  9260   003E3E                     u7591:
  9261   003E3E  EF27  F01F         	goto	l6159
  9262   003E42                     u7590:
  9263   003E42  0E00               	movlw	0
  9264   003E44  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9265   003E46  0E02               	movlw	2
  9266   003E48  6E06               	movwf	?___fpclassifyf^0,c
  9267   003E4A  EF5C  F01F         	goto	l1409
  9268   003E4E                     l6159:
  9269   003E4E  0E00               	movlw	0
  9270   003E50  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9271   003E52  0E03               	movlw	3
  9272   003E54  6E06               	movwf	?___fpclassifyf^0,c
  9273   003E56  EF5C  F01F         	goto	l1409
  9274   003E5A                     l6163:
  9275   003E5A  280E               	incf	___fpclassifyf@e^0,w,c
  9276   003E5C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9277   003E5E  A4D8               	btfss	status,2,c
  9278   003E60  EF34  F01F         	goto	u7601
  9279   003E64  EF36  F01F         	goto	u7600
  9280   003E68                     u7601:
  9281   003E68  EF58  F01F         	goto	l6169
  9282   003E6C                     u7600:
  9283   003E6C  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9284   003E70  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9285   003E74  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9286   003E78  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9287   003E7C  0E09               	movlw	9
  9288   003E7E                     u7615:
  9289   003E7E  90D8               	bcf	status,0,c
  9290   003E80  360A               	rlcf	??___fpclassifyf^0,f,c
  9291   003E82  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  9292   003E84  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  9293   003E86  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  9294   003E88  2EE8               	decfsz	wreg,f,c
  9295   003E8A  EF3F  F01F         	goto	u7615
  9296   003E8E  500A               	movf	??___fpclassifyf^0,w,c
  9297   003E90  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9298   003E92  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9299   003E94  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9300   003E96  B4D8               	btfsc	status,2,c
  9301   003E98  EF50  F01F         	goto	u7621
  9302   003E9C  EF53  F01F         	goto	u7620
  9303   003EA0                     u7621:
  9304   003EA0  0E01               	movlw	1
  9305   003EA2  EF54  F01F         	goto	u7630
  9306   003EA6                     u7620:
  9307   003EA6  0E00               	movlw	0
  9308   003EA8                     u7630:
  9309   003EA8  6E06               	movwf	?___fpclassifyf^0,c
  9310   003EAA  6A07               	clrf	(?___fpclassifyf+1)^0,c
  9311   003EAC  EF5C  F01F         	goto	l1409
  9312   003EB0                     l6169:
  9313   003EB0  0E00               	movlw	0
  9314   003EB2  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9315   003EB4  0E04               	movlw	4
  9316   003EB6  6E06               	movwf	?___fpclassifyf^0,c
  9317   003EB8                     l1409:
  9318   003EB8  0012               	return		;funcret
  9319   003EBA                     __end_of___fpclassifyf:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function ___fltol *****************
  9323 ;; Defined at:
  9324 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  f1              4    4[BANK0 ] int 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  exp1            1   82[COMRAM] unsigned char 
  9329 ;;  sign1           1   81[COMRAM] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  4    4[BANK0 ] long 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9342 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9343 ;;Total ram usage:       10 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; Hardware stack levels required when called: 1
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_runDAC
  9350 ;;		_efgtoa
  9351 ;;		___rem_pio2f
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text33
  9356   003AAE                     __ptext33:
  9357                           	callstack 0
  9358   003AAE                     ___fltol:
  9359                           	callstack 24
  9360   003AAE  0100               	movlb	0	; () banked
  9361   003AB0  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9362   003AB2  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9363   003AB4  6E53               	movwf	___fltol@exp1^0,c
  9364   003AB6  5053               	movf	___fltol@exp1^0,w,c
  9365   003AB8  A4D8               	btfss	status,2,c
  9366   003ABA  EF61  F01D         	goto	u7451
  9367   003ABE  EF63  F01D         	goto	u7450
  9368   003AC2                     u7451:
  9369   003AC2  EF6D  F01D         	goto	l6093
  9370   003AC6                     u7450:
  9371   003AC6                     l6089:
  9372                           
  9373                           ; BSR set to: 0
  9374   003AC6  0E00               	movlw	0
  9375   003AC8  6F64               	movwf	?___fltol& (0+255),b
  9376   003ACA  0E00               	movlw	0
  9377   003ACC  6F65               	movwf	(?___fltol+1)& (0+255),b
  9378   003ACE  0E00               	movlw	0
  9379   003AD0  6F66               	movwf	(?___fltol+2)& (0+255),b
  9380   003AD2  0E00               	movlw	0
  9381   003AD4  6F67               	movwf	(?___fltol+3)& (0+255),b
  9382   003AD6  EFDA  F01D         	goto	l843
  9383   003ADA                     l6093:
  9384                           
  9385                           ; BSR set to: 0
  9386   003ADA  C064  F068         	movff	___fltol@f1,??___fltol
  9387   003ADE  C065  F069         	movff	___fltol@f1+1,??___fltol+1
  9388   003AE2  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
  9389   003AE6  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
  9390   003AEA  0E20               	movlw	32
  9391   003AEC  EF7D  F01D         	goto	u7460
  9392   003AF0                     u7465:
  9393   003AF0  90D8               	bcf	status,0,c
  9394   003AF2  336B               	rrcf	(??___fltol+3)& (0+255),f,b
  9395   003AF4  336A               	rrcf	(??___fltol+2)& (0+255),f,b
  9396   003AF6  3369               	rrcf	(??___fltol+1)& (0+255),f,b
  9397   003AF8  3368               	rrcf	??___fltol& (0+255),f,b
  9398   003AFA                     u7460:
  9399   003AFA  2EE8               	decfsz	wreg,f,c
  9400   003AFC  EF78  F01D         	goto	u7465
  9401   003B00  5168               	movf	??___fltol& (0+255),w,b
  9402   003B02  6E52               	movwf	___fltol@sign1^0,c
  9403   003B04                     
  9404                           ; BSR set to: 0
  9405   003B04  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
  9406   003B06                     
  9407                           ; BSR set to: 0
  9408   003B06  0EFF               	movlw	255
  9409   003B08  1764               	andwf	___fltol@f1& (0+255),f,b
  9410   003B0A  0EFF               	movlw	255
  9411   003B0C  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
  9412   003B0E  0EFF               	movlw	255
  9413   003B10  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
  9414   003B12  0E00               	movlw	0
  9415   003B14  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
  9416   003B16                     
  9417                           ; BSR set to: 0
  9418   003B16  0E96               	movlw	150
  9419   003B18  5E53               	subwf	___fltol@exp1^0,f,c
  9420   003B1A                     
  9421                           ; BSR set to: 0
  9422   003B1A  BE53               	btfsc	___fltol@exp1^0,7,c
  9423   003B1C  EF94  F01D         	goto	u7470
  9424   003B20  EF92  F01D         	goto	u7471
  9425   003B24                     u7471:
  9426   003B24  EFAA  F01D         	goto	l6113
  9427   003B28                     u7470:
  9428   003B28                     
  9429                           ; BSR set to: 0
  9430   003B28  5053               	movf	___fltol@exp1^0,w,c
  9431   003B2A  0A80               	xorlw	128
  9432   003B2C  0F97               	addlw	151
  9433   003B2E  B0D8               	btfsc	status,0,c
  9434   003B30  EF9C  F01D         	goto	u7481
  9435   003B34  EF9E  F01D         	goto	u7480
  9436   003B38                     u7481:
  9437   003B38  EFA0  F01D         	goto	l6109
  9438   003B3C                     u7480:
  9439   003B3C  EF63  F01D         	goto	l6089
  9440   003B40                     l6109:
  9441                           
  9442                           ; BSR set to: 0
  9443   003B40  90D8               	bcf	status,0,c
  9444   003B42  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9445   003B44  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9446   003B46  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9447   003B48  3364               	rrcf	___fltol@f1& (0+255),f,b
  9448   003B4A                     
  9449                           ; BSR set to: 0
  9450   003B4A  3E53               	incfsz	___fltol@exp1^0,f,c
  9451   003B4C  EFA0  F01D         	goto	l6109
  9452   003B50  EFC2  F01D         	goto	l6123
  9453   003B54                     l6113:
  9454                           
  9455                           ; BSR set to: 0
  9456   003B54  0E1F               	movlw	31
  9457   003B56  6453               	cpfsgt	___fltol@exp1^0,c
  9458   003B58  EFB0  F01D         	goto	u7491
  9459   003B5C  EFB2  F01D         	goto	u7490
  9460   003B60                     u7491:
  9461   003B60  EFBA  F01D         	goto	l6121
  9462   003B64                     u7490:
  9463   003B64  EF63  F01D         	goto	l6089
  9464   003B68                     l6119:
  9465                           
  9466                           ; BSR set to: 0
  9467   003B68  90D8               	bcf	status,0,c
  9468   003B6A  3764               	rlcf	___fltol@f1& (0+255),f,b
  9469   003B6C  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9470   003B6E  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9471   003B70  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9472   003B72  0653               	decf	___fltol@exp1^0,f,c
  9473   003B74                     l6121:
  9474                           
  9475                           ; BSR set to: 0
  9476   003B74  5053               	movf	___fltol@exp1^0,w,c
  9477   003B76  A4D8               	btfss	status,2,c
  9478   003B78  EFC0  F01D         	goto	u7501
  9479   003B7C  EFC2  F01D         	goto	u7500
  9480   003B80                     u7501:
  9481   003B80  EFB4  F01D         	goto	l6119
  9482   003B84                     u7500:
  9483   003B84                     l6123:
  9484                           
  9485                           ; BSR set to: 0
  9486   003B84  5052               	movf	___fltol@sign1^0,w,c
  9487   003B86  B4D8               	btfsc	status,2,c
  9488   003B88  EFC8  F01D         	goto	u7511
  9489   003B8C  EFCA  F01D         	goto	u7510
  9490   003B90                     u7511:
  9491   003B90  EFD2  F01D         	goto	l6127
  9492   003B94                     u7510:
  9493   003B94                     
  9494                           ; BSR set to: 0
  9495   003B94  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
  9496   003B96  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
  9497   003B98  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
  9498   003B9A  6D64               	negf	___fltol@f1& (0+255),b
  9499   003B9C  0E00               	movlw	0
  9500   003B9E  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9501   003BA0  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9502   003BA2  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9503   003BA4                     l6127:
  9504                           
  9505                           ; BSR set to: 0
  9506   003BA4  C064  F064         	movff	___fltol@f1,?___fltol
  9507   003BA8  C065  F065         	movff	___fltol@f1+1,?___fltol+1
  9508   003BAC  C066  F066         	movff	___fltol@f1+2,?___fltol+2
  9509   003BB0  C067  F067         	movff	___fltol@f1+3,?___fltol+3
  9510   003BB4                     l843:
  9511                           
  9512                           ; BSR set to: 0
  9513   003BB4  0012               	return		;funcret
  9514   003BB6                     __end_of___fltol:
  9515                           	callstack 0
  9516                           
  9517 ;; *************** function ___flsub *****************
  9518 ;; Defined at:
  9519 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  b               4    4[BANK0 ] long 
  9522 ;;  a               4    8[BANK0 ] long 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;		None
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  4    4[BANK0 ] long 
  9527 ;; Registers used:
  9528 ;;		wreg, status,2, status,0, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9534 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9537 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9538 ;;Total ram usage:        8 bytes
  9539 ;; Hardware stack levels used: 1
  9540 ;; Hardware stack levels required when called: 2
  9541 ;; This function calls:
  9542 ;;		___fladd
  9543 ;; This function is called by:
  9544 ;;		_efgtoa
  9545 ;;		___rem_pio2f
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text34
  9550   0045BE                     __ptext34:
  9551                           	callstack 0
  9552   0045BE                     ___flsub:
  9553                           	callstack 23
  9554   0045BE  0E00               	movlw	0
  9555   0045C0  0100               	movlb	0	; () banked
  9556   0045C2  1B68               	xorwf	___flsub@a& (0+255),f,b
  9557   0045C4  0E00               	movlw	0
  9558   0045C6  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
  9559   0045C8  0E00               	movlw	0
  9560   0045CA  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
  9561   0045CC  0E80               	movlw	128
  9562   0045CE  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
  9563   0045D0                     
  9564                           ; BSR set to: 0
  9565   0045D0  C064  F046         	movff	___flsub@b,___fladd@b
  9566   0045D4  C065  F047         	movff	___flsub@b+1,___fladd@b+1
  9567   0045D8  C066  F048         	movff	___flsub@b+2,___fladd@b+2
  9568   0045DC  C067  F049         	movff	___flsub@b+3,___fladd@b+3
  9569   0045E0  C068  F04A         	movff	___flsub@a,___fladd@a
  9570   0045E4  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
  9571   0045E8  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
  9572   0045EC  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
  9573   0045F0  EC0E  F008         	call	___fladd	;wreg free
  9574   0045F4  C046  F064         	movff	?___fladd,?___flsub
  9575   0045F8  C047  F065         	movff	?___fladd+1,?___flsub+1
  9576   0045FC  C048  F066         	movff	?___fladd+2,?___flsub+2
  9577   004600  C049  F067         	movff	?___fladd+3,?___flsub+3
  9578   004604  0012               	return		;funcret
  9579   004606                     __end_of___flsub:
  9580                           	callstack 0
  9581                           
  9582 ;; *************** function ___fladd *****************
  9583 ;; Defined at:
  9584 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  b               4   69[COMRAM] long 
  9587 ;;  a               4   73[COMRAM] long 
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  grs             1    3[BANK0 ] unsigned char 
  9590 ;;  bexp            1    2[BANK0 ] unsigned char 
  9591 ;;  aexp            1    1[BANK0 ] unsigned char 
  9592 ;;  signs           1    0[BANK0 ] unsigned char 
  9593 ;; Return value:  Size  Location     Type
  9594 ;;                  4   69[COMRAM] unsigned char 
  9595 ;; Registers used:
  9596 ;;		wreg, status,2, status,0
  9597 ;; Tracked objects:
  9598 ;;		On entry : 0/0
  9599 ;;		On exit  : 0/0
  9600 ;;		Unchanged: 0/0
  9601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;Total ram usage:       16 bytes
  9607 ;; Hardware stack levels used: 1
  9608 ;; Hardware stack levels required when called: 1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_runDAC
  9613 ;;		___flsub
  9614 ;;		_efgtoa
  9615 ;;		_sinf
  9616 ;;		___cosdf
  9617 ;;		___rem_pio2f
  9618 ;;		___sindf
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           	psect	text35
  9623   00101C                     __ptext35:
  9624                           	callstack 0
  9625   00101C                     ___fladd:
  9626                           	callstack 23
  9627   00101C  5049               	movf	(___fladd@b+3)^0,w,c
  9628   00101E  0B80               	andlw	128
  9629   001020  0100               	movlb	0	; () banked
  9630   001022  6F60               	movwf	___fladd@signs& (0+255),b
  9631   001024  5049               	movf	(___fladd@b+3)^0,w,c
  9632   001026  2449               	addwf	(___fladd@b+3)^0,w,c
  9633   001028  6F62               	movwf	___fladd@bexp& (0+255),b
  9634   00102A                     
  9635                           ; BSR set to: 0
  9636   00102A  AE48               	btfss	(___fladd@b+2)^0,7,c
  9637   00102C  EF1A  F008         	goto	u6421
  9638   001030  EF1C  F008         	goto	u6420
  9639   001034                     u6421:
  9640   001034  EF1D  F008         	goto	l5477
  9641   001038                     u6420:
  9642   001038                     
  9643                           ; BSR set to: 0
  9644   001038  8162               	bsf	___fladd@bexp& (0+255),0,b
  9645   00103A                     l5477:
  9646                           
  9647                           ; BSR set to: 0
  9648   00103A  5162               	movf	___fladd@bexp& (0+255),w,b
  9649   00103C  B4D8               	btfsc	status,2,c
  9650   00103E  EF23  F008         	goto	u6431
  9651   001042  EF25  F008         	goto	u6430
  9652   001046                     u6431:
  9653   001046  EF3A  F008         	goto	l5487
  9654   00104A                     u6430:
  9655   00104A                     
  9656                           ; BSR set to: 0
  9657   00104A  2962               	incf	___fladd@bexp& (0+255),w,b
  9658   00104C  A4D8               	btfss	status,2,c
  9659   00104E  EF2B  F008         	goto	u6441
  9660   001052  EF2D  F008         	goto	u6440
  9661   001056                     u6441:
  9662   001056  EF35  F008         	goto	l5483
  9663   00105A                     u6440:
  9664   00105A                     
  9665                           ; BSR set to: 0
  9666   00105A  0E00               	movlw	0
  9667   00105C  6E46               	movwf	___fladd@b^0,c
  9668   00105E  0E00               	movlw	0
  9669   001060  6E47               	movwf	(___fladd@b+1)^0,c
  9670   001062  0E00               	movlw	0
  9671   001064  6E48               	movwf	(___fladd@b+2)^0,c
  9672   001066  0E00               	movlw	0
  9673   001068  6E49               	movwf	(___fladd@b+3)^0,c
  9674   00106A                     l5483:
  9675                           
  9676                           ; BSR set to: 0
  9677   00106A  8E48               	bsf	(___fladd@b+2)^0,7,c
  9678   00106C                     
  9679                           ; BSR set to: 0
  9680   00106C  0E00               	movlw	0
  9681   00106E  6E49               	movwf	(___fladd@b+3)^0,c
  9682   001070  EF42  F008         	goto	l5489
  9683   001074                     l5487:
  9684                           
  9685                           ; BSR set to: 0
  9686   001074  0E00               	movlw	0
  9687   001076  6E46               	movwf	___fladd@b^0,c
  9688   001078  0E00               	movlw	0
  9689   00107A  6E47               	movwf	(___fladd@b+1)^0,c
  9690   00107C  0E00               	movlw	0
  9691   00107E  6E48               	movwf	(___fladd@b+2)^0,c
  9692   001080  0E00               	movlw	0
  9693   001082  6E49               	movwf	(___fladd@b+3)^0,c
  9694   001084                     l5489:
  9695                           
  9696                           ; BSR set to: 0
  9697   001084  504D               	movf	(___fladd@a+3)^0,w,c
  9698   001086  0B80               	andlw	128
  9699   001088  6F61               	movwf	___fladd@aexp& (0+255),b
  9700   00108A                     
  9701                           ; BSR set to: 0
  9702   00108A  5160               	movf	___fladd@signs& (0+255),w,b
  9703   00108C  1961               	xorwf	___fladd@aexp& (0+255),w,b
  9704   00108E  B4D8               	btfsc	status,2,c
  9705   001090  EF4C  F008         	goto	u6451
  9706   001094  EF4E  F008         	goto	u6450
  9707   001098                     u6451:
  9708   001098  EF4F  F008         	goto	l5495
  9709   00109C                     u6450:
  9710   00109C                     
  9711                           ; BSR set to: 0
  9712   00109C  8D60               	bsf	___fladd@signs& (0+255),6,b
  9713   00109E                     l5495:
  9714                           
  9715                           ; BSR set to: 0
  9716   00109E  504D               	movf	(___fladd@a+3)^0,w,c
  9717   0010A0  244D               	addwf	(___fladd@a+3)^0,w,c
  9718   0010A2  6F61               	movwf	___fladd@aexp& (0+255),b
  9719   0010A4                     
  9720                           ; BSR set to: 0
  9721   0010A4  AE4C               	btfss	(___fladd@a+2)^0,7,c
  9722   0010A6  EF57  F008         	goto	u6461
  9723   0010AA  EF59  F008         	goto	u6460
  9724   0010AE                     u6461:
  9725   0010AE  EF5A  F008         	goto	l5501
  9726   0010B2                     u6460:
  9727   0010B2                     
  9728                           ; BSR set to: 0
  9729   0010B2  8161               	bsf	___fladd@aexp& (0+255),0,b
  9730   0010B4                     l5501:
  9731                           
  9732                           ; BSR set to: 0
  9733   0010B4  5161               	movf	___fladd@aexp& (0+255),w,b
  9734   0010B6  B4D8               	btfsc	status,2,c
  9735   0010B8  EF60  F008         	goto	u6471
  9736   0010BC  EF62  F008         	goto	u6470
  9737   0010C0                     u6471:
  9738   0010C0  EF77  F008         	goto	l5511
  9739   0010C4                     u6470:
  9740   0010C4                     
  9741                           ; BSR set to: 0
  9742   0010C4  2961               	incf	___fladd@aexp& (0+255),w,b
  9743   0010C6  A4D8               	btfss	status,2,c
  9744   0010C8  EF68  F008         	goto	u6481
  9745   0010CC  EF6A  F008         	goto	u6480
  9746   0010D0                     u6481:
  9747   0010D0  EF72  F008         	goto	l5507
  9748   0010D4                     u6480:
  9749   0010D4                     
  9750                           ; BSR set to: 0
  9751   0010D4  0E00               	movlw	0
  9752   0010D6  6E4A               	movwf	___fladd@a^0,c
  9753   0010D8  0E00               	movlw	0
  9754   0010DA  6E4B               	movwf	(___fladd@a+1)^0,c
  9755   0010DC  0E00               	movlw	0
  9756   0010DE  6E4C               	movwf	(___fladd@a+2)^0,c
  9757   0010E0  0E00               	movlw	0
  9758   0010E2  6E4D               	movwf	(___fladd@a+3)^0,c
  9759   0010E4                     l5507:
  9760                           
  9761                           ; BSR set to: 0
  9762   0010E4  8E4C               	bsf	(___fladd@a+2)^0,7,c
  9763   0010E6                     
  9764                           ; BSR set to: 0
  9765   0010E6  0E00               	movlw	0
  9766   0010E8  6E4D               	movwf	(___fladd@a+3)^0,c
  9767   0010EA  EF7F  F008         	goto	l5513
  9768   0010EE                     l5511:
  9769                           
  9770                           ; BSR set to: 0
  9771   0010EE  0E00               	movlw	0
  9772   0010F0  6E4A               	movwf	___fladd@a^0,c
  9773   0010F2  0E00               	movlw	0
  9774   0010F4  6E4B               	movwf	(___fladd@a+1)^0,c
  9775   0010F6  0E00               	movlw	0
  9776   0010F8  6E4C               	movwf	(___fladd@a+2)^0,c
  9777   0010FA  0E00               	movlw	0
  9778   0010FC  6E4D               	movwf	(___fladd@a+3)^0,c
  9779   0010FE                     l5513:
  9780                           
  9781                           ; BSR set to: 0
  9782   0010FE  5162               	movf	___fladd@bexp& (0+255),w,b
  9783   001100  5D61               	subwf	___fladd@aexp& (0+255),w,b
  9784   001102  B0D8               	btfsc	status,0,c
  9785   001104  EF86  F008         	goto	u6491
  9786   001108  EF88  F008         	goto	u6490
  9787   00110C                     u6491:
  9788   00110C  EFAF  F008         	goto	l5549
  9789   001110                     u6490:
  9790   001110                     
  9791                           ; BSR set to: 0
  9792   001110  AD60               	btfss	___fladd@signs& (0+255),6,b
  9793   001112  EF8D  F008         	goto	u6501
  9794   001116  EF8F  F008         	goto	u6500
  9795   00111A                     u6501:
  9796   00111A  EF91  F008         	goto	l5519
  9797   00111E                     u6500:
  9798   00111E                     
  9799                           ; BSR set to: 0
  9800   00111E  0E80               	movlw	128
  9801   001120  1B60               	xorwf	___fladd@signs& (0+255),f,b
  9802   001122                     l5519:
  9803                           
  9804                           ; BSR set to: 0
  9805   001122  C062  F063         	movff	___fladd@bexp,___fladd@grs
  9806   001126                     
  9807                           ; BSR set to: 0
  9808   001126  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  9809   00112A                     
  9810                           ; BSR set to: 0
  9811   00112A  C063  F061         	movff	___fladd@grs,___fladd@aexp
  9812   00112E                     
  9813                           ; BSR set to: 0
  9814   00112E  C046  F063         	movff	___fladd@b,___fladd@grs
  9815   001132                     
  9816                           ; BSR set to: 0
  9817   001132  C04A  F046         	movff	___fladd@a,___fladd@b
  9818   001136                     
  9819                           ; BSR set to: 0
  9820   001136  C063  F04A         	movff	___fladd@grs,___fladd@a
  9821   00113A                     
  9822                           ; BSR set to: 0
  9823   00113A  C047  F063         	movff	___fladd@b+1,___fladd@grs
  9824   00113E                     
  9825                           ; BSR set to: 0
  9826   00113E  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
  9827   001142                     
  9828                           ; BSR set to: 0
  9829   001142  C063  F04B         	movff	___fladd@grs,___fladd@a+1
  9830   001146                     
  9831                           ; BSR set to: 0
  9832   001146  C048  F063         	movff	___fladd@b+2,___fladd@grs
  9833   00114A                     
  9834                           ; BSR set to: 0
  9835   00114A  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
  9836   00114E                     
  9837                           ; BSR set to: 0
  9838   00114E  C063  F04C         	movff	___fladd@grs,___fladd@a+2
  9839   001152                     
  9840                           ; BSR set to: 0
  9841   001152  C049  F063         	movff	___fladd@b+3,___fladd@grs
  9842   001156                     
  9843                           ; BSR set to: 0
  9844   001156  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
  9845   00115A                     
  9846                           ; BSR set to: 0
  9847   00115A  C063  F04D         	movff	___fladd@grs,___fladd@a+3
  9848   00115E                     l5549:
  9849                           
  9850                           ; BSR set to: 0
  9851   00115E  0E00               	movlw	0
  9852   001160  6F63               	movwf	___fladd@grs& (0+255),b
  9853   001162                     
  9854                           ; BSR set to: 0
  9855   001162  5162               	movf	___fladd@bexp& (0+255),w,b
  9856   001164  C061  F04E         	movff	___fladd@aexp,??___fladd
  9857   001168  6A4F               	clrf	(??___fladd+1)^0,c
  9858   00116A  5E4E               	subwf	??___fladd^0,f,c
  9859   00116C  0E00               	movlw	0
  9860   00116E  5A4F               	subwfb	(??___fladd+1)^0,f,c
  9861   001170  BE4F               	btfsc	(??___fladd+1)^0,7,c
  9862   001172  EFC4  F008         	goto	u6511
  9863   001176  504F               	movf	(??___fladd+1)^0,w,c
  9864   001178  E109               	bnz	u6510
  9865   00117A  0E1A               	movlw	26
  9866   00117C  5C4E               	subwf	??___fladd^0,w,c
  9867   00117E  A0D8               	btfss	status,0,c
  9868   001180  EFC4  F008         	goto	u6511
  9869   001184  EFC6  F008         	goto	u6510
  9870   001188                     u6511:
  9871   001188  EFFD  F008         	goto	l1075
  9872   00118C                     u6510:
  9873   00118C                     
  9874                           ; BSR set to: 0
  9875   00118C  5046               	movf	___fladd@b^0,w,c
  9876   00118E  1047               	iorwf	(___fladd@b+1)^0,w,c
  9877   001190  1048               	iorwf	(___fladd@b+2)^0,w,c
  9878   001192  1049               	iorwf	(___fladd@b+3)^0,w,c
  9879   001194  A4D8               	btfss	status,2,c
  9880   001196  EFCF  F008         	goto	u6521
  9881   00119A  EFD2  F008         	goto	u6520
  9882   00119E                     u6521:
  9883   00119E  0E01               	movlw	1
  9884   0011A0  EFD3  F008         	goto	u6530
  9885   0011A4                     u6520:
  9886   0011A4  0E00               	movlw	0
  9887   0011A6                     u6530:
  9888   0011A6  6F63               	movwf	___fladd@grs& (0+255),b
  9889   0011A8                     
  9890                           ; BSR set to: 0
  9891   0011A8  0E00               	movlw	0
  9892   0011AA  6E46               	movwf	___fladd@b^0,c
  9893   0011AC  0E00               	movlw	0
  9894   0011AE  6E47               	movwf	(___fladd@b+1)^0,c
  9895   0011B0  0E00               	movlw	0
  9896   0011B2  6E48               	movwf	(___fladd@b+2)^0,c
  9897   0011B4  0E00               	movlw	0
  9898   0011B6  6E49               	movwf	(___fladd@b+3)^0,c
  9899   0011B8                     
  9900                           ; BSR set to: 0
  9901   0011B8  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  9902   0011BC  EF06  F009         	goto	l1074
  9903   0011C0                     l1076:
  9904                           
  9905                           ; BSR set to: 0
  9906   0011C0  A163               	btfss	___fladd@grs& (0+255),0,b
  9907   0011C2  EFE5  F008         	goto	u6541
  9908   0011C6  EFE7  F008         	goto	u6540
  9909   0011CA                     u6541:
  9910   0011CA  EFED  F008         	goto	l5561
  9911   0011CE                     u6540:
  9912   0011CE                     
  9913                           ; BSR set to: 0
  9914   0011CE  90D8               	bcf	status,0,c
  9915   0011D0  3163               	rrcf	___fladd@grs& (0+255),w,b
  9916   0011D2  0901               	iorlw	1
  9917   0011D4  6F63               	movwf	___fladd@grs& (0+255),b
  9918   0011D6  EFEF  F008         	goto	l5563
  9919   0011DA                     l5561:
  9920                           
  9921                           ; BSR set to: 0
  9922   0011DA  90D8               	bcf	status,0,c
  9923   0011DC  3363               	rrcf	___fladd@grs& (0+255),f,b
  9924   0011DE                     l5563:
  9925                           
  9926                           ; BSR set to: 0
  9927   0011DE  A046               	btfss	___fladd@b^0,0,c
  9928   0011E0  EFF4  F008         	goto	u6551
  9929   0011E4  EFF6  F008         	goto	u6550
  9930   0011E8                     u6551:
  9931   0011E8  EFF7  F008         	goto	l5567
  9932   0011EC                     u6550:
  9933   0011EC                     
  9934                           ; BSR set to: 0
  9935   0011EC  8F63               	bsf	___fladd@grs& (0+255),7,b
  9936   0011EE                     l5567:
  9937                           
  9938                           ; BSR set to: 0
  9939   0011EE  3449               	rlcf	(___fladd@b+3)^0,w,c
  9940   0011F0  3249               	rrcf	(___fladd@b+3)^0,f,c
  9941   0011F2  3248               	rrcf	(___fladd@b+2)^0,f,c
  9942   0011F4  3247               	rrcf	(___fladd@b+1)^0,f,c
  9943   0011F6  3246               	rrcf	___fladd@b^0,f,c
  9944   0011F8                     
  9945                           ; BSR set to: 0
  9946   0011F8  2B62               	incf	___fladd@bexp& (0+255),f,b
  9947   0011FA                     l1075:
  9948                           
  9949                           ; BSR set to: 0
  9950   0011FA  5161               	movf	___fladd@aexp& (0+255),w,b
  9951   0011FC  5D62               	subwf	___fladd@bexp& (0+255),w,b
  9952   0011FE  A0D8               	btfss	status,0,c
  9953   001200  EF04  F009         	goto	u6561
  9954   001204  EF06  F009         	goto	u6560
  9955   001208                     u6561:
  9956   001208  EFE0  F008         	goto	l1076
  9957   00120C                     u6560:
  9958   00120C                     l1074:
  9959                           
  9960                           ; BSR set to: 0
  9961   00120C  BD60               	btfsc	___fladd@signs& (0+255),6,b
  9962   00120E  EF0B  F009         	goto	u6571
  9963   001212  EF0D  F009         	goto	u6570
  9964   001216                     u6571:
  9965   001216  EF4D  F009         	goto	l5595
  9966   00121A                     u6570:
  9967   00121A                     
  9968                           ; BSR set to: 0
  9969   00121A  5162               	movf	___fladd@bexp& (0+255),w,b
  9970   00121C  A4D8               	btfss	status,2,c
  9971   00121E  EF13  F009         	goto	u6581
  9972   001222  EF15  F009         	goto	u6580
  9973   001226                     u6581:
  9974   001226  EF1F  F009         	goto	l5577
  9975   00122A                     u6580:
  9976   00122A                     
  9977                           ; BSR set to: 0
  9978   00122A  0E00               	movlw	0
  9979   00122C  6E46               	movwf	?___fladd^0,c
  9980   00122E  0E00               	movlw	0
  9981   001230  6E47               	movwf	(?___fladd+1)^0,c
  9982   001232  0E00               	movlw	0
  9983   001234  6E48               	movwf	(?___fladd+2)^0,c
  9984   001236  0E00               	movlw	0
  9985   001238  6E49               	movwf	(?___fladd+3)^0,c
  9986   00123A  EF6E  F00A         	goto	l1083
  9987   00123E                     l5577:
  9988                           
  9989                           ; BSR set to: 0
  9990   00123E  504A               	movf	___fladd@a^0,w,c
  9991   001240  2646               	addwf	___fladd@b^0,f,c
  9992   001242  504B               	movf	(___fladd@a+1)^0,w,c
  9993   001244  2247               	addwfc	(___fladd@b+1)^0,f,c
  9994   001246  504C               	movf	(___fladd@a+2)^0,w,c
  9995   001248  2248               	addwfc	(___fladd@b+2)^0,f,c
  9996   00124A  504D               	movf	(___fladd@a+3)^0,w,c
  9997   00124C  2249               	addwfc	(___fladd@b+3)^0,f,c
  9998   00124E                     
  9999                           ; BSR set to: 0
 10000   00124E  A049               	btfss	(___fladd@b+3)^0,0,c
 10001   001250  EF2C  F009         	goto	u6591
 10002   001254  EF2E  F009         	goto	u6590
 10003   001258                     u6591:
 10004   001258  EFDA  F009         	goto	l5631
 10005   00125C                     u6590:
 10006   00125C                     
 10007                           ; BSR set to: 0
 10008   00125C  A163               	btfss	___fladd@grs& (0+255),0,b
 10009   00125E  EF33  F009         	goto	u6601
 10010   001262  EF35  F009         	goto	u6600
 10011   001266                     u6601:
 10012   001266  EF3B  F009         	goto	l5585
 10013   00126A                     u6600:
 10014   00126A                     
 10015                           ; BSR set to: 0
 10016   00126A  90D8               	bcf	status,0,c
 10017   00126C  3163               	rrcf	___fladd@grs& (0+255),w,b
 10018   00126E  0901               	iorlw	1
 10019   001270  6F63               	movwf	___fladd@grs& (0+255),b
 10020   001272  EF3D  F009         	goto	l5587
 10021   001276                     l5585:
 10022                           
 10023                           ; BSR set to: 0
 10024   001276  90D8               	bcf	status,0,c
 10025   001278  3363               	rrcf	___fladd@grs& (0+255),f,b
 10026   00127A                     l5587:
 10027                           
 10028                           ; BSR set to: 0
 10029   00127A  A046               	btfss	___fladd@b^0,0,c
 10030   00127C  EF42  F009         	goto	u6611
 10031   001280  EF44  F009         	goto	u6610
 10032   001284                     u6611:
 10033   001284  EF45  F009         	goto	l5591
 10034   001288                     u6610:
 10035   001288                     
 10036                           ; BSR set to: 0
 10037   001288  8F63               	bsf	___fladd@grs& (0+255),7,b
 10038   00128A                     l5591:
 10039                           
 10040                           ; BSR set to: 0
 10041   00128A  3449               	rlcf	(___fladd@b+3)^0,w,c
 10042   00128C  3249               	rrcf	(___fladd@b+3)^0,f,c
 10043   00128E  3248               	rrcf	(___fladd@b+2)^0,f,c
 10044   001290  3247               	rrcf	(___fladd@b+1)^0,f,c
 10045   001292  3246               	rrcf	___fladd@b^0,f,c
 10046   001294                     
 10047                           ; BSR set to: 0
 10048   001294  2B62               	incf	___fladd@bexp& (0+255),f,b
 10049   001296  EFDA  F009         	goto	l5631
 10050   00129A                     l5595:
 10051                           
 10052                           ; BSR set to: 0
 10053   00129A  504A               	movf	___fladd@a^0,w,c
 10054   00129C  5C46               	subwf	___fladd@b^0,w,c
 10055   00129E  504B               	movf	(___fladd@a+1)^0,w,c
 10056   0012A0  5847               	subwfb	(___fladd@b+1)^0,w,c
 10057   0012A2  504C               	movf	(___fladd@a+2)^0,w,c
 10058   0012A4  5848               	subwfb	(___fladd@b+2)^0,w,c
 10059   0012A6  5049               	movf	(___fladd@b+3)^0,w,c
 10060   0012A8  0A80               	xorlw	128
 10061   0012AA  6E4E               	movwf	??___fladd^0,c
 10062   0012AC  504D               	movf	(___fladd@a+3)^0,w,c
 10063   0012AE  0A80               	xorlw	128
 10064   0012B0  584E               	subwfb	??___fladd^0,w,c
 10065   0012B2  B0D8               	btfsc	status,0,c
 10066   0012B4  EF5E  F009         	goto	u6621
 10067   0012B8  EF60  F009         	goto	u6620
 10068   0012BC                     u6621:
 10069   0012BC  EF8B  F009         	goto	l5605
 10070   0012C0                     u6620:
 10071   0012C0                     
 10072                           ; BSR set to: 0
 10073   0012C0  5046               	movf	___fladd@b^0,w,c
 10074   0012C2  5C4A               	subwf	___fladd@a^0,w,c
 10075   0012C4  6E4E               	movwf	??___fladd^0,c
 10076   0012C6  5047               	movf	(___fladd@b+1)^0,w,c
 10077   0012C8  584B               	subwfb	(___fladd@a+1)^0,w,c
 10078   0012CA  6E4F               	movwf	(??___fladd+1)^0,c
 10079   0012CC  5048               	movf	(___fladd@b+2)^0,w,c
 10080   0012CE  584C               	subwfb	(___fladd@a+2)^0,w,c
 10081   0012D0  6E50               	movwf	(??___fladd+2)^0,c
 10082   0012D2  5049               	movf	(___fladd@b+3)^0,w,c
 10083   0012D4  584D               	subwfb	(___fladd@a+3)^0,w,c
 10084   0012D6  6E51               	movwf	(??___fladd+3)^0,c
 10085   0012D8  0EFF               	movlw	255
 10086   0012DA  244E               	addwf	??___fladd^0,w,c
 10087   0012DC  6E46               	movwf	___fladd@b^0,c
 10088   0012DE  0EFF               	movlw	255
 10089   0012E0  204F               	addwfc	(??___fladd+1)^0,w,c
 10090   0012E2  6E47               	movwf	(___fladd@b+1)^0,c
 10091   0012E4  0EFF               	movlw	255
 10092   0012E6  2050               	addwfc	(??___fladd+2)^0,w,c
 10093   0012E8  6E48               	movwf	(___fladd@b+2)^0,c
 10094   0012EA  0EFF               	movlw	255
 10095   0012EC  2051               	addwfc	(??___fladd+3)^0,w,c
 10096   0012EE  6E49               	movwf	(___fladd@b+3)^0,c
 10097   0012F0  0E80               	movlw	128
 10098   0012F2  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10099   0012F4                     
 10100                           ; BSR set to: 0
 10101   0012F4  6D63               	negf	___fladd@grs& (0+255),b
 10102   0012F6                     
 10103                           ; BSR set to: 0
 10104   0012F6  5163               	movf	___fladd@grs& (0+255),w,b
 10105   0012F8  A4D8               	btfss	status,2,c
 10106   0012FA  EF81  F009         	goto	u6631
 10107   0012FE  EF83  F009         	goto	u6630
 10108   001302                     u6631:
 10109   001302  EF93  F009         	goto	l1091
 10110   001306                     u6630:
 10111   001306                     
 10112                           ; BSR set to: 0
 10113   001306  0E01               	movlw	1
 10114   001308  2646               	addwf	___fladd@b^0,f,c
 10115   00130A  0E00               	movlw	0
 10116   00130C  2247               	addwfc	(___fladd@b+1)^0,f,c
 10117   00130E  2248               	addwfc	(___fladd@b+2)^0,f,c
 10118   001310  2249               	addwfc	(___fladd@b+3)^0,f,c
 10119   001312  EF93  F009         	goto	l1091
 10120   001316                     l5605:
 10121                           
 10122                           ; BSR set to: 0
 10123   001316  504A               	movf	___fladd@a^0,w,c
 10124   001318  5E46               	subwf	___fladd@b^0,f,c
 10125   00131A  504B               	movf	(___fladd@a+1)^0,w,c
 10126   00131C  5A47               	subwfb	(___fladd@b+1)^0,f,c
 10127   00131E  504C               	movf	(___fladd@a+2)^0,w,c
 10128   001320  5A48               	subwfb	(___fladd@b+2)^0,f,c
 10129   001322  504D               	movf	(___fladd@a+3)^0,w,c
 10130   001324  5A49               	subwfb	(___fladd@b+3)^0,f,c
 10131   001326                     l1091:
 10132                           
 10133                           ; BSR set to: 0
 10134   001326  5046               	movf	___fladd@b^0,w,c
 10135   001328  1047               	iorwf	(___fladd@b+1)^0,w,c
 10136   00132A  1048               	iorwf	(___fladd@b+2)^0,w,c
 10137   00132C  1049               	iorwf	(___fladd@b+3)^0,w,c
 10138   00132E  A4D8               	btfss	status,2,c
 10139   001330  EF9C  F009         	goto	u6641
 10140   001334  EF9E  F009         	goto	u6640
 10141   001338                     u6641:
 10142   001338  EFD3  F009         	goto	l5629
 10143   00133C                     u6640:
 10144   00133C                     
 10145                           ; BSR set to: 0
 10146   00133C  5163               	movf	___fladd@grs& (0+255),w,b
 10147   00133E  A4D8               	btfss	status,2,c
 10148   001340  EFA4  F009         	goto	u6651
 10149   001344  EFA6  F009         	goto	u6650
 10150   001348                     u6651:
 10151   001348  EFD3  F009         	goto	l5629
 10152   00134C                     u6650:
 10153   00134C                     
 10154                           ; BSR set to: 0
 10155   00134C  0E00               	movlw	0
 10156   00134E  6E46               	movwf	?___fladd^0,c
 10157   001350  0E00               	movlw	0
 10158   001352  6E47               	movwf	(?___fladd+1)^0,c
 10159   001354  0E00               	movlw	0
 10160   001356  6E48               	movwf	(?___fladd+2)^0,c
 10161   001358  0E00               	movlw	0
 10162   00135A  6E49               	movwf	(?___fladd+3)^0,c
 10163   00135C  EF6E  F00A         	goto	l1083
 10164   001360                     l5613:
 10165                           
 10166                           ; BSR set to: 0
 10167   001360  90D8               	bcf	status,0,c
 10168   001362  3646               	rlcf	___fladd@b^0,f,c
 10169   001364  3647               	rlcf	(___fladd@b+1)^0,f,c
 10170   001366  3648               	rlcf	(___fladd@b+2)^0,f,c
 10171   001368  3649               	rlcf	(___fladd@b+3)^0,f,c
 10172   00136A                     
 10173                           ; BSR set to: 0
 10174   00136A  AF63               	btfss	___fladd@grs& (0+255),7,b
 10175   00136C  EFBA  F009         	goto	u6661
 10176   001370  EFBC  F009         	goto	u6660
 10177   001374                     u6661:
 10178   001374  EFBD  F009         	goto	l5619
 10179   001378                     u6660:
 10180   001378                     
 10181                           ; BSR set to: 0
 10182   001378  8046               	bsf	___fladd@b^0,0,c
 10183   00137A                     l5619:
 10184                           
 10185                           ; BSR set to: 0
 10186   00137A  A163               	btfss	___fladd@grs& (0+255),0,b
 10187   00137C  EFC2  F009         	goto	u6671
 10188   001380  EFC4  F009         	goto	u6670
 10189   001384                     u6671:
 10190   001384  EFC8  F009         	goto	l5623
 10191   001388                     u6670:
 10192   001388                     
 10193                           ; BSR set to: 0
 10194   001388  80D8               	bsf	status,0,c
 10195   00138A  3763               	rlcf	___fladd@grs& (0+255),f,b
 10196   00138C  EFCA  F009         	goto	l5625
 10197   001390                     l5623:
 10198                           
 10199                           ; BSR set to: 0
 10200   001390  90D8               	bcf	status,0,c
 10201   001392  3763               	rlcf	___fladd@grs& (0+255),f,b
 10202   001394                     l5625:
 10203                           
 10204                           ; BSR set to: 0
 10205   001394  5162               	movf	___fladd@bexp& (0+255),w,b
 10206   001396  B4D8               	btfsc	status,2,c
 10207   001398  EFD0  F009         	goto	u6681
 10208   00139C  EFD2  F009         	goto	u6680
 10209   0013A0                     u6681:
 10210   0013A0  EFD3  F009         	goto	l5629
 10211   0013A4                     u6680:
 10212   0013A4                     
 10213                           ; BSR set to: 0
 10214   0013A4  0762               	decf	___fladd@bexp& (0+255),f,b
 10215   0013A6                     l5629:
 10216                           
 10217                           ; BSR set to: 0
 10218   0013A6  AE48               	btfss	(___fladd@b+2)^0,7,c
 10219   0013A8  EFD8  F009         	goto	u6691
 10220   0013AC  EFDA  F009         	goto	u6690
 10221   0013B0                     u6691:
 10222   0013B0  EFB0  F009         	goto	l5613
 10223   0013B4                     u6690:
 10224   0013B4                     l5631:
 10225                           
 10226                           ; BSR set to: 0
 10227   0013B4  0E00               	movlw	0
 10228   0013B6  6F61               	movwf	___fladd@aexp& (0+255),b
 10229   0013B8                     
 10230                           ; BSR set to: 0
 10231   0013B8  AF63               	btfss	___fladd@grs& (0+255),7,b
 10232   0013BA  EFE1  F009         	goto	u6701
 10233   0013BE  EFE3  F009         	goto	u6700
 10234   0013C2                     u6701:
 10235   0013C2  EFFB  F009         	goto	l1100
 10236   0013C6                     u6700:
 10237   0013C6                     
 10238                           ; BSR set to: 0
 10239   0013C6  C063  F04E         	movff	___fladd@grs,??___fladd
 10240   0013CA  0E7F               	movlw	127
 10241   0013CC  164E               	andwf	??___fladd^0,f,c
 10242   0013CE  B4D8               	btfsc	status,2,c
 10243   0013D0  EFEC  F009         	goto	u6711
 10244   0013D4  EFEE  F009         	goto	u6710
 10245   0013D8                     u6711:
 10246   0013D8  EFF2  F009         	goto	l1101
 10247   0013DC                     u6710:
 10248   0013DC                     l5637:
 10249                           
 10250                           ; BSR set to: 0
 10251   0013DC  0E01               	movlw	1
 10252   0013DE  6F61               	movwf	___fladd@aexp& (0+255),b
 10253   0013E0  EFFB  F009         	goto	l1100
 10254   0013E4                     l1101:
 10255                           
 10256                           ; BSR set to: 0
 10257   0013E4  A046               	btfss	___fladd@b^0,0,c
 10258   0013E6  EFF7  F009         	goto	u6721
 10259   0013EA  EFF9  F009         	goto	u6720
 10260   0013EE                     u6721:
 10261   0013EE  EFFB  F009         	goto	l1100
 10262   0013F2                     u6720:
 10263   0013F2  EFEE  F009         	goto	l5637
 10264   0013F6                     l1100:
 10265                           
 10266                           ; BSR set to: 0
 10267   0013F6  5161               	movf	___fladd@aexp& (0+255),w,b
 10268   0013F8  B4D8               	btfsc	status,2,c
 10269   0013FA  EF01  F00A         	goto	u6731
 10270   0013FE  EF03  F00A         	goto	u6730
 10271   001402                     u6731:
 10272   001402  EF2E  F00A         	goto	l5649
 10273   001406                     u6730:
 10274   001406                     
 10275                           ; BSR set to: 0
 10276   001406  0E01               	movlw	1
 10277   001408  2646               	addwf	___fladd@b^0,f,c
 10278   00140A  0E00               	movlw	0
 10279   00140C  2247               	addwfc	(___fladd@b+1)^0,f,c
 10280   00140E  2248               	addwfc	(___fladd@b+2)^0,f,c
 10281   001410  2249               	addwfc	(___fladd@b+3)^0,f,c
 10282   001412                     
 10283                           ; BSR set to: 0
 10284   001412  A049               	btfss	(___fladd@b+3)^0,0,c
 10285   001414  EF0E  F00A         	goto	u6741
 10286   001418  EF10  F00A         	goto	u6740
 10287   00141C                     u6741:
 10288   00141C  EF2E  F00A         	goto	l5649
 10289   001420                     u6740:
 10290   001420                     
 10291                           ; BSR set to: 0
 10292   001420  C046  F04E         	movff	___fladd@b,??___fladd
 10293   001424  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 10294   001428  C048  F050         	movff	___fladd@b+2,??___fladd+2
 10295   00142C  C049  F051         	movff	___fladd@b+3,??___fladd+3
 10296   001430  3451               	rlcf	(??___fladd+3)^0,w,c
 10297   001432  3251               	rrcf	(??___fladd+3)^0,f,c
 10298   001434  3250               	rrcf	(??___fladd+2)^0,f,c
 10299   001436  324F               	rrcf	(??___fladd+1)^0,f,c
 10300   001438  324E               	rrcf	??___fladd^0,f,c
 10301   00143A  C04E  F046         	movff	??___fladd,___fladd@b
 10302   00143E  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 10303   001442  C050  F048         	movff	??___fladd+2,___fladd@b+2
 10304   001446  C051  F049         	movff	??___fladd+3,___fladd@b+3
 10305   00144A  2962               	incf	___fladd@bexp& (0+255),w,b
 10306   00144C  B4D8               	btfsc	status,2,c
 10307   00144E  EF2B  F00A         	goto	u6751
 10308   001452  EF2D  F00A         	goto	u6750
 10309   001456                     u6751:
 10310   001456  EF2E  F00A         	goto	l5649
 10311   00145A                     u6750:
 10312   00145A                     
 10313                           ; BSR set to: 0
 10314   00145A  2B62               	incf	___fladd@bexp& (0+255),f,b
 10315   00145C                     l5649:
 10316                           
 10317                           ; BSR set to: 0
 10318   00145C  2962               	incf	___fladd@bexp& (0+255),w,b
 10319   00145E  B4D8               	btfsc	status,2,c
 10320   001460  EF34  F00A         	goto	u6761
 10321   001464  EF36  F00A         	goto	u6760
 10322   001468                     u6761:
 10323   001468  EF3E  F00A         	goto	l5653
 10324   00146C                     u6760:
 10325   00146C                     
 10326                           ; BSR set to: 0
 10327   00146C  5162               	movf	___fladd@bexp& (0+255),w,b
 10328   00146E  A4D8               	btfss	status,2,c
 10329   001470  EF3C  F00A         	goto	u6771
 10330   001474  EF3E  F00A         	goto	u6770
 10331   001478                     u6771:
 10332   001478  EF50  F00A         	goto	l5657
 10333   00147C                     u6770:
 10334   00147C                     l5653:
 10335                           
 10336                           ; BSR set to: 0
 10337   00147C  0E00               	movlw	0
 10338   00147E  6E46               	movwf	___fladd@b^0,c
 10339   001480  0E00               	movlw	0
 10340   001482  6E47               	movwf	(___fladd@b+1)^0,c
 10341   001484  0E00               	movlw	0
 10342   001486  6E48               	movwf	(___fladd@b+2)^0,c
 10343   001488  0E00               	movlw	0
 10344   00148A  6E49               	movwf	(___fladd@b+3)^0,c
 10345   00148C  5162               	movf	___fladd@bexp& (0+255),w,b
 10346   00148E  A4D8               	btfss	status,2,c
 10347   001490  EF4C  F00A         	goto	u6781
 10348   001494  EF4E  F00A         	goto	u6780
 10349   001498                     u6781:
 10350   001498  EF50  F00A         	goto	l5657
 10351   00149C                     u6780:
 10352   00149C                     
 10353                           ; BSR set to: 0
 10354   00149C  0E00               	movlw	0
 10355   00149E  6F60               	movwf	___fladd@signs& (0+255),b
 10356   0014A0                     l5657:
 10357                           
 10358                           ; BSR set to: 0
 10359   0014A0  A162               	btfss	___fladd@bexp& (0+255),0,b
 10360   0014A2  EF55  F00A         	goto	u6791
 10361   0014A6  EF57  F00A         	goto	u6790
 10362   0014AA                     u6791:
 10363   0014AA  EF5A  F00A         	goto	l5661
 10364   0014AE                     u6790:
 10365   0014AE                     
 10366                           ; BSR set to: 0
 10367   0014AE  8E48               	bsf	(___fladd@b+2)^0,7,c
 10368   0014B0  EF5B  F00A         	goto	l5663
 10369   0014B4                     l5661:
 10370                           
 10371                           ; BSR set to: 0
 10372   0014B4  9E48               	bcf	(___fladd@b+2)^0,7,c
 10373   0014B6                     l5663:
 10374                           
 10375                           ; BSR set to: 0
 10376   0014B6  90D8               	bcf	status,0,c
 10377   0014B8  3162               	rrcf	___fladd@bexp& (0+255),w,b
 10378   0014BA  6E49               	movwf	(___fladd@b+3)^0,c
 10379   0014BC                     
 10380                           ; BSR set to: 0
 10381   0014BC  AF60               	btfss	___fladd@signs& (0+255),7,b
 10382   0014BE  EF63  F00A         	goto	u6801
 10383   0014C2  EF65  F00A         	goto	u6800
 10384   0014C6                     u6801:
 10385   0014C6  EF66  F00A         	goto	l5669
 10386   0014CA                     u6800:
 10387   0014CA                     
 10388                           ; BSR set to: 0
 10389   0014CA  8E49               	bsf	(___fladd@b+3)^0,7,c
 10390   0014CC                     l5669:
 10391                           
 10392                           ; BSR set to: 0
 10393   0014CC  C046  F046         	movff	___fladd@b,?___fladd
 10394   0014D0  C047  F047         	movff	___fladd@b+1,?___fladd+1
 10395   0014D4  C048  F048         	movff	___fladd@b+2,?___fladd+2
 10396   0014D8  C049  F049         	movff	___fladd@b+3,?___fladd+3
 10397   0014DC                     l1083:
 10398                           
 10399                           ; BSR set to: 0
 10400   0014DC  0012               	return		;funcret
 10401   0014DE                     __end_of___fladd:
 10402                           	callstack 0
 10403                           
 10404 ;; *************** function ___flneg *****************
 10405 ;; Defined at:
 10406 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  f1              4   32[BANK0 ] unsigned char 
 10409 ;; Auto vars:     Size  Location     Type
 10410 ;;		None
 10411 ;; Return value:  Size  Location     Type
 10412 ;;                  4   32[BANK0 ] unsigned char 
 10413 ;; Registers used:
 10414 ;;		wreg, status,2, status,0
 10415 ;; Tracked objects:
 10416 ;;		On entry : 0/0
 10417 ;;		On exit  : 0/0
 10418 ;;		Unchanged: 0/0
 10419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10424 ;;Total ram usage:        4 bytes
 10425 ;; Hardware stack levels used: 1
 10426 ;; Hardware stack levels required when called: 1
 10427 ;; This function calls:
 10428 ;;		Nothing
 10429 ;; This function is called by:
 10430 ;;		_efgtoa
 10431 ;;		_sinf
 10432 ;;		___rem_pio2f
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text36
 10437   0046CE                     __ptext36:
 10438                           	callstack 0
 10439   0046CE                     ___flneg:
 10440                           	callstack 24
 10441   0046CE  0100               	movlb	0	; () banked
 10442   0046D0  5180               	movf	___flneg@f1& (0+255),w,b
 10443   0046D2  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10444   0046D4  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10445   0046D6  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10446   0046D8  B4D8               	btfsc	status,2,c
 10447   0046DA  EF71  F023         	goto	u7441
 10448   0046DE  EF73  F023         	goto	u7440
 10449   0046E2                     u7441:
 10450   0046E2  EF7B  F023         	goto	l6083
 10451   0046E6                     u7440:
 10452   0046E6                     
 10453                           ; BSR set to: 0
 10454   0046E6  0E00               	movlw	0
 10455   0046E8  1B80               	xorwf	___flneg@f1& (0+255),f,b
 10456   0046EA  0E00               	movlw	0
 10457   0046EC  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10458   0046EE  0E00               	movlw	0
 10459   0046F0  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10460   0046F2  0E80               	movlw	128
 10461   0046F4  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10462   0046F6                     l6083:
 10463                           
 10464                           ; BSR set to: 0
 10465   0046F6  C080  F080         	movff	___flneg@f1,?___flneg
 10466   0046FA  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 10467   0046FE  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 10468   004702  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 10469   004706                     
 10470                           ; BSR set to: 0
 10471   004706  0012               	return		;funcret
 10472   004708                     __end_of___flneg:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function ___flmul *****************
 10476 ;; Defined at:
 10477 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  b               4   19[COMRAM] unsigned char 
 10480 ;;  a               4   23[COMRAM] unsigned char 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  prod            4   38[COMRAM] struct .
 10483 ;;  grs             4   33[COMRAM] unsigned long 
 10484 ;;  temp            2   42[COMRAM] struct .
 10485 ;;  bexp            1   37[COMRAM] unsigned char 
 10486 ;;  aexp            1   32[COMRAM] unsigned char 
 10487 ;;  sign            1   31[COMRAM] unsigned char 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  4   19[COMRAM] unsigned char 
 10490 ;; Registers used:
 10491 ;;		wreg, status,2, status,0, prodl, prodh
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10497 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10498 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10499 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10500 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10501 ;;Total ram usage:       25 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 1
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_runDAC
 10508 ;;		_runADC
 10509 ;;		_efgtoa
 10510 ;;		___cosdf
 10511 ;;		___rem_pio2f
 10512 ;;		___sindf
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text37
 10517   0014DE                     __ptext37:
 10518                           	callstack 0
 10519   0014DE                     ___flmul:
 10520                           	callstack 24
 10521   0014DE  5017               	movf	(___flmul@b+3)^0,w,c
 10522   0014E0  0B80               	andlw	128
 10523   0014E2  6E20               	movwf	___flmul@sign^0,c
 10524   0014E4  5017               	movf	(___flmul@b+3)^0,w,c
 10525   0014E6  2417               	addwf	(___flmul@b+3)^0,w,c
 10526   0014E8  6E26               	movwf	___flmul@bexp^0,c
 10527   0014EA  AE16               	btfss	(___flmul@b+2)^0,7,c
 10528   0014EC  EF7A  F00A         	goto	u7051
 10529   0014F0  EF7C  F00A         	goto	u7050
 10530   0014F4                     u7051:
 10531   0014F4  EF7D  F00A         	goto	l5831
 10532   0014F8                     u7050:
 10533   0014F8  8026               	bsf	___flmul@bexp^0,0,c
 10534   0014FA                     l5831:
 10535   0014FA  5026               	movf	___flmul@bexp^0,w,c
 10536   0014FC  B4D8               	btfsc	status,2,c
 10537   0014FE  EF83  F00A         	goto	u7061
 10538   001502  EF85  F00A         	goto	u7060
 10539   001506                     u7061:
 10540   001506  EF98  F00A         	goto	l5839
 10541   00150A                     u7060:
 10542   00150A  2826               	incf	___flmul@bexp^0,w,c
 10543   00150C  A4D8               	btfss	status,2,c
 10544   00150E  EF8B  F00A         	goto	u7071
 10545   001512  EF8D  F00A         	goto	u7070
 10546   001516                     u7071:
 10547   001516  EF95  F00A         	goto	l5837
 10548   00151A                     u7070:
 10549   00151A  0E00               	movlw	0
 10550   00151C  6E14               	movwf	___flmul@b^0,c
 10551   00151E  0E00               	movlw	0
 10552   001520  6E15               	movwf	(___flmul@b+1)^0,c
 10553   001522  0E00               	movlw	0
 10554   001524  6E16               	movwf	(___flmul@b+2)^0,c
 10555   001526  0E00               	movlw	0
 10556   001528  6E17               	movwf	(___flmul@b+3)^0,c
 10557   00152A                     l5837:
 10558   00152A  8E16               	bsf	(___flmul@b+2)^0,7,c
 10559   00152C  EFA0  F00A         	goto	l5841
 10560   001530                     l5839:
 10561   001530  0E00               	movlw	0
 10562   001532  6E14               	movwf	___flmul@b^0,c
 10563   001534  0E00               	movlw	0
 10564   001536  6E15               	movwf	(___flmul@b+1)^0,c
 10565   001538  0E00               	movlw	0
 10566   00153A  6E16               	movwf	(___flmul@b+2)^0,c
 10567   00153C  0E00               	movlw	0
 10568   00153E  6E17               	movwf	(___flmul@b+3)^0,c
 10569   001540                     l5841:
 10570   001540  501B               	movf	(___flmul@a+3)^0,w,c
 10571   001542  0B80               	andlw	128
 10572   001544  1A20               	xorwf	___flmul@sign^0,f,c
 10573   001546  501B               	movf	(___flmul@a+3)^0,w,c
 10574   001548  241B               	addwf	(___flmul@a+3)^0,w,c
 10575   00154A  6E21               	movwf	___flmul@aexp^0,c
 10576   00154C  AE1A               	btfss	(___flmul@a+2)^0,7,c
 10577   00154E  EFAB  F00A         	goto	u7081
 10578   001552  EFAD  F00A         	goto	u7080
 10579   001556                     u7081:
 10580   001556  EFAE  F00A         	goto	l5849
 10581   00155A                     u7080:
 10582   00155A  8021               	bsf	___flmul@aexp^0,0,c
 10583   00155C                     l5849:
 10584   00155C  5021               	movf	___flmul@aexp^0,w,c
 10585   00155E  B4D8               	btfsc	status,2,c
 10586   001560  EFB4  F00A         	goto	u7091
 10587   001564  EFB6  F00A         	goto	u7090
 10588   001568                     u7091:
 10589   001568  EFC9  F00A         	goto	l5857
 10590   00156C                     u7090:
 10591   00156C  2821               	incf	___flmul@aexp^0,w,c
 10592   00156E  A4D8               	btfss	status,2,c
 10593   001570  EFBC  F00A         	goto	u7101
 10594   001574  EFBE  F00A         	goto	u7100
 10595   001578                     u7101:
 10596   001578  EFC6  F00A         	goto	l5855
 10597   00157C                     u7100:
 10598   00157C  0E00               	movlw	0
 10599   00157E  6E18               	movwf	___flmul@a^0,c
 10600   001580  0E00               	movlw	0
 10601   001582  6E19               	movwf	(___flmul@a+1)^0,c
 10602   001584  0E00               	movlw	0
 10603   001586  6E1A               	movwf	(___flmul@a+2)^0,c
 10604   001588  0E00               	movlw	0
 10605   00158A  6E1B               	movwf	(___flmul@a+3)^0,c
 10606   00158C                     l5855:
 10607   00158C  8E1A               	bsf	(___flmul@a+2)^0,7,c
 10608   00158E  EFD1  F00A         	goto	l1160
 10609   001592                     l5857:
 10610   001592  0E00               	movlw	0
 10611   001594  6E18               	movwf	___flmul@a^0,c
 10612   001596  0E00               	movlw	0
 10613   001598  6E19               	movwf	(___flmul@a+1)^0,c
 10614   00159A  0E00               	movlw	0
 10615   00159C  6E1A               	movwf	(___flmul@a+2)^0,c
 10616   00159E  0E00               	movlw	0
 10617   0015A0  6E1B               	movwf	(___flmul@a+3)^0,c
 10618   0015A2                     l1160:
 10619   0015A2  5021               	movf	___flmul@aexp^0,w,c
 10620   0015A4  B4D8               	btfsc	status,2,c
 10621   0015A6  EFD7  F00A         	goto	u7111
 10622   0015AA  EFD9  F00A         	goto	u7110
 10623   0015AE                     u7111:
 10624   0015AE  EFE1  F00A         	goto	l5861
 10625   0015B2                     u7110:
 10626   0015B2  5026               	movf	___flmul@bexp^0,w,c
 10627   0015B4  A4D8               	btfss	status,2,c
 10628   0015B6  EFDF  F00A         	goto	u7121
 10629   0015BA  EFE1  F00A         	goto	u7120
 10630   0015BE                     u7121:
 10631   0015BE  EFEB  F00A         	goto	l5865
 10632   0015C2                     u7120:
 10633   0015C2                     l5861:
 10634   0015C2  0E00               	movlw	0
 10635   0015C4  6E14               	movwf	?___flmul^0,c
 10636   0015C6  0E00               	movlw	0
 10637   0015C8  6E15               	movwf	(?___flmul+1)^0,c
 10638   0015CA  0E00               	movlw	0
 10639   0015CC  6E16               	movwf	(?___flmul+2)^0,c
 10640   0015CE  0E00               	movlw	0
 10641   0015D0  6E17               	movwf	(?___flmul+3)^0,c
 10642   0015D2  EF83  F00C         	goto	l1164
 10643   0015D6                     l5865:
 10644   0015D6  501A               	movf	(___flmul@a+2)^0,w,c
 10645   0015D8  0214               	mulwf	___flmul@b^0,c
 10646   0015DA  CFF3 F02B          	movff	prodl,___flmul@temp
 10647   0015DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10648   0015E2  502B               	movf	___flmul@temp^0,w,c
 10649   0015E4  6E22               	movwf	___flmul@grs^0,c
 10650   0015E6  6A23               	clrf	(___flmul@grs+1)^0,c
 10651   0015E8  6A24               	clrf	(___flmul@grs+2)^0,c
 10652   0015EA  6A25               	clrf	(___flmul@grs+3)^0,c
 10653   0015EC  502C               	movf	(___flmul@temp+1)^0,w,c
 10654   0015EE  6E27               	movwf	___flmul@prod^0,c
 10655   0015F0  6A28               	clrf	(___flmul@prod+1)^0,c
 10656   0015F2  6A29               	clrf	(___flmul@prod+2)^0,c
 10657   0015F4  6A2A               	clrf	(___flmul@prod+3)^0,c
 10658   0015F6  5019               	movf	(___flmul@a+1)^0,w,c
 10659   0015F8  0215               	mulwf	(___flmul@b+1)^0,c
 10660   0015FA  CFF3 F02B          	movff	prodl,___flmul@temp
 10661   0015FE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10662   001602  502B               	movf	___flmul@temp^0,w,c
 10663   001604  2622               	addwf	___flmul@grs^0,f,c
 10664   001606  0E00               	movlw	0
 10665   001608  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10666   00160A  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10667   00160C  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10668   00160E  502C               	movf	(___flmul@temp+1)^0,w,c
 10669   001610  2627               	addwf	___flmul@prod^0,f,c
 10670   001612  0E00               	movlw	0
 10671   001614  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10672   001616  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10673   001618  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10674   00161A  5018               	movf	___flmul@a^0,w,c
 10675   00161C  0216               	mulwf	(___flmul@b+2)^0,c
 10676   00161E  CFF3 F02B          	movff	prodl,___flmul@temp
 10677   001622  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10678   001626  502B               	movf	___flmul@temp^0,w,c
 10679   001628  2622               	addwf	___flmul@grs^0,f,c
 10680   00162A  0E00               	movlw	0
 10681   00162C  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10682   00162E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10683   001630  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10684   001632  502C               	movf	(___flmul@temp+1)^0,w,c
 10685   001634  2627               	addwf	___flmul@prod^0,f,c
 10686   001636  0E00               	movlw	0
 10687   001638  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10688   00163A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10689   00163C  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10690   00163E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10691   001642  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10692   001646  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10693   00164A  6A22               	clrf	___flmul@grs^0,c
 10694   00164C  5018               	movf	___flmul@a^0,w,c
 10695   00164E  0215               	mulwf	(___flmul@b+1)^0,c
 10696   001650  CFF3 F02B          	movff	prodl,___flmul@temp
 10697   001654  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10698   001658  502B               	movf	___flmul@temp^0,w,c
 10699   00165A  2622               	addwf	___flmul@grs^0,f,c
 10700   00165C  502C               	movf	(___flmul@temp+1)^0,w,c
 10701   00165E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10702   001660  0E00               	movlw	0
 10703   001662  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10704   001664  0E00               	movlw	0
 10705   001666  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10706   001668  5019               	movf	(___flmul@a+1)^0,w,c
 10707   00166A  0214               	mulwf	___flmul@b^0,c
 10708   00166C  CFF3 F02B          	movff	prodl,___flmul@temp
 10709   001670  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10710   001674  502B               	movf	___flmul@temp^0,w,c
 10711   001676  2622               	addwf	___flmul@grs^0,f,c
 10712   001678  502C               	movf	(___flmul@temp+1)^0,w,c
 10713   00167A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10714   00167C  0E00               	movlw	0
 10715   00167E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10716   001680  0E00               	movlw	0
 10717   001682  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10718   001684  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10719   001688  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10720   00168C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10721   001690  6A22               	clrf	___flmul@grs^0,c
 10722   001692  5018               	movf	___flmul@a^0,w,c
 10723   001694  0214               	mulwf	___flmul@b^0,c
 10724   001696  CFF3 F02B          	movff	prodl,___flmul@temp
 10725   00169A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10726   00169E  502B               	movf	___flmul@temp^0,w,c
 10727   0016A0  2622               	addwf	___flmul@grs^0,f,c
 10728   0016A2  502C               	movf	(___flmul@temp+1)^0,w,c
 10729   0016A4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10730   0016A6  0E00               	movlw	0
 10731   0016A8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10732   0016AA  0E00               	movlw	0
 10733   0016AC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10734   0016AE  501A               	movf	(___flmul@a+2)^0,w,c
 10735   0016B0  0215               	mulwf	(___flmul@b+1)^0,c
 10736   0016B2  CFF3 F02B          	movff	prodl,___flmul@temp
 10737   0016B6  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10738   0016BA  502B               	movf	___flmul@temp^0,w,c
 10739   0016BC  2627               	addwf	___flmul@prod^0,f,c
 10740   0016BE  502C               	movf	(___flmul@temp+1)^0,w,c
 10741   0016C0  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10742   0016C2  0E00               	movlw	0
 10743   0016C4  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10744   0016C6  0E00               	movlw	0
 10745   0016C8  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10746   0016CA  5019               	movf	(___flmul@a+1)^0,w,c
 10747   0016CC  0216               	mulwf	(___flmul@b+2)^0,c
 10748   0016CE  CFF3 F02B          	movff	prodl,___flmul@temp
 10749   0016D2  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10750   0016D6  502B               	movf	___flmul@temp^0,w,c
 10751   0016D8  2627               	addwf	___flmul@prod^0,f,c
 10752   0016DA  502C               	movf	(___flmul@temp+1)^0,w,c
 10753   0016DC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10754   0016DE  0E00               	movlw	0
 10755   0016E0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10756   0016E2  0E00               	movlw	0
 10757   0016E4  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10758   0016E6  501A               	movf	(___flmul@a+2)^0,w,c
 10759   0016E8  0216               	mulwf	(___flmul@b+2)^0,c
 10760   0016EA  CFF3 F02B          	movff	prodl,___flmul@temp
 10761   0016EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10762   0016F2  502B               	movf	___flmul@temp^0,w,c
 10763   0016F4  6E1C               	movwf	??___flmul^0,c
 10764   0016F6  502C               	movf	(___flmul@temp+1)^0,w,c
 10765   0016F8  6E1D               	movwf	(??___flmul+1)^0,c
 10766   0016FA  6A1E               	clrf	(??___flmul+2)^0,c
 10767   0016FC  6A1F               	clrf	(??___flmul+3)^0,c
 10768   0016FE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 10769   001702  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 10770   001706  C01C  F01D         	movff	??___flmul,??___flmul+1
 10771   00170A  6A1C               	clrf	??___flmul^0,c
 10772   00170C  501C               	movf	??___flmul^0,w,c
 10773   00170E  2627               	addwf	___flmul@prod^0,f,c
 10774   001710  501D               	movf	(??___flmul+1)^0,w,c
 10775   001712  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10776   001714  501E               	movf	(??___flmul+2)^0,w,c
 10777   001716  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10778   001718  501F               	movf	(??___flmul+3)^0,w,c
 10779   00171A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10780   00171C  C022  F01C         	movff	___flmul@grs,??___flmul
 10781   001720  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 10782   001724  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 10783   001728  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 10784   00172C  0E19               	movlw	25
 10785   00172E  EF9E  F00B         	goto	u7130
 10786   001732                     u7135:
 10787   001732  90D8               	bcf	status,0,c
 10788   001734  321F               	rrcf	(??___flmul+3)^0,f,c
 10789   001736  321E               	rrcf	(??___flmul+2)^0,f,c
 10790   001738  321D               	rrcf	(??___flmul+1)^0,f,c
 10791   00173A  321C               	rrcf	??___flmul^0,f,c
 10792   00173C                     u7130:
 10793   00173C  2EE8               	decfsz	wreg,f,c
 10794   00173E  EF99  F00B         	goto	u7135
 10795   001742  501C               	movf	??___flmul^0,w,c
 10796   001744  2627               	addwf	___flmul@prod^0,f,c
 10797   001746  501D               	movf	(??___flmul+1)^0,w,c
 10798   001748  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10799   00174A  501E               	movf	(??___flmul+2)^0,w,c
 10800   00174C  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10801   00174E  501F               	movf	(??___flmul+3)^0,w,c
 10802   001750  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10803   001752  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10804   001756  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10805   00175A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10806   00175E  6A22               	clrf	___flmul@grs^0,c
 10807   001760  5021               	movf	___flmul@aexp^0,w,c
 10808   001762  C026  F01C         	movff	___flmul@bexp,??___flmul
 10809   001766  6A1D               	clrf	(??___flmul+1)^0,c
 10810   001768  261C               	addwf	??___flmul^0,f,c
 10811   00176A  0E00               	movlw	0
 10812   00176C  221D               	addwfc	(??___flmul+1)^0,f,c
 10813   00176E  0E82               	movlw	130
 10814   001770  241C               	addwf	??___flmul^0,w,c
 10815   001772  6E2B               	movwf	___flmul@temp^0,c
 10816   001774  0EFF               	movlw	255
 10817   001776  201D               	addwfc	(??___flmul+1)^0,w,c
 10818   001778  6E2C               	movwf	(___flmul@temp+1)^0,c
 10819   00177A  EFD4  F00B         	goto	l5913
 10820   00177E                     l5907:
 10821   00177E  90D8               	bcf	status,0,c
 10822   001780  3627               	rlcf	___flmul@prod^0,f,c
 10823   001782  3628               	rlcf	(___flmul@prod+1)^0,f,c
 10824   001784  3629               	rlcf	(___flmul@prod+2)^0,f,c
 10825   001786  362A               	rlcf	(___flmul@prod+3)^0,f,c
 10826   001788  AE25               	btfss	(___flmul@grs+3)^0,7,c
 10827   00178A  EFC9  F00B         	goto	u7141
 10828   00178E  EFCB  F00B         	goto	u7140
 10829   001792                     u7141:
 10830   001792  EFCC  F00B         	goto	l1167
 10831   001796                     u7140:
 10832   001796  8027               	bsf	___flmul@prod^0,0,c
 10833   001798                     l1167:
 10834   001798  90D8               	bcf	status,0,c
 10835   00179A  3622               	rlcf	___flmul@grs^0,f,c
 10836   00179C  3623               	rlcf	(___flmul@grs+1)^0,f,c
 10837   00179E  3624               	rlcf	(___flmul@grs+2)^0,f,c
 10838   0017A0  3625               	rlcf	(___flmul@grs+3)^0,f,c
 10839   0017A2  062B               	decf	___flmul@temp^0,f,c
 10840   0017A4  A0D8               	btfss	status,0,c
 10841   0017A6  062C               	decf	(___flmul@temp+1)^0,f,c
 10842   0017A8                     l5913:
 10843   0017A8  AE29               	btfss	(___flmul@prod+2)^0,7,c
 10844   0017AA  EFD9  F00B         	goto	u7151
 10845   0017AE  EFDB  F00B         	goto	u7150
 10846   0017B2                     u7151:
 10847   0017B2  EFBF  F00B         	goto	l5907
 10848   0017B6                     u7150:
 10849   0017B6  0E00               	movlw	0
 10850   0017B8  6E21               	movwf	___flmul@aexp^0,c
 10851   0017BA  AE25               	btfss	(___flmul@grs+3)^0,7,c
 10852   0017BC  EFE2  F00B         	goto	u7161
 10853   0017C0  EFE4  F00B         	goto	u7160
 10854   0017C4                     u7161:
 10855   0017C4  EF08  F00C         	goto	l1169
 10856   0017C8                     u7160:
 10857   0017C8  0EFF               	movlw	255
 10858   0017CA  1422               	andwf	___flmul@grs^0,w,c
 10859   0017CC  6E1C               	movwf	??___flmul^0,c
 10860   0017CE  0EFF               	movlw	255
 10861   0017D0  1423               	andwf	(___flmul@grs+1)^0,w,c
 10862   0017D2  6E1D               	movwf	(??___flmul+1)^0,c
 10863   0017D4  0EFF               	movlw	255
 10864   0017D6  1424               	andwf	(___flmul@grs+2)^0,w,c
 10865   0017D8  6E1E               	movwf	(??___flmul+2)^0,c
 10866   0017DA  0E7F               	movlw	127
 10867   0017DC  1425               	andwf	(___flmul@grs+3)^0,w,c
 10868   0017DE  6E1F               	movwf	(??___flmul+3)^0,c
 10869   0017E0  501C               	movf	??___flmul^0,w,c
 10870   0017E2  101D               	iorwf	(??___flmul+1)^0,w,c
 10871   0017E4  101E               	iorwf	(??___flmul+2)^0,w,c
 10872   0017E6  101F               	iorwf	(??___flmul+3)^0,w,c
 10873   0017E8  B4D8               	btfsc	status,2,c
 10874   0017EA  EFF9  F00B         	goto	u7171
 10875   0017EE  EFFB  F00B         	goto	u7170
 10876   0017F2                     u7171:
 10877   0017F2  EFFF  F00B         	goto	l1170
 10878   0017F6                     u7170:
 10879   0017F6                     l5921:
 10880   0017F6  0E01               	movlw	1
 10881   0017F8  6E21               	movwf	___flmul@aexp^0,c
 10882   0017FA  EF08  F00C         	goto	l1169
 10883   0017FE                     l1170:
 10884   0017FE  A027               	btfss	___flmul@prod^0,0,c
 10885   001800  EF04  F00C         	goto	u7181
 10886   001804  EF06  F00C         	goto	u7180
 10887   001808                     u7181:
 10888   001808  EF08  F00C         	goto	l1169
 10889   00180C                     u7180:
 10890   00180C  EFFB  F00B         	goto	l5921
 10891   001810                     l1169:
 10892   001810  5021               	movf	___flmul@aexp^0,w,c
 10893   001812  B4D8               	btfsc	status,2,c
 10894   001814  EF0E  F00C         	goto	u7191
 10895   001818  EF10  F00C         	goto	u7190
 10896   00181C                     u7191:
 10897   00181C  EF34  F00C         	goto	l5933
 10898   001820                     u7190:
 10899   001820  0E01               	movlw	1
 10900   001822  2627               	addwf	___flmul@prod^0,f,c
 10901   001824  0E00               	movlw	0
 10902   001826  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10903   001828  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10904   00182A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10905   00182C  A02A               	btfss	(___flmul@prod+3)^0,0,c
 10906   00182E  EF1B  F00C         	goto	u7201
 10907   001832  EF1D  F00C         	goto	u7200
 10908   001836                     u7201:
 10909   001836  EF34  F00C         	goto	l5933
 10910   00183A                     u7200:
 10911   00183A  C027  F01C         	movff	___flmul@prod,??___flmul
 10912   00183E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 10913   001842  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 10914   001846  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 10915   00184A  341F               	rlcf	(??___flmul+3)^0,w,c
 10916   00184C  321F               	rrcf	(??___flmul+3)^0,f,c
 10917   00184E  321E               	rrcf	(??___flmul+2)^0,f,c
 10918   001850  321D               	rrcf	(??___flmul+1)^0,f,c
 10919   001852  321C               	rrcf	??___flmul^0,f,c
 10920   001854  C01C  F027         	movff	??___flmul,___flmul@prod
 10921   001858  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 10922   00185C  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 10923   001860  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 10924   001864  4A2B               	infsnz	___flmul@temp^0,f,c
 10925   001866  2A2C               	incf	(___flmul@temp+1)^0,f,c
 10926   001868                     l5933:
 10927   001868  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 10928   00186A  EF3F  F00C         	goto	u7211
 10929   00186E  502C               	movf	(___flmul@temp+1)^0,w,c
 10930   001870  E108               	bnz	u7210
 10931   001872  282B               	incf	___flmul@temp^0,w,c
 10932   001874  A0D8               	btfss	status,0,c
 10933   001876  EF3F  F00C         	goto	u7211
 10934   00187A  EF41  F00C         	goto	u7210
 10935   00187E                     u7211:
 10936   00187E  EF4B  F00C         	goto	l5937
 10937   001882                     u7210:
 10938   001882  0E00               	movlw	0
 10939   001884  6E27               	movwf	___flmul@prod^0,c
 10940   001886  0E00               	movlw	0
 10941   001888  6E28               	movwf	(___flmul@prod+1)^0,c
 10942   00188A  0E80               	movlw	128
 10943   00188C  6E29               	movwf	(___flmul@prod+2)^0,c
 10944   00188E  0E7F               	movlw	127
 10945   001890  6E2A               	movwf	(___flmul@prod+3)^0,c
 10946   001892  EF79  F00C         	goto	l5949
 10947   001896                     l5937:
 10948   001896  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 10949   001898  EF58  F00C         	goto	u7220
 10950   00189C  502C               	movf	(___flmul@temp+1)^0,w,c
 10951   00189E  E106               	bnz	u7221
 10952   0018A0  042B               	decf	___flmul@temp^0,w,c
 10953   0018A2  B0D8               	btfsc	status,0,c
 10954   0018A4  EF56  F00C         	goto	u7221
 10955   0018A8  EF58  F00C         	goto	u7220
 10956   0018AC                     u7221:
 10957   0018AC  EF64  F00C         	goto	l1177
 10958   0018B0                     u7220:
 10959   0018B0  0E00               	movlw	0
 10960   0018B2  6E27               	movwf	___flmul@prod^0,c
 10961   0018B4  0E00               	movlw	0
 10962   0018B6  6E28               	movwf	(___flmul@prod+1)^0,c
 10963   0018B8  0E00               	movlw	0
 10964   0018BA  6E29               	movwf	(___flmul@prod+2)^0,c
 10965   0018BC  0E00               	movlw	0
 10966   0018BE  6E2A               	movwf	(___flmul@prod+3)^0,c
 10967   0018C0  0E00               	movlw	0
 10968   0018C2  6E20               	movwf	___flmul@sign^0,c
 10969   0018C4  EF79  F00C         	goto	l5949
 10970   0018C8                     l1177:
 10971   0018C8  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 10972   0018CC  0EFF               	movlw	255
 10973   0018CE  1627               	andwf	___flmul@prod^0,f,c
 10974   0018D0  0EFF               	movlw	255
 10975   0018D2  1628               	andwf	(___flmul@prod+1)^0,f,c
 10976   0018D4  0E7F               	movlw	127
 10977   0018D6  1629               	andwf	(___flmul@prod+2)^0,f,c
 10978   0018D8  0E00               	movlw	0
 10979   0018DA  162A               	andwf	(___flmul@prod+3)^0,f,c
 10980   0018DC  A026               	btfss	___flmul@bexp^0,0,c
 10981   0018DE  EF73  F00C         	goto	u7231
 10982   0018E2  EF75  F00C         	goto	u7230
 10983   0018E6                     u7231:
 10984   0018E6  EF76  F00C         	goto	l5947
 10985   0018EA                     u7230:
 10986   0018EA  8E29               	bsf	(___flmul@prod+2)^0,7,c
 10987   0018EC                     l5947:
 10988   0018EC  90D8               	bcf	status,0,c
 10989   0018EE  3026               	rrcf	___flmul@bexp^0,w,c
 10990   0018F0  6E2A               	movwf	(___flmul@prod+3)^0,c
 10991   0018F2                     l5949:
 10992   0018F2  5020               	movf	___flmul@sign^0,w,c
 10993   0018F4  122A               	iorwf	(___flmul@prod+3)^0,f,c
 10994   0018F6  C027  F014         	movff	___flmul@prod,?___flmul
 10995   0018FA  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 10996   0018FE  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 10997   001902  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 10998   001906                     l1164:
 10999   001906  0012               	return		;funcret
 11000   001908                     __end_of___flmul:
 11001                           	callstack 0
 11002                           
 11003 ;; *************** function ___flge *****************
 11004 ;; Defined at:
 11005 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;  ff1             4   44[COMRAM] unsigned char 
 11008 ;;  ff2             4   48[COMRAM] unsigned char 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;		None
 11011 ;; Return value:  Size  Location     Type
 11012 ;;		None               void
 11013 ;; Registers used:
 11014 ;;		wreg, status,2, status,0
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11020 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11023 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;Total ram usage:       12 bytes
 11025 ;; Hardware stack levels used: 1
 11026 ;; Hardware stack levels required when called: 1
 11027 ;; This function calls:
 11028 ;;		Nothing
 11029 ;; This function is called by:
 11030 ;;		_efgtoa
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           
 11034                           	psect	text38
 11035   003BB6                     __ptext38:
 11036                           	callstack 0
 11037   003BB6                     ___flge:
 11038                           	callstack 24
 11039   003BB6  0E00               	movlw	0
 11040   003BB8  142D               	andwf	___flge@ff1^0,w,c
 11041   003BBA  6E35               	movwf	??___flge^0,c
 11042   003BBC  0E00               	movlw	0
 11043   003BBE  142E               	andwf	(___flge@ff1+1)^0,w,c
 11044   003BC0  6E36               	movwf	(??___flge+1)^0,c
 11045   003BC2  0E80               	movlw	128
 11046   003BC4  142F               	andwf	(___flge@ff1+2)^0,w,c
 11047   003BC6  6E37               	movwf	(??___flge+2)^0,c
 11048   003BC8  0E7F               	movlw	127
 11049   003BCA  1430               	andwf	(___flge@ff1+3)^0,w,c
 11050   003BCC  6E38               	movwf	(??___flge+3)^0,c
 11051   003BCE  5035               	movf	??___flge^0,w,c
 11052   003BD0  1036               	iorwf	(??___flge+1)^0,w,c
 11053   003BD2  1037               	iorwf	(??___flge+2)^0,w,c
 11054   003BD4  1038               	iorwf	(??___flge+3)^0,w,c
 11055   003BD6  A4D8               	btfss	status,2,c
 11056   003BD8  EFF0  F01D         	goto	u7391
 11057   003BDC  EFF2  F01D         	goto	u7390
 11058   003BE0                     u7391:
 11059   003BE0  EFFA  F01D         	goto	l6061
 11060   003BE4                     u7390:
 11061   003BE4  0E00               	movlw	0
 11062   003BE6  6E2D               	movwf	___flge@ff1^0,c
 11063   003BE8  0E00               	movlw	0
 11064   003BEA  6E2E               	movwf	(___flge@ff1+1)^0,c
 11065   003BEC  0E00               	movlw	0
 11066   003BEE  6E2F               	movwf	(___flge@ff1+2)^0,c
 11067   003BF0  0E00               	movlw	0
 11068   003BF2  6E30               	movwf	(___flge@ff1+3)^0,c
 11069   003BF4                     l6061:
 11070   003BF4  0E00               	movlw	0
 11071   003BF6  1431               	andwf	___flge@ff2^0,w,c
 11072   003BF8  6E35               	movwf	??___flge^0,c
 11073   003BFA  0E00               	movlw	0
 11074   003BFC  1432               	andwf	(___flge@ff2+1)^0,w,c
 11075   003BFE  6E36               	movwf	(??___flge+1)^0,c
 11076   003C00  0E80               	movlw	128
 11077   003C02  1433               	andwf	(___flge@ff2+2)^0,w,c
 11078   003C04  6E37               	movwf	(??___flge+2)^0,c
 11079   003C06  0E7F               	movlw	127
 11080   003C08  1434               	andwf	(___flge@ff2+3)^0,w,c
 11081   003C0A  6E38               	movwf	(??___flge+3)^0,c
 11082   003C0C  5035               	movf	??___flge^0,w,c
 11083   003C0E  1036               	iorwf	(??___flge+1)^0,w,c
 11084   003C10  1037               	iorwf	(??___flge+2)^0,w,c
 11085   003C12  1038               	iorwf	(??___flge+3)^0,w,c
 11086   003C14  A4D8               	btfss	status,2,c
 11087   003C16  EF0F  F01E         	goto	u7401
 11088   003C1A  EF11  F01E         	goto	u7400
 11089   003C1E                     u7401:
 11090   003C1E  EF19  F01E         	goto	l6065
 11091   003C22                     u7400:
 11092   003C22  0E00               	movlw	0
 11093   003C24  6E31               	movwf	___flge@ff2^0,c
 11094   003C26  0E00               	movlw	0
 11095   003C28  6E32               	movwf	(___flge@ff2+1)^0,c
 11096   003C2A  0E00               	movlw	0
 11097   003C2C  6E33               	movwf	(___flge@ff2+2)^0,c
 11098   003C2E  0E00               	movlw	0
 11099   003C30  6E34               	movwf	(___flge@ff2+3)^0,c
 11100   003C32                     l6065:
 11101   003C32  AE30               	btfss	(___flge@ff1+3)^0,7,c
 11102   003C34  EF1E  F01E         	goto	u7411
 11103   003C38  EF20  F01E         	goto	u7410
 11104   003C3C                     u7411:
 11105   003C3C  EF29  F01E         	goto	l6069
 11106   003C40                     u7410:
 11107   003C40  6C2D               	negf	___flge@ff1^0,c
 11108   003C42  1E2E               	comf	(___flge@ff1+1)^0,f,c
 11109   003C44  B0D8               	btfsc	status,0,c
 11110   003C46  2A2E               	incf	(___flge@ff1+1)^0,f,c
 11111   003C48  1E2F               	comf	(___flge@ff1+2)^0,f,c
 11112   003C4A  B0D8               	btfsc	status,0,c
 11113   003C4C  2A2F               	incf	(___flge@ff1+2)^0,f,c
 11114   003C4E  0E80               	movlw	128
 11115   003C50  5630               	subfwb	(___flge@ff1+3)^0,f,c
 11116   003C52                     l6069:
 11117   003C52  AE34               	btfss	(___flge@ff2+3)^0,7,c
 11118   003C54  EF2E  F01E         	goto	u7421
 11119   003C58  EF30  F01E         	goto	u7420
 11120   003C5C                     u7421:
 11121   003C5C  EF39  F01E         	goto	l811
 11122   003C60                     u7420:
 11123   003C60  6C31               	negf	___flge@ff2^0,c
 11124   003C62  1E32               	comf	(___flge@ff2+1)^0,f,c
 11125   003C64  B0D8               	btfsc	status,0,c
 11126   003C66  2A32               	incf	(___flge@ff2+1)^0,f,c
 11127   003C68  1E33               	comf	(___flge@ff2+2)^0,f,c
 11128   003C6A  B0D8               	btfsc	status,0,c
 11129   003C6C  2A33               	incf	(___flge@ff2+2)^0,f,c
 11130   003C6E  0E80               	movlw	128
 11131   003C70  5634               	subfwb	(___flge@ff2+3)^0,f,c
 11132   003C72                     l811:
 11133   003C72  0E00               	movlw	0
 11134   003C74  1A2D               	xorwf	___flge@ff1^0,f,c
 11135   003C76  0E00               	movlw	0
 11136   003C78  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 11137   003C7A  0E00               	movlw	0
 11138   003C7C  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 11139   003C7E  0E80               	movlw	128
 11140   003C80  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 11141   003C82  0E00               	movlw	0
 11142   003C84  1A31               	xorwf	___flge@ff2^0,f,c
 11143   003C86  0E00               	movlw	0
 11144   003C88  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 11145   003C8A  0E00               	movlw	0
 11146   003C8C  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 11147   003C8E  0E80               	movlw	128
 11148   003C90  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 11149   003C92  5031               	movf	___flge@ff2^0,w,c
 11150   003C94  5C2D               	subwf	___flge@ff1^0,w,c
 11151   003C96  5032               	movf	(___flge@ff2+1)^0,w,c
 11152   003C98  582E               	subwfb	(___flge@ff1+1)^0,w,c
 11153   003C9A  5033               	movf	(___flge@ff2+2)^0,w,c
 11154   003C9C  582F               	subwfb	(___flge@ff1+2)^0,w,c
 11155   003C9E  5034               	movf	(___flge@ff2+3)^0,w,c
 11156   003CA0  5830               	subwfb	(___flge@ff1+3)^0,w,c
 11157   003CA2  B0D8               	btfsc	status,0,c
 11158   003CA4  EF56  F01E         	goto	u7431
 11159   003CA8  EF58  F01E         	goto	u7430
 11160   003CAC                     u7431:
 11161   003CAC  EF5B  F01E         	goto	l6075
 11162   003CB0                     u7430:
 11163   003CB0  90D8               	bcf	status,0,c
 11164   003CB2  EF5C  F01E         	goto	l816
 11165   003CB6                     l6075:
 11166   003CB6  80D8               	bsf	status,0,c
 11167   003CB8                     l816:
 11168   003CB8  0012               	return		;funcret
 11169   003CBA                     __end_of___flge:
 11170                           	callstack 0
 11171                           
 11172 ;; *************** function ___fleq *****************
 11173 ;; Defined at:
 11174 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  ff1             4    5[COMRAM] unsigned char 
 11177 ;;  ff2             4    9[COMRAM] unsigned char 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;		None
 11180 ;; Return value:  Size  Location     Type
 11181 ;;		None               void
 11182 ;; Registers used:
 11183 ;;		wreg, status,2, status,0
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11189 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11192 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11193 ;;Total ram usage:       12 bytes
 11194 ;; Hardware stack levels used: 1
 11195 ;; Hardware stack levels required when called: 1
 11196 ;; This function calls:
 11197 ;;		Nothing
 11198 ;; This function is called by:
 11199 ;;		_efgtoa
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text39
 11204   004332                     __ptext39:
 11205                           	callstack 0
 11206   004332                     ___fleq:
 11207                           	callstack 24
 11208   004332  0E00               	movlw	0
 11209   004334  1406               	andwf	___fleq@ff1^0,w,c
 11210   004336  6E0E               	movwf	??___fleq^0,c
 11211   004338  0E00               	movlw	0
 11212   00433A  1407               	andwf	(___fleq@ff1+1)^0,w,c
 11213   00433C  6E0F               	movwf	(??___fleq+1)^0,c
 11214   00433E  0E80               	movlw	128
 11215   004340  1408               	andwf	(___fleq@ff1+2)^0,w,c
 11216   004342  6E10               	movwf	(??___fleq+2)^0,c
 11217   004344  0E7F               	movlw	127
 11218   004346  1409               	andwf	(___fleq@ff1+3)^0,w,c
 11219   004348  6E11               	movwf	(??___fleq+3)^0,c
 11220   00434A  500E               	movf	??___fleq^0,w,c
 11221   00434C  100F               	iorwf	(??___fleq+1)^0,w,c
 11222   00434E  1010               	iorwf	(??___fleq+2)^0,w,c
 11223   004350  1011               	iorwf	(??___fleq+3)^0,w,c
 11224   004352  A4D8               	btfss	status,2,c
 11225   004354  EFAE  F021         	goto	u7361
 11226   004358  EFB0  F021         	goto	u7360
 11227   00435C                     u7361:
 11228   00435C  EFB8  F021         	goto	l6045
 11229   004360                     u7360:
 11230   004360  0E00               	movlw	0
 11231   004362  6E06               	movwf	___fleq@ff1^0,c
 11232   004364  0E00               	movlw	0
 11233   004366  6E07               	movwf	(___fleq@ff1+1)^0,c
 11234   004368  0E00               	movlw	0
 11235   00436A  6E08               	movwf	(___fleq@ff1+2)^0,c
 11236   00436C  0E00               	movlw	0
 11237   00436E  6E09               	movwf	(___fleq@ff1+3)^0,c
 11238   004370                     l6045:
 11239   004370  0E00               	movlw	0
 11240   004372  140A               	andwf	___fleq@ff2^0,w,c
 11241   004374  6E0E               	movwf	??___fleq^0,c
 11242   004376  0E00               	movlw	0
 11243   004378  140B               	andwf	(___fleq@ff2+1)^0,w,c
 11244   00437A  6E0F               	movwf	(??___fleq+1)^0,c
 11245   00437C  0E80               	movlw	128
 11246   00437E  140C               	andwf	(___fleq@ff2+2)^0,w,c
 11247   004380  6E10               	movwf	(??___fleq+2)^0,c
 11248   004382  0E7F               	movlw	127
 11249   004384  140D               	andwf	(___fleq@ff2+3)^0,w,c
 11250   004386  6E11               	movwf	(??___fleq+3)^0,c
 11251   004388  500E               	movf	??___fleq^0,w,c
 11252   00438A  100F               	iorwf	(??___fleq+1)^0,w,c
 11253   00438C  1010               	iorwf	(??___fleq+2)^0,w,c
 11254   00438E  1011               	iorwf	(??___fleq+3)^0,w,c
 11255   004390  A4D8               	btfss	status,2,c
 11256   004392  EFCD  F021         	goto	u7371
 11257   004396  EFCF  F021         	goto	u7370
 11258   00439A                     u7371:
 11259   00439A  EFD7  F021         	goto	l6049
 11260   00439E                     u7370:
 11261   00439E  0E00               	movlw	0
 11262   0043A0  6E0A               	movwf	___fleq@ff2^0,c
 11263   0043A2  0E00               	movlw	0
 11264   0043A4  6E0B               	movwf	(___fleq@ff2+1)^0,c
 11265   0043A6  0E00               	movlw	0
 11266   0043A8  6E0C               	movwf	(___fleq@ff2+2)^0,c
 11267   0043AA  0E00               	movlw	0
 11268   0043AC  6E0D               	movwf	(___fleq@ff2+3)^0,c
 11269   0043AE                     l6049:
 11270   0043AE  500A               	movf	___fleq@ff2^0,w,c
 11271   0043B0  1806               	xorwf	___fleq@ff1^0,w,c
 11272   0043B2  E10F               	bnz	u7380
 11273   0043B4  500B               	movf	(___fleq@ff2+1)^0,w,c
 11274   0043B6  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 11275   0043B8  E10C               	bnz	u7380
 11276   0043BA  500C               	movf	(___fleq@ff2+2)^0,w,c
 11277   0043BC  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 11278   0043BE  E109               	bnz	u7380
 11279   0043C0  500D               	movf	(___fleq@ff2+3)^0,w,c
 11280   0043C2  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 11281   0043C4  B4D8               	btfsc	status,2,c
 11282   0043C6  EFE7  F021         	goto	u7381
 11283   0043CA  EFE9  F021         	goto	u7380
 11284   0043CE                     u7381:
 11285   0043CE  EFEC  F021         	goto	l6053
 11286   0043D2                     u7380:
 11287   0043D2  90D8               	bcf	status,0,c
 11288   0043D4  EFED  F021         	goto	l805
 11289   0043D8                     l6053:
 11290   0043D8  80D8               	bsf	status,0,c
 11291   0043DA                     l805:
 11292   0043DA  0012               	return		;funcret
 11293   0043DC                     __end_of___fleq:
 11294                           	callstack 0
 11295                           
 11296 ;; *************** function ___fldiv *****************
 11297 ;; Defined at:
 11298 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  b               4   44[COMRAM] unsigned char 
 11301 ;;  a               4   48[COMRAM] unsigned char 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  grs             4   63[COMRAM] unsigned long 
 11304 ;;  rem             4   56[COMRAM] unsigned long 
 11305 ;;  new_exp         2   61[COMRAM] short 
 11306 ;;  aexp            1   68[COMRAM] unsigned char 
 11307 ;;  bexp            1   67[COMRAM] unsigned char 
 11308 ;;  sign            1   60[COMRAM] unsigned char 
 11309 ;; Return value:  Size  Location     Type
 11310 ;;                  4   44[COMRAM] unsigned char 
 11311 ;; Registers used:
 11312 ;;		wreg, status,2, status,0
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11318 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11319 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11320 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11321 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11322 ;;Total ram usage:       25 bytes
 11323 ;; Hardware stack levels used: 1
 11324 ;; Hardware stack levels required when called: 1
 11325 ;; This function calls:
 11326 ;;		Nothing
 11327 ;; This function is called by:
 11328 ;;		_runDAC
 11329 ;;		_runADC
 11330 ;;		_efgtoa
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text40
 11335   0020E0                     __ptext40:
 11336                           	callstack 0
 11337   0020E0                     ___fldiv:
 11338                           	callstack 24
 11339   0020E0  5030               	movf	(___fldiv@b+3)^0,w,c
 11340   0020E2  0B80               	andlw	128
 11341   0020E4  6E3D               	movwf	___fldiv@sign^0,c
 11342   0020E6  5030               	movf	(___fldiv@b+3)^0,w,c
 11343   0020E8  2430               	addwf	(___fldiv@b+3)^0,w,c
 11344   0020EA  6E44               	movwf	___fldiv@bexp^0,c
 11345   0020EC  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11346   0020EE  EF7B  F010         	goto	u6821
 11347   0020F2  EF7D  F010         	goto	u6820
 11348   0020F6                     u6821:
 11349   0020F6  EF7E  F010         	goto	l5693
 11350   0020FA                     u6820:
 11351   0020FA  8044               	bsf	___fldiv@bexp^0,0,c
 11352   0020FC                     l5693:
 11353   0020FC  5044               	movf	___fldiv@bexp^0,w,c
 11354   0020FE  B4D8               	btfsc	status,2,c
 11355   002100  EF84  F010         	goto	u6831
 11356   002104  EF86  F010         	goto	u6830
 11357   002108                     u6831:
 11358   002108  EF9B  F010         	goto	l5703
 11359   00210C                     u6830:
 11360   00210C  2844               	incf	___fldiv@bexp^0,w,c
 11361   00210E  A4D8               	btfss	status,2,c
 11362   002110  EF8C  F010         	goto	u6841
 11363   002114  EF8E  F010         	goto	u6840
 11364   002118                     u6841:
 11365   002118  EF96  F010         	goto	l5699
 11366   00211C                     u6840:
 11367   00211C  0E00               	movlw	0
 11368   00211E  6E2D               	movwf	___fldiv@b^0,c
 11369   002120  0E00               	movlw	0
 11370   002122  6E2E               	movwf	(___fldiv@b+1)^0,c
 11371   002124  0E00               	movlw	0
 11372   002126  6E2F               	movwf	(___fldiv@b+2)^0,c
 11373   002128  0E00               	movlw	0
 11374   00212A  6E30               	movwf	(___fldiv@b+3)^0,c
 11375   00212C                     l5699:
 11376   00212C  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11377   00212E  0E00               	movlw	0
 11378   002130  6E30               	movwf	(___fldiv@b+3)^0,c
 11379   002132  EFA3  F010         	goto	l5705
 11380   002136                     l5703:
 11381   002136  0E00               	movlw	0
 11382   002138  6E2D               	movwf	___fldiv@b^0,c
 11383   00213A  0E00               	movlw	0
 11384   00213C  6E2E               	movwf	(___fldiv@b+1)^0,c
 11385   00213E  0E00               	movlw	0
 11386   002140  6E2F               	movwf	(___fldiv@b+2)^0,c
 11387   002142  0E00               	movlw	0
 11388   002144  6E30               	movwf	(___fldiv@b+3)^0,c
 11389   002146                     l5705:
 11390   002146  5034               	movf	(___fldiv@a+3)^0,w,c
 11391   002148  0B80               	andlw	128
 11392   00214A  1A3D               	xorwf	___fldiv@sign^0,f,c
 11393   00214C  5034               	movf	(___fldiv@a+3)^0,w,c
 11394   00214E  2434               	addwf	(___fldiv@a+3)^0,w,c
 11395   002150  6E45               	movwf	___fldiv@aexp^0,c
 11396   002152  AE33               	btfss	(___fldiv@a+2)^0,7,c
 11397   002154  EFAE  F010         	goto	u6851
 11398   002158  EFB0  F010         	goto	u6850
 11399   00215C                     u6851:
 11400   00215C  EFB1  F010         	goto	l5713
 11401   002160                     u6850:
 11402   002160  8045               	bsf	___fldiv@aexp^0,0,c
 11403   002162                     l5713:
 11404   002162  5045               	movf	___fldiv@aexp^0,w,c
 11405   002164  B4D8               	btfsc	status,2,c
 11406   002166  EFB7  F010         	goto	u6861
 11407   00216A  EFB9  F010         	goto	u6860
 11408   00216E                     u6861:
 11409   00216E  EFCE  F010         	goto	l5723
 11410   002172                     u6860:
 11411   002172  2845               	incf	___fldiv@aexp^0,w,c
 11412   002174  A4D8               	btfss	status,2,c
 11413   002176  EFBF  F010         	goto	u6871
 11414   00217A  EFC1  F010         	goto	u6870
 11415   00217E                     u6871:
 11416   00217E  EFC9  F010         	goto	l5719
 11417   002182                     u6870:
 11418   002182  0E00               	movlw	0
 11419   002184  6E31               	movwf	___fldiv@a^0,c
 11420   002186  0E00               	movlw	0
 11421   002188  6E32               	movwf	(___fldiv@a+1)^0,c
 11422   00218A  0E00               	movlw	0
 11423   00218C  6E33               	movwf	(___fldiv@a+2)^0,c
 11424   00218E  0E00               	movlw	0
 11425   002190  6E34               	movwf	(___fldiv@a+3)^0,c
 11426   002192                     l5719:
 11427   002192  8E33               	bsf	(___fldiv@a+2)^0,7,c
 11428   002194  0E00               	movlw	0
 11429   002196  6E34               	movwf	(___fldiv@a+3)^0,c
 11430   002198  EFD6  F010         	goto	l5725
 11431   00219C                     l5723:
 11432   00219C  0E00               	movlw	0
 11433   00219E  6E31               	movwf	___fldiv@a^0,c
 11434   0021A0  0E00               	movlw	0
 11435   0021A2  6E32               	movwf	(___fldiv@a+1)^0,c
 11436   0021A4  0E00               	movlw	0
 11437   0021A6  6E33               	movwf	(___fldiv@a+2)^0,c
 11438   0021A8  0E00               	movlw	0
 11439   0021AA  6E34               	movwf	(___fldiv@a+3)^0,c
 11440   0021AC                     l5725:
 11441   0021AC  5031               	movf	___fldiv@a^0,w,c
 11442   0021AE  1032               	iorwf	(___fldiv@a+1)^0,w,c
 11443   0021B0  1033               	iorwf	(___fldiv@a+2)^0,w,c
 11444   0021B2  1034               	iorwf	(___fldiv@a+3)^0,w,c
 11445   0021B4  A4D8               	btfss	status,2,c
 11446   0021B6  EFDF  F010         	goto	u6881
 11447   0021BA  EFE1  F010         	goto	u6880
 11448   0021BE                     u6881:
 11449   0021BE  EFF9  F010         	goto	l5737
 11450   0021C2                     u6880:
 11451   0021C2  0E00               	movlw	0
 11452   0021C4  6E2D               	movwf	___fldiv@b^0,c
 11453   0021C6  0E00               	movlw	0
 11454   0021C8  6E2E               	movwf	(___fldiv@b+1)^0,c
 11455   0021CA  0E00               	movlw	0
 11456   0021CC  6E2F               	movwf	(___fldiv@b+2)^0,c
 11457   0021CE  0E00               	movlw	0
 11458   0021D0  6E30               	movwf	(___fldiv@b+3)^0,c
 11459   0021D2  0E80               	movlw	128
 11460   0021D4  122F               	iorwf	(___fldiv@b+2)^0,f,c
 11461   0021D6  0E7F               	movlw	127
 11462   0021D8  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11463   0021DA                     l5731:
 11464   0021DA  503D               	movf	___fldiv@sign^0,w,c
 11465   0021DC  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11466   0021DE  C02D  F02D         	movff	___fldiv@b,?___fldiv
 11467   0021E2  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 11468   0021E6  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 11469   0021EA  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 11470   0021EE  EF3C  F012         	goto	l1128
 11471   0021F2                     l5737:
 11472   0021F2  5044               	movf	___fldiv@bexp^0,w,c
 11473   0021F4  A4D8               	btfss	status,2,c
 11474   0021F6  EFFF  F010         	goto	u6891
 11475   0021FA  EF01  F011         	goto	u6890
 11476   0021FE                     u6891:
 11477   0021FE  EF0B  F011         	goto	l5745
 11478   002202                     u6890:
 11479   002202  0E00               	movlw	0
 11480   002204  6E2D               	movwf	?___fldiv^0,c
 11481   002206  0E00               	movlw	0
 11482   002208  6E2E               	movwf	(?___fldiv+1)^0,c
 11483   00220A  0E00               	movlw	0
 11484   00220C  6E2F               	movwf	(?___fldiv+2)^0,c
 11485   00220E  0E00               	movlw	0
 11486   002210  6E30               	movwf	(?___fldiv+3)^0,c
 11487   002212  EF3C  F012         	goto	l1128
 11488   002216                     l5745:
 11489   002216  5045               	movf	___fldiv@aexp^0,w,c
 11490   002218  C044  F035         	movff	___fldiv@bexp,??___fldiv
 11491   00221C  6A36               	clrf	(??___fldiv+1)^0,c
 11492   00221E  5E35               	subwf	??___fldiv^0,f,c
 11493   002220  0E00               	movlw	0
 11494   002222  5A36               	subwfb	(??___fldiv+1)^0,f,c
 11495   002224  0E7F               	movlw	127
 11496   002226  2435               	addwf	??___fldiv^0,w,c
 11497   002228  6E3E               	movwf	___fldiv@new_exp^0,c
 11498   00222A  0E00               	movlw	0
 11499   00222C  2036               	addwfc	(??___fldiv+1)^0,w,c
 11500   00222E  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11501   002230  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 11502   002234  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 11503   002238  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 11504   00223C  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 11505   002240  0E00               	movlw	0
 11506   002242  6E2D               	movwf	___fldiv@b^0,c
 11507   002244  0E00               	movlw	0
 11508   002246  6E2E               	movwf	(___fldiv@b+1)^0,c
 11509   002248  0E00               	movlw	0
 11510   00224A  6E2F               	movwf	(___fldiv@b+2)^0,c
 11511   00224C  0E00               	movlw	0
 11512   00224E  6E30               	movwf	(___fldiv@b+3)^0,c
 11513   002250  0E00               	movlw	0
 11514   002252  6E40               	movwf	___fldiv@grs^0,c
 11515   002254  0E00               	movlw	0
 11516   002256  6E41               	movwf	(___fldiv@grs+1)^0,c
 11517   002258  0E00               	movlw	0
 11518   00225A  6E42               	movwf	(___fldiv@grs+2)^0,c
 11519   00225C  0E00               	movlw	0
 11520   00225E  6E43               	movwf	(___fldiv@grs+3)^0,c
 11521   002260  0E00               	movlw	0
 11522   002262  6E45               	movwf	___fldiv@aexp^0,c
 11523   002264  EF6C  F011         	goto	l1130
 11524   002268                     l5755:
 11525   002268  5045               	movf	___fldiv@aexp^0,w,c
 11526   00226A  B4D8               	btfsc	status,2,c
 11527   00226C  EF3A  F011         	goto	u6901
 11528   002270  EF3C  F011         	goto	u6900
 11529   002274                     u6901:
 11530   002274  EF53  F011         	goto	l5763
 11531   002278                     u6900:
 11532   002278  90D8               	bcf	status,0,c
 11533   00227A  3639               	rlcf	___fldiv@rem^0,f,c
 11534   00227C  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 11535   00227E  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 11536   002280  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 11537   002282  90D8               	bcf	status,0,c
 11538   002284  362D               	rlcf	___fldiv@b^0,f,c
 11539   002286  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11540   002288  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11541   00228A  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11542   00228C  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11543   00228E  EF4B  F011         	goto	u6911
 11544   002292  EF4D  F011         	goto	u6910
 11545   002296                     u6911:
 11546   002296  EF4E  F011         	goto	l1133
 11547   00229A                     u6910:
 11548   00229A  802D               	bsf	___fldiv@b^0,0,c
 11549   00229C                     l1133:
 11550   00229C  90D8               	bcf	status,0,c
 11551   00229E  3640               	rlcf	___fldiv@grs^0,f,c
 11552   0022A0  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11553   0022A2  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11554   0022A4  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11555   0022A6                     l5763:
 11556   0022A6  5031               	movf	___fldiv@a^0,w,c
 11557   0022A8  5C39               	subwf	___fldiv@rem^0,w,c
 11558   0022AA  5032               	movf	(___fldiv@a+1)^0,w,c
 11559   0022AC  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 11560   0022AE  5033               	movf	(___fldiv@a+2)^0,w,c
 11561   0022B0  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 11562   0022B2  5034               	movf	(___fldiv@a+3)^0,w,c
 11563   0022B4  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 11564   0022B6  A0D8               	btfss	status,0,c
 11565   0022B8  EF60  F011         	goto	u6921
 11566   0022BC  EF62  F011         	goto	u6920
 11567   0022C0                     u6921:
 11568   0022C0  EF6B  F011         	goto	l5769
 11569   0022C4                     u6920:
 11570   0022C4  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 11571   0022C6  5031               	movf	___fldiv@a^0,w,c
 11572   0022C8  5E39               	subwf	___fldiv@rem^0,f,c
 11573   0022CA  5032               	movf	(___fldiv@a+1)^0,w,c
 11574   0022CC  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 11575   0022CE  5033               	movf	(___fldiv@a+2)^0,w,c
 11576   0022D0  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 11577   0022D2  5034               	movf	(___fldiv@a+3)^0,w,c
 11578   0022D4  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 11579   0022D6                     l5769:
 11580   0022D6  2A45               	incf	___fldiv@aexp^0,f,c
 11581   0022D8                     l1130:
 11582   0022D8  0E19               	movlw	25
 11583   0022DA  6445               	cpfsgt	___fldiv@aexp^0,c
 11584   0022DC  EF72  F011         	goto	u6931
 11585   0022E0  EF74  F011         	goto	u6930
 11586   0022E4                     u6931:
 11587   0022E4  EF34  F011         	goto	l5755
 11588   0022E8                     u6930:
 11589   0022E8  5039               	movf	___fldiv@rem^0,w,c
 11590   0022EA  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 11591   0022EC  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 11592   0022EE  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 11593   0022F0  B4D8               	btfsc	status,2,c
 11594   0022F2  EF7D  F011         	goto	u6941
 11595   0022F6  EF7F  F011         	goto	u6940
 11596   0022FA                     u6941:
 11597   0022FA  EF97  F011         	goto	l5781
 11598   0022FE                     u6940:
 11599   0022FE  8040               	bsf	___fldiv@grs^0,0,c
 11600   002300  EF97  F011         	goto	l5781
 11601   002304                     l5775:
 11602   002304  90D8               	bcf	status,0,c
 11603   002306  362D               	rlcf	___fldiv@b^0,f,c
 11604   002308  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11605   00230A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11606   00230C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11607   00230E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11608   002310  EF8C  F011         	goto	u6951
 11609   002314  EF8E  F011         	goto	u6950
 11610   002318                     u6951:
 11611   002318  EF8F  F011         	goto	l1139
 11612   00231C                     u6950:
 11613   00231C  802D               	bsf	___fldiv@b^0,0,c
 11614   00231E                     l1139:
 11615   00231E  90D8               	bcf	status,0,c
 11616   002320  3640               	rlcf	___fldiv@grs^0,f,c
 11617   002322  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11618   002324  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11619   002326  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11620   002328  063E               	decf	___fldiv@new_exp^0,f,c
 11621   00232A  A0D8               	btfss	status,0,c
 11622   00232C  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 11623   00232E                     l5781:
 11624   00232E  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11625   002330  EF9C  F011         	goto	u6961
 11626   002334  EF9E  F011         	goto	u6960
 11627   002338                     u6961:
 11628   002338  EF82  F011         	goto	l5775
 11629   00233C                     u6960:
 11630   00233C  0E00               	movlw	0
 11631   00233E  6E45               	movwf	___fldiv@aexp^0,c
 11632   002340  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11633   002342  EFA5  F011         	goto	u6971
 11634   002346  EFA7  F011         	goto	u6970
 11635   00234A                     u6971:
 11636   00234A  EFCB  F011         	goto	l1141
 11637   00234E                     u6970:
 11638   00234E  0EFF               	movlw	255
 11639   002350  1440               	andwf	___fldiv@grs^0,w,c
 11640   002352  6E35               	movwf	??___fldiv^0,c
 11641   002354  0EFF               	movlw	255
 11642   002356  1441               	andwf	(___fldiv@grs+1)^0,w,c
 11643   002358  6E36               	movwf	(??___fldiv+1)^0,c
 11644   00235A  0EFF               	movlw	255
 11645   00235C  1442               	andwf	(___fldiv@grs+2)^0,w,c
 11646   00235E  6E37               	movwf	(??___fldiv+2)^0,c
 11647   002360  0E7F               	movlw	127
 11648   002362  1443               	andwf	(___fldiv@grs+3)^0,w,c
 11649   002364  6E38               	movwf	(??___fldiv+3)^0,c
 11650   002366  5035               	movf	??___fldiv^0,w,c
 11651   002368  1036               	iorwf	(??___fldiv+1)^0,w,c
 11652   00236A  1037               	iorwf	(??___fldiv+2)^0,w,c
 11653   00236C  1038               	iorwf	(??___fldiv+3)^0,w,c
 11654   00236E  B4D8               	btfsc	status,2,c
 11655   002370  EFBC  F011         	goto	u6981
 11656   002374  EFBE  F011         	goto	u6980
 11657   002378                     u6981:
 11658   002378  EFC2  F011         	goto	l1142
 11659   00237C                     u6980:
 11660   00237C                     l5789:
 11661   00237C  0E01               	movlw	1
 11662   00237E  6E45               	movwf	___fldiv@aexp^0,c
 11663   002380  EFCB  F011         	goto	l1141
 11664   002384                     l1142:
 11665   002384  A02D               	btfss	___fldiv@b^0,0,c
 11666   002386  EFC7  F011         	goto	u6991
 11667   00238A  EFC9  F011         	goto	u6990
 11668   00238E                     u6991:
 11669   00238E  EFCB  F011         	goto	l1141
 11670   002392                     u6990:
 11671   002392  EFBE  F011         	goto	l5789
 11672   002396                     l1141:
 11673   002396  5045               	movf	___fldiv@aexp^0,w,c
 11674   002398  B4D8               	btfsc	status,2,c
 11675   00239A  EFD1  F011         	goto	u7001
 11676   00239E  EFD3  F011         	goto	u7000
 11677   0023A2                     u7001:
 11678   0023A2  EFF7  F011         	goto	l5801
 11679   0023A6                     u7000:
 11680   0023A6  0E01               	movlw	1
 11681   0023A8  262D               	addwf	___fldiv@b^0,f,c
 11682   0023AA  0E00               	movlw	0
 11683   0023AC  222E               	addwfc	(___fldiv@b+1)^0,f,c
 11684   0023AE  222F               	addwfc	(___fldiv@b+2)^0,f,c
 11685   0023B0  2230               	addwfc	(___fldiv@b+3)^0,f,c
 11686   0023B2  A030               	btfss	(___fldiv@b+3)^0,0,c
 11687   0023B4  EFDE  F011         	goto	u7011
 11688   0023B8  EFE0  F011         	goto	u7010
 11689   0023BC                     u7011:
 11690   0023BC  EFF7  F011         	goto	l5801
 11691   0023C0                     u7010:
 11692   0023C0  C02D  F035         	movff	___fldiv@b,??___fldiv
 11693   0023C4  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 11694   0023C8  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 11695   0023CC  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 11696   0023D0  3438               	rlcf	(??___fldiv+3)^0,w,c
 11697   0023D2  3238               	rrcf	(??___fldiv+3)^0,f,c
 11698   0023D4  3237               	rrcf	(??___fldiv+2)^0,f,c
 11699   0023D6  3236               	rrcf	(??___fldiv+1)^0,f,c
 11700   0023D8  3235               	rrcf	??___fldiv^0,f,c
 11701   0023DA  C035  F02D         	movff	??___fldiv,___fldiv@b
 11702   0023DE  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 11703   0023E2  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 11704   0023E6  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 11705   0023EA  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 11706   0023EC  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 11707   0023EE                     l5801:
 11708   0023EE  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11709   0023F0  EF02  F012         	goto	u7021
 11710   0023F4  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11711   0023F6  E108               	bnz	u7020
 11712   0023F8  283E               	incf	___fldiv@new_exp^0,w,c
 11713   0023FA  A0D8               	btfss	status,0,c
 11714   0023FC  EF02  F012         	goto	u7021
 11715   002400  EF04  F012         	goto	u7020
 11716   002404                     u7021:
 11717   002404  EF0F  F012         	goto	l5805
 11718   002408                     u7020:
 11719   002408  0E00               	movlw	0
 11720   00240A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11721   00240C  683E               	setf	___fldiv@new_exp^0,c
 11722   00240E  0E00               	movlw	0
 11723   002410  6E2D               	movwf	___fldiv@b^0,c
 11724   002412  0E00               	movlw	0
 11725   002414  6E2E               	movwf	(___fldiv@b+1)^0,c
 11726   002416  0E00               	movlw	0
 11727   002418  6E2F               	movwf	(___fldiv@b+2)^0,c
 11728   00241A  0E00               	movlw	0
 11729   00241C  6E30               	movwf	(___fldiv@b+3)^0,c
 11730   00241E                     l5805:
 11731   00241E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11732   002420  EF1C  F012         	goto	u7030
 11733   002424  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11734   002426  E106               	bnz	u7031
 11735   002428  043E               	decf	___fldiv@new_exp^0,w,c
 11736   00242A  B0D8               	btfsc	status,0,c
 11737   00242C  EF1A  F012         	goto	u7031
 11738   002430  EF1C  F012         	goto	u7030
 11739   002434                     u7031:
 11740   002434  EF2A  F012         	goto	l5809
 11741   002438                     u7030:
 11742   002438  0E00               	movlw	0
 11743   00243A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11744   00243C  0E00               	movlw	0
 11745   00243E  6E3E               	movwf	___fldiv@new_exp^0,c
 11746   002440  0E00               	movlw	0
 11747   002442  6E2D               	movwf	___fldiv@b^0,c
 11748   002444  0E00               	movlw	0
 11749   002446  6E2E               	movwf	(___fldiv@b+1)^0,c
 11750   002448  0E00               	movlw	0
 11751   00244A  6E2F               	movwf	(___fldiv@b+2)^0,c
 11752   00244C  0E00               	movlw	0
 11753   00244E  6E30               	movwf	(___fldiv@b+3)^0,c
 11754   002450  0E00               	movlw	0
 11755   002452  6E3D               	movwf	___fldiv@sign^0,c
 11756   002454                     l5809:
 11757   002454  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 11758   002458  A044               	btfss	___fldiv@bexp^0,0,c
 11759   00245A  EF31  F012         	goto	u7041
 11760   00245E  EF33  F012         	goto	u7040
 11761   002462                     u7041:
 11762   002462  EF36  F012         	goto	l5815
 11763   002466                     u7040:
 11764   002466  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11765   002468  EF37  F012         	goto	l5817
 11766   00246C                     l5815:
 11767   00246C  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 11768   00246E                     l5817:
 11769   00246E  90D8               	bcf	status,0,c
 11770   002470  3044               	rrcf	___fldiv@bexp^0,w,c
 11771   002472  6E30               	movwf	(___fldiv@b+3)^0,c
 11772   002474  EFED  F010         	goto	l5731
 11773   002478                     l1128:
 11774   002478  0012               	return		;funcret
 11775   00247A                     __end_of___fldiv:
 11776                           	callstack 0
 11777                           
 11778 ;; *************** function _dtoa *****************
 11779 ;; Defined at:
 11780 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 11783 ;;		 -> NULL(0), sprintf@f(12), 
 11784 ;;  d               2   33[COMRAM] int 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;  i               2   42[COMRAM] int 
 11787 ;;  p               2   39[COMRAM] int 
 11788 ;;  w               2   37[COMRAM] int 
 11789 ;;  s               1   41[COMRAM] unsigned char 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      void 
 11792 ;; Registers used:
 11793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;Total ram usage:       13 bytes
 11804 ;; Hardware stack levels used: 1
 11805 ;; Hardware stack levels required when called: 5
 11806 ;; This function calls:
 11807 ;;		___awdiv
 11808 ;;		___awmod
 11809 ;;		_abs
 11810 ;;		_pad
 11811 ;; This function is called by:
 11812 ;;		_vfpfcnvrt
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816                           	psect	text41
 11817   00356A                     __ptext41:
 11818                           	callstack 0
 11819   00356A                     _dtoa:
 11820                           	callstack 21
 11821   00356A                     
 11822                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 11823   00356A  BE23               	btfsc	(dtoa@d+1)^0,7,c
 11824   00356C  EFBA  F01A         	goto	u7771
 11825   003570  EFBD  F01A         	goto	u7770
 11826   003574                     u7771:
 11827   003574  0E01               	movlw	1
 11828   003576  EFBE  F01A         	goto	u7780
 11829   00357A                     u7770:
 11830   00357A  0E00               	movlw	0
 11831   00357C                     u7780:
 11832   00357C  6E2A               	movwf	dtoa@s^0,c
 11833                           
 11834                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 11835   00357E  BE58               	btfsc	(_prec+1)^0,7,c
 11836   003580  EFC6  F01A         	goto	u7790
 11837   003584  EFC4  F01A         	goto	u7791
 11838   003588                     u7791:
 11839   003588  EFCC  F01A         	goto	l1263
 11840   00358C                     u7790:
 11841   00358C  0E00               	movlw	0
 11842   00358E  6E29               	movwf	(dtoa@p+1)^0,c
 11843   003590  0E01               	movlw	1
 11844   003592  6E28               	movwf	dtoa@p^0,c
 11845   003594  EFD0  F01A         	goto	l1265
 11846   003598                     l1263:
 11847   003598  C057  F028         	movff	_prec,dtoa@p
 11848   00359C  C058  F029         	movff	_prec+1,dtoa@p+1
 11849   0035A0                     l1265:
 11850                           
 11851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 11852   0035A0  C055  F026         	movff	_width,dtoa@w
 11853   0035A4  C056  F027         	movff	_width+1,dtoa@w+1
 11854   0035A8                     
 11855                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 11856   0035A8  502A               	movf	dtoa@s^0,w,c
 11857   0035AA  B4D8               	btfsc	status,2,c
 11858   0035AC  EFDA  F01A         	goto	u7801
 11859   0035B0  EFDC  F01A         	goto	u7800
 11860   0035B4                     u7801:
 11861   0035B4  EFF3  F01A         	goto	l1266
 11862   0035B8                     u7800:
 11863   0035B8                     
 11864                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 11865   0035B8  0626               	decf	dtoa@w^0,f,c
 11866   0035BA  A0D8               	btfss	status,0,c
 11867   0035BC  0627               	decf	(dtoa@w+1)^0,f,c
 11868   0035BE                     
 11869                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 11870   0035BE  502A               	movf	dtoa@s^0,w,c
 11871   0035C0  A4D8               	btfss	status,2,c
 11872   0035C2  EFE5  F01A         	goto	u7811
 11873   0035C6  EFE7  F01A         	goto	u7810
 11874   0035CA                     u7811:
 11875   0035CA  EFED  F01A         	goto	l6237
 11876   0035CE                     u7810:
 11877   0035CE  0E00               	movlw	0
 11878   0035D0  6E25               	movwf	(_dtoa$3638+1)^0,c
 11879   0035D2  0E2B               	movlw	43
 11880   0035D4  6E24               	movwf	_dtoa$3638^0,c
 11881   0035D6  EFF1  F01A         	goto	l6239
 11882   0035DA                     l6237:
 11883   0035DA  0E00               	movlw	0
 11884   0035DC  6E25               	movwf	(_dtoa$3638+1)^0,c
 11885   0035DE  0E2D               	movlw	45
 11886   0035E0  6E24               	movwf	_dtoa$3638^0,c
 11887   0035E2                     l6239:
 11888   0035E2  C024  F02A         	movff	_dtoa$3638,dtoa@s
 11889   0035E6                     l1266:
 11890                           
 11891                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 11892   0035E6  0E00               	movlw	0
 11893   0035E8  6E2C               	movwf	(dtoa@i+1)^0,c
 11894   0035EA  0E4F               	movlw	79
 11895   0035EC  6E2B               	movwf	dtoa@i^0,c
 11896   0035EE                     
 11897                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 11898   0035EE  0E00               	movlw	0
 11899   0035F0  0102               	movlb	2	; () banked
 11900   0035F2  6F4F               	movwf	(_dbuf+79)& (0+255),b
 11901                           
 11902                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 11903   0035F4  EF2C  F01B         	goto	l6253
 11904   0035F8                     l6243:
 11905                           
 11906                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 11907   0035F8  062B               	decf	dtoa@i^0,f,c
 11908   0035FA  A0D8               	btfss	status,0,c
 11909   0035FC  062C               	decf	(dtoa@i+1)^0,f,c
 11910   0035FE                     
 11911                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 11912   0035FE  0E00               	movlw	low _dbuf
 11913   003600  242B               	addwf	dtoa@i^0,w,c
 11914   003602  6ED9               	movwf	fsr2l,c
 11915   003604  0E02               	movlw	high _dbuf
 11916   003606  202C               	addwfc	(dtoa@i+1)^0,w,c
 11917   003608  6EDA               	movwf	fsr2h,c
 11918   00360A  C022  F006         	movff	dtoa@d,___awmod@dividend
 11919   00360E  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 11920   003612  0E00               	movlw	0
 11921   003614  6E09               	movwf	(___awmod@divisor+1)^0,c
 11922   003616  0E0A               	movlw	10
 11923   003618  6E08               	movwf	___awmod@divisor^0,c
 11924   00361A  ECEA  F020         	call	___awmod	;wreg free
 11925   00361E  C006  F00C         	movff	?___awmod,abs@a
 11926   003622  C007  F00D         	movff	?___awmod+1,abs@a+1
 11927   003626  ECD5  F023         	call	_abs	;wreg free
 11928   00362A  500C               	movf	?_abs^0,w,c
 11929   00362C  0F30               	addlw	48
 11930   00362E  6EDF               	movwf	indf2,c
 11931   003630                     
 11932                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 11933   003630  0628               	decf	dtoa@p^0,f,c
 11934   003632  A0D8               	btfss	status,0,c
 11935   003634  0629               	decf	(dtoa@p+1)^0,f,c
 11936   003636                     
 11937                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 11938   003636  0626               	decf	dtoa@w^0,f,c
 11939   003638  A0D8               	btfss	status,0,c
 11940   00363A  0627               	decf	(dtoa@w+1)^0,f,c
 11941   00363C                     
 11942                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 11943   00363C  C022  F006         	movff	dtoa@d,___awdiv@dividend
 11944   003640  C023  F007         	movff	dtoa@d+1,___awdiv@dividend+1
 11945   003644  0E00               	movlw	0
 11946   003646  6E09               	movwf	(___awdiv@divisor+1)^0,c
 11947   003648  0E0A               	movlw	10
 11948   00364A  6E08               	movwf	___awdiv@divisor^0,c
 11949   00364C  EC2F  F020         	call	___awdiv	;wreg free
 11950   003650  C006  F022         	movff	?___awdiv,dtoa@d
 11951   003654  C007  F023         	movff	?___awdiv+1,dtoa@d+1
 11952   003658                     l6253:
 11953                           
 11954                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 11955   003658  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 11956   00365A  EF37  F01B         	goto	u7821
 11957   00365E  502C               	movf	(dtoa@i+1)^0,w,c
 11958   003660  E108               	bnz	u7820
 11959   003662  042B               	decf	dtoa@i^0,w,c
 11960   003664  A0D8               	btfss	status,0,c
 11961   003666  EF37  F01B         	goto	u7821
 11962   00366A  EF39  F01B         	goto	u7820
 11963   00366E                     u7821:
 11964   00366E  EF4F  F01B         	goto	l6259
 11965   003672                     u7820:
 11966   003672  5022               	movf	dtoa@d^0,w,c
 11967   003674  1023               	iorwf	(dtoa@d+1)^0,w,c
 11968   003676  A4D8               	btfss	status,2,c
 11969   003678  EF40  F01B         	goto	u7831
 11970   00367C  EF42  F01B         	goto	u7830
 11971   003680                     u7831:
 11972   003680  EFFC  F01A         	goto	l6243
 11973   003684                     u7830:
 11974   003684  BE29               	btfsc	(dtoa@p+1)^0,7,c
 11975   003686  EF4F  F01B         	goto	u7840
 11976   00368A  5029               	movf	(dtoa@p+1)^0,w,c
 11977   00368C  E106               	bnz	u7841
 11978   00368E  0428               	decf	dtoa@p^0,w,c
 11979   003690  B0D8               	btfsc	status,0,c
 11980   003692  EF4D  F01B         	goto	u7841
 11981   003696  EF4F  F01B         	goto	u7840
 11982   00369A                     u7841:
 11983   00369A  EFFC  F01A         	goto	l6243
 11984   00369E                     u7840:
 11985   00369E                     l6259:
 11986                           
 11987                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 11988   00369E  502A               	movf	dtoa@s^0,w,c
 11989   0036A0  B4D8               	btfsc	status,2,c
 11990   0036A2  EF55  F01B         	goto	u7851
 11991   0036A6  EF57  F01B         	goto	u7850
 11992   0036AA                     u7851:
 11993   0036AA  EF62  F01B         	goto	l6265
 11994   0036AE                     u7850:
 11995   0036AE                     
 11996                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 11997   0036AE  062B               	decf	dtoa@i^0,f,c
 11998   0036B0  A0D8               	btfss	status,0,c
 11999   0036B2  062C               	decf	(dtoa@i+1)^0,f,c
 12000   0036B4                     
 12001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 12002   0036B4  0E00               	movlw	low _dbuf
 12003   0036B6  242B               	addwf	dtoa@i^0,w,c
 12004   0036B8  6ED9               	movwf	fsr2l,c
 12005   0036BA  0E02               	movlw	high _dbuf
 12006   0036BC  202C               	addwfc	(dtoa@i+1)^0,w,c
 12007   0036BE  6EDA               	movwf	fsr2h,c
 12008   0036C0  C02A  FFDF         	movff	dtoa@s,indf2
 12009   0036C4                     l6265:
 12010                           
 12011                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 12012   0036C4  C020  F017         	movff	dtoa@fp,pad@fp
 12013   0036C8  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 12014   0036CC  0E00               	movlw	low _dbuf
 12015   0036CE  242B               	addwf	dtoa@i^0,w,c
 12016   0036D0  6E19               	movwf	pad@buf^0,c
 12017   0036D2  0E02               	movlw	high _dbuf
 12018   0036D4  202C               	addwfc	(dtoa@i+1)^0,w,c
 12019   0036D6  6E1A               	movwf	(pad@buf+1)^0,c
 12020   0036D8  C026  F01B         	movff	dtoa@w,pad@p
 12021   0036DC  C027  F01C         	movff	dtoa@w+1,pad@p+1
 12022   0036E0  ECEE  F021         	call	_pad	;wreg free
 12023   0036E4  0012               	return		;funcret
 12024   0036E6                     __end_of_dtoa:
 12025                           	callstack 0
 12026                           
 12027 ;; *************** function _pad *****************
 12028 ;; Defined at:
 12029 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12032 ;;		 -> NULL(0), sprintf@f(12), 
 12033 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12034 ;;		 -> dbuf(80), 
 12035 ;;  p               2   26[COMRAM] int 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;  i               2   29[COMRAM] int 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12047 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;Total ram usage:        9 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 4
 12054 ;; This function calls:
 12055 ;;		_fputc
 12056 ;;		_fputs
 12057 ;; This function is called by:
 12058 ;;		_dtoa
 12059 ;;		_efgtoa
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text42
 12064   0043DC                     __ptext42:
 12065                           	callstack 0
 12066   0043DC                     _pad:
 12067                           	callstack 21
 12068   0043DC                     
 12069                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 12070   0043DC  A059               	btfss	_flags^0,0,c
 12071   0043DE  EFF3  F021         	goto	u7521
 12072   0043E2  EFF5  F021         	goto	u7520
 12073   0043E6                     u7521:
 12074   0043E6  EFFF  F021         	goto	l6135
 12075   0043EA                     u7520:
 12076   0043EA                     
 12077                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 12078   0043EA  C019  F010         	movff	pad@buf,fputs@s
 12079   0043EE  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12080   0043F2  C017  F012         	movff	pad@fp,fputs@fp
 12081   0043F6  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12082   0043FA  EC26  F023         	call	_fputs	;wreg free
 12083   0043FE                     l6135:
 12084                           
 12085                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 12086   0043FE  BE1C               	btfsc	(pad@p+1)^0,7,c
 12087   004400  EF06  F022         	goto	u7530
 12088   004404  EF04  F022         	goto	u7531
 12089   004408                     u7531:
 12090   004408  EF0A  F022         	goto	l1254
 12091   00440C                     u7530:
 12092   00440C                     
 12093                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12094   00440C  0E00               	movlw	0
 12095   00440E  6E1C               	movwf	(pad@p+1)^0,c
 12096   004410  0E00               	movlw	0
 12097   004412  6E1B               	movwf	pad@p^0,c
 12098   004414                     l1254:
 12099                           
 12100                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12101   004414  0E00               	movlw	0
 12102   004416  6E1F               	movwf	(pad@i+1)^0,c
 12103   004418  0E00               	movlw	0
 12104   00441A  6E1E               	movwf	pad@i^0,c
 12105                           
 12106                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12107   00441C  EF1C  F022         	goto	l6143
 12108   004420                     l6139:
 12109                           
 12110                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 12111   004420  0E00               	movlw	0
 12112   004422  6E08               	movwf	(fputc@c+1)^0,c
 12113   004424  0E20               	movlw	32
 12114   004426  6E07               	movwf	fputc@c^0,c
 12115   004428  C017  F009         	movff	pad@fp,fputc@fp
 12116   00442C  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12117   004430  ECCA  F01F         	call	_fputc	;wreg free
 12118   004434                     
 12119                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12120   004434  4A1E               	infsnz	pad@i^0,f,c
 12121   004436  2A1F               	incf	(pad@i+1)^0,f,c
 12122   004438                     l6143:
 12123                           
 12124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12125   004438  501B               	movf	pad@p^0,w,c
 12126   00443A  5C1E               	subwf	pad@i^0,w,c
 12127   00443C  501F               	movf	(pad@i+1)^0,w,c
 12128   00443E  0A80               	xorlw	128
 12129   004440  6E1D               	movwf	??_pad^0,c
 12130   004442  501C               	movf	(pad@p+1)^0,w,c
 12131   004444  0A80               	xorlw	128
 12132   004446  581D               	subwfb	??_pad^0,w,c
 12133   004448  A0D8               	btfss	status,0,c
 12134   00444A  EF29  F022         	goto	u7541
 12135   00444E  EF2B  F022         	goto	u7540
 12136   004452                     u7541:
 12137   004452  EF10  F022         	goto	l6139
 12138   004456                     u7540:
 12139   004456                     
 12140                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 12141   004456  B059               	btfsc	_flags^0,0,c
 12142   004458  EF30  F022         	goto	u7551
 12143   00445C  EF32  F022         	goto	u7550
 12144   004460                     u7551:
 12145   004460  EF3C  F022         	goto	l1259
 12146   004464                     u7550:
 12147   004464                     
 12148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 12149   004464  C019  F010         	movff	pad@buf,fputs@s
 12150   004468  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12151   00446C  C017  F012         	movff	pad@fp,fputs@fp
 12152   004470  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12153   004474  EC26  F023         	call	_fputs	;wreg free
 12154   004478                     l1259:
 12155   004478  0012               	return		;funcret
 12156   00447A                     __end_of_pad:
 12157                           	callstack 0
 12158                           
 12159 ;; *************** function _fputs *****************
 12160 ;; Defined at:
 12161 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12164 ;;		 -> dbuf(80), 
 12165 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12166 ;;		 -> NULL(0), sprintf@f(12), 
 12167 ;; Auto vars:     Size  Location     Type
 12168 ;;  i               2   20[COMRAM] int 
 12169 ;;  c               1   19[COMRAM] unsigned char 
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  2   15[COMRAM] int 
 12172 ;; Registers used:
 12173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;Total ram usage:        7 bytes
 12184 ;; Hardware stack levels used: 1
 12185 ;; Hardware stack levels required when called: 3
 12186 ;; This function calls:
 12187 ;;		_fputc
 12188 ;; This function is called by:
 12189 ;;		_pad
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text43
 12194   00464C                     __ptext43:
 12195                           	callstack 0
 12196   00464C                     _fputs:
 12197                           	callstack 21
 12198   00464C  0E00               	movlw	0
 12199   00464E  6E16               	movwf	(fputs@i+1)^0,c
 12200   004650  0E00               	movlw	0
 12201   004652  6E15               	movwf	fputs@i^0,c
 12202   004654  EF37  F023         	goto	l5679
 12203   004658                     l5675:
 12204   004658  C014  F007         	movff	fputs@c,fputc@c
 12205   00465C  6A08               	clrf	(fputc@c+1)^0,c
 12206   00465E  C012  F009         	movff	fputs@fp,fputc@fp
 12207   004662  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12208   004666  ECCA  F01F         	call	_fputc	;wreg free
 12209   00466A  4A15               	infsnz	fputs@i^0,f,c
 12210   00466C  2A16               	incf	(fputs@i+1)^0,f,c
 12211   00466E                     l5679:
 12212   00466E  5015               	movf	fputs@i^0,w,c
 12213   004670  2410               	addwf	fputs@s^0,w,c
 12214   004672  6ED9               	movwf	fsr2l,c
 12215   004674  5016               	movf	(fputs@i+1)^0,w,c
 12216   004676  2011               	addwfc	(fputs@s+1)^0,w,c
 12217   004678  6EDA               	movwf	fsr2h,c
 12218   00467A  50DF               	movf	indf2,w,c
 12219   00467C  6E14               	movwf	fputs@c^0,c
 12220   00467E  5014               	movf	fputs@c^0,w,c
 12221   004680  A4D8               	btfss	status,2,c
 12222   004682  EF45  F023         	goto	u6811
 12223   004686  EF47  F023         	goto	u6810
 12224   00468A                     u6811:
 12225   00468A  EF2C  F023         	goto	l5675
 12226   00468E                     u6810:
 12227   00468E  0012               	return		;funcret
 12228   004690                     __end_of_fputs:
 12229                           	callstack 0
 12230                           
 12231 ;; *************** function _fputc *****************
 12232 ;; Defined at:
 12233 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;  c               2    6[COMRAM] int 
 12236 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12237 ;;		 -> NULL(0), sprintf@f(12), 
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  2    6[COMRAM] int 
 12242 ;; Registers used:
 12243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;Total ram usage:        9 bytes
 12254 ;; Hardware stack levels used: 1
 12255 ;; Hardware stack levels required when called: 2
 12256 ;; This function calls:
 12257 ;;		_putch
 12258 ;; This function is called by:
 12259 ;;		_pad
 12260 ;;		_stoa
 12261 ;;		_vfpfcnvrt
 12262 ;;		_fputs
 12263 ;; This function uses a non-reentrant model
 12264 ;;
 12265                           
 12266                           	psect	text44
 12267   003F94                     __ptext44:
 12268                           	callstack 0
 12269   003F94                     _fputc:
 12270                           	callstack 23
 12271   003F94  5009               	movf	fputc@fp^0,w,c
 12272   003F96  100A               	iorwf	(fputc@fp+1)^0,w,c
 12273   003F98  B4D8               	btfsc	status,2,c
 12274   003F9A  EFD1  F01F         	goto	u6381
 12275   003F9E  EFD3  F01F         	goto	u6380
 12276   003FA2                     u6381:
 12277   003FA2  EFDC  F01F         	goto	l5461
 12278   003FA6                     u6380:
 12279   003FA6  5009               	movf	fputc@fp^0,w,c
 12280   003FA8  100A               	iorwf	(fputc@fp+1)^0,w,c
 12281   003FAA  A4D8               	btfss	status,2,c
 12282   003FAC  EFDA  F01F         	goto	u6391
 12283   003FB0  EFDC  F01F         	goto	u6390
 12284   003FB4                     u6391:
 12285   003FB4  EFE1  F01F         	goto	l5463
 12286   003FB8                     u6390:
 12287   003FB8                     l5461:
 12288   003FB8  5007               	movf	fputc@c^0,w,c
 12289   003FBA  EC39  F024         	call	_putch
 12290   003FBE  EF2E  F020         	goto	l1455
 12291   003FC2                     l5463:
 12292   003FC2  EE20 F00A          	lfsr	2,10
 12293   003FC6  5009               	movf	fputc@fp^0,w,c
 12294   003FC8  26D9               	addwf	fsr2l,f,c
 12295   003FCA  500A               	movf	(fputc@fp+1)^0,w,c
 12296   003FCC  22DA               	addwfc	fsr2h,f,c
 12297   003FCE  50DE               	movf	postinc2,w,c
 12298   003FD0  10DE               	iorwf	postinc2,w,c
 12299   003FD2  B4D8               	btfsc	status,2,c
 12300   003FD4  EFEE  F01F         	goto	u6401
 12301   003FD8  EFF0  F01F         	goto	u6400
 12302   003FDC                     u6401:
 12303   003FDC  EF0B  F020         	goto	l5467
 12304   003FE0                     u6400:
 12305   003FE0  EE20 F00A          	lfsr	2,10
 12306   003FE4  5009               	movf	fputc@fp^0,w,c
 12307   003FE6  26D9               	addwf	fsr2l,f,c
 12308   003FE8  500A               	movf	(fputc@fp+1)^0,w,c
 12309   003FEA  22DA               	addwfc	fsr2h,f,c
 12310   003FEC  EE10 F003          	lfsr	1,3
 12311   003FF0  5009               	movf	fputc@fp^0,w,c
 12312   003FF2  26E1               	addwf	fsr1l,f,c
 12313   003FF4  500A               	movf	(fputc@fp+1)^0,w,c
 12314   003FF6  22E2               	addwfc	fsr1h,f,c
 12315   003FF8  50DE               	movf	postinc2,w,c
 12316   003FFA  5CE6               	subwf	postinc1,w,c
 12317   003FFC  50E6               	movf	postinc1,w,c
 12318   003FFE  0A80               	xorlw	128
 12319   004000  6E0F               	movwf	(??_fputc+4)^0,c
 12320   004002  50DE               	movf	postinc2,w,c
 12321   004004  0A80               	xorlw	128
 12322   004006  580F               	subwfb	(??_fputc+4)^0,w,c
 12323   004008  B0D8               	btfsc	status,0,c
 12324   00400A  EF09  F020         	goto	u6411
 12325   00400E  EF0B  F020         	goto	u6410
 12326   004012                     u6411:
 12327   004012  EF2E  F020         	goto	l1455
 12328   004016                     u6410:
 12329   004016                     l5467:
 12330   004016  EE20 F003          	lfsr	2,3
 12331   00401A  5009               	movf	fputc@fp^0,w,c
 12332   00401C  26D9               	addwf	fsr2l,f,c
 12333   00401E  500A               	movf	(fputc@fp+1)^0,w,c
 12334   004020  22DA               	addwfc	fsr2h,f,c
 12335   004022  CFDE F00B          	movff	postinc2,??_fputc
 12336   004026  CFDD F00C          	movff	postdec2,??_fputc+1
 12337   00402A  C009  FFD9         	movff	fputc@fp,fsr2l
 12338   00402E  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 12339   004032  CFDE F00D          	movff	postinc2,??_fputc+2
 12340   004036  CFDD F00E          	movff	postdec2,??_fputc+3
 12341   00403A  500B               	movf	??_fputc^0,w,c
 12342   00403C  240D               	addwf	(??_fputc+2)^0,w,c
 12343   00403E  6ED9               	movwf	fsr2l,c
 12344   004040  500C               	movf	(??_fputc+1)^0,w,c
 12345   004042  200E               	addwfc	(??_fputc+3)^0,w,c
 12346   004044  6EDA               	movwf	fsr2h,c
 12347   004046  C007  FFDF         	movff	fputc@c,indf2
 12348   00404A  EE20 F003          	lfsr	2,3
 12349   00404E  5009               	movf	fputc@fp^0,w,c
 12350   004050  26D9               	addwf	fsr2l,f,c
 12351   004052  500A               	movf	(fputc@fp+1)^0,w,c
 12352   004054  22DA               	addwfc	fsr2h,f,c
 12353   004056  2ADE               	incf	postinc2,f,c
 12354   004058  0E00               	movlw	0
 12355   00405A  22DD               	addwfc	postdec2,f,c
 12356   00405C                     l1455:
 12357   00405C  0012               	return		;funcret
 12358   00405E                     __end_of_fputc:
 12359                           	callstack 0
 12360                           
 12361 ;; *************** function _putch *****************
 12362 ;; Defined at:
 12363 ;;		line 11 in file "putch.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  data            1    wreg     unsigned char 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  data            1    5[COMRAM] unsigned char 
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		wreg
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;Total ram usage:        1 bytes
 12382 ;; Hardware stack levels used: 1
 12383 ;; Hardware stack levels required when called: 1
 12384 ;; This function calls:
 12385 ;;		Nothing
 12386 ;; This function is called by:
 12387 ;;		_fputc
 12388 ;; This function uses a non-reentrant model
 12389 ;;
 12390                           
 12391                           	psect	text45
 12392   004872                     __ptext45:
 12393                           	callstack 0
 12394   004872                     _putch:
 12395                           	callstack 23
 12396                           
 12397                           ;incstack = 0
 12398                           ;putch@data stored from wreg
 12399   004872  6E06               	movwf	putch@data^0,c
 12400   004874                     l250:
 12401   004874  A89E               	btfss	3998,4,c	;volatile
 12402   004876  EF3F  F024         	goto	u6371
 12403   00487A  EF41  F024         	goto	u6370
 12404   00487E                     u6371:
 12405   00487E  EF3A  F024         	goto	l250
 12406   004882                     u6370:
 12407   004882                     
 12408                           ;putch.c: 13:     TXREG1 = data;
 12409   004882  C006  FFAD         	movff	putch@data,4013	;volatile
 12410   004886  0012               	return		;funcret
 12411   004888                     __end_of_putch:
 12412                           	callstack 0
 12413                           
 12414 ;; *************** function _abs *****************
 12415 ;; Defined at:
 12416 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 12417 ;; Parameters:    Size  Location     Type
 12418 ;;  a               2   11[COMRAM] int 
 12419 ;; Auto vars:     Size  Location     Type
 12420 ;;		None
 12421 ;; Return value:  Size  Location     Type
 12422 ;;                  2   11[COMRAM] int 
 12423 ;; Registers used:
 12424 ;;		wreg, status,2, status,0
 12425 ;; Tracked objects:
 12426 ;;		On entry : 0/0
 12427 ;;		On exit  : 0/0
 12428 ;;		Unchanged: 0/0
 12429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12434 ;;Total ram usage:        4 bytes
 12435 ;; Hardware stack levels used: 1
 12436 ;; Hardware stack levels required when called: 1
 12437 ;; This function calls:
 12438 ;;		Nothing
 12439 ;; This function is called by:
 12440 ;;		_dtoa
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text46
 12445   0047AA                     __ptext46:
 12446                           	callstack 0
 12447   0047AA                     _abs:
 12448                           	callstack 24
 12449   0047AA  BE0D               	btfsc	(abs@a+1)^0,7,c
 12450   0047AC  EFDA  F023         	goto	u7561
 12451   0047B0  EFDC  F023         	goto	u7560
 12452   0047B4                     u7561:
 12453   0047B4  EFE2  F023         	goto	l1414
 12454   0047B8                     u7560:
 12455   0047B8  C00C  F00C         	movff	abs@a,?_abs
 12456   0047BC  C00D  F00D         	movff	abs@a+1,?_abs+1
 12457   0047C0  EFEE  F023         	goto	l1417
 12458   0047C4                     l1414:
 12459   0047C4  C00C  F00E         	movff	abs@a,??_abs
 12460   0047C8  C00D  F00F         	movff	abs@a+1,??_abs+1
 12461   0047CC  1E0E               	comf	??_abs^0,f,c
 12462   0047CE  1E0F               	comf	(??_abs+1)^0,f,c
 12463   0047D0  4A0E               	infsnz	??_abs^0,f,c
 12464   0047D2  2A0F               	incf	(??_abs+1)^0,f,c
 12465   0047D4  C00E  F00C         	movff	??_abs,?_abs
 12466   0047D8  C00F  F00D         	movff	??_abs+1,?_abs+1
 12467   0047DC                     l1417:
 12468   0047DC  0012               	return		;funcret
 12469   0047DE                     __end_of_abs:
 12470                           	callstack 0
 12471                           
 12472 ;; *************** function ___awmod *****************
 12473 ;; Defined at:
 12474 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;  dividend        2    5[COMRAM] int 
 12477 ;;  divisor         2    7[COMRAM] int 
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;  sign            1   10[COMRAM] unsigned char 
 12480 ;;  counter         1    9[COMRAM] unsigned char 
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  2    5[COMRAM] int 
 12483 ;; Registers used:
 12484 ;;		wreg, status,2, status,0
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12494 ;;Total ram usage:        6 bytes
 12495 ;; Hardware stack levels used: 1
 12496 ;; Hardware stack levels required when called: 1
 12497 ;; This function calls:
 12498 ;;		Nothing
 12499 ;; This function is called by:
 12500 ;;		_dtoa
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text47
 12505   0041D4                     __ptext47:
 12506                           	callstack 0
 12507   0041D4                     ___awmod:
 12508                           	callstack 24
 12509   0041D4  0E00               	movlw	0
 12510   0041D6  6E0B               	movwf	___awmod@sign^0,c
 12511   0041D8  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 12512   0041DA  EFF3  F020         	goto	u7300
 12513   0041DE  EFF1  F020         	goto	u7301
 12514   0041E2                     u7301:
 12515   0041E2  EFF9  F020         	goto	l6013
 12516   0041E6                     u7300:
 12517   0041E6  6C06               	negf	___awmod@dividend^0,c
 12518   0041E8  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12519   0041EA  B0D8               	btfsc	status,0,c
 12520   0041EC  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12521   0041EE  0E01               	movlw	1
 12522   0041F0  6E0B               	movwf	___awmod@sign^0,c
 12523   0041F2                     l6013:
 12524   0041F2  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 12525   0041F4  EF00  F021         	goto	u7310
 12526   0041F8  EFFE  F020         	goto	u7311
 12527   0041FC                     u7311:
 12528   0041FC  EF04  F021         	goto	l6017
 12529   004200                     u7310:
 12530   004200  6C08               	negf	___awmod@divisor^0,c
 12531   004202  1E09               	comf	(___awmod@divisor+1)^0,f,c
 12532   004204  B0D8               	btfsc	status,0,c
 12533   004206  2A09               	incf	(___awmod@divisor+1)^0,f,c
 12534   004208                     l6017:
 12535   004208  5008               	movf	___awmod@divisor^0,w,c
 12536   00420A  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 12537   00420C  B4D8               	btfsc	status,2,c
 12538   00420E  EF0B  F021         	goto	u7321
 12539   004212  EF0D  F021         	goto	u7320
 12540   004216                     u7321:
 12541   004216  EF31  F021         	goto	l6033
 12542   00421A                     u7320:
 12543   00421A  0E01               	movlw	1
 12544   00421C  6E0A               	movwf	___awmod@counter^0,c
 12545   00421E  EF15  F021         	goto	l6023
 12546   004222                     l6021:
 12547   004222  90D8               	bcf	status,0,c
 12548   004224  3608               	rlcf	___awmod@divisor^0,f,c
 12549   004226  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 12550   004228  2A0A               	incf	___awmod@counter^0,f,c
 12551   00422A                     l6023:
 12552   00422A  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 12553   00422C  EF1A  F021         	goto	u7331
 12554   004230  EF1C  F021         	goto	u7330
 12555   004234                     u7331:
 12556   004234  EF11  F021         	goto	l6021
 12557   004238                     u7330:
 12558   004238                     l6025:
 12559   004238  5008               	movf	___awmod@divisor^0,w,c
 12560   00423A  5C06               	subwf	___awmod@dividend^0,w,c
 12561   00423C  5009               	movf	(___awmod@divisor+1)^0,w,c
 12562   00423E  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 12563   004240  A0D8               	btfss	status,0,c
 12564   004242  EF25  F021         	goto	u7341
 12565   004246  EF27  F021         	goto	u7340
 12566   00424A                     u7341:
 12567   00424A  EF2B  F021         	goto	l6029
 12568   00424E                     u7340:
 12569   00424E  5008               	movf	___awmod@divisor^0,w,c
 12570   004250  5E06               	subwf	___awmod@dividend^0,f,c
 12571   004252  5009               	movf	(___awmod@divisor+1)^0,w,c
 12572   004254  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 12573   004256                     l6029:
 12574   004256  90D8               	bcf	status,0,c
 12575   004258  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 12576   00425A  3208               	rrcf	___awmod@divisor^0,f,c
 12577   00425C  2E0A               	decfsz	___awmod@counter^0,f,c
 12578   00425E  EF1C  F021         	goto	l6025
 12579   004262                     l6033:
 12580   004262  500B               	movf	___awmod@sign^0,w,c
 12581   004264  B4D8               	btfsc	status,2,c
 12582   004266  EF37  F021         	goto	u7351
 12583   00426A  EF39  F021         	goto	u7350
 12584   00426E                     u7351:
 12585   00426E  EF3D  F021         	goto	l6037
 12586   004272                     u7350:
 12587   004272  6C06               	negf	___awmod@dividend^0,c
 12588   004274  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12589   004276  B0D8               	btfsc	status,0,c
 12590   004278  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12591   00427A                     l6037:
 12592   00427A  C006  F006         	movff	___awmod@dividend,?___awmod
 12593   00427E  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 12594   004282  0012               	return		;funcret
 12595   004284                     __end_of___awmod:
 12596                           	callstack 0
 12597                           
 12598 ;; *************** function ___awdiv *****************
 12599 ;; Defined at:
 12600 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;  dividend        2    5[COMRAM] int 
 12603 ;;  divisor         2    7[COMRAM] int 
 12604 ;; Auto vars:     Size  Location     Type
 12605 ;;  quotient        2   11[COMRAM] int 
 12606 ;;  sign            1   10[COMRAM] unsigned char 
 12607 ;;  counter         1    9[COMRAM] unsigned char 
 12608 ;; Return value:  Size  Location     Type
 12609 ;;                  2    5[COMRAM] int 
 12610 ;; Registers used:
 12611 ;;		wreg, status,2, status,0
 12612 ;; Tracked objects:
 12613 ;;		On entry : 0/0
 12614 ;;		On exit  : 0/0
 12615 ;;		Unchanged: 0/0
 12616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12618 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12620 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12621 ;;Total ram usage:        8 bytes
 12622 ;; Hardware stack levels used: 1
 12623 ;; Hardware stack levels required when called: 1
 12624 ;; This function calls:
 12625 ;;		Nothing
 12626 ;; This function is called by:
 12627 ;;		_runPWM
 12628 ;;		_dtoa
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           	psect	text48
 12633   00405E                     __ptext48:
 12634                           	callstack 0
 12635   00405E                     ___awdiv:
 12636                           	callstack 24
 12637   00405E  0E00               	movlw	0
 12638   004060  6E0B               	movwf	___awdiv@sign^0,c
 12639   004062  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 12640   004064  EF38  F020         	goto	u7240
 12641   004068  EF36  F020         	goto	u7241
 12642   00406C                     u7241:
 12643   00406C  EF3E  F020         	goto	l5969
 12644   004070                     u7240:
 12645   004070  6C08               	negf	___awdiv@divisor^0,c
 12646   004072  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 12647   004074  B0D8               	btfsc	status,0,c
 12648   004076  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 12649   004078  0E01               	movlw	1
 12650   00407A  6E0B               	movwf	___awdiv@sign^0,c
 12651   00407C                     l5969:
 12652   00407C  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 12653   00407E  EF45  F020         	goto	u7250
 12654   004082  EF43  F020         	goto	u7251
 12655   004086                     u7251:
 12656   004086  EF4B  F020         	goto	l5975
 12657   00408A                     u7250:
 12658   00408A  6C06               	negf	___awdiv@dividend^0,c
 12659   00408C  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 12660   00408E  B0D8               	btfsc	status,0,c
 12661   004090  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 12662   004092  0E01               	movlw	1
 12663   004094  1A0B               	xorwf	___awdiv@sign^0,f,c
 12664   004096                     l5975:
 12665   004096  0E00               	movlw	0
 12666   004098  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 12667   00409A  0E00               	movlw	0
 12668   00409C  6E0C               	movwf	___awdiv@quotient^0,c
 12669   00409E  5008               	movf	___awdiv@divisor^0,w,c
 12670   0040A0  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 12671   0040A2  B4D8               	btfsc	status,2,c
 12672   0040A4  EF56  F020         	goto	u7261
 12673   0040A8  EF58  F020         	goto	u7260
 12674   0040AC                     u7261:
 12675   0040AC  EF80  F020         	goto	l5997
 12676   0040B0                     u7260:
 12677   0040B0  0E01               	movlw	1
 12678   0040B2  6E0A               	movwf	___awdiv@counter^0,c
 12679   0040B4  EF60  F020         	goto	l5983
 12680   0040B8                     l5981:
 12681   0040B8  90D8               	bcf	status,0,c
 12682   0040BA  3608               	rlcf	___awdiv@divisor^0,f,c
 12683   0040BC  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 12684   0040BE  2A0A               	incf	___awdiv@counter^0,f,c
 12685   0040C0                     l5983:
 12686   0040C0  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 12687   0040C2  EF65  F020         	goto	u7271
 12688   0040C6  EF67  F020         	goto	u7270
 12689   0040CA                     u7271:
 12690   0040CA  EF5C  F020         	goto	l5981
 12691   0040CE                     u7270:
 12692   0040CE                     l5985:
 12693   0040CE  90D8               	bcf	status,0,c
 12694   0040D0  360C               	rlcf	___awdiv@quotient^0,f,c
 12695   0040D2  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 12696   0040D4  5008               	movf	___awdiv@divisor^0,w,c
 12697   0040D6  5C06               	subwf	___awdiv@dividend^0,w,c
 12698   0040D8  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12699   0040DA  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 12700   0040DC  A0D8               	btfss	status,0,c
 12701   0040DE  EF73  F020         	goto	u7281
 12702   0040E2  EF75  F020         	goto	u7280
 12703   0040E6                     u7281:
 12704   0040E6  EF7A  F020         	goto	l5993
 12705   0040EA                     u7280:
 12706   0040EA  5008               	movf	___awdiv@divisor^0,w,c
 12707   0040EC  5E06               	subwf	___awdiv@dividend^0,f,c
 12708   0040EE  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12709   0040F0  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 12710   0040F2  800C               	bsf	___awdiv@quotient^0,0,c
 12711   0040F4                     l5993:
 12712   0040F4  90D8               	bcf	status,0,c
 12713   0040F6  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 12714   0040F8  3208               	rrcf	___awdiv@divisor^0,f,c
 12715   0040FA  2E0A               	decfsz	___awdiv@counter^0,f,c
 12716   0040FC  EF67  F020         	goto	l5985
 12717   004100                     l5997:
 12718   004100  500B               	movf	___awdiv@sign^0,w,c
 12719   004102  B4D8               	btfsc	status,2,c
 12720   004104  EF86  F020         	goto	u7291
 12721   004108  EF88  F020         	goto	u7290
 12722   00410C                     u7291:
 12723   00410C  EF8C  F020         	goto	l6001
 12724   004110                     u7290:
 12725   004110  6C0C               	negf	___awdiv@quotient^0,c
 12726   004112  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 12727   004114  B0D8               	btfsc	status,0,c
 12728   004116  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 12729   004118                     l6001:
 12730   004118  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 12731   00411C  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 12732   004120  0012               	return		;funcret
 12733   004122                     __end_of___awdiv:
 12734                           	callstack 0
 12735                           
 12736 ;; *************** function _LCD_ShowString *****************
 12737 ;; Defined at:
 12738 ;;		line 55 in file "lcd.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;  lineNum         1    wreg     unsigned char 
 12741 ;;  textData        2    6[COMRAM] PTR unsigned char 
 12742 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_9(17), 
 12743 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 12744 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  lineNum         1   10[COMRAM] unsigned char 
 12747 ;;  i               1   11[COMRAM] unsigned char 
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;Total ram usage:        6 bytes
 12762 ;; Hardware stack levels used: 1
 12763 ;; Hardware stack levels required when called: 2
 12764 ;; This function calls:
 12765 ;;		_LCD_Send
 12766 ;; This function is called by:
 12767 ;;		_main
 12768 ;;		_moveDisplay
 12769 ;;		_runADC
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773                           	psect	text49
 12774   004122                     __ptext49:
 12775                           	callstack 0
 12776   004122                     _LCD_ShowString:
 12777                           	callstack 27
 12778                           
 12779                           ;incstack = 0
 12780                           ;LCD_ShowString@lineNum stored from wreg
 12781   004122  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 12782   004124                     
 12783                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 12784   004124  806B               	bsf	107,0,c	;volatile
 12785   004126                     l120:
 12786   004126  B06B               	btfsc	107,0,c	;volatile
 12787   004128  EF98  F020         	goto	u8611
 12788   00412C  EF9A  F020         	goto	u8610
 12789   004130                     u8611:
 12790   004130  EF93  F020         	goto	l120
 12791   004134                     u8610:
 12792   004134                     
 12793                           ;lcd.c: 62:     SSP2IF = 0;
 12794   004134  9EA4               	bcf	4004,7,c	;volatile
 12795   004136                     
 12796                           ;lcd.c: 64:     LCD_Send(0x7c);
 12797   004136  0E7C               	movlw	124
 12798   004138  EC16  F024         	call	_LCD_Send
 12799                           
 12800                           ;lcd.c: 66:     LCD_Send(0x80);
 12801   00413C  0E80               	movlw	128
 12802   00413E  EC16  F024         	call	_LCD_Send
 12803   004142                     
 12804                           ;lcd.c: 68:     if(lineNum == 1){
 12805   004142  040B               	decf	LCD_ShowString@lineNum^0,w,c
 12806   004144  A4D8               	btfss	status,2,c
 12807   004146  EFA7  F020         	goto	u8621
 12808   00414A  EFA9  F020         	goto	u8620
 12809   00414E                     u8621:
 12810   00414E  EFAE  F020         	goto	l6789
 12811   004152                     u8620:
 12812   004152                     
 12813                           ;lcd.c: 69:         LCD_Send(0x80);
 12814   004152  0E80               	movlw	128
 12815   004154  EC16  F024         	call	_LCD_Send
 12816                           
 12817                           ;lcd.c: 70:     }
 12818   004158  EFBA  F020         	goto	l124
 12819   00415C                     l6789:
 12820   00415C  0E02               	movlw	2
 12821   00415E  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 12822   004160  A4D8               	btfss	status,2,c
 12823   004162  EFB5  F020         	goto	u8631
 12824   004166  EFB7  F020         	goto	u8630
 12825   00416A                     u8631:
 12826   00416A  EFBA  F020         	goto	l124
 12827   00416E                     u8630:
 12828   00416E                     
 12829                           ;lcd.c: 72:         LCD_Send(0xC0);
 12830   00416E  0EC0               	movlw	192
 12831   004170  EC16  F024         	call	_LCD_Send
 12832   004174                     l124:
 12833                           
 12834                           ;lcd.c: 75:     LCD_Send(0x40);
 12835   004174  0E40               	movlw	64
 12836   004176  EC16  F024         	call	_LCD_Send
 12837   00417A                     
 12838                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 12839   00417A  0E00               	movlw	0
 12840   00417C  6E0C               	movwf	LCD_ShowString@i^0,c
 12841   00417E                     l6799:
 12842                           
 12843                           ;lcd.c: 78:         LCD_Send(textData[i]);
 12844   00417E  500C               	movf	LCD_ShowString@i^0,w,c
 12845   004180  2407               	addwf	LCD_ShowString@textData^0,w,c
 12846   004182  6E09               	movwf	??_LCD_ShowString^0,c
 12847   004184  0E00               	movlw	0
 12848   004186  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 12849   004188  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 12850   00418A  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 12851   00418E  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 12852   004192  0E00               	movlw	low (__mediumconst shr (0+16))
 12853   004194  6EF8               	movwf	tblptru,c
 12854   004196  0E0F               	movlw	(high __ramtop+-1)
 12855   004198  64F7               	cpfsgt	tblptrh,c
 12856   00419A  D003               	bra	u8647
 12857   00419C  0008               	tblrd		*
 12858   00419E  50F5               	movf	tablat,w,c
 12859   0041A0  D005               	bra	u8640
 12860   0041A2                     u8647:
 12861   0041A2  CFF6 FFE1          	movff	tblptrl,fsr1l
 12862   0041A6  CFF7 FFE2          	movff	tblptrh,fsr1h
 12863   0041AA  50E7               	movf	indf1,w,c
 12864   0041AC                     u8640:
 12865   0041AC  EC16  F024         	call	_LCD_Send
 12866   0041B0                     
 12867                           ;lcd.c: 79:     }
 12868   0041B0  2A0C               	incf	LCD_ShowString@i^0,f,c
 12869   0041B2  0E0F               	movlw	15
 12870   0041B4  640C               	cpfsgt	LCD_ShowString@i^0,c
 12871   0041B6  EFDF  F020         	goto	u8651
 12872   0041BA  EFE1  F020         	goto	u8650
 12873   0041BE                     u8651:
 12874   0041BE  EFBF  F020         	goto	l6799
 12875   0041C2                     u8650:
 12876   0041C2                     
 12877                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 12878   0041C2  846B               	bsf	107,2,c	;volatile
 12879   0041C4                     l128:
 12880   0041C4  B46B               	btfsc	107,2,c	;volatile
 12881   0041C6  EFE7  F020         	goto	u8661
 12882   0041CA  EFE9  F020         	goto	u8660
 12883   0041CE                     u8661:
 12884   0041CE  EFE2  F020         	goto	l128
 12885   0041D2                     u8660:
 12886   0041D2  0012               	return		;funcret
 12887   0041D4                     __end_of_LCD_ShowString:
 12888                           	callstack 0
 12889                           
 12890 ;; *************** function _LCD_Clear *****************
 12891 ;; Defined at:
 12892 ;;		line 94 in file "lcd.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;		None
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;		None
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  1    wreg      void 
 12899 ;; Registers used:
 12900 ;;		wreg, cstack
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/0
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12910 ;;Total ram usage:        0 bytes
 12911 ;; Hardware stack levels used: 1
 12912 ;; Hardware stack levels required when called: 2
 12913 ;; This function calls:
 12914 ;;		_LCD_Send
 12915 ;; This function is called by:
 12916 ;;		_moveDisplay
 12917 ;; This function uses a non-reentrant model
 12918 ;;
 12919                           
 12920                           	psect	text50
 12921   004740                     __ptext50:
 12922                           	callstack 0
 12923   004740                     _LCD_Clear:
 12924                           	callstack 27
 12925   004740                     
 12926                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 12927   004740  806B               	bsf	107,0,c	;volatile
 12928   004742                     l143:
 12929   004742  B06B               	btfsc	107,0,c	;volatile
 12930   004744  EFA6  F023         	goto	u8671
 12931   004748  EFA8  F023         	goto	u8670
 12932   00474C                     u8671:
 12933   00474C  EFA1  F023         	goto	l143
 12934   004750                     u8670:
 12935   004750                     
 12936                           ;lcd.c: 97:     SSP2IF = 0;
 12937   004750  9EA4               	bcf	4004,7,c	;volatile
 12938   004752                     
 12939                           ;lcd.c: 99:     LCD_Send(0x7C);
 12940   004752  0E7C               	movlw	124
 12941   004754  EC16  F024         	call	_LCD_Send
 12942                           
 12943                           ;lcd.c: 100:     LCD_Send(0x80);
 12944   004758  0E80               	movlw	128
 12945   00475A  EC16  F024         	call	_LCD_Send
 12946                           
 12947                           ;lcd.c: 101:     LCD_Send(0x01);
 12948   00475E  0E01               	movlw	1
 12949   004760  EC16  F024         	call	_LCD_Send
 12950   004764                     
 12951                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 12952   004764  846B               	bsf	107,2,c	;volatile
 12953   004766                     l146:
 12954   004766  B46B               	btfsc	107,2,c	;volatile
 12955   004768  EFB8  F023         	goto	u8681
 12956   00476C  EFBA  F023         	goto	u8680
 12957   004770                     u8681:
 12958   004770  EFB3  F023         	goto	l146
 12959   004774                     u8680:
 12960   004774  0012               	return		;funcret
 12961   004776                     __end_of_LCD_Clear:
 12962                           	callstack 0
 12963                           
 12964 ;; *************** function _LCD_Init *****************
 12965 ;; Defined at:
 12966 ;;		line 3 in file "lcd.c"
 12967 ;; Parameters:    Size  Location     Type
 12968 ;;		None
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;		None
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  1    wreg      void 
 12973 ;; Registers used:
 12974 ;;		wreg, status,2, cstack
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;Total ram usage:        1 bytes
 12985 ;; Hardware stack levels used: 1
 12986 ;; Hardware stack levels required when called: 2
 12987 ;; This function calls:
 12988 ;;		_LCD_Send
 12989 ;; This function is called by:
 12990 ;;		_main
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994                           	psect	text51
 12995   003EBA                     __ptext51:
 12996                           	callstack 0
 12997   003EBA                     _LCD_Init:
 12998                           	callstack 28
 12999   003EBA                     
 13000                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 13001   003EBA  010F               	movlb	15	; () banked
 13002   003EBC  913B               	bcf	59,0,b	;volatile
 13003                           
 13004                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 13005   003EBE  933B               	bcf	59,1,b	;volatile
 13006                           
 13007                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 13008   003EC0  8095               	bsf	149,0,c	;volatile
 13009                           
 13010                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 13011   003EC2  8295               	bsf	149,1,c	;volatile
 13012                           
 13013                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 13014   003EC4  9092               	bcf	146,0,c	;volatile
 13015                           
 13016                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 13017   003EC6  8089               	bsf	137,0,c	;volatile
 13018   003EC8                     
 13019                           ; BSR set to: 15
 13020                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 13021   003EC8  506C               	movf	108,w,c	;volatile
 13022   003ECA  0BF0               	andlw	-16
 13023   003ECC  0908               	iorlw	8
 13024   003ECE  6E6C               	movwf	108,c	;volatile
 13025                           
 13026                           ;lcd.c: 15:     SSP2ADD = 19;
 13027   003ED0  0E13               	movlw	19
 13028   003ED2  6E6E               	movwf	110,c	;volatile
 13029   003ED4                     
 13030                           ; BSR set to: 15
 13031                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 13032   003ED4  8A6C               	bsf	108,5,c	;volatile
 13033   003ED6                     
 13034                           ; BSR set to: 15
 13035                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13036   003ED6  0E34               	movlw	52
 13037   003ED8  6E07               	movwf	??_LCD_Init^0,c
 13038   003EDA  0EF2               	movlw	242
 13039   003EDC                     u9557:
 13040   003EDC  2EE8               	decfsz	wreg,f,c
 13041   003EDE  D7FE               	bra	u9557
 13042   003EE0  2E07               	decfsz	??_LCD_Init^0,f,c
 13043   003EE2  D7FC               	bra	u9557
 13044   003EE4                     
 13045                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 13046   003EE4  806B               	bsf	107,0,c	;volatile
 13047   003EE6                     l111:
 13048   003EE6  B06B               	btfsc	107,0,c	;volatile
 13049   003EE8  EF78  F01F         	goto	u8901
 13050   003EEC  EF7A  F01F         	goto	u8900
 13051   003EF0                     u8901:
 13052   003EF0  EF73  F01F         	goto	l111
 13053   003EF4                     u8900:
 13054   003EF4                     
 13055                           ;lcd.c: 22:     SSP2IF = 0;
 13056   003EF4  9EA4               	bcf	4004,7,c	;volatile
 13057   003EF6                     
 13058                           ;lcd.c: 27:     LCD_Send(0x7C);
 13059   003EF6  0E7C               	movlw	124
 13060   003EF8  EC16  F024         	call	_LCD_Send
 13061                           
 13062                           ;lcd.c: 28:     LCD_Send(0x80);
 13063   003EFC  0E80               	movlw	128
 13064   003EFE  EC16  F024         	call	_LCD_Send
 13065                           
 13066                           ;lcd.c: 29:     LCD_Send(0x38);
 13067   003F02  0E38               	movlw	56
 13068   003F04  EC16  F024         	call	_LCD_Send
 13069                           
 13070                           ;lcd.c: 30:     LCD_Send(0x80);
 13071   003F08  0E80               	movlw	128
 13072   003F0A  EC16  F024         	call	_LCD_Send
 13073                           
 13074                           ;lcd.c: 31:     LCD_Send(0x39);
 13075   003F0E  0E39               	movlw	57
 13076   003F10  EC16  F024         	call	_LCD_Send
 13077                           
 13078                           ;lcd.c: 32:     LCD_Send(0x80);
 13079   003F14  0E80               	movlw	128
 13080   003F16  EC16  F024         	call	_LCD_Send
 13081                           
 13082                           ;lcd.c: 33:     LCD_Send(0x17);
 13083   003F1A  0E17               	movlw	23
 13084   003F1C  EC16  F024         	call	_LCD_Send
 13085                           
 13086                           ;lcd.c: 34:     LCD_Send(0x80);
 13087   003F20  0E80               	movlw	128
 13088   003F22  EC16  F024         	call	_LCD_Send
 13089                           
 13090                           ;lcd.c: 35:     LCD_Send(0x7A);
 13091   003F26  0E7A               	movlw	122
 13092   003F28  EC16  F024         	call	_LCD_Send
 13093                           
 13094                           ;lcd.c: 36:     LCD_Send(0x80);
 13095   003F2C  0E80               	movlw	128
 13096   003F2E  EC16  F024         	call	_LCD_Send
 13097                           
 13098                           ;lcd.c: 37:     LCD_Send(0x5E);
 13099   003F32  0E5E               	movlw	94
 13100   003F34  EC16  F024         	call	_LCD_Send
 13101                           
 13102                           ;lcd.c: 38:     LCD_Send(0x80);
 13103   003F38  0E80               	movlw	128
 13104   003F3A  EC16  F024         	call	_LCD_Send
 13105                           
 13106                           ;lcd.c: 39:     LCD_Send(0x6B);
 13107   003F3E  0E6B               	movlw	107
 13108   003F40  EC16  F024         	call	_LCD_Send
 13109                           
 13110                           ;lcd.c: 40:     LCD_Send(0x80);
 13111   003F44  0E80               	movlw	128
 13112   003F46  EC16  F024         	call	_LCD_Send
 13113                           
 13114                           ;lcd.c: 41:     LCD_Send(0x0C);
 13115   003F4A  0E0C               	movlw	12
 13116   003F4C  EC16  F024         	call	_LCD_Send
 13117                           
 13118                           ;lcd.c: 42:     LCD_Send(0x80);
 13119   003F50  0E80               	movlw	128
 13120   003F52  EC16  F024         	call	_LCD_Send
 13121                           
 13122                           ;lcd.c: 43:     LCD_Send(0x01);
 13123   003F56  0E01               	movlw	1
 13124   003F58  EC16  F024         	call	_LCD_Send
 13125                           
 13126                           ;lcd.c: 44:     LCD_Send(0x80);
 13127   003F5C  0E80               	movlw	128
 13128   003F5E  EC16  F024         	call	_LCD_Send
 13129                           
 13130                           ;lcd.c: 45:     LCD_Send(0x06);
 13131   003F62  0E06               	movlw	6
 13132   003F64  EC16  F024         	call	_LCD_Send
 13133                           
 13134                           ;lcd.c: 46:     LCD_Send(0x80);
 13135   003F68  0E80               	movlw	128
 13136   003F6A  EC16  F024         	call	_LCD_Send
 13137                           
 13138                           ;lcd.c: 47:     LCD_Send(0x02);
 13139   003F6E  0E02               	movlw	2
 13140   003F70  EC16  F024         	call	_LCD_Send
 13141   003F74                     
 13142                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 13143   003F74  846B               	bsf	107,2,c	;volatile
 13144   003F76                     l114:
 13145   003F76  B46B               	btfsc	107,2,c	;volatile
 13146   003F78  EFC0  F01F         	goto	u8911
 13147   003F7C  EFC2  F01F         	goto	u8910
 13148   003F80                     u8911:
 13149   003F80  EFBB  F01F         	goto	l114
 13150   003F84                     u8910:
 13151   003F84                     
 13152                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13153   003F84  0E34               	movlw	52
 13154   003F86  6E07               	movwf	??_LCD_Init^0,c
 13155   003F88  0EF2               	movlw	242
 13156   003F8A                     u9567:
 13157   003F8A  2EE8               	decfsz	wreg,f,c
 13158   003F8C  D7FE               	bra	u9567
 13159   003F8E  2E07               	decfsz	??_LCD_Init^0,f,c
 13160   003F90  D7FC               	bra	u9567
 13161   003F92  0012               	return		;funcret
 13162   003F94                     __end_of_LCD_Init:
 13163                           	callstack 0
 13164                           
 13165 ;; *************** function _LCD_Send *****************
 13166 ;; Defined at:
 13167 ;;		line 85 in file "lcd.c"
 13168 ;; Parameters:    Size  Location     Type
 13169 ;;  data            1    wreg     unsigned char 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;  data            1    5[COMRAM] unsigned char 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1    wreg      void 
 13174 ;; Registers used:
 13175 ;;		wreg
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;Total ram usage:        1 bytes
 13186 ;; Hardware stack levels used: 1
 13187 ;; Hardware stack levels required when called: 1
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_LCD_Init
 13192 ;;		_LCD_ShowString
 13193 ;;		_LCD_Clear
 13194 ;; This function uses a non-reentrant model
 13195 ;;
 13196                           
 13197                           	psect	text52
 13198   00482C                     __ptext52:
 13199                           	callstack 0
 13200   00482C                     _LCD_Send:
 13201                           	callstack 27
 13202                           
 13203                           ;incstack = 0
 13204                           ;LCD_Send@data stored from wreg
 13205   00482C  6E06               	movwf	LCD_Send@data^0,c
 13206   00482E                     
 13207                           ;lcd.c: 87:     SSP2BUF = data;
 13208   00482E  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 13209   004832                     l134:
 13210   004832  B06D               	btfsc	109,0,c	;volatile
 13211   004834  EF1E  F024         	goto	u8531
 13212   004838  EF20  F024         	goto	u8530
 13213   00483C                     u8531:
 13214   00483C  EF19  F024         	goto	l134
 13215   004840                     u8530:
 13216   004840                     l137:
 13217   004840  AEA4               	btfss	4004,7,c	;volatile
 13218   004842  EF25  F024         	goto	u8541
 13219   004846  EF27  F024         	goto	u8540
 13220   00484A                     u8541:
 13221   00484A  EF20  F024         	goto	l137
 13222   00484E                     u8540:
 13223   00484E                     
 13224                           ;lcd.c: 90:     SSP2IF = 0;
 13225   00484E  9EA4               	bcf	4004,7,c	;volatile
 13226   004850  0012               	return		;funcret
 13227   004852                     __end_of_LCD_Send:
 13228                           	callstack 0
 13229                           
 13230 ;; *************** function _ISR *****************
 13231 ;; Defined at:
 13232 ;;		line 11 in file "interrupt.c"
 13233 ;; Parameters:    Size  Location     Type
 13234 ;;		None
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;  temp            1    4[COMRAM] unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;Total ram usage:        5 bytes
 13251 ;; Hardware stack levels used: 1
 13252 ;; This function calls:
 13253 ;;		Nothing
 13254 ;; This function is called by:
 13255 ;;		Interrupt level 2
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259                           	psect	intcode
 13260   000008                     __pintcode:
 13261                           	callstack 0
 13262   000008                     _ISR:
 13263                           	callstack 21
 13264                           
 13265                           ;incstack = 0
 13266   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13267   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 13268   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 13269   000012                     
 13270                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 13271   000012  A09D               	btfss	3997,0,c	;volatile
 13272   000014  EF0E  F000         	goto	i2u627_41
 13273   000018  EF10  F000         	goto	i2u627_40
 13274   00001C                     i2u627_41:
 13275   00001C  EF49  F000         	goto	i2l5433
 13276   000020                     i2u627_40:
 13277   000020  A09E               	btfss	3998,0,c	;volatile
 13278   000022  EF15  F000         	goto	i2u628_41
 13279   000026  EF17  F000         	goto	i2u628_40
 13280   00002A                     i2u628_41:
 13281   00002A  EF49  F000         	goto	i2l5433
 13282   00002E                     i2u628_40:
 13283   00002E  0101               	movlb	1	; () banked
 13284   000030  5124               	movf	_GPIOIE& (0+255),w,b
 13285   000032  B4D8               	btfsc	status,2,c
 13286   000034  EF1E  F000         	goto	i2u629_41
 13287   000038  EF20  F000         	goto	i2u629_40
 13288   00003C                     i2u629_41:
 13289   00003C  EF49  F000         	goto	i2l5433
 13290   000040                     i2u629_40:
 13291   000040                     
 13292                           ; BSR set to: 1
 13293                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 13294   000040  A480               	btfss	128,2,c	;volatile
 13295   000042  EF25  F000         	goto	i2u630_41
 13296   000046  EF27  F000         	goto	i2u630_40
 13297   00004A                     i2u630_41:
 13298   00004A  EF44  F000         	goto	i2l380
 13299   00004E                     i2u630_40:
 13300   00004E                     
 13301                           ; BSR set to: 1
 13302                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 13303   00004E  0E03               	movlw	3
 13304   000050  6E02               	movwf	(??_ISR+1)^0,c
 13305   000052  0E08               	movlw	8
 13306   000054  6E01               	movwf	??_ISR^0,c
 13307   000056  0E77               	movlw	119
 13308   000058                     i2u957_47:
 13309   000058  2EE8               	decfsz	wreg,f,c
 13310   00005A  D7FE               	bra	i2u957_47
 13311   00005C  2E01               	decfsz	??_ISR^0,f,c
 13312   00005E  D7FC               	bra	i2u957_47
 13313   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 13314   000062  D7FA               	bra	i2u957_47
 13315   000064  0000               	nop	
 13316   000066                     
 13317                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 13318   000066  A480               	btfss	128,2,c	;volatile
 13319   000068  EF38  F000         	goto	i2u631_41
 13320   00006C  EF3A  F000         	goto	i2u631_40
 13321   000070                     i2u631_41:
 13322   000070  EF44  F000         	goto	i2l380
 13323   000074                     i2u631_40:
 13324   000074                     i2l382:
 13325   000074  B480               	btfsc	128,2,c	;volatile
 13326   000076  EF3F  F000         	goto	i2u632_41
 13327   00007A  EF41  F000         	goto	i2u632_40
 13328   00007E                     i2u632_41:
 13329   00007E  EF3A  F000         	goto	i2l382
 13330   000082                     i2u632_40:
 13331   000082                     
 13332                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 13333   000082  0E00               	movlw	0
 13334   000084  0100               	movlb	0	; () banked
 13335   000086  6FEE               	movwf	_keepStateGPIO& (0+255),b
 13336   000088                     i2l380:
 13337                           
 13338                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 13339   000088  0E9E               	movlw	158
 13340   00008A  6ECF               	movwf	207,c	;volatile
 13341   00008C  0E58               	movlw	88
 13342   00008E  6ECE               	movwf	206,c	;volatile
 13343   000090                     
 13344                           ;interrupt.c: 23:         TMR1IF = 0;
 13345   000090  909E               	bcf	3998,0,c	;volatile
 13346   000092                     i2l5433:
 13347                           
 13348                           ;interrupt.c: 26:     if(RC1IE && RC1IF && UARTIE){
 13349   000092  AA9D               	btfss	3997,5,c	;volatile
 13350   000094  EF4E  F000         	goto	i2u633_41
 13351   000098  EF50  F000         	goto	i2u633_40
 13352   00009C                     i2u633_41:
 13353   00009C  EF84  F000         	goto	i2l390
 13354   0000A0                     i2u633_40:
 13355   0000A0  AA9E               	btfss	3998,5,c	;volatile
 13356   0000A2  EF55  F000         	goto	i2u634_41
 13357   0000A6  EF57  F000         	goto	i2u634_40
 13358   0000AA                     i2u634_41:
 13359   0000AA  EF84  F000         	goto	i2l390
 13360   0000AE                     i2u634_40:
 13361   0000AE  0101               	movlb	1	; () banked
 13362   0000B0  5123               	movf	_UARTIE& (0+255),w,b
 13363   0000B2  B4D8               	btfsc	status,2,c
 13364   0000B4  EF5E  F000         	goto	i2u635_41
 13365   0000B8  EF60  F000         	goto	i2u635_40
 13366   0000BC                     i2u635_41:
 13367   0000BC  EF84  F000         	goto	i2l390
 13368   0000C0                     i2u635_40:
 13369   0000C0                     
 13370                           ; BSR set to: 1
 13371                           ;interrupt.c: 27:         char temp = RCREG1;
 13372   0000C0  CFAE F005          	movff	4014,ISR@temp	;volatile
 13373   0000C4                     
 13374                           ; BSR set to: 1
 13375                           ;interrupt.c: 28:         static int i = 0;;interrupt.c: 30:         if(temp != '\n'){
 13376   0000C4  0E0A               	movlw	10
 13377   0000C6  1805               	xorwf	ISR@temp^0,w,c
 13378   0000C8  B4D8               	btfsc	status,2,c
 13379   0000CA  EF69  F000         	goto	i2u636_41
 13380   0000CE  EF6B  F000         	goto	i2u636_40
 13381   0000D2                     i2u636_41:
 13382   0000D2  EF77  F000         	goto	i2l5447
 13383   0000D6                     i2u636_40:
 13384   0000D6                     
 13385                           ; BSR set to: 1
 13386                           ;interrupt.c: 31:             gmail.data[i] = temp;
 13387   0000D6  0E25               	movlw	low _gmail
 13388   0000D8  2521               	addwf	ISR@i& (0+255),w,b
 13389   0000DA  6ED9               	movwf	fsr2l,c
 13390   0000DC  0E01               	movlw	high _gmail
 13391   0000DE  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13392   0000E0  6EDA               	movwf	fsr2h,c
 13393   0000E2  C005  FFDF         	movff	ISR@temp,indf2
 13394   0000E6                     
 13395                           ; BSR set to: 1
 13396                           ;interrupt.c: 32:             i++;
 13397   0000E6  4B21               	infsnz	ISR@i& (0+255),f,b
 13398   0000E8  2B22               	incf	(ISR@i+1)& (0+255),f,b
 13399                           
 13400                           ;interrupt.c: 33:         } else {
 13401   0000EA  EF84  F000         	goto	i2l390
 13402   0000EE                     i2l5447:
 13403                           
 13404                           ; BSR set to: 1
 13405                           ;interrupt.c: 34:             gmail.full = 1;
 13406   0000EE  0E01               	movlw	1
 13407   0000F0  6F61               	movwf	(_gmail+60)& (0+255),b	;volatile
 13408   0000F2                     
 13409                           ; BSR set to: 1
 13410                           ;interrupt.c: 35:             gmail.data[i] = '\0';
 13411   0000F2  0E25               	movlw	low _gmail
 13412   0000F4  2521               	addwf	ISR@i& (0+255),w,b
 13413   0000F6  6ED9               	movwf	fsr2l,c
 13414   0000F8  0E01               	movlw	high _gmail
 13415   0000FA  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13416   0000FC  6EDA               	movwf	fsr2h,c
 13417   0000FE  6ADF               	clrf	indf2,c
 13418   000100                     
 13419                           ; BSR set to: 1
 13420                           ;interrupt.c: 36:             i = 0;
 13421   000100  0E00               	movlw	0
 13422   000102  6F22               	movwf	(ISR@i+1)& (0+255),b
 13423   000104  0E00               	movlw	0
 13424   000106  6F21               	movwf	ISR@i& (0+255),b
 13425   000108                     i2l390:
 13426   000108  C004  FFDA         	movff	??_ISR+3,fsr2h
 13427   00010C  C003  FFD9         	movff	??_ISR+2,fsr2l
 13428   000110  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13429   000112  0011               	retfie		f
 13430   000114                     __end_of_ISR:
 13431                           	callstack 0
 13432                           
 13433                           	psect	rparam
 13434   000000                     
 13435                           	psect	temp
 13436   00005A                     btemp:
 13437                           	callstack 0
 13438   00005A                     	ds	1
 13439   000000                     int$flags	set	btemp
 13440   000000                     wtemp8	set	btemp+1
 13441   000000                     ttemp5	set	btemp+1
 13442   000000                     ttemp6	set	btemp+4
 13443   000000                     ttemp7	set	btemp+8
 13444                           
 13445                           	psect	config
 13446                           
 13447                           ; Padding undefined space
 13448   300000                     	org	3145728
 13449   300000  FF                 	db	255
 13450                           
 13451                           ;Config register CONFIG1H @ 0x300001
 13452                           ;	Oscillator Selection bits
 13453                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13454                           ;	4X PLL Enable
 13455                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13456                           ;	Primary clock enable bit
 13457                           ;	PRICLKEN = 0x1, unprogrammed default
 13458                           ;	Fail-Safe Clock Monitor Enable bit
 13459                           ;	FCMEN = 0x0, unprogrammed default
 13460                           ;	Internal/External Oscillator Switchover bit
 13461                           ;	IESO = 0x0, unprogrammed default
 13462   300001                     	org	3145729
 13463   300001  33                 	db	51
 13464                           
 13465                           ;Config register CONFIG2L @ 0x300002
 13466                           ;	unspecified, using default values
 13467                           ;	Power-up Timer Enable bit
 13468                           ;	PWRTEN = 0x1, unprogrammed default
 13469                           ;	Brown-out Reset Enable bits
 13470                           ;	BOREN = 0x3, unprogrammed default
 13471                           ;	Brown Out Reset Voltage bits
 13472                           ;	BORV = 0x3, unprogrammed default
 13473   300002                     	org	3145730
 13474   300002  1F                 	db	31
 13475                           
 13476                           ;Config register CONFIG2H @ 0x300003
 13477                           ;	Watchdog Timer Enable bits
 13478                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13479                           ;	Watchdog Timer Postscale Select bits
 13480                           ;	WDTPS = 0xF, unprogrammed default
 13481   300003                     	org	3145731
 13482   300003  3C                 	db	60
 13483                           tosu	equ	0xFFF
 13484                           tosh	equ	0xFFE
 13485                           tosl	equ	0xFFD
 13486                           stkptr	equ	0xFFC
 13487                           pclatu	equ	0xFFB
 13488                           pclath	equ	0xFFA
 13489                           pcl	equ	0xFF9
 13490                           tblptru	equ	0xFF8
 13491                           tblptrh	equ	0xFF7
 13492                           tblptrl	equ	0xFF6
 13493                           tablat	equ	0xFF5
 13494                           prodh	equ	0xFF4
 13495                           prodl	equ	0xFF3
 13496                           indf0	equ	0xFEF
 13497                           postinc0	equ	0xFEE
 13498                           postdec0	equ	0xFED
 13499                           preinc0	equ	0xFEC
 13500                           plusw0	equ	0xFEB
 13501                           fsr0h	equ	0xFEA
 13502                           fsr0l	equ	0xFE9
 13503                           wreg	equ	0xFE8
 13504                           indf1	equ	0xFE7
 13505                           postinc1	equ	0xFE6
 13506                           postdec1	equ	0xFE5
 13507                           preinc1	equ	0xFE4
 13508                           plusw1	equ	0xFE3
 13509                           fsr1h	equ	0xFE2
 13510                           fsr1l	equ	0xFE1
 13511                           bsr	equ	0xFE0
 13512                           indf2	equ	0xFDF
 13513                           postinc2	equ	0xFDE
 13514                           postdec2	equ	0xFDD
 13515                           preinc2	equ	0xFDC
 13516                           plusw2	equ	0xFDB
 13517                           fsr2h	equ	0xFDA
 13518                           fsr2l	equ	0xFD9
 13519                           status	equ	0xFD8

Data Sizes:
    Strings     231
    Constant    64
    Data        40
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    142     143
    BANK1           256     51     189
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), STR_1(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    moveDisplay$4108	PTR unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    moveDisplay@F6961	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[5]), STR_22(CODE[17]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6973	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3528$buffer	PTR unsigned char  size(2) Largest target is 0

    S3528$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 61
		 -> gmail(BANK1[61]), ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_11(CODE[5]), 
		 -> STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), STR_15(CODE[4]), 
		 -> STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), STR_29(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 61
		 -> gmail(BANK1[61]), ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_11(CODE[5]), 
		 -> STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), STR_15(CODE[4]), 
		 -> STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), STR_26(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_moveDisplay
    _runUART->_printf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  332662
                                            138 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGPIO
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                              5     5      0   55669
                                            114 BANK0      5     5      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             13 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              6 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  145438
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   55533
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   70319
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   58232
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   56118
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   55248
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   54448
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   40798
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7043
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4693
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1306
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runPWM
     ___awdiv
   _runUART
     _printf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      50       9       31.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      BD       7       73.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F5      54        0.0%
DATA                 0      0     1F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 12:06:44 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FF03                          _C1 FEFF                          _C2 FEFB  
                        _C3 FEF7                          l50 27F0                          l60 2894  
                        l55 2842                          l58 2992                          _S1 FEE3  
                        _S2 FEDF                          _S3 FEDB                          _S4 FED7  
              ___awdiv@sign 000B         ___wmul@multiplicand 0008                         l111 3EE6  
                       l120 4126                         l113 3EF4                         l114 3F76  
                       l122 4134                         l131 41D2                         l140 4850  
                       l124 4174                         l117 3F92                         l134 4832  
                       l143 4742                         l127 41C2                         l231 46B4  
                       l215 26C4                         l128 41C4                         l232 46BA  
                       l137 4840                         l145 4750                         l146 4766  
                       l250 4874                         l234 46C8                         l226 2760  
                       l218 26C6                         l322 48CC                         l139 484E  
                       l235 46CC                         l331 48A2                         l149 4774  
                       l253 4886                         l229 46A6                         l325 48BE  
                       l430 2EE2                         l334 4894                         l350 3854  
                       l328 48B0                         l344 382C                         l425 3004  
                       l337 48DA                         l435 2FF0                         l427 2E42  
                       l532 3D96                         l349 383E                         l438 3016  
                       l542 3DA8                         l534 3D4E                         l279 3AAC  
                       l439 3018                         l543 3DBA                         l480 3884  
                       l481 3982                         l546 482A                         l811 3C72  
                       l539 3D82                         l820 4706                         l484 393C  
                       l805 43DA                         l493 3970                         l485 38FE  
                       l478 3876                         l816 3CB8                         l497 399A  
                       l843 3BB4                         l790 4282                         l777 4120  
                       _GIE 7F97                         _PR2 0FBB                         _ISR 0008  
                       _abs 47AA                         _pad 43DC                ___awmod@sign 000B  
                       prod 0FF3                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0021                ___flmul@bexp 0026  
              ___flmul@sign 0020                ___flmul@temp 002B                ___flmul@prod 0027  
                      ?_ISR 0001                        ISR@i 0121                ___fltol@exp1 0053  
                      l1100 13F6                        l1101 13E4                        l1201 326E  
                      l1130 22D8                        ?_abs 000C                        l1116 4604  
                      l1204 33CA                        l1141 2396                        l1133 229C  
                      l1142 2384                        l1215 3362                        l1128 2478  
                      l1160 15A2                        l1224 464A                        l1208 3306  
                      l1321 08F4                        l1170 17FE                        l1074 120C  
                      l1139 231E                        l1091 1326                        l1083 14DC  
                      l1075 11FA                        l1164 1906                        l1076 11C0  
                      l1414 47C4                        l1254 4414                        l1263 3598  
                      l1167 1798                        l1423 2E06                        l1344 3520  
                      l1417 47DC                        l1257 4456                        l1265 35A0  
                      l1177 18C8                        l1169 1810                        l1409 3EB8  
                      l1353 4328                        l1337 3470                        l1266 35E6  
                      l1426 2D4A                        l1259 4478                        l1443 4572  
                      l1291 04AA                        l1523 3216                        l1540 20DE  
                      l1277 36E4                        l1437 44CE                        l1293 02F0  
                      l1357 4330                        l1349 3568                        l1373 1D1C  
                      l1470 4870                        l1455 405C                        l1463 468E  
                      l1288 0B10                        l1552 2BF0                        l1563 473E  
                      l1539 1F40                        l1557 47A8                        l1399 45BC  
                      l6001 4118                        l1489 101A                        l6011 41EE  
                      l6021 4222                        l6013 41F2                        l6005 41D4  
                      l6101 3B1A                        l6031 425C                        l6023 422A  
                      l6015 4200                        l6007 41D8                        l6111 3B4A  
                      l6103 3B28                        l6025 4238                        l6033 4262  
                      l6017 4208                        l6009 41E6                        l6041 4332  
                      l6121 3B74                        l6113 3B54                        l6201 2D6E  
                      l7001 371C                        l6035 4272                        l6027 424E  
                      l6019 421A                        l6131 43DC                        l6051 43D2  
                      l6043 4360                        l6123 3B84                        l6203 2DAA  
                      l7011 376E                        l7003 3724                        l6037 427A  
                      l6029 4256                        l6141 4434                        l6133 43EA  
                      l6053 43D8                        l6045 4370                        l6061 3BF4  
                      l5501 10B4                        l6125 3B94                        l6109 3B40  
                      l6205 2DBE                        l6221 4554                        l6213 4524  
                      l6301 01F0                        l7021 37D4                        l7005 372E  
                      l7101 38D8                        ?_pad 0017                        l6143 4438  
                      l6135 43FE                        l6231 35B8                        l6047 439E  
                      l6071 3C60                        l6063 3C22                        l5503 10C4  
                      l5511 10EE                        l6127 3BA4                        l6119 3B68  
                      l6151 3DBC                        l6207 2DE6                        l6215 4538  
                      l6223 4558                        l6303 01F8                        l6311 023A  
                      l7023 37F0                        l7007 373A                        l7111 3926  
                      l7103 38F0                        l6145 4464                        l6137 440C  
                      l6241 35EE                        l6233 35BE                        l6225 356A  
                      l6049 43AE                        l6073 3CB0                        l6065 3C32  
                      l6057 3BB6                        l6081 46E6                        l5601 12F6  
                      l5521 1126                        l5513 10FE                        l5505 10D4  
                      l6153 3DDC                        l6209 2DF6                        l6217 4544  
                      l6401 0724                        l6321 0284                        l6313 0260  
                      l6305 0210                        l7201 24EA                        l7025 3808  
                      l7017 3776                        l7009 374C                        l7113 3936  
                      l7041 3CCE                        l7033 3CBA                        l6147 47AA  
                      l6139 4420                        l6251 363C                        l6243 35F8  
                      l6235 35CE                        l6227 358C                        l6075 3CB6  
                      l6067 3C40                        l6059 3BE4                        l6083 46F6  
                      l5603 1306                        l5531 113A                        l5523 112A  
                      l5515 1110                        l5507 10E4                        l6155 3E1A  
                      l6163 3E5A                        l6219 4548                        l6411 07D4  
                      l6403 0734                        l6331 02BA                        l6315 0272  
                      l6307 021A                        l7211 2632                        l7203 253A  
                      l7027 3828                        l7019 37D0                        l7123 397E  
                      l7107 390C                        l7115 393C                        l7051 3CE8  
                      l7043 3CD0                        l7035 3CC6                        l6149 47B8  
                      l5453 4874                        l5461 3FB8                        l6261 36AE  
                      l6245 35FE                        l6253 3658                        l6237 35DA  
                      l6229 35A8                        l5701 212E                        l6069 3C52  
                      l5621 1388                        l5613 1360                        l5605 1316  
                      l5541 114E                        l5533 113E                        l5525 112E  
                      l5517 111E                        l5509 10E6                        l6093 3ADA  
                      l6165 3E6C                        l6157 3E42                        l6181 449C  
                      l6173 4708                        l6421 0838                        l6413 0808  
                      l6405 0744                        l6341 0378                        l6317 0276  
                      l6501 343C                        l7141 2E2E                        l7133 2E08  
                      l7221 26E8                        l7213 269A                        l7205 254C  
                      l7029 384E                        l7125 3992                        l7117 394A  
                      l7109 391E                        l7053 3CFA                        l7045 3CD8  
                      l7037 3CCA                        l7301 281C                        l5455 4882  
                      l5463 3FC2                        l6263 36B4                        l6255 3672  
                      l6247 3630                        l6239 35E2                        l5711 2160  
                      l5703 2136                        l6079 46CE                        l5623 1390  
                      l5615 136A                        l5607 133C                        l5631 13B4  
                      l5551 1162                        l5543 1152                        l5535 1142  
                      l5527 1132                        l5519 1122                        l5471 101C  
                      l6095 3B04                        l6087 3AAE                        l6159 3E4E  
                      l6191 2C7E                        l6175 4710                        l6431 08EC  
                      l6423 083E                        l6415 081C                        l6407 0778  
                      l6351 0438                        l6343 03AA                        l6335 0300  
                      l6319 027C                        l6271 011E                        l6511 34A6  
                      l6503 344A                        l7151 2ED8                        l7143 2E38  
                      l7135 2E10                        l7231 271E                        l7223 26F6  
                      l7207 25A6                        l7127 3996                        l7119 3962  
                      l7071 3D74                        l7063 3D20                        l7055 3D10  
                      l7047 3CDA                        l7039 3CCC                        l7311 286E  
                      l7303 2834                        l5465 3FE0                        l5457 3F94  
                      l6265 36C4                        l6257 3684                        l6249 3636  
                      l5801 23EE                        l5721 2194                        l5713 2162  
                      l5705 2146                        l5641 1406                        l5633 13B8  
                      l5625 1394                        l5617 1378                        l5609 134C  
                      l5561 11DA                        l5553 118C                        l5545 1156  
                      l5537 1146                        l5529 1136                        l5481 105A  
                      l5473 102A                        l6097 3B06                        l6089 3AC6  
                      l6169 3EB0                        l6193 2C8C                        l6185 2BF2  
                      l6177 447A                        l6441 092E                        l6433 0906  
                      l6425 0846                        l6409 07CE                        l6417 0820  
                      l6361 04CC                        l6345 03E8                        l6337 0306  
                      l6329 02A0                        l6281 016E                        l6273 012E  
                      l6513 34AA                        l6505 3468                        l6601 1952  
                      l7161 2FAE                        l7153 2EE0                        l7145 2E40  
                      l7137 2E20                        l7233 2724                        l7225 26FC  
                      l7217 26A6                        l7209 260E                        l7241 274E  
                      l7129 3998                        l7081 3DB6                        l7065 3D2E  
                      l7057 3D16                        l7049 3CDC                        l7321 28C6  
                      l7313 2886                        l5467 4016                        l5459 3FA6  
                      l6259 369E                        l5811 2458                        l5803 2408  
                      l5731 21DA                        l5715 2172                        l5723 219C  
                      l5707 214C                        l5651 146C                        l5643 1412  
                      l5635 13C6                        l5627 13A4                        l5619 137A  
                      l5571 121A                        l5563 11DE                        l5555 11A8  
                      l5547 115A                        l5539 114A                        l5491 108A  
                      l5483 106A                        l5475 1038                        l6099 3B16  
                      l6187 2C12                        l6179 4488                        l6443 0936  
                      l6435 0914                        l6451 0956                        l6427 0852  
                      l6419 0830                        l6371 0504                        l6363 04D6  
                      l6347 03FC                        l6355 0478                        l6339 033A  
                      l6291 01AA                        l6283 0176                        l6275 013C  
                      l6531 428C                        l6523 3532                        l6515 34CC  
                      l6611 1998                        l6603 1962                        l7171 2FFE  
                      l7163 2FBC                        l7155 2EF0                        l7147 2E50  
                      l7139 2E22                        l7235 2732                        l7227 270A  
                      l7219 26D4                        l7091 3872                        l7083 3DB8  
                      l7075 3D90                        l7067 3D32                        l7331 2910  
                      l7323 28D0                        l7307 2850                        l7251 2780  
                      l7243 2762                        l5813 2466                        l5805 241E  
                      l5741 2202                        l5733 21DE                        l5725 21AC  
                      l5717 2182                        l5709 2152                        l5901 171C  
                      l5661 14B4                        l5653 147C                        l5645 1420  
                      l5637 13DC                        l5629 13A6                        l5581 125C  
                      l5573 122A                        l5565 11EC                        l5557 11B8  
                      l5549 115E                        l5493 109C                        l5485 106C  
                      l5477 103A                        l6197 2CFE                        l6189 2C6A  
                      l6461 09DC                        l6453 0968                        l6445 0946  
                      l6437 0924                        l6429 08CC                        l6381 054E  
                      l6373 051C                        l6365 04DE                        l6357 04B2  
                      l6349 0430                        l6285 0186                        l6293 01AE  
                      l6277 0140                        l6269 0118                        l6533 42AE  
                      l6541 4302                        l6525 3546                        l6517 3502  
                      l6509 3492                        l6621 19F4                        l6613 19AC  
                      l7165 2FCA                        l7157 2F0E                        l7149 2E6E  
                      l7237 2738                        l7229 2710                        l7181 249A  
                      l7173 247A                        l7093 3874                        l7077 3DAE  
                      l7069 3D5C                        l7341 292E                        l7325 28EC  
                      l7317 28A6                        l7309 2860                        l7261 278C  
                      l7253 2782                        l7245 277A                        l5815 246C  
                      l5807 2438                        l5751 2250                        l5727 21C2  
                      l5719 2192                        l5911 1796                        l5903 1752  
                      l5831 14FA                        l5663 14B6                        l5655 149C  
                      l5647 145A                        l5591 128A                        l5583 126A  
                      l5567 11EE                        l5559 11CE                        l5495 109E  
                      l5479 104A                        l5487 1074                        l6199 2D3A  
                      l6471 0A56                        l6463 0A10                        l6455 097A  
                      l6447 094A                        l6439 0928                        l6383 0562  
                      l6391 0658                        l6375 052E                        l6367 04E4  
                      l6359 04C0                        l6295 01D4                        l6287 0196  
                      l6279 0164                        l6535 42BA                        l6527 354A  
                      l6519 3506                        l6631 1A68                        l6623 1A08  
                      l6615 19BA                        l6607 196A                        l6551 3294  
                      l6543 321A                        l7167 2FE2                        l7159 2F78  
                      l7239 273C                        l7191 24B8                        l7183 249C  
                      l7175 248E                        l7095 38A2                        l7087 3856  
                      l7079 3DB4                        l7351 2994                        l7343 294A  
                      l7335 2918                        l7319 28C2                        l7271 2796  
                      l7263 278E                        l7255 2786                        l7247 277C  
                      l6713 482E                        l6801 41B0                        l5673 464C  
                      l5817 246E                        l5809 2454                        l5761 229A  
                      l5753 2260                        l5745 2216                        l5729 21D2  
                      l5737 21F2                        l5921 17F6                        l5913 17A8  
                      l5905 1760                        l5841 1540                        l5833 150A  
                      l5825 14DE                        l5665 14BC                        l5657 14A0  
                      l5649 145C                        l5593 1294                        l5585 1276  
                      l5577 123E                        l5569 11F8                        l5497 10A4  
                      l5489 1084                        l6481 0AC2                        l6473 0A5E  
                      l6465 0A18                        l6457 097E                        l6449 0950  
                      l6393 0676                        l6385 05C6                        l6369 04F6  
                      l6377 0536                        l6297 01E6                        l6289 01A2  
                      l5681 4806                        l6537 42D6                        l6529 4284  
                      l6641 1AC0                        l6633 1A82                        l6625 1A18  
                      l6617 19C4                        l6609 1988                        l6721 45B2  
                      l6561 32EE                        l6545 322A                        l6705 4776  
                      l7193 24BA                        l7185 249E                        l7177 2496  
                      l7097 38AE                        l7089 3858                        l7353 29A6  
                      l7337 2926                        l7329 28F4                        l7281 27A0  
                      l7273 2798                        l7265 2790                        l7257 2788  
                      l7249 277E                        l6803 41B2                        l5675 4658  
                      l5771 22E8                        l5763 22A6                        l5755 2268  
                      l5747 2230                        l5739 2202                        l5691 20FA  
                      l5931 1864                        l5915 17B6                        l5907 177E  
                      l5851 156C                        l5843 1546                        l5835 151A  
                      l5827 14EA                        l5667 14CA                        l5659 14AE  
                      l5587 127A                        l5579 124E                        l5595 129A  
                      l5499 10B2                        l6483 0AD2                        l6475 0A6C  
                      l6459 0984                        l6467 0A1C                        l6395 06AA  
                      l6387 061E                        l6379 053E                        l6299 01EA  
                      l5683 4822                        l6539 42F6                        l6491 33CC  
                      l6651 1B5A                        l6643 1ACC                        l6627 1A34  
                      l6619 19E8                        l6715 4574                        l6571 3352  
                      l6563 32F0                        l6555 32A8                        l6547 3238  
                      l6811 4692                        l6707 4796                        l7195 24BC  
                      l7187 24B0                        l7179 2498                        l7099 38CA  
                      l7355 29B4                        l7291 27CA                        l7283 27A4  
                      l7275 279A                        l7267 2792                        l7259 278A  
                      l6805 4740                        l5677 466A                        l5773 22FE  
                      l5781 232E                        l5765 22C4                        l5757 2278  
                      l5749 2240                        l5693 20FC                        l5941 18CC  
                      l5925 1820                        l5933 1868                        l5917 17BA  
                      l5909 1788                        l5861 15C2                        l5853 157C  
                      l5845 154C                        l5837 152A                        l5829 14F8  
                      l5669 14CC                        l5597 12C0                        l5589 1288  
                      l6485 0AE8                        l6477 0A9C                        l6469 0A3A  
                      l6397 06DC                        l6389 0652                        l6493 33E6  
                      l6661 1BA4                        l6645 1AD4                        l6637 1A9A  
                      l6629 1A50                        l6717 4580                        l6581 33AA  
                      l6573 3370                        l6565 32FC                        l6557 32B0  
                      l6549 327E                        l6813 46A0                        l6709 4798  
                      l6741 1D74                        l6733 1D1E                        l6725 29C0  
                      l6901 0F28                        l6821 0B38                        l7197 24BE  
                      l7189 24B6                        l7349 2952                        l7293 27E2  
                      l7285 27AA                        l7277 279C                        l7269 2794  
                      l6807 4752                        l5679 466E                        l5783 233C  
                      l5775 2304                        l5767 22C6                        l5759 228C  
                      l5695 210C                        l5687 20E0                        l5951 18F6  
                      l5943 18DC                        l5935 1882                        l5927 182C  
                      l5919 17C8                        l5871 1602                        l5855 158C  
                      l5847 155A                        l5839 1530                        l5599 12F4  
                      l6487 0AF0                        l6479 0AAA                        l6399 06F2  
                      l6495 33EE                        l6663 1BB2                        l6647 1AF6  
                      l6655 1B6C                        l6639 1A9E                        l6591 192C  
                      l6719 4596                        l6583 33B8                        l6575 3372  
                      l6567 3338                        l6559 32BC                        l6815 46A2  
                      l6751 1EE2                        l6743 1D98                        l6735 1D3E  
                      l6903 0F4C                        l6823 0B3A                        l7199 24DA  
                      l7287 27AE                        l7279 279E                        l6809 4764  
                      l5961 405E                        l5793 23A6                        l5785 2340  
                      l5777 230E                        l5769 22D6                        l5697 211C  
                      l5689 20EC                        l5945 18EA                        l5937 1896  
                      l5929 183A                        l5881 164C                        l5873 160E  
                      l5865 15D6                        l5857 1592                        l5849 155C  
                      l6497 33FA                        l6665 1BC4                        l6673 1BDC  
                      l6657 1B7C                        l6649 1B28                        l6593 1938  
                      l6585 33BA                        l6577 3376                        l6569 3344  
                      l6921 4852                        l6729 301A                        l6761 1F70  
                      l6753 1EF2                        l6745 1E04                        l6737 1D54  
                      l6913 0FC0                        l6905 0F70                        l6841 0C2A  
                      l6825 0B58                        l6833 0BAA                        l6817 0B12  
                      l7297 27FE                        l7289 27BC                        l5971 408A  
                      l5963 4062                        l5795 23B2                        l5787 234E  
                      l5779 231C                        l5699 212C                        l5947 18EC  
                      l5939 18B0                        l5891 169E                        l5883 1658  
                      l5875 1626                        l5867 15E2                        l5859 15B2  
                      l5955 45BE                        l6499 33FE                        l6683 1C6A  
                      l6667 1BCC                        l6675 1BFA                        l6595 1944  
                      l6931 461C                        l6579 339A                        l6923 4856  
                      l6771 20CA                        l6763 1FDC                        l6755 1F24  
                      l6747 1E2A                        l6739 1D56                        l6835 0BC8  
                      l6827 0B6E                        l6819 0B22                        l7299 280E  
                      l6781 4124                        l5981 40B8                        l5973 4092  
                      l5965 4070                        l5797 23C0                        l5789 237C  
                      l5949 18F2                        l5893 16AE                        l5885 1668  
                      l5877 1632                        l5869 15EC                        l5957 45D0  
                      l6693 1CCC                        l6685 1C80                        l6677 1C1A  
                      l6669 1BD4                        l6597 1948                        l6589 1908  
                      l6933 4624                        l6765 2002                        l6749 1E82  
                      l6909 0F98                        l6837 0BE6                        l6853 0CC2  
                      l6829 0B82                        l6941 48B4                        l6951 3EBA  
                      l6791 416E                        l6783 4136                        l5991 40F2  
                      l5983 40C0                        l5975 4096                        l5967 4078  
                      l5799 23EA                        l5895 16CA                        l5887 1674  
                      l5879 163E                        l6687 1C9E                        l6679 1C42  
                      l6695 1CE4                        l6599 1950                        l6935 463A  
                      l6927 4606                        l6767 205A                        l6759 1F4C  
                      l6919 0FFC                        l6855 0CD2                        l6839 0BF6  
                      l6847 0C66                        l6863 0D8E                        l6943 48A6  
                      l6961 3EF6                        l6953 3EC8                        l6793 417A  
                      l6785 4142                        l5993 40F4                        l5985 40CE  
                      l5977 409E                        l5969 407C                        l5897 16D6  
                      l5889 1684                        l6929 4614                        l6769 20B2  
                      l6865 0DAC                        l6857 0D1E                        l6849 0C9A  
                      l6945 4898                        l6963 3F74                        l6955 3ED4  
                      l6787 4152                        l6779 4124                        l5995 40FA  
                      l5987 40D4                        l5979 40B0                        l5899 16F2  
                      l6699 1CF6                        l6971 39BA                        l6867 0DCA  
                      l6883 0E4A                        l6859 0D66                        l6939 48C2  
                      l6947 488A                        l6965 3F84                        l6957 3ED6  
                      l6789 415C                        l5989 40EA                        l5997 4100  
                      l6973 39CC                        l6981 39EA                        l6885 0E5A  
                      l6869 0DDA                        l6877 0E12                        l6893 0EEE  
                      l6949 48D0                        l6959 3EE4                        l6799 417E  
                      l5999 4110                        l6975 39D2                        l6983 3A0A  
                      l6967 39A0                        l6895 0F04                        l6887 0E92  
                      l6985 3A8C                        l6977 39E4                        l6969 39A4  
                      l6897 0F14                        l6889 0EC6                        l6993 36E6  
                      l6987 3A9A                        l6995 3710                        l6989 3AA8  
                      l6997 3718                        l6999 371A                        STR_1 FF5D  
                      STR_2 FF3B                        STR_3 FF4C                        STR_4 FFA1  
                      STR_5 FF6E                        STR_6 FF3B                        STR_7 FF90  
                      STR_8 FF7F                        STR_9 FFB2                        u7000 23A6  
                      u7001 23A2                        u7010 23C0                        u7011 23BC  
                      _PEIE 7F96                        u7020 2408                        u7100 157C  
                      u7021 2404                        u7101 1578                        u7030 2438  
                      u7110 15B2                        u7031 2434                        u7111 15AE  
                      u6400 3FE0                        u7040 2466                        u7200 183A  
                      u7120 15C2                        u8000 04F6                        u6401 3FDC  
                      u7041 2462                        u7201 1836                        u7121 15BE  
                      u8001 04F2                        u6410 4016                        u7210 1882  
                      u7130 173C                        u7050 14F8                        u8010 0504  
                      u6411 4012                        u7211 187E                        u7051 14F4  
                      u8011 0500                        u7300 41E6                        u7220 18B0  
                      u7140 1796                        u7060 150A                        u6500 111E  
                      u6420 1038                        u8100 0906                        u8020 052E  
                      u7301 41E2                        u7221 18AC                        u7141 1792  
                      u7061 1506                        u6501 111A                        u6421 1034  
                      u8101 0902                        u8021 052A                        u7310 4200  
                      u7230 18EA                        u7150 17B6                        u7070 151A  
                      u6510 118C                        u6430 104A                        u8110 0914  
                      u8030 0676                        u7311 41FC                        u7231 18E6  
                      u7151 17B2                        u7135 1732                        u7071 1516  
                      u6511 1188                        u6431 1046                        u8111 0910  
                      u8031 0672                        u7240 4070                        u7320 421A  
                      u7400 3C22                        u7160 17C8                        u7080 155A  
                      u6600 126A                        u6520 11A4                        u6440 105A  
                      u8120 0968                        u8040 06DC                        u8200 343C  
                      u9000 37CE                        u7241 406C                        u7321 4216  
                      u7401 3C1E                        u7161 17C4                        u7081 1556  
                      u6601 1266                        u6521 119E                        u6441 1056  
                      u8121 0964                        u8041 06D8                        u8201 3438  
                      u7250 408A                        u7330 4238                        u6370 4882  
                      u7410 3C40                        u7170 17F6                        u7090 156C  
                      u6610 1288                        u6530 11A6                        u6450 109C  
                      u8130 0A3A                        u8050 0724                        u8210 344A  
                      u9010 37F0                        u7251 4086                        u7331 4234  
                      u6371 487E                        u7411 3C3C                        u7171 17F2  
                      u7091 1568                        u6611 1284                        u6451 1098  
                      u8131 0A36                        u8051 0720                        u8211 3446  
                      u9011 37EC                        u7260 40B0                        u7340 424E  
                      u6380 3FA6                        u7420 3C60                        u7180 180C  
                      u6700 13C6                        u6620 12C0                        u6540 11CE  
                      u6460 10B2                        u7500 3B84                        u8140 0A56  
                      u8060 0734                        u8300 4328                        u8220 3468  
                      u9020 3828                        u9100 3884                        u7261 40AC  
                      u7341 424A                        u6381 3FA2                        u7421 3C5C  
                      u7181 1808                        u6701 13C2                        u6621 12BC  
                      u6541 11CA                        u6461 10AE                        u7501 3B80  
                      u8141 0A52                        u8061 0730                        u8301 4324  
                      u8221 3464                        u9021 3824                        u9101 3880  
                      u7270 40CE                        u7350 4272                        u6390 3FB8  
                      u7430 3CB0                        u7190 1820                        u6710 13DC  
                      u6630 1306                        u6550 11EC                        u6470 10C4  
                      u7510 3B94                        u8150 0ABC                        u8070 07CE  
                      u8230 348E                        u8310 322A                        u9030 383E  
                      u9110 38D8                        u7271 40CA                        u7351 426E  
                      u6391 3FB4                        u7431 3CAC                        u7191 181C  
                      u6711 13D8                        u6631 1302                        u6551 11E8  
                      u6471 10C0                        u7511 3B90                        u8151 0AB6  
                      u8071 07CA                        u8231 348A                        u8311 3226  
                      u9031 383A                        u9111 38D4                        u7280 40EA  
                      u7520 43EA                        u7360 4360                        u7440 46E6  
                      u6800 14CA                        u6720 13F2                        u6640 133C  
                      u6560 120C                        u6480 10D4                        u7600 3E6C  
                      u8160 0ABE                        u8080 081C                        u8240 34C8  
                      u8400 33B8                        u8320 3238                        u9120 38FE  
                      u9040 3CFA                        u7281 40E6                        u7521 43E6  
                      u7361 435C                        u7441 46E2                        u6801 14C6  
                      u6721 13EE                        u6641 1338                        u6561 1208  
                      u6481 10D0                        u7601 3E68                        u8081 0818  
                      u8241 34C4                        u8401 33B4                        u8321 3234  
                      u9201 2E28                        u9121 38FA                        u9041 3CF6  
                      u7290 4110                        u6810 468E                        u7530 440C  
                      u7370 439E                        u6730 1406                        u6650 134C  
                      u6570 121A                        u6490 1110                        u7450 3AC6  
                      u8170 0AD2                        u8090 08CC                        u8250 34EE  
                      u8410 192C                        u8330 3294                        u9210 2E50  
                      u9130 390C                        u9050 3D4E                        u7291 410C  
                      u6811 468A                        u7531 4408                        u7371 439A  
                      u6731 1402                        u6651 1348                        u6571 1216  
                      u6491 110C                        u7451 3AC2                        u8171 0ACE  
                      u8091 08C8                        u8411 1928                        u8331 3290  
                      u9211 2E4C                        u9131 3908                        u9051 3D4A  
                      u7540 4456                        u6900 2278                        u6820 20FA  
                      u7380 43D2                        u6740 1420                        u6660 1378  
                      u6580 122A                        u7460 3AFA                        u7620 3EA6  
                      u7700 2CFA                        u8260 3520                        u8180 33E6  
                      u8500 1B5A                        u8420 1998                        u8340 32EA  
                      u9220 2EF0                        u9300 26F6                        u9140 391E  
                      u9060 3D5C                        u7541 4452                        u6901 2274  
                      u6821 20F6                        u7381 43CE                        u6741 141C  
                      u6661 1374                        u6581 1226                        u7621 3EA0  
                      u7701 2CF6                        u8261 351C                        u8181 33E2  
                      u8501 1B56                        u8421 1994                        u8341 32E6  
                      u9221 2EEC                        u9301 26F2                        u9141 391A  
                      u9061 3D58                        u7550 4464                        u6910 229A  
                      u6830 210C                        u7390 3BE4                        u6750 145A  
                      u6670 1388                        u6590 125C                        u7470 3B28  
                      u7630 3EA8                        u7710 2D1E                        u8270 352E  
                      u8190 342C                        u8510 1B7C                        u8430 19BA  
                      u8350 3334                        u9230 2FCA                        u9310 270A  
                      u9150 3936                        u9070 3D82                        u7551 4460  
                      u6911 2296                        u6831 2108                        u7391 3BE0  
                      u6751 1456                        u6671 1384                        u6591 1258  
                      u7471 3B24                        u7615 3E7E                        u8271 352A  
                      u8511 1B78                        u8431 19B6                        u8351 3330  
                      u9231 2FC6                        u9311 2706                        u9151 3932  
                      u9071 3D7E                        u7560 47B8                        u7800 35B8  
                      u6920 22C4                        u6840 211C                        u6760 146C  
                      u6680 13A4                        u7480 3B3C                        u7720 2D3A  
                      u7640 473E                        u8280 3568                        u8520 1C16  
                      u8440 19E8                        u8360 3352                        u9240 2FF0  
                      u8600 20DA                        u9320 271E                        u9160 394A  
                      u9080 3D90                        u9400 2850                        u7561 47B4  
                      u7801 35B4                        u6921 22C0                        u6841 2118  
                      u6761 1468                        u6681 13A0                        u7481 3B38  
                      u7465 3AF0                        u7721 2D36                        u7641 473A  
                      u8281 3564                        u8257 34E4                        u8521 1C12  
                      u8441 19E4                        u8361 334E                        u9241 2FEC  
                      u8601 20D6                        u9321 271A                        u9161 3946  
                      u9081 3D8C                        u9401 284C                        u8530 4840  
                      u8610 4134                        u7810 35CE                        u6930 22E8  
                      u6850 2160                        u6770 147C                        u6690 13B4  
                      u7490 3B64                        u7570 3DFC                        u7730 2D8E  
                      u7650 4488                        u8290 42AE                        u8450 1A34  
                      u8370 3362                        u9250 2FFE                        u9330 2732  
                      u9170 3970                        u9090 3DA8                        u9410 286E  
                      u8531 483C                        u8611 4130                        u7811 35CA  
                      u6931 22E4                        u6851 215C                        u6771 1478  
                      u6691 13B0                        u7491 3B60                        u7715 2D14  
                      u7651 4484                        u8291 42AA                        u8451 1A30  
                      u8371 335E                        u9251 2FFA                        u9331 272E  
                      u9171 396C                        u9091 3DA4                        u9411 286A  
                      u8540 484E                        u8620 4152                        u7820 3672  
                      u6940 22FE                        u6860 2172                        u6780 149C  
                      u7580 3E1A                        u7740 2DAA                        u7660 2C3A  
                      u7900 01E6                        u8460 1A50                        u8380 3370  
                      u9260 3016                        u8700 46C8                        u9340 2760  
                      u9180 397E                        u9420 2894                        u8541 484A  
                      u8621 414E                        u7821 366E                        u6941 22FA  
                      u6861 216E                        u6781 1498                        u7581 3E16  
                      u7741 2DA6                        u7901 01E2                        u8197 3422  
                      u8461 1A4C                        u8381 336C                        u9261 3012  
                      u8701 46C4                        u9341 275C                        u9181 397A  
                      u9421 2890                        u8630 416E                        u7830 3684  
                      u6950 231C                        u6870 2182                        u6790 14AE  
                      u7590 3E42                        u7750 2DE6                        u7670 2C6A  
                      u7910 0260                        u8470 1AC0                        u8550 45B2  
                      u8390 33AA                        u8710 0B34                        u9270 24EA  
                      u9190 3992                        u9430 28A2                        u9350 27CA  
                      u8631 416A                        u7831 3680                        u6951 2318  
                      u6871 217E                        u6791 14AA                        u7591 3E3E  
                      u7575 3DF2                        u7751 2DE2                        u7735 2D84  
                      u7671 2C66                        u7911 025C                        u8471 1ABC  
                      u8551 45AE                        u8391 33A6                        u8711 0B2E  
                      u9271 24E6                        u9191 398E                        u9431 289E  
                      u9351 27C6                        u8640 41AC                        u7840 369E  
                      u6960 233C                        u6880 21C2                        u7680 2C8C  
                      u7760 4572                        u7920 0272                        u8480 1AF6  
                      u8560 1D50                        u8800 0DCA                        u8720 0B36  
                      u9280 254C                        u9440 29A6                        u9360 27F0  
                      u7841 369A                        u6961 2338                        u6881 21BE  
                      u7681 2C88                        u7665 2C30                        u7761 456E  
                      u7921 026E                        u8481 1AF2                        u8561 1D4A  
                      u8801 0DC6                        u9281 2548                        u9441 29A2  
                      u9361 27EC                        u8650 41C2                        u7850 36AE  
                      u7770 357A                        u6970 234E                        u6890 2202  
                      u7930 02EC                        u8490 1B28                        u8570 1D52  
                      u8810 0DDA                        u8730 0B58                        u9290 26D4  
                      u9370 27FE                        u8651 41BE                        u7851 36AA  
                      u7771 3574                        u6971 234A                        u6891 21FE  
                      u7931 02E8                        u8491 1B24                        u8811 0DD6  
                      u8731 0B54                        u9291 26D0                        u9507 38E2  
                      u9371 27FA                        u8900 3EF4                        u8660 41D2  
                      u7780 357C                        u6980 237C                        u7940 0378  
                      u7860 013C                        u8580 1D74                        u8820 0E5A  
                      u8740 0B6E                        u9380 281C                        u8901 3EF0  
                      u8661 41CE                        u6981 2378                        u7941 0374  
                      u7861 0138                        u8581 1D70                        u8821 0E56  
                      u8741 0B6A                        u9517 3954                        u9381 2818  
                      u8910 3F84                        u8670 4750                        u7790 358C  
                      u6990 2392                        u7950 03AA                        u7870 0186  
                      u8590 1EF2                        u8830 0F04                        u8750 0BC8  
                      u9390 2842                        u8911 3F80                        u8671 474C  
                      u8647 41A2                        u7791 3588                        u6991 238E  
                      u7695 2CA0                        u7951 03A6                        u7871 0182  
                      u8591 1EEE                        u8831 0F00                        u8751 0BC4  
                      u9527 37FA                        u9391 283E                        u8680 4774  
                      u7696 2CAA                        u7960 03E8                        u7880 0196  
                      u8760 0BE6                        u8681 4770                        u7697 2CBA  
                      u7961 03E4                        u7881 0192                        u8921 39AE  
                      u8761 0BE2                        u9537 2744                        u9457 276E  
                      u7970 0474                        u7890 01D4                        u8930 39CC  
                      u8690 46B4                        u8770 0BF6                        u7971 0470  
                      u7891 01D0                        u8931 39C8                        u9547 2FD6  
                      u8691 46B0                        u8771 0BF2                        u9467 27D6  
                      u7980 04AA                        u8940 39E4                        u8780 0CD2  
                      u9557 3EDC                        u7981 04A6                        u8941 39E0  
                      u8781 0CCE                        u8845 48CA                        u9477 2828  
                      u7990 04C0                        u8790 0DAC                        u8846 48CC  
                      u9567 3F8A                        u7991 04BC                        u8791 0DA8  
                      u8855 48BC                        u8951 3744                        u9487 287A  
                      u8856 48BE                        u8865 48AE                        u8961 3756  
                      u9497 3D68                        u8866 48B0                        u8875 48A0  
                      u8876 48A2                        u8885 4892                        u8886 4894  
                      u8990 37CC                        u8895 48D8                        u8991 37C6  
                      u8896 48DA                        u8984 37B6                        u8985 37B2  
                      _TMR1 0FCE                        u8978 3788                        u8979 37D0  
                      abs@a 000C                        _dbuf 0200                        _half FEF3  
                      _labs 447A                        _main 2762                        _dtoa 356A  
                      _prec 0057                        _sinf 0B12                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 33CC                        btemp 005A  
             ___fpclassifyf 3DBC                        prodh 0FF4                        prodl 0FF3  
                      start 0114             ___fldiv@new_exp 003E                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 4122                       ??_abs 000E  
                     ??_pad 001D            __end_of_LCD_Init 3F94            __end_of_LCD_Send 4852  
             ___fltol@sign1 0052                       ?_labs 0006             __end_of___fladd 14DE  
                     ?_main 0001                       ?_dtoa 0020             __end_of___fldiv 247A  
           __end_of___awdiv 4122             __end_of___cosdf 3218             __end_of___flneg 4708  
                     STR_10 FFE5                       STR_11 FFDB                       STR_20 FFD1  
                     STR_12 FFE0                       STR_21 FF17                       STR_13 FFFA  
                     STR_22 FF2A                       STR_14 FFF6                       STR_23 FFEA  
                     STR_15 FFF2                       STR_16 FFD6                       STR_17 FFCA  
                     STR_26 FFEE                       STR_18 FF3A                       STR_19 FFD0  
           __end_of___awmod 4284                       STR_29 FFC3                       ?_sinf 00A4  
           __end_of___flmul 1908             __end_of___flsub 4606             __end_of___fltol 3BB6  
                     ?_stoa 0010             ___awdiv@divisor 0008                       _RC1IE 7CED  
                     _RC1IF 7CF5             __end_of___sindf 2BF2                       i2l380 0088  
                     i2l390 0108                       i2l382 0074                ___sindf$4114 0070  
              ___sindf$4115 0074                ___sindf$4116 0078             ___awdiv@counter 000A  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4             __end_of_pio2_1t FEEB  
                     _fabsf 4776                       _flags 0059                       _gmail 0125  
       read_prec_or_width@c 000E         read_prec_or_width@n 000F                       _fputc 3F94  
                     _fputs 464C                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FEF3                       _putch 4872  
                     dtoa@d 0022                       dtoa@i 002B                       dtoa@p 0028  
                     dtoa@s 002A                       dtoa@w 0026        __end_of_LED1_Control 48CE  
           __end_of_runGPIO 3856                       pclath 0FFA                       tablat 0FF5  
           __end_of_runUART 3DBC        __end_of_LED2_Control 48C0                       sinf@n 00B0  
                     sinf@x 00A4                       sinf@y 00B6                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 001C                       stoa@p 0016  
                     stoa@s 0012                       stoa@w 0018                       ttemp5 005B  
                     ttemp6 005E                       ttemp7 0062        __end_of_LED3_Control 48B2  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 464C  
            ?___fpclassifyf 0006        __end_of_LED4_Control 48A4        __end_of_LED5_Control 4896  
      __end_of_LED6_Control 48DC             __initialization 44D0      __end_of_LCD_ShowString 41D4  
              __end_of_half FEF7                __end_of_labs 44D0                __end_of_main 29C0  
              __end_of_dtoa 36E6                __end_of_sinf 101C                __end_of_stoa 356A  
              LCD_Send@data 0006                      ??_labs 000A                      ??_main 00EA  
                    ??_dtoa 0024                      ??_sinf 0054                      ??_stoa 0014  
         __end_of_LCD_Clear 4776               __activetblptr 0002  __end_of_read_prec_or_width 4332  
              ?_moveDisplay 00E7                      ?_fabsf 0006                      ?_fputc 0007  
                    ?_fputs 0010                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0006                      ?_putch 0001  
                    _GODONE 7E11                      _GPIOIE 0124                      i2l5421 0040  
                    i2l5431 0090                      i2l5423 004E                      i2l5415 0012  
                    i2l5441 00C4                      i2l5425 0066                      i2l5417 0020  
                    i2l5433 0092                      i2l5451 0100                      i2l5443 00D6  
                    i2l5435 00A0                      i2l5419 002E                      i2l5445 00E6  
                    i2l5437 00AE                      i2l5429 0082                      i2l5447 00EE  
                    i2l5439 00C0                      i2l5449 00F2                      _RCREG1 0FAE  
             ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C               ___rem_pio2f@x 0084  
             ___rem_pio2f@y 0088               vfpfcnvrt@done 00C4                      _UARTIE 0123  
                    _SPBRG1 0FAF                      _TMR1IE 7CE8                      _TMR1IF 7CF0  
                    _TMR2IE 7CE9                      _TMR2IF 7CF1                      _TMR1ON 7E68  
                    _TMR2ON 7DD2                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 33CC                _CCPTMRS0bits 0F49  
              vfprintf@cfmt 00CC             ?_LCD_ShowString 0007                      _s1pio2 FF13  
                    _s2pio2 FF0F                      _s3pio2 FF0B                      _s4pio2 FF07  
                    ___flge 3BB6                      ___fleq 4332                   ??___fladd 004E  
                    ___wmul 4806                   ??___fldiv 0035                   ??___awdiv 000A  
                 ??___cosdf 0052                   ??___flneg 0052                   ??___awmod 000A  
                 ??___flmul 001C                   ??___flsub 0052                   ??___fltol 0068  
          runUART@keepState 00D4                      _efgtoa 0118                   ??___sindf 0052  
                    _pio2_1 FEEB                      _floorf 2BF2                      fabsf@u 000A  
                    fabsf@x 0006                      _memcpy 4524        read_prec_or_width@ap 000D  
                    clear_0 44F6                      clear_1 4502            ___awdiv@quotient 000C  
                    _runADC 2E08                      _runDAC 247A             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 3856             ___awmod@counter 000A  
                    _printf 4852                      pad@buf 0019                      dtoa@fp 0020  
                    _strcpy 4708                      fputc@c 0007                      fputs@c 0014  
                    fputs@i 0015                      fputs@s 0010             ___fpclassifyf@e 000E  
           ___fpclassifyf@u 0010             ___fpclassifyf@x 0006                __mediumconst FED6  
                    sinf@ux 00BA                   ??_runGPIO 0007                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 46CE  
                 ??_runUART 00D2                      stoa@cp 001A                      stoa@fp 0010  
          __end_of_vfprintf 45BE                   ??_sprintf 0054                  ___flge@ff1 002D  
                ___flge@ff2 0031             ??___fpclassifyf 000A                ___xxtofl@arg 0010  
              ___xxtofl@exp 000F                ___xxtofl@val 0006                  ___fleq@ff1 0006  
                ___fleq@ff2 000A                  __accesstop 0060     __end_of__initialization 4516  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0080  
             ___rparam_used 0001                  ___fltol@f1 0064              __pcstackCOMRAM 0001  
         LED4_Control@state 0006                __pidataBANK1 47DE               __end_of_fabsf 47AA  
             __end_of_fputc 405E               __end_of_fputs 4690               __end_of_putch 4888  
                __end_of_C0 FF07                  __end_of_C1 FF03                  __end_of_C2 FEFF  
                __end_of_C3 FEFB                  __end_of_S1 FEE7                  __end_of_S2 FEE3  
                __end_of_S3 FEDF                  __end_of_S4 FEDB                     ??_fabsf 000A  
                   ??_fputc 000B                     ??_fputs 0014                     ??_putch 0006  
                __pbssBANK0 00EE                  __pbssBANK1 0100                  __pbssBANK2 0200  
                ??_LCD_Init 0007                  ??_LCD_Send 0006                 runADC@F6963 0100  
              SPI_write@LSB 0007                SPI_write@MSB 0006                     ISR@temp 0005  
                   ?___flge 002D                     ?___fleq 0006                     ?___wmul 0006  
                   ?_efgtoa 0084               ??___rem_pio2f 0089                     ?_floorf 0046  
              _LED1_Control 48C0                     ?_memcpy 0006                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 48B2                     ?_runPWM 0001  
                   ?_printf 00CE                     ?_strcpy 0006                _LED3_Control 48A4  
              _LED4_Control 4896                   ?___xxtofl 0006                _LED5_Control 4888  
            ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094  
              _LED6_Control 48CE                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F           runGPIO@LEDControl 0015             LCD_ShowString@i 000C  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 101C  
                   ___fldiv 20E0                     ___awdiv 405E                     ___cosdf 301A  
                   ___flneg 46CE                     ___awmod 41D4                     ___flmul 14DE  
                   ___flsub 45BE                     ___fltol 3AAE                     ___sindf 29C0  
                 ?_vfprintf 00C7              main@setUpAgain 00EC                     __pcinit 44D0  
                   __ramtop 1000                     __ptext0 2762                     __ptext1 3CBA  
                   __ptext2 3856                     __ptext3 36E6                     __ptext4 4888  
                   __ptext5 4896                     __ptext6 48A4                     __ptext7 48B2  
                   __ptext8 48C0                     __ptext9 48CE                     _pio2_1t FEE7  
                 _T1CONbits 0FCD             runPWM@keepState 0010       read_prec_or_width@fmt 000C  
                ??___xxtofl 000A         __end_of___rem_pio2f 20E0            ___awmod@dividend 0006  
                   _invpio2 FEEF                     _runGPIO 36E6                     efgtoa@c 008A  
                   efgtoa@d 0098                     efgtoa@e 009C                     efgtoa@f 0086  
                   efgtoa@g 00AF                     efgtoa@h 00A6                     efgtoa@i 00A4  
                   efgtoa@l 00AA                     efgtoa@m 009A                     efgtoa@n 00B3  
                   efgtoa@p 008F                     efgtoa@t 0091                     efgtoa@u 00B5  
                   efgtoa@w 009E                     _runUART 3CBA                   _LCD_Clear 4740  
                   _sprintf 4606            ___rem_pio2f$4113 008F        end_of_initialization 4516  
                   floorf@e 0064                     floorf@m 0060                     floorf@u 0066  
                   floorf@x 0046                     memcpy@d 000D                     memcpy@n 000A  
                   memcpy@s 000F                     fputc@fp 0009            ___rem_pio2f@F526 0115  
             __Lmediumconst FED6                     fputs@fp 0012            ??_LCD_ShowString 0009  
        _read_prec_or_width 4284           LED1_Control@state 0006       LCD_ShowString@lineNum 000B  
          ___rem_pio2f@sign 0093           __end_of_vfpfcnvrt 1D1E                  efgtoa@mode 0096  
                efgtoa@sign 00AE                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 000C                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 00BF                  ??_vfprintf 0054  
                   strcpy@d 000A                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0063               ___xxtofl@sign 000E                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000E                 ___fldiv@grs 0040  
               ___fldiv@rem 0039                   _SPI_write 4690                 ___flmul@grs 0022  
               _CCP1CONbits 0FBD           LED5_Control@state 0006              __end_of_s1pio2 FF17  
            __end_of_s2pio2 FF13              __end_of_s3pio2 FF0F              __end_of_s4pio2 FF0B  
            __end_of___flge 3CBA              __end_of___fleq 43DC                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 1D1E                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 482C              __end_of_efgtoa 0B12              __end_of_pio2_1 FEEF  
      moveDisplay@menuItem1 0162        moveDisplay@menuItem2 0173              __end_of_floorf 2E08  
      moveDisplay@menuItems 0184              __end_of_memcpy 4574                  floorf@F521 0119  
            __end_of_runADC 301A              __end_of_runDAC 2762              __end_of_runPWM 399C  
            __end_of_printf 4872              __end_of_strcpy 4740         start_initialization 44D0  
               __end_of_ISR 0114                 __end_of_abs 47DE                 __end_of_pad 447A  
                ?_SPI_write 0001       __end_of___fpclassifyf 3EBA             runADC@keepState 017F  
               vfprintf@fmt 00C9                    ??___flge 0035                    ??___fleq 000E  
                  ??___wmul 000A                    ??_efgtoa 008B                 __pdataBANK1 0195  
                  ??_floorf 004A                    ??_memcpy 000C                    ??_runADC 00E7  
                  ??_runDAC 00D2                    ??_runPWM 000E                    ??_printf 0054  
                  ??_strcpy 000A                   ___fladd@a 004A                   ___fladd@b 0046  
                 ___fldiv@a 0031                   ___fldiv@b 002D               runGPIO@states 0009  
                 ___cosdf@r 0068                   ___cosdf@w 0078                   ___cosdf@x 0064  
                 ___cosdf@z 007C                   ___flmul@a 0018                   ___flmul@b 0014  
               __pbssCOMRAM 0055                   ___flsub@a 0068                   ___flsub@b 0064  
             __pcstackBANK0 0060               __pcstackBANK1 0162                 ??_LCD_Clear 0007  
                 ___sindf@r 0068                   ___sindf@s 007C                   ___sindf@w 006C  
                 ___sindf@x 0064                   ___sindf@z 0080       runGPIO@numberOfStates 0022  
               _efgtoa$3669 0093                   _dtoa$3638 0024               SPI_write@data 0008  
                 __pintcode 0008               __pmediumconst FED6                    ?___fladd 0046  
                  ?___fldiv 002D                    ?___awdiv 0006                    ?___cosdf 0064  
                  ?___flneg 0080                    ?___awmod 0006                    ?___flmul 0014  
                  ?___flsub 0064                    ?___fltol 0064                  runADC@pot1 017B  
                runADC@pot2 017D                    ?___sindf 0064                  runADC@text 0162  
                 fabsf@F465 0111               ??_moveDisplay 00E8                    ?_runGPIO 0001  
                  ?_runUART 0001             runDAC@keepState 00DB                    ?_sprintf 00CE  
                 _sinf$4109 00B2                   _sinf$3833 00A8                   _sinf$3834 00AC  
               ??_SPI_write 0006              runDAC@DACindex 00DD                    _LCD_Init 3EBA  
                  _LCD_Send 482C              ___wmul@product 000A                    _LATAbits 0F89  
                  _LATBbits 0F8A                    _LATCbits 0F8B                    _LATDbits 0F8C  
         LED2_Control@state 0006                    i2u630_40 004E                    i2u630_41 004A  
                  i2u631_40 0074                    i2u631_41 0070                    i2u632_40 0082  
                  i2u632_41 007E                    i2u633_40 00A0                    i2u633_41 009C  
                  i2u634_40 00AE                    i2u634_41 00AA                    i2u635_40 00C0  
                  i2u627_40 0020                    i2u635_41 00BC                    i2u627_41 001C  
                  i2u636_40 00D6                    i2u628_40 002E                    i2u636_41 00D2  
                  i2u628_41 002A                    i2u629_40 0040                    i2u629_41 003C  
                  i2u957_47 0058                   _vfpfcnvrt 1908                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0006                   main@menuI 00ED  
          moveDisplay@F6961 0195                  vfpfcnvrt@c 00C3                   copy_data0 44E4  
       __end_of_moveDisplay 3AAE            moveDisplay@menuI 0194            moveDisplay@where 00E7  
              runGPIO@F6973 01B1                runGPIO@F6991 01A5                runGPIO@GPIOi 0024  
                  __Hrparam 0000                   memcpy@tmp 000C                  vfprintf@ap 00CB  
                  __Lrparam 0000                  vfprintf@fp 00C7          runGPIO@GPIOreverse 0021  
         LED6_Control@state 0006                ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9  
       runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELCbits 0F3A                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 011D                  sprintf@fmt 00D0                    ___xxtofl 3218  
                  __ptext10 247A                    __ptext11 0B12                    __ptext20 399C  
                  __ptext12 29C0                    __ptext21 4606                    __ptext13 1D1E  
                  __ptext30 447A                    __ptext22 4574                    __ptext14 4776  
                  __ptext31 2BF2                    __ptext23 1908                    __ptext15 301A  
                  __ptext40 20E0                    __ptext32 3DBC                    __ptext24 33CC  
                  __ptext16 4852                    __ptext41 356A                    __ptext33 3AAE  
                  __ptext25 4284                    __ptext17 4690                    __ptext50 4740  
                  __ptext42 43DC                    __ptext34 45BE                    __ptext26 4806  
                  __ptext18 2E08                    __ptext51 3EBA                    __ptext43 464C  
                  __ptext35 101C                    __ptext27 0118                    __ptext19 3218  
                  __ptext52 482C                    __ptext44 3F94                    __ptext36 46CE  
                  __ptext28 4708                    __ptext45 4872                    __ptext37 14DE  
                  __ptext29 4524                    __ptext46 47AA                    __ptext38 3BB6  
                  __ptext47 41D4                    __ptext39 4332                    __ptext48 405E  
                  __ptext49 4122              runADC@voltage1 0173              runADC@voltage2 0177  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                strcpy@dest 0006                    efgtoa@fp 0084                    efgtoa@ne 008D  
                  efgtoa@pp 0095                    efgtoa@ou 00A0                    isa$xinst 0000  
                  int$flags 005A                 _runDAC$4106 00D3                 _runDAC$4107 00D7  
                  _vfprintf 4574               ?_LED1_Control 0001                   printf@fmt 00CE  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0006  
             ?_LED5_Control 0001                    memcpy@d1 0006               ?_LED6_Control 0001  
                  memcpy@s1 0008                 _moveDisplay 399C                    intlevel2 0000  
                 sprintf@ap 00DA                   strcpy@src 0008                  _RCSTA1bits 0FAB  
                  sinf@sign 00B1                    runGPIO@j 0025                    runUART@p 00D5  
               efgtoa@nmode 0097                    printf@ap 0054              ??_LED1_Control 0006  
            ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007  
            ??_LED3_Control 0006              ??_LED4_Control 0006                    sprintf@f 00DB  
                  sprintf@s 00CE              ??_LED5_Control 0006              ??_LED6_Control 0006  
          runPWM@multiplier 0011               ___fladd@signs 0060                ___fladd@aexp 0061  
              ___fladd@bexp 0062                ___cosdf$4110 006C                ___cosdf$4111 0070  
              ___cosdf$4112 0074               _keepStateGPIO 00EE           LED3_Control@state 0006  
