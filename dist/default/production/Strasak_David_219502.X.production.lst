

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 27 23:22:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F46K22 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataBANK0
    65   00181E                     __pidataBANK0:
    66                           	callstack 0
    67                           
    68                           ;initializer for main@F6945
    69   00181E  58                 	db	low STR_1
    70   00181F  5D                 	db	low STR_2
    71   001820  6F                 	db	low STR_3
    72   001821  6B                 	db	low STR_4
    73   001822  67                 	db	low STR_5
    74   001823  53                 	db	low STR_6
    75   001824  48                 	db	low STR_7
    76   001825  52                 	db	low (STR_11+4)
    77                           
    78                           	psect	smallconst
    79   001000                     __psmallconst:
    80                           	callstack 0
    81   001000  00                 	db	0
    82   001001  6C3C               	dw	27708
    83   001003  3636               	dw	13878
    84   001005                     __end_of_S4:
    85                           	callstack 0
    86   001005  07CF               	dw	1999
    87   001007  B950               	dw	47440
    88   001009                     __end_of_S3:
    89                           	callstack 0
    90   001009  8884               	dw	34948
    91   00100B  3C08               	dw	15368
    92   00100D                     __end_of_S2:
    93                           	callstack 0
    94   00100D  AAAB               	dw	43691
    95   00100F  BE2A               	dw	48682
    96   001011                     __end_of_S1:
    97                           	callstack 0
    98   001011  85A3               	dw	34211
    99   001013  3288               	dw	12936
   100   001015                     __end_of_pio2_1t:
   101                           	callstack 0
   102   001015  0FDA               	dw	4058
   103   001017  3FC9               	dw	16329
   104   001019                     __end_of_pio2_1:
   105                           	callstack 0
   106   001019  F983               	dw	63875
   107   00101B  3F22               	dw	16162
   108   00101D                     __end_of_invpio2:
   109                           	callstack 0
   110   00101D  0000               	dw	0
   111   00101F  3F00               	dw	16128
   112   001021                     __end_of_half:
   113                           	callstack 0
   114   001021  9A17               	dw	39447
   115   001023  37CC               	dw	14284
   116   001025                     __end_of_C3:
   117                           	callstack 0
   118   001025  043F               	dw	1087
   119   001027  BAB6               	dw	47798
   120   001029                     __end_of_C2:
   121                           	callstack 0
   122   001029  AA9F               	dw	43679
   123   00102B  3D2A               	dw	15658
   124   00102D                     __end_of_C1:
   125                           	callstack 0
   126   00102D  0000               	dw	0
   127   00102F  BF00               	dw	48896
   128   001031                     __end_of_C0:
   129                           	callstack 0
   130   001031  0FDB               	dw	4059
   131   001033  40C9               	dw	16585
   132   001035                     __end_of_s4pio2:
   133                           	callstack 0
   134   001035  CBE4               	dw	52196
   135   001037  4096               	dw	16534
   136   001039                     __end_of_s3pio2:
   137                           	callstack 0
   138   001039  0FDB               	dw	4059
   139   00103B  4049               	dw	16457
   140   00103D                     __end_of_s2pio2:
   141                           	callstack 0
   142   00103D  0FDB               	dw	4059
   143   00103F  3FC9               	dw	16329
   144   001041                     __end_of_s1pio2:
   145                           	callstack 0
   146   000000                     _TRISBbits	set	3987
   147   000000                     _SSP2STATbits	set	3949
   148   000000                     _SSP2ADD	set	3950
   149   000000                     _TX1IF	set	31988
   150   000000                     _GODONE	set	32273
   151   000000                     _ANSELBbits	set	3897
   152   000000                     _ANSELDbits	set	3899
   153   000000                     _ANSELAbits	set	3896
   154   000000                     _TRISAbits	set	3986
   155   000000                     _TRISCbits	set	3988
   156   000000                     _TRISDbits	set	3989
   157   000000                     _SSP1IF	set	31987
   158   000000                     _SSP2IF	set	32039
   159   000000                     _SSP2CON2bits	set	3947
   160   000000                     _SSP2CON1bits	set	3948
   161   000000                     _LATAbits	set	3977
   162   000000                     _LATBbits	set	3978
   163   000000                     _PORTAbits	set	3968
   164   000000                     _PORTCbits	set	3970
   165   000000                     _SSP2BUF	set	3951
   166   000000                     _RCSTA1bits	set	4011
   167   000000                     _SPBRG1	set	4015
   168   000000                     _ADCON2bits	set	4032
   169   000000                     _SSP1CON1bits	set	4038
   170   000000                     _SSP1BUF	set	4041
   171   000000                     _SSP1STATbits	set	4039
   172   000000                     _ADCON0bits	set	4034
   173   000000                     _ADRESH	set	4036
   174   000000                     _TXREG1	set	4013
   175   000000                     _TXSTA1bits	set	4012
   176   001041                     STR_12:
   177   001041  28                 	db	40
   178   001042  6E                 	db	110	;'n'
   179   001043  75                 	db	117	;'u'
   180   001044  6C                 	db	108	;'l'
   181   001045  6C                 	db	108	;'l'
   182   001046  29                 	db	41
   183   001047  00                 	db	0
   184   001048                     STR_7:
   185   001048  4D                 	db	77	;'M'
   186   001049  55                 	db	85	;'U'
   187   00104A  53                 	db	83	;'S'
   188   00104B  49                 	db	73	;'I'
   189   00104C  43                 	db	67	;'C'
   190   00104D  00                 	db	0
   191   00104E                     STR_11:
   192   00104E  25                 	db	37
   193   00104F  64                 	db	100	;'d'
   194   001050  20                 	db	32
   195   001051  0D                 	db	13
   196   001052  00                 	db	0
   197   001053                     STR_6:
   198   001053  47                 	db	71	;'G'
   199   001054  41                 	db	65	;'A'
   200   001055  4D                 	db	77	;'M'
   201   001056  45                 	db	69	;'E'
   202   001057  00                 	db	0
   203   001058                     STR_1:
   204   001058  47                 	db	71	;'G'
   205   001059  50                 	db	80	;'P'
   206   00105A  49                 	db	73	;'I'
   207   00105B  4F                 	db	79	;'O'
   208   00105C  00                 	db	0
   209   00105D                     STR_2:
   210   00105D  55                 	db	85	;'U'
   211   00105E  41                 	db	65	;'A'
   212   00105F  52                 	db	82	;'R'
   213   001060  54                 	db	84	;'T'
   214   001061  00                 	db	0
   215   001062                     STR_9:
   216   001062  25                 	db	37
   217   001063  2D                 	db	45
   218   001064  2A                 	db	42
   219   001065  73                 	db	115	;'s'
   220   001066  00                 	db	0
   221   001067                     STR_5:
   222   001067  44                 	db	68	;'D'
   223   001068  41                 	db	65	;'A'
   224   001069  43                 	db	67	;'C'
   225   00106A  00                 	db	0
   226   00106B                     STR_4:
   227   00106B  41                 	db	65	;'A'
   228   00106C  44                 	db	68	;'D'
   229   00106D  43                 	db	67	;'C'
   230   00106E  00                 	db	0
   231   00106F                     STR_3:
   232   00106F  50                 	db	80	;'P'
   233   001070  57                 	db	87	;'W'
   234   001071  4D                 	db	77	;'M'
   235   001072  00                 	db	0
   236   001073  00                 	db	0	; dummy byte at the end
   237   000000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241   001702                     __pcinit:
   242                           	callstack 0
   243   001702                     start_initialization:
   244                           	callstack 0
   245   001702                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to BANK0 (8 bytes)
   249                           ; load TBLPTR registers with __pidataBANK0
   250   001702  0E1E               	movlw	low __pidataBANK0
   251   001704  6EF6               	movwf	tblptrl,c
   252   001706  0E18               	movlw	high __pidataBANK0
   253   001708  6EF7               	movwf	tblptrh,c
   254   00170A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   255   00170C  6EF8               	movwf	tblptru,c
   256   00170E  EE00  F0AB         	lfsr	0,__pdataBANK0
   257   001712  EE10 F008          	lfsr	1,8
   258   001716                     copy_data0:
   259   001716  0009               	tblrd		*+
   260   001718  CFF5 FFEE          	movff	tablat,postinc0
   261   00171C  50E5               	movf	postdec1,w,c
   262   00171E  50E1               	movf	fsr1l,w,c
   263   001720  E1FA               	bnz	copy_data0
   264                           
   265                           ; Clear objects allocated to BANK0 (33 bytes)
   266   001722  EE00  F08A         	lfsr	0,__pbssBANK0
   267   001726  0E21               	movlw	33
   268   001728                     clear_0:
   269   001728  6AEE               	clrf	postinc0,c
   270   00172A  06E8               	decf	wreg,f,c
   271   00172C  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to COMRAM (13 bytes)
   274   00172E  EE00  F037         	lfsr	0,__pbssCOMRAM
   275   001732  0E0D               	movlw	13
   276   001734                     clear_1:
   277   001734  6AEE               	clrf	postinc0,c
   278   001736  06E8               	decf	wreg,f,c
   279   001738  E1FD               	bnz	clear_1
   280   00173A                     end_of_initialization:
   281                           	callstack 0
   282   00173A                     __end_of__initialization:
   283                           	callstack 0
   284   00173A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285   00173C  6EF8               	movwf	tblptru,c
   286   00173E  0100               	movlb	0
   287   001740  EF41  F00B         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290   000037                     __pbssCOMRAM:
   291                           	callstack 0
   292   000037                     	ds	4
   293   00003B                     	ds	4
   294   00003F                     _width:
   295                           	callstack 0
   296   00003F                     	ds	2
   297   000041                     _prec:
   298                           	callstack 0
   299   000041                     	ds	2
   300   000043                     _flags:
   301                           	callstack 0
   302   000043                     	ds	1
   303                           
   304                           	psect	bssBANK0
   305   00008A                     __pbssBANK0:
   306                           	callstack 0
   307   00008A                     	ds	32
   308   0000AA                     _menuI:
   309                           	callstack 0
   310   0000AA                     	ds	1
   311                           
   312                           	psect	dataBANK0
   313   0000AB                     __pdataBANK0:
   314                           	callstack 0
   315   0000AB                     main@F6945:
   316                           	callstack 0
   317   0000AB                     	ds	8
   318                           
   319                           	psect	cstackBANK0
   320   000060                     __pcstackBANK0:
   321                           	callstack 0
   322   000060                     main@menuItem1:
   323                           	callstack 0
   324                           
   325                           ; 17 bytes @ 0x0
   326   000060                     	ds	17
   327   000071                     main@menuItem2:
   328                           	callstack 0
   329                           
   330                           ; 17 bytes @ 0x11
   331   000071                     	ds	17
   332   000082                     main@menuItems:
   333                           	callstack 0
   334                           
   335                           ; 8 bytes @ 0x22
   336   000082                     	ds	8
   337                           
   338                           	psect	cstackCOMRAM
   339   000001                     __pcstackCOMRAM:
   340                           	callstack 0
   341   000001                     ?___wmul:
   342                           	callstack 0
   343   000001                     LCD_Send@data:
   344                           	callstack 0
   345   000001                     putch@data:
   346                           	callstack 0
   347   000001                     ___wmul@multiplier:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x0
   351   000001                     	ds	1
   352   000002                     ??_LCD_Init:
   353   000002                     LCD_ShowString@textData:
   354                           	callstack 0
   355   000002                     fputc@c:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x1
   359   000002                     	ds	1
   360   000003                     LCD_ShowString@lineNum:
   361                           	callstack 0
   362   000003                     ___wmul@multiplicand:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x2
   366   000003                     	ds	1
   367   000004                     LCD_ShowString@i:
   368                           	callstack 0
   369   000004                     fputc@fp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x3
   373   000004                     	ds	1
   374   000005                     ___wmul@product:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x4
   378   000005                     	ds	1
   379   000006                     ??_fputc:
   380                           
   381                           ; 1 bytes @ 0x5
   382   000006                     	ds	1
   383   000007                     ?_read_prec_or_width:
   384                           	callstack 0
   385   000007                     read_prec_or_width@fmt:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x6
   389   000007                     	ds	1
   390   000008                     read_prec_or_width@ap:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x7
   394   000008                     	ds	1
   395   000009                     read_prec_or_width@c:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x8
   399   000009                     	ds	1
   400   00000A                     read_prec_or_width@n:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x9
   404   00000A                     	ds	1
   405   00000B                     stoa@fp:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xA
   409   00000B                     	ds	2
   410   00000D                     stoa@s:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xC
   414   00000D                     	ds	2
   415   00000F                     ??_stoa:
   416                           
   417                           ; 1 bytes @ 0xE
   418   00000F                     	ds	2
   419   000011                     stoa@p:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x10
   423   000011                     	ds	2
   424   000013                     stoa@w:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x12
   428   000013                     	ds	2
   429   000015                     stoa@cp:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x14
   433   000015                     	ds	2
   434   000017                     stoa@l:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x16
   438   000017                     	ds	2
   439   000019                     vfpfcnvrt@fp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x18
   443   000019                     	ds	2
   444   00001B                     vfpfcnvrt@fmt:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x1A
   448   00001B                     	ds	1
   449   00001C                     vfpfcnvrt@ap:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453   00001C                     	ds	1
   454   00001D                     ??_vfpfcnvrt:
   455                           
   456                           ; 1 bytes @ 0x1C
   457   00001D                     	ds	1
   458   00001E                     vfpfcnvrt@done:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x1D
   462   00001E                     	ds	1
   463   00001F                     ?_vfprintf:
   464                           	callstack 0
   465   00001F                     vfprintf@fp:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1E
   469   00001F                     	ds	2
   470   000021                     vfprintf@fmt:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x20
   474   000021                     	ds	1
   475   000022                     vfprintf@ap:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x21
   479   000022                     	ds	1
   480   000023                     vfprintf@cfmt:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x22
   484   000023                     	ds	1
   485   000024                     ?_sprintf:
   486                           	callstack 0
   487   000024                     sprintf@s:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x23
   491   000024                     	ds	1
   492   000025                     sprintf@fmt:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x24
   496   000025                     	ds	5
   497   00002A                     sprintf@ap:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x29
   501   00002A                     	ds	1
   502   00002B                     sprintf@f:
   503                           	callstack 0
   504                           
   505                           ; 12 bytes @ 0x2A
   506   00002B                     	ds	12
   507   000037                     
   508                           ; 1 bytes @ 0x36
   509 ;;
   510 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   511 ;;
   512 ;; *************** function _main *****************
   513 ;; Defined at:
   514 ;;		line 12 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  menuItem2      17   17[BANK0 ] unsigned char [17]
   519 ;;  menuItem1      17    0[BANK0 ] unsigned char [17]
   520 ;;  menuItems       8   34[BANK0 ] PTR unsigned char [8]
   521 ;;		 -> STR_8(1), STR_7(6), STR_6(5), STR_5(4), 
   522 ;;		 -> STR_4(4), STR_3(4), STR_2(5), STR_1(5), 
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Totals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;Total ram usage:       42 bytes
   537 ;; Hardware stack levels required when called: 6
   538 ;; This function calls:
   539 ;;		_LCD_Init
   540 ;;		_LCD_ShowString
   541 ;;		_sprintf
   542 ;; This function is called by:
   543 ;;		Startup code after reset
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text0
   548   001682                     __ptext0:
   549                           	callstack 0
   550   001682                     _main:
   551                           	callstack 25
   552   001682                     
   553                           ;main.c: 14:     TRISCbits.RC0 = 1;
   554   001682  8094               	bsf	148,0,c	;volatile
   555                           
   556                           ;main.c: 15:     TRISAbits.RA4 = 1;
   557   001684  8892               	bsf	146,4,c	;volatile
   558                           
   559                           ;main.c: 16:     TRISAbits.RA3 = 1;
   560   001686  8692               	bsf	146,3,c	;volatile
   561                           
   562                           ;main.c: 17:     TRISAbits.RA2 = 1;
   563   001688  8492               	bsf	146,2,c	;volatile
   564                           
   565                           ;main.c: 18:     ANSELAbits.ANSA3 = 0;
   566   00168A  010F               	movlb	15	; () banked
   567   00168C  9738               	bcf	56,3,b	;volatile
   568                           
   569                           ;main.c: 19:     ANSELAbits.ANSA2 = 0;
   570   00168E  9538               	bcf	56,2,b	;volatile
   571   001690                     
   572                           ; BSR set to: 15
   573                           ;main.c: 22:     LCD_Init();
   574   001690  ECDD  F009         	call	_LCD_Init	;wreg free
   575   001694                     
   576                           ;main.c: 23:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
   577   001694  EE20  F0AB         	lfsr	2,main@F6945
   578   001698  EE10  F082         	lfsr	1,main@menuItems
   579   00169C  0E07               	movlw	7
   580   00169E                     u821:
   581   00169E  CFDB FFE3          	movff	plusw2,plusw1
   582   0016A2  06E8               	decf	wreg,f,c
   583   0016A4  E2FC               	bc	u821
   584   0016A6                     
   585                           ;main.c: 29:     sprintf(menuItem1, "%-*s", 16, menuItems[menuI]);
   586   0016A6  0E60               	movlw	low main@menuItem1
   587   0016A8  6E24               	movwf	sprintf@s^0,c
   588   0016AA  0E62               	movlw	low STR_9
   589   0016AC  6E25               	movwf	sprintf@fmt^0,c
   590   0016AE  0E00               	movlw	0
   591   0016B0  6E27               	movwf	(?_sprintf+3)^0,c
   592   0016B2  0E10               	movlw	16
   593   0016B4  6E26               	movwf	(?_sprintf+2)^0,c
   594   0016B6  C082  F028         	movff	main@menuItems,?_sprintf+4
   595   0016BA  5028               	movf	(?_sprintf+4)^0,w,c
   596   0016BC  A4D8               	btfss	status,2,c
   597   0016BE  0E10               	movlw	high __smallconst
   598   0016C0  6E29               	movwf	(?_sprintf+5)^0,c
   599   0016C2  ECC3  F00B         	call	_sprintf	;wreg free
   600   0016C6                     
   601                           ;main.c: 30:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
   602   0016C6  0E71               	movlw	low main@menuItem2
   603   0016C8  6E24               	movwf	sprintf@s^0,c
   604   0016CA  0E62               	movlw	low STR_9
   605   0016CC  6E25               	movwf	sprintf@fmt^0,c
   606   0016CE  0E00               	movlw	0
   607   0016D0  6E27               	movwf	(?_sprintf+3)^0,c
   608   0016D2  0E10               	movlw	16
   609   0016D4  6E26               	movwf	(?_sprintf+2)^0,c
   610   0016D6  C083  F028         	movff	main@menuItems+1,?_sprintf+4
   611   0016DA  5028               	movf	(?_sprintf+4)^0,w,c
   612   0016DC  A4D8               	btfss	status,2,c
   613   0016DE  0E10               	movlw	high __smallconst
   614   0016E0  6E29               	movwf	(?_sprintf+5)^0,c
   615   0016E2  ECC3  F00B         	call	_sprintf	;wreg free
   616   0016E6                     
   617                           ;main.c: 31:     LCD_ShowString((char)1, menuItem1);
   618   0016E6  0E60               	movlw	low main@menuItem1
   619   0016E8  6E02               	movwf	LCD_ShowString@textData^0,c
   620   0016EA  0E01               	movlw	1
   621   0016EC  ECFA  F00A         	call	_LCD_ShowString
   622   0016F0                     
   623                           ;main.c: 32:     LCD_ShowString((char)2, menuItem2);
   624   0016F0  0E71               	movlw	low main@menuItem2
   625   0016F2  6E02               	movwf	LCD_ShowString@textData^0,c
   626   0016F4  0E02               	movlw	2
   627   0016F6  ECFA  F00A         	call	_LCD_ShowString
   628   0016FA                     l23:
   629   0016FA  EF7D  F00B         	goto	l23
   630   0016FE  EF00  F000         	goto	start
   631   001702                     __end_of_main:
   632                           	callstack 0
   633                           
   634 ;; *************** function _sprintf *****************
   635 ;; Defined at:
   636 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  s               1   35[COMRAM] PTR unsigned char 
   639 ;;		 -> main@menuItem2(17), main@menuItem1(17), 
   640 ;;  fmt             1   36[COMRAM] PTR const unsigned char 
   641 ;;		 -> STR_10(5), STR_9(5), 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  f              12   42[COMRAM] struct _IO_FILE
   644 ;;  ret             2    0        int 
   645 ;;  ap              1   41[COMRAM] PTR void [1]
   646 ;;		 -> ?_printf(2), ?_sprintf(2), 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  2   35[COMRAM] int 
   649 ;; Registers used:
   650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   656 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;Total ram usage:       19 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 5
   663 ;; This function calls:
   664 ;;		_vfprintf
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text1
   671   001786                     __ptext1:
   672                           	callstack 0
   673   001786                     _sprintf:
   674                           	callstack 25
   675   001786  0E26               	movlw	low (?_sprintf+2)
   676   001788  6E2A               	movwf	sprintf@ap^0,c
   677   00178A  C024  F02B         	movff	sprintf@s,sprintf@f
   678   00178E  0E00               	movlw	0
   679   001790  6E2F               	movwf	(sprintf@f+4)^0,c
   680   001792  0E00               	movlw	0
   681   001794  6E2E               	movwf	(sprintf@f+3)^0,c
   682   001796  0E00               	movlw	0
   683   001798  6E36               	movwf	(sprintf@f+11)^0,c
   684   00179A  0E00               	movlw	0
   685   00179C  6E35               	movwf	(sprintf@f+10)^0,c
   686   00179E  0E2B               	movlw	low sprintf@f
   687   0017A0  6E1F               	movwf	vfprintf@fp^0,c
   688   0017A2  6A20               	clrf	(vfprintf@fp+1)^0,c
   689   0017A4  C025  F021         	movff	sprintf@fmt,vfprintf@fmt
   690   0017A8  0E2A               	movlw	low sprintf@ap
   691   0017AA  6E22               	movwf	vfprintf@ap^0,c
   692   0017AC  ECA2  F00B         	call	_vfprintf	;wreg free
   693   0017B0  5024               	movf	sprintf@s^0,w,c
   694   0017B2  242E               	addwf	(sprintf@f+3)^0,w,c
   695   0017B4  6ED9               	movwf	fsr2l,c
   696   0017B6  6ADA               	clrf	fsr2h,c
   697   0017B8  6ADF               	clrf	indf2,c
   698   0017BA  0012               	return		;funcret
   699   0017BC                     __end_of_sprintf:
   700                           	callstack 0
   701                           
   702 ;; *************** function _vfprintf *****************
   703 ;; Defined at:
   704 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
   707 ;;		 -> NULL(0), sprintf@f(12), 
   708 ;;  fmt             1   32[COMRAM] PTR const unsigned char 
   709 ;;		 -> STR_11(5), STR_10(5), STR_9(5), 
   710 ;;  ap              1   33[COMRAM] PTR PTR void 
   711 ;;		 -> printf@ap(1), sprintf@ap(1), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  cfmt            1   34[COMRAM] PTR unsigned char 
   714 ;;		 -> STR_11(5), STR_10(5), STR_9(5), 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  2   30[COMRAM] int 
   717 ;; Registers used:
   718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;Total ram usage:        5 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 4
   731 ;; This function calls:
   732 ;;		_vfpfcnvrt
   733 ;; This function is called by:
   734 ;;		_sprintf
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text2
   739   001744                     __ptext2:
   740                           	callstack 0
   741   001744                     _vfprintf:
   742                           	callstack 25
   743   001744                     
   744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   745   001744  C021  F023         	movff	vfprintf@fmt,vfprintf@cfmt
   746                           
   747                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   748   001748  EFB0  F00B         	goto	l1482
   749   00174C                     l1480:
   750                           
   751                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   752   00174C  C01F  F019         	movff	vfprintf@fp,vfpfcnvrt@fp
   753   001750  C020  F01A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   754   001754  0E23               	movlw	low vfprintf@cfmt
   755   001756  6E1B               	movwf	vfpfcnvrt@fmt^0,c
   756   001758  C022  F01C         	movff	vfprintf@ap,vfpfcnvrt@ap
   757   00175C  EC3A  F008         	call	_vfpfcnvrt	;wreg free
   758   001760                     l1482:
   759                           
   760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   761   001760  C023  FFF6         	movff	vfprintf@cfmt,tblptrl
   762   001764                     	if	1	;There is more than 1 active tblptr byte
   763   001764  0E10               	movlw	high __smallconst
   764   001766  6EF7               	movwf	tblptrh,c
   765   001768                     	endif
   766   001768                     	if	0	;tblptru may be non-zero
   767   001768                     	endif
   768   001768                     	if	0	;tblptru may be non-zero
   769   001768                     	endif
   770   001768  0008               	tblrd		*
   771   00176A  50F5               	movf	tablat,w,c
   772   00176C  0900               	iorlw	0
   773   00176E  A4D8               	btfss	status,2,c
   774   001770  EFBC  F00B         	goto	u741
   775   001774  EFBE  F00B         	goto	u740
   776   001778                     u741:
   777   001778  EFA6  F00B         	goto	l1480
   778   00177C                     u740:
   779   00177C                     
   780                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   781   00177C  0E00               	movlw	0
   782   00177E  6E20               	movwf	(?_vfprintf+1)^0,c
   783   001780  0E00               	movlw	0
   784   001782  6E1F               	movwf	?_vfprintf^0,c
   785   001784  0012               	return		;funcret
   786   001786                     __end_of_vfprintf:
   787                           	callstack 0
   788                           
   789 ;; *************** function _vfpfcnvrt *****************
   790 ;; Defined at:
   791 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
   794 ;;		 -> NULL(0), sprintf@f(12), 
   795 ;;  fmt             1   26[COMRAM] PTR PTR unsigned char 
   796 ;;		 -> vfprintf@cfmt(1), 
   797 ;;  ap              1   27[COMRAM] PTR PTR void 
   798 ;;		 -> printf@ap(1), sprintf@ap(1), 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  cp              3    0        PTR unsigned char 
   801 ;;  done            1   29[COMRAM] _Bool 
   802 ;;  c               1    0        unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;Total ram usage:        6 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 3
   819 ;; This function calls:
   820 ;;		_fputc
   821 ;;		_read_prec_or_width
   822 ;;		_stoa
   823 ;; This function is called by:
   824 ;;		_vfprintf
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text3
   829   001074                     __ptext3:
   830                           	callstack 0
   831   001074                     _vfpfcnvrt:
   832                           	callstack 25
   833   001074                     
   834                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   835   001074  501B               	movf	vfpfcnvrt@fmt^0,w,c
   836   001076  6ED9               	movwf	fsr2l,c
   837   001078  6ADA               	clrf	fsr2h,c
   838   00107A  CFDF FFF6          	movff	indf2,tblptrl
   839   00107E                     	if	1	;There is more than 1 active tblptr byte
   840   00107E  0E10               	movlw	high __smallconst
   841   001080  6EF7               	movwf	tblptrh,c
   842   001082                     	endif
   843   001082                     	if	0	;tblptru may be non-zero
   844   001082                     	endif
   845   001082                     	if	0	;tblptru may be non-zero
   846   001082                     	endif
   847   001082  0008               	tblrd		*
   848   001084  50F5               	movf	tablat,w,c
   849   001086  0A25               	xorlw	37
   850   001088  A4D8               	btfss	status,2,c
   851   00108A  EF49  F008         	goto	u641
   852   00108E  EF4B  F008         	goto	u640
   853   001092                     u641:
   854   001092  EF12  F009         	goto	l1470
   855   001096                     u640:
   856   001096                     
   857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   858   001096  501B               	movf	vfpfcnvrt@fmt^0,w,c
   859   001098  6ED9               	movwf	fsr2l,c
   860   00109A  6ADA               	clrf	fsr2h,c
   861   00109C  2ADF               	incf	indf2,f,c
   862   00109E                     
   863                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   864   00109E  0E00               	movlw	0
   865   0010A0  6E40               	movwf	(_width+1)^0,c
   866   0010A2  0E00               	movlw	0
   867   0010A4  6E3F               	movwf	_width^0,c
   868   0010A6  C03F  F043         	movff	_width,_flags
   869   0010AA                     
   870                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   871   0010AA  6841               	setf	_prec^0,c
   872   0010AC  6842               	setf	(_prec+1)^0,c
   873   0010AE                     
   874                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
   875   0010AE  0E00               	movlw	0
   876   0010B0  6E1E               	movwf	vfpfcnvrt@done^0,c
   877                           
   878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
   879   0010B2  EF75  F008         	goto	l1434
   880   0010B6                     l1424:
   881                           
   882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
   883   0010B6  8043               	bsf	_flags^0,0,c
   884   0010B8                     
   885                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
   886   0010B8  501B               	movf	vfpfcnvrt@fmt^0,w,c
   887   0010BA  6ED9               	movwf	fsr2l,c
   888   0010BC  6ADA               	clrf	fsr2h,c
   889   0010BE  2ADF               	incf	indf2,f,c
   890                           
   891                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
   892   0010C0  EF75  F008         	goto	l1434
   893   0010C4                     l1428:
   894                           
   895                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
   896   0010C4  0E01               	movlw	1
   897   0010C6  6E1E               	movwf	vfpfcnvrt@done^0,c
   898                           
   899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
   900   0010C8  EF75  F008         	goto	l1434
   901   0010CC                     l1432:
   902   0010CC  501B               	movf	vfpfcnvrt@fmt^0,w,c
   903   0010CE  6ED9               	movwf	fsr2l,c
   904   0010D0  6ADA               	clrf	fsr2h,c
   905   0010D2  CFDF FFF6          	movff	indf2,tblptrl
   906   0010D6                     	if	1	;There is more than 1 active tblptr byte
   907   0010D6  0E10               	movlw	high __smallconst
   908   0010D8  6EF7               	movwf	tblptrh,c
   909   0010DA                     	endif
   910   0010DA                     	if	0	;tblptru may be non-zero
   911   0010DA                     	endif
   912   0010DA                     	if	0	;tblptru may be non-zero
   913   0010DA                     	endif
   914   0010DA  0008               	tblrd		*
   915   0010DC  50F5               	movf	tablat,w,c
   916                           
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 1, Range of values is 45 to 45
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ;	Chosen strategy is simple_byte
   923   0010DE  0A2D               	xorlw	45	; case 45
   924   0010E0  B4D8               	btfsc	status,2,c
   925   0010E2  EF5B  F008         	goto	l1424
   926   0010E6  EF62  F008         	goto	l1428
   927   0010EA                     l1434:
   928                           
   929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
   930   0010EA  501E               	movf	vfpfcnvrt@done^0,w,c
   931   0010EC  B4D8               	btfsc	status,2,c
   932   0010EE  EF7B  F008         	goto	u651
   933   0010F2  EF7D  F008         	goto	u650
   934   0010F6                     u651:
   935   0010F6  EF66  F008         	goto	l1432
   936   0010FA                     u650:
   937   0010FA                     
   938                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
   939   0010FA  C01B  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
   940   0010FE  C01C  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
   941   001102  ECA7  F00A         	call	_read_prec_or_width	;wreg free
   942   001106  C007  F03F         	movff	?_read_prec_or_width,_width
   943   00110A  C008  F040         	movff	?_read_prec_or_width+1,_width+1
   944   00110E                     
   945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
   946   00110E  BE40               	btfsc	(_width+1)^0,7,c
   947   001110  EF8E  F008         	goto	u660
   948   001114  EF8C  F008         	goto	u661
   949   001118                     u661:
   950   001118  EF93  F008         	goto	l1442
   951   00111C                     u660:
   952   00111C                     
   953                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
   954   00111C  8043               	bsf	_flags^0,0,c
   955                           
   956                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
   957   00111E  6C3F               	negf	_width^0,c
   958   001120  1E40               	comf	(_width+1)^0,f,c
   959   001122  B0D8               	btfsc	status,0,c
   960   001124  2A40               	incf	(_width+1)^0,f,c
   961   001126                     l1442:
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
   964   001126  0E00               	movlw	0
   965   001128  6E1E               	movwf	vfpfcnvrt@done^0,c
   966   00112A                     
   967                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
   968   00112A  501B               	movf	vfpfcnvrt@fmt^0,w,c
   969   00112C  6ED9               	movwf	fsr2l,c
   970   00112E  6ADA               	clrf	fsr2h,c
   971   001130  CFDF FFF6          	movff	indf2,tblptrl
   972   001134                     	if	1	;There is more than 1 active tblptr byte
   973   001134  0E10               	movlw	high __smallconst
   974   001136  6EF7               	movwf	tblptrh,c
   975   001138                     	endif
   976   001138                     	if	0	;tblptru may be non-zero
   977   001138                     	endif
   978   001138                     	if	0	;tblptru may be non-zero
   979   001138                     	endif
   980   001138  0008               	tblrd		*
   981   00113A  50F5               	movf	tablat,w,c
   982   00113C  0A73               	xorlw	115
   983   00113E  A4D8               	btfss	status,2,c
   984   001140  EFA4  F008         	goto	u671
   985   001144  EFA6  F008         	goto	u670
   986   001148                     u671:
   987   001148  EFAE  F008         	goto	l1450
   988   00114C                     u670:
   989   00114C                     
   990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
   991   00114C  501B               	movf	vfpfcnvrt@fmt^0,w,c
   992   00114E  6ED9               	movwf	fsr2l,c
   993   001150  6ADA               	clrf	fsr2h,c
   994   001152  2ADF               	incf	indf2,f,c
   995   001154                     l1448:
   996                           
   997                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
   998   001154  0E01               	movlw	1
   999   001156  6E1E               	movwf	vfpfcnvrt@done^0,c
  1000                           
  1001                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  1002   001158  EFF0  F008         	goto	l1460
  1003   00115C                     l1450:
  1004   00115C  501B               	movf	vfpfcnvrt@fmt^0,w,c
  1005   00115E  6ED9               	movwf	fsr2l,c
  1006   001160  6ADA               	clrf	fsr2h,c
  1007   001162  CFDF FFF6          	movff	indf2,tblptrl
  1008   001166                     	if	1	;There is more than 1 active tblptr byte
  1009   001166  0E10               	movlw	high __smallconst
  1010   001168  6EF7               	movwf	tblptrh,c
  1011   00116A                     	endif
  1012   00116A                     	if	0	;tblptru may be non-zero
  1013   00116A                     	endif
  1014   00116A                     	if	0	;tblptru may be non-zero
  1015   00116A                     	endif
  1016   00116A  0008               	tblrd		*
  1017   00116C  50F5               	movf	tablat,w,c
  1018   00116E  0A6C               	xorlw	108
  1019   001170  A4D8               	btfss	status,2,c
  1020   001172  EFBD  F008         	goto	u681
  1021   001176  EFBF  F008         	goto	u680
  1022   00117A                     u681:
  1023   00117A  EFF0  F008         	goto	l1460
  1024   00117E                     u680:
  1025   00117E  501B               	movf	vfpfcnvrt@fmt^0,w,c
  1026   001180  6ED9               	movwf	fsr2l,c
  1027   001182  6ADA               	clrf	fsr2h,c
  1028   001184  50DF               	movf	indf2,w,c
  1029   001186  6E1D               	movwf	??_vfpfcnvrt^0,c
  1030   001188  0E01               	movlw	1
  1031   00118A  261D               	addwf	??_vfpfcnvrt^0,f,c
  1032   00118C  C01D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1033   001190                     	if	1	;There is more than 1 active tblptr byte
  1034   001190  0E10               	movlw	high __smallconst
  1035   001192  6EF7               	movwf	tblptrh,c
  1036   001194                     	endif
  1037   001194                     	if	0	;tblptru may be non-zero
  1038   001194                     	endif
  1039   001194                     	if	0	;tblptru may be non-zero
  1040   001194                     	endif
  1041   001194  0008               	tblrd		*
  1042   001196  50F5               	movf	tablat,w,c
  1043   001198  0A6C               	xorlw	108
  1044   00119A  A4D8               	btfss	status,2,c
  1045   00119C  EFD2  F008         	goto	u691
  1046   0011A0  EFD4  F008         	goto	u690
  1047   0011A4                     u691:
  1048   0011A4  EFF0  F008         	goto	l1460
  1049   0011A8                     u690:
  1050   0011A8  501B               	movf	vfpfcnvrt@fmt^0,w,c
  1051   0011AA  6ED9               	movwf	fsr2l,c
  1052   0011AC  6ADA               	clrf	fsr2h,c
  1053   0011AE  50DF               	movf	indf2,w,c
  1054   0011B0  6E1D               	movwf	??_vfpfcnvrt^0,c
  1055   0011B2  0E02               	movlw	2
  1056   0011B4  261D               	addwf	??_vfpfcnvrt^0,f,c
  1057   0011B6  C01D  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1058   0011BA                     	if	1	;There is more than 1 active tblptr byte
  1059   0011BA  0E10               	movlw	high __smallconst
  1060   0011BC  6EF7               	movwf	tblptrh,c
  1061   0011BE                     	endif
  1062   0011BE                     	if	0	;tblptru may be non-zero
  1063   0011BE                     	endif
  1064   0011BE                     	if	0	;tblptru may be non-zero
  1065   0011BE                     	endif
  1066   0011BE  0008               	tblrd		*
  1067   0011C0  50F5               	movf	tablat,w,c
  1068   0011C2  0A73               	xorlw	115
  1069   0011C4  A4D8               	btfss	status,2,c
  1070   0011C6  EFE7  F008         	goto	u701
  1071   0011CA  EFE9  F008         	goto	u700
  1072   0011CE                     u701:
  1073   0011CE  EFF0  F008         	goto	l1460
  1074   0011D2                     u700:
  1075   0011D2                     
  1076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  1077   0011D2  501B               	movf	vfpfcnvrt@fmt^0,w,c
  1078   0011D4  6ED9               	movwf	fsr2l,c
  1079   0011D6  6ADA               	clrf	fsr2h,c
  1080   0011D8  0E03               	movlw	3
  1081   0011DA  26DF               	addwf	indf2,f,c
  1082   0011DC  EFAA  F008         	goto	l1448
  1083   0011E0                     l1460:
  1084                           
  1085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  1086   0011E0  501E               	movf	vfpfcnvrt@done^0,w,c
  1087   0011E2  B4D8               	btfsc	status,2,c
  1088   0011E4  EFF6  F008         	goto	u711
  1089   0011E8  EFF8  F008         	goto	u710
  1090   0011EC                     u711:
  1091   0011EC  EF0C  F009         	goto	l1466
  1092   0011F0                     u710:
  1093   0011F0                     
  1094                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  1095   0011F0  C019  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  1096   0011F4  C01A  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1097   0011F8  501C               	movf	vfpfcnvrt@ap^0,w,c
  1098   0011FA  6ED9               	movwf	fsr2l,c
  1099   0011FC  6ADA               	clrf	fsr2h,c
  1100   0011FE  0E02               	movlw	2
  1101   001200  26DF               	addwf	indf2,f,c
  1102   001202  5CDF               	subwf	indf2,w,c
  1103   001204  6ED9               	movwf	fsr2l,c
  1104   001206  6ADA               	clrf	fsr2h,c
  1105   001208  CFDE F00D          	movff	postinc2,stoa@s
  1106   00120C  CFDE F00E          	movff	postinc2,stoa@s+1
  1107   001210  EC26  F009         	call	_stoa	;wreg free
  1108   001214  EF25  F009         	goto	l926
  1109   001218                     l1466:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1112   001218  501B               	movf	vfpfcnvrt@fmt^0,w,c
  1113   00121A  6ED9               	movwf	fsr2l,c
  1114   00121C  6ADA               	clrf	fsr2h,c
  1115   00121E  2ADF               	incf	indf2,f,c
  1116   001220  EF25  F009         	goto	l926
  1117   001224                     l1470:
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1120   001224  501B               	movf	vfpfcnvrt@fmt^0,w,c
  1121   001226  6ED9               	movwf	fsr2l,c
  1122   001228  6ADA               	clrf	fsr2h,c
  1123   00122A  CFDF FFF6          	movff	indf2,tblptrl
  1124   00122E                     	if	1	;There is more than 1 active tblptr byte
  1125   00122E  0E10               	movlw	high __smallconst
  1126   001230  6EF7               	movwf	tblptrh,c
  1127   001232                     	endif
  1128   001232                     	if	0	;tblptru may be non-zero
  1129   001232                     	endif
  1130   001232                     	if	0	;tblptru may be non-zero
  1131   001232                     	endif
  1132   001232  0008               	tblrd		*
  1133   001234  50F5               	movf	tablat,w,c
  1134   001236  6E02               	movwf	fputc@c^0,c
  1135   001238  6A03               	clrf	(fputc@c+1)^0,c
  1136   00123A  C019  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1137   00123E  C01A  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1138   001242  EC4A  F00A         	call	_fputc	;wreg free
  1139   001246  EF0C  F009         	goto	l1466
  1140   00124A                     l926:
  1141   00124A  0012               	return		;funcret
  1142   00124C                     __end_of_vfpfcnvrt:
  1143                           	callstack 0
  1144                           
  1145 ;; *************** function _stoa *****************
  1146 ;; Defined at:
  1147 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  1150 ;;		 -> NULL(0), sprintf@f(12), 
  1151 ;;  s               2   12[COMRAM] PTR unsigned char 
  1152 ;;		 -> ?_printf(2), ?_sprintf(2), STR_8(1), STR_7(6), 
  1153 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(4), 
  1154 ;;		 -> STR_2(5), STR_1(5), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  l               2   22[COMRAM] int 
  1157 ;;  cp              2   20[COMRAM] PTR unsigned char 
  1158 ;;		 -> ?_printf(2), STR_12(7), ?_sprintf(2), STR_8(1), 
  1159 ;;		 -> STR_7(6), STR_6(5), STR_5(4), STR_4(4), 
  1160 ;;		 -> STR_3(4), STR_2(5), STR_1(5), 
  1161 ;;  w               2   18[COMRAM] int 
  1162 ;;  p               2   16[COMRAM] int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;Total ram usage:       14 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 2
  1179 ;; This function calls:
  1180 ;;		_fputc
  1181 ;; This function is called by:
  1182 ;;		_vfpfcnvrt
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text4
  1187   00124C                     __ptext4:
  1188                           	callstack 0
  1189   00124C                     _stoa:
  1190                           	callstack 25
  1191   00124C                     
  1192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  1193   00124C  C00D  F015         	movff	stoa@s,stoa@cp
  1194   001250  C00E  F016         	movff	stoa@s+1,stoa@cp+1
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  1197   001254  5015               	movf	stoa@cp^0,w,c
  1198   001256  1016               	iorwf	(stoa@cp+1)^0,w,c
  1199   001258  A4D8               	btfss	status,2,c
  1200   00125A  EF31  F009         	goto	u531
  1201   00125E  EF33  F009         	goto	u530
  1202   001262                     u531:
  1203   001262  EF39  F009         	goto	l1372
  1204   001266                     u530:
  1205   001266                     
  1206                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  1207   001266  0E41               	movlw	low STR_12
  1208   001268  6E15               	movwf	stoa@cp^0,c
  1209   00126A  5015               	movf	stoa@cp^0,w,c
  1210   00126C  A4D8               	btfss	status,2,c
  1211   00126E  0E10               	movlw	high __smallconst
  1212   001270  6E16               	movwf	(stoa@cp+1)^0,c
  1213   001272                     l1372:
  1214                           
  1215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  1216   001272  0E00               	movlw	0
  1217   001274  6E18               	movwf	(stoa@l+1)^0,c
  1218   001276  0E00               	movlw	0
  1219   001278  6E17               	movwf	stoa@l^0,c
  1220   00127A  EF41  F009         	goto	l1376
  1221   00127E                     l1374:
  1222   00127E  4A17               	infsnz	stoa@l^0,f,c
  1223   001280  2A18               	incf	(stoa@l+1)^0,f,c
  1224   001282                     l1376:
  1225   001282  5017               	movf	stoa@l^0,w,c
  1226   001284  2415               	addwf	stoa@cp^0,w,c
  1227   001286  6E0F               	movwf	??_stoa^0,c
  1228   001288  5018               	movf	(stoa@l+1)^0,w,c
  1229   00128A  2016               	addwfc	(stoa@cp+1)^0,w,c
  1230   00128C  6E10               	movwf	(??_stoa+1)^0,c
  1231   00128E  C00F  FFF6         	movff	??_stoa,tblptrl
  1232   001292  C010  FFF7         	movff	??_stoa+1,tblptrh
  1233   001296  0E00               	movlw	low (__smallconst shr (0+16))
  1234   001298  6EF8               	movwf	tblptru,c
  1235   00129A  0E0F               	movlw	(high __ramtop+-1)
  1236   00129C  64F7               	cpfsgt	tblptrh,c
  1237   00129E  D003               	bra	u547
  1238   0012A0  0008               	tblrd		*
  1239   0012A2  50F5               	movf	tablat,w,c
  1240   0012A4  D005               	bra	u540
  1241   0012A6                     u547:
  1242   0012A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1243   0012AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1244   0012AE  50EF               	movf	indf0,w,c
  1245   0012B0                     u540:
  1246   0012B0  0900               	iorlw	0
  1247   0012B2  A4D8               	btfss	status,2,c
  1248   0012B4  EF5E  F009         	goto	u551
  1249   0012B8  EF60  F009         	goto	u550
  1250   0012BC                     u551:
  1251   0012BC  EF3F  F009         	goto	l1374
  1252   0012C0                     u550:
  1253   0012C0                     
  1254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  1255   0012C0  C017  F011         	movff	stoa@l,stoa@p
  1256   0012C4  C018  F012         	movff	stoa@l+1,stoa@p+1
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  1259   0012C8  C03F  F013         	movff	_width,stoa@w
  1260   0012CC  C040  F014         	movff	_width+1,stoa@w+1
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  1263   0012D0  B043               	btfsc	_flags^0,0,c
  1264   0012D2  EF6D  F009         	goto	u561
  1265   0012D6  EF6F  F009         	goto	u560
  1266   0012DA                     u561:
  1267   0012DA  EFAB  F009         	goto	l1390
  1268   0012DE                     u560:
  1269   0012DE  EF7D  F009         	goto	l1384
  1270   0012E2                     l1380:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  1273   0012E2  0E00               	movlw	0
  1274   0012E4  6E03               	movwf	(fputc@c+1)^0,c
  1275   0012E6  0E20               	movlw	32
  1276   0012E8  6E02               	movwf	fputc@c^0,c
  1277   0012EA  C00B  F004         	movff	stoa@fp,fputc@fp
  1278   0012EE  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1279   0012F2  EC4A  F00A         	call	_fputc	;wreg free
  1280   0012F6                     
  1281                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  1282   0012F6  4A17               	infsnz	stoa@l^0,f,c
  1283   0012F8  2A18               	incf	(stoa@l+1)^0,f,c
  1284   0012FA                     l1384:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  1287   0012FA  5013               	movf	stoa@w^0,w,c
  1288   0012FC  5C17               	subwf	stoa@l^0,w,c
  1289   0012FE  5018               	movf	(stoa@l+1)^0,w,c
  1290   001300  0A80               	xorlw	128
  1291   001302  6E0F               	movwf	??_stoa^0,c
  1292   001304  5014               	movf	(stoa@w+1)^0,w,c
  1293   001306  0A80               	xorlw	128
  1294   001308  580F               	subwfb	??_stoa^0,w,c
  1295   00130A  A0D8               	btfss	status,0,c
  1296   00130C  EF8A  F009         	goto	u571
  1297   001310  EF8C  F009         	goto	u570
  1298   001314                     u571:
  1299   001314  EF71  F009         	goto	l1380
  1300   001318                     u570:
  1301   001318  EFAB  F009         	goto	l1390
  1302   00131C                     l1386:
  1303                           
  1304                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  1305   00131C  C015  FFF6         	movff	stoa@cp,tblptrl
  1306   001320  C016  FFF7         	movff	stoa@cp+1,tblptrh
  1307   001324  0E00               	movlw	low (__smallconst shr (0+16))
  1308   001326  6EF8               	movwf	tblptru,c
  1309   001328  0E0F               	movlw	(high __ramtop+-1)
  1310   00132A  64F7               	cpfsgt	tblptrh,c
  1311   00132C  D003               	bra	u587
  1312   00132E  0008               	tblrd		*
  1313   001330  50F5               	movf	tablat,w,c
  1314   001332  D005               	bra	u580
  1315   001334                     u587:
  1316   001334  CFF6 FFE9          	movff	tblptrl,fsr0l
  1317   001338  CFF7 FFEA          	movff	tblptrh,fsr0h
  1318   00133C  50EF               	movf	indf0,w,c
  1319   00133E                     u580:
  1320   00133E  6E0F               	movwf	??_stoa^0,c
  1321   001340  500F               	movf	??_stoa^0,w,c
  1322   001342  6E02               	movwf	fputc@c^0,c
  1323   001344  6A03               	clrf	(fputc@c+1)^0,c
  1324   001346  C00B  F004         	movff	stoa@fp,fputc@fp
  1325   00134A  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1326   00134E  EC4A  F00A         	call	_fputc	;wreg free
  1327   001352                     
  1328                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  1329   001352  4A15               	infsnz	stoa@cp^0,f,c
  1330   001354  2A16               	incf	(stoa@cp+1)^0,f,c
  1331   001356                     l1390:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  1334   001356  0611               	decf	stoa@p^0,f,c
  1335   001358  A0D8               	btfss	status,0,c
  1336   00135A  0612               	decf	(stoa@p+1)^0,f,c
  1337   00135C  2811               	incf	stoa@p^0,w,c
  1338   00135E  E106               	bnz	u591
  1339   001360  2812               	incf	(stoa@p+1)^0,w,c
  1340   001362  A4D8               	btfss	status,2,c
  1341   001364  EFB6  F009         	goto	u591
  1342   001368  EFB8  F009         	goto	u590
  1343   00136C                     u591:
  1344   00136C  EF8E  F009         	goto	l1386
  1345   001370                     u590:
  1346   001370                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  1348   001370  A043               	btfss	_flags^0,0,c
  1349   001372  EFBD  F009         	goto	u601
  1350   001376  EFBF  F009         	goto	u600
  1351   00137A                     u601:
  1352   00137A  EFDC  F009         	goto	l902
  1353   00137E                     u600:
  1354   00137E  EFCD  F009         	goto	l1398
  1355   001382                     l1394:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  1358   001382  0E00               	movlw	0
  1359   001384  6E03               	movwf	(fputc@c+1)^0,c
  1360   001386  0E20               	movlw	32
  1361   001388  6E02               	movwf	fputc@c^0,c
  1362   00138A  C00B  F004         	movff	stoa@fp,fputc@fp
  1363   00138E  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  1364   001392  EC4A  F00A         	call	_fputc	;wreg free
  1365   001396                     
  1366                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  1367   001396  4A17               	infsnz	stoa@l^0,f,c
  1368   001398  2A18               	incf	(stoa@l+1)^0,f,c
  1369   00139A                     l1398:
  1370                           
  1371                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  1372   00139A  5013               	movf	stoa@w^0,w,c
  1373   00139C  5C17               	subwf	stoa@l^0,w,c
  1374   00139E  5018               	movf	(stoa@l+1)^0,w,c
  1375   0013A0  0A80               	xorlw	128
  1376   0013A2  6E0F               	movwf	??_stoa^0,c
  1377   0013A4  5014               	movf	(stoa@w+1)^0,w,c
  1378   0013A6  0A80               	xorlw	128
  1379   0013A8  580F               	subwfb	??_stoa^0,w,c
  1380   0013AA  A0D8               	btfss	status,0,c
  1381   0013AC  EFDA  F009         	goto	u611
  1382   0013B0  EFDC  F009         	goto	u610
  1383   0013B4                     u611:
  1384   0013B4  EFC1  F009         	goto	l1394
  1385   0013B8                     u610:
  1386   0013B8                     l902:
  1387   0013B8  0012               	return		;funcret
  1388   0013BA                     __end_of_stoa:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _fputc *****************
  1392 ;; Defined at:
  1393 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  c               2    1[COMRAM] int 
  1396 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1397 ;;		 -> NULL(0), sprintf@f(12), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2    1[COMRAM] int 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;Total ram usage:        9 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 1
  1416 ;; This function calls:
  1417 ;;		_putch
  1418 ;; This function is called by:
  1419 ;;		_stoa
  1420 ;;		_vfpfcnvrt
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text5
  1425   001494                     __ptext5:
  1426                           	callstack 0
  1427   001494                     _fputc:
  1428                           	callstack 25
  1429   001494  5004               	movf	fputc@fp^0,w,c
  1430   001496  1005               	iorwf	(fputc@fp+1)^0,w,c
  1431   001498  B4D8               	btfsc	status,2,c
  1432   00149A  EF51  F00A         	goto	u491
  1433   00149E  EF53  F00A         	goto	u490
  1434   0014A2                     u491:
  1435   0014A2  EF5C  F00A         	goto	l1358
  1436   0014A6                     u490:
  1437   0014A6  5004               	movf	fputc@fp^0,w,c
  1438   0014A8  1005               	iorwf	(fputc@fp+1)^0,w,c
  1439   0014AA  A4D8               	btfss	status,2,c
  1440   0014AC  EF5A  F00A         	goto	u501
  1441   0014B0  EF5C  F00A         	goto	u500
  1442   0014B4                     u501:
  1443   0014B4  EF61  F00A         	goto	l1360
  1444   0014B8                     u500:
  1445   0014B8                     l1358:
  1446   0014B8  5002               	movf	fputc@c^0,w,c
  1447   0014BA  EC04  F00C         	call	_putch
  1448   0014BE  EFA6  F00A         	goto	l944
  1449   0014C2                     l1360:
  1450   0014C2  EE20 F00A          	lfsr	2,10
  1451   0014C6  5004               	movf	fputc@fp^0,w,c
  1452   0014C8  26D9               	addwf	fsr2l,f,c
  1453   0014CA  5005               	movf	(fputc@fp+1)^0,w,c
  1454   0014CC  22DA               	addwfc	fsr2h,f,c
  1455   0014CE  50DE               	movf	postinc2,w,c
  1456   0014D0  10DE               	iorwf	postinc2,w,c
  1457   0014D2  B4D8               	btfsc	status,2,c
  1458   0014D4  EF6E  F00A         	goto	u511
  1459   0014D8  EF70  F00A         	goto	u510
  1460   0014DC                     u511:
  1461   0014DC  EF8B  F00A         	goto	l1364
  1462   0014E0                     u510:
  1463   0014E0  EE20 F00A          	lfsr	2,10
  1464   0014E4  5004               	movf	fputc@fp^0,w,c
  1465   0014E6  26D9               	addwf	fsr2l,f,c
  1466   0014E8  5005               	movf	(fputc@fp+1)^0,w,c
  1467   0014EA  22DA               	addwfc	fsr2h,f,c
  1468   0014EC  EE10 F003          	lfsr	1,3
  1469   0014F0  5004               	movf	fputc@fp^0,w,c
  1470   0014F2  26E1               	addwf	fsr1l,f,c
  1471   0014F4  5005               	movf	(fputc@fp+1)^0,w,c
  1472   0014F6  22E2               	addwfc	fsr1h,f,c
  1473   0014F8  50DE               	movf	postinc2,w,c
  1474   0014FA  5CE6               	subwf	postinc1,w,c
  1475   0014FC  50E6               	movf	postinc1,w,c
  1476   0014FE  0A80               	xorlw	128
  1477   001500  6E0A               	movwf	(??_fputc+4)^0,c
  1478   001502  50DE               	movf	postinc2,w,c
  1479   001504  0A80               	xorlw	128
  1480   001506  580A               	subwfb	(??_fputc+4)^0,w,c
  1481   001508  B0D8               	btfsc	status,0,c
  1482   00150A  EF89  F00A         	goto	u521
  1483   00150E  EF8B  F00A         	goto	u520
  1484   001512                     u521:
  1485   001512  EFA6  F00A         	goto	l944
  1486   001516                     u520:
  1487   001516                     l1364:
  1488   001516  EE20 F003          	lfsr	2,3
  1489   00151A  5004               	movf	fputc@fp^0,w,c
  1490   00151C  26D9               	addwf	fsr2l,f,c
  1491   00151E  5005               	movf	(fputc@fp+1)^0,w,c
  1492   001520  22DA               	addwfc	fsr2h,f,c
  1493   001522  50DF               	movf	indf2,w,c
  1494   001524  6E06               	movwf	??_fputc^0,c
  1495   001526  C004  FFD9         	movff	fputc@fp,fsr2l
  1496   00152A  C005  FFDA         	movff	fputc@fp+1,fsr2h
  1497   00152E  50DF               	movf	indf2,w,c
  1498   001530  2406               	addwf	??_fputc^0,w,c
  1499   001532  6ED9               	movwf	fsr2l,c
  1500   001534  6ADA               	clrf	fsr2h,c
  1501   001536  C002  FFDF         	movff	fputc@c,indf2
  1502   00153A  EE20 F003          	lfsr	2,3
  1503   00153E  5004               	movf	fputc@fp^0,w,c
  1504   001540  26D9               	addwf	fsr2l,f,c
  1505   001542  5005               	movf	(fputc@fp+1)^0,w,c
  1506   001544  22DA               	addwfc	fsr2h,f,c
  1507   001546  2ADE               	incf	postinc2,f,c
  1508   001548  0E00               	movlw	0
  1509   00154A  22DD               	addwfc	postdec2,f,c
  1510   00154C                     l944:
  1511   00154C  0012               	return		;funcret
  1512   00154E                     __end_of_fputc:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _putch *****************
  1516 ;; Defined at:
  1517 ;;		line 11 in file "putch.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  data            1    wreg     unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  data            1    0[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        1 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_fputc
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text6
  1545   001808                     __ptext6:
  1546                           	callstack 0
  1547   001808                     _putch:
  1548                           	callstack 25
  1549                           
  1550                           ;incstack = 0
  1551                           ;putch@data stored from wreg
  1552   001808  6E01               	movwf	putch@data^0,c
  1553   00180A                     l176:
  1554   00180A  A89E               	btfss	3998,4,c	;volatile
  1555   00180C  EF0A  F00C         	goto	u481
  1556   001810  EF0C  F00C         	goto	u480
  1557   001814                     u481:
  1558   001814  EF05  F00C         	goto	l176
  1559   001818                     u480:
  1560   001818                     
  1561                           ;putch.c: 13:     TXREG1 = data;
  1562   001818  C001  FFAD         	movff	putch@data,4013	;volatile
  1563   00181C  0012               	return		;funcret
  1564   00181E                     __end_of_putch:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _read_prec_or_width *****************
  1568 ;; Defined at:
  1569 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1572 ;;		 -> vfprintf@cfmt(1), 
  1573 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1574 ;;		 -> printf@ap(1), sprintf@ap(1), 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  c               1    8[COMRAM] unsigned char 
  1577 ;;  n               2    9[COMRAM] int 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  2    6[COMRAM] int 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;Total ram usage:        5 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 1
  1594 ;; This function calls:
  1595 ;;		___wmul
  1596 ;; This function is called by:
  1597 ;;		_vfpfcnvrt
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text7
  1602   00154E                     __ptext7:
  1603                           	callstack 0
  1604   00154E                     _read_prec_or_width:
  1605                           	callstack 26
  1606   00154E                     
  1607                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1608   00154E  0E00               	movlw	0
  1609   001550  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1610   001552  0E00               	movlw	0
  1611   001554  6E0A               	movwf	read_prec_or_width@n^0,c
  1612   001556                     
  1613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1614   001556  5007               	movf	read_prec_or_width@fmt^0,w,c
  1615   001558  6ED9               	movwf	fsr2l,c
  1616   00155A  6ADA               	clrf	fsr2h,c
  1617   00155C  CFDF FFF6          	movff	indf2,tblptrl
  1618   001560                     	if	1	;There is more than 1 active tblptr byte
  1619   001560  0E10               	movlw	high __smallconst
  1620   001562  6EF7               	movwf	tblptrh,c
  1621   001564                     	endif
  1622   001564                     	if	0	;tblptru may be non-zero
  1623   001564                     	endif
  1624   001564                     	if	0	;tblptru may be non-zero
  1625   001564                     	endif
  1626   001564  0008               	tblrd		*
  1627   001566  50F5               	movf	tablat,w,c
  1628   001568  0A2A               	xorlw	42
  1629   00156A  A4D8               	btfss	status,2,c
  1630   00156C  EFBA  F00A         	goto	u621
  1631   001570  EFBC  F00A         	goto	u620
  1632   001574                     u621:
  1633   001574  EFE2  F00A         	goto	l1412
  1634   001578                     u620:
  1635   001578                     
  1636                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1637   001578  5007               	movf	read_prec_or_width@fmt^0,w,c
  1638   00157A  6ED9               	movwf	fsr2l,c
  1639   00157C  6ADA               	clrf	fsr2h,c
  1640   00157E  2ADF               	incf	indf2,f,c
  1641   001580                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1643   001580  5008               	movf	read_prec_or_width@ap^0,w,c
  1644   001582  6ED9               	movwf	fsr2l,c
  1645   001584  6ADA               	clrf	fsr2h,c
  1646   001586  0E02               	movlw	2
  1647   001588  26DF               	addwf	indf2,f,c
  1648   00158A  5CDF               	subwf	indf2,w,c
  1649   00158C  6ED9               	movwf	fsr2l,c
  1650   00158E  6ADA               	clrf	fsr2h,c
  1651   001590  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  1652   001594  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1655   001598  EFF5  F00A         	goto	l906
  1656   00159C                     l1408:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1659   00159C  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1660   0015A0  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1661   0015A4  0E00               	movlw	0
  1662   0015A6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1663   0015A8  0E0A               	movlw	10
  1664   0015AA  6E03               	movwf	___wmul@multiplicand^0,c
  1665   0015AC  ECDE  F00B         	call	___wmul	;wreg free
  1666   0015B0  5009               	movf	read_prec_or_width@c^0,w,c
  1667   0015B2  2401               	addwf	?___wmul^0,w,c
  1668   0015B4  6E0A               	movwf	read_prec_or_width@n^0,c
  1669   0015B6  0E00               	movlw	0
  1670   0015B8  2002               	addwfc	(?___wmul+1)^0,w,c
  1671   0015BA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  1672   0015BC                     
  1673                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1674   0015BC  5007               	movf	read_prec_or_width@fmt^0,w,c
  1675   0015BE  6ED9               	movwf	fsr2l,c
  1676   0015C0  6ADA               	clrf	fsr2h,c
  1677   0015C2  2ADF               	incf	indf2,f,c
  1678   0015C4                     l1412:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1681   0015C4  5007               	movf	read_prec_or_width@fmt^0,w,c
  1682   0015C6  6ED9               	movwf	fsr2l,c
  1683   0015C8  6ADA               	clrf	fsr2h,c
  1684   0015CA  CFDF FFF6          	movff	indf2,tblptrl
  1685   0015CE                     	if	1	;There is more than 1 active tblptr byte
  1686   0015CE  0E10               	movlw	high __smallconst
  1687   0015D0  6EF7               	movwf	tblptrh,c
  1688   0015D2                     	endif
  1689   0015D2                     	if	0	;tblptru may be non-zero
  1690   0015D2                     	endif
  1691   0015D2                     	if	0	;tblptru may be non-zero
  1692   0015D2                     	endif
  1693   0015D2  0008               	tblrd		*
  1694   0015D4  50F5               	movf	tablat,w,c
  1695   0015D6  0FD0               	addlw	208
  1696   0015D8  6E09               	movwf	read_prec_or_width@c^0,c
  1697   0015DA  0E09               	movlw	9
  1698   0015DC  6409               	cpfsgt	read_prec_or_width@c^0,c
  1699   0015DE  EFF3  F00A         	goto	u631
  1700   0015E2  EFF5  F00A         	goto	u630
  1701   0015E6                     u631:
  1702   0015E6  EFCE  F00A         	goto	l1408
  1703   0015EA                     u630:
  1704   0015EA                     l906:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1707   0015EA  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1708   0015EE  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1709   0015F2  0012               	return		;funcret
  1710   0015F4                     __end_of_read_prec_or_width:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function ___wmul *****************
  1714 ;; Defined at:
  1715 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  multiplier      2    0[COMRAM] unsigned int 
  1718 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  product         2    4[COMRAM] unsigned int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  2    0[COMRAM] unsigned int 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, prodl, prodh
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        6 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_read_prec_or_width
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text8
  1744   0017BC                     __ptext8:
  1745                           	callstack 0
  1746   0017BC                     ___wmul:
  1747                           	callstack 26
  1748   0017BC  5001               	movf	___wmul@multiplier^0,w,c
  1749   0017BE  0203               	mulwf	___wmul@multiplicand^0,c
  1750   0017C0  CFF3 F005          	movff	prodl,___wmul@product
  1751   0017C4  CFF4 F006          	movff	prodh,___wmul@product+1
  1752   0017C8  5001               	movf	___wmul@multiplier^0,w,c
  1753   0017CA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1754   0017CC  50F3               	movf	243,w,c
  1755   0017CE  2606               	addwf	(___wmul@product+1)^0,f,c
  1756   0017D0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1757   0017D2  0203               	mulwf	___wmul@multiplicand^0,c
  1758   0017D4  50F3               	movf	243,w,c
  1759   0017D6  2606               	addwf	(___wmul@product+1)^0,f,c
  1760   0017D8  C005  F001         	movff	___wmul@product,?___wmul
  1761   0017DC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1762   0017E0  0012               	return		;funcret
  1763   0017E2                     __end_of___wmul:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _LCD_ShowString *****************
  1767 ;; Defined at:
  1768 ;;		line 55 in file "lcd.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  lineNum         1    wreg     unsigned char 
  1771 ;;  textData        1    1[COMRAM] PTR unsigned char 
  1772 ;;		 -> main@menuItem2(17), main@menuItem1(17), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  lineNum         1    2[COMRAM] unsigned char 
  1775 ;;  i               1    3[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;Total ram usage:        3 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 1
  1792 ;; This function calls:
  1793 ;;		_LCD_Send
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text9
  1800   0015F4                     __ptext9:
  1801                           	callstack 0
  1802   0015F4                     _LCD_ShowString:
  1803                           	callstack 29
  1804                           
  1805                           ;incstack = 0
  1806                           ;LCD_ShowString@lineNum stored from wreg
  1807   0015F4  6E03               	movwf	LCD_ShowString@lineNum^0,c
  1808   0015F6                     
  1809                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
  1810   0015F6  806B               	bsf	107,0,c	;volatile
  1811   0015F8                     l62:
  1812   0015F8  B06B               	btfsc	107,0,c	;volatile
  1813   0015FA  EF01  F00B         	goto	u771
  1814   0015FE  EF03  F00B         	goto	u770
  1815   001602                     u771:
  1816   001602  EFFC  F00A         	goto	l62
  1817   001606                     u770:
  1818   001606                     
  1819                           ;lcd.c: 62:     SSP2IF = 0;
  1820   001606  9EA4               	bcf	4004,7,c	;volatile
  1821   001608                     
  1822                           ;lcd.c: 64:     LCD_Send(0x7c);
  1823   001608  0E7C               	movlw	124
  1824   00160A  ECF1  F00B         	call	_LCD_Send
  1825                           
  1826                           ;lcd.c: 66:     LCD_Send(0x80);
  1827   00160E  0E80               	movlw	128
  1828   001610  ECF1  F00B         	call	_LCD_Send
  1829   001614                     
  1830                           ;lcd.c: 68:     if(lineNum == 1){
  1831   001614  0403               	decf	LCD_ShowString@lineNum^0,w,c
  1832   001616  A4D8               	btfss	status,2,c
  1833   001618  EF10  F00B         	goto	u781
  1834   00161C  EF12  F00B         	goto	u780
  1835   001620                     u781:
  1836   001620  EF17  F00B         	goto	l1526
  1837   001624                     u780:
  1838   001624                     
  1839                           ;lcd.c: 69:         LCD_Send(0x80);
  1840   001624  0E80               	movlw	128
  1841   001626  ECF1  F00B         	call	_LCD_Send
  1842                           
  1843                           ;lcd.c: 70:     }
  1844   00162A  EF23  F00B         	goto	l66
  1845   00162E                     l1526:
  1846   00162E  0E02               	movlw	2
  1847   001630  1803               	xorwf	LCD_ShowString@lineNum^0,w,c
  1848   001632  A4D8               	btfss	status,2,c
  1849   001634  EF1E  F00B         	goto	u791
  1850   001638  EF20  F00B         	goto	u790
  1851   00163C                     u791:
  1852   00163C  EF23  F00B         	goto	l66
  1853   001640                     u790:
  1854   001640                     
  1855                           ;lcd.c: 72:         LCD_Send(0xC0);
  1856   001640  0EC0               	movlw	192
  1857   001642  ECF1  F00B         	call	_LCD_Send
  1858   001646                     l66:
  1859                           
  1860                           ;lcd.c: 75:     LCD_Send(0x40);
  1861   001646  0E40               	movlw	64
  1862   001648  ECF1  F00B         	call	_LCD_Send
  1863   00164C                     
  1864                           ;lcd.c: 77:     for (i = 0; i<16; i++){
  1865   00164C  0E00               	movlw	0
  1866   00164E  6E04               	movwf	LCD_ShowString@i^0,c
  1867   001650                     l1536:
  1868                           
  1869                           ;lcd.c: 78:         LCD_Send(textData[i]);
  1870   001650  5002               	movf	LCD_ShowString@textData^0,w,c
  1871   001652  2404               	addwf	LCD_ShowString@i^0,w,c
  1872   001654  6ED9               	movwf	fsr2l,c
  1873   001656  6ADA               	clrf	fsr2h,c
  1874   001658  50DF               	movf	indf2,w,c
  1875   00165A  ECF1  F00B         	call	_LCD_Send
  1876   00165E                     
  1877                           ;lcd.c: 79:     }
  1878   00165E  2A04               	incf	LCD_ShowString@i^0,f,c
  1879   001660  0E0F               	movlw	15
  1880   001662  6404               	cpfsgt	LCD_ShowString@i^0,c
  1881   001664  EF36  F00B         	goto	u801
  1882   001668  EF38  F00B         	goto	u800
  1883   00166C                     u801:
  1884   00166C  EF28  F00B         	goto	l1536
  1885   001670                     u800:
  1886   001670                     
  1887                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
  1888   001670  846B               	bsf	107,2,c	;volatile
  1889   001672                     l70:
  1890   001672  B46B               	btfsc	107,2,c	;volatile
  1891   001674  EF3E  F00B         	goto	u811
  1892   001678  EF40  F00B         	goto	u810
  1893   00167C                     u811:
  1894   00167C  EF39  F00B         	goto	l70
  1895   001680                     u810:
  1896   001680  0012               	return		;funcret
  1897   001682                     __end_of_LCD_ShowString:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _LCD_Init *****************
  1901 ;; Defined at:
  1902 ;;		line 3 in file "lcd.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 1
  1923 ;; This function calls:
  1924 ;;		_LCD_Send
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text10
  1931   0013BA                     __ptext10:
  1932                           	callstack 0
  1933   0013BA                     _LCD_Init:
  1934                           	callstack 29
  1935   0013BA                     
  1936                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
  1937   0013BA  010F               	movlb	15	; () banked
  1938   0013BC  913B               	bcf	59,0,b	;volatile
  1939                           
  1940                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
  1941   0013BE  933B               	bcf	59,1,b	;volatile
  1942                           
  1943                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
  1944   0013C0  8095               	bsf	149,0,c	;volatile
  1945                           
  1946                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
  1947   0013C2  8295               	bsf	149,1,c	;volatile
  1948                           
  1949                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
  1950   0013C4  9092               	bcf	146,0,c	;volatile
  1951                           
  1952                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
  1953   0013C6  8089               	bsf	137,0,c	;volatile
  1954   0013C8                     
  1955                           ; BSR set to: 15
  1956                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
  1957   0013C8  506C               	movf	108,w,c	;volatile
  1958   0013CA  0BF0               	andlw	-16
  1959   0013CC  0908               	iorlw	8
  1960   0013CE  6E6C               	movwf	108,c	;volatile
  1961                           
  1962                           ;lcd.c: 15:     SSP2ADD = 19;
  1963   0013D0  0E13               	movlw	19
  1964   0013D2  6E6E               	movwf	110,c	;volatile
  1965   0013D4                     
  1966                           ; BSR set to: 15
  1967                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
  1968   0013D4  8A6C               	bsf	108,5,c	;volatile
  1969   0013D6                     
  1970                           ; BSR set to: 15
  1971                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
  1972   0013D6  0E34               	movlw	52
  1973   0013D8  6E02               	movwf	??_LCD_Init^0,c
  1974   0013DA  0EF2               	movlw	242
  1975   0013DC                     u857:
  1976   0013DC  2EE8               	decfsz	wreg,f,c
  1977   0013DE  D7FE               	bra	u857
  1978   0013E0  2E02               	decfsz	??_LCD_Init^0,f,c
  1979   0013E2  D7FC               	bra	u857
  1980   0013E4                     
  1981                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
  1982   0013E4  806B               	bsf	107,0,c	;volatile
  1983   0013E6                     l53:
  1984   0013E6  B06B               	btfsc	107,0,c	;volatile
  1985   0013E8  EFF8  F009         	goto	u751
  1986   0013EC  EFFA  F009         	goto	u750
  1987   0013F0                     u751:
  1988   0013F0  EFF3  F009         	goto	l53
  1989   0013F4                     u750:
  1990   0013F4                     
  1991                           ;lcd.c: 22:     SSP2IF = 0;
  1992   0013F4  9EA4               	bcf	4004,7,c	;volatile
  1993   0013F6                     
  1994                           ;lcd.c: 27:     LCD_Send(0x7C);
  1995   0013F6  0E7C               	movlw	124
  1996   0013F8  ECF1  F00B         	call	_LCD_Send
  1997                           
  1998                           ;lcd.c: 28:     LCD_Send(0x80);
  1999   0013FC  0E80               	movlw	128
  2000   0013FE  ECF1  F00B         	call	_LCD_Send
  2001                           
  2002                           ;lcd.c: 29:     LCD_Send(0x38);
  2003   001402  0E38               	movlw	56
  2004   001404  ECF1  F00B         	call	_LCD_Send
  2005                           
  2006                           ;lcd.c: 30:     LCD_Send(0x80);
  2007   001408  0E80               	movlw	128
  2008   00140A  ECF1  F00B         	call	_LCD_Send
  2009                           
  2010                           ;lcd.c: 31:     LCD_Send(0x39);
  2011   00140E  0E39               	movlw	57
  2012   001410  ECF1  F00B         	call	_LCD_Send
  2013                           
  2014                           ;lcd.c: 32:     LCD_Send(0x80);
  2015   001414  0E80               	movlw	128
  2016   001416  ECF1  F00B         	call	_LCD_Send
  2017                           
  2018                           ;lcd.c: 33:     LCD_Send(0x17);
  2019   00141A  0E17               	movlw	23
  2020   00141C  ECF1  F00B         	call	_LCD_Send
  2021                           
  2022                           ;lcd.c: 34:     LCD_Send(0x80);
  2023   001420  0E80               	movlw	128
  2024   001422  ECF1  F00B         	call	_LCD_Send
  2025                           
  2026                           ;lcd.c: 35:     LCD_Send(0x7A);
  2027   001426  0E7A               	movlw	122
  2028   001428  ECF1  F00B         	call	_LCD_Send
  2029                           
  2030                           ;lcd.c: 36:     LCD_Send(0x80);
  2031   00142C  0E80               	movlw	128
  2032   00142E  ECF1  F00B         	call	_LCD_Send
  2033                           
  2034                           ;lcd.c: 37:     LCD_Send(0x5E);
  2035   001432  0E5E               	movlw	94
  2036   001434  ECF1  F00B         	call	_LCD_Send
  2037                           
  2038                           ;lcd.c: 38:     LCD_Send(0x80);
  2039   001438  0E80               	movlw	128
  2040   00143A  ECF1  F00B         	call	_LCD_Send
  2041                           
  2042                           ;lcd.c: 39:     LCD_Send(0x6B);
  2043   00143E  0E6B               	movlw	107
  2044   001440  ECF1  F00B         	call	_LCD_Send
  2045                           
  2046                           ;lcd.c: 40:     LCD_Send(0x80);
  2047   001444  0E80               	movlw	128
  2048   001446  ECF1  F00B         	call	_LCD_Send
  2049                           
  2050                           ;lcd.c: 41:     LCD_Send(0x0C);
  2051   00144A  0E0C               	movlw	12
  2052   00144C  ECF1  F00B         	call	_LCD_Send
  2053                           
  2054                           ;lcd.c: 42:     LCD_Send(0x80);
  2055   001450  0E80               	movlw	128
  2056   001452  ECF1  F00B         	call	_LCD_Send
  2057                           
  2058                           ;lcd.c: 43:     LCD_Send(0x01);
  2059   001456  0E01               	movlw	1
  2060   001458  ECF1  F00B         	call	_LCD_Send
  2061                           
  2062                           ;lcd.c: 44:     LCD_Send(0x80);
  2063   00145C  0E80               	movlw	128
  2064   00145E  ECF1  F00B         	call	_LCD_Send
  2065                           
  2066                           ;lcd.c: 45:     LCD_Send(0x06);
  2067   001462  0E06               	movlw	6
  2068   001464  ECF1  F00B         	call	_LCD_Send
  2069                           
  2070                           ;lcd.c: 46:     LCD_Send(0x80);
  2071   001468  0E80               	movlw	128
  2072   00146A  ECF1  F00B         	call	_LCD_Send
  2073                           
  2074                           ;lcd.c: 47:     LCD_Send(0x02);
  2075   00146E  0E02               	movlw	2
  2076   001470  ECF1  F00B         	call	_LCD_Send
  2077   001474                     
  2078                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
  2079   001474  846B               	bsf	107,2,c	;volatile
  2080   001476                     l56:
  2081   001476  B46B               	btfsc	107,2,c	;volatile
  2082   001478  EF40  F00A         	goto	u761
  2083   00147C  EF42  F00A         	goto	u760
  2084   001480                     u761:
  2085   001480  EF3B  F00A         	goto	l56
  2086   001484                     u760:
  2087   001484                     
  2088                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
  2089   001484  0E34               	movlw	52
  2090   001486  6E02               	movwf	??_LCD_Init^0,c
  2091   001488  0EF2               	movlw	242
  2092   00148A                     u867:
  2093   00148A  2EE8               	decfsz	wreg,f,c
  2094   00148C  D7FE               	bra	u867
  2095   00148E  2E02               	decfsz	??_LCD_Init^0,f,c
  2096   001490  D7FC               	bra	u867
  2097   001492  0012               	return		;funcret
  2098   001494                     __end_of_LCD_Init:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _LCD_Send *****************
  2102 ;; Defined at:
  2103 ;;		line 85 in file "lcd.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  data            1    wreg     unsigned char 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  data            1    0[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        1 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_LCD_Init
  2127 ;;		_LCD_ShowString
  2128 ;;		_LCD_Clear
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text11
  2133   0017E2                     __ptext11:
  2134                           	callstack 0
  2135   0017E2                     _LCD_Send:
  2136                           	callstack 29
  2137                           
  2138                           ;incstack = 0
  2139                           ;LCD_Send@data stored from wreg
  2140   0017E2  6E01               	movwf	LCD_Send@data^0,c
  2141   0017E4                     
  2142                           ;lcd.c: 87:     SSP2BUF = data;
  2143   0017E4  C001  FF6F         	movff	LCD_Send@data,3951	;volatile
  2144   0017E8                     l76:
  2145   0017E8  B06D               	btfsc	109,0,c	;volatile
  2146   0017EA  EFF9  F00B         	goto	u721
  2147   0017EE  EFFB  F00B         	goto	u720
  2148   0017F2                     u721:
  2149   0017F2  EFF4  F00B         	goto	l76
  2150   0017F6                     u720:
  2151   0017F6                     l79:
  2152   0017F6  AEA4               	btfss	4004,7,c	;volatile
  2153   0017F8  EF00  F00C         	goto	u731
  2154   0017FC  EF02  F00C         	goto	u730
  2155   001800                     u731:
  2156   001800  EFFB  F00B         	goto	l79
  2157   001804                     u730:
  2158   001804                     
  2159                           ;lcd.c: 90:     SSP2IF = 0;
  2160   001804  9EA4               	bcf	4004,7,c	;volatile
  2161   001806  0012               	return		;funcret
  2162   001808                     __end_of_LCD_Send:
  2163                           	callstack 0
  2164                           
  2165                           	psect	rparam
  2166   000000                     
  2167                           	psect	config
  2168                           
  2169                           ; Padding undefined space
  2170   300000                     	org	3145728
  2171   300000  FF                 	db	255
  2172                           
  2173                           ;Config register CONFIG1H @ 0x300001
  2174                           ;	Oscillator Selection bits
  2175                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  2176                           ;	4X PLL Enable
  2177                           ;	PLLCFG = ON, Oscillator multiplied by 4
  2178                           ;	Primary clock enable bit
  2179                           ;	PRICLKEN = 0x1, unprogrammed default
  2180                           ;	Fail-Safe Clock Monitor Enable bit
  2181                           ;	FCMEN = 0x0, unprogrammed default
  2182                           ;	Internal/External Oscillator Switchover bit
  2183                           ;	IESO = 0x0, unprogrammed default
  2184   300001                     	org	3145729
  2185   300001  33                 	db	51
  2186                           
  2187                           ;Config register CONFIG2L @ 0x300002
  2188                           ;	unspecified, using default values
  2189                           ;	Power-up Timer Enable bit
  2190                           ;	PWRTEN = 0x1, unprogrammed default
  2191                           ;	Brown-out Reset Enable bits
  2192                           ;	BOREN = 0x3, unprogrammed default
  2193                           ;	Brown Out Reset Voltage bits
  2194                           ;	BORV = 0x3, unprogrammed default
  2195   300002                     	org	3145730
  2196   300002  1F                 	db	31
  2197                           
  2198                           ;Config register CONFIG2H @ 0x300003
  2199                           ;	Watchdog Timer Enable bits
  2200                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2201                           ;	Watchdog Timer Postscale Select bits
  2202                           ;	WDTPS = 0xF, unprogrammed default
  2203   300003                     	org	3145731
  2204   300003  3C                 	db	60
  2205                           tosu	equ	0xFFF
  2206                           tosh	equ	0xFFE
  2207                           tosl	equ	0xFFD
  2208                           stkptr	equ	0xFFC
  2209                           pclatu	equ	0xFFB
  2210                           pclath	equ	0xFFA
  2211                           pcl	equ	0xFF9
  2212                           tblptru	equ	0xFF8
  2213                           tblptrh	equ	0xFF7
  2214                           tblptrl	equ	0xFF6
  2215                           tablat	equ	0xFF5
  2216                           prodh	equ	0xFF4
  2217                           prodl	equ	0xFF3
  2218                           indf0	equ	0xFEF
  2219                           postinc0	equ	0xFEE
  2220                           postdec0	equ	0xFED
  2221                           preinc0	equ	0xFEC
  2222                           plusw0	equ	0xFEB
  2223                           fsr0h	equ	0xFEA
  2224                           fsr0l	equ	0xFE9
  2225                           wreg	equ	0xFE8
  2226                           indf1	equ	0xFE7
  2227                           postinc1	equ	0xFE6
  2228                           postdec1	equ	0xFE5
  2229                           preinc1	equ	0xFE4
  2230                           plusw1	equ	0xFE3
  2231                           fsr1h	equ	0xFE2
  2232                           fsr1l	equ	0xFE1
  2233                           bsr	equ	0xFE0
  2234                           indf2	equ	0xFDF
  2235                           postinc2	equ	0xFDE
  2236                           postdec2	equ	0xFDD
  2237                           preinc2	equ	0xFDC
  2238                           plusw2	equ	0xFDB
  2239                           fsr2h	equ	0xFDA
  2240                           fsr2l	equ	0xFD9
  2241                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    64
    Data        8
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      67
    BANK0           160     42      83
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_ShowString@textData	PTR unsigned char  size(1) Largest target is 17
		 -> main@menuItem1(BANK0[17]), main@menuItem2(BANK0[17]), 

    main$2541	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), STR_6(CODE[5]), STR_7(CODE[6]), STR_8(CODE[1]), 

    main@F6945	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), STR_6(CODE[5]), STR_7(CODE[6]), STR_8(CODE[1]), 

    main@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_1(CODE[5]), STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[4]), 
		 -> STR_5(CODE[4]), STR_6(CODE[5]), STR_7(CODE[6]), STR_8(CODE[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S2120$buffer	PTR unsigned char  size(2) Largest target is 0

    S2120$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[5]), STR_9(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@menuItem1(BANK0[17]), main@menuItem2(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_1(CODE[5]), STR_12(CODE[7]), 
		 -> STR_2(CODE[5]), STR_3(CODE[4]), STR_4(CODE[4]), STR_5(CODE[4]), 
		 -> STR_6(CODE[5]), STR_7(CODE[6]), STR_8(CODE[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_1(CODE[5]), STR_2(CODE[5]), 
		 -> STR_3(CODE[4]), STR_4(CODE[4]), STR_5(CODE[4]), STR_6(CODE[5]), 
		 -> STR_7(CODE[6]), STR_8(CODE[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[5]), STR_11(CODE[5]), STR_9(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[5]), STR_11(CODE[5]), STR_9(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _fputc->_putch
    _read_prec_or_width->___wmul
    _LCD_ShowString->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0    5740
                                              0 BANK0     42    42      0
                           _LCD_Init
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    5265
                                             35 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    4760
                                             30 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     6      4    4207
                                             24 COMRAM     6     2      4
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                14    10      4    1583
                                             10 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1108
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     843
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     511
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_ShowString                                       3     2      1     309
                                              1 COMRAM     3     2      1
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              1 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Send                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
           ___wmul
         _stoa
           _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      53       5       51.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      43       1       70.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRhhhh       36      0       0      37        0.0%
BITBIGSFRllhll      2F      0       0      51        0.0%
BITBIGSFRhhllh      10      0       0      42        0.0%
BITBIGSFRllhlhh     10      0       0      50        0.0%
BITBIGSFRhll         8      0       0      46        0.0%
BITBIGSFRllhh        7      0       0      47        0.0%
BITBIGSFRllhlhh      6      0       0      48        0.0%
BITBIGSFRhhllll      6      0       0      44        0.0%
BITBIGSFRhlh         5      0       0      45        0.0%
BITBIGSFRllhlhh      1      0       0      49        0.0%
BITBIGSFRhhlhhh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      43        0.0%
BITBIGSFRhhlhhl      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      38        0.0%
BITBIGSFRlll         1      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      96      33        0.0%
DATA                 0      0      96       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 27 23:22:35 2024

                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l23 16FA                          l24 16FA  
                        l53 13E6                          l70 1672                          l62 15F8  
                        l55 13F4                          l56 1476                          l64 1606  
                        l81 1804                          l73 1680                          l82 1806  
                        l66 1646                          l59 1492                          _S1 100D  
                        l76 17E8                          _S2 1009                          l69 1670  
                        _S3 1005                          _S4 1001                          l79 17F6  
       ___wmul@multiplicand 0003                         l182 17E0                         l176 180A  
                       l179 181C                         l910 15F2                         l902 13B8  
                       l906 15EA                         l932 1784                         l860 17BA  
                       l926 124A                         l944 154C                         l890 12C0  
                       l897 1370                         u500 14B8                         u501 14B4  
                       u510 14E0                         u511 14DC                         u520 1516  
                       u600 137E                         u521 1512                         u601 137A  
                       u610 13B8                         u530 1266                         u611 13B4  
                       u531 1262                         u620 1578                         u540 12B0  
                       u700 11D2                         u621 1574                         u701 11CE  
                       u630 15EA                         u550 12C0                         u710 11F0  
                       u631 15E6                         u551 12BC                         u711 11EC  
                       u720 17F6                         u800 1670                         u480 1818  
                       u560 12DE                         u640 1096                         u721 17F2  
                       u801 166C                         u481 1814                         u561 12DA  
                       u641 1092                         u730 1804                         u810 1680  
                       u490 14A6                         u570 1318                         u650 10FA  
                       u731 1800                         u811 167C                         u491 14A2  
                       u571 1314                         u547 12A6                         u651 10F6  
                       u580 133E                         u660 111C                         u740 177C  
                       u661 1118                         u741 1778                         u821 169E  
                       u750 13F4                         u590 1370                         u670 114C  
                       u751 13F0                         u591 136C                         u671 1148  
                       u760 1484                         u680 117E                         u761 1480  
                       u681 117A                         u770 1606                         u690 11A8  
                       u771 1602                         u587 1334                         u691 11A4  
                       u780 1624                         u781 1620                         u790 1640  
                       u791 163C                         u857 13DC                         u867 148A  
                       wreg 0FE8                  _TXSTA1bits 0FAC                        l1400 154E  
                      l1410 15BC                        l1402 1556                        l1500 1474  
                      l1404 1578                        l1412 15C4                        l1420 10AA  
                      l1502 1484                        l1350 17D8                        l1406 1580  
                      l1422 10AE                        l1414 1074                        l1510 179E  
                      l1520 1608                        l1408 159C                        l1344 180A  
                      l1360 14C2                        l1440 111C                        l1432 10CC  
                      l1424 10B6                        l1416 1096                        l1512 17B0  
                      l1504 1786                        l1530 164C                        l1522 1614  
                      l1346 1818                        l1362 14E0                        l1354 1494  
                      l1370 1266                        l1450 115C                        l1442 1126  
                      l1426 10B8                        l1434 10EA                        l1418 109E  
                      l1506 178E                        l1540 1660                        l1524 1624  
                      l1516 15F6                        l1348 17BC                        l1364 1516  
                      l1356 14A6                        l1380 12E2                        l1372 1272  
                      l1452 117E                        l1460 11E0                        l1444 112A  
                      l1436 10FA                        l1428 10C4                        l1508 1796  
                      l1526 162E                        l1518 15F6                        l1358 14B8  
                      l1382 12F6                        l1390 1356                        l1374 127E  
                      l1462 11F0                        l1454 11A8                        l1446 114C  
                      l1438 110E                        l1470 1224                        l1550 16C6  
                      l1542 1682                        l1536 1650                        l1528 1640  
                      l1384 12FA                        l1376 1282                        l1368 124C  
                      l1456 11D2                        l1448 1154                        l1480 174C  
                      l1552 16E6                        l1544 1690                        l1490 13C8  
                      l1538 165E                        l1394 1382                        l1386 131C  
                      l1466 1218                        l1482 1760                        l1554 16F0  
                      l1546 1694                        l1476 17E4                        l1492 13D4  
                      l1396 1396                        l1388 1352                        l1484 177C  
                      l1548 16A6                        l1494 13D6                        l1398 139A  
                      l1478 1744                        l1496 13E4                        l1488 13BA  
                      l1498 13F6                        STR_1 1058                        STR_2 105D  
                      STR_3 106F                        STR_4 106B                        STR_5 1067  
                      STR_6 1053                        STR_7 1048                        STR_8 1052  
                      STR_9 1062                        _dbuf 008A                        _half 101D  
                      _main 1682                        _prec 0041                        fsr0h 0FEA  
                      fsr1h 0FE2                        indf0 0FEF                        fsr2h 0FDA  
                      fsr0l 0FE9                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 124C                        prodh 0FF4  
                      prodl 0FF3                        start 0000                ___param_bank 0000  
            _LCD_ShowString 15F4            __end_of_LCD_Init 1494            __end_of_LCD_Send 1808  
                     ?_main 0001                       STR_10 1062                       STR_11 104E  
                     STR_12 1041                       ?_stoa 000B                vfpfcnvrt@fmt 001B  
                     _TX1IF 7CF4             __end_of_pio2_1t 1015                       _flags 0043  
                     _menuI 00AA         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 1494                       _width 003F             __end_of_invpio2 101D  
                     _putch 1808                       tablat 0FF5                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 0017                       stoa@p 0011  
                     stoa@s 000D                       stoa@w 0013                       status 0FD8  
           __end_of_sprintf 17BC             __initialization 1702      __end_of_LCD_ShowString 1682  
              __end_of_half 1021                __end_of_main 1702                __end_of_stoa 13BA  
              LCD_Send@data 0001                      ??_main 0037                      ??_stoa 000F  
             __activetblptr 0002  __end_of_read_prec_or_width 15F4                      ?_fputc 0002  
                    _ADRESH 0FC4                      ?_putch 0001                      _GODONE 7E11  
             vfpfcnvrt@done 001E                      _SPBRG1 0FAF                      _SSP1IF 7CF3  
                    _SSP2IF 7D27               main@menuItem1 0060               main@menuItem2 0071  
                    _TXREG1 0FAD               main@menuItems 0082                vfprintf@cfmt 0023  
           ?_LCD_ShowString 0002                      _s1pio2 103D                      _s2pio2 1039  
                    _s3pio2 1035                      _s4pio2 1031                      ___wmul 17BC  
                    _pio2_1 1015        read_prec_or_width@ap 0008                      clear_0 1728  
                    clear_1 1734                      isa$std 0001                      fputc@c 0002  
              __mediumconst 0000                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      stoa@cp 0015                      stoa@fp 000B  
          __end_of_vfprintf 1786                   ??_sprintf 002A                  __accesstop 0060  
   __end_of__initialization 173A                   ?_LCD_Init 0001                   ?_LCD_Send 0001  
             ___rparam_used 0001              __pcstackCOMRAM 0001                __pidataBANK0 181E  
             __end_of_fputc 154E               __end_of_putch 181E                  __end_of_C0 1031  
                __end_of_C1 102D                  __end_of_C2 1029                  __end_of_C3 1025  
                __end_of_S1 1011                  __end_of_S2 100D                  __end_of_S3 1009  
                __end_of_S4 1005                     ??_fputc 0006                     ??_putch 0001  
                __pbssBANK0 008A                  ??_LCD_Init 0002                  ??_LCD_Send 0001  
                   ?___wmul 0001                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F             LCD_ShowString@i 0004                     __Hparam 0000  
                   __Lparam 0000                   ?_vfprintf 001F                __psmallconst 1000  
                   __pcinit 1702                     __ramtop 1000                     __ptext0 1682  
                   __ptext1 1786                     __ptext2 1744                     __ptext3 1074  
                   __ptext4 124C                     __ptext5 1494                     __ptext6 1808  
                   __ptext7 154E                     __ptext8 17BC                     __ptext9 15F4  
                   _pio2_1t 1011       read_prec_or_width@fmt 0007                     _invpio2 1019  
                   _sprintf 1786        end_of_initialization 173A                     fputc@fp 0004  
          ___rem_pio2f@F526 003B               __Lmediumconst 0000            ??_LCD_ShowString 0003  
        _read_prec_or_width 154E       LCD_ShowString@lineNum 0003           __end_of_vfpfcnvrt 124C  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
                ??_vfprintf 0023                   _PORTAbits 0F80                   _PORTCbits 0F82  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95        ??_read_prec_or_width 0009              __end_of_s1pio2 1041  
            __end_of_s2pio2 103D              __end_of_s3pio2 1039              __end_of_s4pio2 1035  
               vfpfcnvrt@ap 001C                 vfpfcnvrt@fp 0019              __end_of___wmul 17E2  
            __end_of_pio2_1 1019         start_initialization 1702                 vfprintf@fmt 0021  
                  ??___wmul 0005                 __pdataBANK0 00AB                 __pbssCOMRAM 0037  
             __pcstackBANK0 0060                   fabsf@F465 0037                 __smallconst 1000  
                  ?_sprintf 0024                    _LCD_Init 13BA                    _LCD_Send 17E2  
            ___wmul@product 0005                    _LATAbits 0F89                    _LATBbits 0F8A  
                 main@F6945 00AB                   _vfpfcnvrt 1074                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0001                   copy_data0 1716  
                  __Hrparam 0000                  vfprintf@ap 0022                    __Lrparam 0000  
                vfprintf@fp 001F                  ?_vfpfcnvrt 0019                  _ANSELAbits 0F38  
                _ANSELBbits 0F39                  _ANSELDbits 0F3B                  sprintf@fmt 0025  
                  __ptext10 13BA                    __ptext11 17E2                _SSP1CON1bits 0FC6  
              _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B                    isa$xinst 0000  
                  _vfprintf 1744                _SSP1STATbits 0FC7                _SSP2STATbits 0F6D  
                 putch@data 0001                   sprintf@ap 002A                  _RCSTA1bits 0FAB  
               ??_vfpfcnvrt 001D      LCD_ShowString@textData 0002                    sprintf@f 002B  
                  sprintf@s 0024  
