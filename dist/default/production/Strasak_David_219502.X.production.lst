

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 12:24:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 12/10/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F46K22 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataBANK1
   111   00487A                     __pidataBANK1:
   112                           	callstack 0
   113                           
   114                           ;initializer for moveDisplay@F6961
   115   00487A  DB                 	db	low STR_11
   116   00487B  FF                 	db	high STR_11
   117   00487C  E0                 	db	low STR_12
   118   00487D  FF                 	db	high STR_12
   119   00487E  FA                 	db	low STR_13
   120   00487F  FF                 	db	high STR_13
   121   004880  F6                 	db	low STR_14
   122   004881  FF                 	db	high STR_14
   123   004882  F2                 	db	low STR_15
   124   004883  FF                 	db	high STR_15
   125   004884  D6                 	db	low STR_16
   126   004885  FF                 	db	high STR_16
   127   004886  C5                 	db	low STR_17
   128   004887  FF                 	db	high STR_17
   129   004888  D5                 	db	low (STR_22+4)
   130   004889  FF                 	db	high (STR_22+4)
   131                           
   132                           ;initializer for runGPIO@F6991
   133   00488A  20                 	db	32
   134   00488B  30                 	db	48
   135   00488C  18                 	db	24
   136   00488D  0C                 	db	12
   137   00488E  06                 	db	6
   138   00488F  03                 	db	3
   139   004890  01                 	db	1
   140   004891  03                 	db	3
   141   004892  06                 	db	6
   142   004893  0C                 	db	12
   143   004894  18                 	db	24
   144   004895  30                 	db	48
   145                           
   146                           ;initializer for runGPIO@F6973
   147   004896  5C                 	db	low _LED1_Control
   148   004897  49                 	db	high _LED1_Control
   149   004898  4E                 	db	low _LED2_Control
   150   004899  49                 	db	high _LED2_Control
   151   00489A  40                 	db	low _LED3_Control
   152   00489B  49                 	db	high _LED3_Control
   153   00489C  32                 	db	low _LED4_Control
   154   00489D  49                 	db	high _LED4_Control
   155   00489E  24                 	db	low _LED5_Control
   156   00489F  49                 	db	high _LED5_Control
   157   0048A0  6A                 	db	low _LED6_Control
   158   0048A1  49                 	db	high _LED6_Control
   159                           
   160                           	psect	mediumconst
   161   00FEE2                     __pmediumconst:
   162                           	callstack 0
   163   00FEE2  00                 	db	0
   164   00FEE3  6C3C               	dw	27708
   165   00FEE5  3636               	dw	13878
   166   00FEE7                     __end_of_S4:
   167                           	callstack 0
   168   00FEE7  07CF               	dw	1999
   169   00FEE9  B950               	dw	47440
   170   00FEEB                     __end_of_S3:
   171                           	callstack 0
   172   00FEEB  8884               	dw	34948
   173   00FEED  3C08               	dw	15368
   174   00FEEF                     __end_of_S2:
   175                           	callstack 0
   176   00FEEF  AAAB               	dw	43691
   177   00FEF1  BE2A               	dw	48682
   178   00FEF3                     __end_of_S1:
   179                           	callstack 0
   180   00FEF3  85A3               	dw	34211
   181   00FEF5  3288               	dw	12936
   182   00FEF7                     __end_of_pio2_1t:
   183                           	callstack 0
   184   00FEF7  0FDA               	dw	4058
   185   00FEF9  3FC9               	dw	16329
   186   00FEFB                     __end_of_pio2_1:
   187                           	callstack 0
   188   00FEFB  F983               	dw	63875
   189   00FEFD  3F22               	dw	16162
   190   00FEFF                     __end_of_invpio2:
   191                           	callstack 0
   192   00FEFF  0000               	dw	0
   193   00FF01  3F00               	dw	16128
   194   00FF03                     __end_of_half:
   195                           	callstack 0
   196   00FF03  9A17               	dw	39447
   197   00FF05  37CC               	dw	14284
   198   00FF07                     __end_of_C3:
   199                           	callstack 0
   200   00FF07  043F               	dw	1087
   201   00FF09  BAB6               	dw	47798
   202   00FF0B                     __end_of_C2:
   203                           	callstack 0
   204   00FF0B  AA9F               	dw	43679
   205   00FF0D  3D2A               	dw	15658
   206   00FF0F                     __end_of_C1:
   207                           	callstack 0
   208   00FF0F  0000               	dw	0
   209   00FF11  BF00               	dw	48896
   210   00FF13                     __end_of_C0:
   211                           	callstack 0
   212   00FF13  0FDB               	dw	4059
   213   00FF15  40C9               	dw	16585
   214   00FF17                     __end_of_s4pio2:
   215                           	callstack 0
   216   00FF17  CBE4               	dw	52196
   217   00FF19  4096               	dw	16534
   218   00FF1B                     __end_of_s3pio2:
   219                           	callstack 0
   220   00FF1B  0FDB               	dw	4059
   221   00FF1D  4049               	dw	16457
   222   00FF1F                     __end_of_s2pio2:
   223                           	callstack 0
   224   00FF1F  0FDB               	dw	4059
   225   00FF21  3FC9               	dw	16329
   226   00FF23                     __end_of_s1pio2:
   227                           	callstack 0
   228   000000                     _ADRESL	set	4035
   229   000000                     _RCREG1	set	4014
   230   000000                     _ANSELCbits	set	3898
   231   000000                     _TXREG1	set	4013
   232   000000                     _ADRESH	set	4036
   233   000000                     _LATBbits	set	3978
   234   000000                     _TXSTA1bits	set	4012
   235   000000                     _ANSELBbits	set	3897
   236   000000                     _TRISBbits	set	3987
   237   000000                     _SSP2STATbits	set	3949
   238   000000                     _SSP2ADD	set	3950
   239   000000                     _ANSELDbits	set	3899
   240   000000                     _PORTAbits	set	3968
   241   000000                     _PORTCbits	set	3970
   242   000000                     _LATCbits	set	3979
   243   000000                     _LATDbits	set	3980
   244   000000                     _ANSELAbits	set	3896
   245   000000                     _TRISAbits	set	3986
   246   000000                     _TRISCbits	set	3988
   247   000000                     _TMR2IE	set	31977
   248   000000                     _TMR2IF	set	31985
   249   000000                     _RC1IF	set	31989
   250   000000                     _RC1IE	set	31981
   251   000000                     _TMR1ON	set	32360
   252   000000                     _TMR1IF	set	31984
   253   000000                     _GIE	set	32663
   254   000000                     _TX1IF	set	31988
   255   000000                     _GODONE	set	32273
   256   000000                     _TRISDbits	set	3989
   257   000000                     _TMR1IE	set	31976
   258   000000                     _SSP1IF	set	31987
   259   000000                     _SSP2IF	set	32039
   260   000000                     _LATAbits	set	3977
   261   000000                     _CCPTMRS0bits	set	3913
   262   000000                     _ANSELEbits	set	3900
   263   000000                     _SSP2CON2bits	set	3947
   264   000000                     _SSP2CON1bits	set	3948
   265   000000                     _SSP2BUF	set	3951
   266   000000                     _RCSTA1bits	set	4011
   267   000000                     _SPBRG1	set	4015
   268   000000                     _ADCON2bits	set	4032
   269   000000                     _SSP1CON1bits	set	4038
   270   000000                     _SSP1BUF	set	4041
   271   000000                     _SSP1STATbits	set	4039
   272   000000                     _ADCON0bits	set	4034
   273   000000                     _PR2	set	4027
   274   000000                     _TMR2ON	set	32210
   275   000000                     _T1CONbits	set	4045
   276   000000                     _TMR1	set	4046
   277   000000                     _PEIE	set	32662
   278   000000                     _CCP1CONbits	set	4029
   279   000000                     _CCPR1L	set	4030
   280   00FF23                     STR_21:
   281   00FF23  50                 	db	80	;'P'
   282   00FF24  4F                 	db	79	;'O'
   283   00FF25  54                 	db	84	;'T'
   284   00FF26  31                 	db	49	;'1'
   285   00FF27  3A                 	db	58	;':'
   286   00FF28  25                 	db	37
   287   00FF29  2E                 	db	46
   288   00FF2A  31                 	db	49	;'1'
   289   00FF2B  66                 	db	102	;'f'
   290   00FF2C  50                 	db	80	;'P'
   291   00FF2D  4F                 	db	79	;'O'
   292   00FF2E  54                 	db	84	;'T'
   293   00FF2F  32                 	db	50	;'2'
   294   00FF30  3A                 	db	58	;':'
   295   00FF31  25                 	db	37
   296   00FF32  2E                 	db	46
   297   00FF33  31                 	db	49	;'1'
   298   00FF34  66                 	db	102	;'f'
   299   00FF35  00                 	db	0
   300   00FF36                     STR_2:
   301   00FF36  20                 	db	32
   302   00FF37  20                 	db	32
   303   00FF38  20                 	db	32
   304   00FF39  20                 	db	32
   305   00FF3A  20                 	db	32
   306   00FF3B  20                 	db	32
   307   00FF3C  20                 	db	32
   308   00FF3D  20                 	db	32
   309   00FF3E  20                 	db	32
   310   00FF3F  20                 	db	32
   311   00FF40  20                 	db	32
   312   00FF41  20                 	db	32
   313   00FF42  20                 	db	32
   314   00FF43  20                 	db	32
   315   00FF44  20                 	db	32
   316   00FF45  20                 	db	32
   317   00FF46  00                 	db	0
   318   00FF47                     STR_3:
   319   00FF47  42                 	db	66	;'B'
   320   00FF48  52                 	db	82	;'R'
   321   00FF49  3A                 	db	58	;':'
   322   00FF4A  20                 	db	32
   323   00FF4B  31                 	db	49	;'1'
   324   00FF4C  39                 	db	57	;'9'
   325   00FF4D  32                 	db	50	;'2'
   326   00FF4E  30                 	db	48	;'0'
   327   00FF4F  30                 	db	48	;'0'
   328   00FF50  20                 	db	32
   329   00FF51  20                 	db	32
   330   00FF52  20                 	db	32
   331   00FF53  20                 	db	32
   332   00FF54  20                 	db	32
   333   00FF55  20                 	db	32
   334   00FF56  20                 	db	32
   335   00FF57  00                 	db	0
   336   00FF58                     STR_1:
   337   00FF58  50                 	db	80	;'P'
   338   00FF59  6F                 	db	111	;'o'
   339   00FF5A  7A                 	db	122	;'z'
   340   00FF5B  6F                 	db	111	;'o'
   341   00FF5C  72                 	db	114	;'r'
   342   00FF5D  21                 	db	33
   343   00FF5E  20                 	db	32
   344   00FF5F  48                 	db	72	;'H'
   345   00FF60  61                 	db	97	;'a'
   346   00FF61  64                 	db	100	;'d'
   347   00FF62  21                 	db	33
   348   00FF63  21                 	db	33
   349   00FF64  21                 	db	33
   350   00FF65  20                 	db	32
   351   00FF66  20                 	db	32
   352   00FF67  20                 	db	32
   353   00FF68  00                 	db	0
   354   00FF69                     STR_5:
   355   00FF69  5A                 	db	90	;'Z'
   356   00FF6A  6D                 	db	109	;'m'
   357   00FF6B  61                 	db	97	;'a'
   358   00FF6C  63                 	db	99	;'c'
   359   00FF6D  6B                 	db	107	;'k'
   360   00FF6E  6E                 	db	110	;'n'
   361   00FF6F  65                 	db	101	;'e'
   362   00FF70  74                 	db	116	;'t'
   363   00FF71  65                 	db	101	;'e'
   364   00FF72  20                 	db	32
   365   00FF73  42                 	db	66	;'B'
   366   00FF74  54                 	db	84	;'T'
   367   00FF75  4E                 	db	78	;'N'
   368   00FF76  32                 	db	50	;'2'
   369   00FF77  20                 	db	32
   370   00FF78  20                 	db	32
   371   00FF79  00                 	db	0
   372   00FF7A                     STR_8:
   373   00FF7A  52                 	db	82	;'R'
   374   00FF7B  42                 	db	66	;'B'
   375   00FF7C  30                 	db	48	;'0'
   376   00FF7D  2D                 	db	45
   377   00FF7E  41                 	db	65	;'A'
   378   00FF7F  32                 	db	50	;'2'
   379   00FF80  2C                 	db	44
   380   00FF81  20                 	db	32
   381   00FF82  42                 	db	66	;'B'
   382   00FF83  52                 	db	82	;'R'
   383   00FF84  3A                 	db	58	;':'
   384   00FF85  31                 	db	49	;'1'
   385   00FF86  39                 	db	57	;'9'
   386   00FF87  32                 	db	50	;'2'
   387   00FF88  30                 	db	48	;'0'
   388   00FF89  30                 	db	48	;'0'
   389   00FF8A  00                 	db	0
   390   00FF8B                     STR_7:
   391   00FF8B  56                 	db	86	;'V'
   392   00FF8C  6F                 	db	111	;'o'
   393   00FF8D  6C                 	db	108	;'l'
   394   00FF8E  74                 	db	116	;'t'
   395   00FF8F  79                 	db	121	;'y'
   396   00FF90  20                 	db	32
   397   00FF91  6E                 	db	110	;'n'
   398   00FF92  61                 	db	97	;'a'
   399   00FF93  20                 	db	32
   400   00FF94  50                 	db	80	;'P'
   401   00FF95  4F                 	db	79	;'O'
   402   00FF96  54                 	db	84	;'T'
   403   00FF97  65                 	db	101	;'e'
   404   00FF98  63                 	db	99	;'c'
   405   00FF99  68                 	db	104	;'h'
   406   00FF9A  3A                 	db	58	;':'
   407   00FF9B  00                 	db	0
   408   00FF9C                     STR_4:
   409   00FF9C  4B                 	db	75	;'K'
   410   00FF9D  6F                 	db	111	;'o'
   411   00FF9E  6E                 	db	110	;'n'
   412   00FF9F  65                 	db	101	;'e'
   413   00FFA0  63                 	db	99	;'c'
   414   00FFA1  20                 	db	32
   415   00FFA2  2D                 	db	45
   416   00FFA3  20                 	db	32
   417   00FFA4  6E                 	db	110	;'n'
   418   00FFA5  65                 	db	101	;'e'
   419   00FFA6  77                 	db	119	;'w'
   420   00FFA7  20                 	db	32
   421   00FFA8  6C                 	db	108	;'l'
   422   00FFA9  69                 	db	105	;'i'
   423   00FFAA  6E                 	db	110	;'n'
   424   00FFAB  65                 	db	101	;'e'
   425   00FFAC  00                 	db	0
   426   00FFAD                     STR_9:
   427   00FFAD  31                 	db	49	;'1'
   428   00FFAE  3A                 	db	58	;':'
   429   00FFAF  74                 	db	116	;'t'
   430   00FFB0  72                 	db	114	;'r'
   431   00FFB1  2C                 	db	44
   432   00FFB2  32                 	db	50	;'2'
   433   00FFB3  3A                 	db	58	;':'
   434   00FFB4  73                 	db	115	;'s'
   435   00FFB5  69                 	db	105	;'i'
   436   00FFB6  6E                 	db	110	;'n'
   437   00FFB7  2C                 	db	44
   438   00FFB8  33                 	db	51	;'3'
   439   00FFB9  3A                 	db	58	;':'
   440   00FFBA  70                 	db	112	;'p'
   441   00FFBB  69                 	db	105	;'i'
   442   00FFBC  6C                 	db	108	;'l'
   443   00FFBD  00                 	db	0
   444   00FFBE                     STR_29:
   445   00FFBE  28                 	db	40
   446   00FFBF  6E                 	db	110	;'n'
   447   00FFC0  75                 	db	117	;'u'
   448   00FFC1  6C                 	db	108	;'l'
   449   00FFC2  6C                 	db	108	;'l'
   450   00FFC3  29                 	db	41
   451   00FFC4  00                 	db	0
   452   00FFC5                     STR_17:
   453   00FFC5  4D                 	db	77	;'M'
   454   00FFC6  55                 	db	85	;'U'
   455   00FFC7  53                 	db	83	;'S'
   456   00FFC8  49                 	db	73	;'I'
   457   00FFC9  43                 	db	67	;'C'
   458   00FFCA  00                 	db	0
   459   00FFCB                     STR_19:
   460   00FFCB  3E                 	db	62	;'>'
   461   00FFCC  25                 	db	37
   462   00FFCD  2D                 	db	45
   463   00FFCE  2A                 	db	42
   464   00FFCF  73                 	db	115	;'s'
   465   00FFD0  00                 	db	0
   466   00FFD1                     STR_22:
   467   00FFD1  25                 	db	37
   468   00FFD2  73                 	db	115	;'s'
   469   00FFD3  20                 	db	32
   470   00FFD4  0A                 	db	10
   471   00FFD5  00                 	db	0
   472   00FFD6                     STR_16:
   473   00FFD6  47                 	db	71	;'G'
   474   00FFD7  41                 	db	65	;'A'
   475   00FFD8  4D                 	db	77	;'M'
   476   00FFD9  45                 	db	69	;'E'
   477   00FFDA  00                 	db	0
   478   00FFDB                     STR_11:
   479   00FFDB  47                 	db	71	;'G'
   480   00FFDC  50                 	db	80	;'P'
   481   00FFDD  49                 	db	73	;'I'
   482   00FFDE  4F                 	db	79	;'O'
   483   00FFDF  00                 	db	0
   484   00FFE0                     STR_12:
   485   00FFE0  55                 	db	85	;'U'
   486   00FFE1  41                 	db	65	;'A'
   487   00FFE2  52                 	db	82	;'R'
   488   00FFE3  54                 	db	84	;'T'
   489   00FFE4  00                 	db	0
   490   00FFE5                     STR_10:
   491   00FFE5  25                 	db	37
   492   00FFE6  64                 	db	100	;'d'
   493   00FFE7  20                 	db	32
   494   00FFE8  0D                 	db	13
   495   00FFE9  00                 	db	0
   496   00FFEA                     STR_23:
   497   00FFEA  69                 	db	105	;'i'
   498   00FFEB  6E                 	db	110	;'n'
   499   00FFEC  66                 	db	102	;'f'
   500   00FFED  00                 	db	0
   501   00FFEE                     STR_26:
   502   00FFEE  6E                 	db	110	;'n'
   503   00FFEF  61                 	db	97	;'a'
   504   00FFF0  6E                 	db	110	;'n'
   505   00FFF1  00                 	db	0
   506   00FFF2                     STR_15:
   507   00FFF2  44                 	db	68	;'D'
   508   00FFF3  41                 	db	65	;'A'
   509   00FFF4  43                 	db	67	;'C'
   510   00FFF5  00                 	db	0
   511   00FFF6                     STR_14:
   512   00FFF6  41                 	db	65	;'A'
   513   00FFF7  44                 	db	68	;'D'
   514   00FFF8  43                 	db	67	;'C'
   515   00FFF9  00                 	db	0
   516   00FFFA                     STR_13:
   517   00FFFA  50                 	db	80	;'P'
   518   00FFFB  57                 	db	87	;'W'
   519   00FFFC  4D                 	db	77	;'M'
   520   00FFFD  00                 	db	0
   521   00FFFE  00                 	db	0	; dummy byte at the end
   522   000000                     
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526   0045DC                     __pcinit:
   527                           	callstack 0
   528   0045DC                     start_initialization:
   529                           	callstack 0
   530   0045DC                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Initialize objects allocated to BANK1 (40 bytes)
   534                           ; load TBLPTR registers with __pidataBANK1
   535   0045DC  0E7A               	movlw	low __pidataBANK1
   536   0045DE  6EF6               	movwf	tblptrl,c
   537   0045E0  0E48               	movlw	high __pidataBANK1
   538   0045E2  6EF7               	movwf	tblptrh,c
   539   0045E4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   540   0045E6  6EF8               	movwf	tblptru,c
   541   0045E8  EE01  F0C8         	lfsr	0,__pdataBANK1
   542   0045EC  EE10 F028          	lfsr	1,40
   543   0045F0                     copy_data0:
   544   0045F0  0009               	tblrd		*+
   545   0045F2  CFF5 FFEE          	movff	tablat,postinc0
   546   0045F6  50E5               	movf	postdec1,w,c
   547   0045F8  50E1               	movf	fsr1l,w,c
   548   0045FA  E1FA               	bnz	copy_data0
   549                           
   550                           ; Clear objects allocated to BANK1 (149 bytes)
   551   0045FC  EE01  F000         	lfsr	0,__pbssBANK1
   552   004600  0E95               	movlw	149
   553   004602                     clear_0:
   554   004602  6AEE               	clrf	postinc0,c
   555   004604  06E8               	decf	wreg,f,c
   556   004606  E1FD               	bnz	clear_0
   557                           
   558                           ; Clear objects allocated to BANK0 (1 bytes)
   559   004608  0100               	movlb	0
   560   00460A  6BFE               	clrf	__pbssBANK0& (0+255),b
   561                           
   562                           ; Clear objects allocated to COMRAM (5 bytes)
   563   00460C  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   564   00460E  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   565   004610  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   566   004612  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   567   004614  6A55               	clrf	__pbssCOMRAM& (0+255),c
   568   004616                     end_of_initialization:
   569                           	callstack 0
   570   004616                     __end_of__initialization:
   571                           	callstack 0
   572   004616  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   573   004618  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   574   00461A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   575   00461C  6EF8               	movwf	tblptru,c
   576   00461E  0100               	movlb	0
   577   004620  EFB1  F013         	goto	_main	;jump to C main() function
   578                           
   579                           	psect	bssCOMRAM
   580   000055                     __pbssCOMRAM:
   581                           	callstack 0
   582   000055                     _width:
   583                           	callstack 0
   584   000055                     	ds	2
   585   000057                     _prec:
   586                           	callstack 0
   587   000057                     	ds	2
   588   000059                     _flags:
   589                           	callstack 0
   590   000059                     	ds	1
   591                           
   592                           	psect	bssBANK0
   593   0000FE                     __pbssBANK0:
   594                           	callstack 0
   595   0000FE                     _keepStateGPIO:
   596                           	callstack 0
   597   0000FE                     	ds	1
   598                           
   599                           	psect	bssBANK1
   600   000100                     __pbssBANK1:
   601                           	callstack 0
   602   000100                     	ds	17
   603   000111                     fabsf@F465:
   604                           	callstack 0
   605   000111                     	ds	4
   606   000115                     ___rem_pio2f@F526:
   607                           	callstack 0
   608   000115                     	ds	4
   609   000119                     floorf@F521:
   610                           	callstack 0
   611   000119                     	ds	4
   612   00011D                     ___fpclassifyf@F465:
   613                           	callstack 0
   614   00011D                     	ds	4
   615   000121                     ISR@i:
   616                           	callstack 0
   617   000121                     	ds	2
   618   000123                     _UARTIE:
   619                           	callstack 0
   620   000123                     	ds	1
   621   000124                     _GPIOIE:
   622                           	callstack 0
   623   000124                     	ds	1
   624   000125                     _dbuf:
   625                           	callstack 0
   626   000125                     	ds	80
   627   000175                     _gmail:
   628                           	callstack 0
   629   000175                     	ds	32
   630                           
   631                           	psect	dataBANK1
   632   0001C8                     __pdataBANK1:
   633                           	callstack 0
   634   0001C8                     moveDisplay@F6961:
   635                           	callstack 0
   636   0001C8                     	ds	16
   637   0001D8                     runGPIO@F6991:
   638                           	callstack 0
   639   0001D8                     	ds	12
   640   0001E4                     runGPIO@F6973:
   641                           	callstack 0
   642   0001E4                     	ds	12
   643                           
   644                           	psect	cstackBANK1
   645   000195                     __pcstackBANK1:
   646                           	callstack 0
   647   000195                     moveDisplay@menuItem1:
   648                           	callstack 0
   649   000195                     runADC@text:
   650                           	callstack 0
   651                           
   652                           ; 17 bytes @ 0x0
   653   000195                     	ds	17
   654   0001A6                     runADC@voltage1:
   655                           	callstack 0
   656   0001A6                     moveDisplay@menuItem2:
   657                           	callstack 0
   658                           
   659                           ; 17 bytes @ 0x11
   660   0001A6                     	ds	4
   661   0001AA                     runADC@voltage2:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x15
   665   0001AA                     	ds	4
   666   0001AE                     runADC@pot1:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x19
   670   0001AE                     	ds	2
   671   0001B0                     runADC@pot2:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x1B
   675   0001B0                     	ds	2
   676   0001B2                     runADC@keepState:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x1D
   680   0001B2                     	ds	5
   681   0001B7                     moveDisplay@menuItems:
   682                           	callstack 0
   683                           
   684                           ; 16 bytes @ 0x22
   685   0001B7                     	ds	16
   686   0001C7                     moveDisplay@menuI:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x32
   690   0001C7                     	ds	1
   691                           
   692                           	psect	cstackBANK0
   693   000060                     __pcstackBANK0:
   694                           	callstack 0
   695   000060                     ___fladd@signs:
   696                           	callstack 0
   697   000060                     floorf@m:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x0
   701   000060                     	ds	1
   702   000061                     ___fladd@aexp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x1
   706   000061                     	ds	1
   707   000062                     ___fladd@bexp:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x2
   711   000062                     	ds	1
   712   000063                     ___fladd@grs:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x3
   716   000063                     	ds	1
   717   000064                     ?___flsub:
   718                           	callstack 0
   719   000064                     ?___sindf:
   720                           	callstack 0
   721   000064                     ?___cosdf:
   722                           	callstack 0
   723   000064                     ?___fltol:
   724                           	callstack 0
   725   000064                     floorf@e:
   726                           	callstack 0
   727   000064                     ___fltol@f1:
   728                           	callstack 0
   729   000064                     ___flsub@b:
   730                           	callstack 0
   731   000064                     ___cosdf@x:
   732                           	callstack 0
   733   000064                     ___sindf@x:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x4
   737   000064                     	ds	2
   738   000066                     floorf@u:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x6
   742   000066                     	ds	2
   743   000068                     ??___fltol:
   744   000068                     ___flsub@a:
   745                           	callstack 0
   746   000068                     ___cosdf@r:
   747                           	callstack 0
   748   000068                     ___sindf@r:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x8
   752   000068                     	ds	4
   753   00006C                     ___sindf@w:
   754                           	callstack 0
   755   00006C                     ___cosdf$4121:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0xC
   759   00006C                     	ds	4
   760   000070                     ___cosdf$4122:
   761                           	callstack 0
   762   000070                     ___sindf$4125:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x10
   766   000070                     	ds	4
   767   000074                     ___cosdf$4123:
   768                           	callstack 0
   769   000074                     ___sindf$4126:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x14
   773   000074                     	ds	4
   774   000078                     ___cosdf@w:
   775                           	callstack 0
   776   000078                     ___sindf$4127:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x18
   780   000078                     	ds	4
   781   00007C                     ___cosdf@z:
   782                           	callstack 0
   783   00007C                     ___sindf@s:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x1C
   787   00007C                     	ds	4
   788   000080                     ?___flneg:
   789                           	callstack 0
   790   000080                     ___flneg@f1:
   791                           	callstack 0
   792   000080                     ___sindf@z:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x20
   796   000080                     	ds	4
   797   000084                     ?___rem_pio2f:
   798                           	callstack 0
   799   000084                     efgtoa@fp:
   800                           	callstack 0
   801   000084                     ___rem_pio2f@x:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x24
   805   000084                     	ds	2
   806   000086                     efgtoa@f:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x26
   810   000086                     	ds	2
   811   000088                     ___rem_pio2f@y:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x28
   815   000088                     	ds	1
   816   000089                     ??___rem_pio2f:
   817                           
   818                           ; 1 bytes @ 0x29
   819   000089                     	ds	1
   820   00008A                     efgtoa@c:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x2A
   824   00008A                     	ds	1
   825   00008B                     ??_efgtoa:
   826   00008B                     ___rem_pio2f@ty:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x2B
   830   00008B                     	ds	2
   831   00008D                     efgtoa@ne:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x2D
   835   00008D                     	ds	2
   836   00008F                     efgtoa@p:
   837                           	callstack 0
   838   00008F                     ___rem_pio2f$4124:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x2F
   842   00008F                     	ds	2
   843   000091                     efgtoa@t:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x31
   847   000091                     	ds	2
   848   000093                     ___rem_pio2f@sign:
   849                           	callstack 0
   850   000093                     _efgtoa$3677:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x33
   854   000093                     	ds	1
   855   000094                     ___rem_pio2f@ux:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x34
   859   000094                     	ds	1
   860   000095                     efgtoa@pp:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x35
   864   000095                     	ds	1
   865   000096                     efgtoa@mode:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x36
   869   000096                     	ds	1
   870   000097                     efgtoa@nmode:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x37
   874   000097                     	ds	1
   875   000098                     efgtoa@d:
   876                           	callstack 0
   877   000098                     ___rem_pio2f@fn:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x38
   881   000098                     	ds	2
   882   00009A                     efgtoa@m:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x3A
   886   00009A                     	ds	2
   887   00009C                     efgtoa@e:
   888                           	callstack 0
   889   00009C                     ___rem_pio2f@t:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x3C
   893   00009C                     	ds	2
   894   00009E                     efgtoa@w:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x3E
   898   00009E                     	ds	2
   899   0000A0                     efgtoa@ou:
   900                           	callstack 0
   901   0000A0                     ___rem_pio2f@n:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x40
   905   0000A0                     	ds	4
   906   0000A4                     ?_sinf:
   907                           	callstack 0
   908   0000A4                     efgtoa@i:
   909                           	callstack 0
   910   0000A4                     sinf@x:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x44
   914   0000A4                     	ds	2
   915   0000A6                     efgtoa@h:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x46
   919   0000A6                     	ds	2
   920   0000A8                     _sinf$3841:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x48
   924   0000A8                     	ds	2
   925   0000AA                     efgtoa@l:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x4A
   929   0000AA                     	ds	2
   930   0000AC                     _sinf$3842:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x4C
   934   0000AC                     	ds	2
   935   0000AE                     efgtoa@sign:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x4E
   939   0000AE                     	ds	1
   940   0000AF                     efgtoa@g:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x4F
   944   0000AF                     	ds	1
   945   0000B0                     sinf@n:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x50
   949   0000B0                     	ds	1
   950   0000B1                     sinf@sign:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x51
   954   0000B1                     	ds	1
   955   0000B2                     _sinf$4120:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x52
   959   0000B2                     	ds	1
   960   0000B3                     efgtoa@n:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x53
   964   0000B3                     	ds	2
   965   0000B5                     efgtoa@u:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x55
   969   0000B5                     	ds	1
   970   0000B6                     sinf@y:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x56
   974   0000B6                     	ds	3
   975   0000B9                     vfpfcnvrt@fp:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x59
   979   0000B9                     	ds	1
   980   0000BA                     sinf@ux:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x5A
   984   0000BA                     	ds	1
   985   0000BB                     vfpfcnvrt@fmt:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x5B
   989   0000BB                     	ds	1
   990   0000BC                     vfpfcnvrt@ap:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x5C
   994   0000BC                     	ds	1
   995   0000BD                     ??_vfpfcnvrt:
   996                           
   997                           ; 1 bytes @ 0x5D
   998   0000BD                     	ds	2
   999   0000BF                     vfpfcnvrt@convarg:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x5F
  1003   0000BF                     	ds	4
  1004   0000C3                     vfpfcnvrt@c:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x63
  1008   0000C3                     	ds	1
  1009   0000C4                     vfpfcnvrt@done:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x64
  1013   0000C4                     	ds	1
  1014   0000C5                     vfpfcnvrt@cp:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x65
  1018   0000C5                     	ds	2
  1019   0000C7                     ?_vfprintf:
  1020                           	callstack 0
  1021   0000C7                     vfprintf@fp:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x67
  1025   0000C7                     	ds	2
  1026   0000C9                     vfprintf@fmt:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x69
  1030   0000C9                     	ds	2
  1031   0000CB                     vfprintf@ap:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x6B
  1035   0000CB                     	ds	1
  1036   0000CC                     vfprintf@cfmt:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x6C
  1040   0000CC                     	ds	2
  1041   0000CE                     ?_printf:
  1042                           	callstack 0
  1043   0000CE                     ?_sprintf:
  1044                           	callstack 0
  1045   0000CE                     sprintf@s:
  1046                           	callstack 0
  1047   0000CE                     printf@fmt:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x6E
  1051   0000CE                     	ds	2
  1052   0000D0                     sprintf@fmt:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x70
  1056   0000D0                     	ds	2
  1057   0000D2                     ??_runUART:
  1058   0000D2                     ??_runDAC:
  1059                           
  1060                           ; 1 bytes @ 0x72
  1061   0000D2                     	ds	1
  1062   0000D3                     _runDAC$4117:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x73
  1066   0000D3                     	ds	1
  1067   0000D4                     runUART@reversed:
  1068                           	callstack 0
  1069                           
  1070                           ; 31 bytes @ 0x74
  1071   0000D4                     	ds	3
  1072   0000D7                     _runDAC$4118:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x77
  1076   0000D7                     	ds	3
  1077   0000DA                     sprintf@ap:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x7A
  1081   0000DA                     	ds	1
  1082   0000DB                     runDAC@keepState:
  1083                           	callstack 0
  1084   0000DB                     sprintf@f:
  1085                           	callstack 0
  1086                           
  1087                           ; 12 bytes @ 0x7B
  1088   0000DB                     	ds	1
  1089   0000DC                     runDAC@selectModeDAC:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x7C
  1093   0000DC                     	ds	1
  1094   0000DD                     runDAC@DACindex:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x7D
  1098   0000DD                     	ds	10
  1099   0000E7                     ??_runADC:
  1100   0000E7                     moveDisplay@where:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x87
  1104   0000E7                     	ds	1
  1105   0000E8                     ??_moveDisplay:
  1106                           
  1107                           ; 1 bytes @ 0x88
  1108   0000E8                     	ds	11
  1109   0000F3                     runUART@keepState:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x93
  1113   0000F3                     	ds	1
  1114   0000F4                     runUART@len:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x94
  1118   0000F4                     	ds	2
  1119   0000F6                     runUART@i:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x96
  1123   0000F6                     	ds	2
  1124   0000F8                     runUART@p:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x98
  1128   0000F8                     	ds	2
  1129   0000FA                     ??_main:
  1130                           
  1131                           ; 1 bytes @ 0x9A
  1132   0000FA                     	ds	2
  1133   0000FC                     main@setUpAgain:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x9C
  1137   0000FC                     	ds	1
  1138   0000FD                     main@menuI:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x9D
  1142   0000FD                     	ds	1
  1143                           
  1144                           	psect	cstackCOMRAM
  1145   000001                     __pcstackCOMRAM:
  1146                           	callstack 0
  1147   000001                     ??_ISR:
  1148                           
  1149                           ; 1 bytes @ 0x0
  1150   000001                     	ds	4
  1151   000005                     ISR@temp:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x4
  1155   000005                     	ds	1
  1156   000006                     ?_strlen:
  1157                           	callstack 0
  1158   000006                     ?___fpclassifyf:
  1159                           	callstack 0
  1160   000006                     ?___wmul:
  1161                           	callstack 0
  1162   000006                     ?___awdiv:
  1163                           	callstack 0
  1164   000006                     ?___awmod:
  1165                           	callstack 0
  1166   000006                     ?_labs:
  1167                           	callstack 0
  1168   000006                     ?_fabsf:
  1169                           	callstack 0
  1170   000006                     ?___xxtofl:
  1171                           	callstack 0
  1172   000006                     LCD_Send@data:
  1173                           	callstack 0
  1174   000006                     SPI_write@MSB:
  1175                           	callstack 0
  1176   000006                     putch@data:
  1177                           	callstack 0
  1178   000006                     LED1_Control@state:
  1179                           	callstack 0
  1180   000006                     LED2_Control@state:
  1181                           	callstack 0
  1182   000006                     LED3_Control@state:
  1183                           	callstack 0
  1184   000006                     LED4_Control@state:
  1185                           	callstack 0
  1186   000006                     LED5_Control@state:
  1187                           	callstack 0
  1188   000006                     LED6_Control@state:
  1189                           	callstack 0
  1190   000006                     ___wmul@multiplier:
  1191                           	callstack 0
  1192   000006                     ___awdiv@dividend:
  1193                           	callstack 0
  1194   000006                     ___awmod@dividend:
  1195                           	callstack 0
  1196   000006                     memcpy@d1:
  1197                           	callstack 0
  1198   000006                     strcpy@dest:
  1199                           	callstack 0
  1200   000006                     strlen@s:
  1201                           	callstack 0
  1202   000006                     ___fleq@ff1:
  1203                           	callstack 0
  1204   000006                     ___xxtofl@val:
  1205                           	callstack 0
  1206   000006                     ___fpclassifyf@x:
  1207                           	callstack 0
  1208   000006                     labs@a:
  1209                           	callstack 0
  1210   000006                     fabsf@x:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x5
  1214   000006                     	ds	1
  1215   000007                     ??_LCD_Init:
  1216   000007                     ??_runGPIO:
  1217   000007                     SPI_write@LSB:
  1218                           	callstack 0
  1219   000007                     LCD_ShowString@textData:
  1220                           	callstack 0
  1221   000007                     fputc@c:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x6
  1225   000007                     	ds	1
  1226   000008                     SPI_write@data:
  1227                           	callstack 0
  1228   000008                     ___wmul@multiplicand:
  1229                           	callstack 0
  1230   000008                     ___awdiv@divisor:
  1231                           	callstack 0
  1232   000008                     ___awmod@divisor:
  1233                           	callstack 0
  1234   000008                     memcpy@s1:
  1235                           	callstack 0
  1236   000008                     strcpy@src:
  1237                           	callstack 0
  1238   000008                     strlen@a:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x7
  1242   000008                     	ds	1
  1243   000009                     ??_LCD_ShowString:
  1244   000009                     fputc@fp:
  1245                           	callstack 0
  1246   000009                     runGPIO@states:
  1247                           	callstack 0
  1248                           
  1249                           ; 12 bytes @ 0x8
  1250   000009                     	ds	1
  1251   00000A                     ??___fpclassifyf:
  1252   00000A                     ??_labs:
  1253   00000A                     ??___xxtofl:
  1254   00000A                     ___awdiv@counter:
  1255                           	callstack 0
  1256   00000A                     ___awmod@counter:
  1257                           	callstack 0
  1258   00000A                     ___wmul@product:
  1259                           	callstack 0
  1260   00000A                     memcpy@n:
  1261                           	callstack 0
  1262   00000A                     strcpy@d:
  1263                           	callstack 0
  1264   00000A                     ___fleq@ff2:
  1265                           	callstack 0
  1266   00000A                     fabsf@u:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x9
  1270   00000A                     	ds	1
  1271   00000B                     ??_fputc:
  1272   00000B                     LCD_ShowString@lineNum:
  1273                           	callstack 0
  1274   00000B                     ___awdiv@sign:
  1275                           	callstack 0
  1276   00000B                     ___awmod@sign:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0xA
  1280   00000B                     	ds	1
  1281   00000C                     ?_abs:
  1282                           	callstack 0
  1283   00000C                     ?_read_prec_or_width:
  1284                           	callstack 0
  1285   00000C                     LCD_ShowString@i:
  1286                           	callstack 0
  1287   00000C                     read_prec_or_width@fmt:
  1288                           	callstack 0
  1289   00000C                     memcpy@tmp:
  1290                           	callstack 0
  1291   00000C                     ___awdiv@quotient:
  1292                           	callstack 0
  1293   00000C                     abs@a:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0xB
  1297   00000C                     	ds	1
  1298   00000D                     read_prec_or_width@ap:
  1299                           	callstack 0
  1300   00000D                     memcpy@d:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0xC
  1304   00000D                     	ds	1
  1305   00000E                     ??_runPWM:
  1306   00000E                     ??_abs:
  1307   00000E                     ??___fleq:
  1308   00000E                     ___xxtofl@sign:
  1309                           	callstack 0
  1310   00000E                     read_prec_or_width@c:
  1311                           	callstack 0
  1312   00000E                     ___fpclassifyf@e:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0xD
  1316   00000E                     	ds	1
  1317   00000F                     ___xxtofl@exp:
  1318                           	callstack 0
  1319   00000F                     read_prec_or_width@n:
  1320                           	callstack 0
  1321   00000F                     memcpy@s:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0xE
  1325   00000F                     	ds	1
  1326   000010                     runPWM@keepState:
  1327                           	callstack 0
  1328   000010                     stoa@fp:
  1329                           	callstack 0
  1330   000010                     fputs@s:
  1331                           	callstack 0
  1332   000010                     ___xxtofl@arg:
  1333                           	callstack 0
  1334   000010                     ___fpclassifyf@u:
  1335                           	callstack 0
  1336                           
  1337                           ; 4 bytes @ 0xF
  1338   000010                     	ds	1
  1339   000011                     runPWM@multiplier:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x10
  1343   000011                     	ds	1
  1344   000012                     stoa@s:
  1345                           	callstack 0
  1346   000012                     fputs@fp:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x11
  1350   000012                     	ds	2
  1351   000014                     ??_stoa:
  1352   000014                     ?___flmul:
  1353                           	callstack 0
  1354   000014                     fputs@c:
  1355                           	callstack 0
  1356   000014                     ___flmul@b:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0x13
  1360   000014                     	ds	1
  1361   000015                     fputs@i:
  1362                           	callstack 0
  1363   000015                     runGPIO@LEDControl:
  1364                           	callstack 0
  1365                           
  1366                           ; 12 bytes @ 0x14
  1367   000015                     	ds	1
  1368   000016                     stoa@p:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x15
  1372   000016                     	ds	1
  1373   000017                     pad@fp:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x16
  1377   000017                     	ds	1
  1378   000018                     stoa@w:
  1379                           	callstack 0
  1380   000018                     ___flmul@a:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x17
  1384   000018                     	ds	1
  1385   000019                     pad@buf:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x18
  1389   000019                     	ds	1
  1390   00001A                     stoa@cp:
  1391                           	callstack 0
  1392                           
  1393                           ; 2 bytes @ 0x19
  1394   00001A                     	ds	1
  1395   00001B                     pad@p:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x1A
  1399   00001B                     	ds	1
  1400   00001C                     ??___flmul:
  1401   00001C                     stoa@l:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x1B
  1405   00001C                     	ds	1
  1406   00001D                     ??_pad:
  1407                           
  1408                           ; 1 bytes @ 0x1C
  1409   00001D                     	ds	1
  1410   00001E                     pad@i:
  1411                           	callstack 0
  1412                           
  1413                           ; 2 bytes @ 0x1D
  1414   00001E                     	ds	2
  1415   000020                     ___flmul@sign:
  1416                           	callstack 0
  1417   000020                     dtoa@fp:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x1F
  1421   000020                     	ds	1
  1422   000021                     runGPIO@GPIOreverse:
  1423                           	callstack 0
  1424   000021                     ___flmul@aexp:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x20
  1428   000021                     	ds	1
  1429   000022                     runGPIO@numberOfStates:
  1430                           	callstack 0
  1431   000022                     dtoa@d:
  1432                           	callstack 0
  1433   000022                     ___flmul@grs:
  1434                           	callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x21
  1437   000022                     	ds	2
  1438   000024                     runGPIO@GPIOi:
  1439                           	callstack 0
  1440   000024                     _dtoa$3646:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x23
  1444   000024                     	ds	1
  1445   000025                     runGPIO@j:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x24
  1449   000025                     	ds	1
  1450   000026                     ___flmul@bexp:
  1451                           	callstack 0
  1452   000026                     dtoa@w:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x25
  1456   000026                     	ds	1
  1457   000027                     ___flmul@prod:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x26
  1461   000027                     	ds	1
  1462   000028                     dtoa@p:
  1463                           	callstack 0
  1464                           
  1465                           ; 2 bytes @ 0x27
  1466   000028                     	ds	2
  1467   00002A                     dtoa@s:
  1468                           	callstack 0
  1469                           
  1470                           ; 1 bytes @ 0x29
  1471   00002A                     	ds	1
  1472   00002B                     ___flmul@temp:
  1473                           	callstack 0
  1474   00002B                     dtoa@i:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x2A
  1478   00002B                     	ds	2
  1479   00002D                     ?___fldiv:
  1480                           	callstack 0
  1481   00002D                     ___flge@ff1:
  1482                           	callstack 0
  1483   00002D                     ___fldiv@b:
  1484                           	callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x2C
  1487   00002D                     	ds	4
  1488   000031                     ___flge@ff2:
  1489                           	callstack 0
  1490   000031                     ___fldiv@a:
  1491                           	callstack 0
  1492                           
  1493                           ; 4 bytes @ 0x30
  1494   000031                     	ds	4
  1495   000035                     ??___fldiv:
  1496   000035                     ??___flge:
  1497                           
  1498                           ; 1 bytes @ 0x34
  1499   000035                     	ds	4
  1500   000039                     ___fldiv@rem:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x38
  1504   000039                     	ds	4
  1505   00003D                     ___fldiv@sign:
  1506                           	callstack 0
  1507                           
  1508                           ; 1 bytes @ 0x3C
  1509   00003D                     	ds	1
  1510   00003E                     ___fldiv@new_exp:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x3D
  1514   00003E                     	ds	2
  1515   000040                     ___fldiv@grs:
  1516                           	callstack 0
  1517                           
  1518                           ; 4 bytes @ 0x3F
  1519   000040                     	ds	4
  1520   000044                     ___fldiv@bexp:
  1521                           	callstack 0
  1522                           
  1523                           ; 1 bytes @ 0x43
  1524   000044                     	ds	1
  1525   000045                     ___fldiv@aexp:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x44
  1529   000045                     	ds	1
  1530   000046                     ?___fladd:
  1531                           	callstack 0
  1532   000046                     ?_floorf:
  1533                           	callstack 0
  1534   000046                     ___fladd@b:
  1535                           	callstack 0
  1536   000046                     floorf@x:
  1537                           	callstack 0
  1538                           
  1539                           ; 4 bytes @ 0x45
  1540   000046                     	ds	4
  1541   00004A                     ??_floorf:
  1542   00004A                     ___fladd@a:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x49
  1546   00004A                     	ds	4
  1547   00004E                     ??___fladd:
  1548                           
  1549                           ; 1 bytes @ 0x4D
  1550   00004E                     	ds	4
  1551   000052                     ___fltol@sign1:
  1552                           	callstack 0
  1553                           
  1554                           ; 1 bytes @ 0x51
  1555   000052                     	ds	1
  1556   000053                     ___fltol@exp1:
  1557                           	callstack 0
  1558                           
  1559                           ; 1 bytes @ 0x52
  1560   000053                     	ds	1
  1561   000054                     printf@ap:
  1562                           	callstack 0
  1563                           
  1564                           ; 1 bytes @ 0x53
  1565   000054                     	ds	1
  1566                           
  1567 ;;
  1568 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1569 ;;
  1570 ;; *************** function _main *****************
  1571 ;; Defined at:
  1572 ;;		line 10 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  menuI           1  157[BANK0 ] unsigned char 
  1577 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;Total ram usage:        4 bytes
  1592 ;; Hardware stack levels required when called: 10
  1593 ;; This function calls:
  1594 ;;		_LCD_Init
  1595 ;;		_LCD_ShowString
  1596 ;;		_moveDisplay
  1597 ;;		_runADC
  1598 ;;		_runDAC
  1599 ;;		_runGPIO
  1600 ;;		_runPWM
  1601 ;;		_runUART
  1602 ;; This function is called by:
  1603 ;;		Startup code after reset
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text0
  1608   002762                     __ptext0:
  1609                           	callstack 0
  1610   002762                     _main:
  1611                           	callstack 21
  1612   002762                     
  1613                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1614   002762  0E05               	movlw	5
  1615   002764  0100               	movlb	0	; () banked
  1616   002766  6FFB               	movwf	(??_main+1)& (0+255),b
  1617   002768  0E0F               	movlw	15
  1618   00276A  6FFA               	movwf	??_main& (0+255),b
  1619   00276C  0EF1               	movlw	241
  1620   00276E                     u9517:
  1621   00276E  2EE8               	decfsz	wreg,f,c
  1622   002770  D7FE               	bra	u9517
  1623   002772  2FFA               	decfsz	??_main& (0+255),f,b
  1624   002774  D7FC               	bra	u9517
  1625   002776  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1626   002778  D7FA               	bra	u9517
  1627   00277A                     
  1628                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1629   00277A  8094               	bsf	148,0,c	;volatile
  1630   00277C                     
  1631                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1632   00277C  8892               	bsf	146,4,c	;volatile
  1633   00277E                     
  1634                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1635   00277E  8692               	bsf	146,3,c	;volatile
  1636   002780                     
  1637                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1638   002780  8492               	bsf	146,2,c	;volatile
  1639   002782                     
  1640                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1641   002782  010F               	movlb	15	; () banked
  1642   002784  9738               	bcf	56,3,b	;volatile
  1643   002786                     
  1644                           ; BSR set to: 15
  1645                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1646   002786  9538               	bcf	56,2,b	;volatile
  1647   002788                     
  1648                           ; BSR set to: 15
  1649                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1650   002788  9495               	bcf	149,2,c	;volatile
  1651   00278A                     
  1652                           ; BSR set to: 15
  1653                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1654   00278A  9695               	bcf	149,3,c	;volatile
  1655   00278C                     
  1656                           ; BSR set to: 15
  1657                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1658   00278C  9894               	bcf	148,4,c	;volatile
  1659   00278E                     
  1660                           ; BSR set to: 15
  1661                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1662   00278E  9895               	bcf	149,4,c	;volatile
  1663   002790                     
  1664                           ; BSR set to: 15
  1665                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1666   002790  9A95               	bcf	149,5,c	;volatile
  1667   002792                     
  1668                           ; BSR set to: 15
  1669                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1670   002792  9C95               	bcf	149,6,c	;volatile
  1671   002794                     
  1672                           ; BSR set to: 15
  1673                           ;main.c: 27:     LATDbits.LD2 = 1;
  1674   002794  848C               	bsf	140,2,c	;volatile
  1675   002796                     
  1676                           ; BSR set to: 15
  1677                           ;main.c: 28:     LATDbits.LD3 = 1;
  1678   002796  868C               	bsf	140,3,c	;volatile
  1679   002798                     
  1680                           ; BSR set to: 15
  1681                           ;main.c: 29:     LATCbits.LC4 = 1;
  1682   002798  888B               	bsf	139,4,c	;volatile
  1683   00279A                     
  1684                           ; BSR set to: 15
  1685                           ;main.c: 30:     LATDbits.LD4 = 1;
  1686   00279A  888C               	bsf	140,4,c	;volatile
  1687   00279C                     
  1688                           ; BSR set to: 15
  1689                           ;main.c: 31:     LATDbits.LD5 = 1;
  1690   00279C  8A8C               	bsf	140,5,c	;volatile
  1691   00279E                     
  1692                           ; BSR set to: 15
  1693                           ;main.c: 32:     LATDbits.LD6 = 1;
  1694   00279E  8C8C               	bsf	140,6,c	;volatile
  1695   0027A0                     
  1696                           ; BSR set to: 15
  1697                           ;main.c: 35:     LCD_Init();
  1698   0027A0  EC96  F01F         	call	_LCD_Init	;wreg free
  1699   0027A4                     
  1700                           ;main.c: 36:     uint8_t menuI = 0;
  1701   0027A4  0E00               	movlw	0
  1702   0027A6  0100               	movlb	0	; () banked
  1703   0027A8  6FFD               	movwf	main@menuI& (0+255),b
  1704   0027AA                     
  1705                           ; BSR set to: 0
  1706                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1707   0027AA  0E00               	movlw	0
  1708   0027AC  6FFC               	movwf	main@setUpAgain& (0+255),b
  1709   0027AE                     
  1710                           ; BSR set to: 0
  1711                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1712   0027AE  0E00               	movlw	0
  1713   0027B0  6FE7               	movwf	moveDisplay@where& (0+255),b
  1714   0027B2  51FD               	movf	main@menuI& (0+255),w,b
  1715   0027B4  EC88  F01D         	call	_moveDisplay
  1716   0027B8  0100               	movlb	0	; () banked
  1717   0027BA  6FFD               	movwf	main@menuI& (0+255),b
  1718   0027BC                     l7366:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;main.c: 47:         if(PORTCbits.RC0){
  1722   0027BC  A082               	btfss	130,0,c	;volatile
  1723   0027BE  EFE3  F013         	goto	u9411
  1724   0027C2  EFE5  F013         	goto	u9410
  1725   0027C6                     u9411:
  1726   0027C6  EF07  F014         	goto	l7376
  1727   0027CA                     u9410:
  1728   0027CA                     
  1729                           ; BSR set to: 0
  1730                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1731   0027CA  0E03               	movlw	3
  1732   0027CC  0100               	movlb	0	; () banked
  1733   0027CE  6FFB               	movwf	(??_main+1)& (0+255),b
  1734   0027D0  0E08               	movlw	8
  1735   0027D2  6FFA               	movwf	??_main& (0+255),b
  1736   0027D4  0E77               	movlw	119
  1737   0027D6                     u9527:
  1738   0027D6  2EE8               	decfsz	wreg,f,c
  1739   0027D8  D7FE               	bra	u9527
  1740   0027DA  2FFA               	decfsz	??_main& (0+255),f,b
  1741   0027DC  D7FC               	bra	u9527
  1742   0027DE  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1743   0027E0  D7FA               	bra	u9527
  1744   0027E2                     
  1745                           ;main.c: 49:             if(PORTCbits.RC0){
  1746   0027E2  A082               	btfss	130,0,c	;volatile
  1747   0027E4  EFF6  F013         	goto	u9421
  1748   0027E8  EFF8  F013         	goto	u9420
  1749   0027EC                     u9421:
  1750   0027EC  EF07  F014         	goto	l7376
  1751   0027F0                     u9420:
  1752   0027F0                     l50:
  1753   0027F0  B082               	btfsc	130,0,c	;volatile
  1754   0027F2  EFFD  F013         	goto	u9431
  1755   0027F6  EFFF  F013         	goto	u9430
  1756   0027FA                     u9431:
  1757   0027FA  EFF8  F013         	goto	l50
  1758   0027FE                     u9430:
  1759   0027FE                     
  1760                           ;main.c: 51:                 menuI = moveDisplay(menuI,2);
  1761   0027FE  0E02               	movlw	2
  1762   002800  0100               	movlb	0	; () banked
  1763   002802  6FE7               	movwf	moveDisplay@where& (0+255),b
  1764   002804  51FD               	movf	main@menuI& (0+255),w,b
  1765   002806  EC88  F01D         	call	_moveDisplay
  1766   00280A  0100               	movlb	0	; () banked
  1767   00280C  6FFD               	movwf	main@menuI& (0+255),b
  1768   00280E                     l7376:
  1769                           
  1770                           ;main.c: 54:         if(PORTAbits.RA4){
  1771   00280E  A880               	btfss	128,4,c	;volatile
  1772   002810  EF0C  F014         	goto	u9441
  1773   002814  EF0E  F014         	goto	u9440
  1774   002818                     u9441:
  1775   002818  EF30  F014         	goto	l7386
  1776   00281C                     u9440:
  1777   00281C                     
  1778                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1779   00281C  0E03               	movlw	3
  1780   00281E  0100               	movlb	0	; () banked
  1781   002820  6FFB               	movwf	(??_main+1)& (0+255),b
  1782   002822  0E08               	movlw	8
  1783   002824  6FFA               	movwf	??_main& (0+255),b
  1784   002826  0E77               	movlw	119
  1785   002828                     u9537:
  1786   002828  2EE8               	decfsz	wreg,f,c
  1787   00282A  D7FE               	bra	u9537
  1788   00282C  2FFA               	decfsz	??_main& (0+255),f,b
  1789   00282E  D7FC               	bra	u9537
  1790   002830  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1791   002832  D7FA               	bra	u9537
  1792   002834                     
  1793                           ;main.c: 56:             if(PORTAbits.RA4){
  1794   002834  A880               	btfss	128,4,c	;volatile
  1795   002836  EF1F  F014         	goto	u9451
  1796   00283A  EF21  F014         	goto	u9450
  1797   00283E                     u9451:
  1798   00283E  EF30  F014         	goto	l7386
  1799   002842                     u9450:
  1800   002842                     l55:
  1801   002842  B880               	btfsc	128,4,c	;volatile
  1802   002844  EF26  F014         	goto	u9461
  1803   002848  EF28  F014         	goto	u9460
  1804   00284C                     u9461:
  1805   00284C  EF21  F014         	goto	l55
  1806   002850                     u9460:
  1807   002850                     
  1808                           ;main.c: 58:                 menuI = moveDisplay(menuI,1);
  1809   002850  0E01               	movlw	1
  1810   002852  0100               	movlb	0	; () banked
  1811   002854  6FE7               	movwf	moveDisplay@where& (0+255),b
  1812   002856  51FD               	movf	main@menuI& (0+255),w,b
  1813   002858  EC88  F01D         	call	_moveDisplay
  1814   00285C  0100               	movlb	0	; () banked
  1815   00285E  6FFD               	movwf	main@menuI& (0+255),b
  1816   002860                     l7386:
  1817                           
  1818                           ;main.c: 61:         if(PORTAbits.RA3){
  1819   002860  A680               	btfss	128,3,c	;volatile
  1820   002862  EF35  F014         	goto	u9471
  1821   002866  EF37  F014         	goto	u9470
  1822   00286A                     u9471:
  1823   00286A  EFC9  F014         	goto	l58
  1824   00286E                     u9470:
  1825   00286E                     
  1826                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1827   00286E  0E03               	movlw	3
  1828   002870  0100               	movlb	0	; () banked
  1829   002872  6FFB               	movwf	(??_main+1)& (0+255),b
  1830   002874  0E08               	movlw	8
  1831   002876  6FFA               	movwf	??_main& (0+255),b
  1832   002878  0E77               	movlw	119
  1833   00287A                     u9547:
  1834   00287A  2EE8               	decfsz	wreg,f,c
  1835   00287C  D7FE               	bra	u9547
  1836   00287E  2FFA               	decfsz	??_main& (0+255),f,b
  1837   002880  D7FC               	bra	u9547
  1838   002882  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1839   002884  D7FA               	bra	u9547
  1840   002886                     
  1841                           ;main.c: 63:             if(PORTAbits.RA3){
  1842   002886  A680               	btfss	128,3,c	;volatile
  1843   002888  EF48  F014         	goto	u9481
  1844   00288C  EF4A  F014         	goto	u9480
  1845   002890                     u9481:
  1846   002890  EFC9  F014         	goto	l58
  1847   002894                     u9480:
  1848   002894                     l60:
  1849   002894  B680               	btfsc	128,3,c	;volatile
  1850   002896  EF4F  F014         	goto	u9491
  1851   00289A  EF51  F014         	goto	u9490
  1852   00289E                     u9491:
  1853   00289E  EF4A  F014         	goto	l60
  1854   0028A2                     u9490:
  1855   0028A2  EFA9  F014         	goto	l7426
  1856   0028A6                     l7394:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1860   0028A6  0E58               	movlw	low STR_1
  1861   0028A8  6E07               	movwf	LCD_ShowString@textData^0,c
  1862   0028AA  0EFF               	movlw	high STR_1
  1863   0028AC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1864   0028AE  0E01               	movlw	1
  1865   0028B0  ECCA  F020         	call	_LCD_ShowString
  1866                           
  1867                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1868   0028B4  0E36               	movlw	low STR_2
  1869   0028B6  6E07               	movwf	LCD_ShowString@textData^0,c
  1870   0028B8  0EFF               	movlw	high STR_2
  1871   0028BA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1872   0028BC  0E02               	movlw	2
  1873   0028BE  ECCA  F020         	call	_LCD_ShowString
  1874   0028C2                     
  1875                           ;main.c: 69:                         runGPIO();
  1876   0028C2  EC2D  F01C         	call	_runGPIO	;wreg free
  1877   0028C6                     l7398:
  1878                           
  1879                           ;main.c: 70:                         setUpAgain = 1;
  1880   0028C6  0E01               	movlw	1
  1881   0028C8  0100               	movlb	0	; () banked
  1882   0028CA  6FFC               	movwf	main@setUpAgain& (0+255),b
  1883                           
  1884                           ;main.c: 71:                         break;
  1885   0028CC  EFC9  F014         	goto	l58
  1886   0028D0                     l7400:
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  1890   0028D0  0E47               	movlw	low STR_3
  1891   0028D2  6E07               	movwf	LCD_ShowString@textData^0,c
  1892   0028D4  0EFF               	movlw	high STR_3
  1893   0028D6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1894   0028D8  0E01               	movlw	1
  1895   0028DA  ECCA  F020         	call	_LCD_ShowString
  1896                           
  1897                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  1898   0028DE  0E9C               	movlw	low STR_4
  1899   0028E0  6E07               	movwf	LCD_ShowString@textData^0,c
  1900   0028E2  0EFF               	movlw	high STR_4
  1901   0028E4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1902   0028E6  0E02               	movlw	2
  1903   0028E8  ECCA  F020         	call	_LCD_ShowString
  1904   0028EC                     
  1905                           ;main.c: 75:                         runUART();
  1906   0028EC  EC73  F01B         	call	_runUART	;wreg free
  1907   0028F0  EF63  F014         	goto	l7398
  1908   0028F4                     l7406:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1912   0028F4  0E69               	movlw	low STR_5
  1913   0028F6  6E07               	movwf	LCD_ShowString@textData^0,c
  1914   0028F8  0EFF               	movlw	high STR_5
  1915   0028FA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1916   0028FC  0E01               	movlw	1
  1917   0028FE  ECCA  F020         	call	_LCD_ShowString
  1918                           
  1919                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  1920   002902  0E36               	movlw	low STR_2
  1921   002904  6E07               	movwf	LCD_ShowString@textData^0,c
  1922   002906  0EFF               	movlw	high STR_2
  1923   002908  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1924   00290A  0E02               	movlw	2
  1925   00290C  ECCA  F020         	call	_LCD_ShowString
  1926   002910                     
  1927                           ;main.c: 81:                         runPWM();
  1928   002910  ECE5  F01C         	call	_runPWM	;wreg free
  1929   002914  EF63  F014         	goto	l7398
  1930   002918                     l7412:
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  1934   002918  0E8B               	movlw	low STR_7
  1935   00291A  6E07               	movwf	LCD_ShowString@textData^0,c
  1936   00291C  0EFF               	movlw	high STR_7
  1937   00291E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1938   002920  0E01               	movlw	1
  1939   002922  ECCA  F020         	call	_LCD_ShowString
  1940   002926                     
  1941                           ;main.c: 86:                         runADC();
  1942   002926  EC04  F017         	call	_runADC	;wreg free
  1943   00292A  EF63  F014         	goto	l7398
  1944   00292E                     l7418:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  1948   00292E  0E7A               	movlw	low STR_8
  1949   002930  6E07               	movwf	LCD_ShowString@textData^0,c
  1950   002932  0EFF               	movlw	high STR_8
  1951   002934  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1952   002936  0E01               	movlw	1
  1953   002938  ECCA  F020         	call	_LCD_ShowString
  1954                           
  1955                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1956   00293C  0EAD               	movlw	low STR_9
  1957   00293E  6E07               	movwf	LCD_ShowString@textData^0,c
  1958   002940  0EFF               	movlw	high STR_9
  1959   002942  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1960   002944  0E02               	movlw	2
  1961   002946  ECCA  F020         	call	_LCD_ShowString
  1962   00294A                     
  1963                           ;main.c: 92:                         runDAC();
  1964   00294A  EC3D  F012         	call	_runDAC	;wreg free
  1965   00294E  EF63  F014         	goto	l7398
  1966   002952                     l7426:
  1967   002952  0100               	movlb	0	; () banked
  1968   002954  51FD               	movf	main@menuI& (0+255),w,b
  1969                           
  1970                           ; Switch size 1, requested type "simple"
  1971                           ; Number of cases is 7, Range of values is 0 to 6
  1972                           ; switch strategies available:
  1973                           ; Name         Instructions Cycles
  1974                           ; simple_byte           22    12 (average)
  1975                           ;	Chosen strategy is simple_byte
  1976   002956  0A00               	xorlw	0	; case 0
  1977   002958  B4D8               	btfsc	status,2,c
  1978   00295A  EF53  F014         	goto	l7394
  1979   00295E  0A01               	xorlw	1	; case 1
  1980   002960  B4D8               	btfsc	status,2,c
  1981   002962  EF68  F014         	goto	l7400
  1982   002966  0A03               	xorlw	3	; case 2
  1983   002968  B4D8               	btfsc	status,2,c
  1984   00296A  EF7A  F014         	goto	l7406
  1985   00296E  0A01               	xorlw	1	; case 3
  1986   002970  B4D8               	btfsc	status,2,c
  1987   002972  EF8C  F014         	goto	l7412
  1988   002976  0A07               	xorlw	7	; case 4
  1989   002978  B4D8               	btfsc	status,2,c
  1990   00297A  EF97  F014         	goto	l7418
  1991   00297E  0A01               	xorlw	1	; case 5
  1992   002980  B4D8               	btfsc	status,2,c
  1993   002982  EFC9  F014         	goto	l58
  1994   002986  0A03               	xorlw	3	; case 6
  1995   002988  B4D8               	btfsc	status,2,c
  1996   00298A  EFC9  F014         	goto	l58
  1997   00298E  EFC9  F014         	goto	l58
  1998   002992                     l58:
  1999                           
  2000                           ;main.c: 103:         if(PORTAbits.RA2){
  2001   002992  5080               	movf	128,w,c	;volatile
  2002   002994                     
  2003                           ;main.c: 107:         if(setUpAgain){
  2004   002994  0100               	movlb	0	; () banked
  2005   002996  51FC               	movf	main@setUpAgain& (0+255),w,b
  2006   002998  B4D8               	btfsc	status,2,c
  2007   00299A  EFD1  F014         	goto	u9501
  2008   00299E  EFD3  F014         	goto	u9500
  2009   0029A2                     u9501:
  2010   0029A2  EFDE  F013         	goto	l7366
  2011   0029A6                     u9500:
  2012   0029A6                     
  2013                           ; BSR set to: 0
  2014                           ;main.c: 108:         menuI = moveDisplay(menuI,0);
  2015   0029A6  0E00               	movlw	0
  2016   0029A8  6FE7               	movwf	moveDisplay@where& (0+255),b
  2017   0029AA  51FD               	movf	main@menuI& (0+255),w,b
  2018   0029AC  EC88  F01D         	call	_moveDisplay
  2019   0029B0  0100               	movlb	0	; () banked
  2020   0029B2  6FFD               	movwf	main@menuI& (0+255),b
  2021   0029B4                     
  2022                           ; BSR set to: 0
  2023                           ;main.c: 109:         setUpAgain = 0;
  2024   0029B4  0E00               	movlw	0
  2025   0029B6  6FFC               	movwf	main@setUpAgain& (0+255),b
  2026   0029B8  EFDE  F013         	goto	l7366
  2027   0029BC  EF8A  F000         	goto	start
  2028   0029C0                     __end_of_main:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _runUART *****************
  2032 ;; Defined at:
  2033 ;;		line 4 in file "UART.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  p               2  152[BANK0 ] int 
  2038 ;;  i               2  150[BANK0 ] int 
  2039 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2040 ;;  len             2  148[BANK0 ] int 
  2041 ;;  keepState       1  147[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:       40 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 9
  2058 ;; This function calls:
  2059 ;;		_printf
  2060 ;;		_strlen
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text1
  2067   0036E6                     __ptext1:
  2068                           	callstack 0
  2069   0036E6                     _runUART:
  2070                           	callstack 21
  2071   0036E6                     
  2072                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2073   0036E6  8492               	bsf	146,2,c	;volatile
  2074                           
  2075                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2076   0036E8  010F               	movlb	15	; () banked
  2077   0036EA  9D3A               	bcf	58,6,b	;volatile
  2078                           
  2079                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2080   0036EC  9F3A               	bcf	58,7,b	;volatile
  2081                           
  2082                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2083   0036EE  8C94               	bsf	148,6,c	;volatile
  2084                           
  2085                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2086   0036F0  8E94               	bsf	148,7,c	;volatile
  2087   0036F2                     
  2088                           ; BSR set to: 15
  2089                           ;UART.c: 14:     SPBRG1 = 25;
  2090   0036F2  0E19               	movlw	25
  2091   0036F4  6EAF               	movwf	175,c	;volatile
  2092   0036F6                     
  2093                           ; BSR set to: 15
  2094                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2095   0036F6  98AC               	bcf	172,4,c	;volatile
  2096   0036F8                     
  2097                           ; BSR set to: 15
  2098                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2099   0036F8  8EAB               	bsf	171,7,c	;volatile
  2100   0036FA                     
  2101                           ; BSR set to: 15
  2102                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2103   0036FA  8AAC               	bsf	172,5,c	;volatile
  2104   0036FC                     
  2105                           ; BSR set to: 15
  2106                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2107   0036FC  88AB               	bsf	171,4,c	;volatile
  2108                           
  2109                           ;UART.c: 21:     UARTIE = 1;
  2110   0036FE  0E01               	movlw	1
  2111   003700  0101               	movlb	1	; () banked
  2112   003702  6F23               	movwf	_UARTIE& (0+255),b
  2113   003704                     
  2114                           ; BSR set to: 1
  2115                           ;UART.c: 22:     RC1IE = 1;
  2116   003704  8A9D               	bsf	3997,5,c	;volatile
  2117   003706                     
  2118                           ; BSR set to: 1
  2119                           ;UART.c: 23:     PEIE = 1;
  2120   003706  8CF2               	bsf	4082,6,c	;volatile
  2121   003708                     
  2122                           ; BSR set to: 1
  2123                           ;UART.c: 24:     GIE = 1;
  2124   003708  8EF2               	bsf	4082,7,c	;volatile
  2125                           
  2126                           ;UART.c: 26:     uint8_t keepState = 1;
  2127   00370A  0E01               	movlw	1
  2128   00370C  0100               	movlb	0	; () banked
  2129   00370E  6FF3               	movwf	runUART@keepState& (0+255),b
  2130                           
  2131                           ;UART.c: 28:     while(keepState){
  2132   003710  EF1A  F01C         	goto	l534
  2133   003714                     l7116:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;UART.c: 29:         if(gmail.full){
  2137   003714  0101               	movlb	1	; () banked
  2138   003716  5194               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2139   003718  B4D8               	btfsc	status,2,c
  2140   00371A  EF91  F01B         	goto	u9091
  2141   00371E  EF93  F01B         	goto	u9090
  2142   003722                     u9091:
  2143   003722  EFF6  F01B         	goto	l536
  2144   003726                     u9090:
  2145   003726                     
  2146                           ; BSR set to: 1
  2147                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             int len = strlen(gma
      +                          il.data);
  2148   003726  0E75               	movlw	low _gmail
  2149   003728  6E06               	movwf	strlen@s^0,c
  2150   00372A  0E01               	movlw	high _gmail
  2151   00372C  6E07               	movwf	(strlen@s+1)^0,c
  2152   00372E  ECD3  F023         	call	_strlen	;wreg free
  2153   003732  C006  F0F4         	movff	?_strlen,runUART@len
  2154   003736  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2155   00373A                     
  2156                           ;UART.c: 33:             for(int i = 0; i < len; i++) {
  2157   00373A  0E00               	movlw	0
  2158   00373C  0100               	movlb	0	; () banked
  2159   00373E  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2160   003740  0E00               	movlw	0
  2161   003742  6FF6               	movwf	runUART@i& (0+255),b
  2162   003744  EFBA  F01B         	goto	l7126
  2163   003748                     l7122:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2167   003748  0E74               	movlw	low (_gmail+65535)
  2168   00374A  6FD2               	movwf	??_runUART& (0+255),b
  2169   00374C  0E01               	movlw	high (_gmail+65535)
  2170   00374E  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2171   003750  51F6               	movf	runUART@i& (0+255),w,b
  2172   003752  5FD2               	subwf	??_runUART& (0+255),f,b
  2173   003754  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2174   003756  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2175   003758  51F4               	movf	runUART@len& (0+255),w,b
  2176   00375A  25D2               	addwf	??_runUART& (0+255),w,b
  2177   00375C  6ED9               	movwf	fsr2l,c
  2178   00375E  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2179   003760  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2180   003762  6EDA               	movwf	fsr2h,c
  2181   003764  51F6               	movf	runUART@i& (0+255),w,b
  2182   003766  0FD4               	addlw	low runUART@reversed
  2183   003768  6EE1               	movwf	fsr1l,c
  2184   00376A  6AE2               	clrf	fsr1h,c
  2185   00376C  CFDF FFE7          	movff	indf2,indf1
  2186   003770                     
  2187                           ; BSR set to: 0
  2188                           ;UART.c: 35:             }
  2189   003770  4BF6               	infsnz	runUART@i& (0+255),f,b
  2190   003772  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2191   003774                     l7126:
  2192                           
  2193                           ; BSR set to: 0
  2194   003774  51F4               	movf	runUART@len& (0+255),w,b
  2195   003776  5DF6               	subwf	runUART@i& (0+255),w,b
  2196   003778  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2197   00377A  0A80               	xorlw	128
  2198   00377C  6FD2               	movwf	??_runUART& (0+255),b
  2199   00377E  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2200   003780  0A80               	xorlw	128
  2201   003782  59D2               	subwfb	??_runUART& (0+255),w,b
  2202   003784  A0D8               	btfss	status,0,c
  2203   003786  EFC7  F01B         	goto	u9101
  2204   00378A  EFC9  F01B         	goto	u9100
  2205   00378E                     u9101:
  2206   00378E  EFA4  F01B         	goto	l7122
  2207   003792                     u9100:
  2208   003792                     
  2209                           ; BSR set to: 0
  2210                           ;UART.c: 36:             reversed[len] = '\0';
  2211   003792  51F4               	movf	runUART@len& (0+255),w,b
  2212   003794  0FD4               	addlw	low runUART@reversed
  2213   003796  6ED9               	movwf	fsr2l,c
  2214   003798  6ADA               	clrf	fsr2h,c
  2215   00379A  6ADF               	clrf	indf2,c
  2216   00379C                     
  2217                           ; BSR set to: 0
  2218                           ;UART.c: 37:             printf("%s \n", reversed);
  2219   00379C  0ED1               	movlw	low STR_22
  2220   00379E  6FCE               	movwf	printf@fmt& (0+255),b
  2221   0037A0  0EFF               	movlw	high STR_22
  2222   0037A2  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2223   0037A4  0ED4               	movlw	low runUART@reversed
  2224   0037A6  6FD0               	movwf	(?_printf+2)& (0+255),b
  2225   0037A8  6BD1               	clrf	(?_printf+3)& (0+255),b
  2226   0037AA  EC77  F024         	call	_printf	;wreg free
  2227   0037AE                     
  2228                           ;UART.c: 39:             gmail.full = 0;
  2229   0037AE  0E00               	movlw	0
  2230   0037B0  0101               	movlb	1	; () banked
  2231   0037B2  6F94               	movwf	(_gmail+31)& (0+255),b	;volatile
  2232   0037B4                     
  2233                           ; BSR set to: 1
  2234                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2235   0037B4  0E00               	movlw	0
  2236   0037B6  0100               	movlb	0	; () banked
  2237   0037B8  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2238   0037BA  0E00               	movlw	0
  2239   0037BC  6FF8               	movwf	runUART@p& (0+255),b
  2240   0037BE                     l7140:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2244   0037BE  0E75               	movlw	low _gmail
  2245   0037C0  25F8               	addwf	runUART@p& (0+255),w,b
  2246   0037C2  6ED9               	movwf	fsr2l,c
  2247   0037C4  0E01               	movlw	high _gmail
  2248   0037C6  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2249   0037C8  6EDA               	movwf	fsr2h,c
  2250   0037CA  6ADF               	clrf	indf2,c
  2251   0037CC                     
  2252                           ; BSR set to: 0
  2253                           ;UART.c: 43:             }
  2254   0037CC  4BF8               	infsnz	runUART@p& (0+255),f,b
  2255   0037CE  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2256   0037D0                     
  2257                           ; BSR set to: 0
  2258   0037D0  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2259   0037D2  EFF4  F01B         	goto	u9111
  2260   0037D6  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2261   0037D8  E109               	bnz	u9110
  2262   0037DA  0E1F               	movlw	31
  2263   0037DC  5DF8               	subwf	runUART@p& (0+255),w,b
  2264   0037DE  A0D8               	btfss	status,0,c
  2265   0037E0  EFF4  F01B         	goto	u9111
  2266   0037E4  EFF6  F01B         	goto	u9110
  2267   0037E8                     u9111:
  2268   0037E8  EFDF  F01B         	goto	l7140
  2269   0037EC                     u9110:
  2270   0037EC                     l536:
  2271                           
  2272                           ;UART.c: 47:         if(PORTAbits.RA2){
  2273   0037EC  A480               	btfss	128,2,c	;volatile
  2274   0037EE  EFFB  F01B         	goto	u9121
  2275   0037F2  EFFD  F01B         	goto	u9120
  2276   0037F6                     u9121:
  2277   0037F6  EF1A  F01C         	goto	l534
  2278   0037FA                     u9120:
  2279   0037FA                     
  2280                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2281   0037FA  0E03               	movlw	3
  2282   0037FC  0100               	movlb	0	; () banked
  2283   0037FE  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2284   003800  0E08               	movlw	8
  2285   003802  6FD2               	movwf	??_runUART& (0+255),b
  2286   003804  0E77               	movlw	119
  2287   003806                     u9557:
  2288   003806  2EE8               	decfsz	wreg,f,c
  2289   003808  D7FE               	bra	u9557
  2290   00380A  2FD2               	decfsz	??_runUART& (0+255),f,b
  2291   00380C  D7FC               	bra	u9557
  2292   00380E  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2293   003810  D7FA               	bra	u9557
  2294   003812                     
  2295                           ;UART.c: 49:             if(PORTAbits.RA2){
  2296   003812  A480               	btfss	128,2,c	;volatile
  2297   003814  EF0E  F01C         	goto	u9131
  2298   003818  EF10  F01C         	goto	u9130
  2299   00381C                     u9131:
  2300   00381C  EF1A  F01C         	goto	l534
  2301   003820                     u9130:
  2302   003820                     l544:
  2303   003820  B480               	btfsc	128,2,c	;volatile
  2304   003822  EF15  F01C         	goto	u9141
  2305   003826  EF17  F01C         	goto	u9140
  2306   00382A                     u9141:
  2307   00382A  EF10  F01C         	goto	l544
  2308   00382E                     u9140:
  2309   00382E                     
  2310                           ;UART.c: 51:                 keepState = 0;
  2311   00382E  0E00               	movlw	0
  2312   003830  0100               	movlb	0	; () banked
  2313   003832  6FF3               	movwf	runUART@keepState& (0+255),b
  2314   003834                     l534:
  2315                           
  2316                           ;UART.c: 28:     while(keepState){
  2317   003834  0100               	movlb	0	; () banked
  2318   003836  51F3               	movf	runUART@keepState& (0+255),w,b
  2319   003838  A4D8               	btfss	status,2,c
  2320   00383A  EF21  F01C         	goto	u9151
  2321   00383E  EF23  F01C         	goto	u9150
  2322   003842                     u9151:
  2323   003842  EF8A  F01B         	goto	l7116
  2324   003846                     u9150:
  2325   003846                     
  2326                           ; BSR set to: 0
  2327                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2328   003846  9EAB               	bcf	171,7,c	;volatile
  2329                           
  2330                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2331   003848  9AAC               	bcf	172,5,c	;volatile
  2332                           
  2333                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2334   00384A  98AB               	bcf	171,4,c	;volatile
  2335   00384C                     
  2336                           ; BSR set to: 0
  2337                           ;UART.c: 61:     UARTIE = 0;
  2338   00384C  0E00               	movlw	0
  2339   00384E  0101               	movlb	1	; () banked
  2340   003850  6F23               	movwf	_UARTIE& (0+255),b
  2341   003852                     
  2342                           ; BSR set to: 1
  2343                           ;UART.c: 62:     RC1IE = 0;
  2344   003852  9A9D               	bcf	3997,5,c	;volatile
  2345   003854                     
  2346                           ; BSR set to: 1
  2347                           ;UART.c: 63:     PEIE = 0;
  2348   003854  9CF2               	bcf	4082,6,c	;volatile
  2349   003856                     
  2350                           ; BSR set to: 1
  2351                           ;UART.c: 64:     GIE = 0;
  2352   003856  9EF2               	bcf	4082,7,c	;volatile
  2353   003858                     
  2354                           ; BSR set to: 1
  2355   003858  0012               	return		;funcret
  2356   00385A                     __end_of_runUART:
  2357                           	callstack 0
  2358                           
  2359 ;; *************** function _strlen *****************
  2360 ;; Defined at:
  2361 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2364 ;;		 -> gmail$data(31), gmail(32), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2367 ;;		 -> gmail$data(31), gmail(32), 
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  2    5[COMRAM] unsigned int 
  2370 ;; Registers used:
  2371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;Total ram usage:        4 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_runUART
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text2
  2392   0047A6                     __ptext2:
  2393                           	callstack 0
  2394   0047A6                     _strlen:
  2395                           	callstack 28
  2396   0047A6  C006  F008         	movff	strlen@s,strlen@a
  2397   0047AA  C007  F009         	movff	strlen@s+1,strlen@a+1
  2398   0047AE  EFDB  F023         	goto	l7010
  2399   0047B2                     l7008:
  2400   0047B2  4A06               	infsnz	strlen@s^0,f,c
  2401   0047B4  2A07               	incf	(strlen@s+1)^0,f,c
  2402   0047B6                     l7010:
  2403   0047B6  C006  FFD9         	movff	strlen@s,fsr2l
  2404   0047BA  C007  FFDA         	movff	strlen@s+1,fsr2h
  2405   0047BE  50DF               	movf	indf2,w,c
  2406   0047C0  A4D8               	btfss	status,2,c
  2407   0047C2  EFE5  F023         	goto	u8941
  2408   0047C6  EFE7  F023         	goto	u8940
  2409   0047CA                     u8941:
  2410   0047CA  EFD9  F023         	goto	l7008
  2411   0047CE                     u8940:
  2412   0047CE  5008               	movf	strlen@a^0,w,c
  2413   0047D0  5C06               	subwf	strlen@s^0,w,c
  2414   0047D2  6E06               	movwf	?_strlen^0,c
  2415   0047D4  5009               	movf	(strlen@a+1)^0,w,c
  2416   0047D6  5807               	subwfb	(strlen@s+1)^0,w,c
  2417   0047D8  6E07               	movwf	(?_strlen+1)^0,c
  2418   0047DA  0012               	return		;funcret
  2419   0047DC                     __end_of_strlen:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _runPWM *****************
  2423 ;; Defined at:
  2424 ;;		line 11 in file "PWM.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  multiplier      1   16[COMRAM] unsigned char 
  2429 ;;  keepState       1   15[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:        4 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 2
  2446 ;; This function calls:
  2447 ;;		___awdiv
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text3
  2454   0039CA                     __ptext3:
  2455                           	callstack 0
  2456   0039CA                     _runPWM:
  2457                           	callstack 28
  2458   0039CA                     
  2459                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2460   0039CA  8494               	bsf	148,2,c	;volatile
  2461   0039CC                     
  2462                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2463   0039CC  0EFC               	movlw	-4
  2464   0039CE  010F               	movlb	15	; () banked
  2465   0039D0  1749               	andwf	73,f,b	;volatile
  2466                           
  2467                           ;PWM.c: 15:     PR2 = 199;
  2468   0039D2  0EC7               	movlw	199
  2469   0039D4  6EBB               	movwf	187,c	;volatile
  2470                           
  2471                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2472   0039D6  0E0C               	movlw	12
  2473   0039D8  12BD               	iorwf	189,f,c	;volatile
  2474                           
  2475                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2476   0039DA  50BD               	movf	189,w,c	;volatile
  2477   0039DC  0B3F               	andlw	-193
  2478   0039DE  0980               	iorlw	128
  2479   0039E0  6EBD               	movwf	189,c	;volatile
  2480                           
  2481                           ;PWM.c: 18:     CCPR1L = 0;
  2482   0039E2  0E00               	movlw	0
  2483   0039E4  6EBE               	movwf	190,c	;volatile
  2484   0039E6                     
  2485                           ; BSR set to: 15
  2486                           ;PWM.c: 19:     TMR2IF = 0;
  2487   0039E6  929E               	bcf	3998,1,c	;volatile
  2488   0039E8                     
  2489                           ; BSR set to: 15
  2490                           ;PWM.c: 20:     TMR2ON = 1;
  2491   0039E8  84BA               	bsf	4026,2,c	;volatile
  2492   0039EA                     l478:
  2493   0039EA  A29E               	btfss	3998,1,c	;volatile
  2494   0039EC  EFFA  F01C         	goto	u9161
  2495   0039F0  EFFC  F01C         	goto	u9160
  2496   0039F4                     u9161:
  2497   0039F4  EFF5  F01C         	goto	l478
  2498   0039F8                     u9160:
  2499   0039F8                     
  2500                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2501   0039F8  8494               	bsf	148,2,c	;volatile
  2502                           
  2503                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2504   0039FA  8892               	bsf	146,4,c	;volatile
  2505                           
  2506                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2507   0039FC  8492               	bsf	146,2,c	;volatile
  2508                           
  2509                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2510   0039FE  9495               	bcf	149,2,c	;volatile
  2511                           
  2512                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2513   003A00  9695               	bcf	149,3,c	;volatile
  2514                           
  2515                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2516   003A02  9894               	bcf	148,4,c	;volatile
  2517                           
  2518                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2519   003A04  9895               	bcf	149,4,c	;volatile
  2520                           
  2521                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2522   003A06  9A95               	bcf	149,5,c	;volatile
  2523                           
  2524                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2525   003A08  9C95               	bcf	149,6,c	;volatile
  2526                           
  2527                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2528   003A0A  848C               	bsf	140,2,c	;volatile
  2529                           
  2530                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2531   003A0C  868C               	bsf	140,3,c	;volatile
  2532                           
  2533                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2534   003A0E  888B               	bsf	139,4,c	;volatile
  2535                           
  2536                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2537   003A10  888C               	bsf	140,4,c	;volatile
  2538                           
  2539                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2540   003A12  8A8C               	bsf	140,5,c	;volatile
  2541                           
  2542                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2543   003A14  8C8C               	bsf	140,6,c	;volatile
  2544   003A16                     
  2545                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2546   003A16  0E01               	movlw	1
  2547   003A18  6E10               	movwf	runPWM@keepState^0,c
  2548                           
  2549                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2550   003A1A  0E00               	movlw	0
  2551   003A1C  6E11               	movwf	runPWM@multiplier^0,c
  2552                           
  2553                           ;PWM.c: 47:     while(keepState){
  2554   003A1E  EF7B  F01D         	goto	l481
  2555   003A22                     l7174:
  2556                           
  2557                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2558   003A22  5011               	movf	runPWM@multiplier^0,w,c
  2559   003A24  0DC7               	mullw	199
  2560   003A26  CFF3 F006          	movff	prodl,___awdiv@dividend
  2561   003A2A  CFF4 F007          	movff	prodh,___awdiv@dividend+1
  2562   003A2E  0E00               	movlw	0
  2563   003A30  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2564   003A32  0E05               	movlw	5
  2565   003A34  6E08               	movwf	___awdiv@divisor^0,c
  2566   003A36  EC68  F020         	call	___awdiv	;wreg free
  2567   003A3A  5006               	movf	?___awdiv^0,w,c
  2568   003A3C  6EBE               	movwf	190,c	;volatile
  2569   003A3E                     
  2570                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2571   003A3E  A880               	btfss	128,4,c	;volatile
  2572   003A40  EF24  F01D         	goto	u9171
  2573   003A44  EF26  F01D         	goto	u9170
  2574   003A48                     u9171:
  2575   003A48  EF58  F01D         	goto	l7192
  2576   003A4C                     u9170:
  2577   003A4C                     
  2578                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2579   003A4C  0E03               	movlw	3
  2580   003A4E  6E0F               	movwf	(??_runPWM+1)^0,c
  2581   003A50  0E08               	movlw	8
  2582   003A52  6E0E               	movwf	??_runPWM^0,c
  2583   003A54  0E77               	movlw	119
  2584   003A56                     u9567:
  2585   003A56  2EE8               	decfsz	wreg,f,c
  2586   003A58  D7FE               	bra	u9567
  2587   003A5A  2E0E               	decfsz	??_runPWM^0,f,c
  2588   003A5C  D7FC               	bra	u9567
  2589   003A5E  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2590   003A60  D7FA               	bra	u9567
  2591   003A62  0000               	nop	
  2592   003A64                     
  2593                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2594   003A64  A880               	btfss	128,4,c	;volatile
  2595   003A66  EF37  F01D         	goto	u9181
  2596   003A6A  EF39  F01D         	goto	u9180
  2597   003A6E                     u9181:
  2598   003A6E  EF58  F01D         	goto	l7192
  2599   003A72                     u9180:
  2600   003A72                     l485:
  2601   003A72  B880               	btfsc	128,4,c	;volatile
  2602   003A74  EF3E  F01D         	goto	u9191
  2603   003A78  EF40  F01D         	goto	u9190
  2604   003A7C                     u9191:
  2605   003A7C  EF39  F01D         	goto	l485
  2606   003A80                     u9190:
  2607   003A80                     
  2608                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2609   003A80  0E05               	movlw	5
  2610   003A82  1811               	xorwf	runPWM@multiplier^0,w,c
  2611   003A84  A4D8               	btfss	status,2,c
  2612   003A86  EF47  F01D         	goto	u9201
  2613   003A8A  EF49  F01D         	goto	u9200
  2614   003A8E                     u9201:
  2615   003A8E  EF4D  F01D         	goto	l7188
  2616   003A92                     u9200:
  2617   003A92                     
  2618                           ;PWM.c: 56:                     multiplier = 0;
  2619   003A92  0E00               	movlw	0
  2620   003A94  6E11               	movwf	runPWM@multiplier^0,c
  2621                           
  2622                           ;PWM.c: 57:                 } else if(multiplier <5){
  2623   003A96  EF58  F01D         	goto	l7192
  2624   003A9A                     l7188:
  2625   003A9A  0E05               	movlw	5
  2626   003A9C  6011               	cpfslt	runPWM@multiplier^0,c
  2627   003A9E  EF53  F01D         	goto	u9211
  2628   003AA2  EF55  F01D         	goto	u9210
  2629   003AA6                     u9211:
  2630   003AA6  EF58  F01D         	goto	l484
  2631   003AAA                     u9210:
  2632   003AAA                     
  2633                           ;PWM.c: 58:                     multiplier++;
  2634   003AAA  2A11               	incf	runPWM@multiplier^0,f,c
  2635   003AAC  EF58  F01D         	goto	l7192
  2636   003AB0                     l484:
  2637   003AB0                     l7192:
  2638                           
  2639                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2640   003AB0  A480               	btfss	128,2,c	;volatile
  2641   003AB2  EF5D  F01D         	goto	u9221
  2642   003AB6  EF5F  F01D         	goto	u9220
  2643   003ABA                     u9221:
  2644   003ABA  EF7B  F01D         	goto	l481
  2645   003ABE                     u9220:
  2646   003ABE                     
  2647                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2648   003ABE  0E03               	movlw	3
  2649   003AC0  6E0F               	movwf	(??_runPWM+1)^0,c
  2650   003AC2  0E08               	movlw	8
  2651   003AC4  6E0E               	movwf	??_runPWM^0,c
  2652   003AC6  0E77               	movlw	119
  2653   003AC8                     u9577:
  2654   003AC8  2EE8               	decfsz	wreg,f,c
  2655   003ACA  D7FE               	bra	u9577
  2656   003ACC  2E0E               	decfsz	??_runPWM^0,f,c
  2657   003ACE  D7FC               	bra	u9577
  2658   003AD0  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2659   003AD2  D7FA               	bra	u9577
  2660   003AD4  0000               	nop	
  2661   003AD6                     
  2662                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2663   003AD6  A480               	btfss	128,2,c	;volatile
  2664   003AD8  EF70  F01D         	goto	u9231
  2665   003ADC  EF72  F01D         	goto	u9230
  2666   003AE0                     u9231:
  2667   003AE0  EF7B  F01D         	goto	l481
  2668   003AE4                     u9230:
  2669   003AE4                     l493:
  2670   003AE4  B480               	btfsc	128,2,c	;volatile
  2671   003AE6  EF77  F01D         	goto	u9241
  2672   003AEA  EF79  F01D         	goto	u9240
  2673   003AEE                     u9241:
  2674   003AEE  EF72  F01D         	goto	l493
  2675   003AF2                     u9240:
  2676   003AF2                     
  2677                           ;PWM.c: 67:             keepState = 0;
  2678   003AF2  0E00               	movlw	0
  2679   003AF4  6E10               	movwf	runPWM@keepState^0,c
  2680   003AF6                     l481:
  2681                           
  2682                           ;PWM.c: 47:     while(keepState){
  2683   003AF6  5010               	movf	runPWM@keepState^0,w,c
  2684   003AF8  A4D8               	btfss	status,2,c
  2685   003AFA  EF81  F01D         	goto	u9251
  2686   003AFE  EF83  F01D         	goto	u9250
  2687   003B02                     u9251:
  2688   003B02  EF11  F01D         	goto	l7174
  2689   003B06                     u9250:
  2690   003B06                     
  2691                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2692   003B06  0EF0               	movlw	-16
  2693   003B08  16BD               	andwf	189,f,c	;volatile
  2694   003B0A                     
  2695                           ;PWM.c: 75:     TMR2ON = 0;
  2696   003B0A  94BA               	bcf	4026,2,c	;volatile
  2697   003B0C                     
  2698                           ;PWM.c: 76:     TMR2IE = 0;
  2699   003B0C  929D               	bcf	3997,1,c	;volatile
  2700   003B0E  0012               	return		;funcret
  2701   003B10                     __end_of_runPWM:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _runGPIO *****************
  2705 ;; Defined at:
  2706 ;;		line 19 in file "GPIO.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  j               2   36[COMRAM] int 
  2711 ;;  states         12    8[COMRAM] unsigned char [12]
  2712 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2713 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2714 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2715 ;;  numberOfStat    2   33[COMRAM] int 
  2716 ;;  GPIOi           1   35[COMRAM] unsigned char 
  2717 ;;  GPIOreverse     1   32[COMRAM] unsigned char 
  2718 ;;  GPIOindex       1    0        unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;Total ram usage:       32 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 2
  2735 ;; This function calls:
  2736 ;;		_LED1_Control
  2737 ;;		_LED2_Control
  2738 ;;		_LED3_Control
  2739 ;;		_LED4_Control
  2740 ;;		_LED5_Control
  2741 ;;		_LED6_Control
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text4
  2748   00385A                     __ptext4:
  2749                           	callstack 0
  2750   00385A                     _runGPIO:
  2751                           	callstack 28
  2752   00385A                     
  2753                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2754   00385A  9495               	bcf	149,2,c	;volatile
  2755                           
  2756                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2757   00385C  9695               	bcf	149,3,c	;volatile
  2758                           
  2759                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2760   00385E  9894               	bcf	148,4,c	;volatile
  2761                           
  2762                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2763   003860  9895               	bcf	149,4,c	;volatile
  2764                           
  2765                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2766   003862  9A95               	bcf	149,5,c	;volatile
  2767                           
  2768                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2769   003864  9C95               	bcf	149,6,c	;volatile
  2770                           
  2771                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2772   003866  010F               	movlb	15	; () banked
  2773   003868  953B               	bcf	59,2,b	;volatile
  2774                           
  2775                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2776   00386A  973B               	bcf	59,3,b	;volatile
  2777                           
  2778                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2779   00386C  993A               	bcf	58,4,b	;volatile
  2780                           
  2781                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2782   00386E  993B               	bcf	59,4,b	;volatile
  2783                           
  2784                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2785   003870  9B3B               	bcf	59,5,b	;volatile
  2786                           
  2787                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2788   003872  9D3B               	bcf	59,6,b	;volatile
  2789                           
  2790                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2791   003874  848C               	bsf	140,2,c	;volatile
  2792                           
  2793                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2794   003876  868C               	bsf	140,3,c	;volatile
  2795                           
  2796                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  2797   003878  888B               	bsf	139,4,c	;volatile
  2798                           
  2799                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  2800   00387A  888C               	bsf	140,4,c	;volatile
  2801                           
  2802                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  2803   00387C  8A8C               	bsf	140,5,c	;volatile
  2804                           
  2805                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  2806   00387E  8C8C               	bsf	140,6,c	;volatile
  2807                           
  2808                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  2809   003880  8492               	bsf	146,2,c	;volatile
  2810                           
  2811                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  2812   003882  9538               	bcf	56,2,b	;volatile
  2813   003884                     
  2814                           ; BSR set to: 15
  2815                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  2816   003884  0E3F               	movlw	-193
  2817   003886  16CD               	andwf	205,f,c	;volatile
  2818                           
  2819                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  2820   003888  0E30               	movlw	48
  2821   00388A  12CD               	iorwf	205,f,c	;volatile
  2822   00388C                     
  2823                           ; BSR set to: 15
  2824                           ;GPIO.c: 49:     TMR1IE = 1;
  2825   00388C  809D               	bsf	3997,0,c	;volatile
  2826   00388E                     
  2827                           ; BSR set to: 15
  2828                           ;GPIO.c: 50:     PEIE = 1;
  2829   00388E  8CF2               	bsf	4082,6,c	;volatile
  2830   003890                     
  2831                           ; BSR set to: 15
  2832                           ;GPIO.c: 51:     GIE = 1;
  2833   003890  8EF2               	bsf	4082,7,c	;volatile
  2834                           
  2835                           ;GPIO.c: 52:     GPIOIE = 1;
  2836   003892  0E01               	movlw	1
  2837   003894  0101               	movlb	1	; () banked
  2838   003896  6F24               	movwf	_GPIOIE& (0+255),b
  2839   003898                     
  2840                           ; BSR set to: 1
  2841                           ;GPIO.c: 53:     TMR1IF = 1;
  2842   003898  809E               	bsf	3998,0,c	;volatile
  2843                           
  2844                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  2845   00389A  0E9E               	movlw	158
  2846   00389C  6ECF               	movwf	207,c	;volatile
  2847   00389E  0E58               	movlw	88
  2848   0038A0  6ECE               	movwf	206,c	;volatile
  2849   0038A2                     
  2850                           ; BSR set to: 1
  2851                           ;GPIO.c: 55:     TMR1ON = 1;
  2852   0038A2  80CD               	bsf	4045,0,c	;volatile
  2853                           
  2854                           ;GPIO.c: 58:     keepStateGPIO = 1;
  2855   0038A4  0E01               	movlw	1
  2856   0038A6  0100               	movlb	0	; () banked
  2857   0038A8  6FFE               	movwf	_keepStateGPIO& (0+255),b
  2858                           
  2859                           ;GPIO.c: 61:     uint8_t GPIOreverse;;GPIO.c: 62:     GPIOreverse = 0;
  2860   0038AA  0E00               	movlw	0
  2861   0038AC  6E21               	movwf	runGPIO@GPIOreverse^0,c
  2862   0038AE                     
  2863                           ; BSR set to: 0
  2864                           ;GPIO.c: 64:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  2865   0038AE  EE21  F0E4         	lfsr	2,runGPIO@F6973
  2866   0038B2  EE10  F015         	lfsr	1,runGPIO@LEDControl
  2867   0038B6  0E0B               	movlw	11
  2868   0038B8                     u9001:
  2869   0038B8  CFDB FFE3          	movff	plusw2,plusw1
  2870   0038BC  06E8               	decf	wreg,f,c
  2871   0038BE  E2FC               	bc	u9001
  2872   0038C0                     
  2873                           ; BSR set to: 0
  2874                           ;GPIO.c: 65:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2875   0038C0  EE21  F0D8         	lfsr	2,runGPIO@F6991
  2876   0038C4  EE10  F009         	lfsr	1,runGPIO@states
  2877   0038C8  0E0B               	movlw	11
  2878   0038CA                     u9011:
  2879   0038CA  CFDB FFE3          	movff	plusw2,plusw1
  2880   0038CE  06E8               	decf	wreg,f,c
  2881   0038D0  E2FC               	bc	u9011
  2882                           
  2883                           ;GPIO.c: 66:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2884   0038D2  0E00               	movlw	0
  2885   0038D4  6E23               	movwf	(runGPIO@numberOfStates+1)^0,c
  2886   0038D6  0E0C               	movlw	12
  2887   0038D8  6E22               	movwf	runGPIO@numberOfStates^0,c
  2888                           
  2889                           ;GPIO.c: 67:     uint8_t GPIOi;;GPIO.c: 68:     GPIOi = 0;
  2890   0038DA  0E00               	movlw	0
  2891   0038DC  6E24               	movwf	runGPIO@GPIOi^0,c
  2892                           
  2893                           ;GPIO.c: 70:     while(keepStateGPIO){
  2894   0038DE  EFD0  F01C         	goto	l344
  2895   0038E2                     l7076:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;GPIO.c: 72:         for(int j = 0; j < 6; j++) {
  2899   0038E2  0E00               	movlw	0
  2900   0038E4  6E26               	movwf	(runGPIO@j+1)^0,c
  2901   0038E6  0E00               	movlw	0
  2902   0038E8  6E25               	movwf	runGPIO@j^0,c
  2903   0038EA                     l7082:
  2904                           
  2905                           ;GPIO.c: 73:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2906   0038EA  5025               	movf	runGPIO@j^0,w,c
  2907   0038EC  0D02               	mullw	2
  2908   0038EE  50F3               	movf	243,w,c
  2909   0038F0  0F15               	addlw	low runGPIO@LEDControl
  2910   0038F2  6ED9               	movwf	fsr2l,c
  2911   0038F4  6ADA               	clrf	fsr2h,c
  2912   0038F6  D802               	call	u9028
  2913   0038F8  EFA2  F01C         	goto	u9029
  2914   0038FC                     u9028:
  2915   0038FC  0005               	push	
  2916   0038FE  6EFA               	movwf	pclath,c
  2917   003900  50DE               	movf	postinc2,w,c
  2918   003902  6EFD               	movwf	tosl,c
  2919   003904  50DE               	movf	postinc2,w,c
  2920   003906  6EFE               	movwf	tosh,c
  2921   003908  50F8               	movf	tblptru,w,c
  2922   00390A  6EFF               	movwf	tosu,c
  2923   00390C  50FA               	movf	pclath,w,c
  2924   00390E  5025               	movf	runGPIO@j^0,w,c
  2925   003910  0805               	sublw	5
  2926   003912  6E07               	movwf	??_runGPIO^0,c
  2927   003914  5024               	movf	runGPIO@GPIOi^0,w,c
  2928   003916  0F09               	addlw	low runGPIO@states
  2929   003918  6ED9               	movwf	fsr2l,c
  2930   00391A  6ADA               	clrf	fsr2h,c
  2931   00391C  50DF               	movf	indf2,w,c
  2932   00391E  6E08               	movwf	(??_runGPIO+1)^0,c
  2933   003920  2A07               	incf	??_runGPIO^0,f,c
  2934   003922  EF95  F01C         	goto	u9034
  2935   003926                     u9035:
  2936   003926  90D8               	bcf	status,0,c
  2937   003928  3208               	rrcf	(??_runGPIO+1)^0,f,c
  2938   00392A                     u9034:
  2939   00392A  2E07               	decfsz	??_runGPIO^0,f,c
  2940   00392C  EF93  F01C         	goto	u9035
  2941   003930  A008               	btfss	(??_runGPIO+1)^0,0,c
  2942   003932  EF9D  F01C         	goto	u9041
  2943   003936  EFA0  F01C         	goto	u9040
  2944   00393A                     u9041:
  2945   00393A  0E01               	movlw	1
  2946   00393C  EFA1  F01C         	goto	u9050
  2947   003940                     u9040:
  2948   003940  0E00               	movlw	0
  2949   003942                     u9050:
  2950   003942  0012               	return		;indir
  2951   003944                     u9029:
  2952   003944                     
  2953                           ;GPIO.c: 74:         }
  2954   003944  4A25               	infsnz	runGPIO@j^0,f,c
  2955   003946  2A26               	incf	(runGPIO@j+1)^0,f,c
  2956   003948  BE26               	btfsc	(runGPIO@j+1)^0,7,c
  2957   00394A  EFB0  F01C         	goto	u9061
  2958   00394E  5026               	movf	(runGPIO@j+1)^0,w,c
  2959   003950  E109               	bnz	u9060
  2960   003952  0E06               	movlw	6
  2961   003954  5C25               	subwf	runGPIO@j^0,w,c
  2962   003956  A0D8               	btfss	status,0,c
  2963   003958  EFB0  F01C         	goto	u9061
  2964   00395C  EFB2  F01C         	goto	u9060
  2965   003960                     u9061:
  2966   003960  EF75  F01C         	goto	l7082
  2967   003964                     u9060:
  2968   003964                     
  2969                           ;GPIO.c: 75:         _delay((unsigned long)((400)*(32E6/4000.0)));
  2970   003964  0E11               	movlw	17
  2971   003966  6E08               	movwf	(??_runGPIO+1)^0,c
  2972   003968  0E3C               	movlw	60
  2973   00396A  6E07               	movwf	??_runGPIO^0,c
  2974   00396C  0ECB               	movlw	203
  2975   00396E                     u9587:
  2976   00396E  2EE8               	decfsz	wreg,f,c
  2977   003970  D7FE               	bra	u9587
  2978   003972  2E07               	decfsz	??_runGPIO^0,f,c
  2979   003974  D7FC               	bra	u9587
  2980   003976  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  2981   003978  D7FA               	bra	u9587
  2982   00397A  0000               	nop	
  2983   00397C                     
  2984                           ;GPIO.c: 76:         GPIOi++;
  2985   00397C  2A24               	incf	runGPIO@GPIOi^0,f,c
  2986                           
  2987                           ;GPIO.c: 77:         if(GPIOi == numberOfStates){
  2988   00397E  5024               	movf	runGPIO@GPIOi^0,w,c
  2989   003980  6E07               	movwf	??_runGPIO^0,c
  2990   003982  6A08               	clrf	(??_runGPIO+1)^0,c
  2991   003984  5022               	movf	runGPIO@numberOfStates^0,w,c
  2992   003986  1807               	xorwf	??_runGPIO^0,w,c
  2993   003988  E107               	bnz	u9071
  2994   00398A  5023               	movf	(runGPIO@numberOfStates+1)^0,w,c
  2995   00398C  1808               	xorwf	(??_runGPIO+1)^0,w,c
  2996   00398E  A4D8               	btfss	status,2,c
  2997   003990  EFCC  F01C         	goto	u9071
  2998   003994  EFCE  F01C         	goto	u9070
  2999   003998                     u9071:
  3000   003998  EFD0  F01C         	goto	l344
  3001   00399C                     u9070:
  3002   00399C                     
  3003                           ;GPIO.c: 78:             GPIOi = 0;
  3004   00399C  0E00               	movlw	0
  3005   00399E  6E24               	movwf	runGPIO@GPIOi^0,c
  3006   0039A0                     l344:
  3007                           
  3008                           ;GPIO.c: 70:     while(keepStateGPIO){
  3009   0039A0  0100               	movlb	0	; () banked
  3010   0039A2  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3011   0039A4  A4D8               	btfss	status,2,c
  3012   0039A6  EFD7  F01C         	goto	u9081
  3013   0039AA  EFD9  F01C         	goto	u9080
  3014   0039AE                     u9081:
  3015   0039AE  EF71  F01C         	goto	l7076
  3016   0039B2                     u9080:
  3017   0039B2                     
  3018                           ; BSR set to: 0
  3019                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  3020   0039B2  848C               	bsf	140,2,c	;volatile
  3021                           
  3022                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  3023   0039B4  868C               	bsf	140,3,c	;volatile
  3024                           
  3025                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  3026   0039B6  888B               	bsf	139,4,c	;volatile
  3027                           
  3028                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  3029   0039B8  888C               	bsf	140,4,c	;volatile
  3030                           
  3031                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  3032   0039BA  8A8C               	bsf	140,5,c	;volatile
  3033                           
  3034                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  3035   0039BC  8C8C               	bsf	140,6,c	;volatile
  3036                           
  3037                           ;GPIO.c: 89:     TMR1ON = 0;
  3038   0039BE  90CD               	bcf	4045,0,c	;volatile
  3039                           
  3040                           ;GPIO.c: 90:     TMR1IE = 0;
  3041   0039C0  909D               	bcf	3997,0,c	;volatile
  3042   0039C2                     
  3043                           ; BSR set to: 0
  3044                           ;GPIO.c: 91:     GPIOIE = 0;
  3045   0039C2  0E00               	movlw	0
  3046   0039C4  0101               	movlb	1	; () banked
  3047   0039C6  6F24               	movwf	_GPIOIE& (0+255),b
  3048   0039C8                     
  3049                           ; BSR set to: 1
  3050   0039C8  0012               	return		;funcret
  3051   0039CA                     __end_of_runGPIO:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _LED5_Control *****************
  3055 ;; Defined at:
  3056 ;;		line 14 in file "GPIO.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  state           1    wreg     unsigned char 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  state           1    5[COMRAM] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;Total ram usage:        1 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_runGPIO
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text5
  3085   004924                     __ptext5:
  3086                           	callstack 0
  3087   004924                     _LED5_Control:
  3088                           	callstack 28
  3089                           
  3090                           ; BSR set to: 1
  3091                           ;incstack = 0
  3092                           ;LED5_Control@state stored from wreg
  3093   004924  6E06               	movwf	LED5_Control@state^0,c
  3094   004926  B006               	btfsc	LED5_Control@state^0,0,c
  3095   004928  D002               	bra	u8925
  3096   00492A  9A8C               	bcf	140,5,c	;volatile
  3097   00492C  D001               	bra	u8926
  3098   00492E                     u8925:
  3099   00492E  8A8C               	bsf	140,5,c	;volatile
  3100   004930                     u8926:
  3101   004930  0012               	return		;funcret
  3102   004932                     __end_of_LED5_Control:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _LED4_Control *****************
  3106 ;; Defined at:
  3107 ;;		line 13 in file "GPIO.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  state           1    wreg     unsigned char 
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;  state           1    5[COMRAM] unsigned char 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;Total ram usage:        1 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_runGPIO
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text6
  3136   004932                     __ptext6:
  3137                           	callstack 0
  3138   004932                     _LED4_Control:
  3139                           	callstack 28
  3140                           
  3141                           ;incstack = 0
  3142                           ;LED4_Control@state stored from wreg
  3143   004932  6E06               	movwf	LED4_Control@state^0,c
  3144   004934  B006               	btfsc	LED4_Control@state^0,0,c
  3145   004936  D002               	bra	u8915
  3146   004938  988C               	bcf	140,4,c	;volatile
  3147   00493A  D001               	bra	u8916
  3148   00493C                     u8915:
  3149   00493C  888C               	bsf	140,4,c	;volatile
  3150   00493E                     u8916:
  3151   00493E  0012               	return		;funcret
  3152   004940                     __end_of_LED4_Control:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _LED3_Control *****************
  3156 ;; Defined at:
  3157 ;;		line 12 in file "GPIO.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  state           1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  state           1    5[COMRAM] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_runGPIO
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text7
  3186   004940                     __ptext7:
  3187                           	callstack 0
  3188   004940                     _LED3_Control:
  3189                           	callstack 28
  3190                           
  3191                           ;incstack = 0
  3192                           ;LED3_Control@state stored from wreg
  3193   004940  6E06               	movwf	LED3_Control@state^0,c
  3194   004942  B006               	btfsc	LED3_Control@state^0,0,c
  3195   004944  D002               	bra	u8905
  3196   004946  988B               	bcf	139,4,c	;volatile
  3197   004948  D001               	bra	u8906
  3198   00494A                     u8905:
  3199   00494A  888B               	bsf	139,4,c	;volatile
  3200   00494C                     u8906:
  3201   00494C  0012               	return		;funcret
  3202   00494E                     __end_of_LED3_Control:
  3203                           	callstack 0
  3204                           
  3205 ;; *************** function _LED2_Control *****************
  3206 ;; Defined at:
  3207 ;;		line 11 in file "GPIO.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  state           1    wreg     unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  state           1    5[COMRAM] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;Total ram usage:        1 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_runGPIO
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text8
  3236   00494E                     __ptext8:
  3237                           	callstack 0
  3238   00494E                     _LED2_Control:
  3239                           	callstack 28
  3240                           
  3241                           ;incstack = 0
  3242                           ;LED2_Control@state stored from wreg
  3243   00494E  6E06               	movwf	LED2_Control@state^0,c
  3244   004950  B006               	btfsc	LED2_Control@state^0,0,c
  3245   004952  D002               	bra	u8895
  3246   004954  968C               	bcf	140,3,c	;volatile
  3247   004956  D001               	bra	u8896
  3248   004958                     u8895:
  3249   004958  868C               	bsf	140,3,c	;volatile
  3250   00495A                     u8896:
  3251   00495A  0012               	return		;funcret
  3252   00495C                     __end_of_LED2_Control:
  3253                           	callstack 0
  3254                           
  3255 ;; *************** function _LED1_Control *****************
  3256 ;; Defined at:
  3257 ;;		line 10 in file "GPIO.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  state           1    wreg     unsigned char 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  state           1    5[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        1 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 1
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_runGPIO
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text9
  3286   00495C                     __ptext9:
  3287                           	callstack 0
  3288   00495C                     _LED1_Control:
  3289                           	callstack 28
  3290                           
  3291                           ;incstack = 0
  3292                           ;LED1_Control@state stored from wreg
  3293   00495C  6E06               	movwf	LED1_Control@state^0,c
  3294   00495E  B006               	btfsc	LED1_Control@state^0,0,c
  3295   004960  D002               	bra	u8885
  3296   004962  948C               	bcf	140,2,c	;volatile
  3297   004964  D001               	bra	u8886
  3298   004966                     u8885:
  3299   004966  848C               	bsf	140,2,c	;volatile
  3300   004968                     u8886:
  3301   004968  0012               	return		;funcret
  3302   00496A                     __end_of_LED1_Control:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _LED6_Control *****************
  3306 ;; Defined at:
  3307 ;;		line 15 in file "GPIO.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  state           1    wreg     unsigned char 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  state           1    5[COMRAM] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 1
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_runGPIO
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text10
  3336   00496A                     __ptext10:
  3337                           	callstack 0
  3338   00496A                     _LED6_Control:
  3339                           	callstack 28
  3340                           
  3341                           ;incstack = 0
  3342                           ;LED6_Control@state stored from wreg
  3343   00496A  6E06               	movwf	LED6_Control@state^0,c
  3344   00496C  B006               	btfsc	LED6_Control@state^0,0,c
  3345   00496E  D002               	bra	u8935
  3346   004970  9C8C               	bcf	140,6,c	;volatile
  3347   004972  D001               	bra	u8936
  3348   004974                     u8935:
  3349   004974  8C8C               	bsf	140,6,c	;volatile
  3350   004976                     u8936:
  3351   004976  0012               	return		;funcret
  3352   004978                     __end_of_LED6_Control:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _runDAC *****************
  3356 ;; Defined at:
  3357 ;;		line 10 in file "DAC.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  DACindex        1  125[BANK0 ] unsigned char 
  3362 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  3363 ;;  keepState       1  123[BANK0 ] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;Total ram usage:       12 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 9
  3380 ;; This function calls:
  3381 ;;		_SPI_write
  3382 ;;		___fladd
  3383 ;;		___fldiv
  3384 ;;		___flmul
  3385 ;;		___fltol
  3386 ;;		___xxtofl
  3387 ;;		_printf
  3388 ;;		_sinf
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text11
  3395   00247A                     __ptext11:
  3396                           	callstack 0
  3397   00247A                     _runDAC:
  3398                           	callstack 21
  3399   00247A                     
  3400                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  3401   00247A  8094               	bsf	148,0,c	;volatile
  3402                           
  3403                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  3404   00247C  8892               	bsf	146,4,c	;volatile
  3405                           
  3406                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  3407   00247E  8692               	bsf	146,3,c	;volatile
  3408                           
  3409                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  3410   002480  8492               	bsf	146,2,c	;volatile
  3411                           
  3412                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  3413   002482  010F               	movlb	15	; () banked
  3414   002484  9738               	bcf	56,3,b	;volatile
  3415                           
  3416                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  3417   002486  9538               	bcf	56,2,b	;volatile
  3418                           
  3419                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  3420   002488  9693               	bcf	147,3,c	;volatile
  3421                           
  3422                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  3423   00248A  9694               	bcf	148,3,c	;volatile
  3424                           
  3425                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  3426   00248C  9A94               	bcf	148,5,c	;volatile
  3427   00248E                     
  3428                           ; BSR set to: 15
  3429                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  3430   00248E  50C6               	movf	198,w,c	;volatile
  3431   002490  0BF0               	andlw	-16
  3432   002492  0902               	iorlw	2
  3433   002494  6EC6               	movwf	198,c	;volatile
  3434   002496                     
  3435                           ; BSR set to: 15
  3436                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  3437   002496  98C6               	bcf	198,4,c	;volatile
  3438   002498                     
  3439                           ; BSR set to: 15
  3440                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  3441   002498  8CC7               	bsf	199,6,c	;volatile
  3442   00249A                     
  3443                           ; BSR set to: 15
  3444                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  3445   00249A  8AC6               	bsf	198,5,c	;volatile
  3446   00249C                     
  3447                           ; BSR set to: 15
  3448                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  3449   00249C  8139               	bsf	57,0,b	;volatile
  3450   00249E                     
  3451                           ; BSR set to: 15
  3452                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  3453   00249E  9EC0               	bcf	192,7,c	;volatile
  3454                           
  3455                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  3456   0024A0  50C0               	movf	192,w,c	;volatile
  3457   0024A2  0BF8               	andlw	-8
  3458   0024A4  0906               	iorlw	6
  3459   0024A6  6EC0               	movwf	192,c	;volatile
  3460                           
  3461                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  3462   0024A8  50C0               	movf	192,w,c	;volatile
  3463   0024AA  0BC7               	andlw	-57
  3464   0024AC  0930               	iorlw	48
  3465   0024AE  6EC0               	movwf	192,c	;volatile
  3466   0024B0                     
  3467                           ; BSR set to: 15
  3468                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  3469   0024B0  80C2               	bsf	194,0,c	;volatile
  3470                           
  3471                           ;DAC.c: 38:     SPBRG1 = 25;
  3472   0024B2  0E19               	movlw	25
  3473   0024B4  6EAF               	movwf	175,c	;volatile
  3474   0024B6                     
  3475                           ; BSR set to: 15
  3476                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  3477   0024B6  8EAB               	bsf	171,7,c	;volatile
  3478   0024B8                     
  3479                           ; BSR set to: 15
  3480                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  3481   0024B8  98AC               	bcf	172,4,c	;volatile
  3482   0024BA                     
  3483                           ; BSR set to: 15
  3484                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  3485   0024BA  8AAC               	bsf	172,5,c	;volatile
  3486   0024BC                     
  3487                           ; BSR set to: 15
  3488                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  3489   0024BC  88AB               	bsf	171,4,c	;volatile
  3490   0024BE                     
  3491                           ; BSR set to: 15
  3492                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  3493   0024BE  868A               	bsf	138,3,c	;volatile
  3494                           
  3495                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  3496   0024C0  50C2               	movf	194,w,c	;volatile
  3497   0024C2  0B83               	andlw	-125
  3498   0024C4  0930               	iorlw	48
  3499   0024C6  6EC2               	movwf	194,c	;volatile
  3500                           
  3501                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  3502   0024C8  0E01               	movlw	1
  3503   0024CA  0100               	movlb	0	; () banked
  3504   0024CC  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3505                           
  3506                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  3507   0024CE  0E01               	movlw	1
  3508   0024D0  6FDB               	movwf	runDAC@keepState& (0+255),b
  3509                           
  3510                           ;DAC.c: 52:     uint8_t DACindex = 0;
  3511   0024D2  0E00               	movlw	0
  3512   0024D4  6FDD               	movwf	runDAC@DACindex& (0+255),b
  3513                           
  3514                           ;DAC.c: 54:     while(keepState){
  3515   0024D6  EFA7  F013         	goto	l7318
  3516   0024DA                     l7276:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;DAC.c: 57:                 if(DACindex<255/2){
  3520   0024DA  0E7F               	movlw	127
  3521   0024DC  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  3522   0024DE  EF73  F012         	goto	u9331
  3523   0024E2  EF75  F012         	goto	u9330
  3524   0024E6                     u9331:
  3525   0024E6  EF9D  F012         	goto	l7280
  3526   0024EA                     u9330:
  3527   0024EA                     
  3528                           ; BSR set to: 0
  3529                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  3530   0024EA  0E33               	movlw	51
  3531   0024EC  6E18               	movwf	___flmul@a^0,c
  3532   0024EE  0E33               	movlw	51
  3533   0024F0  6E19               	movwf	(___flmul@a+1)^0,c
  3534   0024F2  0EF3               	movlw	243
  3535   0024F4  6E1A               	movwf	(___flmul@a+2)^0,c
  3536   0024F6  0E3F               	movlw	63
  3537   0024F8  6E1B               	movwf	(___flmul@a+3)^0,c
  3538   0024FA  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3539   0024FC  6E06               	movwf	___xxtofl@val^0,c
  3540   0024FE  6A07               	clrf	(___xxtofl@val+1)^0,c
  3541   002500  6A08               	clrf	(___xxtofl@val+2)^0,c
  3542   002502  6A09               	clrf	(___xxtofl@val+3)^0,c
  3543   002504  0E01               	movlw	1
  3544   002506  EC0C  F019         	call	___xxtofl
  3545   00250A  C006  F014         	movff	?___xxtofl,___flmul@b
  3546   00250E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3547   002512  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3548   002516  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3549   00251A  EC6F  F00A         	call	___flmul	;wreg free
  3550   00251E  C014  F064         	movff	?___flmul,___fltol@f1
  3551   002522  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3552   002526  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3553   00252A  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3554   00252E  EC11  F01E         	call	___fltol	;wreg free
  3555   002532  0100               	movlb	0	; () banked
  3556   002534  5164               	movf	?___fltol& (0+255),w,b
  3557   002536  EC7B  F023         	call	_SPI_write
  3558   00253A                     l7280:
  3559                           
  3560                           ;DAC.c: 60:                 if(DACindex>=255/2){
  3561   00253A  0E7E               	movlw	126
  3562   00253C  0100               	movlb	0	; () banked
  3563   00253E  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  3564   002540  EFA4  F012         	goto	u9341
  3565   002544  EFA6  F012         	goto	u9340
  3566   002548                     u9341:
  3567   002548  EF62  F013         	goto	l215
  3568   00254C                     u9340:
  3569   00254C                     
  3570                           ; BSR set to: 0
  3571                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  3572   00254C  0E33               	movlw	51
  3573   00254E  6E18               	movwf	___flmul@a^0,c
  3574   002550  0E33               	movlw	51
  3575   002552  6E19               	movwf	(___flmul@a+1)^0,c
  3576   002554  0EF3               	movlw	243
  3577   002556  6E1A               	movwf	(___flmul@a+2)^0,c
  3578   002558  0E3F               	movlw	63
  3579   00255A  6E1B               	movwf	(___flmul@a+3)^0,c
  3580   00255C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3581   00255E  0AFF               	xorlw	255
  3582   002560  6FD2               	movwf	??_runDAC& (0+255),b
  3583   002562  51D2               	movf	??_runDAC& (0+255),w,b
  3584   002564  6E06               	movwf	___xxtofl@val^0,c
  3585   002566  6A07               	clrf	(___xxtofl@val+1)^0,c
  3586   002568  6A08               	clrf	(___xxtofl@val+2)^0,c
  3587   00256A  6A09               	clrf	(___xxtofl@val+3)^0,c
  3588   00256C  0E01               	movlw	1
  3589   00256E  EC0C  F019         	call	___xxtofl
  3590   002572  C006  F014         	movff	?___xxtofl,___flmul@b
  3591   002576  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3592   00257A  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3593   00257E  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3594   002582  EC6F  F00A         	call	___flmul	;wreg free
  3595   002586  C014  F064         	movff	?___flmul,___fltol@f1
  3596   00258A  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3597   00258E  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3598   002592  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3599   002596  EC11  F01E         	call	___fltol	;wreg free
  3600   00259A  0100               	movlb	0	; () banked
  3601   00259C  5164               	movf	?___fltol& (0+255),w,b
  3602   00259E  EC7B  F023         	call	_SPI_write
  3603   0025A2  EF62  F013         	goto	l215
  3604   0025A6                     l7284:
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3608   0025A6  0E00               	movlw	0
  3609   0025A8  6E31               	movwf	___fldiv@a^0,c
  3610   0025AA  0E00               	movlw	0
  3611   0025AC  6E32               	movwf	(___fldiv@a+1)^0,c
  3612   0025AE  0E7F               	movlw	127
  3613   0025B0  6E33               	movwf	(___fldiv@a+2)^0,c
  3614   0025B2  0E43               	movlw	67
  3615   0025B4  6E34               	movwf	(___fldiv@a+3)^0,c
  3616   0025B6  0EC3               	movlw	195
  3617   0025B8  6E18               	movwf	___flmul@a^0,c
  3618   0025BA  0EF5               	movlw	245
  3619   0025BC  6E19               	movwf	(___flmul@a+1)^0,c
  3620   0025BE  0EC8               	movlw	200
  3621   0025C0  6E1A               	movwf	(___flmul@a+2)^0,c
  3622   0025C2  0E40               	movlw	64
  3623   0025C4  6E1B               	movwf	(___flmul@a+3)^0,c
  3624   0025C6  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3625   0025C8  6E06               	movwf	___xxtofl@val^0,c
  3626   0025CA  6A07               	clrf	(___xxtofl@val+1)^0,c
  3627   0025CC  6A08               	clrf	(___xxtofl@val+2)^0,c
  3628   0025CE  6A09               	clrf	(___xxtofl@val+3)^0,c
  3629   0025D0  0E01               	movlw	1
  3630   0025D2  EC0C  F019         	call	___xxtofl
  3631   0025D6  C006  F014         	movff	?___xxtofl,___flmul@b
  3632   0025DA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3633   0025DE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3634   0025E2  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3635   0025E6  EC6F  F00A         	call	___flmul	;wreg free
  3636   0025EA  C014  F02D         	movff	?___flmul,___fldiv@b
  3637   0025EE  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3638   0025F2  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3639   0025F6  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3640   0025FA  EC70  F010         	call	___fldiv	;wreg free
  3641   0025FE  C02D  F0D3         	movff	?___fldiv,_runDAC$4117
  3642   002602  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4117+1
  3643   002606  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4117+2
  3644   00260A  C030  F0D6         	movff	?___fldiv+3,_runDAC$4117+3
  3645   00260E                     
  3646                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3647   00260E  C0D3  F0A4         	movff	_runDAC$4117,sinf@x
  3648   002612  C0D4  F0A5         	movff	_runDAC$4117+1,sinf@x+1
  3649   002616  C0D5  F0A6         	movff	_runDAC$4117+2,sinf@x+2
  3650   00261A  C0D6  F0A7         	movff	_runDAC$4117+3,sinf@x+3
  3651   00261E  EC89  F005         	call	_sinf	;wreg free
  3652   002622  C0A4  F0D7         	movff	?_sinf,_runDAC$4118
  3653   002626  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4118+1
  3654   00262A  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4118+2
  3655   00262E  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4118+3
  3656   002632                     
  3657                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3658   002632  0E00               	movlw	0
  3659   002634  6E4A               	movwf	___fladd@a^0,c
  3660   002636  0E00               	movlw	0
  3661   002638  6E4B               	movwf	(___fladd@a+1)^0,c
  3662   00263A  0EFE               	movlw	254
  3663   00263C  6E4C               	movwf	(___fladd@a+2)^0,c
  3664   00263E  0E42               	movlw	66
  3665   002640  6E4D               	movwf	(___fladd@a+3)^0,c
  3666   002642  0E00               	movlw	0
  3667   002644  6E18               	movwf	___flmul@a^0,c
  3668   002646  0E00               	movlw	0
  3669   002648  6E19               	movwf	(___flmul@a+1)^0,c
  3670   00264A  0EFE               	movlw	254
  3671   00264C  6E1A               	movwf	(___flmul@a+2)^0,c
  3672   00264E  0E42               	movlw	66
  3673   002650  6E1B               	movwf	(___flmul@a+3)^0,c
  3674   002652  C0D7  F014         	movff	_runDAC$4118,___flmul@b
  3675   002656  C0D8  F015         	movff	_runDAC$4118+1,___flmul@b+1
  3676   00265A  C0D9  F016         	movff	_runDAC$4118+2,___flmul@b+2
  3677   00265E  C0DA  F017         	movff	_runDAC$4118+3,___flmul@b+3
  3678   002662  EC6F  F00A         	call	___flmul	;wreg free
  3679   002666  C014  F046         	movff	?___flmul,___fladd@b
  3680   00266A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  3681   00266E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  3682   002672  C017  F049         	movff	?___flmul+3,___fladd@b+3
  3683   002676  EC0E  F008         	call	___fladd	;wreg free
  3684   00267A  C046  F064         	movff	?___fladd,___fltol@f1
  3685   00267E  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  3686   002682  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  3687   002686  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  3688   00268A  EC11  F01E         	call	___fltol	;wreg free
  3689   00268E  0100               	movlb	0	; () banked
  3690   002690  5164               	movf	?___fltol& (0+255),w,b
  3691   002692  EC7B  F023         	call	_SPI_write
  3692                           
  3693                           ;DAC.c: 66:                 break;
  3694   002696  EF62  F013         	goto	l215
  3695   00269A                     l7290:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  3699   00269A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3700   00269C  0AFF               	xorlw	255
  3701   00269E  EC7B  F023         	call	_SPI_write
  3702                           
  3703                           ;DAC.c: 69:                 break;
  3704   0026A2  EF62  F013         	goto	l215
  3705   0026A6                     l7294:
  3706                           
  3707                           ; BSR set to: 0
  3708   0026A6  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  3709                           
  3710                           ; Switch size 1, requested type "simple"
  3711                           ; Number of cases is 3, Range of values is 1 to 3
  3712                           ; switch strategies available:
  3713                           ; Name         Instructions Cycles
  3714                           ; simple_byte           10     6 (average)
  3715                           ;	Chosen strategy is simple_byte
  3716   0026A8  0A01               	xorlw	1	; case 1
  3717   0026AA  B4D8               	btfsc	status,2,c
  3718   0026AC  EF6D  F012         	goto	l7276
  3719   0026B0  0A03               	xorlw	3	; case 2
  3720   0026B2  B4D8               	btfsc	status,2,c
  3721   0026B4  EFD3  F012         	goto	l7284
  3722   0026B8  0A01               	xorlw	1	; case 3
  3723   0026BA  B4D8               	btfsc	status,2,c
  3724   0026BC  EF4D  F013         	goto	l7290
  3725   0026C0  EF62  F013         	goto	l215
  3726   0026C4                     l215:
  3727                           
  3728                           ;DAC.c: 71:         GODONE = 1;
  3729   0026C4  82C2               	bsf	4034,1,c	;volatile
  3730   0026C6                     l218:
  3731   0026C6  B2C2               	btfsc	4034,1,c	;volatile
  3732   0026C8  EF68  F013         	goto	u9351
  3733   0026CC  EF6A  F013         	goto	u9350
  3734   0026D0                     u9351:
  3735   0026D0  EF63  F013         	goto	l218
  3736   0026D4                     u9350:
  3737   0026D4                     
  3738                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  3739   0026D4  0EE5               	movlw	low STR_10
  3740   0026D6  0100               	movlb	0	; () banked
  3741   0026D8  6FCE               	movwf	printf@fmt& (0+255),b
  3742   0026DA  0EFF               	movlw	high STR_10
  3743   0026DC  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  3744   0026DE  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  3745   0026E2  6BD1               	clrf	(?_printf+3)& (0+255),b
  3746   0026E4  EC77  F024         	call	_printf	;wreg free
  3747   0026E8                     
  3748                           ;DAC.c: 75:         if(PORTCbits.RC0){
  3749   0026E8  A082               	btfss	130,0,c	;volatile
  3750   0026EA  EF79  F013         	goto	u9361
  3751   0026EE  EF7B  F013         	goto	u9360
  3752   0026F2                     u9361:
  3753   0026F2  EF7E  F013         	goto	l7302
  3754   0026F6                     u9360:
  3755   0026F6                     
  3756                           ;DAC.c: 76:             selectModeDAC = 1;
  3757   0026F6  0E01               	movlw	1
  3758   0026F8  0100               	movlb	0	; () banked
  3759   0026FA  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3760   0026FC                     l7302:
  3761                           
  3762                           ;DAC.c: 78:         if(PORTAbits.RA4){
  3763   0026FC  A880               	btfss	128,4,c	;volatile
  3764   0026FE  EF83  F013         	goto	u9371
  3765   002702  EF85  F013         	goto	u9370
  3766   002706                     u9371:
  3767   002706  EF88  F013         	goto	l7306
  3768   00270A                     u9370:
  3769   00270A                     
  3770                           ;DAC.c: 79:             selectModeDAC = 2;
  3771   00270A  0E02               	movlw	2
  3772   00270C  0100               	movlb	0	; () banked
  3773   00270E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3774   002710                     l7306:
  3775                           
  3776                           ;DAC.c: 81:         if(PORTAbits.RA3){
  3777   002710  A680               	btfss	128,3,c	;volatile
  3778   002712  EF8D  F013         	goto	u9381
  3779   002716  EF8F  F013         	goto	u9380
  3780   00271A                     u9381:
  3781   00271A  EF92  F013         	goto	l7310
  3782   00271E                     u9380:
  3783   00271E                     
  3784                           ;DAC.c: 82:             selectModeDAC = 3;
  3785   00271E  0E03               	movlw	3
  3786   002720  0100               	movlb	0	; () banked
  3787   002722  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3788   002724                     l7310:
  3789                           
  3790                           ;DAC.c: 84:         if(PORTAbits.RA2){
  3791   002724  A480               	btfss	128,2,c	;volatile
  3792   002726  EF97  F013         	goto	u9391
  3793   00272A  EF99  F013         	goto	u9390
  3794   00272E                     u9391:
  3795   00272E  EF9C  F013         	goto	l7314
  3796   002732                     u9390:
  3797   002732                     
  3798                           ;DAC.c: 85:             keepState = 0;
  3799   002732  0E00               	movlw	0
  3800   002734  0100               	movlb	0	; () banked
  3801   002736  6FDB               	movwf	runDAC@keepState& (0+255),b
  3802   002738                     l7314:
  3803                           
  3804                           ;DAC.c: 87:         DACindex++;
  3805   002738  0100               	movlb	0	; () banked
  3806   00273A  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  3807   00273C                     
  3808                           ; BSR set to: 0
  3809                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  3810   00273C  0E68               	movlw	104
  3811   00273E  0100               	movlb	0	; () banked
  3812   002740  6FD2               	movwf	??_runDAC& (0+255),b
  3813   002742  0EE4               	movlw	228
  3814   002744                     u9597:
  3815   002744  2EE8               	decfsz	wreg,f,c
  3816   002746  D7FE               	bra	u9597
  3817   002748  2FD2               	decfsz	??_runDAC& (0+255),f,b
  3818   00274A  D7FC               	bra	u9597
  3819   00274C  0000               	nop	
  3820   00274E                     l7318:
  3821                           
  3822                           ;DAC.c: 54:     while(keepState){
  3823   00274E  0100               	movlb	0	; () banked
  3824   002750  51DB               	movf	runDAC@keepState& (0+255),w,b
  3825   002752  A4D8               	btfss	status,2,c
  3826   002754  EFAE  F013         	goto	u9401
  3827   002758  EFB0  F013         	goto	u9400
  3828   00275C                     u9401:
  3829   00275C  EF53  F013         	goto	l7294
  3830   002760                     u9400:
  3831   002760                     
  3832                           ; BSR set to: 0
  3833   002760  0012               	return		;funcret
  3834   002762                     __end_of_runDAC:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function _sinf *****************
  3838 ;; Defined at:
  3839 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  x               4   68[BANK0 ] float 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  ux              4   90[BANK0 ] struct .
  3844 ;;  y               4   86[BANK0 ] struct .
  3845 ;;  sign            1   81[BANK0 ] _Bool 
  3846 ;;  n               1   80[BANK0 ] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  4   68[BANK0 ] float 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:       26 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 4
  3863 ;; This function calls:
  3864 ;;		___cosdf
  3865 ;;		___fladd
  3866 ;;		___flneg
  3867 ;;		___rem_pio2f
  3868 ;;		___sindf
  3869 ;; This function is called by:
  3870 ;;		_runDAC
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text12
  3875   000B12                     __ptext12:
  3876                           	callstack 0
  3877   000B12                     _sinf:
  3878                           	callstack 25
  3879   000B12  C0A4  F0BA         	movff	sinf@x,sinf@ux
  3880   000B16  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  3881   000B1A  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  3882   000B1E  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  3883   000B22  0100               	movlb	0	; () banked
  3884   000B24  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  3885   000B26  EF97  F005         	goto	u8751
  3886   000B2A  EF9A  F005         	goto	u8750
  3887   000B2E                     u8751:
  3888   000B2E  0E01               	movlw	1
  3889   000B30  EF9B  F005         	goto	u8760
  3890   000B34                     u8750:
  3891   000B34  0E00               	movlw	0
  3892   000B36                     u8760:
  3893   000B36  6FB1               	movwf	sinf@sign& (0+255),b
  3894   000B38                     
  3895                           ; BSR set to: 0
  3896   000B38  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  3897   000B3A                     
  3898                           ; BSR set to: 0
  3899   000B3A  0EDB               	movlw	219
  3900   000B3C  5DBA               	subwf	sinf@ux& (0+255),w,b
  3901   000B3E  0E0F               	movlw	15
  3902   000B40  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3903   000B42  0E49               	movlw	73
  3904   000B44  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3905   000B46  0E3F               	movlw	63
  3906   000B48  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3907   000B4A  B0D8               	btfsc	status,0,c
  3908   000B4C  EFAA  F005         	goto	u8771
  3909   000B50  EFAC  F005         	goto	u8770
  3910   000B54                     u8771:
  3911   000B54  EFD5  F005         	goto	l6888
  3912   000B58                     u8770:
  3913   000B58                     
  3914                           ; BSR set to: 0
  3915   000B58  0E80               	movlw	128
  3916   000B5A  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  3917   000B5C  0E39               	movlw	57
  3918   000B5E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3919   000B60  B0D8               	btfsc	status,0,c
  3920   000B62  EFB5  F005         	goto	u8781
  3921   000B66  EFB7  F005         	goto	u8780
  3922   000B6A                     u8781:
  3923   000B6A  EFC1  F005         	goto	l6884
  3924   000B6E                     u8780:
  3925   000B6E                     
  3926                           ; BSR set to: 0
  3927   000B6E  C0A4  F0A4         	movff	sinf@x,?_sinf
  3928   000B72  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  3929   000B76  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  3930   000B7A  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  3931   000B7E  EF0D  F008         	goto	l1494
  3932   000B82                     l6884:
  3933                           
  3934                           ; BSR set to: 0
  3935   000B82  C0A4  F064         	movff	sinf@x,___sindf@x
  3936   000B86  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  3937   000B8A  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  3938   000B8E  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  3939   000B92  ECE0  F014         	call	___sindf	;wreg free
  3940   000B96  C064  F0A4         	movff	?___sindf,?_sinf
  3941   000B9A  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  3942   000B9E  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  3943   000BA2  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  3944   000BA6  EF0D  F008         	goto	l1494
  3945   000BAA                     l6888:
  3946                           
  3947                           ; BSR set to: 0
  3948   000BAA  0ED2               	movlw	210
  3949   000BAC  5DBA               	subwf	sinf@ux& (0+255),w,b
  3950   000BAE  0E53               	movlw	83
  3951   000BB0  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3952   000BB2  0E7B               	movlw	123
  3953   000BB4  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3954   000BB6  0E40               	movlw	64
  3955   000BB8  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3956   000BBA  B0D8               	btfsc	status,0,c
  3957   000BBC  EFE2  F005         	goto	u8791
  3958   000BC0  EFE4  F005         	goto	u8790
  3959   000BC4                     u8791:
  3960   000BC4  EFC7  F006         	goto	l6918
  3961   000BC8                     u8790:
  3962   000BC8                     
  3963                           ; BSR set to: 0
  3964   000BC8  0EE4               	movlw	228
  3965   000BCA  5DBA               	subwf	sinf@ux& (0+255),w,b
  3966   000BCC  0ECB               	movlw	203
  3967   000BCE  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3968   000BD0  0E16               	movlw	22
  3969   000BD2  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3970   000BD4  0E40               	movlw	64
  3971   000BD6  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3972   000BD8  B0D8               	btfsc	status,0,c
  3973   000BDA  EFF1  F005         	goto	u8801
  3974   000BDE  EFF3  F005         	goto	u8800
  3975   000BE2                     u8801:
  3976   000BE2  EF61  F006         	goto	l6908
  3977   000BE6                     u8800:
  3978   000BE6                     
  3979                           ; BSR set to: 0
  3980   000BE6  51B1               	movf	sinf@sign& (0+255),w,b
  3981   000BE8  B4D8               	btfsc	status,2,c
  3982   000BEA  EFF9  F005         	goto	u8811
  3983   000BEE  EFFB  F005         	goto	u8810
  3984   000BF2                     u8811:
  3985   000BF2  EF33  F006         	goto	l6902
  3986   000BF6                     u8810:
  3987   000BF6                     
  3988                           ; BSR set to: 0
  3989   000BF6  0EDB               	movlw	219
  3990   000BF8  6E4A               	movwf	___fladd@a^0,c
  3991   000BFA  0E0F               	movlw	15
  3992   000BFC  6E4B               	movwf	(___fladd@a+1)^0,c
  3993   000BFE  0EC9               	movlw	201
  3994   000C00  6E4C               	movwf	(___fladd@a+2)^0,c
  3995   000C02  0E3F               	movlw	63
  3996   000C04  6E4D               	movwf	(___fladd@a+3)^0,c
  3997   000C06  C0A4  F046         	movff	sinf@x,___fladd@b
  3998   000C0A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3999   000C0E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4000   000C12  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4001   000C16  EC0E  F008         	call	___fladd	;wreg free
  4002   000C1A  C046  F0B2         	movff	?___fladd,_sinf$4120
  4003   000C1E  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  4004   000C22  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  4005   000C26  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  4006   000C2A                     l6896:
  4007   000C2A  C0B2  F064         	movff	_sinf$4120,___cosdf@x
  4008   000C2E  C0B3  F065         	movff	_sinf$4120+1,___cosdf@x+1
  4009   000C32  C0B4  F066         	movff	_sinf$4120+2,___cosdf@x+2
  4010   000C36  C0B5  F067         	movff	_sinf$4120+3,___cosdf@x+3
  4011   000C3A  EC0D  F018         	call	___cosdf	;wreg free
  4012   000C3E  C064  F080         	movff	?___cosdf,___flneg@f1
  4013   000C42  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4014   000C46  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4015   000C4A  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4016   000C4E  EC9A  F023         	call	___flneg	;wreg free
  4017   000C52  C080  F0A4         	movff	?___flneg,?_sinf
  4018   000C56  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4019   000C5A  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4020   000C5E  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4021   000C62  EF0D  F008         	goto	l1494
  4022   000C66                     l6902:
  4023                           
  4024                           ; BSR set to: 0
  4025   000C66  C0A4  F046         	movff	sinf@x,___fladd@b
  4026   000C6A  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4027   000C6E  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4028   000C72  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4029   000C76  0EDB               	movlw	219
  4030   000C78  6E4A               	movwf	___fladd@a^0,c
  4031   000C7A  0E0F               	movlw	15
  4032   000C7C  6E4B               	movwf	(___fladd@a+1)^0,c
  4033   000C7E  0EC9               	movlw	201
  4034   000C80  6E4C               	movwf	(___fladd@a+2)^0,c
  4035   000C82  0EBF               	movlw	191
  4036   000C84  6E4D               	movwf	(___fladd@a+3)^0,c
  4037   000C86  EC0E  F008         	call	___fladd	;wreg free
  4038   000C8A  C046  F0B2         	movff	?___fladd,_sinf$4120
  4039   000C8E  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  4040   000C92  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  4041   000C96  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  4042   000C9A                     l6904:
  4043   000C9A  C0B2  F064         	movff	_sinf$4120,___cosdf@x
  4044   000C9E  C0B3  F065         	movff	_sinf$4120+1,___cosdf@x+1
  4045   000CA2  C0B4  F066         	movff	_sinf$4120+2,___cosdf@x+2
  4046   000CA6  C0B5  F067         	movff	_sinf$4120+3,___cosdf@x+3
  4047   000CAA  EC0D  F018         	call	___cosdf	;wreg free
  4048   000CAE  C064  F0A4         	movff	?___cosdf,?_sinf
  4049   000CB2  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4050   000CB6  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4051   000CBA  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4052   000CBE  EF0D  F008         	goto	l1494
  4053   000CC2                     l6908:
  4054                           
  4055                           ; BSR set to: 0
  4056   000CC2  51B1               	movf	sinf@sign& (0+255),w,b
  4057   000CC4  A4D8               	btfss	status,2,c
  4058   000CC6  EF67  F006         	goto	u8821
  4059   000CCA  EF69  F006         	goto	u8820
  4060   000CCE                     u8821:
  4061   000CCE  EF8F  F006         	goto	l6912
  4062   000CD2                     u8820:
  4063   000CD2                     
  4064                           ; BSR set to: 0
  4065   000CD2  0EDB               	movlw	219
  4066   000CD4  6E4A               	movwf	___fladd@a^0,c
  4067   000CD6  0E0F               	movlw	15
  4068   000CD8  6E4B               	movwf	(___fladd@a+1)^0,c
  4069   000CDA  0E49               	movlw	73
  4070   000CDC  6E4C               	movwf	(___fladd@a+2)^0,c
  4071   000CDE  0EC0               	movlw	192
  4072   000CE0  6E4D               	movwf	(___fladd@a+3)^0,c
  4073   000CE2  C0A4  F046         	movff	sinf@x,___fladd@b
  4074   000CE6  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4075   000CEA  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4076   000CEE  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4077   000CF2  EC0E  F008         	call	___fladd	;wreg free
  4078   000CF6  C046  F080         	movff	?___fladd,___flneg@f1
  4079   000CFA  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4080   000CFE  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4081   000D02  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4082   000D06  EC9A  F023         	call	___flneg	;wreg free
  4083   000D0A  C080  F0A8         	movff	?___flneg,_sinf$3841
  4084   000D0E  C081  F0A9         	movff	?___flneg+1,_sinf$3841+1
  4085   000D12  C082  F0AA         	movff	?___flneg+2,_sinf$3841+2
  4086   000D16  C083  F0AB         	movff	?___flneg+3,_sinf$3841+3
  4087   000D1A  EFB3  F006         	goto	l6914
  4088   000D1E                     l6912:
  4089                           
  4090                           ; BSR set to: 0
  4091   000D1E  0EDB               	movlw	219
  4092   000D20  6E4A               	movwf	___fladd@a^0,c
  4093   000D22  0E0F               	movlw	15
  4094   000D24  6E4B               	movwf	(___fladd@a+1)^0,c
  4095   000D26  0E49               	movlw	73
  4096   000D28  6E4C               	movwf	(___fladd@a+2)^0,c
  4097   000D2A  0E40               	movlw	64
  4098   000D2C  6E4D               	movwf	(___fladd@a+3)^0,c
  4099   000D2E  C0A4  F046         	movff	sinf@x,___fladd@b
  4100   000D32  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4101   000D36  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4102   000D3A  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4103   000D3E  EC0E  F008         	call	___fladd	;wreg free
  4104   000D42  C046  F080         	movff	?___fladd,___flneg@f1
  4105   000D46  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  4106   000D4A  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  4107   000D4E  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  4108   000D52  EC9A  F023         	call	___flneg	;wreg free
  4109   000D56  C080  F0A8         	movff	?___flneg,_sinf$3841
  4110   000D5A  C081  F0A9         	movff	?___flneg+1,_sinf$3841+1
  4111   000D5E  C082  F0AA         	movff	?___flneg+2,_sinf$3841+2
  4112   000D62  C083  F0AB         	movff	?___flneg+3,_sinf$3841+3
  4113   000D66                     l6914:
  4114   000D66  C0A8  F064         	movff	_sinf$3841,___sindf@x
  4115   000D6A  C0A9  F065         	movff	_sinf$3841+1,___sindf@x+1
  4116   000D6E  C0AA  F066         	movff	_sinf$3841+2,___sindf@x+2
  4117   000D72  C0AB  F067         	movff	_sinf$3841+3,___sindf@x+3
  4118   000D76  ECE0  F014         	call	___sindf	;wreg free
  4119   000D7A  C064  F0A4         	movff	?___sindf,?_sinf
  4120   000D7E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4121   000D82  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4122   000D86  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4123   000D8A  EF0D  F008         	goto	l1494
  4124   000D8E                     l6918:
  4125                           
  4126                           ; BSR set to: 0
  4127   000D8E  0ED6               	movlw	214
  4128   000D90  5DBA               	subwf	sinf@ux& (0+255),w,b
  4129   000D92  0E31               	movlw	49
  4130   000D94  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4131   000D96  0EE2               	movlw	226
  4132   000D98  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4133   000D9A  0E40               	movlw	64
  4134   000D9C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4135   000D9E  B0D8               	btfsc	status,0,c
  4136   000DA0  EFD4  F006         	goto	u8831
  4137   000DA4  EFD6  F006         	goto	u8830
  4138   000DA8                     u8831:
  4139   000DA8  EF77  F007         	goto	l6948
  4140   000DAC                     u8830:
  4141   000DAC                     
  4142                           ; BSR set to: 0
  4143   000DAC  0EE0               	movlw	224
  4144   000DAE  5DBA               	subwf	sinf@ux& (0+255),w,b
  4145   000DB0  0EED               	movlw	237
  4146   000DB2  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  4147   000DB4  0EAF               	movlw	175
  4148   000DB6  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  4149   000DB8  0E40               	movlw	64
  4150   000DBA  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4151   000DBC  B0D8               	btfsc	status,0,c
  4152   000DBE  EFE3  F006         	goto	u8841
  4153   000DC2  EFE5  F006         	goto	u8840
  4154   000DC6                     u8841:
  4155   000DC6  EF25  F007         	goto	l6938
  4156   000DCA                     u8840:
  4157   000DCA                     
  4158                           ; BSR set to: 0
  4159   000DCA  51B1               	movf	sinf@sign& (0+255),w,b
  4160   000DCC  B4D8               	btfsc	status,2,c
  4161   000DCE  EFEB  F006         	goto	u8851
  4162   000DD2  EFED  F006         	goto	u8850
  4163   000DD6                     u8851:
  4164   000DD6  EF09  F007         	goto	l6932
  4165   000DDA                     u8850:
  4166   000DDA                     
  4167                           ; BSR set to: 0
  4168   000DDA  C0A4  F046         	movff	sinf@x,___fladd@b
  4169   000DDE  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4170   000DE2  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4171   000DE6  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4172   000DEA  0EE4               	movlw	228
  4173   000DEC  6E4A               	movwf	___fladd@a^0,c
  4174   000DEE  0ECB               	movlw	203
  4175   000DF0  6E4B               	movwf	(___fladd@a+1)^0,c
  4176   000DF2  0E96               	movlw	150
  4177   000DF4  6E4C               	movwf	(___fladd@a+2)^0,c
  4178   000DF6  0E40               	movlw	64
  4179   000DF8  6E4D               	movwf	(___fladd@a+3)^0,c
  4180   000DFA  EC0E  F008         	call	___fladd	;wreg free
  4181   000DFE  C046  F0B2         	movff	?___fladd,_sinf$4120
  4182   000E02  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  4183   000E06  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  4184   000E0A  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  4185   000E0E  EF4D  F006         	goto	l6904
  4186   000E12                     l6932:
  4187                           
  4188                           ; BSR set to: 0
  4189   000E12  0EE4               	movlw	228
  4190   000E14  6E4A               	movwf	___fladd@a^0,c
  4191   000E16  0ECB               	movlw	203
  4192   000E18  6E4B               	movwf	(___fladd@a+1)^0,c
  4193   000E1A  0E96               	movlw	150
  4194   000E1C  6E4C               	movwf	(___fladd@a+2)^0,c
  4195   000E1E  0EC0               	movlw	192
  4196   000E20  6E4D               	movwf	(___fladd@a+3)^0,c
  4197   000E22  C0A4  F046         	movff	sinf@x,___fladd@b
  4198   000E26  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4199   000E2A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4200   000E2E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4201   000E32  EC0E  F008         	call	___fladd	;wreg free
  4202   000E36  C046  F0B2         	movff	?___fladd,_sinf$4120
  4203   000E3A  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  4204   000E3E  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  4205   000E42  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  4206   000E46  EF15  F006         	goto	l6896
  4207   000E4A                     l6938:
  4208                           
  4209                           ; BSR set to: 0
  4210   000E4A  51B1               	movf	sinf@sign& (0+255),w,b
  4211   000E4C  A4D8               	btfss	status,2,c
  4212   000E4E  EF2B  F007         	goto	u8861
  4213   000E52  EF2D  F007         	goto	u8860
  4214   000E56                     u8861:
  4215   000E56  EF49  F007         	goto	l6942
  4216   000E5A                     u8860:
  4217   000E5A                     
  4218                           ; BSR set to: 0
  4219   000E5A  C0A4  F046         	movff	sinf@x,___fladd@b
  4220   000E5E  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4221   000E62  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4222   000E66  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4223   000E6A  0EDB               	movlw	219
  4224   000E6C  6E4A               	movwf	___fladd@a^0,c
  4225   000E6E  0E0F               	movlw	15
  4226   000E70  6E4B               	movwf	(___fladd@a+1)^0,c
  4227   000E72  0EC9               	movlw	201
  4228   000E74  6E4C               	movwf	(___fladd@a+2)^0,c
  4229   000E76  0EC0               	movlw	192
  4230   000E78  6E4D               	movwf	(___fladd@a+3)^0,c
  4231   000E7A  EC0E  F008         	call	___fladd	;wreg free
  4232   000E7E  C046  F0AC         	movff	?___fladd,_sinf$3842
  4233   000E82  C047  F0AD         	movff	?___fladd+1,_sinf$3842+1
  4234   000E86  C048  F0AE         	movff	?___fladd+2,_sinf$3842+2
  4235   000E8A  C049  F0AF         	movff	?___fladd+3,_sinf$3842+3
  4236   000E8E  EF63  F007         	goto	l6944
  4237   000E92                     l6942:
  4238                           
  4239                           ; BSR set to: 0
  4240   000E92  C0A4  F046         	movff	sinf@x,___fladd@b
  4241   000E96  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4242   000E9A  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4243   000E9E  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4244   000EA2  0EDB               	movlw	219
  4245   000EA4  6E4A               	movwf	___fladd@a^0,c
  4246   000EA6  0E0F               	movlw	15
  4247   000EA8  6E4B               	movwf	(___fladd@a+1)^0,c
  4248   000EAA  0EC9               	movlw	201
  4249   000EAC  6E4C               	movwf	(___fladd@a+2)^0,c
  4250   000EAE  0E40               	movlw	64
  4251   000EB0  6E4D               	movwf	(___fladd@a+3)^0,c
  4252   000EB2  EC0E  F008         	call	___fladd	;wreg free
  4253   000EB6  C046  F0AC         	movff	?___fladd,_sinf$3842
  4254   000EBA  C047  F0AD         	movff	?___fladd+1,_sinf$3842+1
  4255   000EBE  C048  F0AE         	movff	?___fladd+2,_sinf$3842+2
  4256   000EC2  C049  F0AF         	movff	?___fladd+3,_sinf$3842+3
  4257   000EC6                     l6944:
  4258   000EC6  C0AC  F064         	movff	_sinf$3842,___sindf@x
  4259   000ECA  C0AD  F065         	movff	_sinf$3842+1,___sindf@x+1
  4260   000ECE  C0AE  F066         	movff	_sinf$3842+2,___sindf@x+2
  4261   000ED2  C0AF  F067         	movff	_sinf$3842+3,___sindf@x+3
  4262   000ED6  ECE0  F014         	call	___sindf	;wreg free
  4263   000EDA  C064  F0A4         	movff	?___sindf,?_sinf
  4264   000EDE  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4265   000EE2  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4266   000EE6  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4267   000EEA  EF0D  F008         	goto	l1494
  4268   000EEE                     l6948:
  4269                           
  4270                           ; BSR set to: 0
  4271   000EEE  0E80               	movlw	128
  4272   000EF0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4273   000EF2  0E7F               	movlw	127
  4274   000EF4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4275   000EF6  A0D8               	btfss	status,0,c
  4276   000EF8  EF80  F007         	goto	u8871
  4277   000EFC  EF82  F007         	goto	u8870
  4278   000F00                     u8871:
  4279   000F00  EF94  F007         	goto	l6956
  4280   000F04                     u8870:
  4281   000F04                     
  4282                           ; BSR set to: 0
  4283   000F04  0EFF               	movlw	255
  4284   000F06  13BA               	iorwf	sinf@ux& (0+255),f,b
  4285   000F08  0EFF               	movlw	255
  4286   000F0A  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  4287   000F0C  0EFF               	movlw	255
  4288   000F0E  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  4289   000F10  0E00               	movlw	0
  4290   000F12  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  4291   000F14                     
  4292                           ; BSR set to: 0
  4293   000F14  C0BA  F0A4         	movff	sinf@ux,?_sinf
  4294   000F18  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  4295   000F1C  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  4296   000F20  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  4297   000F24  EF0D  F008         	goto	l1494
  4298   000F28                     l6956:
  4299                           
  4300                           ; BSR set to: 0
  4301   000F28  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  4302   000F2C  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  4303   000F30  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  4304   000F34  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  4305   000F38  0EB6               	movlw	low sinf@y
  4306   000F3A  6F88               	movwf	___rem_pio2f@y& (0+255),b
  4307   000F3C  EC8F  F00E         	call	___rem_pio2f	;wreg free
  4308   000F40  0100               	movlb	0	; () banked
  4309   000F42  5184               	movf	?___rem_pio2f& (0+255),w,b
  4310   000F44  0B03               	andlw	3
  4311   000F46  6FB0               	movwf	sinf@n& (0+255),b
  4312   000F48  EFFE  F007         	goto	l6974
  4313   000F4C                     l6958:
  4314                           
  4315                           ; BSR set to: 0
  4316   000F4C  C0B6  F080         	movff	sinf@y,___flneg@f1
  4317   000F50  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  4318   000F54  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  4319   000F58  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  4320   000F5C  EC9A  F023         	call	___flneg	;wreg free
  4321   000F60  C080  F0B6         	movff	?___flneg,sinf@y
  4322   000F64  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  4323   000F68  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  4324   000F6C  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  4325   000F70                     l6960:
  4326   000F70  C0B6  F064         	movff	sinf@y,___sindf@x
  4327   000F74  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  4328   000F78  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  4329   000F7C  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  4330   000F80  ECE0  F014         	call	___sindf	;wreg free
  4331   000F84  C064  F0A4         	movff	?___sindf,?_sinf
  4332   000F88  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4333   000F8C  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4334   000F90  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4335   000F94  EF0D  F008         	goto	l1494
  4336   000F98                     l6964:
  4337                           
  4338                           ; BSR set to: 0
  4339   000F98  C0B6  F064         	movff	sinf@y,___cosdf@x
  4340   000F9C  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4341   000FA0  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4342   000FA4  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4343   000FA8  EC0D  F018         	call	___cosdf	;wreg free
  4344   000FAC  C064  F0A4         	movff	?___cosdf,?_sinf
  4345   000FB0  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4346   000FB4  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4347   000FB8  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4348   000FBC  EF0D  F008         	goto	l1494
  4349   000FC0                     l6968:
  4350                           
  4351                           ; BSR set to: 0
  4352   000FC0  C0B6  F064         	movff	sinf@y,___cosdf@x
  4353   000FC4  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4354   000FC8  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4355   000FCC  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4356   000FD0  EC0D  F018         	call	___cosdf	;wreg free
  4357   000FD4  C064  F080         	movff	?___cosdf,___flneg@f1
  4358   000FD8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4359   000FDC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4360   000FE0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4361   000FE4  EC9A  F023         	call	___flneg	;wreg free
  4362   000FE8  C080  F0A4         	movff	?___flneg,?_sinf
  4363   000FEC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4364   000FF0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4365   000FF4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4366   000FF8  EF0D  F008         	goto	l1494
  4367   000FFC                     l6974:
  4368                           
  4369                           ; BSR set to: 0
  4370   000FFC  51B0               	movf	sinf@n& (0+255),w,b
  4371                           
  4372                           ; Switch size 1, requested type "simple"
  4373                           ; Number of cases is 3, Range of values is 0 to 2
  4374                           ; switch strategies available:
  4375                           ; Name         Instructions Cycles
  4376                           ; simple_byte           10     6 (average)
  4377                           ;	Chosen strategy is simple_byte
  4378   000FFE  0A00               	xorlw	0	; case 0
  4379   001000  B4D8               	btfsc	status,2,c
  4380   001002  EFB8  F007         	goto	l6960
  4381   001006  0A01               	xorlw	1	; case 1
  4382   001008  B4D8               	btfsc	status,2,c
  4383   00100A  EFCC  F007         	goto	l6964
  4384   00100E  0A03               	xorlw	3	; case 2
  4385   001010  B4D8               	btfsc	status,2,c
  4386   001012  EFA6  F007         	goto	l6958
  4387   001016  EFE0  F007         	goto	l6968
  4388   00101A                     l1494:
  4389   00101A  0012               	return		;funcret
  4390   00101C                     __end_of_sinf:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function ___sindf *****************
  4394 ;; Defined at:
  4395 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  x               4    4[BANK0 ] float 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  z               4   32[BANK0 ] float 
  4400 ;;  s               4   28[BANK0 ] float 
  4401 ;;  w               4   12[BANK0 ] float 
  4402 ;;  r               4    8[BANK0 ] float 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  4    4[BANK0 ] float 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;Total ram usage:       32 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 2
  4419 ;; This function calls:
  4420 ;;		___fladd
  4421 ;;		___flmul
  4422 ;; This function is called by:
  4423 ;;		_sinf
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text13
  4428   0029C0                     __ptext13:
  4429                           	callstack 0
  4430   0029C0                     ___sindf:
  4431                           	callstack 26
  4432   0029C0  C064  F014         	movff	___sindf@x,___flmul@b
  4433   0029C4  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  4434   0029C8  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  4435   0029CC  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  4436   0029D0  C064  F018         	movff	___sindf@x,___flmul@a
  4437   0029D4  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4438   0029D8  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4439   0029DC  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4440   0029E0  EC6F  F00A         	call	___flmul	;wreg free
  4441   0029E4  C014  F080         	movff	?___flmul,___sindf@z
  4442   0029E8  C015  F081         	movff	?___flmul+1,___sindf@z+1
  4443   0029EC  C016  F082         	movff	?___flmul+2,___sindf@z+2
  4444   0029F0  C017  F083         	movff	?___flmul+3,___sindf@z+3
  4445   0029F4  C080  F014         	movff	___sindf@z,___flmul@b
  4446   0029F8  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4447   0029FC  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4448   002A00  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4449   002A04  C080  F018         	movff	___sindf@z,___flmul@a
  4450   002A08  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  4451   002A0C  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  4452   002A10  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  4453   002A14  EC6F  F00A         	call	___flmul	;wreg free
  4454   002A18  C014  F06C         	movff	?___flmul,___sindf@w
  4455   002A1C  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  4456   002A20  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  4457   002A24  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  4458   002A28  0E3C               	movlw	60
  4459   002A2A  6E18               	movwf	___flmul@a^0,c
  4460   002A2C  0E6C               	movlw	108
  4461   002A2E  6E19               	movwf	(___flmul@a+1)^0,c
  4462   002A30  0E36               	movlw	54
  4463   002A32  6E1A               	movwf	(___flmul@a+2)^0,c
  4464   002A34  0E36               	movlw	54
  4465   002A36  6E1B               	movwf	(___flmul@a+3)^0,c
  4466   002A38  C080  F014         	movff	___sindf@z,___flmul@b
  4467   002A3C  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4468   002A40  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4469   002A44  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4470   002A48  EC6F  F00A         	call	___flmul	;wreg free
  4471   002A4C  C014  F046         	movff	?___flmul,___fladd@b
  4472   002A50  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4473   002A54  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4474   002A58  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4475   002A5C  0ECF               	movlw	207
  4476   002A5E  6E4A               	movwf	___fladd@a^0,c
  4477   002A60  0E07               	movlw	7
  4478   002A62  6E4B               	movwf	(___fladd@a+1)^0,c
  4479   002A64  0E50               	movlw	80
  4480   002A66  6E4C               	movwf	(___fladd@a+2)^0,c
  4481   002A68  0EB9               	movlw	185
  4482   002A6A  6E4D               	movwf	(___fladd@a+3)^0,c
  4483   002A6C  EC0E  F008         	call	___fladd	;wreg free
  4484   002A70  C046  F068         	movff	?___fladd,___sindf@r
  4485   002A74  C047  F069         	movff	?___fladd+1,___sindf@r+1
  4486   002A78  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  4487   002A7C  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  4488   002A80  C080  F014         	movff	___sindf@z,___flmul@b
  4489   002A84  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4490   002A88  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4491   002A8C  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4492   002A90  C064  F018         	movff	___sindf@x,___flmul@a
  4493   002A94  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4494   002A98  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4495   002A9C  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4496   002AA0  EC6F  F00A         	call	___flmul	;wreg free
  4497   002AA4  C014  F07C         	movff	?___flmul,___sindf@s
  4498   002AA8  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  4499   002AAC  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  4500   002AB0  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  4501   002AB4  0EAB               	movlw	171
  4502   002AB6  6E4A               	movwf	___fladd@a^0,c
  4503   002AB8  0EAA               	movlw	170
  4504   002ABA  6E4B               	movwf	(___fladd@a+1)^0,c
  4505   002ABC  0E2A               	movlw	42
  4506   002ABE  6E4C               	movwf	(___fladd@a+2)^0,c
  4507   002AC0  0EBE               	movlw	190
  4508   002AC2  6E4D               	movwf	(___fladd@a+3)^0,c
  4509   002AC4  0E84               	movlw	132
  4510   002AC6  6E18               	movwf	___flmul@a^0,c
  4511   002AC8  0E88               	movlw	136
  4512   002ACA  6E19               	movwf	(___flmul@a+1)^0,c
  4513   002ACC  0E08               	movlw	8
  4514   002ACE  6E1A               	movwf	(___flmul@a+2)^0,c
  4515   002AD0  0E3C               	movlw	60
  4516   002AD2  6E1B               	movwf	(___flmul@a+3)^0,c
  4517   002AD4  C080  F014         	movff	___sindf@z,___flmul@b
  4518   002AD8  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4519   002ADC  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4520   002AE0  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4521   002AE4  EC6F  F00A         	call	___flmul	;wreg free
  4522   002AE8  C014  F046         	movff	?___flmul,___fladd@b
  4523   002AEC  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4524   002AF0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4525   002AF4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4526   002AF8  EC0E  F008         	call	___fladd	;wreg free
  4527   002AFC  C046  F070         	movff	?___fladd,___sindf$4125
  4528   002B00  C047  F071         	movff	?___fladd+1,___sindf$4125+1
  4529   002B04  C048  F072         	movff	?___fladd+2,___sindf$4125+2
  4530   002B08  C049  F073         	movff	?___fladd+3,___sindf$4125+3
  4531   002B0C  C06C  F018         	movff	___sindf@w,___flmul@a
  4532   002B10  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  4533   002B14  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  4534   002B18  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  4535   002B1C  C07C  F014         	movff	___sindf@s,___flmul@b
  4536   002B20  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  4537   002B24  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  4538   002B28  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  4539   002B2C  EC6F  F00A         	call	___flmul	;wreg free
  4540   002B30  C014  F074         	movff	?___flmul,___sindf$4126
  4541   002B34  C015  F075         	movff	?___flmul+1,___sindf$4126+1
  4542   002B38  C016  F076         	movff	?___flmul+2,___sindf$4126+2
  4543   002B3C  C017  F077         	movff	?___flmul+3,___sindf$4126+3
  4544   002B40  C064  F04A         	movff	___sindf@x,___fladd@a
  4545   002B44  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  4546   002B48  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  4547   002B4C  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  4548   002B50  C07C  F018         	movff	___sindf@s,___flmul@a
  4549   002B54  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  4550   002B58  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  4551   002B5C  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  4552   002B60  C070  F014         	movff	___sindf$4125,___flmul@b
  4553   002B64  C071  F015         	movff	___sindf$4125+1,___flmul@b+1
  4554   002B68  C072  F016         	movff	___sindf$4125+2,___flmul@b+2
  4555   002B6C  C073  F017         	movff	___sindf$4125+3,___flmul@b+3
  4556   002B70  EC6F  F00A         	call	___flmul	;wreg free
  4557   002B74  C014  F046         	movff	?___flmul,___fladd@b
  4558   002B78  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4559   002B7C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4560   002B80  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4561   002B84  EC0E  F008         	call	___fladd	;wreg free
  4562   002B88  C046  F078         	movff	?___fladd,___sindf$4127
  4563   002B8C  C047  F079         	movff	?___fladd+1,___sindf$4127+1
  4564   002B90  C048  F07A         	movff	?___fladd+2,___sindf$4127+2
  4565   002B94  C049  F07B         	movff	?___fladd+3,___sindf$4127+3
  4566   002B98  C078  F046         	movff	___sindf$4127,___fladd@b
  4567   002B9C  C079  F047         	movff	___sindf$4127+1,___fladd@b+1
  4568   002BA0  C07A  F048         	movff	___sindf$4127+2,___fladd@b+2
  4569   002BA4  C07B  F049         	movff	___sindf$4127+3,___fladd@b+3
  4570   002BA8  C068  F018         	movff	___sindf@r,___flmul@a
  4571   002BAC  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  4572   002BB0  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  4573   002BB4  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  4574   002BB8  C074  F014         	movff	___sindf$4126,___flmul@b
  4575   002BBC  C075  F015         	movff	___sindf$4126+1,___flmul@b+1
  4576   002BC0  C076  F016         	movff	___sindf$4126+2,___flmul@b+2
  4577   002BC4  C077  F017         	movff	___sindf$4126+3,___flmul@b+3
  4578   002BC8  EC6F  F00A         	call	___flmul	;wreg free
  4579   002BCC  C014  F04A         	movff	?___flmul,___fladd@a
  4580   002BD0  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4581   002BD4  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4582   002BD8  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4583   002BDC  EC0E  F008         	call	___fladd	;wreg free
  4584   002BE0  C046  F064         	movff	?___fladd,?___sindf
  4585   002BE4  C047  F065         	movff	?___fladd+1,?___sindf+1
  4586   002BE8  C048  F066         	movff	?___fladd+2,?___sindf+2
  4587   002BEC  C049  F067         	movff	?___fladd+3,?___sindf+3
  4588   002BF0  0012               	return		;funcret
  4589   002BF2                     __end_of___sindf:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function ___rem_pio2f *****************
  4593 ;; Defined at:
  4594 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  x               4   36[BANK0 ] float 
  4597 ;;  y               1   40[BANK0 ] PTR 
  4598 ;;		 -> sinf@y(4), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  n               4   64[BANK0 ] long 
  4601 ;;  t               4   60[BANK0 ] float 
  4602 ;;  fn              4   56[BANK0 ] float 
  4603 ;;  ux              4   52[BANK0 ] struct .
  4604 ;;  ty              4   43[BANK0 ] [1]
  4605 ;;  sign            1   51[BANK0 ] _Bool 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  2   36[BANK0 ] int 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:       32 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 3
  4622 ;; This function calls:
  4623 ;;		___fladd
  4624 ;;		___flmul
  4625 ;;		___flneg
  4626 ;;		___flsub
  4627 ;;		___fltol
  4628 ;;		___xxtofl
  4629 ;;		_fabsf
  4630 ;; This function is called by:
  4631 ;;		_sinf
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text14
  4636   001D1E                     __ptext14:
  4637                           	callstack 0
  4638   001D1E                     ___rem_pio2f:
  4639                           	callstack 25
  4640   001D1E  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  4641   001D22  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  4642   001D26  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  4643   001D2A  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  4644   001D2E  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  4645   001D32  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  4646   001D36  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  4647   001D3A  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  4648   001D3E  0100               	movlb	0	; () banked
  4649   001D40  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  4650   001D42  EFA5  F00E         	goto	u8601
  4651   001D46  EFA8  F00E         	goto	u8600
  4652   001D4A                     u8601:
  4653   001D4A  0E01               	movlw	1
  4654   001D4C  EFA9  F00E         	goto	u8610
  4655   001D50                     u8600:
  4656   001D50  0E00               	movlw	0
  4657   001D52                     u8610:
  4658   001D52  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  4659   001D54                     
  4660                           ; BSR set to: 0
  4661   001D54  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  4662   001D56                     
  4663                           ; BSR set to: 0
  4664   001D56  0EDB               	movlw	219
  4665   001D58  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  4666   001D5A  0E0F               	movlw	15
  4667   001D5C  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  4668   001D5E  0EC9               	movlw	201
  4669   001D60  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  4670   001D62  0E4D               	movlw	77
  4671   001D64  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  4672   001D66  B0D8               	btfsc	status,0,c
  4673   001D68  EFB8  F00E         	goto	u8621
  4674   001D6C  EFBA  F00E         	goto	u8620
  4675   001D70                     u8621:
  4676   001D70  EFA6  F00F         	goto	l6814
  4677   001D74                     u8620:
  4678   001D74                     
  4679                           ; BSR set to: 0
  4680   001D74  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4681   001D78  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4682   001D7C  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4683   001D80  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4684   001D84  EC09  F024         	call	_fabsf	;wreg free
  4685   001D88  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4686   001D8C  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4687   001D90  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4688   001D94  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4689   001D98  0E00               	movlw	0
  4690   001D9A  6E4A               	movwf	___fladd@a^0,c
  4691   001D9C  0E00               	movlw	0
  4692   001D9E  6E4B               	movwf	(___fladd@a+1)^0,c
  4693   001DA0  0E00               	movlw	0
  4694   001DA2  6E4C               	movwf	(___fladd@a+2)^0,c
  4695   001DA4  0E3F               	movlw	63
  4696   001DA6  6E4D               	movwf	(___fladd@a+3)^0,c
  4697   001DA8  0E83               	movlw	131
  4698   001DAA  6E18               	movwf	___flmul@a^0,c
  4699   001DAC  0EF9               	movlw	249
  4700   001DAE  6E19               	movwf	(___flmul@a+1)^0,c
  4701   001DB0  0E22               	movlw	34
  4702   001DB2  6E1A               	movwf	(___flmul@a+2)^0,c
  4703   001DB4  0E3F               	movlw	63
  4704   001DB6  6E1B               	movwf	(___flmul@a+3)^0,c
  4705   001DB8  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4706   001DBC  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4707   001DC0  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4708   001DC4  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4709   001DC8  EC6F  F00A         	call	___flmul	;wreg free
  4710   001DCC  C014  F046         	movff	?___flmul,___fladd@b
  4711   001DD0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4712   001DD4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4713   001DD8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4714   001DDC  EC0E  F008         	call	___fladd	;wreg free
  4715   001DE0  C046  F064         	movff	?___fladd,___fltol@f1
  4716   001DE4  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4717   001DE8  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4718   001DEC  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4719   001DF0  EC11  F01E         	call	___fltol	;wreg free
  4720   001DF4  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4721   001DF8  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4722   001DFC  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4723   001E00  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4724   001E04  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4725   001E08  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4726   001E0C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4727   001E10  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4728   001E14  0E01               	movlw	1
  4729   001E16  EC0C  F019         	call	___xxtofl
  4730   001E1A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4731   001E1E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4732   001E22  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4733   001E26  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4734   001E2A  0EDA               	movlw	218
  4735   001E2C  6E18               	movwf	___flmul@a^0,c
  4736   001E2E  0E0F               	movlw	15
  4737   001E30  6E19               	movwf	(___flmul@a+1)^0,c
  4738   001E32  0EC9               	movlw	201
  4739   001E34  6E1A               	movwf	(___flmul@a+2)^0,c
  4740   001E36  0E3F               	movlw	63
  4741   001E38  6E1B               	movwf	(___flmul@a+3)^0,c
  4742   001E3A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4743   001E3E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4744   001E42  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4745   001E46  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4746   001E4A  EC6F  F00A         	call	___flmul	;wreg free
  4747   001E4E  C014  F068         	movff	?___flmul,___flsub@a
  4748   001E52  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4749   001E56  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4750   001E5A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4751   001E5E  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4752   001E62  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4753   001E66  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4754   001E6A  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4755   001E6E  EC12  F023         	call	___flsub	;wreg free
  4756   001E72  C064  F08F         	movff	?___flsub,___rem_pio2f$4124
  4757   001E76  C065  F090         	movff	?___flsub+1,___rem_pio2f$4124+1
  4758   001E7A  C066  F091         	movff	?___flsub+2,___rem_pio2f$4124+2
  4759   001E7E  C067  F092         	movff	?___flsub+3,___rem_pio2f$4124+3
  4760   001E82  C08F  F064         	movff	___rem_pio2f$4124,___flsub@b
  4761   001E86  C090  F065         	movff	___rem_pio2f$4124+1,___flsub@b+1
  4762   001E8A  C091  F066         	movff	___rem_pio2f$4124+2,___flsub@b+2
  4763   001E8E  C092  F067         	movff	___rem_pio2f$4124+3,___flsub@b+3
  4764   001E92  0EA3               	movlw	163
  4765   001E94  6E18               	movwf	___flmul@a^0,c
  4766   001E96  0E85               	movlw	133
  4767   001E98  6E19               	movwf	(___flmul@a+1)^0,c
  4768   001E9A  0E88               	movlw	136
  4769   001E9C  6E1A               	movwf	(___flmul@a+2)^0,c
  4770   001E9E  0E32               	movlw	50
  4771   001EA0  6E1B               	movwf	(___flmul@a+3)^0,c
  4772   001EA2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4773   001EA6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4774   001EAA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4775   001EAE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4776   001EB2  EC6F  F00A         	call	___flmul	;wreg free
  4777   001EB6  C014  F068         	movff	?___flmul,___flsub@a
  4778   001EBA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4779   001EBE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4780   001EC2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4781   001EC6  EC12  F023         	call	___flsub	;wreg free
  4782   001ECA  0100               	movlb	0	; () banked
  4783   001ECC  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4784   001ECE  6ED9               	movwf	fsr2l,c
  4785   001ED0  6ADA               	clrf	fsr2h,c
  4786   001ED2  C064  FFDE         	movff	?___flsub,postinc2
  4787   001ED6  C065  FFDE         	movff	?___flsub+1,postinc2
  4788   001EDA  C066  FFDE         	movff	?___flsub+2,postinc2
  4789   001EDE  C067  FFDE         	movff	?___flsub+3,postinc2
  4790   001EE2                     
  4791                           ; BSR set to: 0
  4792   001EE2  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4793   001EE4  B4D8               	btfsc	status,2,c
  4794   001EE6  EF77  F00F         	goto	u8631
  4795   001EEA  EF79  F00F         	goto	u8630
  4796   001EEE                     u8631:
  4797   001EEE  EFA0  F00F         	goto	l1544
  4798   001EF2                     u8630:
  4799   001EF2                     l6808:
  4800                           
  4801                           ; BSR set to: 0
  4802   001EF2  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4803   001EF4  6ED9               	movwf	fsr2l,c
  4804   001EF6  6ADA               	clrf	fsr2h,c
  4805   001EF8  CFDE F080          	movff	postinc2,___flneg@f1
  4806   001EFC  CFDE F081          	movff	postinc2,___flneg@f1+1
  4807   001F00  CFDE F082          	movff	postinc2,___flneg@f1+2
  4808   001F04  CFDE F083          	movff	postinc2,___flneg@f1+3
  4809   001F08  EC9A  F023         	call	___flneg	;wreg free
  4810   001F0C  0100               	movlb	0	; () banked
  4811   001F0E  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4812   001F10  6ED9               	movwf	fsr2l,c
  4813   001F12  6ADA               	clrf	fsr2h,c
  4814   001F14  C080  FFDE         	movff	?___flneg,postinc2
  4815   001F18  C081  FFDE         	movff	?___flneg+1,postinc2
  4816   001F1C  C082  FFDE         	movff	?___flneg+2,postinc2
  4817   001F20  C083  FFDE         	movff	?___flneg+3,postinc2
  4818   001F24                     
  4819                           ; BSR set to: 0
  4820   001F24  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  4821   001F28  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  4822   001F2C  1F89               	comf	??___rem_pio2f& (0+255),f,b
  4823   001F2E  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  4824   001F30  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  4825   001F32  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  4826   001F34  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  4827   001F38  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  4828   001F3C  EF6F  F010         	goto	l1545
  4829   001F40                     l1544:
  4830                           
  4831                           ; BSR set to: 0
  4832   001F40  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  4833   001F44  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  4834   001F48  EF6F  F010         	goto	l1545
  4835   001F4C                     l6814:
  4836                           
  4837                           ; BSR set to: 0
  4838   001F4C  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4839   001F50  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4840   001F54  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4841   001F58  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4842   001F5C  EC09  F024         	call	_fabsf	;wreg free
  4843   001F60  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4844   001F64  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4845   001F68  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4846   001F6C  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4847   001F70  0E00               	movlw	0
  4848   001F72  6E4A               	movwf	___fladd@a^0,c
  4849   001F74  0E00               	movlw	0
  4850   001F76  6E4B               	movwf	(___fladd@a+1)^0,c
  4851   001F78  0E00               	movlw	0
  4852   001F7A  6E4C               	movwf	(___fladd@a+2)^0,c
  4853   001F7C  0E3F               	movlw	63
  4854   001F7E  6E4D               	movwf	(___fladd@a+3)^0,c
  4855   001F80  0E83               	movlw	131
  4856   001F82  6E18               	movwf	___flmul@a^0,c
  4857   001F84  0EF9               	movlw	249
  4858   001F86  6E19               	movwf	(___flmul@a+1)^0,c
  4859   001F88  0E22               	movlw	34
  4860   001F8A  6E1A               	movwf	(___flmul@a+2)^0,c
  4861   001F8C  0E3F               	movlw	63
  4862   001F8E  6E1B               	movwf	(___flmul@a+3)^0,c
  4863   001F90  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4864   001F94  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4865   001F98  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4866   001F9C  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4867   001FA0  EC6F  F00A         	call	___flmul	;wreg free
  4868   001FA4  C014  F046         	movff	?___flmul,___fladd@b
  4869   001FA8  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4870   001FAC  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4871   001FB0  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4872   001FB4  EC0E  F008         	call	___fladd	;wreg free
  4873   001FB8  C046  F064         	movff	?___fladd,___fltol@f1
  4874   001FBC  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4875   001FC0  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4876   001FC4  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4877   001FC8  EC11  F01E         	call	___fltol	;wreg free
  4878   001FCC  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4879   001FD0  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4880   001FD4  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4881   001FD8  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4882   001FDC  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4883   001FE0  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4884   001FE4  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4885   001FE8  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4886   001FEC  0E01               	movlw	1
  4887   001FEE  EC0C  F019         	call	___xxtofl
  4888   001FF2  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4889   001FF6  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4890   001FFA  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4891   001FFE  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4892   002002  0EDA               	movlw	218
  4893   002004  6E18               	movwf	___flmul@a^0,c
  4894   002006  0E0F               	movlw	15
  4895   002008  6E19               	movwf	(___flmul@a+1)^0,c
  4896   00200A  0EC9               	movlw	201
  4897   00200C  6E1A               	movwf	(___flmul@a+2)^0,c
  4898   00200E  0E3F               	movlw	63
  4899   002010  6E1B               	movwf	(___flmul@a+3)^0,c
  4900   002012  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4901   002016  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4902   00201A  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4903   00201E  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4904   002022  EC6F  F00A         	call	___flmul	;wreg free
  4905   002026  C014  F068         	movff	?___flmul,___flsub@a
  4906   00202A  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4907   00202E  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4908   002032  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4909   002036  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4910   00203A  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4911   00203E  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4912   002042  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4913   002046  EC12  F023         	call	___flsub	;wreg free
  4914   00204A  C064  F08F         	movff	?___flsub,___rem_pio2f$4124
  4915   00204E  C065  F090         	movff	?___flsub+1,___rem_pio2f$4124+1
  4916   002052  C066  F091         	movff	?___flsub+2,___rem_pio2f$4124+2
  4917   002056  C067  F092         	movff	?___flsub+3,___rem_pio2f$4124+3
  4918   00205A  C08F  F064         	movff	___rem_pio2f$4124,___flsub@b
  4919   00205E  C090  F065         	movff	___rem_pio2f$4124+1,___flsub@b+1
  4920   002062  C091  F066         	movff	___rem_pio2f$4124+2,___flsub@b+2
  4921   002066  C092  F067         	movff	___rem_pio2f$4124+3,___flsub@b+3
  4922   00206A  0EA3               	movlw	163
  4923   00206C  6E18               	movwf	___flmul@a^0,c
  4924   00206E  0E85               	movlw	133
  4925   002070  6E19               	movwf	(___flmul@a+1)^0,c
  4926   002072  0E88               	movlw	136
  4927   002074  6E1A               	movwf	(___flmul@a+2)^0,c
  4928   002076  0E32               	movlw	50
  4929   002078  6E1B               	movwf	(___flmul@a+3)^0,c
  4930   00207A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4931   00207E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4932   002082  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4933   002086  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4934   00208A  EC6F  F00A         	call	___flmul	;wreg free
  4935   00208E  C014  F068         	movff	?___flmul,___flsub@a
  4936   002092  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4937   002096  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4938   00209A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4939   00209E  EC12  F023         	call	___flsub	;wreg free
  4940   0020A2  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  4941   0020A6  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  4942   0020AA  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  4943   0020AE  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  4944   0020B2  0100               	movlb	0	; () banked
  4945   0020B4  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4946   0020B6  6ED9               	movwf	fsr2l,c
  4947   0020B8  6ADA               	clrf	fsr2h,c
  4948   0020BA  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  4949   0020BE  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  4950   0020C2  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  4951   0020C6  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  4952   0020CA                     
  4953                           ; BSR set to: 0
  4954   0020CA  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4955   0020CC  B4D8               	btfsc	status,2,c
  4956   0020CE  EF6B  F010         	goto	u8641
  4957   0020D2  EF6D  F010         	goto	u8640
  4958   0020D6                     u8641:
  4959   0020D6  EFA0  F00F         	goto	l1544
  4960   0020DA                     u8640:
  4961   0020DA  EF79  F00F         	goto	l6808
  4962   0020DE                     l1545:
  4963                           
  4964                           ; BSR set to: 0
  4965   0020DE  0012               	return		;funcret
  4966   0020E0                     __end_of___rem_pio2f:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _fabsf *****************
  4970 ;; Defined at:
  4971 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  x               4    5[COMRAM] float 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  u               4    9[COMRAM] struct .
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  4    5[COMRAM] float 
  4978 ;; Registers used:
  4979 ;;		status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;Total ram usage:        8 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		___rem_pio2f
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text15
  5000   004812                     __ptext15:
  5001                           	callstack 0
  5002   004812                     _fabsf:
  5003                           	callstack 26
  5004   004812  C111  F00A         	movff	fabsf@F465,fabsf@u
  5005   004816  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  5006   00481A  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  5007   00481E  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  5008   004822  C006  F00A         	movff	fabsf@x,fabsf@u
  5009   004826  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  5010   00482A  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  5011   00482E  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  5012   004832  9E0D               	bcf	(fabsf@u+3)^0,7,c
  5013   004834  C00A  F006         	movff	fabsf@u,?_fabsf
  5014   004838  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  5015   00483C  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  5016   004840  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  5017   004844  0012               	return		;funcret
  5018   004846                     __end_of_fabsf:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function ___cosdf *****************
  5022 ;; Defined at:
  5023 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  x               4    4[BANK0 ] float 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  z               4   28[BANK0 ] float 
  5028 ;;  w               4   24[BANK0 ] float 
  5029 ;;  r               4    8[BANK0 ] float 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  4    4[BANK0 ] float 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;Total ram usage:       28 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 2
  5046 ;; This function calls:
  5047 ;;		___fladd
  5048 ;;		___flmul
  5049 ;; This function is called by:
  5050 ;;		_sinf
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	text16
  5055   00301A                     __ptext16:
  5056                           	callstack 0
  5057   00301A                     ___cosdf:
  5058                           	callstack 26
  5059   00301A  C064  F014         	movff	___cosdf@x,___flmul@b
  5060   00301E  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  5061   003022  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  5062   003026  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  5063   00302A  C064  F018         	movff	___cosdf@x,___flmul@a
  5064   00302E  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  5065   003032  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  5066   003036  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  5067   00303A  EC6F  F00A         	call	___flmul	;wreg free
  5068   00303E  C014  F07C         	movff	?___flmul,___cosdf@z
  5069   003042  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  5070   003046  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  5071   00304A  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  5072   00304E  C07C  F014         	movff	___cosdf@z,___flmul@b
  5073   003052  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5074   003056  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5075   00305A  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5076   00305E  C07C  F018         	movff	___cosdf@z,___flmul@a
  5077   003062  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5078   003066  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5079   00306A  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5080   00306E  EC6F  F00A         	call	___flmul	;wreg free
  5081   003072  C014  F078         	movff	?___flmul,___cosdf@w
  5082   003076  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  5083   00307A  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  5084   00307E  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  5085   003082  0E17               	movlw	23
  5086   003084  6E18               	movwf	___flmul@a^0,c
  5087   003086  0E9A               	movlw	154
  5088   003088  6E19               	movwf	(___flmul@a+1)^0,c
  5089   00308A  0ECC               	movlw	204
  5090   00308C  6E1A               	movwf	(___flmul@a+2)^0,c
  5091   00308E  0E37               	movlw	55
  5092   003090  6E1B               	movwf	(___flmul@a+3)^0,c
  5093   003092  C07C  F014         	movff	___cosdf@z,___flmul@b
  5094   003096  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5095   00309A  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5096   00309E  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5097   0030A2  EC6F  F00A         	call	___flmul	;wreg free
  5098   0030A6  C014  F046         	movff	?___flmul,___fladd@b
  5099   0030AA  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5100   0030AE  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5101   0030B2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5102   0030B6  0E3F               	movlw	63
  5103   0030B8  6E4A               	movwf	___fladd@a^0,c
  5104   0030BA  0E04               	movlw	4
  5105   0030BC  6E4B               	movwf	(___fladd@a+1)^0,c
  5106   0030BE  0EB6               	movlw	182
  5107   0030C0  6E4C               	movwf	(___fladd@a+2)^0,c
  5108   0030C2  0EBA               	movlw	186
  5109   0030C4  6E4D               	movwf	(___fladd@a+3)^0,c
  5110   0030C6  EC0E  F008         	call	___fladd	;wreg free
  5111   0030CA  C046  F068         	movff	?___fladd,___cosdf@r
  5112   0030CE  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  5113   0030D2  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  5114   0030D6  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  5115   0030DA  0E00               	movlw	0
  5116   0030DC  6E4A               	movwf	___fladd@a^0,c
  5117   0030DE  0E00               	movlw	0
  5118   0030E0  6E4B               	movwf	(___fladd@a+1)^0,c
  5119   0030E2  0E80               	movlw	128
  5120   0030E4  6E4C               	movwf	(___fladd@a+2)^0,c
  5121   0030E6  0E3F               	movlw	63
  5122   0030E8  6E4D               	movwf	(___fladd@a+3)^0,c
  5123   0030EA  0E00               	movlw	0
  5124   0030EC  6E18               	movwf	___flmul@a^0,c
  5125   0030EE  0E00               	movlw	0
  5126   0030F0  6E19               	movwf	(___flmul@a+1)^0,c
  5127   0030F2  0E00               	movlw	0
  5128   0030F4  6E1A               	movwf	(___flmul@a+2)^0,c
  5129   0030F6  0EBF               	movlw	191
  5130   0030F8  6E1B               	movwf	(___flmul@a+3)^0,c
  5131   0030FA  C07C  F014         	movff	___cosdf@z,___flmul@b
  5132   0030FE  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  5133   003102  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  5134   003106  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  5135   00310A  EC6F  F00A         	call	___flmul	;wreg free
  5136   00310E  C014  F046         	movff	?___flmul,___fladd@b
  5137   003112  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5138   003116  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5139   00311A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5140   00311E  EC0E  F008         	call	___fladd	;wreg free
  5141   003122  C046  F06C         	movff	?___fladd,___cosdf$4121
  5142   003126  C047  F06D         	movff	?___fladd+1,___cosdf$4121+1
  5143   00312A  C048  F06E         	movff	?___fladd+2,___cosdf$4121+2
  5144   00312E  C049  F06F         	movff	?___fladd+3,___cosdf$4121+3
  5145   003132  C07C  F018         	movff	___cosdf@z,___flmul@a
  5146   003136  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  5147   00313A  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  5148   00313E  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  5149   003142  C078  F014         	movff	___cosdf@w,___flmul@b
  5150   003146  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5151   00314A  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5152   00314E  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5153   003152  EC6F  F00A         	call	___flmul	;wreg free
  5154   003156  C014  F070         	movff	?___flmul,___cosdf$4122
  5155   00315A  C015  F071         	movff	?___flmul+1,___cosdf$4122+1
  5156   00315E  C016  F072         	movff	?___flmul+2,___cosdf$4122+2
  5157   003162  C017  F073         	movff	?___flmul+3,___cosdf$4122+3
  5158   003166  0E9F               	movlw	159
  5159   003168  6E18               	movwf	___flmul@a^0,c
  5160   00316A  0EAA               	movlw	170
  5161   00316C  6E19               	movwf	(___flmul@a+1)^0,c
  5162   00316E  0E2A               	movlw	42
  5163   003170  6E1A               	movwf	(___flmul@a+2)^0,c
  5164   003172  0E3D               	movlw	61
  5165   003174  6E1B               	movwf	(___flmul@a+3)^0,c
  5166   003176  C078  F014         	movff	___cosdf@w,___flmul@b
  5167   00317A  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  5168   00317E  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  5169   003182  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  5170   003186  EC6F  F00A         	call	___flmul	;wreg free
  5171   00318A  C014  F04A         	movff	?___flmul,___fladd@a
  5172   00318E  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5173   003192  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5174   003196  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5175   00319A  C06C  F046         	movff	___cosdf$4121,___fladd@b
  5176   00319E  C06D  F047         	movff	___cosdf$4121+1,___fladd@b+1
  5177   0031A2  C06E  F048         	movff	___cosdf$4121+2,___fladd@b+2
  5178   0031A6  C06F  F049         	movff	___cosdf$4121+3,___fladd@b+3
  5179   0031AA  EC0E  F008         	call	___fladd	;wreg free
  5180   0031AE  C046  F074         	movff	?___fladd,___cosdf$4123
  5181   0031B2  C047  F075         	movff	?___fladd+1,___cosdf$4123+1
  5182   0031B6  C048  F076         	movff	?___fladd+2,___cosdf$4123+2
  5183   0031BA  C049  F077         	movff	?___fladd+3,___cosdf$4123+3
  5184   0031BE  C074  F046         	movff	___cosdf$4123,___fladd@b
  5185   0031C2  C075  F047         	movff	___cosdf$4123+1,___fladd@b+1
  5186   0031C6  C076  F048         	movff	___cosdf$4123+2,___fladd@b+2
  5187   0031CA  C077  F049         	movff	___cosdf$4123+3,___fladd@b+3
  5188   0031CE  C068  F018         	movff	___cosdf@r,___flmul@a
  5189   0031D2  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  5190   0031D6  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  5191   0031DA  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  5192   0031DE  C070  F014         	movff	___cosdf$4122,___flmul@b
  5193   0031E2  C071  F015         	movff	___cosdf$4122+1,___flmul@b+1
  5194   0031E6  C072  F016         	movff	___cosdf$4122+2,___flmul@b+2
  5195   0031EA  C073  F017         	movff	___cosdf$4122+3,___flmul@b+3
  5196   0031EE  EC6F  F00A         	call	___flmul	;wreg free
  5197   0031F2  C014  F04A         	movff	?___flmul,___fladd@a
  5198   0031F6  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  5199   0031FA  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  5200   0031FE  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  5201   003202  EC0E  F008         	call	___fladd	;wreg free
  5202   003206  C046  F064         	movff	?___fladd,?___cosdf
  5203   00320A  C047  F065         	movff	?___fladd+1,?___cosdf+1
  5204   00320E  C048  F066         	movff	?___fladd+2,?___cosdf+2
  5205   003212  C049  F067         	movff	?___fladd+3,?___cosdf+3
  5206   003216  0012               	return		;funcret
  5207   003218                     __end_of___cosdf:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _printf *****************
  5211 ;; Defined at:
  5212 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  5215 ;;		 -> STR_22(5), STR_10(5), 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  ret             2    0        int 
  5218 ;;  ap              1   83[COMRAM] PTR void [1]
  5219 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2  110[BANK0 ] int 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;Total ram usage:        5 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 8
  5236 ;; This function calls:
  5237 ;;		_vfprintf
  5238 ;; This function is called by:
  5239 ;;		_runDAC
  5240 ;;		_runUART
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text17
  5245   0048EE                     __ptext17:
  5246                           	callstack 0
  5247   0048EE                     _printf:
  5248                           	callstack 21
  5249   0048EE  0ED0               	movlw	low (?_printf+2)
  5250   0048F0  6E54               	movwf	printf@ap^0,c
  5251   0048F2  0E00               	movlw	0
  5252   0048F4  0100               	movlb	0	; () banked
  5253   0048F6  6FC7               	movwf	vfprintf@fp& (0+255),b
  5254   0048F8  0E00               	movlw	0
  5255   0048FA  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5256   0048FC  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  5257   004900  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  5258   004904  0E54               	movlw	low printf@ap
  5259   004906  6FCB               	movwf	vfprintf@ap& (0+255),b
  5260   004908  ECC9  F022         	call	_vfprintf	;wreg free
  5261   00490C  0012               	return		;funcret
  5262   00490E                     __end_of_printf:
  5263                           	callstack 0
  5264                           
  5265 ;; *************** function _SPI_write *****************
  5266 ;; Defined at:
  5267 ;;		line 93 in file "DAC.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  data            1    wreg     unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  data            1    7[COMRAM] unsigned char 
  5272 ;;  LSB             1    6[COMRAM] unsigned char 
  5273 ;;  MSB             1    5[COMRAM] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;Total ram usage:        3 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_runDAC
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text18
  5298   0046F6                     __ptext18:
  5299                           	callstack 0
  5300   0046F6                     _SPI_write:
  5301                           	callstack 28
  5302                           
  5303                           ;incstack = 0
  5304                           ;SPI_write@data stored from wreg
  5305   0046F6  6E08               	movwf	SPI_write@data^0,c
  5306   0046F8                     
  5307                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5308   0046F8  3808               	swapf	SPI_write@data^0,w,c
  5309   0046FA  0B0F               	andlw	15
  5310   0046FC  0930               	iorlw	48
  5311   0046FE  6E06               	movwf	SPI_write@MSB^0,c
  5312                           
  5313                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5314   004700  3808               	swapf	SPI_write@data^0,w,c
  5315   004702  0BF0               	andlw	240
  5316   004704  6E07               	movwf	SPI_write@LSB^0,c
  5317   004706                     
  5318                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5319   004706  968A               	bcf	138,3,c	;volatile
  5320   004708                     
  5321                           ;DAC.c: 101:     SSP1BUF = MSB;
  5322   004708  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5323   00470C                     l229:
  5324   00470C  A69E               	btfss	3998,3,c	;volatile
  5325   00470E  EF8B  F023         	goto	u8731
  5326   004712  EF8D  F023         	goto	u8730
  5327   004716                     u8731:
  5328   004716  EF86  F023         	goto	l229
  5329   00471A                     u8730:
  5330   00471A                     
  5331                           ;DAC.c: 103:     SSP1IF = 0;
  5332   00471A  969E               	bcf	3998,3,c	;volatile
  5333                           
  5334                           ;DAC.c: 105:     SSP1BUF = LSB;
  5335   00471C  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5336   004720                     l232:
  5337   004720  A69E               	btfss	3998,3,c	;volatile
  5338   004722  EF95  F023         	goto	u8741
  5339   004726  EF97  F023         	goto	u8740
  5340   00472A                     u8741:
  5341   00472A  EF90  F023         	goto	l232
  5342   00472E                     u8740:
  5343   00472E                     
  5344                           ;DAC.c: 107:     SSP1IF = 0;
  5345   00472E  969E               	bcf	3998,3,c	;volatile
  5346                           
  5347                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5348   004730  868A               	bsf	138,3,c	;volatile
  5349   004732  0012               	return		;funcret
  5350   004734                     __end_of_SPI_write:
  5351                           	callstack 0
  5352                           
  5353 ;; *************** function _runADC *****************
  5354 ;; Defined at:
  5355 ;;		line 13 in file "ADC.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  text           17    0[BANK1 ] unsigned char [17]
  5360 ;;  voltage2        4   21[BANK1 ] float 
  5361 ;;  voltage1        4   17[BANK1 ] float 
  5362 ;;  pot2            2   27[BANK1 ] unsigned short 
  5363 ;;  pot1            2   25[BANK1 ] unsigned short 
  5364 ;;  keepState       1   29[BANK1 ] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5375 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5376 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;Total ram usage:       32 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 9
  5381 ;; This function calls:
  5382 ;;		_LCD_ShowString
  5383 ;;		___fldiv
  5384 ;;		___flmul
  5385 ;;		___xxtofl
  5386 ;;		_sprintf
  5387 ;; This function is called by:
  5388 ;;		_main
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text19
  5393   002E08                     __ptext19:
  5394                           	callstack 0
  5395   002E08                     _runADC:
  5396                           	callstack 21
  5397   002E08                     
  5398                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  5399   002E08  010F               	movlb	15	; () banked
  5400   002E0A  8B38               	bsf	56,5,b	;volatile
  5401                           
  5402                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  5403   002E0C  813C               	bsf	60,0,b	;volatile
  5404                           
  5405                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  5406   002E0E  8EC0               	bsf	192,7,c	;volatile
  5407   002E10                     
  5408                           ; BSR set to: 15
  5409                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  5410   002E10  50C0               	movf	192,w,c	;volatile
  5411   002E12  0BF8               	andlw	-8
  5412   002E14  0906               	iorlw	6
  5413   002E16  6EC0               	movwf	192,c	;volatile
  5414                           
  5415                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  5416   002E18  50C0               	movf	192,w,c	;volatile
  5417   002E1A  0BC7               	andlw	-57
  5418   002E1C  0930               	iorlw	48
  5419   002E1E  6EC0               	movwf	192,c	;volatile
  5420   002E20                     
  5421                           ; BSR set to: 15
  5422                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  5423   002E20  80C2               	bsf	194,0,c	;volatile
  5424   002E22                     
  5425                           ; BSR set to: 15
  5426                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  5427   002E22  EE21  F095         	lfsr	2,runADC@text
  5428   002E26  0E10               	movlw	16
  5429   002E28                     u9261:
  5430   002E28  6ADE               	clrf	postinc2,c
  5431   002E2A  06E8               	decf	wreg,f,c
  5432   002E2C  E2FD               	bc	u9261
  5433   002E2E                     
  5434                           ; BSR set to: 15
  5435                           ;ADC.c: 28: uint8_t keepState = 1;
  5436   002E2E  0E01               	movlw	1
  5437   002E30  0101               	movlb	1	; () banked
  5438   002E32  6FB2               	movwf	runADC@keepState& (0+255),b
  5439                           
  5440                           ;ADC.c: 30: while(keepState){
  5441   002E34  EF02  F018         	goto	l425
  5442   002E38                     l7220:
  5443                           
  5444                           ; BSR set to: 1
  5445                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  5446   002E38  50C2               	movf	194,w,c	;volatile
  5447   002E3A  0B83               	andlw	-125
  5448   002E3C  0914               	iorlw	20
  5449   002E3E  6EC2               	movwf	194,c	;volatile
  5450   002E40                     
  5451                           ; BSR set to: 1
  5452                           ;ADC.c: 33:     GODONE = 1;
  5453   002E40  82C2               	bsf	4034,1,c	;volatile
  5454   002E42                     l427:
  5455   002E42  B2C2               	btfsc	4034,1,c	;volatile
  5456   002E44  EF26  F017         	goto	u9271
  5457   002E48  EF28  F017         	goto	u9270
  5458   002E4C                     u9271:
  5459   002E4C  EF21  F017         	goto	l427
  5460   002E50                     u9270:
  5461   002E50                     
  5462                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  5463   002E50  50C3               	movf	195,w,c	;volatile
  5464   002E52  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5465   002E56  0100               	movlb	0	; () banked
  5466   002E58  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5467   002E5A  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5468   002E5E  6BE7               	clrf	??_runADC& (0+255),b
  5469   002E60  11E7               	iorwf	??_runADC& (0+255),w,b
  5470   002E62  0101               	movlb	1	; () banked
  5471   002E64  6FAE               	movwf	runADC@pot1& (0+255),b
  5472   002E66  0100               	movlb	0	; () banked
  5473   002E68  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5474   002E6A  0101               	movlb	1	; () banked
  5475   002E6C  6FAF               	movwf	(runADC@pot1+1)& (0+255),b
  5476   002E6E                     
  5477                           ; BSR set to: 1
  5478                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  5479   002E6E  0E00               	movlw	0
  5480   002E70  6E31               	movwf	___fldiv@a^0,c
  5481   002E72  0EC0               	movlw	192
  5482   002E74  6E32               	movwf	(___fldiv@a+1)^0,c
  5483   002E76  0E7F               	movlw	127
  5484   002E78  6E33               	movwf	(___fldiv@a+2)^0,c
  5485   002E7A  0E44               	movlw	68
  5486   002E7C  6E34               	movwf	(___fldiv@a+3)^0,c
  5487   002E7E  C1AE  F006         	movff	runADC@pot1,___xxtofl@val
  5488   002E82  C1AF  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  5489   002E86  6A08               	clrf	(___xxtofl@val+2)^0,c
  5490   002E88  6A09               	clrf	(___xxtofl@val+3)^0,c
  5491   002E8A  0E00               	movlw	0
  5492   002E8C  EC0C  F019         	call	___xxtofl
  5493   002E90  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5494   002E94  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5495   002E98  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5496   002E9C  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5497   002EA0  EC70  F010         	call	___fldiv	;wreg free
  5498   002EA4  C02D  F014         	movff	?___fldiv,___flmul@b
  5499   002EA8  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5500   002EAC  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5501   002EB0  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5502   002EB4  0E33               	movlw	51
  5503   002EB6  6E18               	movwf	___flmul@a^0,c
  5504   002EB8  0E33               	movlw	51
  5505   002EBA  6E19               	movwf	(___flmul@a+1)^0,c
  5506   002EBC  0E53               	movlw	83
  5507   002EBE  6E1A               	movwf	(___flmul@a+2)^0,c
  5508   002EC0  0E40               	movlw	64
  5509   002EC2  6E1B               	movwf	(___flmul@a+3)^0,c
  5510   002EC4  EC6F  F00A         	call	___flmul	;wreg free
  5511   002EC8  C014  F1A6         	movff	?___flmul,runADC@voltage1
  5512   002ECC  C015  F1A7         	movff	?___flmul+1,runADC@voltage1+1
  5513   002ED0  C016  F1A8         	movff	?___flmul+2,runADC@voltage1+2
  5514   002ED4  C017  F1A9         	movff	?___flmul+3,runADC@voltage1+3
  5515   002ED8                     
  5516                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  5517   002ED8  50C2               	movf	194,w,c	;volatile
  5518   002EDA  0B83               	andlw	-125
  5519   002EDC  0910               	iorlw	16
  5520   002EDE  6EC2               	movwf	194,c	;volatile
  5521   002EE0                     
  5522                           ;ADC.c: 40:     GODONE = 1;
  5523   002EE0  82C2               	bsf	4034,1,c	;volatile
  5524   002EE2                     l430:
  5525   002EE2  B2C2               	btfsc	4034,1,c	;volatile
  5526   002EE4  EF76  F017         	goto	u9281
  5527   002EE8  EF78  F017         	goto	u9280
  5528   002EEC                     u9281:
  5529   002EEC  EF71  F017         	goto	l430
  5530   002EF0                     u9280:
  5531   002EF0                     
  5532                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  5533   002EF0  50C3               	movf	195,w,c	;volatile
  5534   002EF2  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5535   002EF6  0100               	movlb	0	; () banked
  5536   002EF8  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5537   002EFA  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5538   002EFE  6BE7               	clrf	??_runADC& (0+255),b
  5539   002F00  11E7               	iorwf	??_runADC& (0+255),w,b
  5540   002F02  0101               	movlb	1	; () banked
  5541   002F04  6FB0               	movwf	runADC@pot2& (0+255),b
  5542   002F06  0100               	movlb	0	; () banked
  5543   002F08  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5544   002F0A  0101               	movlb	1	; () banked
  5545   002F0C  6FB1               	movwf	(runADC@pot2+1)& (0+255),b
  5546   002F0E                     
  5547                           ; BSR set to: 1
  5548                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  5549   002F0E  0E00               	movlw	0
  5550   002F10  6E31               	movwf	___fldiv@a^0,c
  5551   002F12  0EC0               	movlw	192
  5552   002F14  6E32               	movwf	(___fldiv@a+1)^0,c
  5553   002F16  0E7F               	movlw	127
  5554   002F18  6E33               	movwf	(___fldiv@a+2)^0,c
  5555   002F1A  0E44               	movlw	68
  5556   002F1C  6E34               	movwf	(___fldiv@a+3)^0,c
  5557   002F1E  C1B0  F006         	movff	runADC@pot2,___xxtofl@val
  5558   002F22  C1B1  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  5559   002F26  6A08               	clrf	(___xxtofl@val+2)^0,c
  5560   002F28  6A09               	clrf	(___xxtofl@val+3)^0,c
  5561   002F2A  0E00               	movlw	0
  5562   002F2C  EC0C  F019         	call	___xxtofl
  5563   002F30  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5564   002F34  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5565   002F38  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5566   002F3C  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5567   002F40  EC70  F010         	call	___fldiv	;wreg free
  5568   002F44  C02D  F014         	movff	?___fldiv,___flmul@b
  5569   002F48  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5570   002F4C  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5571   002F50  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5572   002F54  0E33               	movlw	51
  5573   002F56  6E18               	movwf	___flmul@a^0,c
  5574   002F58  0E33               	movlw	51
  5575   002F5A  6E19               	movwf	(___flmul@a+1)^0,c
  5576   002F5C  0E53               	movlw	83
  5577   002F5E  6E1A               	movwf	(___flmul@a+2)^0,c
  5578   002F60  0E40               	movlw	64
  5579   002F62  6E1B               	movwf	(___flmul@a+3)^0,c
  5580   002F64  EC6F  F00A         	call	___flmul	;wreg free
  5581   002F68  C014  F1AA         	movff	?___flmul,runADC@voltage2
  5582   002F6C  C015  F1AB         	movff	?___flmul+1,runADC@voltage2+1
  5583   002F70  C016  F1AC         	movff	?___flmul+2,runADC@voltage2+2
  5584   002F74  C017  F1AD         	movff	?___flmul+3,runADC@voltage2+3
  5585   002F78                     
  5586                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  5587   002F78  0E95               	movlw	low runADC@text
  5588   002F7A  0100               	movlb	0	; () banked
  5589   002F7C  6FCE               	movwf	sprintf@s& (0+255),b
  5590   002F7E  0E01               	movlw	high runADC@text
  5591   002F80  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5592   002F82  0E23               	movlw	low STR_21
  5593   002F84  6FD0               	movwf	sprintf@fmt& (0+255),b
  5594   002F86  0EFF               	movlw	high STR_21
  5595   002F88  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5596   002F8A  C1A6  F0D2         	movff	runADC@voltage1,?_sprintf+4
  5597   002F8E  C1A7  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  5598   002F92  C1A8  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  5599   002F96  C1A9  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  5600   002F9A  C1AA  F0D6         	movff	runADC@voltage2,?_sprintf+8
  5601   002F9E  C1AB  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  5602   002FA2  C1AC  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  5603   002FA6  C1AD  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  5604   002FAA  EC36  F023         	call	_sprintf	;wreg free
  5605   002FAE                     
  5606                           ;ADC.c: 46:     LCD_ShowString(2, text);
  5607   002FAE  0E95               	movlw	low runADC@text
  5608   002FB0  6E07               	movwf	LCD_ShowString@textData^0,c
  5609   002FB2  0E01               	movlw	high runADC@text
  5610   002FB4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5611   002FB6  0E02               	movlw	2
  5612   002FB8  ECCA  F020         	call	_LCD_ShowString
  5613   002FBC                     
  5614                           ;ADC.c: 48:     if(PORTAbits.RA2){
  5615   002FBC  A480               	btfss	128,2,c	;volatile
  5616   002FBE  EFE3  F017         	goto	u9291
  5617   002FC2  EFE5  F017         	goto	u9290
  5618   002FC6                     u9291:
  5619   002FC6  EF02  F018         	goto	l425
  5620   002FCA                     u9290:
  5621   002FCA                     
  5622                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  5623   002FCA  0E03               	movlw	3
  5624   002FCC  0100               	movlb	0	; () banked
  5625   002FCE  6FE8               	movwf	(??_runADC+1)& (0+255),b
  5626   002FD0  0E08               	movlw	8
  5627   002FD2  6FE7               	movwf	??_runADC& (0+255),b
  5628   002FD4  0E77               	movlw	119
  5629   002FD6                     u9607:
  5630   002FD6  2EE8               	decfsz	wreg,f,c
  5631   002FD8  D7FE               	bra	u9607
  5632   002FDA  2FE7               	decfsz	??_runADC& (0+255),f,b
  5633   002FDC  D7FC               	bra	u9607
  5634   002FDE  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  5635   002FE0  D7FA               	bra	u9607
  5636   002FE2                     
  5637                           ;ADC.c: 50:         if(PORTAbits.RA2){
  5638   002FE2  A480               	btfss	128,2,c	;volatile
  5639   002FE4  EFF6  F017         	goto	u9301
  5640   002FE8  EFF8  F017         	goto	u9300
  5641   002FEC                     u9301:
  5642   002FEC  EF02  F018         	goto	l425
  5643   002FF0                     u9300:
  5644   002FF0                     l435:
  5645   002FF0  B480               	btfsc	128,2,c	;volatile
  5646   002FF2  EFFD  F017         	goto	u9311
  5647   002FF6  EFFF  F017         	goto	u9310
  5648   002FFA                     u9311:
  5649   002FFA  EFF8  F017         	goto	l435
  5650   002FFE                     u9310:
  5651   002FFE                     
  5652                           ;ADC.c: 52:             keepState = 0;
  5653   002FFE  0E00               	movlw	0
  5654   003000  0101               	movlb	1	; () banked
  5655   003002  6FB2               	movwf	runADC@keepState& (0+255),b
  5656   003004                     l425:
  5657                           
  5658                           ;ADC.c: 30: while(keepState){
  5659   003004  0101               	movlb	1	; () banked
  5660   003006  51B2               	movf	runADC@keepState& (0+255),w,b
  5661   003008  A4D8               	btfss	status,2,c
  5662   00300A  EF09  F018         	goto	u9321
  5663   00300E  EF0B  F018         	goto	u9320
  5664   003012                     u9321:
  5665   003012  EF1C  F017         	goto	l7220
  5666   003016                     u9320:
  5667   003016                     
  5668                           ; BSR set to: 1
  5669                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  5670   003016  90C2               	bcf	194,0,c	;volatile
  5671   003018                     
  5672                           ; BSR set to: 1
  5673   003018  0012               	return		;funcret
  5674   00301A                     __end_of_runADC:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function ___xxtofl *****************
  5678 ;; Defined at:
  5679 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  sign            1    wreg     unsigned char 
  5682 ;;  val             4    5[COMRAM] long 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  sign            1   13[COMRAM] unsigned char 
  5685 ;;  arg             4   15[COMRAM] unsigned long 
  5686 ;;  exp             1   14[COMRAM] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  4    5[COMRAM] unsigned char 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;Total ram usage:       14 bytes
  5701 ;; Hardware stack levels used: 1
  5702 ;; Hardware stack levels required when called: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_runDAC
  5707 ;;		_runADC
  5708 ;;		___rem_pio2f
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text20
  5713   003218                     __ptext20:
  5714                           	callstack 0
  5715   003218                     ___xxtofl:
  5716                           	callstack 26
  5717                           
  5718                           ; BSR set to: 1
  5719                           ;incstack = 0
  5720                           ;___xxtofl@sign stored from wreg
  5721   003218  6E0E               	movwf	___xxtofl@sign^0,c
  5722   00321A  500E               	movf	___xxtofl@sign^0,w,c
  5723   00321C  B4D8               	btfsc	status,2,c
  5724   00321E  EF13  F019         	goto	u8351
  5725   003222  EF15  F019         	goto	u8350
  5726   003226                     u8351:
  5727   003226  EF37  F019         	goto	l1206
  5728   00322A                     u8350:
  5729   00322A  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5730   00322C  EF1C  F019         	goto	u8360
  5731   003230  EF1A  F019         	goto	u8361
  5732   003234                     u8361:
  5733   003234  EF37  F019         	goto	l1206
  5734   003238                     u8360:
  5735   003238  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5736   00323C  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5737   003240  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5738   003244  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5739   003248  1E0A               	comf	??___xxtofl^0,f,c
  5740   00324A  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5741   00324C  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5742   00324E  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5743   003250  2A0A               	incf	??___xxtofl^0,f,c
  5744   003252  0E00               	movlw	0
  5745   003254  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5746   003256  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5747   003258  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5748   00325A  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5749   00325E  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5750   003262  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5751   003266  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5752   00326A  EF3F  F019         	goto	l6604
  5753   00326E                     l1206:
  5754   00326E  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5755   003272  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5756   003276  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5757   00327A  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5758   00327E                     l6604:
  5759   00327E  5006               	movf	___xxtofl@val^0,w,c
  5760   003280  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5761   003282  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5762   003284  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5763   003286  A4D8               	btfss	status,2,c
  5764   003288  EF48  F019         	goto	u8371
  5765   00328C  EF4A  F019         	goto	u8370
  5766   003290                     u8371:
  5767   003290  EF54  F019         	goto	l6610
  5768   003294                     u8370:
  5769   003294  0E00               	movlw	0
  5770   003296  6E06               	movwf	?___xxtofl^0,c
  5771   003298  0E00               	movlw	0
  5772   00329A  6E07               	movwf	(?___xxtofl+1)^0,c
  5773   00329C  0E00               	movlw	0
  5774   00329E  6E08               	movwf	(?___xxtofl+2)^0,c
  5775   0032A0  0E00               	movlw	0
  5776   0032A2  6E09               	movwf	(?___xxtofl+3)^0,c
  5777   0032A4  EFE5  F019         	goto	l1209
  5778   0032A8                     l6610:
  5779   0032A8  0E96               	movlw	150
  5780   0032AA  6E0F               	movwf	___xxtofl@exp^0,c
  5781   0032AC  EF5E  F019         	goto	l6614
  5782   0032B0                     l6612:
  5783   0032B0  2A0F               	incf	___xxtofl@exp^0,f,c
  5784   0032B2  90D8               	bcf	status,0,c
  5785   0032B4  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5786   0032B6  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5787   0032B8  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5788   0032BA  3210               	rrcf	___xxtofl@arg^0,f,c
  5789   0032BC                     l6614:
  5790   0032BC  0E00               	movlw	0
  5791   0032BE  1410               	andwf	___xxtofl@arg^0,w,c
  5792   0032C0  6E0A               	movwf	??___xxtofl^0,c
  5793   0032C2  0E00               	movlw	0
  5794   0032C4  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5795   0032C6  6E0B               	movwf	(??___xxtofl+1)^0,c
  5796   0032C8  0E00               	movlw	0
  5797   0032CA  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5798   0032CC  6E0C               	movwf	(??___xxtofl+2)^0,c
  5799   0032CE  0EFE               	movlw	254
  5800   0032D0  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5801   0032D2  6E0D               	movwf	(??___xxtofl+3)^0,c
  5802   0032D4  500A               	movf	??___xxtofl^0,w,c
  5803   0032D6  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5804   0032D8  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5805   0032DA  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5806   0032DC  A4D8               	btfss	status,2,c
  5807   0032DE  EF73  F019         	goto	u8381
  5808   0032E2  EF75  F019         	goto	u8380
  5809   0032E6                     u8381:
  5810   0032E6  EF58  F019         	goto	l6612
  5811   0032EA                     u8380:
  5812   0032EA  EF83  F019         	goto	l1213
  5813   0032EE                     l6616:
  5814   0032EE  2A0F               	incf	___xxtofl@exp^0,f,c
  5815   0032F0  0E01               	movlw	1
  5816   0032F2  2610               	addwf	___xxtofl@arg^0,f,c
  5817   0032F4  0E00               	movlw	0
  5818   0032F6  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5819   0032F8  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5820   0032FA  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5821   0032FC  90D8               	bcf	status,0,c
  5822   0032FE  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5823   003300  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5824   003302  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5825   003304  3210               	rrcf	___xxtofl@arg^0,f,c
  5826   003306                     l1213:
  5827   003306  0E00               	movlw	0
  5828   003308  1410               	andwf	___xxtofl@arg^0,w,c
  5829   00330A  6E0A               	movwf	??___xxtofl^0,c
  5830   00330C  0E00               	movlw	0
  5831   00330E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5832   003310  6E0B               	movwf	(??___xxtofl+1)^0,c
  5833   003312  0E00               	movlw	0
  5834   003314  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5835   003316  6E0C               	movwf	(??___xxtofl+2)^0,c
  5836   003318  0EFF               	movlw	255
  5837   00331A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5838   00331C  6E0D               	movwf	(??___xxtofl+3)^0,c
  5839   00331E  500A               	movf	??___xxtofl^0,w,c
  5840   003320  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5841   003322  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5842   003324  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5843   003326  A4D8               	btfss	status,2,c
  5844   003328  EF98  F019         	goto	u8391
  5845   00332C  EF9A  F019         	goto	u8390
  5846   003330                     u8391:
  5847   003330  EF77  F019         	goto	l6616
  5848   003334                     u8390:
  5849   003334  EFA2  F019         	goto	l6624
  5850   003338                     l6622:
  5851   003338  060F               	decf	___xxtofl@exp^0,f,c
  5852   00333A  90D8               	bcf	status,0,c
  5853   00333C  3610               	rlcf	___xxtofl@arg^0,f,c
  5854   00333E  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5855   003340  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5856   003342  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5857   003344                     l6624:
  5858   003344  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5859   003346  EFA7  F019         	goto	u8401
  5860   00334A  EFA9  F019         	goto	u8400
  5861   00334E                     u8401:
  5862   00334E  EFB1  F019         	goto	l1220
  5863   003352                     u8400:
  5864   003352  0E02               	movlw	2
  5865   003354  600F               	cpfslt	___xxtofl@exp^0,c
  5866   003356  EFAF  F019         	goto	u8411
  5867   00335A  EFB1  F019         	goto	u8410
  5868   00335E                     u8411:
  5869   00335E  EF9C  F019         	goto	l6622
  5870   003362                     u8410:
  5871   003362                     l1220:
  5872   003362  B00F               	btfsc	___xxtofl@exp^0,0,c
  5873   003364  EFB6  F019         	goto	u8421
  5874   003368  EFB8  F019         	goto	u8420
  5875   00336C                     u8421:
  5876   00336C  EFB9  F019         	goto	l6630
  5877   003370                     u8420:
  5878   003370  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5879   003372                     l6630:
  5880   003372  90D8               	bcf	status,0,c
  5881   003374  320F               	rrcf	___xxtofl@exp^0,f,c
  5882   003376  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5883   00337A  6A0B               	clrf	(??___xxtofl+1)^0,c
  5884   00337C  6A0C               	clrf	(??___xxtofl+2)^0,c
  5885   00337E  6A0D               	clrf	(??___xxtofl+3)^0,c
  5886   003380  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5887   003384  6A0C               	clrf	(??___xxtofl+2)^0,c
  5888   003386  6A0B               	clrf	(??___xxtofl+1)^0,c
  5889   003388  6A0A               	clrf	??___xxtofl^0,c
  5890   00338A  500A               	movf	??___xxtofl^0,w,c
  5891   00338C  1210               	iorwf	___xxtofl@arg^0,f,c
  5892   00338E  500B               	movf	(??___xxtofl+1)^0,w,c
  5893   003390  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5894   003392  500C               	movf	(??___xxtofl+2)^0,w,c
  5895   003394  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5896   003396  500D               	movf	(??___xxtofl+3)^0,w,c
  5897   003398  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5898   00339A  500E               	movf	___xxtofl@sign^0,w,c
  5899   00339C  B4D8               	btfsc	status,2,c
  5900   00339E  EFD3  F019         	goto	u8431
  5901   0033A2  EFD5  F019         	goto	u8430
  5902   0033A6                     u8431:
  5903   0033A6  EFDD  F019         	goto	l6640
  5904   0033AA                     u8430:
  5905   0033AA  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5906   0033AC  EFDC  F019         	goto	u8440
  5907   0033B0  EFDA  F019         	goto	u8441
  5908   0033B4                     u8441:
  5909   0033B4  EFDD  F019         	goto	l6640
  5910   0033B8                     u8440:
  5911   0033B8  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5912   0033BA                     l6640:
  5913   0033BA  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5914   0033BE  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5915   0033C2  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5916   0033C6  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5917   0033CA                     l1209:
  5918   0033CA  0012               	return		;funcret
  5919   0033CC                     __end_of___xxtofl:
  5920                           	callstack 0
  5921                           
  5922 ;; *************** function _moveDisplay *****************
  5923 ;; Defined at:
  5924 ;;		line 11 in file "menu.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;  menuI           1    wreg     unsigned char 
  5927 ;;  where           1  135[BANK0 ] unsigned char 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;  menuI           1   50[BANK1 ] unsigned char 
  5930 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  5931 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  5932 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  5933 ;;		 -> STR_18(1), STR_17(6), STR_16(5), STR_15(4), 
  5934 ;;		 -> STR_14(4), STR_13(4), STR_12(5), STR_11(5), 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      unsigned char 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5944 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;Total ram usage:       54 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 9
  5951 ;; This function calls:
  5952 ;;		_LCD_Clear
  5953 ;;		_LCD_ShowString
  5954 ;;		_sprintf
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text21
  5961   003B10                     __ptext21:
  5962                           	callstack 0
  5963   003B10                     _moveDisplay:
  5964                           	callstack 21
  5965                           
  5966                           ;incstack = 0
  5967                           ;moveDisplay@menuI stored from wreg
  5968   003B10  0101               	movlb	1	; () banked
  5969   003B12  6FC7               	movwf	moveDisplay@menuI& (0+255),b
  5970   003B14                     
  5971                           ;menu.c: 12:     LCD_Clear();
  5972   003B14  ECEE  F023         	call	_LCD_Clear	;wreg free
  5973   003B18                     
  5974                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  5975   003B18  EE21  F0C8         	lfsr	2,moveDisplay@F6961
  5976   003B1C  EE11  F0B7         	lfsr	1,moveDisplay@menuItems
  5977   003B20  0E0F               	movlw	15
  5978   003B22                     u8971:
  5979   003B22  CFDB FFE3          	movff	plusw2,plusw1
  5980   003B26  06E8               	decf	wreg,f,c
  5981   003B28  E2FC               	bc	u8971
  5982                           
  5983                           ;menu.c: 14:     switch (where){
  5984   003B2A  EFAF  F01D         	goto	l7046
  5985   003B2E                     l7036:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;menu.c: 18:             if(menuI<6){
  5989   003B2E  0E06               	movlw	6
  5990   003B30  0101               	movlb	1	; () banked
  5991   003B32  61C7               	cpfslt	moveDisplay@menuI& (0+255),b
  5992   003B34  EF9E  F01D         	goto	u8981
  5993   003B38  EFA0  F01D         	goto	u8980
  5994   003B3C                     u8981:
  5995   003B3C  EFBF  F01D         	goto	l7048
  5996   003B40                     u8980:
  5997   003B40                     
  5998                           ; BSR set to: 1
  5999                           ;menu.c: 19:             menuI++;
  6000   003B40  2BC7               	incf	moveDisplay@menuI& (0+255),f,b
  6001   003B42  EFBF  F01D         	goto	l7048
  6002   003B46                     l7040:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;menu.c: 23:             if(menuI>0){
  6006   003B46  0101               	movlb	1	; () banked
  6007   003B48  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6008   003B4A  B4D8               	btfsc	status,2,c
  6009   003B4C  EFAA  F01D         	goto	u8991
  6010   003B50  EFAC  F01D         	goto	u8990
  6011   003B54                     u8991:
  6012   003B54  EFBF  F01D         	goto	l7048
  6013   003B58                     u8990:
  6014   003B58                     
  6015                           ; BSR set to: 1
  6016                           ;menu.c: 24:             menuI--;
  6017   003B58  07C7               	decf	moveDisplay@menuI& (0+255),f,b
  6018   003B5A  EFBF  F01D         	goto	l7048
  6019   003B5E                     l7046:
  6020   003B5E  0100               	movlb	0	; () banked
  6021   003B60  51E7               	movf	moveDisplay@where& (0+255),w,b
  6022                           
  6023                           ; Switch size 1, requested type "simple"
  6024                           ; Number of cases is 3, Range of values is 0 to 2
  6025                           ; switch strategies available:
  6026                           ; Name         Instructions Cycles
  6027                           ; simple_byte           10     6 (average)
  6028                           ;	Chosen strategy is simple_byte
  6029   003B62  0A00               	xorlw	0	; case 0
  6030   003B64  B4D8               	btfsc	status,2,c
  6031   003B66  EFBF  F01D         	goto	l7048
  6032   003B6A  0A01               	xorlw	1	; case 1
  6033   003B6C  B4D8               	btfsc	status,2,c
  6034   003B6E  EF97  F01D         	goto	l7036
  6035   003B72  0A03               	xorlw	3	; case 2
  6036   003B74  B4D8               	btfsc	status,2,c
  6037   003B76  EFA3  F01D         	goto	l7040
  6038   003B7A  EFBF  F01D         	goto	l7048
  6039   003B7E                     l7048:
  6040                           
  6041                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6042   003B7E  0E95               	movlw	low moveDisplay@menuItem1
  6043   003B80  0100               	movlb	0	; () banked
  6044   003B82  6FCE               	movwf	sprintf@s& (0+255),b
  6045   003B84  0E01               	movlw	high moveDisplay@menuItem1
  6046   003B86  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6047   003B88  0ECB               	movlw	low STR_19
  6048   003B8A  6FD0               	movwf	sprintf@fmt& (0+255),b
  6049   003B8C  0EFF               	movlw	high STR_19
  6050   003B8E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6051   003B90  0E00               	movlw	0
  6052   003B92  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  6053   003B94  0E0F               	movlw	15
  6054   003B96  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  6055   003B98  0101               	movlb	1	; () banked
  6056   003B9A  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6057   003B9C  0D02               	mullw	2
  6058   003B9E  0EB7               	movlw	low moveDisplay@menuItems
  6059   003BA0  24F3               	addwf	243,w,c
  6060   003BA2  6ED9               	movwf	fsr2l,c
  6061   003BA4  0E01               	movlw	high moveDisplay@menuItems
  6062   003BA6  20F4               	addwfc	prodh,w,c
  6063   003BA8  6EDA               	movwf	fsr2h,c
  6064   003BAA  CFDE F0D4          	movff	postinc2,?_sprintf+6
  6065   003BAE  CFDD F0D5          	movff	postdec2,?_sprintf+7
  6066   003BB2  EC36  F023         	call	_sprintf	;wreg free
  6067                           
  6068                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6069   003BB6  0EA6               	movlw	low moveDisplay@menuItem2
  6070   003BB8  0100               	movlb	0	; () banked
  6071   003BBA  6FCE               	movwf	sprintf@s& (0+255),b
  6072   003BBC  0E01               	movlw	high moveDisplay@menuItem2
  6073   003BBE  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  6074   003BC0  0ECC               	movlw	low (STR_19+1)
  6075   003BC2  6FD0               	movwf	sprintf@fmt& (0+255),b
  6076   003BC4  0EFF               	movlw	high (STR_19+1)
  6077   003BC6  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  6078   003BC8  0E00               	movlw	0
  6079   003BCA  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  6080   003BCC  0E10               	movlw	16
  6081   003BCE  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  6082   003BD0  0101               	movlb	1	; () banked
  6083   003BD2  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6084   003BD4  0100               	movlb	0	; () banked
  6085   003BD6  6FE8               	movwf	??_moveDisplay& (0+255),b
  6086   003BD8  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  6087   003BDA  90D8               	bcf	status,0,c
  6088   003BDC  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  6089   003BDE  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  6090   003BE0  0E02               	movlw	2
  6091   003BE2  27E8               	addwf	??_moveDisplay& (0+255),f,b
  6092   003BE4  0E00               	movlw	0
  6093   003BE6  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  6094   003BE8  0EB7               	movlw	low moveDisplay@menuItems
  6095   003BEA  25E8               	addwf	??_moveDisplay& (0+255),w,b
  6096   003BEC  6ED9               	movwf	fsr2l,c
  6097   003BEE  0E01               	movlw	high moveDisplay@menuItems
  6098   003BF0  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  6099   003BF2  6EDA               	movwf	fsr2h,c
  6100   003BF4  CFDE F0D4          	movff	postinc2,?_sprintf+6
  6101   003BF8  CFDD F0D5          	movff	postdec2,?_sprintf+7
  6102   003BFC  EC36  F023         	call	_sprintf	;wreg free
  6103   003C00                     
  6104                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6105   003C00  0E95               	movlw	low moveDisplay@menuItem1
  6106   003C02  6E07               	movwf	LCD_ShowString@textData^0,c
  6107   003C04  0E01               	movlw	high moveDisplay@menuItem1
  6108   003C06  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6109   003C08  0E01               	movlw	1
  6110   003C0A  ECCA  F020         	call	_LCD_ShowString
  6111   003C0E                     
  6112                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6113   003C0E  0EA6               	movlw	low moveDisplay@menuItem2
  6114   003C10  6E07               	movwf	LCD_ShowString@textData^0,c
  6115   003C12  0E01               	movlw	high moveDisplay@menuItem2
  6116   003C14  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  6117   003C16  0E02               	movlw	2
  6118   003C18  ECCA  F020         	call	_LCD_ShowString
  6119   003C1C                     
  6120                           ;menu.c: 35:     return menuI;
  6121   003C1C  0101               	movlb	1	; () banked
  6122   003C1E  51C7               	movf	moveDisplay@menuI& (0+255),w,b
  6123   003C20                     
  6124                           ; BSR set to: 1
  6125   003C20  0012               	return		;funcret
  6126   003C22                     __end_of_moveDisplay:
  6127                           	callstack 0
  6128                           
  6129 ;; *************** function _sprintf *****************
  6130 ;; Defined at:
  6131 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  6132 ;; Parameters:    Size  Location     Type
  6133 ;;  s               2  110[BANK0 ] PTR unsigned char 
  6134 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6135 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  6136 ;;		 -> STR_21(19), STR_20(5), STR_19(6), 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  f              12  123[BANK0 ] struct _IO_FILE
  6139 ;;  ret             2    0        int 
  6140 ;;  ap              1  122[BANK0 ] PTR void [1]
  6141 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  2  110[BANK0 ] int 
  6144 ;; Registers used:
  6145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6151 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;Total ram usage:       25 bytes
  6156 ;; Hardware stack levels used: 1
  6157 ;; Hardware stack levels required when called: 8
  6158 ;; This function calls:
  6159 ;;		_vfprintf
  6160 ;; This function is called by:
  6161 ;;		_moveDisplay
  6162 ;;		_runADC
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text22
  6167   00466C                     __ptext22:
  6168                           	callstack 0
  6169   00466C                     _sprintf:
  6170                           	callstack 21
  6171   00466C  0ED2               	movlw	low (?_sprintf+4)
  6172   00466E  0100               	movlb	0	; () banked
  6173   004670  6FDA               	movwf	sprintf@ap& (0+255),b
  6174   004672  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  6175   004676  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6176   00467A                     
  6177                           ; BSR set to: 0
  6178   00467A  0E00               	movlw	0
  6179   00467C  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6180   00467E  0E00               	movlw	0
  6181   004680  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6182   004682                     
  6183                           ; BSR set to: 0
  6184   004682  0E00               	movlw	0
  6185   004684  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  6186   004686  0E00               	movlw	0
  6187   004688  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  6188   00468A                     
  6189                           ; BSR set to: 0
  6190   00468A  0EDB               	movlw	low sprintf@f
  6191   00468C  6FC7               	movwf	vfprintf@fp& (0+255),b
  6192   00468E  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  6193   004690  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6194   004694  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6195   004698  0EDA               	movlw	low sprintf@ap
  6196   00469A  6FCB               	movwf	vfprintf@ap& (0+255),b
  6197   00469C  ECC9  F022         	call	_vfprintf	;wreg free
  6198   0046A0  0100               	movlb	0	; () banked
  6199   0046A2  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6200   0046A4  25CE               	addwf	sprintf@s& (0+255),w,b
  6201   0046A6  6ED9               	movwf	fsr2l,c
  6202   0046A8  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  6203   0046AA  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  6204   0046AC  6EDA               	movwf	fsr2h,c
  6205   0046AE  6ADF               	clrf	indf2,c
  6206   0046B0                     
  6207                           ; BSR set to: 0
  6208   0046B0  0012               	return		;funcret
  6209   0046B2                     __end_of_sprintf:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _vfprintf *****************
  6213 ;; Defined at:
  6214 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6217 ;;		 -> NULL(0), sprintf@f(12), 
  6218 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6219 ;;		 -> STR_22(5), STR_21(19), STR_20(5), STR_19(6), 
  6220 ;;		 -> STR_10(5), 
  6221 ;;  ap              1  107[BANK0 ] PTR PTR void 
  6222 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  6225 ;;		 -> STR_22(5), STR_21(19), STR_20(5), STR_19(6), 
  6226 ;;		 -> STR_10(5), 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2  103[BANK0 ] int 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6236 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;Total ram usage:        7 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 7
  6243 ;; This function calls:
  6244 ;;		_vfpfcnvrt
  6245 ;; This function is called by:
  6246 ;;		_sprintf
  6247 ;;		_printf
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text23
  6252   004592                     __ptext23:
  6253                           	callstack 0
  6254   004592                     _vfprintf:
  6255                           	callstack 21
  6256   004592                     
  6257                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6258   004592  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  6259   004596  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6260                           
  6261                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6262   00459A  EFDA  F022         	goto	l6774
  6263   00459E                     l6772:
  6264                           
  6265                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  6266   00459E  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  6267   0045A2  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6268   0045A6  0ECC               	movlw	low vfprintf@cfmt
  6269   0045A8  0100               	movlb	0	; () banked
  6270   0045AA  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  6271   0045AC  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  6272   0045B0  EC84  F00C         	call	_vfpfcnvrt	;wreg free
  6273   0045B4                     l6774:
  6274                           
  6275                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6276   0045B4  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  6277   0045B8  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6278   0045BC                     	if	0	;tblptru may be non-zero
  6279   0045BC                     	endif
  6280   0045BC                     	if	0	;tblptru may be non-zero
  6281   0045BC                     	endif
  6282   0045BC  0008               	tblrd		*
  6283   0045BE  50F5               	movf	tablat,w,c
  6284   0045C0  0900               	iorlw	0
  6285   0045C2  A4D8               	btfss	status,2,c
  6286   0045C4  EFE6  F022         	goto	u8591
  6287   0045C8  EFE8  F022         	goto	u8590
  6288   0045CC                     u8591:
  6289   0045CC  EFCF  F022         	goto	l6772
  6290   0045D0                     u8590:
  6291   0045D0                     
  6292                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6293   0045D0  0E00               	movlw	0
  6294   0045D2  0100               	movlb	0	; () banked
  6295   0045D4  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  6296   0045D6  0E00               	movlw	0
  6297   0045D8  6FC7               	movwf	?_vfprintf& (0+255),b
  6298   0045DA                     
  6299                           ; BSR set to: 0
  6300   0045DA  0012               	return		;funcret
  6301   0045DC                     __end_of_vfprintf:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _vfpfcnvrt *****************
  6305 ;; Defined at:
  6306 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  6309 ;;		 -> NULL(0), sprintf@f(12), 
  6310 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  6311 ;;		 -> vfprintf@cfmt(2), 
  6312 ;;  ap              1   92[BANK0 ] PTR PTR void 
  6313 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  convarg         4   95[BANK0 ] struct .
  6316 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  6317 ;;		 -> STR_22(5), STR_21(19), STR_20(5), STR_19(6), 
  6318 ;;		 -> STR_10(5), 
  6319 ;;  done            1  100[BANK0 ] _Bool 
  6320 ;;  c               1   99[BANK0 ] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:       14 bytes
  6335 ;; Hardware stack levels used: 1
  6336 ;; Hardware stack levels required when called: 6
  6337 ;; This function calls:
  6338 ;;		_dtoa
  6339 ;;		_efgtoa
  6340 ;;		_fputc
  6341 ;;		_read_prec_or_width
  6342 ;;		_stoa
  6343 ;; This function is called by:
  6344 ;;		_vfprintf
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text24
  6349   001908                     __ptext24:
  6350                           	callstack 0
  6351   001908                     _vfpfcnvrt:
  6352                           	callstack 21
  6353   001908                     
  6354                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  6355   001908  0100               	movlb	0	; () banked
  6356   00190A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6357   00190C  6ED9               	movwf	fsr2l,c
  6358   00190E  6ADA               	clrf	fsr2h,c
  6359   001910  CFDE FFF6          	movff	postinc2,tblptrl
  6360   001914  CFDD FFF7          	movff	postdec2,tblptrh
  6361   001918                     	if	0	;tblptru may be non-zero
  6362   001918                     	endif
  6363   001918                     	if	0	;tblptru may be non-zero
  6364   001918                     	endif
  6365   001918  0008               	tblrd		*
  6366   00191A  50F5               	movf	tablat,w,c
  6367   00191C  0A25               	xorlw	37
  6368   00191E  A4D8               	btfss	status,2,c
  6369   001920  EF94  F00C         	goto	u8451
  6370   001924  EF96  F00C         	goto	u8450
  6371   001928                     u8451:
  6372   001928  EF7B  F00E         	goto	l6754
  6373   00192C                     u8450:
  6374   00192C                     
  6375                           ; BSR set to: 0
  6376                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  6377   00192C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6378   00192E  6ED9               	movwf	fsr2l,c
  6379   001930  6ADA               	clrf	fsr2h,c
  6380   001932  2ADE               	incf	postinc2,f,c
  6381   001934  0E00               	movlw	0
  6382   001936  22DD               	addwfc	postdec2,f,c
  6383   001938                     
  6384                           ; BSR set to: 0
  6385                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  6386   001938  0E00               	movlw	0
  6387   00193A  6E56               	movwf	(_width+1)^0,c
  6388   00193C  0E00               	movlw	0
  6389   00193E  6E55               	movwf	_width^0,c
  6390   001940  C055  F059         	movff	_width,_flags
  6391   001944                     
  6392                           ; BSR set to: 0
  6393                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  6394   001944  6857               	setf	_prec^0,c
  6395   001946  6858               	setf	(_prec+1)^0,c
  6396   001948                     
  6397                           ; BSR set to: 0
  6398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  6399   001948  0E00               	movlw	0
  6400   00194A  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6401                           
  6402                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6403   00194C  EFC4  F00C         	goto	l6664
  6404   001950                     l6654:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  6408   001950  8059               	bsf	_flags^0,0,c
  6409   001952                     
  6410                           ; BSR set to: 0
  6411                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  6412   001952  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6413   001954  6ED9               	movwf	fsr2l,c
  6414   001956  6ADA               	clrf	fsr2h,c
  6415   001958  2ADE               	incf	postinc2,f,c
  6416   00195A  0E00               	movlw	0
  6417   00195C  22DD               	addwfc	postdec2,f,c
  6418                           
  6419                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  6420   00195E  EFC4  F00C         	goto	l6664
  6421   001962                     l6658:
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  6425   001962  0E01               	movlw	1
  6426   001964  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6427                           
  6428                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  6429   001966  EFC4  F00C         	goto	l6664
  6430   00196A                     l6662:
  6431                           
  6432                           ; BSR set to: 0
  6433   00196A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6434   00196C  6ED9               	movwf	fsr2l,c
  6435   00196E  6ADA               	clrf	fsr2h,c
  6436   001970  CFDE FFF6          	movff	postinc2,tblptrl
  6437   001974  CFDD FFF7          	movff	postdec2,tblptrh
  6438   001978                     	if	0	;tblptru may be non-zero
  6439   001978                     	endif
  6440   001978                     	if	0	;tblptru may be non-zero
  6441   001978                     	endif
  6442   001978  0008               	tblrd		*
  6443   00197A  50F5               	movf	tablat,w,c
  6444                           
  6445                           ; Switch size 1, requested type "simple"
  6446                           ; Number of cases is 1, Range of values is 45 to 45
  6447                           ; switch strategies available:
  6448                           ; Name         Instructions Cycles
  6449                           ; simple_byte            4     3 (average)
  6450                           ;	Chosen strategy is simple_byte
  6451   00197C  0A2D               	xorlw	45	; case 45
  6452   00197E  B4D8               	btfsc	status,2,c
  6453   001980  EFA8  F00C         	goto	l6654
  6454   001984  EFB1  F00C         	goto	l6658
  6455   001988                     l6664:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6459   001988  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6460   00198A  B4D8               	btfsc	status,2,c
  6461   00198C  EFCA  F00C         	goto	u8461
  6462   001990  EFCC  F00C         	goto	u8460
  6463   001994                     u8461:
  6464   001994  EFB5  F00C         	goto	l6662
  6465   001998                     u8460:
  6466   001998                     
  6467                           ; BSR set to: 0
  6468                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  6469   001998  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6470   00199C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6471   0019A0  EC7B  F021         	call	_read_prec_or_width	;wreg free
  6472   0019A4  C00C  F055         	movff	?_read_prec_or_width,_width
  6473   0019A8  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  6474   0019AC                     
  6475                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  6476   0019AC  BE56               	btfsc	(_width+1)^0,7,c
  6477   0019AE  EFDD  F00C         	goto	u8470
  6478   0019B2  EFDB  F00C         	goto	u8471
  6479   0019B6                     u8471:
  6480   0019B6  EFE2  F00C         	goto	l6672
  6481   0019BA                     u8470:
  6482   0019BA                     
  6483                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  6484   0019BA  8059               	bsf	_flags^0,0,c
  6485                           
  6486                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  6487   0019BC  6C55               	negf	_width^0,c
  6488   0019BE  1E56               	comf	(_width+1)^0,f,c
  6489   0019C0  B0D8               	btfsc	status,0,c
  6490   0019C2  2A56               	incf	(_width+1)^0,f,c
  6491   0019C4                     l6672:
  6492                           
  6493                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  6494   0019C4  0100               	movlb	0	; () banked
  6495   0019C6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6496   0019C8  6ED9               	movwf	fsr2l,c
  6497   0019CA  6ADA               	clrf	fsr2h,c
  6498   0019CC  CFDE FFF6          	movff	postinc2,tblptrl
  6499   0019D0  CFDD FFF7          	movff	postdec2,tblptrh
  6500   0019D4                     	if	0	;tblptru may be non-zero
  6501   0019D4                     	endif
  6502   0019D4                     	if	0	;tblptru may be non-zero
  6503   0019D4                     	endif
  6504   0019D4  0008               	tblrd		*
  6505   0019D6  50F5               	movf	tablat,w,c
  6506   0019D8  0A2E               	xorlw	46
  6507   0019DA  A4D8               	btfss	status,2,c
  6508   0019DC  EFF2  F00C         	goto	u8481
  6509   0019E0  EFF4  F00C         	goto	u8480
  6510   0019E4                     u8481:
  6511   0019E4  EF04  F00D         	goto	l6678
  6512   0019E8                     u8480:
  6513   0019E8                     
  6514                           ; BSR set to: 0
  6515                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  6516   0019E8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6517   0019EA  6ED9               	movwf	fsr2l,c
  6518   0019EC  6ADA               	clrf	fsr2h,c
  6519   0019EE  2ADE               	incf	postinc2,f,c
  6520   0019F0  0E00               	movlw	0
  6521   0019F2  22DD               	addwfc	postdec2,f,c
  6522   0019F4                     
  6523                           ; BSR set to: 0
  6524                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  6525   0019F4  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6526   0019F8  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6527   0019FC  EC7B  F021         	call	_read_prec_or_width	;wreg free
  6528   001A00  C00C  F057         	movff	?_read_prec_or_width,_prec
  6529   001A04  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  6530   001A08                     l6678:
  6531                           
  6532                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  6533   001A08  0100               	movlb	0	; () banked
  6534   001A0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6535   001A0C  6ED9               	movwf	fsr2l,c
  6536   001A0E  6ADA               	clrf	fsr2h,c
  6537   001A10  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6538   001A14  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6539   001A18                     
  6540                           ; BSR set to: 0
  6541                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  6542   001A18  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6543   001A1C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6544   001A20                     	if	0	;tblptru may be non-zero
  6545   001A20                     	endif
  6546   001A20                     	if	0	;tblptru may be non-zero
  6547   001A20                     	endif
  6548   001A20  0008               	tblrd		*
  6549   001A22  50F5               	movf	tablat,w,c
  6550   001A24  0A64               	xorlw	100
  6551   001A26  B4D8               	btfsc	status,2,c
  6552   001A28  EF18  F00D         	goto	u8491
  6553   001A2C  EF1A  F00D         	goto	u8490
  6554   001A30                     u8491:
  6555   001A30  EF28  F00D         	goto	l6684
  6556   001A34                     u8490:
  6557   001A34                     
  6558                           ; BSR set to: 0
  6559   001A34  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6560   001A38  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6561   001A3C                     	if	0	;tblptru may be non-zero
  6562   001A3C                     	endif
  6563   001A3C                     	if	0	;tblptru may be non-zero
  6564   001A3C                     	endif
  6565   001A3C  0008               	tblrd		*
  6566   001A3E  50F5               	movf	tablat,w,c
  6567   001A40  0A69               	xorlw	105
  6568   001A42  A4D8               	btfss	status,2,c
  6569   001A44  EF26  F00D         	goto	u8501
  6570   001A48  EF28  F00D         	goto	u8500
  6571   001A4C                     u8501:
  6572   001A4C  EF4D  F00D         	goto	l6692
  6573   001A50                     u8500:
  6574   001A50                     l6684:
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1404:    convarg.sint = (vfpf_sint_
      +                          t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6578   001A50  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6579   001A52  6ED9               	movwf	fsr2l,c
  6580   001A54  6ADA               	clrf	fsr2h,c
  6581   001A56  0E02               	movlw	2
  6582   001A58  26DF               	addwf	indf2,f,c
  6583   001A5A  5CDF               	subwf	indf2,w,c
  6584   001A5C  6ED9               	movwf	fsr2l,c
  6585   001A5E  6ADA               	clrf	fsr2h,c
  6586   001A60  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6587   001A64  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6588   001A68                     
  6589                           ; BSR set to: 0
  6590                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  6591   001A68  0E01               	movlw	1
  6592   001A6A  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6593   001A6C  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6594   001A6E  0E00               	movlw	0
  6595   001A70  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6596   001A72  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6597   001A74  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6598   001A76  6ED9               	movwf	fsr2l,c
  6599   001A78  6ADA               	clrf	fsr2h,c
  6600   001A7A  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6601   001A7E  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6602   001A82                     
  6603                           ; BSR set to: 0
  6604                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  6605   001A82  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  6606   001A86  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6607   001A8A  C0BF  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  6608   001A8E  C0C0  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6609   001A92  ECB5  F01A         	call	_dtoa	;wreg free
  6610   001A96  EF8E  F00E         	goto	l1378
  6611   001A9A                     l6692:
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6615   001A9A  0E00               	movlw	0
  6616   001A9C  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6617   001A9E                     
  6618                           ; BSR set to: 0
  6619                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  6620   001A9E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6621   001AA0  6ED9               	movwf	fsr2l,c
  6622   001AA2  6ADA               	clrf	fsr2h,c
  6623   001AA4  CFDE FFF6          	movff	postinc2,tblptrl
  6624   001AA8  CFDD FFF7          	movff	postdec2,tblptrh
  6625   001AAC                     	if	0	;tblptru may be non-zero
  6626   001AAC                     	endif
  6627   001AAC                     	if	0	;tblptru may be non-zero
  6628   001AAC                     	endif
  6629   001AAC  0008               	tblrd		*
  6630   001AAE  50F5               	movf	tablat,w,c
  6631   001AB0  0A73               	xorlw	115
  6632   001AB2  A4D8               	btfss	status,2,c
  6633   001AB4  EF5E  F00D         	goto	u8511
  6634   001AB8  EF60  F00D         	goto	u8510
  6635   001ABC                     u8511:
  6636   001ABC  EF6A  F00D         	goto	l6700
  6637   001AC0                     u8510:
  6638   001AC0                     
  6639                           ; BSR set to: 0
  6640                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6641   001AC0  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6642   001AC2  6ED9               	movwf	fsr2l,c
  6643   001AC4  6ADA               	clrf	fsr2h,c
  6644   001AC6  2ADE               	incf	postinc2,f,c
  6645   001AC8  0E00               	movlw	0
  6646   001ACA  22DD               	addwfc	postdec2,f,c
  6647   001ACC                     l6698:
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  6651   001ACC  0E01               	movlw	1
  6652   001ACE  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6653                           
  6654                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  6655   001AD0  EFB6  F00D         	goto	l6710
  6656   001AD4                     l6700:
  6657                           
  6658                           ; BSR set to: 0
  6659   001AD4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6660   001AD6  6ED9               	movwf	fsr2l,c
  6661   001AD8  6ADA               	clrf	fsr2h,c
  6662   001ADA  CFDE FFF6          	movff	postinc2,tblptrl
  6663   001ADE  CFDD FFF7          	movff	postdec2,tblptrh
  6664   001AE2                     	if	0	;tblptru may be non-zero
  6665   001AE2                     	endif
  6666   001AE2                     	if	0	;tblptru may be non-zero
  6667   001AE2                     	endif
  6668   001AE2  0008               	tblrd		*
  6669   001AE4  50F5               	movf	tablat,w,c
  6670   001AE6  0A6C               	xorlw	108
  6671   001AE8  A4D8               	btfss	status,2,c
  6672   001AEA  EF79  F00D         	goto	u8521
  6673   001AEE  EF7B  F00D         	goto	u8520
  6674   001AF2                     u8521:
  6675   001AF2  EFB6  F00D         	goto	l6710
  6676   001AF6                     u8520:
  6677   001AF6                     
  6678                           ; BSR set to: 0
  6679   001AF6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6680   001AF8  6ED9               	movwf	fsr2l,c
  6681   001AFA  6ADA               	clrf	fsr2h,c
  6682   001AFC  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6683   001B00  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6684   001B04  0E01               	movlw	1
  6685   001B06  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6686   001B08  0E00               	movlw	0
  6687   001B0A  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6688   001B0C  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6689   001B10  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6690   001B14                     	if	0	;tblptru may be non-zero
  6691   001B14                     	endif
  6692   001B14                     	if	0	;tblptru may be non-zero
  6693   001B14                     	endif
  6694   001B14  0008               	tblrd		*
  6695   001B16  50F5               	movf	tablat,w,c
  6696   001B18  0A6C               	xorlw	108
  6697   001B1A  A4D8               	btfss	status,2,c
  6698   001B1C  EF92  F00D         	goto	u8531
  6699   001B20  EF94  F00D         	goto	u8530
  6700   001B24                     u8531:
  6701   001B24  EFB6  F00D         	goto	l6710
  6702   001B28                     u8530:
  6703   001B28                     
  6704                           ; BSR set to: 0
  6705   001B28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6706   001B2A  6ED9               	movwf	fsr2l,c
  6707   001B2C  6ADA               	clrf	fsr2h,c
  6708   001B2E  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6709   001B32  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6710   001B36  0E02               	movlw	2
  6711   001B38  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6712   001B3A  0E00               	movlw	0
  6713   001B3C  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6714   001B3E  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6715   001B42  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6716   001B46                     	if	0	;tblptru may be non-zero
  6717   001B46                     	endif
  6718   001B46                     	if	0	;tblptru may be non-zero
  6719   001B46                     	endif
  6720   001B46  0008               	tblrd		*
  6721   001B48  50F5               	movf	tablat,w,c
  6722   001B4A  0A73               	xorlw	115
  6723   001B4C  A4D8               	btfss	status,2,c
  6724   001B4E  EFAB  F00D         	goto	u8541
  6725   001B52  EFAD  F00D         	goto	u8540
  6726   001B56                     u8541:
  6727   001B56  EFB6  F00D         	goto	l6710
  6728   001B5A                     u8540:
  6729   001B5A                     
  6730                           ; BSR set to: 0
  6731                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  6732   001B5A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6733   001B5C  6ED9               	movwf	fsr2l,c
  6734   001B5E  6ADA               	clrf	fsr2h,c
  6735   001B60  0E03               	movlw	3
  6736   001B62  26DE               	addwf	postinc2,f,c
  6737   001B64  0E00               	movlw	0
  6738   001B66  22DD               	addwfc	postdec2,f,c
  6739   001B68  EF66  F00D         	goto	l6698
  6740   001B6C                     l6710:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  6744   001B6C  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6745   001B6E  B4D8               	btfsc	status,2,c
  6746   001B70  EFBC  F00D         	goto	u8551
  6747   001B74  EFBE  F00D         	goto	u8550
  6748   001B78                     u8551:
  6749   001B78  EFD2  F00D         	goto	l6716
  6750   001B7C                     u8550:
  6751   001B7C                     
  6752                           ; BSR set to: 0
  6753                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  6754   001B7C  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  6755   001B80  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6756   001B84  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6757   001B86  6ED9               	movwf	fsr2l,c
  6758   001B88  6ADA               	clrf	fsr2h,c
  6759   001B8A  0E02               	movlw	2
  6760   001B8C  26DF               	addwf	indf2,f,c
  6761   001B8E  5CDF               	subwf	indf2,w,c
  6762   001B90  6ED9               	movwf	fsr2l,c
  6763   001B92  6ADA               	clrf	fsr2h,c
  6764   001B94  CFDE F012          	movff	postinc2,stoa@s
  6765   001B98  CFDE F013          	movff	postinc2,stoa@s+1
  6766   001B9C  ECE6  F019         	call	_stoa	;wreg free
  6767   001BA0  EF8E  F00E         	goto	l1378
  6768   001BA4                     l6716:
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  6772   001BA4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6773   001BA6  6ED9               	movwf	fsr2l,c
  6774   001BA8  6ADA               	clrf	fsr2h,c
  6775   001BAA  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6776   001BAE  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6777   001BB2                     
  6778                           ; BSR set to: 0
  6779                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6780   001BB2  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6781   001BB6  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6782   001BBA                     	if	0	;tblptru may be non-zero
  6783   001BBA                     	endif
  6784   001BBA                     	if	0	;tblptru may be non-zero
  6785   001BBA                     	endif
  6786   001BBA  0008               	tblrd		*
  6787   001BBC  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  6788                           
  6789                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  6790   001BC0  EFEE  F00D         	goto	l6728
  6791   001BC4                     l6720:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6795   001BC4  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  6796   001BC6  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  6797                           
  6798                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  6799   001BC8  EFFD  F00D         	goto	l6730
  6800   001BCC                     l6722:
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  6804   001BCC  0E6C               	movlw	108
  6805   001BCE  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6806                           
  6807                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  6808   001BD0  EFFD  F00D         	goto	l6730
  6809   001BD4                     l6724:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6813   001BD4  0E00               	movlw	0
  6814   001BD6  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6815                           
  6816                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  6817   001BD8  EFFD  F00D         	goto	l6730
  6818   001BDC                     l6728:
  6819                           
  6820                           ; BSR set to: 0
  6821   001BDC  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6822                           
  6823                           ; Switch size 1, requested type "simple"
  6824                           ; Number of cases is 3, Range of values is 76 to 108
  6825                           ; switch strategies available:
  6826                           ; Name         Instructions Cycles
  6827                           ; simple_byte           10     6 (average)
  6828                           ;	Chosen strategy is simple_byte
  6829   001BDE  0A4C               	xorlw	76	; case 76
  6830   001BE0  B4D8               	btfsc	status,2,c
  6831   001BE2  EFE2  F00D         	goto	l6720
  6832   001BE6  0A2A               	xorlw	42	; case 102
  6833   001BE8  B4D8               	btfsc	status,2,c
  6834   001BEA  EFE6  F00D         	goto	l6722
  6835   001BEE  0A0A               	xorlw	10	; case 108
  6836   001BF0  B4D8               	btfsc	status,2,c
  6837   001BF2  EFE2  F00D         	goto	l6720
  6838   001BF6  EFEA  F00D         	goto	l6724
  6839   001BFA                     l6730:
  6840                           
  6841                           ; BSR set to: 0
  6842   001BFA  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6843   001BFE  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6844   001C02                     	if	0	;tblptru may be non-zero
  6845   001C02                     	endif
  6846   001C02                     	if	0	;tblptru may be non-zero
  6847   001C02                     	endif
  6848   001C02  0008               	tblrd		*
  6849   001C04  50F5               	movf	tablat,w,c
  6850   001C06  0A66               	xorlw	102
  6851   001C08  A4D8               	btfss	status,2,c
  6852   001C0A  EF09  F00E         	goto	u8561
  6853   001C0E  EF0B  F00E         	goto	u8560
  6854   001C12                     u8561:
  6855   001C12  EF72  F00E         	goto	l6750
  6856   001C16                     u8560:
  6857   001C16  EF35  F00E         	goto	l6738
  6858   001C1A                     l6732:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  6862   001C1A  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6863   001C1C  6ED9               	movwf	fsr2l,c
  6864   001C1E  6ADA               	clrf	fsr2h,c
  6865   001C20  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6866   001C24  0E04               	movlw	4
  6867   001C26  26DF               	addwf	indf2,f,c
  6868   001C28  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6869   001C2A  6ED9               	movwf	fsr2l,c
  6870   001C2C  6ADA               	clrf	fsr2h,c
  6871   001C2E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6872   001C32  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6873   001C36  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6874   001C3A  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6875                           
  6876                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  6877   001C3E  EF40  F00E         	goto	l6740
  6878   001C42                     l6734:
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6882   001C42  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6883   001C44  6ED9               	movwf	fsr2l,c
  6884   001C46  6ADA               	clrf	fsr2h,c
  6885   001C48  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6886   001C4C  0E04               	movlw	4
  6887   001C4E  26DF               	addwf	indf2,f,c
  6888   001C50  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6889   001C52  6ED9               	movwf	fsr2l,c
  6890   001C54  6ADA               	clrf	fsr2h,c
  6891   001C56  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6892   001C5A  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6893   001C5E  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6894   001C62  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6895                           
  6896                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  6897   001C66  EF40  F00E         	goto	l6740
  6898   001C6A                     l6738:
  6899                           
  6900                           ; BSR set to: 0
  6901   001C6A  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6902                           
  6903                           ; Switch size 1, requested type "simple"
  6904                           ; Number of cases is 2, Range of values is 76 to 108
  6905                           ; switch strategies available:
  6906                           ; Name         Instructions Cycles
  6907                           ; simple_byte            7     4 (average)
  6908                           ;	Chosen strategy is simple_byte
  6909   001C6C  0A4C               	xorlw	76	; case 76
  6910   001C6E  B4D8               	btfsc	status,2,c
  6911   001C70  EF21  F00E         	goto	l6734
  6912   001C74  0A20               	xorlw	32	; case 108
  6913   001C76  B4D8               	btfsc	status,2,c
  6914   001C78  EF0D  F00E         	goto	l6732
  6915   001C7C  EF40  F00E         	goto	l6740
  6916   001C80                     l6740:
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  6920   001C80  0E01               	movlw	1
  6921   001C82  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6922   001C84  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6923   001C86  0E00               	movlw	0
  6924   001C88  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6925   001C8A  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6926   001C8C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6927   001C8E  6ED9               	movwf	fsr2l,c
  6928   001C90  6ADA               	clrf	fsr2h,c
  6929   001C92  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6930   001C96  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6931                           
  6932                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  6933   001C9A  EF66  F00E         	goto	l6748
  6934   001C9E                     l6742:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6938   001C9E  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  6939   001CA2  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6940   001CA6  C0BF  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  6941   001CAA  C0C0  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6942   001CAE  C0C1  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6943   001CB2  C0C2  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6944   001CB6  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6945   001CBA  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6946   001CBE                     	if	0	;tblptru may be non-zero
  6947   001CBE                     	endif
  6948   001CBE                     	if	0	;tblptru may be non-zero
  6949   001CBE                     	endif
  6950   001CBE  0008               	tblrd		*
  6951   001CC0  CFF5 F08A          	movff	tablat,efgtoa@c
  6952   001CC4  EC8C  F000         	call	_efgtoa	;wreg free
  6953   001CC8  EF8E  F00E         	goto	l1378
  6954   001CCC                     l6748:
  6955                           
  6956                           ; BSR set to: 0
  6957   001CCC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6958   001CD0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6959   001CD4                     	if	0	;tblptru may be non-zero
  6960   001CD4                     	endif
  6961   001CD4                     	if	0	;tblptru may be non-zero
  6962   001CD4                     	endif
  6963   001CD4  0008               	tblrd		*
  6964   001CD6  50F5               	movf	tablat,w,c
  6965                           
  6966                           ; Switch size 1, requested type "simple"
  6967                           ; Number of cases is 1, Range of values is 102 to 102
  6968                           ; switch strategies available:
  6969                           ; Name         Instructions Cycles
  6970                           ; simple_byte            4     3 (average)
  6971                           ;	Chosen strategy is simple_byte
  6972   001CD8  0A66               	xorlw	102	; case 102
  6973   001CDA  B4D8               	btfsc	status,2,c
  6974   001CDC  EF4F  F00E         	goto	l6742
  6975   001CE0  EF72  F00E         	goto	l6750
  6976   001CE4                     l6750:
  6977                           
  6978                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  6979   001CE4  0100               	movlb	0	; () banked
  6980   001CE6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6981   001CE8  6ED9               	movwf	fsr2l,c
  6982   001CEA  6ADA               	clrf	fsr2h,c
  6983   001CEC  2ADE               	incf	postinc2,f,c
  6984   001CEE  0E00               	movlw	0
  6985   001CF0  22DD               	addwfc	postdec2,f,c
  6986   001CF2  EF8E  F00E         	goto	l1378
  6987   001CF6                     l6754:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  6991   001CF6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6992   001CF8  6ED9               	movwf	fsr2l,c
  6993   001CFA  6ADA               	clrf	fsr2h,c
  6994   001CFC  CFDE FFF6          	movff	postinc2,tblptrl
  6995   001D00  CFDD FFF7          	movff	postdec2,tblptrh
  6996   001D04                     	if	0	;tblptru may be non-zero
  6997   001D04                     	endif
  6998   001D04                     	if	0	;tblptru may be non-zero
  6999   001D04                     	endif
  7000   001D04  0008               	tblrd		*
  7001   001D06  50F5               	movf	tablat,w,c
  7002   001D08  6E07               	movwf	fputc@c^0,c
  7003   001D0A  6A08               	clrf	(fputc@c+1)^0,c
  7004   001D0C  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  7005   001D10  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7006   001D14  EC03  F020         	call	_fputc	;wreg free
  7007   001D18  EF72  F00E         	goto	l6750
  7008   001D1C                     l1378:
  7009   001D1C  0012               	return		;funcret
  7010   001D1E                     __end_of_vfpfcnvrt:
  7011                           	callstack 0
  7012                           
  7013 ;; *************** function _stoa *****************
  7014 ;; Defined at:
  7015 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  7018 ;;		 -> NULL(0), sprintf@f(12), 
  7019 ;;  s               2   17[COMRAM] PTR unsigned char 
  7020 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_18(1), 
  7021 ;;		 -> STR_17(6), STR_16(5), STR_15(4), STR_14(4), 
  7022 ;;		 -> STR_13(4), STR_12(5), STR_11(5), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  l               2   27[COMRAM] int 
  7025 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7026 ;;		 -> ?_printf(2), STR_29(7), ?_sprintf(2), runUART@reversed(31), 
  7027 ;;		 -> STR_18(1), STR_17(6), STR_16(5), STR_15(4), 
  7028 ;;		 -> STR_14(4), STR_13(4), STR_12(5), STR_11(5), 
  7029 ;;  w               2   23[COMRAM] int 
  7030 ;;  p               2   21[COMRAM] int 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;Total ram usage:       14 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 3
  7047 ;; This function calls:
  7048 ;;		_fputc
  7049 ;; This function is called by:
  7050 ;;		_vfpfcnvrt
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text25
  7055   0033CC                     __ptext25:
  7056                           	callstack 0
  7057   0033CC                     _stoa:
  7058                           	callstack 23
  7059   0033CC                     
  7060                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  7061   0033CC  C012  F01A         	movff	stoa@s,stoa@cp
  7062   0033D0  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  7063                           
  7064                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  7065   0033D4  501A               	movf	stoa@cp^0,w,c
  7066   0033D6  101B               	iorwf	(stoa@cp+1)^0,w,c
  7067   0033D8  A4D8               	btfss	status,2,c
  7068   0033DA  EFF1  F019         	goto	u8221
  7069   0033DE  EFF3  F019         	goto	u8220
  7070   0033E2                     u8221:
  7071   0033E2  EFF7  F019         	goto	l6550
  7072   0033E6                     u8220:
  7073   0033E6                     
  7074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  7075   0033E6  0EBE               	movlw	low STR_29
  7076   0033E8  6E1A               	movwf	stoa@cp^0,c
  7077   0033EA  0EFF               	movlw	high STR_29
  7078   0033EC  6E1B               	movwf	(stoa@cp+1)^0,c
  7079   0033EE                     l6550:
  7080                           
  7081                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  7082   0033EE  0E00               	movlw	0
  7083   0033F0  6E1D               	movwf	(stoa@l+1)^0,c
  7084   0033F2  0E00               	movlw	0
  7085   0033F4  6E1C               	movwf	stoa@l^0,c
  7086   0033F6  EFFF  F019         	goto	l6554
  7087   0033FA                     l6552:
  7088   0033FA  4A1C               	infsnz	stoa@l^0,f,c
  7089   0033FC  2A1D               	incf	(stoa@l+1)^0,f,c
  7090   0033FE                     l6554:
  7091   0033FE  501C               	movf	stoa@l^0,w,c
  7092   003400  241A               	addwf	stoa@cp^0,w,c
  7093   003402  6E14               	movwf	??_stoa^0,c
  7094   003404  501D               	movf	(stoa@l+1)^0,w,c
  7095   003406  201B               	addwfc	(stoa@cp+1)^0,w,c
  7096   003408  6E15               	movwf	(??_stoa+1)^0,c
  7097   00340A  C014  FFF6         	movff	??_stoa,tblptrl
  7098   00340E  C015  FFF7         	movff	??_stoa+1,tblptrh
  7099   003412  0E00               	movlw	low (__mediumconst shr (0+16))
  7100   003414  6EF8               	movwf	tblptru,c
  7101   003416  0E0F               	movlw	(high __ramtop+-1)
  7102   003418  64F7               	cpfsgt	tblptrh,c
  7103   00341A  D003               	bra	u8237
  7104   00341C  0008               	tblrd		*
  7105   00341E  50F5               	movf	tablat,w,c
  7106   003420  D005               	bra	u8230
  7107   003422                     u8237:
  7108   003422  CFF6 FFE1          	movff	tblptrl,fsr1l
  7109   003426  CFF7 FFE2          	movff	tblptrh,fsr1h
  7110   00342A  50E7               	movf	indf1,w,c
  7111   00342C                     u8230:
  7112   00342C  0900               	iorlw	0
  7113   00342E  A4D8               	btfss	status,2,c
  7114   003430  EF1C  F01A         	goto	u8241
  7115   003434  EF1E  F01A         	goto	u8240
  7116   003438                     u8241:
  7117   003438  EFFD  F019         	goto	l6552
  7118   00343C                     u8240:
  7119   00343C                     
  7120                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  7121   00343C  BE58               	btfsc	(_prec+1)^0,7,c
  7122   00343E  EF23  F01A         	goto	u8251
  7123   003442  EF25  F01A         	goto	u8250
  7124   003446                     u8251:
  7125   003446  EF38  F01A         	goto	l1342
  7126   00344A                     u8250:
  7127   00344A  501C               	movf	stoa@l^0,w,c
  7128   00344C  5C57               	subwf	_prec^0,w,c
  7129   00344E  5058               	movf	(_prec+1)^0,w,c
  7130   003450  0A80               	xorlw	128
  7131   003452  6E14               	movwf	??_stoa^0,c
  7132   003454  501D               	movf	(stoa@l+1)^0,w,c
  7133   003456  0A80               	xorlw	128
  7134   003458  5814               	subwfb	??_stoa^0,w,c
  7135   00345A  B0D8               	btfsc	status,0,c
  7136   00345C  EF32  F01A         	goto	u8261
  7137   003460  EF34  F01A         	goto	u8260
  7138   003464                     u8261:
  7139   003464  EF38  F01A         	goto	l1342
  7140   003468                     u8260:
  7141   003468                     
  7142                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  7143   003468  C057  F01C         	movff	_prec,stoa@l
  7144   00346C  C058  F01D         	movff	_prec+1,stoa@l+1
  7145   003470                     l1342:
  7146                           
  7147                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7148   003470  C01C  F016         	movff	stoa@l,stoa@p
  7149   003474  C01D  F017         	movff	stoa@l+1,stoa@p+1
  7150                           
  7151                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  7152   003478  C055  F018         	movff	_width,stoa@w
  7153   00347C  C056  F019         	movff	_width+1,stoa@w+1
  7154                           
  7155                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  7156   003480  B059               	btfsc	_flags^0,0,c
  7157   003482  EF45  F01A         	goto	u8271
  7158   003486  EF47  F01A         	goto	u8270
  7159   00348A                     u8271:
  7160   00348A  EF83  F01A         	goto	l6574
  7161   00348E                     u8270:
  7162   00348E  EF55  F01A         	goto	l6568
  7163   003492                     l6564:
  7164                           
  7165                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  7166   003492  0E00               	movlw	0
  7167   003494  6E08               	movwf	(fputc@c+1)^0,c
  7168   003496  0E20               	movlw	32
  7169   003498  6E07               	movwf	fputc@c^0,c
  7170   00349A  C010  F009         	movff	stoa@fp,fputc@fp
  7171   00349E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7172   0034A2  EC03  F020         	call	_fputc	;wreg free
  7173   0034A6                     
  7174                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  7175   0034A6  4A1C               	infsnz	stoa@l^0,f,c
  7176   0034A8  2A1D               	incf	(stoa@l+1)^0,f,c
  7177   0034AA                     l6568:
  7178                           
  7179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  7180   0034AA  5018               	movf	stoa@w^0,w,c
  7181   0034AC  5C1C               	subwf	stoa@l^0,w,c
  7182   0034AE  501D               	movf	(stoa@l+1)^0,w,c
  7183   0034B0  0A80               	xorlw	128
  7184   0034B2  6E14               	movwf	??_stoa^0,c
  7185   0034B4  5019               	movf	(stoa@w+1)^0,w,c
  7186   0034B6  0A80               	xorlw	128
  7187   0034B8  5814               	subwfb	??_stoa^0,w,c
  7188   0034BA  A0D8               	btfss	status,0,c
  7189   0034BC  EF62  F01A         	goto	u8281
  7190   0034C0  EF64  F01A         	goto	u8280
  7191   0034C4                     u8281:
  7192   0034C4  EF49  F01A         	goto	l6564
  7193   0034C8                     u8280:
  7194   0034C8  EF83  F01A         	goto	l6574
  7195   0034CC                     l6570:
  7196                           
  7197                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  7198   0034CC  C01A  FFF6         	movff	stoa@cp,tblptrl
  7199   0034D0  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7200   0034D4  0E00               	movlw	low (__mediumconst shr (0+16))
  7201   0034D6  6EF8               	movwf	tblptru,c
  7202   0034D8  0E0F               	movlw	(high __ramtop+-1)
  7203   0034DA  64F7               	cpfsgt	tblptrh,c
  7204   0034DC  D003               	bra	u8297
  7205   0034DE  0008               	tblrd		*
  7206   0034E0  50F5               	movf	tablat,w,c
  7207   0034E2  D005               	bra	u8290
  7208   0034E4                     u8297:
  7209   0034E4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7210   0034E8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7211   0034EC  50E7               	movf	indf1,w,c
  7212   0034EE                     u8290:
  7213   0034EE  6E14               	movwf	??_stoa^0,c
  7214   0034F0  5014               	movf	??_stoa^0,w,c
  7215   0034F2  6E07               	movwf	fputc@c^0,c
  7216   0034F4  6A08               	clrf	(fputc@c+1)^0,c
  7217   0034F6  C010  F009         	movff	stoa@fp,fputc@fp
  7218   0034FA  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7219   0034FE  EC03  F020         	call	_fputc	;wreg free
  7220   003502                     
  7221                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  7222   003502  4A1A               	infsnz	stoa@cp^0,f,c
  7223   003504  2A1B               	incf	(stoa@cp+1)^0,f,c
  7224   003506                     l6574:
  7225                           
  7226                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  7227   003506  0616               	decf	stoa@p^0,f,c
  7228   003508  A0D8               	btfss	status,0,c
  7229   00350A  0617               	decf	(stoa@p+1)^0,f,c
  7230   00350C  2816               	incf	stoa@p^0,w,c
  7231   00350E  E106               	bnz	u8301
  7232   003510  2817               	incf	(stoa@p+1)^0,w,c
  7233   003512  A4D8               	btfss	status,2,c
  7234   003514  EF8E  F01A         	goto	u8301
  7235   003518  EF90  F01A         	goto	u8300
  7236   00351C                     u8301:
  7237   00351C  EF66  F01A         	goto	l6570
  7238   003520                     u8300:
  7239   003520                     
  7240                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  7241   003520  A059               	btfss	_flags^0,0,c
  7242   003522  EF95  F01A         	goto	u8311
  7243   003526  EF97  F01A         	goto	u8310
  7244   00352A                     u8311:
  7245   00352A  EFB4  F01A         	goto	l1354
  7246   00352E                     u8310:
  7247   00352E  EFA5  F01A         	goto	l6582
  7248   003532                     l6578:
  7249                           
  7250                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  7251   003532  0E00               	movlw	0
  7252   003534  6E08               	movwf	(fputc@c+1)^0,c
  7253   003536  0E20               	movlw	32
  7254   003538  6E07               	movwf	fputc@c^0,c
  7255   00353A  C010  F009         	movff	stoa@fp,fputc@fp
  7256   00353E  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7257   003542  EC03  F020         	call	_fputc	;wreg free
  7258   003546                     
  7259                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  7260   003546  4A1C               	infsnz	stoa@l^0,f,c
  7261   003548  2A1D               	incf	(stoa@l+1)^0,f,c
  7262   00354A                     l6582:
  7263                           
  7264                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  7265   00354A  5018               	movf	stoa@w^0,w,c
  7266   00354C  5C1C               	subwf	stoa@l^0,w,c
  7267   00354E  501D               	movf	(stoa@l+1)^0,w,c
  7268   003550  0A80               	xorlw	128
  7269   003552  6E14               	movwf	??_stoa^0,c
  7270   003554  5019               	movf	(stoa@w+1)^0,w,c
  7271   003556  0A80               	xorlw	128
  7272   003558  5814               	subwfb	??_stoa^0,w,c
  7273   00355A  A0D8               	btfss	status,0,c
  7274   00355C  EFB2  F01A         	goto	u8321
  7275   003560  EFB4  F01A         	goto	u8320
  7276   003564                     u8321:
  7277   003564  EF99  F01A         	goto	l6578
  7278   003568                     u8320:
  7279   003568                     l1354:
  7280   003568  0012               	return		;funcret
  7281   00356A                     __end_of_stoa:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _read_prec_or_width *****************
  7285 ;; Defined at:
  7286 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  7289 ;;		 -> vfprintf@cfmt(2), 
  7290 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  7291 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  c               1   13[COMRAM] unsigned char 
  7294 ;;  n               2   14[COMRAM] int 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  2   11[COMRAM] int 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7307 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;Total ram usage:        5 bytes
  7309 ;; Hardware stack levels used: 1
  7310 ;; Hardware stack levels required when called: 2
  7311 ;; This function calls:
  7312 ;;		___wmul
  7313 ;; This function is called by:
  7314 ;;		_vfpfcnvrt
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text26
  7319   0042F6                     __ptext26:
  7320                           	callstack 0
  7321   0042F6                     _read_prec_or_width:
  7322                           	callstack 24
  7323   0042F6                     
  7324                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  7325   0042F6  0E00               	movlw	0
  7326   0042F8  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7327   0042FA  0E00               	movlw	0
  7328   0042FC  6E0F               	movwf	read_prec_or_width@n^0,c
  7329   0042FE                     
  7330                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  7331   0042FE  500C               	movf	read_prec_or_width@fmt^0,w,c
  7332   004300  6ED9               	movwf	fsr2l,c
  7333   004302  6ADA               	clrf	fsr2h,c
  7334   004304  CFDE FFF6          	movff	postinc2,tblptrl
  7335   004308  CFDD FFF7          	movff	postdec2,tblptrh
  7336   00430C                     	if	0	;tblptru may be non-zero
  7337   00430C                     	endif
  7338   00430C                     	if	0	;tblptru may be non-zero
  7339   00430C                     	endif
  7340   00430C  0008               	tblrd		*
  7341   00430E  50F5               	movf	tablat,w,c
  7342   004310  0A2A               	xorlw	42
  7343   004312  A4D8               	btfss	status,2,c
  7344   004314  EF8E  F021         	goto	u8331
  7345   004318  EF90  F021         	goto	u8330
  7346   00431C                     u8331:
  7347   00431C  EFBA  F021         	goto	l6596
  7348   004320                     u8330:
  7349   004320                     
  7350                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  7351   004320  500C               	movf	read_prec_or_width@fmt^0,w,c
  7352   004322  6ED9               	movwf	fsr2l,c
  7353   004324  6ADA               	clrf	fsr2h,c
  7354   004326  2ADE               	incf	postinc2,f,c
  7355   004328  0E00               	movlw	0
  7356   00432A  22DD               	addwfc	postdec2,f,c
  7357   00432C                     
  7358                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  7359   00432C  500D               	movf	read_prec_or_width@ap^0,w,c
  7360   00432E  6ED9               	movwf	fsr2l,c
  7361   004330  6ADA               	clrf	fsr2h,c
  7362   004332  0E02               	movlw	2
  7363   004334  26DF               	addwf	indf2,f,c
  7364   004336  5CDF               	subwf	indf2,w,c
  7365   004338  6ED9               	movwf	fsr2l,c
  7366   00433A  6ADA               	clrf	fsr2h,c
  7367   00433C  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  7368   004340  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  7369                           
  7370                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  7371   004344  EFCD  F021         	goto	l1358
  7372   004348                     l6592:
  7373                           
  7374                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  7375   004348  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  7376   00434C  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7377   004350  0E00               	movlw	0
  7378   004352  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7379   004354  0E0A               	movlw	10
  7380   004356  6E08               	movwf	___wmul@multiplicand^0,c
  7381   004358  EC51  F024         	call	___wmul	;wreg free
  7382   00435C  500E               	movf	read_prec_or_width@c^0,w,c
  7383   00435E  2406               	addwf	?___wmul^0,w,c
  7384   004360  6E0F               	movwf	read_prec_or_width@n^0,c
  7385   004362  0E00               	movlw	0
  7386   004364  2007               	addwfc	(?___wmul+1)^0,w,c
  7387   004366  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7388   004368                     
  7389                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  7390   004368  500C               	movf	read_prec_or_width@fmt^0,w,c
  7391   00436A  6ED9               	movwf	fsr2l,c
  7392   00436C  6ADA               	clrf	fsr2h,c
  7393   00436E  2ADE               	incf	postinc2,f,c
  7394   004370  0E00               	movlw	0
  7395   004372  22DD               	addwfc	postdec2,f,c
  7396   004374                     l6596:
  7397                           
  7398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  7399   004374  500C               	movf	read_prec_or_width@fmt^0,w,c
  7400   004376  6ED9               	movwf	fsr2l,c
  7401   004378  6ADA               	clrf	fsr2h,c
  7402   00437A  CFDE FFF6          	movff	postinc2,tblptrl
  7403   00437E  CFDD FFF7          	movff	postdec2,tblptrh
  7404   004382                     	if	0	;tblptru may be non-zero
  7405   004382                     	endif
  7406   004382                     	if	0	;tblptru may be non-zero
  7407   004382                     	endif
  7408   004382  0008               	tblrd		*
  7409   004384  50F5               	movf	tablat,w,c
  7410   004386  0FD0               	addlw	208
  7411   004388  6E0E               	movwf	read_prec_or_width@c^0,c
  7412   00438A  0E09               	movlw	9
  7413   00438C  640E               	cpfsgt	read_prec_or_width@c^0,c
  7414   00438E  EFCB  F021         	goto	u8341
  7415   004392  EFCD  F021         	goto	u8340
  7416   004396                     u8341:
  7417   004396  EFA4  F021         	goto	l6592
  7418   00439A                     u8340:
  7419   00439A                     l1358:
  7420                           
  7421                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  7422   00439A  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  7423   00439E  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7424   0043A2  0012               	return		;funcret
  7425   0043A4                     __end_of_read_prec_or_width:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function ___wmul *****************
  7429 ;; Defined at:
  7430 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  multiplier      2    5[COMRAM] unsigned int 
  7433 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  product         2    9[COMRAM] unsigned int 
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    5[COMRAM] unsigned int 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0, prodl, prodh
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;Total ram usage:        6 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; Hardware stack levels required when called: 1
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_read_prec_or_width
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text27
  7460   0048A2                     __ptext27:
  7461                           	callstack 0
  7462   0048A2                     ___wmul:
  7463                           	callstack 24
  7464   0048A2  5006               	movf	___wmul@multiplier^0,w,c
  7465   0048A4  0208               	mulwf	___wmul@multiplicand^0,c
  7466   0048A6  CFF3 F00A          	movff	prodl,___wmul@product
  7467   0048AA  CFF4 F00B          	movff	prodh,___wmul@product+1
  7468   0048AE  5006               	movf	___wmul@multiplier^0,w,c
  7469   0048B0  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7470   0048B2  50F3               	movf	243,w,c
  7471   0048B4  260B               	addwf	(___wmul@product+1)^0,f,c
  7472   0048B6  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7473   0048B8  0208               	mulwf	___wmul@multiplicand^0,c
  7474   0048BA  50F3               	movf	243,w,c
  7475   0048BC  260B               	addwf	(___wmul@product+1)^0,f,c
  7476   0048BE  C00A  F006         	movff	___wmul@product,?___wmul
  7477   0048C2  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7478   0048C6  0012               	return		;funcret
  7479   0048C8                     __end_of___wmul:
  7480                           	callstack 0
  7481                           
  7482 ;; *************** function _efgtoa *****************
  7483 ;; Defined at:
  7484 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  7487 ;;		 -> NULL(0), sprintf@f(12), 
  7488 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  7489 ;;  c               1   42[BANK0 ] unsigned char 
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;  u               4   85[BANK0 ] struct flui
  7492 ;;  g               4   79[BANK0 ] struct flui
  7493 ;;  l               4   74[BANK0 ] struct flui
  7494 ;;  h               4   70[BANK0 ] struct flui
  7495 ;;  ou              4   64[BANK0 ] struct flui
  7496 ;;  n               2   83[BANK0 ] int 
  7497 ;;  i               2   68[BANK0 ] int 
  7498 ;;  w               2   62[BANK0 ] int 
  7499 ;;  e               2   60[BANK0 ] int 
  7500 ;;  m               2   58[BANK0 ] int 
  7501 ;;  d               2   56[BANK0 ] int 
  7502 ;;  t               2   49[BANK0 ] int 
  7503 ;;  p               2   47[BANK0 ] int 
  7504 ;;  ne              2   45[BANK0 ] int 
  7505 ;;  sign            1   78[BANK0 ] unsigned char 
  7506 ;;  nmode           1   55[BANK0 ] unsigned char 
  7507 ;;  mode            1   54[BANK0 ] unsigned char 
  7508 ;;  pp              1   53[BANK0 ] unsigned char 
  7509 ;;  esign           1    0        unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7519 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;Total ram usage:       53 bytes
  7524 ;; Hardware stack levels used: 1
  7525 ;; Hardware stack levels required when called: 5
  7526 ;; This function calls:
  7527 ;;		___fladd
  7528 ;;		___fldiv
  7529 ;;		___fleq
  7530 ;;		___flge
  7531 ;;		___flmul
  7532 ;;		___flneg
  7533 ;;		___flsub
  7534 ;;		___fltol
  7535 ;;		___fpclassifyf
  7536 ;;		_floorf
  7537 ;;		_labs
  7538 ;;		_memcpy
  7539 ;;		_pad
  7540 ;;		_strcpy
  7541 ;; This function is called by:
  7542 ;;		_vfpfcnvrt
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text28
  7547   000118                     __ptext28:
  7548                           	callstack 0
  7549   000118                     _efgtoa:
  7550                           	callstack 21
  7551   000118                     
  7552                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  7553   000118  0E00               	movlw	0
  7554   00011A  0100               	movlb	0	; () banked
  7555   00011C  6FAE               	movwf	efgtoa@sign& (0+255),b
  7556   00011E                     
  7557                           ; BSR set to: 0
  7558                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7559   00011E  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  7560   000122  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  7561   000126  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  7562   00012A  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  7563   00012E                     
  7564                           ; BSR set to: 0
  7565                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  7566   00012E  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7567   000130  EF9E  F000         	goto	u7900
  7568   000134  EF9C  F000         	goto	u7901
  7569   000138                     u7901:
  7570   000138  EFB2  F000         	goto	l6334
  7571   00013C                     u7900:
  7572   00013C                     
  7573                           ; BSR set to: 0
  7574                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  7575   00013C  0E01               	movlw	1
  7576   00013E  6FAE               	movwf	efgtoa@sign& (0+255),b
  7577   000140                     
  7578                           ; BSR set to: 0
  7579                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  7580   000140  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  7581   000144  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  7582   000148  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  7583   00014C  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  7584   000150  EC9A  F023         	call	___flneg	;wreg free
  7585   000154  C080  F0AF         	movff	?___flneg,efgtoa@g
  7586   000158  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  7587   00015C  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  7588   000160  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  7589   000164                     l6334:
  7590                           
  7591                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7592   000164  0E00               	movlw	0
  7593   000166  0100               	movlb	0	; () banked
  7594   000168  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7595   00016A  0E00               	movlw	0
  7596   00016C  6FB3               	movwf	efgtoa@n& (0+255),b
  7597   00016E                     
  7598                           ; BSR set to: 0
  7599                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  7600   00016E  C055  F09E         	movff	_width,efgtoa@w
  7601   000172  C056  F09F         	movff	_width+1,efgtoa@w+1
  7602   000176                     
  7603                           ; BSR set to: 0
  7604                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7605   000176  51AE               	movf	efgtoa@sign& (0+255),w,b
  7606   000178  B4D8               	btfsc	status,2,c
  7607   00017A  EFC1  F000         	goto	u7911
  7608   00017E  EFC3  F000         	goto	u7910
  7609   000182                     u7911:
  7610   000182  EFD7  F000         	goto	l6348
  7611   000186                     u7910:
  7612   000186                     
  7613                           ; BSR set to: 0
  7614                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  7615   000186  51AE               	movf	efgtoa@sign& (0+255),w,b
  7616   000188  A4D8               	btfss	status,2,c
  7617   00018A  EFC9  F000         	goto	u7921
  7618   00018E  EFCB  F000         	goto	u7920
  7619   000192                     u7921:
  7620   000192  EFD1  F000         	goto	l6344
  7621   000196                     u7920:
  7622   000196                     
  7623                           ; BSR set to: 0
  7624   000196  0E00               	movlw	0
  7625   000198  6F94               	movwf	(_efgtoa$3677+1)& (0+255),b
  7626   00019A  0E2B               	movlw	43
  7627   00019C  6F93               	movwf	_efgtoa$3677& (0+255),b
  7628   00019E  EFD5  F000         	goto	l6346
  7629   0001A2                     l6344:
  7630                           
  7631                           ; BSR set to: 0
  7632   0001A2  0E00               	movlw	0
  7633   0001A4  6F94               	movwf	(_efgtoa$3677+1)& (0+255),b
  7634   0001A6  0E2D               	movlw	45
  7635   0001A8  6F93               	movwf	_efgtoa$3677& (0+255),b
  7636   0001AA                     l6346:
  7637                           
  7638                           ; BSR set to: 0
  7639   0001AA  C093  F0AE         	movff	_efgtoa$3677,efgtoa@sign
  7640   0001AE                     l6348:
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  7644   0001AE  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7645   0001B2  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7646   0001B6  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7647   0001BA  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7648   0001BE  EC17  F01F         	call	___fpclassifyf	;wreg free
  7649   0001C2  0406               	decf	?___fpclassifyf^0,w,c
  7650   0001C4  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7651   0001C6  A4D8               	btfss	status,2,c
  7652   0001C8  EFE8  F000         	goto	u7931
  7653   0001CC  EFEA  F000         	goto	u7930
  7654   0001D0                     u7931:
  7655   0001D0  EF1D  F001         	goto	l6366
  7656   0001D4                     u7930:
  7657   0001D4                     
  7658                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  7659   0001D4  0100               	movlb	0	; () banked
  7660   0001D6  51AE               	movf	efgtoa@sign& (0+255),w,b
  7661   0001D8  B4D8               	btfsc	status,2,c
  7662   0001DA  EFF1  F000         	goto	u7941
  7663   0001DE  EFF3  F000         	goto	u7940
  7664   0001E2                     u7941:
  7665   0001E2  EFFC  F000         	goto	l6358
  7666   0001E6                     u7940:
  7667   0001E6                     
  7668                           ; BSR set to: 0
  7669                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  7670   0001E6  C0AE  F125         	movff	efgtoa@sign,_dbuf
  7671   0001EA                     
  7672                           ; BSR set to: 0
  7673                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  7674   0001EA  079E               	decf	efgtoa@w& (0+255),f,b
  7675   0001EC  A0D8               	btfss	status,0,c
  7676   0001EE  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7677   0001F0                     
  7678                           ; BSR set to: 0
  7679                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7680   0001F0  0E00               	movlw	0
  7681   0001F2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7682   0001F4  0E01               	movlw	1
  7683   0001F6  6FB3               	movwf	efgtoa@n& (0+255),b
  7684   0001F8                     l6358:
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  7688   0001F8  0E25               	movlw	low _dbuf
  7689   0001FA  25B3               	addwf	efgtoa@n& (0+255),w,b
  7690   0001FC  6E06               	movwf	strcpy@dest^0,c
  7691   0001FE  0E01               	movlw	high _dbuf
  7692   000200  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7693   000202  6E07               	movwf	(strcpy@dest+1)^0,c
  7694   000204  0EEA               	movlw	low STR_23
  7695   000206  6E08               	movwf	strcpy@src^0,c
  7696   000208  0EFF               	movlw	high STR_23
  7697   00020A  6E09               	movwf	(strcpy@src+1)^0,c
  7698   00020C  ECB7  F023         	call	_strcpy	;wreg free
  7699   000210                     l6360:
  7700                           
  7701                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7702   000210  0100               	movlb	0	; () banked
  7703   000212  0EFD               	movlw	253
  7704   000214  279E               	addwf	efgtoa@w& (0+255),f,b
  7705   000216  0EFF               	movlw	255
  7706   000218  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7707   00021A                     
  7708                           ; BSR set to: 0
  7709                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  7710   00021A  C084  F017         	movff	efgtoa@fp,pad@fp
  7711   00021E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  7712   000222  0E25               	movlw	low _dbuf
  7713   000224  6E19               	movwf	pad@buf^0,c
  7714   000226  0E01               	movlw	high _dbuf
  7715   000228  6E1A               	movwf	(pad@buf+1)^0,c
  7716   00022A  C09E  F01B         	movff	efgtoa@w,pad@p
  7717   00022E  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  7718   000232  EC27  F022         	call	_pad	;wreg free
  7719   000236  EF88  F005         	goto	l1293
  7720   00023A                     l6366:
  7721                           
  7722                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  7723   00023A  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7724   00023E  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7725   000242  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7726   000246  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7727   00024A  EC17  F01F         	call	___fpclassifyf	;wreg free
  7728   00024E  5006               	movf	?___fpclassifyf^0,w,c
  7729   000250  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7730   000252  A4D8               	btfss	status,2,c
  7731   000254  EF2E  F001         	goto	u7951
  7732   000258  EF30  F001         	goto	u7950
  7733   00025C                     u7951:
  7734   00025C  EF50  F001         	goto	l6384
  7735   000260                     u7950:
  7736   000260                     
  7737                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  7738   000260  0100               	movlb	0	; () banked
  7739   000262  51AE               	movf	efgtoa@sign& (0+255),w,b
  7740   000264  B4D8               	btfsc	status,2,c
  7741   000266  EF37  F001         	goto	u7961
  7742   00026A  EF39  F001         	goto	u7960
  7743   00026E                     u7961:
  7744   00026E  EF42  F001         	goto	l6376
  7745   000272                     u7960:
  7746   000272                     
  7747                           ; BSR set to: 0
  7748                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  7749   000272  C0AE  F125         	movff	efgtoa@sign,_dbuf
  7750   000276                     
  7751                           ; BSR set to: 0
  7752                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  7753   000276  079E               	decf	efgtoa@w& (0+255),f,b
  7754   000278  A0D8               	btfss	status,0,c
  7755   00027A  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7756   00027C                     
  7757                           ; BSR set to: 0
  7758                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7759   00027C  0E00               	movlw	0
  7760   00027E  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7761   000280  0E01               	movlw	1
  7762   000282  6FB3               	movwf	efgtoa@n& (0+255),b
  7763   000284                     l6376:
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  7767   000284  0E25               	movlw	low _dbuf
  7768   000286  25B3               	addwf	efgtoa@n& (0+255),w,b
  7769   000288  6E06               	movwf	strcpy@dest^0,c
  7770   00028A  0E01               	movlw	high _dbuf
  7771   00028C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7772   00028E  6E07               	movwf	(strcpy@dest+1)^0,c
  7773   000290  0EEE               	movlw	low STR_26
  7774   000292  6E08               	movwf	strcpy@src^0,c
  7775   000294  0EFF               	movlw	high STR_26
  7776   000296  6E09               	movwf	(strcpy@src+1)^0,c
  7777   000298  ECB7  F023         	call	_strcpy	;wreg free
  7778   00029C  EF08  F001         	goto	l6360
  7779   0002A0                     l6384:
  7780                           
  7781                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  7782   0002A0  0E00               	movlw	0
  7783   0002A2  0100               	movlb	0	; () banked
  7784   0002A4  6FB5               	movwf	efgtoa@u& (0+255),b
  7785   0002A6  0E00               	movlw	0
  7786   0002A8  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  7787   0002AA  0E80               	movlw	128
  7788   0002AC  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  7789   0002AE  0E3F               	movlw	63
  7790   0002B0  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  7791                           
  7792                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7793   0002B2  0E00               	movlw	0
  7794   0002B4  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7795   0002B6  0E00               	movlw	0
  7796   0002B8  6F9C               	movwf	efgtoa@e& (0+255),b
  7797   0002BA                     
  7798                           ; BSR set to: 0
  7799                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  7800   0002BA  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  7801   0002BE  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  7802   0002C2  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  7803   0002C6  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  7804   0002CA  0E00               	movlw	0
  7805   0002CC  6E0A               	movwf	___fleq@ff2^0,c
  7806   0002CE  0E00               	movlw	0
  7807   0002D0  6E0B               	movwf	(___fleq@ff2+1)^0,c
  7808   0002D2  0E00               	movlw	0
  7809   0002D4  6E0C               	movwf	(___fleq@ff2+2)^0,c
  7810   0002D6  0E00               	movlw	0
  7811   0002D8  6E0D               	movwf	(___fleq@ff2+3)^0,c
  7812   0002DA  ECD2  F021         	call	___fleq	;wreg free
  7813   0002DE  B0D8               	btfsc	status,0,c
  7814   0002E0  EF74  F001         	goto	u7971
  7815   0002E4  EF76  F001         	goto	u7970
  7816   0002E8                     u7971:
  7817   0002E8  EF55  F002         	goto	l1296
  7818   0002EC                     u7970:
  7819   0002EC  EF83  F001         	goto	l6392
  7820   0002F0                     l1298:
  7821                           
  7822                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7823   0002F0  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  7824   0002F4  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  7825   0002F8  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  7826   0002FC  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  7827   000300                     
  7828                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7829   000300  0100               	movlb	0	; () banked
  7830   000302  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  7831   000304  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7832   000306                     l6392:
  7833                           
  7834                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7835   000306  C0B5  F014         	movff	efgtoa@u,___flmul@b
  7836   00030A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  7837   00030E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  7838   000312  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  7839   000316  0E00               	movlw	0
  7840   000318  6E18               	movwf	___flmul@a^0,c
  7841   00031A  0E00               	movlw	0
  7842   00031C  6E19               	movwf	(___flmul@a+1)^0,c
  7843   00031E  0E20               	movlw	32
  7844   000320  6E1A               	movwf	(___flmul@a+2)^0,c
  7845   000322  0E41               	movlw	65
  7846   000324  6E1B               	movwf	(___flmul@a+3)^0,c
  7847   000326  EC6F  F00A         	call	___flmul	;wreg free
  7848   00032A  C014  F0A0         	movff	?___flmul,efgtoa@ou
  7849   00032E  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  7850   000332  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  7851   000336  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  7852   00033A  0100               	movlb	0	; () banked
  7853   00033C  51A0               	movf	efgtoa@ou& (0+255),w,b
  7854   00033E  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7855   000340  6E06               	movwf	labs@a^0,c
  7856   000342  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  7857   000344  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7858   000346  6E07               	movwf	(labs@a+1)^0,c
  7859   000348  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  7860   00034A  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7861   00034C  6E08               	movwf	(labs@a+2)^0,c
  7862   00034E  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  7863   000350  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7864   000352  6E09               	movwf	(labs@a+3)^0,c
  7865   000354  EC76  F022         	call	_labs	;wreg free
  7866   000358  BE09               	btfsc	(?_labs+3)^0,7,c
  7867   00035A  EFBA  F001         	goto	u7981
  7868   00035E  5009               	movf	(?_labs+3)^0,w,c
  7869   000360  1008               	iorwf	(?_labs+2)^0,w,c
  7870   000362  1007               	iorwf	(?_labs+1)^0,w,c
  7871   000364  E109               	bnz	u7980
  7872   000366  0E02               	movlw	2
  7873   000368  5C06               	subwf	?_labs^0,w,c
  7874   00036A  A0D8               	btfss	status,0,c
  7875   00036C  EFBA  F001         	goto	u7981
  7876   000370  EFBC  F001         	goto	u7980
  7877   000374                     u7981:
  7878   000374  EF78  F001         	goto	l1298
  7879   000378                     u7980:
  7880   000378  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  7881   00037C  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  7882   000380  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  7883   000384  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  7884   000388  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  7885   00038C  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  7886   000390  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  7887   000394  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  7888   000398  EC95  F01E         	call	___flge	;wreg free
  7889   00039C  A0D8               	btfss	status,0,c
  7890   00039E  EFD3  F001         	goto	u7991
  7891   0003A2  EFD5  F001         	goto	u7990
  7892   0003A6                     u7991:
  7893   0003A6  EF78  F001         	goto	l1298
  7894   0003AA                     u7990:
  7895   0003AA                     
  7896                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  7897   0003AA  0100               	movlb	0	; () banked
  7898   0003AC  51B5               	movf	efgtoa@u& (0+255),w,b
  7899   0003AE  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7900   0003B0  6E06               	movwf	labs@a^0,c
  7901   0003B2  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  7902   0003B4  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7903   0003B6  6E07               	movwf	(labs@a+1)^0,c
  7904   0003B8  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  7905   0003BA  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7906   0003BC  6E08               	movwf	(labs@a+2)^0,c
  7907   0003BE  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  7908   0003C0  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7909   0003C2  6E09               	movwf	(labs@a+3)^0,c
  7910   0003C4  EC76  F022         	call	_labs	;wreg free
  7911   0003C8  BE09               	btfsc	(?_labs+3)^0,7,c
  7912   0003CA  EFF4  F001         	goto	u8000
  7913   0003CE  5009               	movf	(?_labs+3)^0,w,c
  7914   0003D0  1008               	iorwf	(?_labs+2)^0,w,c
  7915   0003D2  1007               	iorwf	(?_labs+1)^0,w,c
  7916   0003D4  E107               	bnz	u8001
  7917   0003D6  0E02               	movlw	2
  7918   0003D8  5C06               	subwf	?_labs^0,w,c
  7919   0003DA  B0D8               	btfsc	status,0,c
  7920   0003DC  EFF2  F001         	goto	u8001
  7921   0003E0  EFF4  F001         	goto	u8000
  7922   0003E4                     u8001:
  7923   0003E4  EF3C  F002         	goto	l6410
  7924   0003E8                     u8000:
  7925   0003E8                     l6400:
  7926                           
  7927                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7928   0003E8  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  7929   0003EC  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  7930   0003F0  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  7931   0003F4  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  7932                           
  7933                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  7934   0003F8  EF55  F002         	goto	l1296
  7935   0003FC                     l6402:
  7936                           
  7937                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  7938   0003FC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  7939   000400  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  7940   000404  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  7941   000408  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  7942   00040C  0E00               	movlw	0
  7943   00040E  6E31               	movwf	___fldiv@a^0,c
  7944   000410  0E00               	movlw	0
  7945   000412  6E32               	movwf	(___fldiv@a+1)^0,c
  7946   000414  0E20               	movlw	32
  7947   000416  6E33               	movwf	(___fldiv@a+2)^0,c
  7948   000418  0E41               	movlw	65
  7949   00041A  6E34               	movwf	(___fldiv@a+3)^0,c
  7950   00041C  EC70  F010         	call	___fldiv	;wreg free
  7951   000420  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  7952   000424  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  7953   000428  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  7954   00042C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  7955   000430                     
  7956                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
  7957   000430  0100               	movlb	0	; () banked
  7958   000432  079C               	decf	efgtoa@e& (0+255),f,b
  7959   000434  A0D8               	btfss	status,0,c
  7960   000436  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  7961   000438                     
  7962                           ; BSR set to: 0
  7963                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
  7964   000438  51B5               	movf	efgtoa@u& (0+255),w,b
  7965   00043A  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7966   00043C  6E06               	movwf	labs@a^0,c
  7967   00043E  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  7968   000440  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7969   000442  6E07               	movwf	(labs@a+1)^0,c
  7970   000444  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  7971   000446  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7972   000448  6E08               	movwf	(labs@a+2)^0,c
  7973   00044A  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  7974   00044C  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7975   00044E  6E09               	movwf	(labs@a+3)^0,c
  7976   000450  EC76  F022         	call	_labs	;wreg free
  7977   000454  BE09               	btfsc	(?_labs+3)^0,7,c
  7978   000456  EF3A  F002         	goto	u8010
  7979   00045A  5009               	movf	(?_labs+3)^0,w,c
  7980   00045C  1008               	iorwf	(?_labs+2)^0,w,c
  7981   00045E  1007               	iorwf	(?_labs+1)^0,w,c
  7982   000460  E107               	bnz	u8011
  7983   000462  0E02               	movlw	2
  7984   000464  5C06               	subwf	?_labs^0,w,c
  7985   000466  B0D8               	btfsc	status,0,c
  7986   000468  EF38  F002         	goto	u8011
  7987   00046C  EF3A  F002         	goto	u8010
  7988   000470                     u8011:
  7989   000470  EF3C  F002         	goto	l6410
  7990   000474                     u8010:
  7991   000474  EFF4  F001         	goto	l6400
  7992   000478                     l6410:
  7993                           
  7994                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
  7995   000478  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  7996   00047C  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  7997   000480  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  7998   000484  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  7999   000488  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  8000   00048C  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  8001   000490  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  8002   000494  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  8003   000498  EC95  F01E         	call	___flge	;wreg free
  8004   00049C  A0D8               	btfss	status,0,c
  8005   00049E  EF53  F002         	goto	u8021
  8006   0004A2  EF55  F002         	goto	u8020
  8007   0004A6                     u8021:
  8008   0004A6  EFFE  F001         	goto	l6402
  8009   0004AA                     u8020:
  8010   0004AA                     l1296:
  8011                           
  8012                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8013   0004AA  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  8014                           
  8015                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
  8016   0004AE  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  8017   0004B2                     
  8018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  8019   0004B2  BE58               	btfsc	(_prec+1)^0,7,c
  8020   0004B4  EF5E  F002         	goto	u8031
  8021   0004B8  EF60  F002         	goto	u8030
  8022   0004BC                     u8031:
  8023   0004BC  EF66  F002         	goto	l6416
  8024   0004C0                     u8030:
  8025   0004C0  C057  F08F         	movff	_prec,efgtoa@p
  8026   0004C4  C058  F090         	movff	_prec+1,efgtoa@p+1
  8027   0004C8  EF6B  F002         	goto	l6418
  8028   0004CC                     l6416:
  8029   0004CC  0E00               	movlw	0
  8030   0004CE  0100               	movlb	0	; () banked
  8031   0004D0  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  8032   0004D2  0E06               	movlw	6
  8033   0004D4  6F8F               	movwf	efgtoa@p& (0+255),b
  8034   0004D6                     l6418:
  8035                           
  8036                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
  8037   0004D6  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  8038   0004DA  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  8039   0004DE                     
  8040                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
  8041   0004DE  0100               	movlb	0	; () banked
  8042   0004E0  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8043   0004E2  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8044   0004E4                     
  8045                           ; BSR set to: 0
  8046                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
  8047   0004E4  0E66               	movlw	102
  8048   0004E6  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8049   0004E8  A4D8               	btfss	status,2,c
  8050   0004EA  EF79  F002         	goto	u8041
  8051   0004EE  EF7B  F002         	goto	u8040
  8052   0004F2                     u8041:
  8053   0004F2  EF9B  F002         	goto	l6432
  8054   0004F6                     u8040:
  8055   0004F6                     
  8056                           ; BSR set to: 0
  8057                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
  8058   0004F6  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8059   0004F8  EF82  F002         	goto	u8050
  8060   0004FC  EF80  F002         	goto	u8051
  8061   000500                     u8051:
  8062   000500  EF8E  F002         	goto	l6428
  8063   000504                     u8050:
  8064   000504                     
  8065                           ; BSR set to: 0
  8066                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
  8067   000504  0E00               	movlw	0
  8068   000506  6FB5               	movwf	efgtoa@u& (0+255),b
  8069   000508  0E00               	movlw	0
  8070   00050A  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  8071   00050C  0E80               	movlw	128
  8072   00050E  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  8073   000510  0E3F               	movlw	63
  8074   000512  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  8075                           
  8076                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
  8077   000514  0E00               	movlw	0
  8078   000516  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  8079   000518  0E00               	movlw	0
  8080   00051A  6F9C               	movwf	efgtoa@e& (0+255),b
  8081   00051C                     l6428:
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
  8085   00051C  0E67               	movlw	103
  8086   00051E  1996               	xorwf	efgtoa@mode& (0+255),w,b
  8087   000520  B4D8               	btfsc	status,2,c
  8088   000522  EF95  F002         	goto	u8061
  8089   000526  EF97  F002         	goto	u8060
  8090   00052A                     u8061:
  8091   00052A  EF9B  F002         	goto	l6432
  8092   00052E                     u8060:
  8093   00052E                     
  8094                           ; BSR set to: 0
  8095                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
  8096   00052E  519C               	movf	efgtoa@e& (0+255),w,b
  8097   000530  279A               	addwf	efgtoa@m& (0+255),f,b
  8098   000532  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  8099   000534  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8100   000536                     l6432:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8104   000536  0E00               	movlw	0
  8105   000538  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8106   00053A  0E00               	movlw	0
  8107   00053C  6FA4               	movwf	efgtoa@i& (0+255),b
  8108   00053E                     
  8109                           ; BSR set to: 0
  8110                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8111   00053E  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  8112   000542  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  8113   000546  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  8114   00054A  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  8115   00054E                     
  8116                           ; BSR set to: 0
  8117                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8118   00054E  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  8119   000552  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  8120   000556  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  8121   00055A  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  8122                           
  8123                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  8124   00055E  EF2C  F003         	goto	l6446
  8125   000562                     l6438:
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
  8129   000562  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8130   000566  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8131   00056A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8132   00056E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8133   000572  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8134   000576  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8135   00057A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8136   00057E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8137   000582  EC70  F010         	call	___fldiv	;wreg free
  8138   000586  C02D  F046         	movff	?___fldiv,floorf@x
  8139   00058A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8140   00058E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8141   000592  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8142   000596  ECF9  F015         	call	_floorf	;wreg free
  8143   00059A  C046  F0AA         	movff	?_floorf,efgtoa@l
  8144   00059E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8145   0005A2  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8146   0005A6  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8147                           
  8148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
  8149   0005AA  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8150   0005AE  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8151   0005B2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8152   0005B6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8153   0005BA  EC11  F01E         	call	___fltol	;wreg free
  8154   0005BE  C064  F098         	movff	?___fltol,efgtoa@d
  8155   0005C2  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8156   0005C6                     
  8157                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
  8158   0005C6  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8159   0005CA  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8160   0005CE  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8161   0005D2  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8162   0005D6  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8163   0005DA  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8164   0005DE  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8165   0005E2  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8166   0005E6  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8167   0005EA  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8168   0005EE  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8169   0005F2  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8170   0005F6  EC6F  F00A         	call	___flmul	;wreg free
  8171   0005FA  C014  F068         	movff	?___flmul,___flsub@a
  8172   0005FE  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8173   000602  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8174   000606  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8175   00060A  EC12  F023         	call	___flsub	;wreg free
  8176   00060E  C064  F0A6         	movff	?___flsub,efgtoa@h
  8177   000612  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8178   000616  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8179   00061A  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8180   00061E                     
  8181                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
  8182   00061E  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8183   000622  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8184   000626  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8185   00062A  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8186   00062E  0E00               	movlw	0
  8187   000630  6E31               	movwf	___fldiv@a^0,c
  8188   000632  0E00               	movlw	0
  8189   000634  6E32               	movwf	(___fldiv@a+1)^0,c
  8190   000636  0E20               	movlw	32
  8191   000638  6E33               	movwf	(___fldiv@a+2)^0,c
  8192   00063A  0E41               	movlw	65
  8193   00063C  6E34               	movwf	(___fldiv@a+3)^0,c
  8194   00063E  EC70  F010         	call	___fldiv	;wreg free
  8195   000642  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8196   000646  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8197   00064A  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8198   00064E  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8199   000652                     
  8200                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8201   000652  0100               	movlb	0	; () banked
  8202   000654  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8203   000656  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8204   000658                     l6446:
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  8208   000658  519A               	movf	efgtoa@m& (0+255),w,b
  8209   00065A  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8210   00065C  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8211   00065E  0A80               	xorlw	128
  8212   000660  6F8B               	movwf	??_efgtoa& (0+255),b
  8213   000662  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8214   000664  0A80               	xorlw	128
  8215   000666  598B               	subwfb	??_efgtoa& (0+255),w,b
  8216   000668  A0D8               	btfss	status,0,c
  8217   00066A  EF39  F003         	goto	u8071
  8218   00066E  EF3B  F003         	goto	u8070
  8219   000672                     u8071:
  8220   000672  EFB1  F002         	goto	l6438
  8221   000676                     u8070:
  8222   000676                     
  8223                           ; BSR set to: 0
  8224                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
  8225   000676  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8226   00067A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8227   00067E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8228   000682  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8229   000686  0E00               	movlw	0
  8230   000688  6E18               	movwf	___flmul@a^0,c
  8231   00068A  0E00               	movlw	0
  8232   00068C  6E19               	movwf	(___flmul@a+1)^0,c
  8233   00068E  0EA0               	movlw	160
  8234   000690  6E1A               	movwf	(___flmul@a+2)^0,c
  8235   000692  0E40               	movlw	64
  8236   000694  6E1B               	movwf	(___flmul@a+3)^0,c
  8237   000696  EC6F  F00A         	call	___flmul	;wreg free
  8238   00069A  C014  F0AA         	movff	?___flmul,efgtoa@l
  8239   00069E  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  8240   0006A2  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  8241   0006A6  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  8242   0006AA                     
  8243                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
  8244   0006AA  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8245   0006AE  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8246   0006B2  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8247   0006B6  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8248   0006BA  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  8249   0006BE  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  8250   0006C2  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  8251   0006C6  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  8252   0006CA  EC95  F01E         	call	___flge	;wreg free
  8253   0006CE  B0D8               	btfsc	status,0,c
  8254   0006D0  EF6C  F003         	goto	u8081
  8255   0006D4  EF6E  F003         	goto	u8080
  8256   0006D8                     u8081:
  8257   0006D8  EF79  F003         	goto	l6454
  8258   0006DC                     u8080:
  8259   0006DC                     
  8260                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
  8261   0006DC  0E00               	movlw	0
  8262   0006DE  0100               	movlb	0	; () banked
  8263   0006E0  6FAA               	movwf	efgtoa@l& (0+255),b
  8264   0006E2  0E00               	movlw	0
  8265   0006E4  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8266   0006E6  0E00               	movlw	0
  8267   0006E8  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8268   0006EA  0E00               	movlw	0
  8269   0006EC  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8270                           
  8271                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
  8272   0006EE  EFA2  F003         	goto	l6460
  8273   0006F2                     l6454:
  8274                           
  8275                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
  8276   0006F2  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
  8277   0006F6  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  8278   0006FA  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  8279   0006FE  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  8280   000702  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
  8281   000706  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  8282   00070A  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  8283   00070E  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  8284   000712  ECD2  F021         	call	___fleq	;wreg free
  8285   000716  A0D8               	btfss	status,0,c
  8286   000718  EF90  F003         	goto	u8091
  8287   00071C  EF92  F003         	goto	u8090
  8288   000720                     u8091:
  8289   000720  EFA2  F003         	goto	l6460
  8290   000724                     u8090:
  8291   000724  0100               	movlb	0	; () banked
  8292   000726  B198               	btfsc	efgtoa@d& (0+255),0,b
  8293   000728  EF98  F003         	goto	u8101
  8294   00072C  EF9A  F003         	goto	u8100
  8295   000730                     u8101:
  8296   000730  EFA2  F003         	goto	l6460
  8297   000734                     u8100:
  8298   000734                     
  8299                           ; BSR set to: 0
  8300                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
  8301   000734  0E00               	movlw	0
  8302   000736  6FAA               	movwf	efgtoa@l& (0+255),b
  8303   000738  0E00               	movlw	0
  8304   00073A  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8305   00073C  0E00               	movlw	0
  8306   00073E  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8307   000740  0E00               	movlw	0
  8308   000742  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8309   000744                     l6460:
  8310                           
  8311                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
  8312   000744  C0AF  F046         	movff	efgtoa@g,___fladd@b
  8313   000748  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
  8314   00074C  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
  8315   000750  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
  8316   000754  C0AA  F04A         	movff	efgtoa@l,___fladd@a
  8317   000758  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
  8318   00075C  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
  8319   000760  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
  8320   000764  EC0E  F008         	call	___fladd	;wreg free
  8321   000768  C046  F0A6         	movff	?___fladd,efgtoa@h
  8322   00076C  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
  8323   000770  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
  8324   000774  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
  8325   000778                     
  8326                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  8327   000778  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8328   00077C  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8329   000780  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8330   000784  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8331   000788  0E00               	movlw	0
  8332   00078A  6E18               	movwf	___flmul@a^0,c
  8333   00078C  0E00               	movlw	0
  8334   00078E  6E19               	movwf	(___flmul@a+1)^0,c
  8335   000790  0E20               	movlw	32
  8336   000792  6E1A               	movwf	(___flmul@a+2)^0,c
  8337   000794  0E41               	movlw	65
  8338   000796  6E1B               	movwf	(___flmul@a+3)^0,c
  8339   000798  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8340   00079C  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8341   0007A0  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8342   0007A4  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8343   0007A8  EC6F  F00A         	call	___flmul	;wreg free
  8344   0007AC  C014  F031         	movff	?___flmul,___flge@ff2
  8345   0007B0  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  8346   0007B4  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  8347   0007B8  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  8348   0007BC  EC95  F01E         	call	___flge	;wreg free
  8349   0007C0  A0D8               	btfss	status,0,c
  8350   0007C2  EFE5  F003         	goto	u8111
  8351   0007C6  EFE7  F003         	goto	u8110
  8352   0007CA                     u8111:
  8353   0007CA  EF10  F004         	goto	l6472
  8354   0007CE                     u8110:
  8355   0007CE                     
  8356                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
  8357   0007CE  0100               	movlb	0	; () banked
  8358   0007D0  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8359   0007D2  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8360   0007D4                     
  8361                           ; BSR set to: 0
  8362                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
  8363   0007D4  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8364   0007D8  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8365   0007DC  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8366   0007E0  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8367   0007E4  0E00               	movlw	0
  8368   0007E6  6E18               	movwf	___flmul@a^0,c
  8369   0007E8  0E00               	movlw	0
  8370   0007EA  6E19               	movwf	(___flmul@a+1)^0,c
  8371   0007EC  0E20               	movlw	32
  8372   0007EE  6E1A               	movwf	(___flmul@a+2)^0,c
  8373   0007F0  0E41               	movlw	65
  8374   0007F2  6E1B               	movwf	(___flmul@a+3)^0,c
  8375   0007F4  EC6F  F00A         	call	___flmul	;wreg free
  8376   0007F8  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8377   0007FC  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8378   000800  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8379   000804  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8380   000808                     
  8381                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
  8382   000808  0E66               	movlw	102
  8383   00080A  0100               	movlb	0	; () banked
  8384   00080C  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8385   00080E  A4D8               	btfss	status,2,c
  8386   000810  EF0C  F004         	goto	u8121
  8387   000814  EF0E  F004         	goto	u8120
  8388   000818                     u8121:
  8389   000818  EF10  F004         	goto	l6472
  8390   00081C                     u8120:
  8391   00081C                     
  8392                           ; BSR set to: 0
  8393                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
  8394   00081C  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8395   00081E  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8396   000820                     l6472:
  8397                           
  8398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8399   000820  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8400   000824  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8401   000828  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8402   00082C  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8403   000830                     
  8404                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8405   000830  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
  8406   000834  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
  8407   000838                     
  8408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8409   000838  0E00               	movlw	0
  8410   00083A  0100               	movlb	0	; () banked
  8411   00083C  6F95               	movwf	efgtoa@pp& (0+255),b
  8412   00083E                     
  8413                           ; BSR set to: 0
  8414                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8415   00083E  0E00               	movlw	0
  8416   000840  6F92               	movwf	(efgtoa@t+1)& (0+255),b
  8417   000842  0E00               	movlw	0
  8418   000844  6F91               	movwf	efgtoa@t& (0+255),b
  8419   000846                     
  8420                           ; BSR set to: 0
  8421                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8422   000846  0E00               	movlw	0
  8423   000848  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8424   00084A  0E00               	movlw	0
  8425   00084C  6FA4               	movwf	efgtoa@i& (0+255),b
  8426                           
  8427                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8428   00084E  EF0E  F005         	goto	l6522
  8429   000852                     l6482:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
  8433   000852  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8434   000856  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8435   00085A  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8436   00085E  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8437   000862  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8438   000866  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8439   00086A  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8440   00086E  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8441   000872  EC70  F010         	call	___fldiv	;wreg free
  8442   000876  C02D  F046         	movff	?___fldiv,floorf@x
  8443   00087A  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8444   00087E  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8445   000882  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8446   000886  ECF9  F015         	call	_floorf	;wreg free
  8447   00088A  C046  F0AA         	movff	?_floorf,efgtoa@l
  8448   00088E  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8449   000892  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8450   000896  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8451                           
  8452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
  8453   00089A  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8454   00089E  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8455   0008A2  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8456   0008A6  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8457   0008AA  EC11  F01E         	call	___fltol	;wreg free
  8458   0008AE  0100               	movlb	0	; () banked
  8459   0008B0  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  8460   0008B2  EF66  F004         	goto	u8130
  8461   0008B6  5165               	movf	(?___fltol+1)& (0+255),w,b
  8462   0008B8  E107               	bnz	u8131
  8463   0008BA  0E0A               	movlw	10
  8464   0008BC  5D64               	subwf	?___fltol& (0+255),w,b
  8465   0008BE  B0D8               	btfsc	status,0,c
  8466   0008C0  EF64  F004         	goto	u8131
  8467   0008C4  EF66  F004         	goto	u8130
  8468   0008C8                     u8131:
  8469   0008C8  EF76  F004         	goto	l6486
  8470   0008CC                     u8130:
  8471   0008CC                     
  8472                           ; BSR set to: 0
  8473   0008CC  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8474   0008D0  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8475   0008D4  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8476   0008D8  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8477   0008DC  EC11  F01E         	call	___fltol	;wreg free
  8478   0008E0  C064  F098         	movff	?___fltol,efgtoa@d
  8479   0008E4  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8480   0008E8  EF7A  F004         	goto	l1326
  8481   0008EC                     l6486:
  8482                           
  8483                           ; BSR set to: 0
  8484   0008EC  0E00               	movlw	0
  8485   0008EE  6F99               	movwf	(efgtoa@d+1)& (0+255),b
  8486   0008F0  0E09               	movlw	9
  8487   0008F2  6F98               	movwf	efgtoa@d& (0+255),b
  8488   0008F4                     l1326:
  8489                           
  8490                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
  8491   0008F4  0100               	movlb	0	; () banked
  8492   0008F6  5195               	movf	efgtoa@pp& (0+255),w,b
  8493   0008F8  A4D8               	btfss	status,2,c
  8494   0008FA  EF81  F004         	goto	u8141
  8495   0008FE  EF83  F004         	goto	u8140
  8496   000902                     u8141:
  8497   000902  EFAB  F004         	goto	l6506
  8498   000906                     u8140:
  8499   000906                     
  8500                           ; BSR set to: 0
  8501   000906  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8502   000908  EF8A  F004         	goto	u8150
  8503   00090C  EF88  F004         	goto	u8151
  8504   000910                     u8151:
  8505   000910  EFAB  F004         	goto	l6506
  8506   000914                     u8150:
  8507   000914                     
  8508                           ; BSR set to: 0
  8509                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
  8510   000914  0E25               	movlw	low _dbuf
  8511   000916  25B3               	addwf	efgtoa@n& (0+255),w,b
  8512   000918  6ED9               	movwf	fsr2l,c
  8513   00091A  0E01               	movlw	high _dbuf
  8514   00091C  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8515   00091E  6EDA               	movwf	fsr2h,c
  8516   000920  0E2E               	movlw	46
  8517   000922  6EDF               	movwf	indf2,c
  8518   000924                     
  8519                           ; BSR set to: 0
  8520   000924  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8521   000926  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8522   000928                     
  8523                           ; BSR set to: 0
  8524                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
  8525   000928  079E               	decf	efgtoa@w& (0+255),f,b
  8526   00092A  A0D8               	btfss	status,0,c
  8527   00092C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8528   00092E                     
  8529                           ; BSR set to: 0
  8530                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
  8531   00092E  0E01               	movlw	1
  8532   000930  6F95               	movwf	efgtoa@pp& (0+255),b
  8533   000932  EFAB  F004         	goto	l6506
  8534   000936                     l6498:
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
  8538   000936  0E25               	movlw	low _dbuf
  8539   000938  25B3               	addwf	efgtoa@n& (0+255),w,b
  8540   00093A  6ED9               	movwf	fsr2l,c
  8541   00093C  0E01               	movlw	high _dbuf
  8542   00093E  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8543   000940  6EDA               	movwf	fsr2h,c
  8544   000942  0E30               	movlw	48
  8545   000944  6EDF               	movwf	indf2,c
  8546   000946                     
  8547                           ; BSR set to: 0
  8548   000946  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8549   000948  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8550   00094A                     
  8551                           ; BSR set to: 0
  8552                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
  8553   00094A  079E               	decf	efgtoa@w& (0+255),f,b
  8554   00094C  A0D8               	btfss	status,0,c
  8555   00094E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8556   000950                     
  8557                           ; BSR set to: 0
  8558                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
  8559   000950  0791               	decf	efgtoa@t& (0+255),f,b
  8560   000952  A0D8               	btfss	status,0,c
  8561   000954  0792               	decf	(efgtoa@t+1)& (0+255),f,b
  8562   000956                     l6506:
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
  8566   000956  5191               	movf	efgtoa@t& (0+255),w,b
  8567   000958  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8568   00095A  A4D8               	btfss	status,2,c
  8569   00095C  EFB2  F004         	goto	u8161
  8570   000960  EFB4  F004         	goto	u8160
  8571   000964                     u8161:
  8572   000964  EF9B  F004         	goto	l6498
  8573   000968                     u8160:
  8574   000968                     
  8575                           ; BSR set to: 0
  8576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
  8577   000968  0E25               	movlw	low _dbuf
  8578   00096A  25B3               	addwf	efgtoa@n& (0+255),w,b
  8579   00096C  6ED9               	movwf	fsr2l,c
  8580   00096E  0E01               	movlw	high _dbuf
  8581   000970  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8582   000972  6EDA               	movwf	fsr2h,c
  8583   000974  5198               	movf	efgtoa@d& (0+255),w,b
  8584   000976  0F30               	addlw	48
  8585   000978  6EDF               	movwf	indf2,c
  8586   00097A                     
  8587                           ; BSR set to: 0
  8588   00097A  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8589   00097C  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8590   00097E                     
  8591                           ; BSR set to: 0
  8592                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
  8593   00097E  079E               	decf	efgtoa@w& (0+255),f,b
  8594   000980  A0D8               	btfss	status,0,c
  8595   000982  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8596   000984                     
  8597                           ; BSR set to: 0
  8598                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
  8599   000984  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8600   000988  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8601   00098C  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8602   000990  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8603   000994  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8604   000998  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8605   00099C  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8606   0009A0  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8607   0009A4  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8608   0009A8  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8609   0009AC  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8610   0009B0  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8611   0009B4  EC6F  F00A         	call	___flmul	;wreg free
  8612   0009B8  C014  F068         	movff	?___flmul,___flsub@a
  8613   0009BC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8614   0009C0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8615   0009C4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8616   0009C8  EC12  F023         	call	___flsub	;wreg free
  8617   0009CC  C064  F0A6         	movff	?___flsub,efgtoa@h
  8618   0009D0  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8619   0009D4  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8620   0009D8  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8621   0009DC                     
  8622                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
  8623   0009DC  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8624   0009E0  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8625   0009E4  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8626   0009E8  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8627   0009EC  0E00               	movlw	0
  8628   0009EE  6E31               	movwf	___fldiv@a^0,c
  8629   0009F0  0E00               	movlw	0
  8630   0009F2  6E32               	movwf	(___fldiv@a+1)^0,c
  8631   0009F4  0E20               	movlw	32
  8632   0009F6  6E33               	movwf	(___fldiv@a+2)^0,c
  8633   0009F8  0E41               	movlw	65
  8634   0009FA  6E34               	movwf	(___fldiv@a+3)^0,c
  8635   0009FC  EC70  F010         	call	___fldiv	;wreg free
  8636   000A00  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8637   000A04  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8638   000A08  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8639   000A0C  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8640   000A10                     
  8641                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
  8642   000A10  0100               	movlb	0	; () banked
  8643   000A12  078D               	decf	efgtoa@ne& (0+255),f,b
  8644   000A14  A0D8               	btfss	status,0,c
  8645   000A16  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  8646   000A18                     
  8647                           ; BSR set to: 0
  8648                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8649   000A18  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8650   000A1A  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8651   000A1C                     l6522:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8655   000A1C  519A               	movf	efgtoa@m& (0+255),w,b
  8656   000A1E  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8657   000A20  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8658   000A22  0A80               	xorlw	128
  8659   000A24  6F8B               	movwf	??_efgtoa& (0+255),b
  8660   000A26  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8661   000A28  0A80               	xorlw	128
  8662   000A2A  598B               	subwfb	??_efgtoa& (0+255),w,b
  8663   000A2C  B0D8               	btfsc	status,0,c
  8664   000A2E  EF1B  F005         	goto	u8171
  8665   000A32  EF1D  F005         	goto	u8170
  8666   000A36                     u8171:
  8667   000A36  EF2B  F005         	goto	l6526
  8668   000A3A                     u8170:
  8669   000A3A                     
  8670                           ; BSR set to: 0
  8671   000A3A  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8672   000A3C  EF29  F005         	goto	u8181
  8673   000A40  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8674   000A42  E109               	bnz	u8180
  8675   000A44  0E4B               	movlw	75
  8676   000A46  5DB3               	subwf	efgtoa@n& (0+255),w,b
  8677   000A48  A0D8               	btfss	status,0,c
  8678   000A4A  EF29  F005         	goto	u8181
  8679   000A4E  EF2B  F005         	goto	u8180
  8680   000A52                     u8181:
  8681   000A52  EF29  F004         	goto	l6482
  8682   000A56                     u8180:
  8683   000A56                     l6526:
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
  8687   000A56  0E00               	movlw	0
  8688   000A58  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8689   000A5A  0E4F               	movlw	79
  8690   000A5C  6FA4               	movwf	efgtoa@i& (0+255),b
  8691   000A5E                     
  8692                           ; BSR set to: 0
  8693                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
  8694   000A5E  0E25               	movlw	low _dbuf
  8695   000A60  25A4               	addwf	efgtoa@i& (0+255),w,b
  8696   000A62  6ED9               	movwf	fsr2l,c
  8697   000A64  0E01               	movlw	high _dbuf
  8698   000A66  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8699   000A68  6EDA               	movwf	fsr2h,c
  8700   000A6A  6ADF               	clrf	indf2,c
  8701   000A6C                     
  8702                           ; BSR set to: 0
  8703                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
  8704   000A6C  0E25               	movlw	low _dbuf
  8705   000A6E  6F8B               	movwf	??_efgtoa& (0+255),b
  8706   000A70  0E01               	movlw	high _dbuf
  8707   000A72  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
  8708   000A74  51B3               	movf	efgtoa@n& (0+255),w,b
  8709   000A76  5F8B               	subwf	??_efgtoa& (0+255),f,b
  8710   000A78  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8711   000A7A  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8712   000A7C  51A4               	movf	efgtoa@i& (0+255),w,b
  8713   000A7E  258B               	addwf	??_efgtoa& (0+255),w,b
  8714   000A80  6E06               	movwf	memcpy@d1^0,c
  8715   000A82  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8716   000A84  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8717   000A86  6E07               	movwf	(memcpy@d1+1)^0,c
  8718   000A88  0E25               	movlw	low _dbuf
  8719   000A8A  6E08               	movwf	memcpy@s1^0,c
  8720   000A8C  0E01               	movlw	high _dbuf
  8721   000A8E  6E09               	movwf	(memcpy@s1+1)^0,c
  8722   000A90  C0B3  F00A         	movff	efgtoa@n,memcpy@n
  8723   000A94  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
  8724   000A98  ECA1  F022         	call	_memcpy	;wreg free
  8725   000A9C                     
  8726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8727   000A9C  0100               	movlb	0	; () banked
  8728   000A9E  51B3               	movf	efgtoa@n& (0+255),w,b
  8729   000AA0  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8730   000AA2  6FB3               	movwf	efgtoa@n& (0+255),b
  8731   000AA4  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8732   000AA6  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8733   000AA8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8734   000AAA                     
  8735                           ; BSR set to: 0
  8736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  8737   000AAA  51AE               	movf	efgtoa@sign& (0+255),w,b
  8738   000AAC  A4D8               	btfss	status,2,c
  8739   000AAE  EF5B  F005         	goto	u8191
  8740   000AB2  EF5E  F005         	goto	u8190
  8741   000AB6                     u8191:
  8742   000AB6  0E01               	movlw	1
  8743   000AB8  EF5F  F005         	goto	u8200
  8744   000ABC                     u8190:
  8745   000ABC  0E00               	movlw	0
  8746   000ABE                     u8200:
  8747   000ABE  6FA4               	movwf	efgtoa@i& (0+255),b
  8748   000AC0  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
  8749   000AC2                     
  8750                           ; BSR set to: 0
  8751                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8752   000AC2  51AE               	movf	efgtoa@sign& (0+255),w,b
  8753   000AC4  B4D8               	btfsc	status,2,c
  8754   000AC6  EF67  F005         	goto	u8211
  8755   000ACA  EF69  F005         	goto	u8210
  8756   000ACE                     u8211:
  8757   000ACE  EF74  F005         	goto	l6540
  8758   000AD2                     u8210:
  8759   000AD2                     
  8760                           ; BSR set to: 0
  8761                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
  8762   000AD2  07B3               	decf	efgtoa@n& (0+255),f,b
  8763   000AD4  A0D8               	btfss	status,0,c
  8764   000AD6  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
  8765   000AD8  0E25               	movlw	low _dbuf
  8766   000ADA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8767   000ADC  6ED9               	movwf	fsr2l,c
  8768   000ADE  0E01               	movlw	high _dbuf
  8769   000AE0  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8770   000AE2  6EDA               	movwf	fsr2h,c
  8771   000AE4  C0AE  FFDF         	movff	efgtoa@sign,indf2
  8772   000AE8                     l6540:
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8776   000AE8  51A4               	movf	efgtoa@i& (0+255),w,b
  8777   000AEA  5F9E               	subwf	efgtoa@w& (0+255),f,b
  8778   000AEC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8779   000AEE  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8780   000AF0                     
  8781                           ; BSR set to: 0
  8782                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
  8783   000AF0  C084  F017         	movff	efgtoa@fp,pad@fp
  8784   000AF4  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  8785   000AF8  0E25               	movlw	low _dbuf
  8786   000AFA  25B3               	addwf	efgtoa@n& (0+255),w,b
  8787   000AFC  6E19               	movwf	pad@buf^0,c
  8788   000AFE  0E01               	movlw	high _dbuf
  8789   000B00  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8790   000B02  6E1A               	movwf	(pad@buf+1)^0,c
  8791   000B04  C09E  F01B         	movff	efgtoa@w,pad@p
  8792   000B08  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  8793   000B0C  EC27  F022         	call	_pad	;wreg free
  8794   000B10                     l1293:
  8795   000B10  0012               	return		;funcret
  8796   000B12                     __end_of_efgtoa:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _strcpy *****************
  8800 ;; Defined at:
  8801 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  dest            2    5[COMRAM] PTR unsigned char 
  8804 ;;		 -> dbuf(80), 
  8805 ;;  src             2    7[COMRAM] PTR const unsigned char 
  8806 ;;		 -> STR_26(4), STR_23(4), 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  d               2    9[COMRAM] PTR unsigned char 
  8809 ;;		 -> dbuf(80), 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  2    5[COMRAM] PTR unsigned char 
  8812 ;; Registers used:
  8813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8822 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8823 ;;Total ram usage:        6 bytes
  8824 ;; Hardware stack levels used: 1
  8825 ;; Hardware stack levels required when called: 1
  8826 ;; This function calls:
  8827 ;;		Nothing
  8828 ;; This function is called by:
  8829 ;;		_efgtoa
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text29
  8834   00476E                     __ptext29:
  8835                           	callstack 0
  8836   00476E                     _strcpy:
  8837                           	callstack 24
  8838   00476E  C006  F00A         	movff	strcpy@dest,strcpy@d
  8839   004772  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
  8840   004776                     l6230:
  8841   004776  C008  FFF6         	movff	strcpy@src,tblptrl
  8842   00477A  C009  FFF7         	movff	strcpy@src+1,tblptrh
  8843   00477E  4A08               	infsnz	strcpy@src^0,f,c
  8844   004780  2A09               	incf	(strcpy@src+1)^0,f,c
  8845   004782                     	if	0	;tblptru may be non-zero
  8846   004782                     	endif
  8847   004782                     	if	0	;tblptru may be non-zero
  8848   004782                     	endif
  8849   004782  C00A  FFD9         	movff	strcpy@d,fsr2l
  8850   004786  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  8851   00478A  4A0A               	infsnz	strcpy@d^0,f,c
  8852   00478C  2A0B               	incf	(strcpy@d+1)^0,f,c
  8853   00478E  0008               	tblrd		*
  8854   004790  CFF5 FFDF          	movff	tablat,indf2
  8855   004794  50DF               	movf	indf2,w,c
  8856   004796  A4D8               	btfss	status,2,c
  8857   004798  EFD0  F023         	goto	u7681
  8858   00479C  EFD2  F023         	goto	u7680
  8859   0047A0                     u7681:
  8860   0047A0  EFBB  F023         	goto	l6230
  8861   0047A4                     u7680:
  8862   0047A4  0012               	return		;funcret
  8863   0047A6                     __end_of_strcpy:
  8864                           	callstack 0
  8865                           
  8866 ;; *************** function _memcpy *****************
  8867 ;; Defined at:
  8868 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  d1              2    5[COMRAM] PTR void 
  8871 ;;		 -> dbuf(80), 
  8872 ;;  s1              2    7[COMRAM] PTR const void 
  8873 ;;		 -> dbuf(80), 
  8874 ;;  n               2    9[COMRAM] unsigned int 
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8877 ;;		 -> dbuf(80), 
  8878 ;;  d               2   12[COMRAM] PTR unsigned char 
  8879 ;;		 -> dbuf(80), 
  8880 ;;  tmp             1   11[COMRAM] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  2    5[COMRAM] PTR void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8890 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8893 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8894 ;;Total ram usage:       11 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 1
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_efgtoa
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text30
  8905   004542                     __ptext30:
  8906                           	callstack 0
  8907   004542                     _memcpy:
  8908                           	callstack 24
  8909   004542  C008  F00F         	movff	memcpy@s1,memcpy@s
  8910   004546  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  8911   00454A  C006  F00D         	movff	memcpy@d1,memcpy@d
  8912   00454E  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  8913   004552  EFBB  F022         	goto	l6278
  8914   004556                     l6270:
  8915   004556  C00F  FFD9         	movff	memcpy@s,fsr2l
  8916   00455A  C010  FFDA         	movff	memcpy@s+1,fsr2h
  8917   00455E  50DF               	movf	indf2,w,c
  8918   004560  6E0C               	movwf	memcpy@tmp^0,c
  8919   004562  4A0F               	infsnz	memcpy@s^0,f,c
  8920   004564  2A10               	incf	(memcpy@s+1)^0,f,c
  8921   004566  C00D  FFD9         	movff	memcpy@d,fsr2l
  8922   00456A  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  8923   00456E  C00C  FFDF         	movff	memcpy@tmp,indf2
  8924   004572  4A0D               	infsnz	memcpy@d^0,f,c
  8925   004574  2A0E               	incf	(memcpy@d+1)^0,f,c
  8926   004576                     l6278:
  8927   004576  060A               	decf	memcpy@n^0,f,c
  8928   004578  A0D8               	btfss	status,0,c
  8929   00457A  060B               	decf	(memcpy@n+1)^0,f,c
  8930   00457C  280A               	incf	memcpy@n^0,w,c
  8931   00457E  E106               	bnz	u7801
  8932   004580  280B               	incf	(memcpy@n+1)^0,w,c
  8933   004582  A4D8               	btfss	status,2,c
  8934   004584  EFC6  F022         	goto	u7801
  8935   004588  EFC8  F022         	goto	u7800
  8936   00458C                     u7801:
  8937   00458C  EFAB  F022         	goto	l6270
  8938   004590                     u7800:
  8939   004590  0012               	return		;funcret
  8940   004592                     __end_of_memcpy:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function _labs *****************
  8944 ;; Defined at:
  8945 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  a               4    5[COMRAM] long 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  4    5[COMRAM] long 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;Total ram usage:        8 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; Hardware stack levels required when called: 1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_efgtoa
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text31
  8974   0044EC                     __ptext31:
  8975                           	callstack 0
  8976   0044EC                     _labs:
  8977                           	callstack 24
  8978   0044EC  BE09               	btfsc	(labs@a+3)^0,7,c
  8979   0044EE  EF7B  F022         	goto	u7691
  8980   0044F2  EF7D  F022         	goto	u7690
  8981   0044F6                     u7691:
  8982   0044F6  EF87  F022         	goto	l6236
  8983   0044FA                     u7690:
  8984   0044FA  C006  F006         	movff	labs@a,?_labs
  8985   0044FE  C007  F007         	movff	labs@a+1,?_labs+1
  8986   004502  C008  F008         	movff	labs@a+2,?_labs+2
  8987   004506  C009  F009         	movff	labs@a+3,?_labs+3
  8988   00450A  EFA0  F022         	goto	l1442
  8989   00450E                     l6236:
  8990   00450E  C006  F00A         	movff	labs@a,??_labs
  8991   004512  C007  F00B         	movff	labs@a+1,??_labs+1
  8992   004516  C008  F00C         	movff	labs@a+2,??_labs+2
  8993   00451A  C009  F00D         	movff	labs@a+3,??_labs+3
  8994   00451E  1E0A               	comf	??_labs^0,f,c
  8995   004520  1E0B               	comf	(??_labs+1)^0,f,c
  8996   004522  1E0C               	comf	(??_labs+2)^0,f,c
  8997   004524  1E0D               	comf	(??_labs+3)^0,f,c
  8998   004526  2A0A               	incf	??_labs^0,f,c
  8999   004528  0E00               	movlw	0
  9000   00452A  220B               	addwfc	(??_labs+1)^0,f,c
  9001   00452C  220C               	addwfc	(??_labs+2)^0,f,c
  9002   00452E  220D               	addwfc	(??_labs+3)^0,f,c
  9003   004530  C00A  F006         	movff	??_labs,?_labs
  9004   004534  C00B  F007         	movff	??_labs+1,?_labs+1
  9005   004538  C00C  F008         	movff	??_labs+2,?_labs+2
  9006   00453C  C00D  F009         	movff	??_labs+3,?_labs+3
  9007   004540                     l1442:
  9008   004540  0012               	return		;funcret
  9009   004542                     __end_of_labs:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _floorf *****************
  9013 ;; Defined at:
  9014 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  x               4   69[COMRAM] float 
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;  u               4    6[BANK0 ] struct .
  9019 ;;  m               4    0[BANK0 ] unsigned long 
  9020 ;;  e               2    4[BANK0 ] int 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  4   69[COMRAM] float 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9034 ;;Total ram usage:       20 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 1
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		_efgtoa
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text32
  9045   002BF2                     __ptext32:
  9046                           	callstack 0
  9047   002BF2                     _floorf:
  9048                           	callstack 24
  9049   002BF2  C119  F066         	movff	floorf@F521,floorf@u
  9050   002BF6  C11A  F067         	movff	floorf@F521+1,floorf@u+1
  9051   002BFA  C11B  F068         	movff	floorf@F521+2,floorf@u+2
  9052   002BFE  C11C  F069         	movff	floorf@F521+3,floorf@u+3
  9053   002C02  C046  F066         	movff	floorf@x,floorf@u
  9054   002C06  C047  F067         	movff	floorf@x+1,floorf@u+1
  9055   002C0A  C048  F068         	movff	floorf@x+2,floorf@u+2
  9056   002C0E  C049  F069         	movff	floorf@x+3,floorf@u+3
  9057   002C12  0E81               	movlw	129
  9058   002C14  6E4A               	movwf	??_floorf^0,c
  9059   002C16  0EFF               	movlw	255
  9060   002C18  6E4B               	movwf	(??_floorf+1)^0,c
  9061   002C1A  C066  F04C         	movff	floorf@u,??_floorf+2
  9062   002C1E  C067  F04D         	movff	floorf@u+1,??_floorf+3
  9063   002C22  C068  F04E         	movff	floorf@u+2,??_floorf+4
  9064   002C26  C069  F04F         	movff	floorf@u+3,??_floorf+5
  9065   002C2A  0E18               	movlw	24
  9066   002C2C  EF1D  F016         	goto	u7700
  9067   002C30                     u7705:
  9068   002C30  90D8               	bcf	status,0,c
  9069   002C32  324F               	rrcf	(??_floorf+5)^0,f,c
  9070   002C34  324E               	rrcf	(??_floorf+4)^0,f,c
  9071   002C36  324D               	rrcf	(??_floorf+3)^0,f,c
  9072   002C38  324C               	rrcf	(??_floorf+2)^0,f,c
  9073   002C3A                     u7700:
  9074   002C3A  2EE8               	decfsz	wreg,f,c
  9075   002C3C  EF18  F016         	goto	u7705
  9076   002C40  504C               	movf	(??_floorf+2)^0,w,c
  9077   002C42  244A               	addwf	??_floorf^0,w,c
  9078   002C44  0100               	movlb	0	; () banked
  9079   002C46  6F64               	movwf	floorf@e& (0+255),b
  9080   002C48  0E00               	movlw	0
  9081   002C4A  204B               	addwfc	(??_floorf+1)^0,w,c
  9082   002C4C  6F65               	movwf	(floorf@e+1)& (0+255),b
  9083   002C4E  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9084   002C50  EF33  F016         	goto	u7711
  9085   002C54  5165               	movf	(floorf@e+1)& (0+255),w,b
  9086   002C56  E109               	bnz	u7710
  9087   002C58  0E17               	movlw	23
  9088   002C5A  5D64               	subwf	floorf@e& (0+255),w,b
  9089   002C5C  A0D8               	btfss	status,0,c
  9090   002C5E  EF33  F016         	goto	u7711
  9091   002C62  EF35  F016         	goto	u7710
  9092   002C66                     u7711:
  9093   002C66  EF3F  F016         	goto	l6246
  9094   002C6A                     u7710:
  9095   002C6A                     l6244:
  9096                           
  9097                           ; BSR set to: 0
  9098   002C6A  C046  F046         	movff	floorf@x,?_floorf
  9099   002C6E  C047  F047         	movff	floorf@x+1,?_floorf+1
  9100   002C72  C048  F048         	movff	floorf@x+2,?_floorf+2
  9101   002C76  C049  F049         	movff	floorf@x+3,?_floorf+3
  9102   002C7A  EF03  F017         	goto	l1428
  9103   002C7E                     l6246:
  9104                           
  9105                           ; BSR set to: 0
  9106   002C7E  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9107   002C80  EF44  F016         	goto	u7721
  9108   002C84  EF46  F016         	goto	u7720
  9109   002C88                     u7721:
  9110   002C88  EFB7  F016         	goto	l6256
  9111   002C8C                     u7720:
  9112   002C8C                     
  9113                           ; BSR set to: 0
  9114   002C8C  C064  F04A         	movff	floorf@e,??_floorf
  9115   002C90  0EFF               	movlw	255
  9116   002C92  6E4B               	movwf	(??_floorf+1)^0,c
  9117   002C94  0EFF               	movlw	255
  9118   002C96  6E4C               	movwf	(??_floorf+2)^0,c
  9119   002C98  0E7F               	movlw	127
  9120   002C9A  6E4D               	movwf	(??_floorf+3)^0,c
  9121   002C9C  0E00               	movlw	0
  9122   002C9E  6E4E               	movwf	(??_floorf+4)^0,c
  9123   002CA0                     u7735:
  9124   002CA0  664A               	tstfsz	??_floorf^0,c
  9125   002CA2  EF55  F016         	goto	u7736
  9126   002CA6  EF5D  F016         	goto	u7737
  9127   002CAA                     u7736:
  9128   002CAA  344E               	rlcf	(??_floorf+4)^0,w,c
  9129   002CAC  324E               	rrcf	(??_floorf+4)^0,f,c
  9130   002CAE  324D               	rrcf	(??_floorf+3)^0,f,c
  9131   002CB0  324C               	rrcf	(??_floorf+2)^0,f,c
  9132   002CB2  324B               	rrcf	(??_floorf+1)^0,f,c
  9133   002CB4  2E4A               	decfsz	??_floorf^0,f,c
  9134   002CB6  EF50  F016         	goto	u7735
  9135   002CBA                     u7737:
  9136   002CBA  C04B  F060         	movff	??_floorf+1,floorf@m
  9137   002CBE  C04C  F061         	movff	??_floorf+2,floorf@m+1
  9138   002CC2  C04D  F062         	movff	??_floorf+3,floorf@m+2
  9139   002CC6  C04E  F063         	movff	??_floorf+4,floorf@m+3
  9140   002CCA  0100               	movlb	0	; () banked
  9141   002CCC  5160               	movf	floorf@m& (0+255),w,b
  9142   002CCE  1566               	andwf	floorf@u& (0+255),w,b
  9143   002CD0  6E4A               	movwf	??_floorf^0,c
  9144   002CD2  5161               	movf	(floorf@m+1)& (0+255),w,b
  9145   002CD4  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9146   002CD6  6E4B               	movwf	(??_floorf+1)^0,c
  9147   002CD8  5162               	movf	(floorf@m+2)& (0+255),w,b
  9148   002CDA  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9149   002CDC  6E4C               	movwf	(??_floorf+2)^0,c
  9150   002CDE  5163               	movf	(floorf@m+3)& (0+255),w,b
  9151   002CE0  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9152   002CE2  6E4D               	movwf	(??_floorf+3)^0,c
  9153   002CE4  504A               	movf	??_floorf^0,w,c
  9154   002CE6  104B               	iorwf	(??_floorf+1)^0,w,c
  9155   002CE8  104C               	iorwf	(??_floorf+2)^0,w,c
  9156   002CEA  104D               	iorwf	(??_floorf+3)^0,w,c
  9157   002CEC  A4D8               	btfss	status,2,c
  9158   002CEE  EF7B  F016         	goto	u7741
  9159   002CF2  EF7D  F016         	goto	u7740
  9160   002CF6                     u7741:
  9161   002CF6  EF7F  F016         	goto	l6252
  9162   002CFA                     u7740:
  9163   002CFA  EF35  F016         	goto	l6244
  9164   002CFE                     l6252:
  9165                           
  9166                           ; BSR set to: 0
  9167   002CFE  C066  F04A         	movff	floorf@u,??_floorf
  9168   002D02  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9169   002D06  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9170   002D0A  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9171   002D0E  0E20               	movlw	32
  9172   002D10  EF8F  F016         	goto	u7750
  9173   002D14                     u7755:
  9174   002D14  90D8               	bcf	status,0,c
  9175   002D16  324D               	rrcf	(??_floorf+3)^0,f,c
  9176   002D18  324C               	rrcf	(??_floorf+2)^0,f,c
  9177   002D1A  324B               	rrcf	(??_floorf+1)^0,f,c
  9178   002D1C  324A               	rrcf	??_floorf^0,f,c
  9179   002D1E                     u7750:
  9180   002D1E  2EE8               	decfsz	wreg,f,c
  9181   002D20  EF8A  F016         	goto	u7755
  9182   002D24  504A               	movf	??_floorf^0,w,c
  9183   002D26  104B               	iorwf	(??_floorf+1)^0,w,c
  9184   002D28  104C               	iorwf	(??_floorf+2)^0,w,c
  9185   002D2A  104D               	iorwf	(??_floorf+3)^0,w,c
  9186   002D2C  B4D8               	btfsc	status,2,c
  9187   002D2E  EF9B  F016         	goto	u7761
  9188   002D32  EF9D  F016         	goto	u7760
  9189   002D36                     u7761:
  9190   002D36  EFA5  F016         	goto	l1431
  9191   002D3A                     u7760:
  9192   002D3A                     
  9193                           ; BSR set to: 0
  9194   002D3A  5160               	movf	floorf@m& (0+255),w,b
  9195   002D3C  2766               	addwf	floorf@u& (0+255),f,b
  9196   002D3E  5161               	movf	(floorf@m+1)& (0+255),w,b
  9197   002D40  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9198   002D42  5162               	movf	(floorf@m+2)& (0+255),w,b
  9199   002D44  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9200   002D46  5163               	movf	(floorf@m+3)& (0+255),w,b
  9201   002D48  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9202   002D4A                     l1431:
  9203                           
  9204                           ; BSR set to: 0
  9205   002D4A  1D60               	comf	floorf@m& (0+255),w,b
  9206   002D4C  6E4A               	movwf	??_floorf^0,c
  9207   002D4E  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9208   002D50  6E4B               	movwf	(??_floorf+1)^0,c
  9209   002D52  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9210   002D54  6E4C               	movwf	(??_floorf+2)^0,c
  9211   002D56  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9212   002D58  6E4D               	movwf	(??_floorf+3)^0,c
  9213   002D5A  504A               	movf	??_floorf^0,w,c
  9214   002D5C  1766               	andwf	floorf@u& (0+255),f,b
  9215   002D5E  504B               	movf	(??_floorf+1)^0,w,c
  9216   002D60  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9217   002D62  504C               	movf	(??_floorf+2)^0,w,c
  9218   002D64  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9219   002D66  504D               	movf	(??_floorf+3)^0,w,c
  9220   002D68  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9221   002D6A  EFFB  F016         	goto	l6264
  9222   002D6E                     l6256:
  9223                           
  9224                           ; BSR set to: 0
  9225   002D6E  C066  F04A         	movff	floorf@u,??_floorf
  9226   002D72  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9227   002D76  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9228   002D7A  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9229   002D7E  0E20               	movlw	32
  9230   002D80  EFC7  F016         	goto	u7770
  9231   002D84                     u7775:
  9232   002D84  90D8               	bcf	status,0,c
  9233   002D86  324D               	rrcf	(??_floorf+3)^0,f,c
  9234   002D88  324C               	rrcf	(??_floorf+2)^0,f,c
  9235   002D8A  324B               	rrcf	(??_floorf+1)^0,f,c
  9236   002D8C  324A               	rrcf	??_floorf^0,f,c
  9237   002D8E                     u7770:
  9238   002D8E  2EE8               	decfsz	wreg,f,c
  9239   002D90  EFC2  F016         	goto	u7775
  9240   002D94  504A               	movf	??_floorf^0,w,c
  9241   002D96  104B               	iorwf	(??_floorf+1)^0,w,c
  9242   002D98  104C               	iorwf	(??_floorf+2)^0,w,c
  9243   002D9A  104D               	iorwf	(??_floorf+3)^0,w,c
  9244   002D9C  A4D8               	btfss	status,2,c
  9245   002D9E  EFD3  F016         	goto	u7781
  9246   002DA2  EFD5  F016         	goto	u7780
  9247   002DA6                     u7781:
  9248   002DA6  EFDF  F016         	goto	l6260
  9249   002DAA                     u7780:
  9250   002DAA                     
  9251                           ; BSR set to: 0
  9252   002DAA  0E00               	movlw	0
  9253   002DAC  6F66               	movwf	floorf@u& (0+255),b
  9254   002DAE  0E00               	movlw	0
  9255   002DB0  6F67               	movwf	(floorf@u+1)& (0+255),b
  9256   002DB2  0E00               	movlw	0
  9257   002DB4  6F68               	movwf	(floorf@u+2)& (0+255),b
  9258   002DB6  0E00               	movlw	0
  9259   002DB8  6F69               	movwf	(floorf@u+3)& (0+255),b
  9260   002DBA  EFFB  F016         	goto	l6264
  9261   002DBE                     l6260:
  9262                           
  9263                           ; BSR set to: 0
  9264   002DBE  90D8               	bcf	status,0,c
  9265   002DC0  3566               	rlcf	floorf@u& (0+255),w,b
  9266   002DC2  6E4A               	movwf	??_floorf^0,c
  9267   002DC4  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9268   002DC6  6E4B               	movwf	(??_floorf+1)^0,c
  9269   002DC8  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9270   002DCA  6E4C               	movwf	(??_floorf+2)^0,c
  9271   002DCC  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9272   002DCE  6E4D               	movwf	(??_floorf+3)^0,c
  9273   002DD0  504A               	movf	??_floorf^0,w,c
  9274   002DD2  104B               	iorwf	(??_floorf+1)^0,w,c
  9275   002DD4  104C               	iorwf	(??_floorf+2)^0,w,c
  9276   002DD6  104D               	iorwf	(??_floorf+3)^0,w,c
  9277   002DD8  B4D8               	btfsc	status,2,c
  9278   002DDA  EFF1  F016         	goto	u7791
  9279   002DDE  EFF3  F016         	goto	u7790
  9280   002DE2                     u7791:
  9281   002DE2  EFFB  F016         	goto	l6264
  9282   002DE6                     u7790:
  9283   002DE6                     
  9284                           ; BSR set to: 0
  9285   002DE6  0E00               	movlw	0
  9286   002DE8  6F66               	movwf	floorf@u& (0+255),b
  9287   002DEA  0E00               	movlw	0
  9288   002DEC  6F67               	movwf	(floorf@u+1)& (0+255),b
  9289   002DEE  0E80               	movlw	128
  9290   002DF0  6F68               	movwf	(floorf@u+2)& (0+255),b
  9291   002DF2  0EBF               	movlw	191
  9292   002DF4  6F69               	movwf	(floorf@u+3)& (0+255),b
  9293   002DF6                     l6264:
  9294                           
  9295                           ; BSR set to: 0
  9296   002DF6  C066  F046         	movff	floorf@u,?_floorf
  9297   002DFA  C067  F047         	movff	floorf@u+1,?_floorf+1
  9298   002DFE  C068  F048         	movff	floorf@u+2,?_floorf+2
  9299   002E02  C069  F049         	movff	floorf@u+3,?_floorf+3
  9300   002E06                     l1428:
  9301                           
  9302                           ; BSR set to: 0
  9303   002E06  0012               	return		;funcret
  9304   002E08                     __end_of_floorf:
  9305                           	callstack 0
  9306                           
  9307 ;; *************** function ___fpclassifyf *****************
  9308 ;; Defined at:
  9309 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;  x               4    5[COMRAM] float 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  u               4   15[COMRAM] struct .
  9314 ;;  e               2   13[COMRAM] int 
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  2    5[COMRAM] int 
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;Total ram usage:       14 bytes
  9329 ;; Hardware stack levels used: 1
  9330 ;; Hardware stack levels required when called: 1
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		_efgtoa
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text33
  9339   003E2E                     __ptext33:
  9340                           	callstack 0
  9341   003E2E                     ___fpclassifyf:
  9342                           	callstack 24
  9343   003E2E  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9344   003E32  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9345   003E36  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9346   003E3A  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9347   003E3E  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  9348   003E42  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9349   003E46  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9350   003E4A  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9351   003E4E  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9352   003E52  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9353   003E56  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9354   003E5A  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9355   003E5E  0E18               	movlw	24
  9356   003E60  EF37  F01F         	goto	u7610
  9357   003E64                     u7615:
  9358   003E64  90D8               	bcf	status,0,c
  9359   003E66  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  9360   003E68  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  9361   003E6A  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  9362   003E6C  320A               	rrcf	??___fpclassifyf^0,f,c
  9363   003E6E                     u7610:
  9364   003E6E  2EE8               	decfsz	wreg,f,c
  9365   003E70  EF32  F01F         	goto	u7615
  9366   003E74  500A               	movf	??___fpclassifyf^0,w,c
  9367   003E76  6E0E               	movwf	___fpclassifyf@e^0,c
  9368   003E78  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  9369   003E7A  500E               	movf	___fpclassifyf@e^0,w,c
  9370   003E7C  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9371   003E7E  A4D8               	btfss	status,2,c
  9372   003E80  EF44  F01F         	goto	u7621
  9373   003E84  EF46  F01F         	goto	u7620
  9374   003E88                     u7621:
  9375   003E88  EF66  F01F         	goto	l6218
  9376   003E8C                     u7620:
  9377   003E8C  90D8               	bcf	status,0,c
  9378   003E8E  3410               	rlcf	___fpclassifyf@u^0,w,c
  9379   003E90  6E0A               	movwf	??___fpclassifyf^0,c
  9380   003E92  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9381   003E94  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  9382   003E96  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9383   003E98  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  9384   003E9A  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9385   003E9C  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  9386   003E9E  500A               	movf	??___fpclassifyf^0,w,c
  9387   003EA0  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9388   003EA2  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9389   003EA4  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9390   003EA6  A4D8               	btfss	status,2,c
  9391   003EA8  EF58  F01F         	goto	u7631
  9392   003EAC  EF5A  F01F         	goto	u7630
  9393   003EB0                     u7631:
  9394   003EB0  EF60  F01F         	goto	l6214
  9395   003EB4                     u7630:
  9396   003EB4  0E00               	movlw	0
  9397   003EB6  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9398   003EB8  0E02               	movlw	2
  9399   003EBA  6E06               	movwf	?___fpclassifyf^0,c
  9400   003EBC  EF95  F01F         	goto	l1414
  9401   003EC0                     l6214:
  9402   003EC0  0E00               	movlw	0
  9403   003EC2  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9404   003EC4  0E03               	movlw	3
  9405   003EC6  6E06               	movwf	?___fpclassifyf^0,c
  9406   003EC8  EF95  F01F         	goto	l1414
  9407   003ECC                     l6218:
  9408   003ECC  280E               	incf	___fpclassifyf@e^0,w,c
  9409   003ECE  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9410   003ED0  A4D8               	btfss	status,2,c
  9411   003ED2  EF6D  F01F         	goto	u7641
  9412   003ED6  EF6F  F01F         	goto	u7640
  9413   003EDA                     u7641:
  9414   003EDA  EF91  F01F         	goto	l6224
  9415   003EDE                     u7640:
  9416   003EDE  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9417   003EE2  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9418   003EE6  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9419   003EEA  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9420   003EEE  0E09               	movlw	9
  9421   003EF0                     u7655:
  9422   003EF0  90D8               	bcf	status,0,c
  9423   003EF2  360A               	rlcf	??___fpclassifyf^0,f,c
  9424   003EF4  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  9425   003EF6  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  9426   003EF8  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  9427   003EFA  2EE8               	decfsz	wreg,f,c
  9428   003EFC  EF78  F01F         	goto	u7655
  9429   003F00  500A               	movf	??___fpclassifyf^0,w,c
  9430   003F02  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9431   003F04  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9432   003F06  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9433   003F08  B4D8               	btfsc	status,2,c
  9434   003F0A  EF89  F01F         	goto	u7661
  9435   003F0E  EF8C  F01F         	goto	u7660
  9436   003F12                     u7661:
  9437   003F12  0E01               	movlw	1
  9438   003F14  EF8D  F01F         	goto	u7670
  9439   003F18                     u7660:
  9440   003F18  0E00               	movlw	0
  9441   003F1A                     u7670:
  9442   003F1A  6E06               	movwf	?___fpclassifyf^0,c
  9443   003F1C  6A07               	clrf	(?___fpclassifyf+1)^0,c
  9444   003F1E  EF95  F01F         	goto	l1414
  9445   003F22                     l6224:
  9446   003F22  0E00               	movlw	0
  9447   003F24  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9448   003F26  0E04               	movlw	4
  9449   003F28  6E06               	movwf	?___fpclassifyf^0,c
  9450   003F2A                     l1414:
  9451   003F2A  0012               	return		;funcret
  9452   003F2C                     __end_of___fpclassifyf:
  9453                           	callstack 0
  9454                           
  9455 ;; *************** function ___fltol *****************
  9456 ;; Defined at:
  9457 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
  9458 ;; Parameters:    Size  Location     Type
  9459 ;;  f1              4    4[BANK0 ] int 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  exp1            1   82[COMRAM] unsigned char 
  9462 ;;  sign1           1   81[COMRAM] unsigned char 
  9463 ;; Return value:  Size  Location     Type
  9464 ;;                  4    4[BANK0 ] long 
  9465 ;; Registers used:
  9466 ;;		wreg, status,2, status,0
  9467 ;; Tracked objects:
  9468 ;;		On entry : 0/0
  9469 ;;		On exit  : 0/0
  9470 ;;		Unchanged: 0/0
  9471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;Total ram usage:       10 bytes
  9477 ;; Hardware stack levels used: 1
  9478 ;; Hardware stack levels required when called: 1
  9479 ;; This function calls:
  9480 ;;		Nothing
  9481 ;; This function is called by:
  9482 ;;		_runDAC
  9483 ;;		_efgtoa
  9484 ;;		___rem_pio2f
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text34
  9489   003C22                     __ptext34:
  9490                           	callstack 0
  9491   003C22                     ___fltol:
  9492                           	callstack 24
  9493   003C22  0100               	movlb	0	; () banked
  9494   003C24  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9495   003C26  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9496   003C28  6E53               	movwf	___fltol@exp1^0,c
  9497   003C2A  5053               	movf	___fltol@exp1^0,w,c
  9498   003C2C  A4D8               	btfss	status,2,c
  9499   003C2E  EF1B  F01E         	goto	u7491
  9500   003C32  EF1D  F01E         	goto	u7490
  9501   003C36                     u7491:
  9502   003C36  EF27  F01E         	goto	l6148
  9503   003C3A                     u7490:
  9504   003C3A                     l6144:
  9505                           
  9506                           ; BSR set to: 0
  9507   003C3A  0E00               	movlw	0
  9508   003C3C  6F64               	movwf	?___fltol& (0+255),b
  9509   003C3E  0E00               	movlw	0
  9510   003C40  6F65               	movwf	(?___fltol+1)& (0+255),b
  9511   003C42  0E00               	movlw	0
  9512   003C44  6F66               	movwf	(?___fltol+2)& (0+255),b
  9513   003C46  0E00               	movlw	0
  9514   003C48  6F67               	movwf	(?___fltol+3)& (0+255),b
  9515   003C4A  EF94  F01E         	goto	l848
  9516   003C4E                     l6148:
  9517                           
  9518                           ; BSR set to: 0
  9519   003C4E  C064  F068         	movff	___fltol@f1,??___fltol
  9520   003C52  C065  F069         	movff	___fltol@f1+1,??___fltol+1
  9521   003C56  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
  9522   003C5A  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
  9523   003C5E  0E20               	movlw	32
  9524   003C60  EF37  F01E         	goto	u7500
  9525   003C64                     u7505:
  9526   003C64  90D8               	bcf	status,0,c
  9527   003C66  336B               	rrcf	(??___fltol+3)& (0+255),f,b
  9528   003C68  336A               	rrcf	(??___fltol+2)& (0+255),f,b
  9529   003C6A  3369               	rrcf	(??___fltol+1)& (0+255),f,b
  9530   003C6C  3368               	rrcf	??___fltol& (0+255),f,b
  9531   003C6E                     u7500:
  9532   003C6E  2EE8               	decfsz	wreg,f,c
  9533   003C70  EF32  F01E         	goto	u7505
  9534   003C74  5168               	movf	??___fltol& (0+255),w,b
  9535   003C76  6E52               	movwf	___fltol@sign1^0,c
  9536   003C78                     
  9537                           ; BSR set to: 0
  9538   003C78  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
  9539   003C7A                     
  9540                           ; BSR set to: 0
  9541   003C7A  0EFF               	movlw	255
  9542   003C7C  1764               	andwf	___fltol@f1& (0+255),f,b
  9543   003C7E  0EFF               	movlw	255
  9544   003C80  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
  9545   003C82  0EFF               	movlw	255
  9546   003C84  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
  9547   003C86  0E00               	movlw	0
  9548   003C88  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
  9549   003C8A                     
  9550                           ; BSR set to: 0
  9551   003C8A  0E96               	movlw	150
  9552   003C8C  5E53               	subwf	___fltol@exp1^0,f,c
  9553   003C8E                     
  9554                           ; BSR set to: 0
  9555   003C8E  BE53               	btfsc	___fltol@exp1^0,7,c
  9556   003C90  EF4E  F01E         	goto	u7510
  9557   003C94  EF4C  F01E         	goto	u7511
  9558   003C98                     u7511:
  9559   003C98  EF64  F01E         	goto	l6168
  9560   003C9C                     u7510:
  9561   003C9C                     
  9562                           ; BSR set to: 0
  9563   003C9C  5053               	movf	___fltol@exp1^0,w,c
  9564   003C9E  0A80               	xorlw	128
  9565   003CA0  0F97               	addlw	151
  9566   003CA2  B0D8               	btfsc	status,0,c
  9567   003CA4  EF56  F01E         	goto	u7521
  9568   003CA8  EF58  F01E         	goto	u7520
  9569   003CAC                     u7521:
  9570   003CAC  EF5A  F01E         	goto	l6164
  9571   003CB0                     u7520:
  9572   003CB0  EF1D  F01E         	goto	l6144
  9573   003CB4                     l6164:
  9574                           
  9575                           ; BSR set to: 0
  9576   003CB4  90D8               	bcf	status,0,c
  9577   003CB6  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9578   003CB8  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9579   003CBA  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9580   003CBC  3364               	rrcf	___fltol@f1& (0+255),f,b
  9581   003CBE                     
  9582                           ; BSR set to: 0
  9583   003CBE  3E53               	incfsz	___fltol@exp1^0,f,c
  9584   003CC0  EF5A  F01E         	goto	l6164
  9585   003CC4  EF7C  F01E         	goto	l6178
  9586   003CC8                     l6168:
  9587                           
  9588                           ; BSR set to: 0
  9589   003CC8  0E1F               	movlw	31
  9590   003CCA  6453               	cpfsgt	___fltol@exp1^0,c
  9591   003CCC  EF6A  F01E         	goto	u7531
  9592   003CD0  EF6C  F01E         	goto	u7530
  9593   003CD4                     u7531:
  9594   003CD4  EF74  F01E         	goto	l6176
  9595   003CD8                     u7530:
  9596   003CD8  EF1D  F01E         	goto	l6144
  9597   003CDC                     l6174:
  9598                           
  9599                           ; BSR set to: 0
  9600   003CDC  90D8               	bcf	status,0,c
  9601   003CDE  3764               	rlcf	___fltol@f1& (0+255),f,b
  9602   003CE0  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9603   003CE2  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9604   003CE4  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9605   003CE6  0653               	decf	___fltol@exp1^0,f,c
  9606   003CE8                     l6176:
  9607                           
  9608                           ; BSR set to: 0
  9609   003CE8  5053               	movf	___fltol@exp1^0,w,c
  9610   003CEA  A4D8               	btfss	status,2,c
  9611   003CEC  EF7A  F01E         	goto	u7541
  9612   003CF0  EF7C  F01E         	goto	u7540
  9613   003CF4                     u7541:
  9614   003CF4  EF6E  F01E         	goto	l6174
  9615   003CF8                     u7540:
  9616   003CF8                     l6178:
  9617                           
  9618                           ; BSR set to: 0
  9619   003CF8  5052               	movf	___fltol@sign1^0,w,c
  9620   003CFA  B4D8               	btfsc	status,2,c
  9621   003CFC  EF82  F01E         	goto	u7551
  9622   003D00  EF84  F01E         	goto	u7550
  9623   003D04                     u7551:
  9624   003D04  EF8C  F01E         	goto	l6182
  9625   003D08                     u7550:
  9626   003D08                     
  9627                           ; BSR set to: 0
  9628   003D08  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
  9629   003D0A  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
  9630   003D0C  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
  9631   003D0E  6D64               	negf	___fltol@f1& (0+255),b
  9632   003D10  0E00               	movlw	0
  9633   003D12  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9634   003D14  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9635   003D16  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9636   003D18                     l6182:
  9637                           
  9638                           ; BSR set to: 0
  9639   003D18  C064  F064         	movff	___fltol@f1,?___fltol
  9640   003D1C  C065  F065         	movff	___fltol@f1+1,?___fltol+1
  9641   003D20  C066  F066         	movff	___fltol@f1+2,?___fltol+2
  9642   003D24  C067  F067         	movff	___fltol@f1+3,?___fltol+3
  9643   003D28                     l848:
  9644                           
  9645                           ; BSR set to: 0
  9646   003D28  0012               	return		;funcret
  9647   003D2A                     __end_of___fltol:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function ___flsub *****************
  9651 ;; Defined at:
  9652 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  b               4    4[BANK0 ] long 
  9655 ;;  a               4    8[BANK0 ] long 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  4    4[BANK0 ] long 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9667 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9670 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9671 ;;Total ram usage:        8 bytes
  9672 ;; Hardware stack levels used: 1
  9673 ;; Hardware stack levels required when called: 2
  9674 ;; This function calls:
  9675 ;;		___fladd
  9676 ;; This function is called by:
  9677 ;;		_efgtoa
  9678 ;;		___rem_pio2f
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text35
  9683   004624                     __ptext35:
  9684                           	callstack 0
  9685   004624                     ___flsub:
  9686                           	callstack 23
  9687   004624  0E00               	movlw	0
  9688   004626  0100               	movlb	0	; () banked
  9689   004628  1B68               	xorwf	___flsub@a& (0+255),f,b
  9690   00462A  0E00               	movlw	0
  9691   00462C  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
  9692   00462E  0E00               	movlw	0
  9693   004630  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
  9694   004632  0E80               	movlw	128
  9695   004634  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
  9696   004636                     
  9697                           ; BSR set to: 0
  9698   004636  C064  F046         	movff	___flsub@b,___fladd@b
  9699   00463A  C065  F047         	movff	___flsub@b+1,___fladd@b+1
  9700   00463E  C066  F048         	movff	___flsub@b+2,___fladd@b+2
  9701   004642  C067  F049         	movff	___flsub@b+3,___fladd@b+3
  9702   004646  C068  F04A         	movff	___flsub@a,___fladd@a
  9703   00464A  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
  9704   00464E  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
  9705   004652  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
  9706   004656  EC0E  F008         	call	___fladd	;wreg free
  9707   00465A  C046  F064         	movff	?___fladd,?___flsub
  9708   00465E  C047  F065         	movff	?___fladd+1,?___flsub+1
  9709   004662  C048  F066         	movff	?___fladd+2,?___flsub+2
  9710   004666  C049  F067         	movff	?___fladd+3,?___flsub+3
  9711   00466A  0012               	return		;funcret
  9712   00466C                     __end_of___flsub:
  9713                           	callstack 0
  9714                           
  9715 ;; *************** function ___fladd *****************
  9716 ;; Defined at:
  9717 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  b               4   69[COMRAM] long 
  9720 ;;  a               4   73[COMRAM] long 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  grs             1    3[BANK0 ] unsigned char 
  9723 ;;  bexp            1    2[BANK0 ] unsigned char 
  9724 ;;  aexp            1    1[BANK0 ] unsigned char 
  9725 ;;  signs           1    0[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  4   69[COMRAM] unsigned char 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9735 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;Total ram usage:       16 bytes
  9740 ;; Hardware stack levels used: 1
  9741 ;; Hardware stack levels required when called: 1
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_runDAC
  9746 ;;		___flsub
  9747 ;;		_efgtoa
  9748 ;;		_sinf
  9749 ;;		___cosdf
  9750 ;;		___rem_pio2f
  9751 ;;		___sindf
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text36
  9756   00101C                     __ptext36:
  9757                           	callstack 0
  9758   00101C                     ___fladd:
  9759                           	callstack 23
  9760   00101C  5049               	movf	(___fladd@b+3)^0,w,c
  9761   00101E  0B80               	andlw	128
  9762   001020  0100               	movlb	0	; () banked
  9763   001022  6F60               	movwf	___fladd@signs& (0+255),b
  9764   001024  5049               	movf	(___fladd@b+3)^0,w,c
  9765   001026  2449               	addwf	(___fladd@b+3)^0,w,c
  9766   001028  6F62               	movwf	___fladd@bexp& (0+255),b
  9767   00102A                     
  9768                           ; BSR set to: 0
  9769   00102A  AE48               	btfss	(___fladd@b+2)^0,7,c
  9770   00102C  EF1A  F008         	goto	u6461
  9771   001030  EF1C  F008         	goto	u6460
  9772   001034                     u6461:
  9773   001034  EF1D  F008         	goto	l5532
  9774   001038                     u6460:
  9775   001038                     
  9776                           ; BSR set to: 0
  9777   001038  8162               	bsf	___fladd@bexp& (0+255),0,b
  9778   00103A                     l5532:
  9779                           
  9780                           ; BSR set to: 0
  9781   00103A  5162               	movf	___fladd@bexp& (0+255),w,b
  9782   00103C  B4D8               	btfsc	status,2,c
  9783   00103E  EF23  F008         	goto	u6471
  9784   001042  EF25  F008         	goto	u6470
  9785   001046                     u6471:
  9786   001046  EF3A  F008         	goto	l5542
  9787   00104A                     u6470:
  9788   00104A                     
  9789                           ; BSR set to: 0
  9790   00104A  2962               	incf	___fladd@bexp& (0+255),w,b
  9791   00104C  A4D8               	btfss	status,2,c
  9792   00104E  EF2B  F008         	goto	u6481
  9793   001052  EF2D  F008         	goto	u6480
  9794   001056                     u6481:
  9795   001056  EF35  F008         	goto	l5538
  9796   00105A                     u6480:
  9797   00105A                     
  9798                           ; BSR set to: 0
  9799   00105A  0E00               	movlw	0
  9800   00105C  6E46               	movwf	___fladd@b^0,c
  9801   00105E  0E00               	movlw	0
  9802   001060  6E47               	movwf	(___fladd@b+1)^0,c
  9803   001062  0E00               	movlw	0
  9804   001064  6E48               	movwf	(___fladd@b+2)^0,c
  9805   001066  0E00               	movlw	0
  9806   001068  6E49               	movwf	(___fladd@b+3)^0,c
  9807   00106A                     l5538:
  9808                           
  9809                           ; BSR set to: 0
  9810   00106A  8E48               	bsf	(___fladd@b+2)^0,7,c
  9811   00106C                     
  9812                           ; BSR set to: 0
  9813   00106C  0E00               	movlw	0
  9814   00106E  6E49               	movwf	(___fladd@b+3)^0,c
  9815   001070  EF42  F008         	goto	l5544
  9816   001074                     l5542:
  9817                           
  9818                           ; BSR set to: 0
  9819   001074  0E00               	movlw	0
  9820   001076  6E46               	movwf	___fladd@b^0,c
  9821   001078  0E00               	movlw	0
  9822   00107A  6E47               	movwf	(___fladd@b+1)^0,c
  9823   00107C  0E00               	movlw	0
  9824   00107E  6E48               	movwf	(___fladd@b+2)^0,c
  9825   001080  0E00               	movlw	0
  9826   001082  6E49               	movwf	(___fladd@b+3)^0,c
  9827   001084                     l5544:
  9828                           
  9829                           ; BSR set to: 0
  9830   001084  504D               	movf	(___fladd@a+3)^0,w,c
  9831   001086  0B80               	andlw	128
  9832   001088  6F61               	movwf	___fladd@aexp& (0+255),b
  9833   00108A                     
  9834                           ; BSR set to: 0
  9835   00108A  5160               	movf	___fladd@signs& (0+255),w,b
  9836   00108C  1961               	xorwf	___fladd@aexp& (0+255),w,b
  9837   00108E  B4D8               	btfsc	status,2,c
  9838   001090  EF4C  F008         	goto	u6491
  9839   001094  EF4E  F008         	goto	u6490
  9840   001098                     u6491:
  9841   001098  EF4F  F008         	goto	l5550
  9842   00109C                     u6490:
  9843   00109C                     
  9844                           ; BSR set to: 0
  9845   00109C  8D60               	bsf	___fladd@signs& (0+255),6,b
  9846   00109E                     l5550:
  9847                           
  9848                           ; BSR set to: 0
  9849   00109E  504D               	movf	(___fladd@a+3)^0,w,c
  9850   0010A0  244D               	addwf	(___fladd@a+3)^0,w,c
  9851   0010A2  6F61               	movwf	___fladd@aexp& (0+255),b
  9852   0010A4                     
  9853                           ; BSR set to: 0
  9854   0010A4  AE4C               	btfss	(___fladd@a+2)^0,7,c
  9855   0010A6  EF57  F008         	goto	u6501
  9856   0010AA  EF59  F008         	goto	u6500
  9857   0010AE                     u6501:
  9858   0010AE  EF5A  F008         	goto	l5556
  9859   0010B2                     u6500:
  9860   0010B2                     
  9861                           ; BSR set to: 0
  9862   0010B2  8161               	bsf	___fladd@aexp& (0+255),0,b
  9863   0010B4                     l5556:
  9864                           
  9865                           ; BSR set to: 0
  9866   0010B4  5161               	movf	___fladd@aexp& (0+255),w,b
  9867   0010B6  B4D8               	btfsc	status,2,c
  9868   0010B8  EF60  F008         	goto	u6511
  9869   0010BC  EF62  F008         	goto	u6510
  9870   0010C0                     u6511:
  9871   0010C0  EF77  F008         	goto	l5566
  9872   0010C4                     u6510:
  9873   0010C4                     
  9874                           ; BSR set to: 0
  9875   0010C4  2961               	incf	___fladd@aexp& (0+255),w,b
  9876   0010C6  A4D8               	btfss	status,2,c
  9877   0010C8  EF68  F008         	goto	u6521
  9878   0010CC  EF6A  F008         	goto	u6520
  9879   0010D0                     u6521:
  9880   0010D0  EF72  F008         	goto	l5562
  9881   0010D4                     u6520:
  9882   0010D4                     
  9883                           ; BSR set to: 0
  9884   0010D4  0E00               	movlw	0
  9885   0010D6  6E4A               	movwf	___fladd@a^0,c
  9886   0010D8  0E00               	movlw	0
  9887   0010DA  6E4B               	movwf	(___fladd@a+1)^0,c
  9888   0010DC  0E00               	movlw	0
  9889   0010DE  6E4C               	movwf	(___fladd@a+2)^0,c
  9890   0010E0  0E00               	movlw	0
  9891   0010E2  6E4D               	movwf	(___fladd@a+3)^0,c
  9892   0010E4                     l5562:
  9893                           
  9894                           ; BSR set to: 0
  9895   0010E4  8E4C               	bsf	(___fladd@a+2)^0,7,c
  9896   0010E6                     
  9897                           ; BSR set to: 0
  9898   0010E6  0E00               	movlw	0
  9899   0010E8  6E4D               	movwf	(___fladd@a+3)^0,c
  9900   0010EA  EF7F  F008         	goto	l5568
  9901   0010EE                     l5566:
  9902                           
  9903                           ; BSR set to: 0
  9904   0010EE  0E00               	movlw	0
  9905   0010F0  6E4A               	movwf	___fladd@a^0,c
  9906   0010F2  0E00               	movlw	0
  9907   0010F4  6E4B               	movwf	(___fladd@a+1)^0,c
  9908   0010F6  0E00               	movlw	0
  9909   0010F8  6E4C               	movwf	(___fladd@a+2)^0,c
  9910   0010FA  0E00               	movlw	0
  9911   0010FC  6E4D               	movwf	(___fladd@a+3)^0,c
  9912   0010FE                     l5568:
  9913                           
  9914                           ; BSR set to: 0
  9915   0010FE  5162               	movf	___fladd@bexp& (0+255),w,b
  9916   001100  5D61               	subwf	___fladd@aexp& (0+255),w,b
  9917   001102  B0D8               	btfsc	status,0,c
  9918   001104  EF86  F008         	goto	u6531
  9919   001108  EF88  F008         	goto	u6530
  9920   00110C                     u6531:
  9921   00110C  EFAF  F008         	goto	l5604
  9922   001110                     u6530:
  9923   001110                     
  9924                           ; BSR set to: 0
  9925   001110  AD60               	btfss	___fladd@signs& (0+255),6,b
  9926   001112  EF8D  F008         	goto	u6541
  9927   001116  EF8F  F008         	goto	u6540
  9928   00111A                     u6541:
  9929   00111A  EF91  F008         	goto	l5574
  9930   00111E                     u6540:
  9931   00111E                     
  9932                           ; BSR set to: 0
  9933   00111E  0E80               	movlw	128
  9934   001120  1B60               	xorwf	___fladd@signs& (0+255),f,b
  9935   001122                     l5574:
  9936                           
  9937                           ; BSR set to: 0
  9938   001122  C062  F063         	movff	___fladd@bexp,___fladd@grs
  9939   001126                     
  9940                           ; BSR set to: 0
  9941   001126  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  9942   00112A                     
  9943                           ; BSR set to: 0
  9944   00112A  C063  F061         	movff	___fladd@grs,___fladd@aexp
  9945   00112E                     
  9946                           ; BSR set to: 0
  9947   00112E  C046  F063         	movff	___fladd@b,___fladd@grs
  9948   001132                     
  9949                           ; BSR set to: 0
  9950   001132  C04A  F046         	movff	___fladd@a,___fladd@b
  9951   001136                     
  9952                           ; BSR set to: 0
  9953   001136  C063  F04A         	movff	___fladd@grs,___fladd@a
  9954   00113A                     
  9955                           ; BSR set to: 0
  9956   00113A  C047  F063         	movff	___fladd@b+1,___fladd@grs
  9957   00113E                     
  9958                           ; BSR set to: 0
  9959   00113E  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
  9960   001142                     
  9961                           ; BSR set to: 0
  9962   001142  C063  F04B         	movff	___fladd@grs,___fladd@a+1
  9963   001146                     
  9964                           ; BSR set to: 0
  9965   001146  C048  F063         	movff	___fladd@b+2,___fladd@grs
  9966   00114A                     
  9967                           ; BSR set to: 0
  9968   00114A  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
  9969   00114E                     
  9970                           ; BSR set to: 0
  9971   00114E  C063  F04C         	movff	___fladd@grs,___fladd@a+2
  9972   001152                     
  9973                           ; BSR set to: 0
  9974   001152  C049  F063         	movff	___fladd@b+3,___fladd@grs
  9975   001156                     
  9976                           ; BSR set to: 0
  9977   001156  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
  9978   00115A                     
  9979                           ; BSR set to: 0
  9980   00115A  C063  F04D         	movff	___fladd@grs,___fladd@a+3
  9981   00115E                     l5604:
  9982                           
  9983                           ; BSR set to: 0
  9984   00115E  0E00               	movlw	0
  9985   001160  6F63               	movwf	___fladd@grs& (0+255),b
  9986   001162                     
  9987                           ; BSR set to: 0
  9988   001162  5162               	movf	___fladd@bexp& (0+255),w,b
  9989   001164  C061  F04E         	movff	___fladd@aexp,??___fladd
  9990   001168  6A4F               	clrf	(??___fladd+1)^0,c
  9991   00116A  5E4E               	subwf	??___fladd^0,f,c
  9992   00116C  0E00               	movlw	0
  9993   00116E  5A4F               	subwfb	(??___fladd+1)^0,f,c
  9994   001170  BE4F               	btfsc	(??___fladd+1)^0,7,c
  9995   001172  EFC4  F008         	goto	u6551
  9996   001176  504F               	movf	(??___fladd+1)^0,w,c
  9997   001178  E109               	bnz	u6550
  9998   00117A  0E1A               	movlw	26
  9999   00117C  5C4E               	subwf	??___fladd^0,w,c
 10000   00117E  A0D8               	btfss	status,0,c
 10001   001180  EFC4  F008         	goto	u6551
 10002   001184  EFC6  F008         	goto	u6550
 10003   001188                     u6551:
 10004   001188  EFFD  F008         	goto	l1080
 10005   00118C                     u6550:
 10006   00118C                     
 10007                           ; BSR set to: 0
 10008   00118C  5046               	movf	___fladd@b^0,w,c
 10009   00118E  1047               	iorwf	(___fladd@b+1)^0,w,c
 10010   001190  1048               	iorwf	(___fladd@b+2)^0,w,c
 10011   001192  1049               	iorwf	(___fladd@b+3)^0,w,c
 10012   001194  A4D8               	btfss	status,2,c
 10013   001196  EFCF  F008         	goto	u6561
 10014   00119A  EFD2  F008         	goto	u6560
 10015   00119E                     u6561:
 10016   00119E  0E01               	movlw	1
 10017   0011A0  EFD3  F008         	goto	u6570
 10018   0011A4                     u6560:
 10019   0011A4  0E00               	movlw	0
 10020   0011A6                     u6570:
 10021   0011A6  6F63               	movwf	___fladd@grs& (0+255),b
 10022   0011A8                     
 10023                           ; BSR set to: 0
 10024   0011A8  0E00               	movlw	0
 10025   0011AA  6E46               	movwf	___fladd@b^0,c
 10026   0011AC  0E00               	movlw	0
 10027   0011AE  6E47               	movwf	(___fladd@b+1)^0,c
 10028   0011B0  0E00               	movlw	0
 10029   0011B2  6E48               	movwf	(___fladd@b+2)^0,c
 10030   0011B4  0E00               	movlw	0
 10031   0011B6  6E49               	movwf	(___fladd@b+3)^0,c
 10032   0011B8                     
 10033                           ; BSR set to: 0
 10034   0011B8  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 10035   0011BC  EF06  F009         	goto	l1079
 10036   0011C0                     l1081:
 10037                           
 10038                           ; BSR set to: 0
 10039   0011C0  A163               	btfss	___fladd@grs& (0+255),0,b
 10040   0011C2  EFE5  F008         	goto	u6581
 10041   0011C6  EFE7  F008         	goto	u6580
 10042   0011CA                     u6581:
 10043   0011CA  EFED  F008         	goto	l5616
 10044   0011CE                     u6580:
 10045   0011CE                     
 10046                           ; BSR set to: 0
 10047   0011CE  90D8               	bcf	status,0,c
 10048   0011D0  3163               	rrcf	___fladd@grs& (0+255),w,b
 10049   0011D2  0901               	iorlw	1
 10050   0011D4  6F63               	movwf	___fladd@grs& (0+255),b
 10051   0011D6  EFEF  F008         	goto	l5618
 10052   0011DA                     l5616:
 10053                           
 10054                           ; BSR set to: 0
 10055   0011DA  90D8               	bcf	status,0,c
 10056   0011DC  3363               	rrcf	___fladd@grs& (0+255),f,b
 10057   0011DE                     l5618:
 10058                           
 10059                           ; BSR set to: 0
 10060   0011DE  A046               	btfss	___fladd@b^0,0,c
 10061   0011E0  EFF4  F008         	goto	u6591
 10062   0011E4  EFF6  F008         	goto	u6590
 10063   0011E8                     u6591:
 10064   0011E8  EFF7  F008         	goto	l5622
 10065   0011EC                     u6590:
 10066   0011EC                     
 10067                           ; BSR set to: 0
 10068   0011EC  8F63               	bsf	___fladd@grs& (0+255),7,b
 10069   0011EE                     l5622:
 10070                           
 10071                           ; BSR set to: 0
 10072   0011EE  3449               	rlcf	(___fladd@b+3)^0,w,c
 10073   0011F0  3249               	rrcf	(___fladd@b+3)^0,f,c
 10074   0011F2  3248               	rrcf	(___fladd@b+2)^0,f,c
 10075   0011F4  3247               	rrcf	(___fladd@b+1)^0,f,c
 10076   0011F6  3246               	rrcf	___fladd@b^0,f,c
 10077   0011F8                     
 10078                           ; BSR set to: 0
 10079   0011F8  2B62               	incf	___fladd@bexp& (0+255),f,b
 10080   0011FA                     l1080:
 10081                           
 10082                           ; BSR set to: 0
 10083   0011FA  5161               	movf	___fladd@aexp& (0+255),w,b
 10084   0011FC  5D62               	subwf	___fladd@bexp& (0+255),w,b
 10085   0011FE  A0D8               	btfss	status,0,c
 10086   001200  EF04  F009         	goto	u6601
 10087   001204  EF06  F009         	goto	u6600
 10088   001208                     u6601:
 10089   001208  EFE0  F008         	goto	l1081
 10090   00120C                     u6600:
 10091   00120C                     l1079:
 10092                           
 10093                           ; BSR set to: 0
 10094   00120C  BD60               	btfsc	___fladd@signs& (0+255),6,b
 10095   00120E  EF0B  F009         	goto	u6611
 10096   001212  EF0D  F009         	goto	u6610
 10097   001216                     u6611:
 10098   001216  EF4D  F009         	goto	l5650
 10099   00121A                     u6610:
 10100   00121A                     
 10101                           ; BSR set to: 0
 10102   00121A  5162               	movf	___fladd@bexp& (0+255),w,b
 10103   00121C  A4D8               	btfss	status,2,c
 10104   00121E  EF13  F009         	goto	u6621
 10105   001222  EF15  F009         	goto	u6620
 10106   001226                     u6621:
 10107   001226  EF1F  F009         	goto	l5632
 10108   00122A                     u6620:
 10109   00122A                     
 10110                           ; BSR set to: 0
 10111   00122A  0E00               	movlw	0
 10112   00122C  6E46               	movwf	?___fladd^0,c
 10113   00122E  0E00               	movlw	0
 10114   001230  6E47               	movwf	(?___fladd+1)^0,c
 10115   001232  0E00               	movlw	0
 10116   001234  6E48               	movwf	(?___fladd+2)^0,c
 10117   001236  0E00               	movlw	0
 10118   001238  6E49               	movwf	(?___fladd+3)^0,c
 10119   00123A  EF6E  F00A         	goto	l1088
 10120   00123E                     l5632:
 10121                           
 10122                           ; BSR set to: 0
 10123   00123E  504A               	movf	___fladd@a^0,w,c
 10124   001240  2646               	addwf	___fladd@b^0,f,c
 10125   001242  504B               	movf	(___fladd@a+1)^0,w,c
 10126   001244  2247               	addwfc	(___fladd@b+1)^0,f,c
 10127   001246  504C               	movf	(___fladd@a+2)^0,w,c
 10128   001248  2248               	addwfc	(___fladd@b+2)^0,f,c
 10129   00124A  504D               	movf	(___fladd@a+3)^0,w,c
 10130   00124C  2249               	addwfc	(___fladd@b+3)^0,f,c
 10131   00124E                     
 10132                           ; BSR set to: 0
 10133   00124E  A049               	btfss	(___fladd@b+3)^0,0,c
 10134   001250  EF2C  F009         	goto	u6631
 10135   001254  EF2E  F009         	goto	u6630
 10136   001258                     u6631:
 10137   001258  EFDA  F009         	goto	l5686
 10138   00125C                     u6630:
 10139   00125C                     
 10140                           ; BSR set to: 0
 10141   00125C  A163               	btfss	___fladd@grs& (0+255),0,b
 10142   00125E  EF33  F009         	goto	u6641
 10143   001262  EF35  F009         	goto	u6640
 10144   001266                     u6641:
 10145   001266  EF3B  F009         	goto	l5640
 10146   00126A                     u6640:
 10147   00126A                     
 10148                           ; BSR set to: 0
 10149   00126A  90D8               	bcf	status,0,c
 10150   00126C  3163               	rrcf	___fladd@grs& (0+255),w,b
 10151   00126E  0901               	iorlw	1
 10152   001270  6F63               	movwf	___fladd@grs& (0+255),b
 10153   001272  EF3D  F009         	goto	l5642
 10154   001276                     l5640:
 10155                           
 10156                           ; BSR set to: 0
 10157   001276  90D8               	bcf	status,0,c
 10158   001278  3363               	rrcf	___fladd@grs& (0+255),f,b
 10159   00127A                     l5642:
 10160                           
 10161                           ; BSR set to: 0
 10162   00127A  A046               	btfss	___fladd@b^0,0,c
 10163   00127C  EF42  F009         	goto	u6651
 10164   001280  EF44  F009         	goto	u6650
 10165   001284                     u6651:
 10166   001284  EF45  F009         	goto	l5646
 10167   001288                     u6650:
 10168   001288                     
 10169                           ; BSR set to: 0
 10170   001288  8F63               	bsf	___fladd@grs& (0+255),7,b
 10171   00128A                     l5646:
 10172                           
 10173                           ; BSR set to: 0
 10174   00128A  3449               	rlcf	(___fladd@b+3)^0,w,c
 10175   00128C  3249               	rrcf	(___fladd@b+3)^0,f,c
 10176   00128E  3248               	rrcf	(___fladd@b+2)^0,f,c
 10177   001290  3247               	rrcf	(___fladd@b+1)^0,f,c
 10178   001292  3246               	rrcf	___fladd@b^0,f,c
 10179   001294                     
 10180                           ; BSR set to: 0
 10181   001294  2B62               	incf	___fladd@bexp& (0+255),f,b
 10182   001296  EFDA  F009         	goto	l5686
 10183   00129A                     l5650:
 10184                           
 10185                           ; BSR set to: 0
 10186   00129A  504A               	movf	___fladd@a^0,w,c
 10187   00129C  5C46               	subwf	___fladd@b^0,w,c
 10188   00129E  504B               	movf	(___fladd@a+1)^0,w,c
 10189   0012A0  5847               	subwfb	(___fladd@b+1)^0,w,c
 10190   0012A2  504C               	movf	(___fladd@a+2)^0,w,c
 10191   0012A4  5848               	subwfb	(___fladd@b+2)^0,w,c
 10192   0012A6  5049               	movf	(___fladd@b+3)^0,w,c
 10193   0012A8  0A80               	xorlw	128
 10194   0012AA  6E4E               	movwf	??___fladd^0,c
 10195   0012AC  504D               	movf	(___fladd@a+3)^0,w,c
 10196   0012AE  0A80               	xorlw	128
 10197   0012B0  584E               	subwfb	??___fladd^0,w,c
 10198   0012B2  B0D8               	btfsc	status,0,c
 10199   0012B4  EF5E  F009         	goto	u6661
 10200   0012B8  EF60  F009         	goto	u6660
 10201   0012BC                     u6661:
 10202   0012BC  EF8B  F009         	goto	l5660
 10203   0012C0                     u6660:
 10204   0012C0                     
 10205                           ; BSR set to: 0
 10206   0012C0  5046               	movf	___fladd@b^0,w,c
 10207   0012C2  5C4A               	subwf	___fladd@a^0,w,c
 10208   0012C4  6E4E               	movwf	??___fladd^0,c
 10209   0012C6  5047               	movf	(___fladd@b+1)^0,w,c
 10210   0012C8  584B               	subwfb	(___fladd@a+1)^0,w,c
 10211   0012CA  6E4F               	movwf	(??___fladd+1)^0,c
 10212   0012CC  5048               	movf	(___fladd@b+2)^0,w,c
 10213   0012CE  584C               	subwfb	(___fladd@a+2)^0,w,c
 10214   0012D0  6E50               	movwf	(??___fladd+2)^0,c
 10215   0012D2  5049               	movf	(___fladd@b+3)^0,w,c
 10216   0012D4  584D               	subwfb	(___fladd@a+3)^0,w,c
 10217   0012D6  6E51               	movwf	(??___fladd+3)^0,c
 10218   0012D8  0EFF               	movlw	255
 10219   0012DA  244E               	addwf	??___fladd^0,w,c
 10220   0012DC  6E46               	movwf	___fladd@b^0,c
 10221   0012DE  0EFF               	movlw	255
 10222   0012E0  204F               	addwfc	(??___fladd+1)^0,w,c
 10223   0012E2  6E47               	movwf	(___fladd@b+1)^0,c
 10224   0012E4  0EFF               	movlw	255
 10225   0012E6  2050               	addwfc	(??___fladd+2)^0,w,c
 10226   0012E8  6E48               	movwf	(___fladd@b+2)^0,c
 10227   0012EA  0EFF               	movlw	255
 10228   0012EC  2051               	addwfc	(??___fladd+3)^0,w,c
 10229   0012EE  6E49               	movwf	(___fladd@b+3)^0,c
 10230   0012F0  0E80               	movlw	128
 10231   0012F2  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10232   0012F4                     
 10233                           ; BSR set to: 0
 10234   0012F4  6D63               	negf	___fladd@grs& (0+255),b
 10235   0012F6                     
 10236                           ; BSR set to: 0
 10237   0012F6  5163               	movf	___fladd@grs& (0+255),w,b
 10238   0012F8  A4D8               	btfss	status,2,c
 10239   0012FA  EF81  F009         	goto	u6671
 10240   0012FE  EF83  F009         	goto	u6670
 10241   001302                     u6671:
 10242   001302  EF93  F009         	goto	l1096
 10243   001306                     u6670:
 10244   001306                     
 10245                           ; BSR set to: 0
 10246   001306  0E01               	movlw	1
 10247   001308  2646               	addwf	___fladd@b^0,f,c
 10248   00130A  0E00               	movlw	0
 10249   00130C  2247               	addwfc	(___fladd@b+1)^0,f,c
 10250   00130E  2248               	addwfc	(___fladd@b+2)^0,f,c
 10251   001310  2249               	addwfc	(___fladd@b+3)^0,f,c
 10252   001312  EF93  F009         	goto	l1096
 10253   001316                     l5660:
 10254                           
 10255                           ; BSR set to: 0
 10256   001316  504A               	movf	___fladd@a^0,w,c
 10257   001318  5E46               	subwf	___fladd@b^0,f,c
 10258   00131A  504B               	movf	(___fladd@a+1)^0,w,c
 10259   00131C  5A47               	subwfb	(___fladd@b+1)^0,f,c
 10260   00131E  504C               	movf	(___fladd@a+2)^0,w,c
 10261   001320  5A48               	subwfb	(___fladd@b+2)^0,f,c
 10262   001322  504D               	movf	(___fladd@a+3)^0,w,c
 10263   001324  5A49               	subwfb	(___fladd@b+3)^0,f,c
 10264   001326                     l1096:
 10265                           
 10266                           ; BSR set to: 0
 10267   001326  5046               	movf	___fladd@b^0,w,c
 10268   001328  1047               	iorwf	(___fladd@b+1)^0,w,c
 10269   00132A  1048               	iorwf	(___fladd@b+2)^0,w,c
 10270   00132C  1049               	iorwf	(___fladd@b+3)^0,w,c
 10271   00132E  A4D8               	btfss	status,2,c
 10272   001330  EF9C  F009         	goto	u6681
 10273   001334  EF9E  F009         	goto	u6680
 10274   001338                     u6681:
 10275   001338  EFD3  F009         	goto	l5684
 10276   00133C                     u6680:
 10277   00133C                     
 10278                           ; BSR set to: 0
 10279   00133C  5163               	movf	___fladd@grs& (0+255),w,b
 10280   00133E  A4D8               	btfss	status,2,c
 10281   001340  EFA4  F009         	goto	u6691
 10282   001344  EFA6  F009         	goto	u6690
 10283   001348                     u6691:
 10284   001348  EFD3  F009         	goto	l5684
 10285   00134C                     u6690:
 10286   00134C                     
 10287                           ; BSR set to: 0
 10288   00134C  0E00               	movlw	0
 10289   00134E  6E46               	movwf	?___fladd^0,c
 10290   001350  0E00               	movlw	0
 10291   001352  6E47               	movwf	(?___fladd+1)^0,c
 10292   001354  0E00               	movlw	0
 10293   001356  6E48               	movwf	(?___fladd+2)^0,c
 10294   001358  0E00               	movlw	0
 10295   00135A  6E49               	movwf	(?___fladd+3)^0,c
 10296   00135C  EF6E  F00A         	goto	l1088
 10297   001360                     l5668:
 10298                           
 10299                           ; BSR set to: 0
 10300   001360  90D8               	bcf	status,0,c
 10301   001362  3646               	rlcf	___fladd@b^0,f,c
 10302   001364  3647               	rlcf	(___fladd@b+1)^0,f,c
 10303   001366  3648               	rlcf	(___fladd@b+2)^0,f,c
 10304   001368  3649               	rlcf	(___fladd@b+3)^0,f,c
 10305   00136A                     
 10306                           ; BSR set to: 0
 10307   00136A  AF63               	btfss	___fladd@grs& (0+255),7,b
 10308   00136C  EFBA  F009         	goto	u6701
 10309   001370  EFBC  F009         	goto	u6700
 10310   001374                     u6701:
 10311   001374  EFBD  F009         	goto	l5674
 10312   001378                     u6700:
 10313   001378                     
 10314                           ; BSR set to: 0
 10315   001378  8046               	bsf	___fladd@b^0,0,c
 10316   00137A                     l5674:
 10317                           
 10318                           ; BSR set to: 0
 10319   00137A  A163               	btfss	___fladd@grs& (0+255),0,b
 10320   00137C  EFC2  F009         	goto	u6711
 10321   001380  EFC4  F009         	goto	u6710
 10322   001384                     u6711:
 10323   001384  EFC8  F009         	goto	l5678
 10324   001388                     u6710:
 10325   001388                     
 10326                           ; BSR set to: 0
 10327   001388  80D8               	bsf	status,0,c
 10328   00138A  3763               	rlcf	___fladd@grs& (0+255),f,b
 10329   00138C  EFCA  F009         	goto	l5680
 10330   001390                     l5678:
 10331                           
 10332                           ; BSR set to: 0
 10333   001390  90D8               	bcf	status,0,c
 10334   001392  3763               	rlcf	___fladd@grs& (0+255),f,b
 10335   001394                     l5680:
 10336                           
 10337                           ; BSR set to: 0
 10338   001394  5162               	movf	___fladd@bexp& (0+255),w,b
 10339   001396  B4D8               	btfsc	status,2,c
 10340   001398  EFD0  F009         	goto	u6721
 10341   00139C  EFD2  F009         	goto	u6720
 10342   0013A0                     u6721:
 10343   0013A0  EFD3  F009         	goto	l5684
 10344   0013A4                     u6720:
 10345   0013A4                     
 10346                           ; BSR set to: 0
 10347   0013A4  0762               	decf	___fladd@bexp& (0+255),f,b
 10348   0013A6                     l5684:
 10349                           
 10350                           ; BSR set to: 0
 10351   0013A6  AE48               	btfss	(___fladd@b+2)^0,7,c
 10352   0013A8  EFD8  F009         	goto	u6731
 10353   0013AC  EFDA  F009         	goto	u6730
 10354   0013B0                     u6731:
 10355   0013B0  EFB0  F009         	goto	l5668
 10356   0013B4                     u6730:
 10357   0013B4                     l5686:
 10358                           
 10359                           ; BSR set to: 0
 10360   0013B4  0E00               	movlw	0
 10361   0013B6  6F61               	movwf	___fladd@aexp& (0+255),b
 10362   0013B8                     
 10363                           ; BSR set to: 0
 10364   0013B8  AF63               	btfss	___fladd@grs& (0+255),7,b
 10365   0013BA  EFE1  F009         	goto	u6741
 10366   0013BE  EFE3  F009         	goto	u6740
 10367   0013C2                     u6741:
 10368   0013C2  EFFB  F009         	goto	l1105
 10369   0013C6                     u6740:
 10370   0013C6                     
 10371                           ; BSR set to: 0
 10372   0013C6  C063  F04E         	movff	___fladd@grs,??___fladd
 10373   0013CA  0E7F               	movlw	127
 10374   0013CC  164E               	andwf	??___fladd^0,f,c
 10375   0013CE  B4D8               	btfsc	status,2,c
 10376   0013D0  EFEC  F009         	goto	u6751
 10377   0013D4  EFEE  F009         	goto	u6750
 10378   0013D8                     u6751:
 10379   0013D8  EFF2  F009         	goto	l1106
 10380   0013DC                     u6750:
 10381   0013DC                     l5692:
 10382                           
 10383                           ; BSR set to: 0
 10384   0013DC  0E01               	movlw	1
 10385   0013DE  6F61               	movwf	___fladd@aexp& (0+255),b
 10386   0013E0  EFFB  F009         	goto	l1105
 10387   0013E4                     l1106:
 10388                           
 10389                           ; BSR set to: 0
 10390   0013E4  A046               	btfss	___fladd@b^0,0,c
 10391   0013E6  EFF7  F009         	goto	u6761
 10392   0013EA  EFF9  F009         	goto	u6760
 10393   0013EE                     u6761:
 10394   0013EE  EFFB  F009         	goto	l1105
 10395   0013F2                     u6760:
 10396   0013F2  EFEE  F009         	goto	l5692
 10397   0013F6                     l1105:
 10398                           
 10399                           ; BSR set to: 0
 10400   0013F6  5161               	movf	___fladd@aexp& (0+255),w,b
 10401   0013F8  B4D8               	btfsc	status,2,c
 10402   0013FA  EF01  F00A         	goto	u6771
 10403   0013FE  EF03  F00A         	goto	u6770
 10404   001402                     u6771:
 10405   001402  EF2E  F00A         	goto	l5704
 10406   001406                     u6770:
 10407   001406                     
 10408                           ; BSR set to: 0
 10409   001406  0E01               	movlw	1
 10410   001408  2646               	addwf	___fladd@b^0,f,c
 10411   00140A  0E00               	movlw	0
 10412   00140C  2247               	addwfc	(___fladd@b+1)^0,f,c
 10413   00140E  2248               	addwfc	(___fladd@b+2)^0,f,c
 10414   001410  2249               	addwfc	(___fladd@b+3)^0,f,c
 10415   001412                     
 10416                           ; BSR set to: 0
 10417   001412  A049               	btfss	(___fladd@b+3)^0,0,c
 10418   001414  EF0E  F00A         	goto	u6781
 10419   001418  EF10  F00A         	goto	u6780
 10420   00141C                     u6781:
 10421   00141C  EF2E  F00A         	goto	l5704
 10422   001420                     u6780:
 10423   001420                     
 10424                           ; BSR set to: 0
 10425   001420  C046  F04E         	movff	___fladd@b,??___fladd
 10426   001424  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 10427   001428  C048  F050         	movff	___fladd@b+2,??___fladd+2
 10428   00142C  C049  F051         	movff	___fladd@b+3,??___fladd+3
 10429   001430  3451               	rlcf	(??___fladd+3)^0,w,c
 10430   001432  3251               	rrcf	(??___fladd+3)^0,f,c
 10431   001434  3250               	rrcf	(??___fladd+2)^0,f,c
 10432   001436  324F               	rrcf	(??___fladd+1)^0,f,c
 10433   001438  324E               	rrcf	??___fladd^0,f,c
 10434   00143A  C04E  F046         	movff	??___fladd,___fladd@b
 10435   00143E  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 10436   001442  C050  F048         	movff	??___fladd+2,___fladd@b+2
 10437   001446  C051  F049         	movff	??___fladd+3,___fladd@b+3
 10438   00144A  2962               	incf	___fladd@bexp& (0+255),w,b
 10439   00144C  B4D8               	btfsc	status,2,c
 10440   00144E  EF2B  F00A         	goto	u6791
 10441   001452  EF2D  F00A         	goto	u6790
 10442   001456                     u6791:
 10443   001456  EF2E  F00A         	goto	l5704
 10444   00145A                     u6790:
 10445   00145A                     
 10446                           ; BSR set to: 0
 10447   00145A  2B62               	incf	___fladd@bexp& (0+255),f,b
 10448   00145C                     l5704:
 10449                           
 10450                           ; BSR set to: 0
 10451   00145C  2962               	incf	___fladd@bexp& (0+255),w,b
 10452   00145E  B4D8               	btfsc	status,2,c
 10453   001460  EF34  F00A         	goto	u6801
 10454   001464  EF36  F00A         	goto	u6800
 10455   001468                     u6801:
 10456   001468  EF3E  F00A         	goto	l5708
 10457   00146C                     u6800:
 10458   00146C                     
 10459                           ; BSR set to: 0
 10460   00146C  5162               	movf	___fladd@bexp& (0+255),w,b
 10461   00146E  A4D8               	btfss	status,2,c
 10462   001470  EF3C  F00A         	goto	u6811
 10463   001474  EF3E  F00A         	goto	u6810
 10464   001478                     u6811:
 10465   001478  EF50  F00A         	goto	l5712
 10466   00147C                     u6810:
 10467   00147C                     l5708:
 10468                           
 10469                           ; BSR set to: 0
 10470   00147C  0E00               	movlw	0
 10471   00147E  6E46               	movwf	___fladd@b^0,c
 10472   001480  0E00               	movlw	0
 10473   001482  6E47               	movwf	(___fladd@b+1)^0,c
 10474   001484  0E00               	movlw	0
 10475   001486  6E48               	movwf	(___fladd@b+2)^0,c
 10476   001488  0E00               	movlw	0
 10477   00148A  6E49               	movwf	(___fladd@b+3)^0,c
 10478   00148C  5162               	movf	___fladd@bexp& (0+255),w,b
 10479   00148E  A4D8               	btfss	status,2,c
 10480   001490  EF4C  F00A         	goto	u6821
 10481   001494  EF4E  F00A         	goto	u6820
 10482   001498                     u6821:
 10483   001498  EF50  F00A         	goto	l5712
 10484   00149C                     u6820:
 10485   00149C                     
 10486                           ; BSR set to: 0
 10487   00149C  0E00               	movlw	0
 10488   00149E  6F60               	movwf	___fladd@signs& (0+255),b
 10489   0014A0                     l5712:
 10490                           
 10491                           ; BSR set to: 0
 10492   0014A0  A162               	btfss	___fladd@bexp& (0+255),0,b
 10493   0014A2  EF55  F00A         	goto	u6831
 10494   0014A6  EF57  F00A         	goto	u6830
 10495   0014AA                     u6831:
 10496   0014AA  EF5A  F00A         	goto	l5716
 10497   0014AE                     u6830:
 10498   0014AE                     
 10499                           ; BSR set to: 0
 10500   0014AE  8E48               	bsf	(___fladd@b+2)^0,7,c
 10501   0014B0  EF5B  F00A         	goto	l5718
 10502   0014B4                     l5716:
 10503                           
 10504                           ; BSR set to: 0
 10505   0014B4  9E48               	bcf	(___fladd@b+2)^0,7,c
 10506   0014B6                     l5718:
 10507                           
 10508                           ; BSR set to: 0
 10509   0014B6  90D8               	bcf	status,0,c
 10510   0014B8  3162               	rrcf	___fladd@bexp& (0+255),w,b
 10511   0014BA  6E49               	movwf	(___fladd@b+3)^0,c
 10512   0014BC                     
 10513                           ; BSR set to: 0
 10514   0014BC  AF60               	btfss	___fladd@signs& (0+255),7,b
 10515   0014BE  EF63  F00A         	goto	u6841
 10516   0014C2  EF65  F00A         	goto	u6840
 10517   0014C6                     u6841:
 10518   0014C6  EF66  F00A         	goto	l5724
 10519   0014CA                     u6840:
 10520   0014CA                     
 10521                           ; BSR set to: 0
 10522   0014CA  8E49               	bsf	(___fladd@b+3)^0,7,c
 10523   0014CC                     l5724:
 10524                           
 10525                           ; BSR set to: 0
 10526   0014CC  C046  F046         	movff	___fladd@b,?___fladd
 10527   0014D0  C047  F047         	movff	___fladd@b+1,?___fladd+1
 10528   0014D4  C048  F048         	movff	___fladd@b+2,?___fladd+2
 10529   0014D8  C049  F049         	movff	___fladd@b+3,?___fladd+3
 10530   0014DC                     l1088:
 10531                           
 10532                           ; BSR set to: 0
 10533   0014DC  0012               	return		;funcret
 10534   0014DE                     __end_of___fladd:
 10535                           	callstack 0
 10536                           
 10537 ;; *************** function ___flneg *****************
 10538 ;; Defined at:
 10539 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  f1              4   32[BANK0 ] unsigned char 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  4   32[BANK0 ] unsigned char 
 10546 ;; Registers used:
 10547 ;;		wreg, status,2, status,0
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10553 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10557 ;;Total ram usage:        4 bytes
 10558 ;; Hardware stack levels used: 1
 10559 ;; Hardware stack levels required when called: 1
 10560 ;; This function calls:
 10561 ;;		Nothing
 10562 ;; This function is called by:
 10563 ;;		_efgtoa
 10564 ;;		_sinf
 10565 ;;		___rem_pio2f
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text37
 10570   004734                     __ptext37:
 10571                           	callstack 0
 10572   004734                     ___flneg:
 10573                           	callstack 24
 10574   004734  0100               	movlb	0	; () banked
 10575   004736  5180               	movf	___flneg@f1& (0+255),w,b
 10576   004738  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10577   00473A  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10578   00473C  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10579   00473E  B4D8               	btfsc	status,2,c
 10580   004740  EFA4  F023         	goto	u7481
 10581   004744  EFA6  F023         	goto	u7480
 10582   004748                     u7481:
 10583   004748  EFAE  F023         	goto	l6138
 10584   00474C                     u7480:
 10585   00474C                     
 10586                           ; BSR set to: 0
 10587   00474C  0E00               	movlw	0
 10588   00474E  1B80               	xorwf	___flneg@f1& (0+255),f,b
 10589   004750  0E00               	movlw	0
 10590   004752  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10591   004754  0E00               	movlw	0
 10592   004756  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10593   004758  0E80               	movlw	128
 10594   00475A  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10595   00475C                     l6138:
 10596                           
 10597                           ; BSR set to: 0
 10598   00475C  C080  F080         	movff	___flneg@f1,?___flneg
 10599   004760  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 10600   004764  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 10601   004768  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 10602   00476C                     
 10603                           ; BSR set to: 0
 10604   00476C  0012               	return		;funcret
 10605   00476E                     __end_of___flneg:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function ___flmul *****************
 10609 ;; Defined at:
 10610 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  b               4   19[COMRAM] unsigned char 
 10613 ;;  a               4   23[COMRAM] unsigned char 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  prod            4   38[COMRAM] struct .
 10616 ;;  grs             4   33[COMRAM] unsigned long 
 10617 ;;  temp            2   42[COMRAM] struct .
 10618 ;;  bexp            1   37[COMRAM] unsigned char 
 10619 ;;  aexp            1   32[COMRAM] unsigned char 
 10620 ;;  sign            1   31[COMRAM] unsigned char 
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  4   19[COMRAM] unsigned char 
 10623 ;; Registers used:
 10624 ;;		wreg, status,2, status,0, prodl, prodh
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10630 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10634 ;;Total ram usage:       25 bytes
 10635 ;; Hardware stack levels used: 1
 10636 ;; Hardware stack levels required when called: 1
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_runDAC
 10641 ;;		_runADC
 10642 ;;		_efgtoa
 10643 ;;		___cosdf
 10644 ;;		___rem_pio2f
 10645 ;;		___sindf
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           	psect	text38
 10650   0014DE                     __ptext38:
 10651                           	callstack 0
 10652   0014DE                     ___flmul:
 10653                           	callstack 24
 10654   0014DE  5017               	movf	(___flmul@b+3)^0,w,c
 10655   0014E0  0B80               	andlw	128
 10656   0014E2  6E20               	movwf	___flmul@sign^0,c
 10657   0014E4  5017               	movf	(___flmul@b+3)^0,w,c
 10658   0014E6  2417               	addwf	(___flmul@b+3)^0,w,c
 10659   0014E8  6E26               	movwf	___flmul@bexp^0,c
 10660   0014EA  AE16               	btfss	(___flmul@b+2)^0,7,c
 10661   0014EC  EF7A  F00A         	goto	u7091
 10662   0014F0  EF7C  F00A         	goto	u7090
 10663   0014F4                     u7091:
 10664   0014F4  EF7D  F00A         	goto	l5886
 10665   0014F8                     u7090:
 10666   0014F8  8026               	bsf	___flmul@bexp^0,0,c
 10667   0014FA                     l5886:
 10668   0014FA  5026               	movf	___flmul@bexp^0,w,c
 10669   0014FC  B4D8               	btfsc	status,2,c
 10670   0014FE  EF83  F00A         	goto	u7101
 10671   001502  EF85  F00A         	goto	u7100
 10672   001506                     u7101:
 10673   001506  EF98  F00A         	goto	l5894
 10674   00150A                     u7100:
 10675   00150A  2826               	incf	___flmul@bexp^0,w,c
 10676   00150C  A4D8               	btfss	status,2,c
 10677   00150E  EF8B  F00A         	goto	u7111
 10678   001512  EF8D  F00A         	goto	u7110
 10679   001516                     u7111:
 10680   001516  EF95  F00A         	goto	l5892
 10681   00151A                     u7110:
 10682   00151A  0E00               	movlw	0
 10683   00151C  6E14               	movwf	___flmul@b^0,c
 10684   00151E  0E00               	movlw	0
 10685   001520  6E15               	movwf	(___flmul@b+1)^0,c
 10686   001522  0E00               	movlw	0
 10687   001524  6E16               	movwf	(___flmul@b+2)^0,c
 10688   001526  0E00               	movlw	0
 10689   001528  6E17               	movwf	(___flmul@b+3)^0,c
 10690   00152A                     l5892:
 10691   00152A  8E16               	bsf	(___flmul@b+2)^0,7,c
 10692   00152C  EFA0  F00A         	goto	l5896
 10693   001530                     l5894:
 10694   001530  0E00               	movlw	0
 10695   001532  6E14               	movwf	___flmul@b^0,c
 10696   001534  0E00               	movlw	0
 10697   001536  6E15               	movwf	(___flmul@b+1)^0,c
 10698   001538  0E00               	movlw	0
 10699   00153A  6E16               	movwf	(___flmul@b+2)^0,c
 10700   00153C  0E00               	movlw	0
 10701   00153E  6E17               	movwf	(___flmul@b+3)^0,c
 10702   001540                     l5896:
 10703   001540  501B               	movf	(___flmul@a+3)^0,w,c
 10704   001542  0B80               	andlw	128
 10705   001544  1A20               	xorwf	___flmul@sign^0,f,c
 10706   001546  501B               	movf	(___flmul@a+3)^0,w,c
 10707   001548  241B               	addwf	(___flmul@a+3)^0,w,c
 10708   00154A  6E21               	movwf	___flmul@aexp^0,c
 10709   00154C  AE1A               	btfss	(___flmul@a+2)^0,7,c
 10710   00154E  EFAB  F00A         	goto	u7121
 10711   001552  EFAD  F00A         	goto	u7120
 10712   001556                     u7121:
 10713   001556  EFAE  F00A         	goto	l5904
 10714   00155A                     u7120:
 10715   00155A  8021               	bsf	___flmul@aexp^0,0,c
 10716   00155C                     l5904:
 10717   00155C  5021               	movf	___flmul@aexp^0,w,c
 10718   00155E  B4D8               	btfsc	status,2,c
 10719   001560  EFB4  F00A         	goto	u7131
 10720   001564  EFB6  F00A         	goto	u7130
 10721   001568                     u7131:
 10722   001568  EFC9  F00A         	goto	l5912
 10723   00156C                     u7130:
 10724   00156C  2821               	incf	___flmul@aexp^0,w,c
 10725   00156E  A4D8               	btfss	status,2,c
 10726   001570  EFBC  F00A         	goto	u7141
 10727   001574  EFBE  F00A         	goto	u7140
 10728   001578                     u7141:
 10729   001578  EFC6  F00A         	goto	l5910
 10730   00157C                     u7140:
 10731   00157C  0E00               	movlw	0
 10732   00157E  6E18               	movwf	___flmul@a^0,c
 10733   001580  0E00               	movlw	0
 10734   001582  6E19               	movwf	(___flmul@a+1)^0,c
 10735   001584  0E00               	movlw	0
 10736   001586  6E1A               	movwf	(___flmul@a+2)^0,c
 10737   001588  0E00               	movlw	0
 10738   00158A  6E1B               	movwf	(___flmul@a+3)^0,c
 10739   00158C                     l5910:
 10740   00158C  8E1A               	bsf	(___flmul@a+2)^0,7,c
 10741   00158E  EFD1  F00A         	goto	l1165
 10742   001592                     l5912:
 10743   001592  0E00               	movlw	0
 10744   001594  6E18               	movwf	___flmul@a^0,c
 10745   001596  0E00               	movlw	0
 10746   001598  6E19               	movwf	(___flmul@a+1)^0,c
 10747   00159A  0E00               	movlw	0
 10748   00159C  6E1A               	movwf	(___flmul@a+2)^0,c
 10749   00159E  0E00               	movlw	0
 10750   0015A0  6E1B               	movwf	(___flmul@a+3)^0,c
 10751   0015A2                     l1165:
 10752   0015A2  5021               	movf	___flmul@aexp^0,w,c
 10753   0015A4  B4D8               	btfsc	status,2,c
 10754   0015A6  EFD7  F00A         	goto	u7151
 10755   0015AA  EFD9  F00A         	goto	u7150
 10756   0015AE                     u7151:
 10757   0015AE  EFE1  F00A         	goto	l5916
 10758   0015B2                     u7150:
 10759   0015B2  5026               	movf	___flmul@bexp^0,w,c
 10760   0015B4  A4D8               	btfss	status,2,c
 10761   0015B6  EFDF  F00A         	goto	u7161
 10762   0015BA  EFE1  F00A         	goto	u7160
 10763   0015BE                     u7161:
 10764   0015BE  EFEB  F00A         	goto	l5920
 10765   0015C2                     u7160:
 10766   0015C2                     l5916:
 10767   0015C2  0E00               	movlw	0
 10768   0015C4  6E14               	movwf	?___flmul^0,c
 10769   0015C6  0E00               	movlw	0
 10770   0015C8  6E15               	movwf	(?___flmul+1)^0,c
 10771   0015CA  0E00               	movlw	0
 10772   0015CC  6E16               	movwf	(?___flmul+2)^0,c
 10773   0015CE  0E00               	movlw	0
 10774   0015D0  6E17               	movwf	(?___flmul+3)^0,c
 10775   0015D2  EF83  F00C         	goto	l1169
 10776   0015D6                     l5920:
 10777   0015D6  501A               	movf	(___flmul@a+2)^0,w,c
 10778   0015D8  0214               	mulwf	___flmul@b^0,c
 10779   0015DA  CFF3 F02B          	movff	prodl,___flmul@temp
 10780   0015DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10781   0015E2  502B               	movf	___flmul@temp^0,w,c
 10782   0015E4  6E22               	movwf	___flmul@grs^0,c
 10783   0015E6  6A23               	clrf	(___flmul@grs+1)^0,c
 10784   0015E8  6A24               	clrf	(___flmul@grs+2)^0,c
 10785   0015EA  6A25               	clrf	(___flmul@grs+3)^0,c
 10786   0015EC  502C               	movf	(___flmul@temp+1)^0,w,c
 10787   0015EE  6E27               	movwf	___flmul@prod^0,c
 10788   0015F0  6A28               	clrf	(___flmul@prod+1)^0,c
 10789   0015F2  6A29               	clrf	(___flmul@prod+2)^0,c
 10790   0015F4  6A2A               	clrf	(___flmul@prod+3)^0,c
 10791   0015F6  5019               	movf	(___flmul@a+1)^0,w,c
 10792   0015F8  0215               	mulwf	(___flmul@b+1)^0,c
 10793   0015FA  CFF3 F02B          	movff	prodl,___flmul@temp
 10794   0015FE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10795   001602  502B               	movf	___flmul@temp^0,w,c
 10796   001604  2622               	addwf	___flmul@grs^0,f,c
 10797   001606  0E00               	movlw	0
 10798   001608  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10799   00160A  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10800   00160C  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10801   00160E  502C               	movf	(___flmul@temp+1)^0,w,c
 10802   001610  2627               	addwf	___flmul@prod^0,f,c
 10803   001612  0E00               	movlw	0
 10804   001614  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10805   001616  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10806   001618  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10807   00161A  5018               	movf	___flmul@a^0,w,c
 10808   00161C  0216               	mulwf	(___flmul@b+2)^0,c
 10809   00161E  CFF3 F02B          	movff	prodl,___flmul@temp
 10810   001622  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10811   001626  502B               	movf	___flmul@temp^0,w,c
 10812   001628  2622               	addwf	___flmul@grs^0,f,c
 10813   00162A  0E00               	movlw	0
 10814   00162C  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10815   00162E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10816   001630  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10817   001632  502C               	movf	(___flmul@temp+1)^0,w,c
 10818   001634  2627               	addwf	___flmul@prod^0,f,c
 10819   001636  0E00               	movlw	0
 10820   001638  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10821   00163A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10822   00163C  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10823   00163E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10824   001642  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10825   001646  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10826   00164A  6A22               	clrf	___flmul@grs^0,c
 10827   00164C  5018               	movf	___flmul@a^0,w,c
 10828   00164E  0215               	mulwf	(___flmul@b+1)^0,c
 10829   001650  CFF3 F02B          	movff	prodl,___flmul@temp
 10830   001654  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10831   001658  502B               	movf	___flmul@temp^0,w,c
 10832   00165A  2622               	addwf	___flmul@grs^0,f,c
 10833   00165C  502C               	movf	(___flmul@temp+1)^0,w,c
 10834   00165E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10835   001660  0E00               	movlw	0
 10836   001662  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10837   001664  0E00               	movlw	0
 10838   001666  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10839   001668  5019               	movf	(___flmul@a+1)^0,w,c
 10840   00166A  0214               	mulwf	___flmul@b^0,c
 10841   00166C  CFF3 F02B          	movff	prodl,___flmul@temp
 10842   001670  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10843   001674  502B               	movf	___flmul@temp^0,w,c
 10844   001676  2622               	addwf	___flmul@grs^0,f,c
 10845   001678  502C               	movf	(___flmul@temp+1)^0,w,c
 10846   00167A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10847   00167C  0E00               	movlw	0
 10848   00167E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10849   001680  0E00               	movlw	0
 10850   001682  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10851   001684  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10852   001688  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10853   00168C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10854   001690  6A22               	clrf	___flmul@grs^0,c
 10855   001692  5018               	movf	___flmul@a^0,w,c
 10856   001694  0214               	mulwf	___flmul@b^0,c
 10857   001696  CFF3 F02B          	movff	prodl,___flmul@temp
 10858   00169A  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10859   00169E  502B               	movf	___flmul@temp^0,w,c
 10860   0016A0  2622               	addwf	___flmul@grs^0,f,c
 10861   0016A2  502C               	movf	(___flmul@temp+1)^0,w,c
 10862   0016A4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10863   0016A6  0E00               	movlw	0
 10864   0016A8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10865   0016AA  0E00               	movlw	0
 10866   0016AC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10867   0016AE  501A               	movf	(___flmul@a+2)^0,w,c
 10868   0016B0  0215               	mulwf	(___flmul@b+1)^0,c
 10869   0016B2  CFF3 F02B          	movff	prodl,___flmul@temp
 10870   0016B6  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10871   0016BA  502B               	movf	___flmul@temp^0,w,c
 10872   0016BC  2627               	addwf	___flmul@prod^0,f,c
 10873   0016BE  502C               	movf	(___flmul@temp+1)^0,w,c
 10874   0016C0  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10875   0016C2  0E00               	movlw	0
 10876   0016C4  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10877   0016C6  0E00               	movlw	0
 10878   0016C8  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10879   0016CA  5019               	movf	(___flmul@a+1)^0,w,c
 10880   0016CC  0216               	mulwf	(___flmul@b+2)^0,c
 10881   0016CE  CFF3 F02B          	movff	prodl,___flmul@temp
 10882   0016D2  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10883   0016D6  502B               	movf	___flmul@temp^0,w,c
 10884   0016D8  2627               	addwf	___flmul@prod^0,f,c
 10885   0016DA  502C               	movf	(___flmul@temp+1)^0,w,c
 10886   0016DC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10887   0016DE  0E00               	movlw	0
 10888   0016E0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10889   0016E2  0E00               	movlw	0
 10890   0016E4  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10891   0016E6  501A               	movf	(___flmul@a+2)^0,w,c
 10892   0016E8  0216               	mulwf	(___flmul@b+2)^0,c
 10893   0016EA  CFF3 F02B          	movff	prodl,___flmul@temp
 10894   0016EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10895   0016F2  502B               	movf	___flmul@temp^0,w,c
 10896   0016F4  6E1C               	movwf	??___flmul^0,c
 10897   0016F6  502C               	movf	(___flmul@temp+1)^0,w,c
 10898   0016F8  6E1D               	movwf	(??___flmul+1)^0,c
 10899   0016FA  6A1E               	clrf	(??___flmul+2)^0,c
 10900   0016FC  6A1F               	clrf	(??___flmul+3)^0,c
 10901   0016FE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 10902   001702  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 10903   001706  C01C  F01D         	movff	??___flmul,??___flmul+1
 10904   00170A  6A1C               	clrf	??___flmul^0,c
 10905   00170C  501C               	movf	??___flmul^0,w,c
 10906   00170E  2627               	addwf	___flmul@prod^0,f,c
 10907   001710  501D               	movf	(??___flmul+1)^0,w,c
 10908   001712  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10909   001714  501E               	movf	(??___flmul+2)^0,w,c
 10910   001716  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10911   001718  501F               	movf	(??___flmul+3)^0,w,c
 10912   00171A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10913   00171C  C022  F01C         	movff	___flmul@grs,??___flmul
 10914   001720  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 10915   001724  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 10916   001728  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 10917   00172C  0E19               	movlw	25
 10918   00172E  EF9E  F00B         	goto	u7170
 10919   001732                     u7175:
 10920   001732  90D8               	bcf	status,0,c
 10921   001734  321F               	rrcf	(??___flmul+3)^0,f,c
 10922   001736  321E               	rrcf	(??___flmul+2)^0,f,c
 10923   001738  321D               	rrcf	(??___flmul+1)^0,f,c
 10924   00173A  321C               	rrcf	??___flmul^0,f,c
 10925   00173C                     u7170:
 10926   00173C  2EE8               	decfsz	wreg,f,c
 10927   00173E  EF99  F00B         	goto	u7175
 10928   001742  501C               	movf	??___flmul^0,w,c
 10929   001744  2627               	addwf	___flmul@prod^0,f,c
 10930   001746  501D               	movf	(??___flmul+1)^0,w,c
 10931   001748  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10932   00174A  501E               	movf	(??___flmul+2)^0,w,c
 10933   00174C  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10934   00174E  501F               	movf	(??___flmul+3)^0,w,c
 10935   001750  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10936   001752  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10937   001756  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10938   00175A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10939   00175E  6A22               	clrf	___flmul@grs^0,c
 10940   001760  5021               	movf	___flmul@aexp^0,w,c
 10941   001762  C026  F01C         	movff	___flmul@bexp,??___flmul
 10942   001766  6A1D               	clrf	(??___flmul+1)^0,c
 10943   001768  261C               	addwf	??___flmul^0,f,c
 10944   00176A  0E00               	movlw	0
 10945   00176C  221D               	addwfc	(??___flmul+1)^0,f,c
 10946   00176E  0E82               	movlw	130
 10947   001770  241C               	addwf	??___flmul^0,w,c
 10948   001772  6E2B               	movwf	___flmul@temp^0,c
 10949   001774  0EFF               	movlw	255
 10950   001776  201D               	addwfc	(??___flmul+1)^0,w,c
 10951   001778  6E2C               	movwf	(___flmul@temp+1)^0,c
 10952   00177A  EFD4  F00B         	goto	l5968
 10953   00177E                     l5962:
 10954   00177E  90D8               	bcf	status,0,c
 10955   001780  3627               	rlcf	___flmul@prod^0,f,c
 10956   001782  3628               	rlcf	(___flmul@prod+1)^0,f,c
 10957   001784  3629               	rlcf	(___flmul@prod+2)^0,f,c
 10958   001786  362A               	rlcf	(___flmul@prod+3)^0,f,c
 10959   001788  AE25               	btfss	(___flmul@grs+3)^0,7,c
 10960   00178A  EFC9  F00B         	goto	u7181
 10961   00178E  EFCB  F00B         	goto	u7180
 10962   001792                     u7181:
 10963   001792  EFCC  F00B         	goto	l1172
 10964   001796                     u7180:
 10965   001796  8027               	bsf	___flmul@prod^0,0,c
 10966   001798                     l1172:
 10967   001798  90D8               	bcf	status,0,c
 10968   00179A  3622               	rlcf	___flmul@grs^0,f,c
 10969   00179C  3623               	rlcf	(___flmul@grs+1)^0,f,c
 10970   00179E  3624               	rlcf	(___flmul@grs+2)^0,f,c
 10971   0017A0  3625               	rlcf	(___flmul@grs+3)^0,f,c
 10972   0017A2  062B               	decf	___flmul@temp^0,f,c
 10973   0017A4  A0D8               	btfss	status,0,c
 10974   0017A6  062C               	decf	(___flmul@temp+1)^0,f,c
 10975   0017A8                     l5968:
 10976   0017A8  AE29               	btfss	(___flmul@prod+2)^0,7,c
 10977   0017AA  EFD9  F00B         	goto	u7191
 10978   0017AE  EFDB  F00B         	goto	u7190
 10979   0017B2                     u7191:
 10980   0017B2  EFBF  F00B         	goto	l5962
 10981   0017B6                     u7190:
 10982   0017B6  0E00               	movlw	0
 10983   0017B8  6E21               	movwf	___flmul@aexp^0,c
 10984   0017BA  AE25               	btfss	(___flmul@grs+3)^0,7,c
 10985   0017BC  EFE2  F00B         	goto	u7201
 10986   0017C0  EFE4  F00B         	goto	u7200
 10987   0017C4                     u7201:
 10988   0017C4  EF08  F00C         	goto	l1174
 10989   0017C8                     u7200:
 10990   0017C8  0EFF               	movlw	255
 10991   0017CA  1422               	andwf	___flmul@grs^0,w,c
 10992   0017CC  6E1C               	movwf	??___flmul^0,c
 10993   0017CE  0EFF               	movlw	255
 10994   0017D0  1423               	andwf	(___flmul@grs+1)^0,w,c
 10995   0017D2  6E1D               	movwf	(??___flmul+1)^0,c
 10996   0017D4  0EFF               	movlw	255
 10997   0017D6  1424               	andwf	(___flmul@grs+2)^0,w,c
 10998   0017D8  6E1E               	movwf	(??___flmul+2)^0,c
 10999   0017DA  0E7F               	movlw	127
 11000   0017DC  1425               	andwf	(___flmul@grs+3)^0,w,c
 11001   0017DE  6E1F               	movwf	(??___flmul+3)^0,c
 11002   0017E0  501C               	movf	??___flmul^0,w,c
 11003   0017E2  101D               	iorwf	(??___flmul+1)^0,w,c
 11004   0017E4  101E               	iorwf	(??___flmul+2)^0,w,c
 11005   0017E6  101F               	iorwf	(??___flmul+3)^0,w,c
 11006   0017E8  B4D8               	btfsc	status,2,c
 11007   0017EA  EFF9  F00B         	goto	u7211
 11008   0017EE  EFFB  F00B         	goto	u7210
 11009   0017F2                     u7211:
 11010   0017F2  EFFF  F00B         	goto	l1175
 11011   0017F6                     u7210:
 11012   0017F6                     l5976:
 11013   0017F6  0E01               	movlw	1
 11014   0017F8  6E21               	movwf	___flmul@aexp^0,c
 11015   0017FA  EF08  F00C         	goto	l1174
 11016   0017FE                     l1175:
 11017   0017FE  A027               	btfss	___flmul@prod^0,0,c
 11018   001800  EF04  F00C         	goto	u7221
 11019   001804  EF06  F00C         	goto	u7220
 11020   001808                     u7221:
 11021   001808  EF08  F00C         	goto	l1174
 11022   00180C                     u7220:
 11023   00180C  EFFB  F00B         	goto	l5976
 11024   001810                     l1174:
 11025   001810  5021               	movf	___flmul@aexp^0,w,c
 11026   001812  B4D8               	btfsc	status,2,c
 11027   001814  EF0E  F00C         	goto	u7231
 11028   001818  EF10  F00C         	goto	u7230
 11029   00181C                     u7231:
 11030   00181C  EF34  F00C         	goto	l5988
 11031   001820                     u7230:
 11032   001820  0E01               	movlw	1
 11033   001822  2627               	addwf	___flmul@prod^0,f,c
 11034   001824  0E00               	movlw	0
 11035   001826  2228               	addwfc	(___flmul@prod+1)^0,f,c
 11036   001828  2229               	addwfc	(___flmul@prod+2)^0,f,c
 11037   00182A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 11038   00182C  A02A               	btfss	(___flmul@prod+3)^0,0,c
 11039   00182E  EF1B  F00C         	goto	u7241
 11040   001832  EF1D  F00C         	goto	u7240
 11041   001836                     u7241:
 11042   001836  EF34  F00C         	goto	l5988
 11043   00183A                     u7240:
 11044   00183A  C027  F01C         	movff	___flmul@prod,??___flmul
 11045   00183E  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 11046   001842  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 11047   001846  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 11048   00184A  341F               	rlcf	(??___flmul+3)^0,w,c
 11049   00184C  321F               	rrcf	(??___flmul+3)^0,f,c
 11050   00184E  321E               	rrcf	(??___flmul+2)^0,f,c
 11051   001850  321D               	rrcf	(??___flmul+1)^0,f,c
 11052   001852  321C               	rrcf	??___flmul^0,f,c
 11053   001854  C01C  F027         	movff	??___flmul,___flmul@prod
 11054   001858  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 11055   00185C  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 11056   001860  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 11057   001864  4A2B               	infsnz	___flmul@temp^0,f,c
 11058   001866  2A2C               	incf	(___flmul@temp+1)^0,f,c
 11059   001868                     l5988:
 11060   001868  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 11061   00186A  EF3F  F00C         	goto	u7251
 11062   00186E  502C               	movf	(___flmul@temp+1)^0,w,c
 11063   001870  E108               	bnz	u7250
 11064   001872  282B               	incf	___flmul@temp^0,w,c
 11065   001874  A0D8               	btfss	status,0,c
 11066   001876  EF3F  F00C         	goto	u7251
 11067   00187A  EF41  F00C         	goto	u7250
 11068   00187E                     u7251:
 11069   00187E  EF4B  F00C         	goto	l5992
 11070   001882                     u7250:
 11071   001882  0E00               	movlw	0
 11072   001884  6E27               	movwf	___flmul@prod^0,c
 11073   001886  0E00               	movlw	0
 11074   001888  6E28               	movwf	(___flmul@prod+1)^0,c
 11075   00188A  0E80               	movlw	128
 11076   00188C  6E29               	movwf	(___flmul@prod+2)^0,c
 11077   00188E  0E7F               	movlw	127
 11078   001890  6E2A               	movwf	(___flmul@prod+3)^0,c
 11079   001892  EF79  F00C         	goto	l6004
 11080   001896                     l5992:
 11081   001896  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 11082   001898  EF58  F00C         	goto	u7260
 11083   00189C  502C               	movf	(___flmul@temp+1)^0,w,c
 11084   00189E  E106               	bnz	u7261
 11085   0018A0  042B               	decf	___flmul@temp^0,w,c
 11086   0018A2  B0D8               	btfsc	status,0,c
 11087   0018A4  EF56  F00C         	goto	u7261
 11088   0018A8  EF58  F00C         	goto	u7260
 11089   0018AC                     u7261:
 11090   0018AC  EF64  F00C         	goto	l1182
 11091   0018B0                     u7260:
 11092   0018B0  0E00               	movlw	0
 11093   0018B2  6E27               	movwf	___flmul@prod^0,c
 11094   0018B4  0E00               	movlw	0
 11095   0018B6  6E28               	movwf	(___flmul@prod+1)^0,c
 11096   0018B8  0E00               	movlw	0
 11097   0018BA  6E29               	movwf	(___flmul@prod+2)^0,c
 11098   0018BC  0E00               	movlw	0
 11099   0018BE  6E2A               	movwf	(___flmul@prod+3)^0,c
 11100   0018C0  0E00               	movlw	0
 11101   0018C2  6E20               	movwf	___flmul@sign^0,c
 11102   0018C4  EF79  F00C         	goto	l6004
 11103   0018C8                     l1182:
 11104   0018C8  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 11105   0018CC  0EFF               	movlw	255
 11106   0018CE  1627               	andwf	___flmul@prod^0,f,c
 11107   0018D0  0EFF               	movlw	255
 11108   0018D2  1628               	andwf	(___flmul@prod+1)^0,f,c
 11109   0018D4  0E7F               	movlw	127
 11110   0018D6  1629               	andwf	(___flmul@prod+2)^0,f,c
 11111   0018D8  0E00               	movlw	0
 11112   0018DA  162A               	andwf	(___flmul@prod+3)^0,f,c
 11113   0018DC  A026               	btfss	___flmul@bexp^0,0,c
 11114   0018DE  EF73  F00C         	goto	u7271
 11115   0018E2  EF75  F00C         	goto	u7270
 11116   0018E6                     u7271:
 11117   0018E6  EF76  F00C         	goto	l6002
 11118   0018EA                     u7270:
 11119   0018EA  8E29               	bsf	(___flmul@prod+2)^0,7,c
 11120   0018EC                     l6002:
 11121   0018EC  90D8               	bcf	status,0,c
 11122   0018EE  3026               	rrcf	___flmul@bexp^0,w,c
 11123   0018F0  6E2A               	movwf	(___flmul@prod+3)^0,c
 11124   0018F2                     l6004:
 11125   0018F2  5020               	movf	___flmul@sign^0,w,c
 11126   0018F4  122A               	iorwf	(___flmul@prod+3)^0,f,c
 11127   0018F6  C027  F014         	movff	___flmul@prod,?___flmul
 11128   0018FA  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 11129   0018FE  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 11130   001902  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 11131   001906                     l1169:
 11132   001906  0012               	return		;funcret
 11133   001908                     __end_of___flmul:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function ___flge *****************
 11137 ;; Defined at:
 11138 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  ff1             4   44[COMRAM] unsigned char 
 11141 ;;  ff2             4   48[COMRAM] unsigned char 
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;		None
 11144 ;; Return value:  Size  Location     Type
 11145 ;;		None               void
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;Total ram usage:       12 bytes
 11158 ;; Hardware stack levels used: 1
 11159 ;; Hardware stack levels required when called: 1
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_efgtoa
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text39
 11168   003D2A                     __ptext39:
 11169                           	callstack 0
 11170   003D2A                     ___flge:
 11171                           	callstack 24
 11172   003D2A  0E00               	movlw	0
 11173   003D2C  142D               	andwf	___flge@ff1^0,w,c
 11174   003D2E  6E35               	movwf	??___flge^0,c
 11175   003D30  0E00               	movlw	0
 11176   003D32  142E               	andwf	(___flge@ff1+1)^0,w,c
 11177   003D34  6E36               	movwf	(??___flge+1)^0,c
 11178   003D36  0E80               	movlw	128
 11179   003D38  142F               	andwf	(___flge@ff1+2)^0,w,c
 11180   003D3A  6E37               	movwf	(??___flge+2)^0,c
 11181   003D3C  0E7F               	movlw	127
 11182   003D3E  1430               	andwf	(___flge@ff1+3)^0,w,c
 11183   003D40  6E38               	movwf	(??___flge+3)^0,c
 11184   003D42  5035               	movf	??___flge^0,w,c
 11185   003D44  1036               	iorwf	(??___flge+1)^0,w,c
 11186   003D46  1037               	iorwf	(??___flge+2)^0,w,c
 11187   003D48  1038               	iorwf	(??___flge+3)^0,w,c
 11188   003D4A  A4D8               	btfss	status,2,c
 11189   003D4C  EFAA  F01E         	goto	u7431
 11190   003D50  EFAC  F01E         	goto	u7430
 11191   003D54                     u7431:
 11192   003D54  EFB4  F01E         	goto	l6116
 11193   003D58                     u7430:
 11194   003D58  0E00               	movlw	0
 11195   003D5A  6E2D               	movwf	___flge@ff1^0,c
 11196   003D5C  0E00               	movlw	0
 11197   003D5E  6E2E               	movwf	(___flge@ff1+1)^0,c
 11198   003D60  0E00               	movlw	0
 11199   003D62  6E2F               	movwf	(___flge@ff1+2)^0,c
 11200   003D64  0E00               	movlw	0
 11201   003D66  6E30               	movwf	(___flge@ff1+3)^0,c
 11202   003D68                     l6116:
 11203   003D68  0E00               	movlw	0
 11204   003D6A  1431               	andwf	___flge@ff2^0,w,c
 11205   003D6C  6E35               	movwf	??___flge^0,c
 11206   003D6E  0E00               	movlw	0
 11207   003D70  1432               	andwf	(___flge@ff2+1)^0,w,c
 11208   003D72  6E36               	movwf	(??___flge+1)^0,c
 11209   003D74  0E80               	movlw	128
 11210   003D76  1433               	andwf	(___flge@ff2+2)^0,w,c
 11211   003D78  6E37               	movwf	(??___flge+2)^0,c
 11212   003D7A  0E7F               	movlw	127
 11213   003D7C  1434               	andwf	(___flge@ff2+3)^0,w,c
 11214   003D7E  6E38               	movwf	(??___flge+3)^0,c
 11215   003D80  5035               	movf	??___flge^0,w,c
 11216   003D82  1036               	iorwf	(??___flge+1)^0,w,c
 11217   003D84  1037               	iorwf	(??___flge+2)^0,w,c
 11218   003D86  1038               	iorwf	(??___flge+3)^0,w,c
 11219   003D88  A4D8               	btfss	status,2,c
 11220   003D8A  EFC9  F01E         	goto	u7441
 11221   003D8E  EFCB  F01E         	goto	u7440
 11222   003D92                     u7441:
 11223   003D92  EFD3  F01E         	goto	l6120
 11224   003D96                     u7440:
 11225   003D96  0E00               	movlw	0
 11226   003D98  6E31               	movwf	___flge@ff2^0,c
 11227   003D9A  0E00               	movlw	0
 11228   003D9C  6E32               	movwf	(___flge@ff2+1)^0,c
 11229   003D9E  0E00               	movlw	0
 11230   003DA0  6E33               	movwf	(___flge@ff2+2)^0,c
 11231   003DA2  0E00               	movlw	0
 11232   003DA4  6E34               	movwf	(___flge@ff2+3)^0,c
 11233   003DA6                     l6120:
 11234   003DA6  AE30               	btfss	(___flge@ff1+3)^0,7,c
 11235   003DA8  EFD8  F01E         	goto	u7451
 11236   003DAC  EFDA  F01E         	goto	u7450
 11237   003DB0                     u7451:
 11238   003DB0  EFE3  F01E         	goto	l6124
 11239   003DB4                     u7450:
 11240   003DB4  6C2D               	negf	___flge@ff1^0,c
 11241   003DB6  1E2E               	comf	(___flge@ff1+1)^0,f,c
 11242   003DB8  B0D8               	btfsc	status,0,c
 11243   003DBA  2A2E               	incf	(___flge@ff1+1)^0,f,c
 11244   003DBC  1E2F               	comf	(___flge@ff1+2)^0,f,c
 11245   003DBE  B0D8               	btfsc	status,0,c
 11246   003DC0  2A2F               	incf	(___flge@ff1+2)^0,f,c
 11247   003DC2  0E80               	movlw	128
 11248   003DC4  5630               	subfwb	(___flge@ff1+3)^0,f,c
 11249   003DC6                     l6124:
 11250   003DC6  AE34               	btfss	(___flge@ff2+3)^0,7,c
 11251   003DC8  EFE8  F01E         	goto	u7461
 11252   003DCC  EFEA  F01E         	goto	u7460
 11253   003DD0                     u7461:
 11254   003DD0  EFF3  F01E         	goto	l816
 11255   003DD4                     u7460:
 11256   003DD4  6C31               	negf	___flge@ff2^0,c
 11257   003DD6  1E32               	comf	(___flge@ff2+1)^0,f,c
 11258   003DD8  B0D8               	btfsc	status,0,c
 11259   003DDA  2A32               	incf	(___flge@ff2+1)^0,f,c
 11260   003DDC  1E33               	comf	(___flge@ff2+2)^0,f,c
 11261   003DDE  B0D8               	btfsc	status,0,c
 11262   003DE0  2A33               	incf	(___flge@ff2+2)^0,f,c
 11263   003DE2  0E80               	movlw	128
 11264   003DE4  5634               	subfwb	(___flge@ff2+3)^0,f,c
 11265   003DE6                     l816:
 11266   003DE6  0E00               	movlw	0
 11267   003DE8  1A2D               	xorwf	___flge@ff1^0,f,c
 11268   003DEA  0E00               	movlw	0
 11269   003DEC  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 11270   003DEE  0E00               	movlw	0
 11271   003DF0  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 11272   003DF2  0E80               	movlw	128
 11273   003DF4  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 11274   003DF6  0E00               	movlw	0
 11275   003DF8  1A31               	xorwf	___flge@ff2^0,f,c
 11276   003DFA  0E00               	movlw	0
 11277   003DFC  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 11278   003DFE  0E00               	movlw	0
 11279   003E00  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 11280   003E02  0E80               	movlw	128
 11281   003E04  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 11282   003E06  5031               	movf	___flge@ff2^0,w,c
 11283   003E08  5C2D               	subwf	___flge@ff1^0,w,c
 11284   003E0A  5032               	movf	(___flge@ff2+1)^0,w,c
 11285   003E0C  582E               	subwfb	(___flge@ff1+1)^0,w,c
 11286   003E0E  5033               	movf	(___flge@ff2+2)^0,w,c
 11287   003E10  582F               	subwfb	(___flge@ff1+2)^0,w,c
 11288   003E12  5034               	movf	(___flge@ff2+3)^0,w,c
 11289   003E14  5830               	subwfb	(___flge@ff1+3)^0,w,c
 11290   003E16  B0D8               	btfsc	status,0,c
 11291   003E18  EF10  F01F         	goto	u7471
 11292   003E1C  EF12  F01F         	goto	u7470
 11293   003E20                     u7471:
 11294   003E20  EF15  F01F         	goto	l6130
 11295   003E24                     u7470:
 11296   003E24  90D8               	bcf	status,0,c
 11297   003E26  EF16  F01F         	goto	l821
 11298   003E2A                     l6130:
 11299   003E2A  80D8               	bsf	status,0,c
 11300   003E2C                     l821:
 11301   003E2C  0012               	return		;funcret
 11302   003E2E                     __end_of___flge:
 11303                           	callstack 0
 11304                           
 11305 ;; *************** function ___fleq *****************
 11306 ;; Defined at:
 11307 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;  ff1             4    5[COMRAM] unsigned char 
 11310 ;;  ff2             4    9[COMRAM] unsigned char 
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;		None
 11313 ;; Return value:  Size  Location     Type
 11314 ;;		None               void
 11315 ;; Registers used:
 11316 ;;		wreg, status,2, status,0
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11322 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11325 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11326 ;;Total ram usage:       12 bytes
 11327 ;; Hardware stack levels used: 1
 11328 ;; Hardware stack levels required when called: 1
 11329 ;; This function calls:
 11330 ;;		Nothing
 11331 ;; This function is called by:
 11332 ;;		_efgtoa
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text40
 11337   0043A4                     __ptext40:
 11338                           	callstack 0
 11339   0043A4                     ___fleq:
 11340                           	callstack 24
 11341   0043A4  0E00               	movlw	0
 11342   0043A6  1406               	andwf	___fleq@ff1^0,w,c
 11343   0043A8  6E0E               	movwf	??___fleq^0,c
 11344   0043AA  0E00               	movlw	0
 11345   0043AC  1407               	andwf	(___fleq@ff1+1)^0,w,c
 11346   0043AE  6E0F               	movwf	(??___fleq+1)^0,c
 11347   0043B0  0E80               	movlw	128
 11348   0043B2  1408               	andwf	(___fleq@ff1+2)^0,w,c
 11349   0043B4  6E10               	movwf	(??___fleq+2)^0,c
 11350   0043B6  0E7F               	movlw	127
 11351   0043B8  1409               	andwf	(___fleq@ff1+3)^0,w,c
 11352   0043BA  6E11               	movwf	(??___fleq+3)^0,c
 11353   0043BC  500E               	movf	??___fleq^0,w,c
 11354   0043BE  100F               	iorwf	(??___fleq+1)^0,w,c
 11355   0043C0  1010               	iorwf	(??___fleq+2)^0,w,c
 11356   0043C2  1011               	iorwf	(??___fleq+3)^0,w,c
 11357   0043C4  A4D8               	btfss	status,2,c
 11358   0043C6  EFE7  F021         	goto	u7401
 11359   0043CA  EFE9  F021         	goto	u7400
 11360   0043CE                     u7401:
 11361   0043CE  EFF1  F021         	goto	l6100
 11362   0043D2                     u7400:
 11363   0043D2  0E00               	movlw	0
 11364   0043D4  6E06               	movwf	___fleq@ff1^0,c
 11365   0043D6  0E00               	movlw	0
 11366   0043D8  6E07               	movwf	(___fleq@ff1+1)^0,c
 11367   0043DA  0E00               	movlw	0
 11368   0043DC  6E08               	movwf	(___fleq@ff1+2)^0,c
 11369   0043DE  0E00               	movlw	0
 11370   0043E0  6E09               	movwf	(___fleq@ff1+3)^0,c
 11371   0043E2                     l6100:
 11372   0043E2  0E00               	movlw	0
 11373   0043E4  140A               	andwf	___fleq@ff2^0,w,c
 11374   0043E6  6E0E               	movwf	??___fleq^0,c
 11375   0043E8  0E00               	movlw	0
 11376   0043EA  140B               	andwf	(___fleq@ff2+1)^0,w,c
 11377   0043EC  6E0F               	movwf	(??___fleq+1)^0,c
 11378   0043EE  0E80               	movlw	128
 11379   0043F0  140C               	andwf	(___fleq@ff2+2)^0,w,c
 11380   0043F2  6E10               	movwf	(??___fleq+2)^0,c
 11381   0043F4  0E7F               	movlw	127
 11382   0043F6  140D               	andwf	(___fleq@ff2+3)^0,w,c
 11383   0043F8  6E11               	movwf	(??___fleq+3)^0,c
 11384   0043FA  500E               	movf	??___fleq^0,w,c
 11385   0043FC  100F               	iorwf	(??___fleq+1)^0,w,c
 11386   0043FE  1010               	iorwf	(??___fleq+2)^0,w,c
 11387   004400  1011               	iorwf	(??___fleq+3)^0,w,c
 11388   004402  A4D8               	btfss	status,2,c
 11389   004404  EF06  F022         	goto	u7411
 11390   004408  EF08  F022         	goto	u7410
 11391   00440C                     u7411:
 11392   00440C  EF10  F022         	goto	l6104
 11393   004410                     u7410:
 11394   004410  0E00               	movlw	0
 11395   004412  6E0A               	movwf	___fleq@ff2^0,c
 11396   004414  0E00               	movlw	0
 11397   004416  6E0B               	movwf	(___fleq@ff2+1)^0,c
 11398   004418  0E00               	movlw	0
 11399   00441A  6E0C               	movwf	(___fleq@ff2+2)^0,c
 11400   00441C  0E00               	movlw	0
 11401   00441E  6E0D               	movwf	(___fleq@ff2+3)^0,c
 11402   004420                     l6104:
 11403   004420  500A               	movf	___fleq@ff2^0,w,c
 11404   004422  1806               	xorwf	___fleq@ff1^0,w,c
 11405   004424  E10F               	bnz	u7420
 11406   004426  500B               	movf	(___fleq@ff2+1)^0,w,c
 11407   004428  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 11408   00442A  E10C               	bnz	u7420
 11409   00442C  500C               	movf	(___fleq@ff2+2)^0,w,c
 11410   00442E  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 11411   004430  E109               	bnz	u7420
 11412   004432  500D               	movf	(___fleq@ff2+3)^0,w,c
 11413   004434  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 11414   004436  B4D8               	btfsc	status,2,c
 11415   004438  EF20  F022         	goto	u7421
 11416   00443C  EF22  F022         	goto	u7420
 11417   004440                     u7421:
 11418   004440  EF25  F022         	goto	l6108
 11419   004444                     u7420:
 11420   004444  90D8               	bcf	status,0,c
 11421   004446  EF26  F022         	goto	l810
 11422   00444A                     l6108:
 11423   00444A  80D8               	bsf	status,0,c
 11424   00444C                     l810:
 11425   00444C  0012               	return		;funcret
 11426   00444E                     __end_of___fleq:
 11427                           	callstack 0
 11428                           
 11429 ;; *************** function ___fldiv *****************
 11430 ;; Defined at:
 11431 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;  b               4   44[COMRAM] unsigned char 
 11434 ;;  a               4   48[COMRAM] unsigned char 
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  grs             4   63[COMRAM] unsigned long 
 11437 ;;  rem             4   56[COMRAM] unsigned long 
 11438 ;;  new_exp         2   61[COMRAM] short 
 11439 ;;  aexp            1   68[COMRAM] unsigned char 
 11440 ;;  bexp            1   67[COMRAM] unsigned char 
 11441 ;;  sign            1   60[COMRAM] unsigned char 
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  4   44[COMRAM] unsigned char 
 11444 ;; Registers used:
 11445 ;;		wreg, status,2, status,0
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11451 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11452 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;Total ram usage:       25 bytes
 11456 ;; Hardware stack levels used: 1
 11457 ;; Hardware stack levels required when called: 1
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		_runDAC
 11462 ;;		_runADC
 11463 ;;		_efgtoa
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text41
 11468   0020E0                     __ptext41:
 11469                           	callstack 0
 11470   0020E0                     ___fldiv:
 11471                           	callstack 24
 11472   0020E0  5030               	movf	(___fldiv@b+3)^0,w,c
 11473   0020E2  0B80               	andlw	128
 11474   0020E4  6E3D               	movwf	___fldiv@sign^0,c
 11475   0020E6  5030               	movf	(___fldiv@b+3)^0,w,c
 11476   0020E8  2430               	addwf	(___fldiv@b+3)^0,w,c
 11477   0020EA  6E44               	movwf	___fldiv@bexp^0,c
 11478   0020EC  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11479   0020EE  EF7B  F010         	goto	u6861
 11480   0020F2  EF7D  F010         	goto	u6860
 11481   0020F6                     u6861:
 11482   0020F6  EF7E  F010         	goto	l5748
 11483   0020FA                     u6860:
 11484   0020FA  8044               	bsf	___fldiv@bexp^0,0,c
 11485   0020FC                     l5748:
 11486   0020FC  5044               	movf	___fldiv@bexp^0,w,c
 11487   0020FE  B4D8               	btfsc	status,2,c
 11488   002100  EF84  F010         	goto	u6871
 11489   002104  EF86  F010         	goto	u6870
 11490   002108                     u6871:
 11491   002108  EF9B  F010         	goto	l5758
 11492   00210C                     u6870:
 11493   00210C  2844               	incf	___fldiv@bexp^0,w,c
 11494   00210E  A4D8               	btfss	status,2,c
 11495   002110  EF8C  F010         	goto	u6881
 11496   002114  EF8E  F010         	goto	u6880
 11497   002118                     u6881:
 11498   002118  EF96  F010         	goto	l5754
 11499   00211C                     u6880:
 11500   00211C  0E00               	movlw	0
 11501   00211E  6E2D               	movwf	___fldiv@b^0,c
 11502   002120  0E00               	movlw	0
 11503   002122  6E2E               	movwf	(___fldiv@b+1)^0,c
 11504   002124  0E00               	movlw	0
 11505   002126  6E2F               	movwf	(___fldiv@b+2)^0,c
 11506   002128  0E00               	movlw	0
 11507   00212A  6E30               	movwf	(___fldiv@b+3)^0,c
 11508   00212C                     l5754:
 11509   00212C  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11510   00212E  0E00               	movlw	0
 11511   002130  6E30               	movwf	(___fldiv@b+3)^0,c
 11512   002132  EFA3  F010         	goto	l5760
 11513   002136                     l5758:
 11514   002136  0E00               	movlw	0
 11515   002138  6E2D               	movwf	___fldiv@b^0,c
 11516   00213A  0E00               	movlw	0
 11517   00213C  6E2E               	movwf	(___fldiv@b+1)^0,c
 11518   00213E  0E00               	movlw	0
 11519   002140  6E2F               	movwf	(___fldiv@b+2)^0,c
 11520   002142  0E00               	movlw	0
 11521   002144  6E30               	movwf	(___fldiv@b+3)^0,c
 11522   002146                     l5760:
 11523   002146  5034               	movf	(___fldiv@a+3)^0,w,c
 11524   002148  0B80               	andlw	128
 11525   00214A  1A3D               	xorwf	___fldiv@sign^0,f,c
 11526   00214C  5034               	movf	(___fldiv@a+3)^0,w,c
 11527   00214E  2434               	addwf	(___fldiv@a+3)^0,w,c
 11528   002150  6E45               	movwf	___fldiv@aexp^0,c
 11529   002152  AE33               	btfss	(___fldiv@a+2)^0,7,c
 11530   002154  EFAE  F010         	goto	u6891
 11531   002158  EFB0  F010         	goto	u6890
 11532   00215C                     u6891:
 11533   00215C  EFB1  F010         	goto	l5768
 11534   002160                     u6890:
 11535   002160  8045               	bsf	___fldiv@aexp^0,0,c
 11536   002162                     l5768:
 11537   002162  5045               	movf	___fldiv@aexp^0,w,c
 11538   002164  B4D8               	btfsc	status,2,c
 11539   002166  EFB7  F010         	goto	u6901
 11540   00216A  EFB9  F010         	goto	u6900
 11541   00216E                     u6901:
 11542   00216E  EFCE  F010         	goto	l5778
 11543   002172                     u6900:
 11544   002172  2845               	incf	___fldiv@aexp^0,w,c
 11545   002174  A4D8               	btfss	status,2,c
 11546   002176  EFBF  F010         	goto	u6911
 11547   00217A  EFC1  F010         	goto	u6910
 11548   00217E                     u6911:
 11549   00217E  EFC9  F010         	goto	l5774
 11550   002182                     u6910:
 11551   002182  0E00               	movlw	0
 11552   002184  6E31               	movwf	___fldiv@a^0,c
 11553   002186  0E00               	movlw	0
 11554   002188  6E32               	movwf	(___fldiv@a+1)^0,c
 11555   00218A  0E00               	movlw	0
 11556   00218C  6E33               	movwf	(___fldiv@a+2)^0,c
 11557   00218E  0E00               	movlw	0
 11558   002190  6E34               	movwf	(___fldiv@a+3)^0,c
 11559   002192                     l5774:
 11560   002192  8E33               	bsf	(___fldiv@a+2)^0,7,c
 11561   002194  0E00               	movlw	0
 11562   002196  6E34               	movwf	(___fldiv@a+3)^0,c
 11563   002198  EFD6  F010         	goto	l5780
 11564   00219C                     l5778:
 11565   00219C  0E00               	movlw	0
 11566   00219E  6E31               	movwf	___fldiv@a^0,c
 11567   0021A0  0E00               	movlw	0
 11568   0021A2  6E32               	movwf	(___fldiv@a+1)^0,c
 11569   0021A4  0E00               	movlw	0
 11570   0021A6  6E33               	movwf	(___fldiv@a+2)^0,c
 11571   0021A8  0E00               	movlw	0
 11572   0021AA  6E34               	movwf	(___fldiv@a+3)^0,c
 11573   0021AC                     l5780:
 11574   0021AC  5031               	movf	___fldiv@a^0,w,c
 11575   0021AE  1032               	iorwf	(___fldiv@a+1)^0,w,c
 11576   0021B0  1033               	iorwf	(___fldiv@a+2)^0,w,c
 11577   0021B2  1034               	iorwf	(___fldiv@a+3)^0,w,c
 11578   0021B4  A4D8               	btfss	status,2,c
 11579   0021B6  EFDF  F010         	goto	u6921
 11580   0021BA  EFE1  F010         	goto	u6920
 11581   0021BE                     u6921:
 11582   0021BE  EFF9  F010         	goto	l5792
 11583   0021C2                     u6920:
 11584   0021C2  0E00               	movlw	0
 11585   0021C4  6E2D               	movwf	___fldiv@b^0,c
 11586   0021C6  0E00               	movlw	0
 11587   0021C8  6E2E               	movwf	(___fldiv@b+1)^0,c
 11588   0021CA  0E00               	movlw	0
 11589   0021CC  6E2F               	movwf	(___fldiv@b+2)^0,c
 11590   0021CE  0E00               	movlw	0
 11591   0021D0  6E30               	movwf	(___fldiv@b+3)^0,c
 11592   0021D2  0E80               	movlw	128
 11593   0021D4  122F               	iorwf	(___fldiv@b+2)^0,f,c
 11594   0021D6  0E7F               	movlw	127
 11595   0021D8  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11596   0021DA                     l5786:
 11597   0021DA  503D               	movf	___fldiv@sign^0,w,c
 11598   0021DC  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11599   0021DE  C02D  F02D         	movff	___fldiv@b,?___fldiv
 11600   0021E2  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 11601   0021E6  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 11602   0021EA  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 11603   0021EE  EF3C  F012         	goto	l1133
 11604   0021F2                     l5792:
 11605   0021F2  5044               	movf	___fldiv@bexp^0,w,c
 11606   0021F4  A4D8               	btfss	status,2,c
 11607   0021F6  EFFF  F010         	goto	u6931
 11608   0021FA  EF01  F011         	goto	u6930
 11609   0021FE                     u6931:
 11610   0021FE  EF0B  F011         	goto	l5800
 11611   002202                     u6930:
 11612   002202  0E00               	movlw	0
 11613   002204  6E2D               	movwf	?___fldiv^0,c
 11614   002206  0E00               	movlw	0
 11615   002208  6E2E               	movwf	(?___fldiv+1)^0,c
 11616   00220A  0E00               	movlw	0
 11617   00220C  6E2F               	movwf	(?___fldiv+2)^0,c
 11618   00220E  0E00               	movlw	0
 11619   002210  6E30               	movwf	(?___fldiv+3)^0,c
 11620   002212  EF3C  F012         	goto	l1133
 11621   002216                     l5800:
 11622   002216  5045               	movf	___fldiv@aexp^0,w,c
 11623   002218  C044  F035         	movff	___fldiv@bexp,??___fldiv
 11624   00221C  6A36               	clrf	(??___fldiv+1)^0,c
 11625   00221E  5E35               	subwf	??___fldiv^0,f,c
 11626   002220  0E00               	movlw	0
 11627   002222  5A36               	subwfb	(??___fldiv+1)^0,f,c
 11628   002224  0E7F               	movlw	127
 11629   002226  2435               	addwf	??___fldiv^0,w,c
 11630   002228  6E3E               	movwf	___fldiv@new_exp^0,c
 11631   00222A  0E00               	movlw	0
 11632   00222C  2036               	addwfc	(??___fldiv+1)^0,w,c
 11633   00222E  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11634   002230  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 11635   002234  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 11636   002238  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 11637   00223C  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 11638   002240  0E00               	movlw	0
 11639   002242  6E2D               	movwf	___fldiv@b^0,c
 11640   002244  0E00               	movlw	0
 11641   002246  6E2E               	movwf	(___fldiv@b+1)^0,c
 11642   002248  0E00               	movlw	0
 11643   00224A  6E2F               	movwf	(___fldiv@b+2)^0,c
 11644   00224C  0E00               	movlw	0
 11645   00224E  6E30               	movwf	(___fldiv@b+3)^0,c
 11646   002250  0E00               	movlw	0
 11647   002252  6E40               	movwf	___fldiv@grs^0,c
 11648   002254  0E00               	movlw	0
 11649   002256  6E41               	movwf	(___fldiv@grs+1)^0,c
 11650   002258  0E00               	movlw	0
 11651   00225A  6E42               	movwf	(___fldiv@grs+2)^0,c
 11652   00225C  0E00               	movlw	0
 11653   00225E  6E43               	movwf	(___fldiv@grs+3)^0,c
 11654   002260  0E00               	movlw	0
 11655   002262  6E45               	movwf	___fldiv@aexp^0,c
 11656   002264  EF6C  F011         	goto	l1135
 11657   002268                     l5810:
 11658   002268  5045               	movf	___fldiv@aexp^0,w,c
 11659   00226A  B4D8               	btfsc	status,2,c
 11660   00226C  EF3A  F011         	goto	u6941
 11661   002270  EF3C  F011         	goto	u6940
 11662   002274                     u6941:
 11663   002274  EF53  F011         	goto	l5818
 11664   002278                     u6940:
 11665   002278  90D8               	bcf	status,0,c
 11666   00227A  3639               	rlcf	___fldiv@rem^0,f,c
 11667   00227C  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 11668   00227E  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 11669   002280  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 11670   002282  90D8               	bcf	status,0,c
 11671   002284  362D               	rlcf	___fldiv@b^0,f,c
 11672   002286  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11673   002288  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11674   00228A  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11675   00228C  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11676   00228E  EF4B  F011         	goto	u6951
 11677   002292  EF4D  F011         	goto	u6950
 11678   002296                     u6951:
 11679   002296  EF4E  F011         	goto	l1138
 11680   00229A                     u6950:
 11681   00229A  802D               	bsf	___fldiv@b^0,0,c
 11682   00229C                     l1138:
 11683   00229C  90D8               	bcf	status,0,c
 11684   00229E  3640               	rlcf	___fldiv@grs^0,f,c
 11685   0022A0  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11686   0022A2  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11687   0022A4  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11688   0022A6                     l5818:
 11689   0022A6  5031               	movf	___fldiv@a^0,w,c
 11690   0022A8  5C39               	subwf	___fldiv@rem^0,w,c
 11691   0022AA  5032               	movf	(___fldiv@a+1)^0,w,c
 11692   0022AC  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 11693   0022AE  5033               	movf	(___fldiv@a+2)^0,w,c
 11694   0022B0  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 11695   0022B2  5034               	movf	(___fldiv@a+3)^0,w,c
 11696   0022B4  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 11697   0022B6  A0D8               	btfss	status,0,c
 11698   0022B8  EF60  F011         	goto	u6961
 11699   0022BC  EF62  F011         	goto	u6960
 11700   0022C0                     u6961:
 11701   0022C0  EF6B  F011         	goto	l5824
 11702   0022C4                     u6960:
 11703   0022C4  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 11704   0022C6  5031               	movf	___fldiv@a^0,w,c
 11705   0022C8  5E39               	subwf	___fldiv@rem^0,f,c
 11706   0022CA  5032               	movf	(___fldiv@a+1)^0,w,c
 11707   0022CC  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 11708   0022CE  5033               	movf	(___fldiv@a+2)^0,w,c
 11709   0022D0  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 11710   0022D2  5034               	movf	(___fldiv@a+3)^0,w,c
 11711   0022D4  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 11712   0022D6                     l5824:
 11713   0022D6  2A45               	incf	___fldiv@aexp^0,f,c
 11714   0022D8                     l1135:
 11715   0022D8  0E19               	movlw	25
 11716   0022DA  6445               	cpfsgt	___fldiv@aexp^0,c
 11717   0022DC  EF72  F011         	goto	u6971
 11718   0022E0  EF74  F011         	goto	u6970
 11719   0022E4                     u6971:
 11720   0022E4  EF34  F011         	goto	l5810
 11721   0022E8                     u6970:
 11722   0022E8  5039               	movf	___fldiv@rem^0,w,c
 11723   0022EA  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 11724   0022EC  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 11725   0022EE  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 11726   0022F0  B4D8               	btfsc	status,2,c
 11727   0022F2  EF7D  F011         	goto	u6981
 11728   0022F6  EF7F  F011         	goto	u6980
 11729   0022FA                     u6981:
 11730   0022FA  EF97  F011         	goto	l5836
 11731   0022FE                     u6980:
 11732   0022FE  8040               	bsf	___fldiv@grs^0,0,c
 11733   002300  EF97  F011         	goto	l5836
 11734   002304                     l5830:
 11735   002304  90D8               	bcf	status,0,c
 11736   002306  362D               	rlcf	___fldiv@b^0,f,c
 11737   002308  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11738   00230A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11739   00230C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11740   00230E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11741   002310  EF8C  F011         	goto	u6991
 11742   002314  EF8E  F011         	goto	u6990
 11743   002318                     u6991:
 11744   002318  EF8F  F011         	goto	l1144
 11745   00231C                     u6990:
 11746   00231C  802D               	bsf	___fldiv@b^0,0,c
 11747   00231E                     l1144:
 11748   00231E  90D8               	bcf	status,0,c
 11749   002320  3640               	rlcf	___fldiv@grs^0,f,c
 11750   002322  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11751   002324  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11752   002326  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11753   002328  063E               	decf	___fldiv@new_exp^0,f,c
 11754   00232A  A0D8               	btfss	status,0,c
 11755   00232C  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 11756   00232E                     l5836:
 11757   00232E  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11758   002330  EF9C  F011         	goto	u7001
 11759   002334  EF9E  F011         	goto	u7000
 11760   002338                     u7001:
 11761   002338  EF82  F011         	goto	l5830
 11762   00233C                     u7000:
 11763   00233C  0E00               	movlw	0
 11764   00233E  6E45               	movwf	___fldiv@aexp^0,c
 11765   002340  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11766   002342  EFA5  F011         	goto	u7011
 11767   002346  EFA7  F011         	goto	u7010
 11768   00234A                     u7011:
 11769   00234A  EFCB  F011         	goto	l1146
 11770   00234E                     u7010:
 11771   00234E  0EFF               	movlw	255
 11772   002350  1440               	andwf	___fldiv@grs^0,w,c
 11773   002352  6E35               	movwf	??___fldiv^0,c
 11774   002354  0EFF               	movlw	255
 11775   002356  1441               	andwf	(___fldiv@grs+1)^0,w,c
 11776   002358  6E36               	movwf	(??___fldiv+1)^0,c
 11777   00235A  0EFF               	movlw	255
 11778   00235C  1442               	andwf	(___fldiv@grs+2)^0,w,c
 11779   00235E  6E37               	movwf	(??___fldiv+2)^0,c
 11780   002360  0E7F               	movlw	127
 11781   002362  1443               	andwf	(___fldiv@grs+3)^0,w,c
 11782   002364  6E38               	movwf	(??___fldiv+3)^0,c
 11783   002366  5035               	movf	??___fldiv^0,w,c
 11784   002368  1036               	iorwf	(??___fldiv+1)^0,w,c
 11785   00236A  1037               	iorwf	(??___fldiv+2)^0,w,c
 11786   00236C  1038               	iorwf	(??___fldiv+3)^0,w,c
 11787   00236E  B4D8               	btfsc	status,2,c
 11788   002370  EFBC  F011         	goto	u7021
 11789   002374  EFBE  F011         	goto	u7020
 11790   002378                     u7021:
 11791   002378  EFC2  F011         	goto	l1147
 11792   00237C                     u7020:
 11793   00237C                     l5844:
 11794   00237C  0E01               	movlw	1
 11795   00237E  6E45               	movwf	___fldiv@aexp^0,c
 11796   002380  EFCB  F011         	goto	l1146
 11797   002384                     l1147:
 11798   002384  A02D               	btfss	___fldiv@b^0,0,c
 11799   002386  EFC7  F011         	goto	u7031
 11800   00238A  EFC9  F011         	goto	u7030
 11801   00238E                     u7031:
 11802   00238E  EFCB  F011         	goto	l1146
 11803   002392                     u7030:
 11804   002392  EFBE  F011         	goto	l5844
 11805   002396                     l1146:
 11806   002396  5045               	movf	___fldiv@aexp^0,w,c
 11807   002398  B4D8               	btfsc	status,2,c
 11808   00239A  EFD1  F011         	goto	u7041
 11809   00239E  EFD3  F011         	goto	u7040
 11810   0023A2                     u7041:
 11811   0023A2  EFF7  F011         	goto	l5856
 11812   0023A6                     u7040:
 11813   0023A6  0E01               	movlw	1
 11814   0023A8  262D               	addwf	___fldiv@b^0,f,c
 11815   0023AA  0E00               	movlw	0
 11816   0023AC  222E               	addwfc	(___fldiv@b+1)^0,f,c
 11817   0023AE  222F               	addwfc	(___fldiv@b+2)^0,f,c
 11818   0023B0  2230               	addwfc	(___fldiv@b+3)^0,f,c
 11819   0023B2  A030               	btfss	(___fldiv@b+3)^0,0,c
 11820   0023B4  EFDE  F011         	goto	u7051
 11821   0023B8  EFE0  F011         	goto	u7050
 11822   0023BC                     u7051:
 11823   0023BC  EFF7  F011         	goto	l5856
 11824   0023C0                     u7050:
 11825   0023C0  C02D  F035         	movff	___fldiv@b,??___fldiv
 11826   0023C4  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 11827   0023C8  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 11828   0023CC  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 11829   0023D0  3438               	rlcf	(??___fldiv+3)^0,w,c
 11830   0023D2  3238               	rrcf	(??___fldiv+3)^0,f,c
 11831   0023D4  3237               	rrcf	(??___fldiv+2)^0,f,c
 11832   0023D6  3236               	rrcf	(??___fldiv+1)^0,f,c
 11833   0023D8  3235               	rrcf	??___fldiv^0,f,c
 11834   0023DA  C035  F02D         	movff	??___fldiv,___fldiv@b
 11835   0023DE  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 11836   0023E2  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 11837   0023E6  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 11838   0023EA  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 11839   0023EC  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 11840   0023EE                     l5856:
 11841   0023EE  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11842   0023F0  EF02  F012         	goto	u7061
 11843   0023F4  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11844   0023F6  E108               	bnz	u7060
 11845   0023F8  283E               	incf	___fldiv@new_exp^0,w,c
 11846   0023FA  A0D8               	btfss	status,0,c
 11847   0023FC  EF02  F012         	goto	u7061
 11848   002400  EF04  F012         	goto	u7060
 11849   002404                     u7061:
 11850   002404  EF0F  F012         	goto	l5860
 11851   002408                     u7060:
 11852   002408  0E00               	movlw	0
 11853   00240A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11854   00240C  683E               	setf	___fldiv@new_exp^0,c
 11855   00240E  0E00               	movlw	0
 11856   002410  6E2D               	movwf	___fldiv@b^0,c
 11857   002412  0E00               	movlw	0
 11858   002414  6E2E               	movwf	(___fldiv@b+1)^0,c
 11859   002416  0E00               	movlw	0
 11860   002418  6E2F               	movwf	(___fldiv@b+2)^0,c
 11861   00241A  0E00               	movlw	0
 11862   00241C  6E30               	movwf	(___fldiv@b+3)^0,c
 11863   00241E                     l5860:
 11864   00241E  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11865   002420  EF1C  F012         	goto	u7070
 11866   002424  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11867   002426  E106               	bnz	u7071
 11868   002428  043E               	decf	___fldiv@new_exp^0,w,c
 11869   00242A  B0D8               	btfsc	status,0,c
 11870   00242C  EF1A  F012         	goto	u7071
 11871   002430  EF1C  F012         	goto	u7070
 11872   002434                     u7071:
 11873   002434  EF2A  F012         	goto	l5864
 11874   002438                     u7070:
 11875   002438  0E00               	movlw	0
 11876   00243A  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11877   00243C  0E00               	movlw	0
 11878   00243E  6E3E               	movwf	___fldiv@new_exp^0,c
 11879   002440  0E00               	movlw	0
 11880   002442  6E2D               	movwf	___fldiv@b^0,c
 11881   002444  0E00               	movlw	0
 11882   002446  6E2E               	movwf	(___fldiv@b+1)^0,c
 11883   002448  0E00               	movlw	0
 11884   00244A  6E2F               	movwf	(___fldiv@b+2)^0,c
 11885   00244C  0E00               	movlw	0
 11886   00244E  6E30               	movwf	(___fldiv@b+3)^0,c
 11887   002450  0E00               	movlw	0
 11888   002452  6E3D               	movwf	___fldiv@sign^0,c
 11889   002454                     l5864:
 11890   002454  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 11891   002458  A044               	btfss	___fldiv@bexp^0,0,c
 11892   00245A  EF31  F012         	goto	u7081
 11893   00245E  EF33  F012         	goto	u7080
 11894   002462                     u7081:
 11895   002462  EF36  F012         	goto	l5870
 11896   002466                     u7080:
 11897   002466  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11898   002468  EF37  F012         	goto	l5872
 11899   00246C                     l5870:
 11900   00246C  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 11901   00246E                     l5872:
 11902   00246E  90D8               	bcf	status,0,c
 11903   002470  3044               	rrcf	___fldiv@bexp^0,w,c
 11904   002472  6E30               	movwf	(___fldiv@b+3)^0,c
 11905   002474  EFED  F010         	goto	l5786
 11906   002478                     l1133:
 11907   002478  0012               	return		;funcret
 11908   00247A                     __end_of___fldiv:
 11909                           	callstack 0
 11910                           
 11911 ;; *************** function _dtoa *****************
 11912 ;; Defined at:
 11913 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 11916 ;;		 -> NULL(0), sprintf@f(12), 
 11917 ;;  d               2   33[COMRAM] int 
 11918 ;; Auto vars:     Size  Location     Type
 11919 ;;  i               2   42[COMRAM] int 
 11920 ;;  p               2   39[COMRAM] int 
 11921 ;;  w               2   37[COMRAM] int 
 11922 ;;  s               1   41[COMRAM] unsigned char 
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  1    wreg      void 
 11925 ;; Registers used:
 11926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;Total ram usage:       13 bytes
 11937 ;; Hardware stack levels used: 1
 11938 ;; Hardware stack levels required when called: 5
 11939 ;; This function calls:
 11940 ;;		___awdiv
 11941 ;;		___awmod
 11942 ;;		_abs
 11943 ;;		_pad
 11944 ;; This function is called by:
 11945 ;;		_vfpfcnvrt
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text42
 11950   00356A                     __ptext42:
 11951                           	callstack 0
 11952   00356A                     _dtoa:
 11953                           	callstack 21
 11954   00356A                     
 11955                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 11956   00356A  BE23               	btfsc	(dtoa@d+1)^0,7,c
 11957   00356C  EFBA  F01A         	goto	u7811
 11958   003570  EFBD  F01A         	goto	u7810
 11959   003574                     u7811:
 11960   003574  0E01               	movlw	1
 11961   003576  EFBE  F01A         	goto	u7820
 11962   00357A                     u7810:
 11963   00357A  0E00               	movlw	0
 11964   00357C                     u7820:
 11965   00357C  6E2A               	movwf	dtoa@s^0,c
 11966                           
 11967                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 11968   00357E  BE58               	btfsc	(_prec+1)^0,7,c
 11969   003580  EFC6  F01A         	goto	u7830
 11970   003584  EFC4  F01A         	goto	u7831
 11971   003588                     u7831:
 11972   003588  EFCC  F01A         	goto	l1268
 11973   00358C                     u7830:
 11974   00358C  0E00               	movlw	0
 11975   00358E  6E29               	movwf	(dtoa@p+1)^0,c
 11976   003590  0E01               	movlw	1
 11977   003592  6E28               	movwf	dtoa@p^0,c
 11978   003594  EFD0  F01A         	goto	l1270
 11979   003598                     l1268:
 11980   003598  C057  F028         	movff	_prec,dtoa@p
 11981   00359C  C058  F029         	movff	_prec+1,dtoa@p+1
 11982   0035A0                     l1270:
 11983                           
 11984                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 11985   0035A0  C055  F026         	movff	_width,dtoa@w
 11986   0035A4  C056  F027         	movff	_width+1,dtoa@w+1
 11987   0035A8                     
 11988                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 11989   0035A8  502A               	movf	dtoa@s^0,w,c
 11990   0035AA  B4D8               	btfsc	status,2,c
 11991   0035AC  EFDA  F01A         	goto	u7841
 11992   0035B0  EFDC  F01A         	goto	u7840
 11993   0035B4                     u7841:
 11994   0035B4  EFF3  F01A         	goto	l1271
 11995   0035B8                     u7840:
 11996   0035B8                     
 11997                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 11998   0035B8  0626               	decf	dtoa@w^0,f,c
 11999   0035BA  A0D8               	btfss	status,0,c
 12000   0035BC  0627               	decf	(dtoa@w+1)^0,f,c
 12001   0035BE                     
 12002                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 12003   0035BE  502A               	movf	dtoa@s^0,w,c
 12004   0035C0  A4D8               	btfss	status,2,c
 12005   0035C2  EFE5  F01A         	goto	u7851
 12006   0035C6  EFE7  F01A         	goto	u7850
 12007   0035CA                     u7851:
 12008   0035CA  EFED  F01A         	goto	l6292
 12009   0035CE                     u7850:
 12010   0035CE  0E00               	movlw	0
 12011   0035D0  6E25               	movwf	(_dtoa$3646+1)^0,c
 12012   0035D2  0E2B               	movlw	43
 12013   0035D4  6E24               	movwf	_dtoa$3646^0,c
 12014   0035D6  EFF1  F01A         	goto	l6294
 12015   0035DA                     l6292:
 12016   0035DA  0E00               	movlw	0
 12017   0035DC  6E25               	movwf	(_dtoa$3646+1)^0,c
 12018   0035DE  0E2D               	movlw	45
 12019   0035E0  6E24               	movwf	_dtoa$3646^0,c
 12020   0035E2                     l6294:
 12021   0035E2  C024  F02A         	movff	_dtoa$3646,dtoa@s
 12022   0035E6                     l1271:
 12023                           
 12024                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 12025   0035E6  0E00               	movlw	0
 12026   0035E8  6E2C               	movwf	(dtoa@i+1)^0,c
 12027   0035EA  0E4F               	movlw	79
 12028   0035EC  6E2B               	movwf	dtoa@i^0,c
 12029   0035EE                     
 12030                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 12031   0035EE  0E00               	movlw	0
 12032   0035F0  0101               	movlb	1	; () banked
 12033   0035F2  6F74               	movwf	(_dbuf+79)& (0+255),b
 12034                           
 12035                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 12036   0035F4  EF2C  F01B         	goto	l6308
 12037   0035F8                     l6298:
 12038                           
 12039                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 12040   0035F8  062B               	decf	dtoa@i^0,f,c
 12041   0035FA  A0D8               	btfss	status,0,c
 12042   0035FC  062C               	decf	(dtoa@i+1)^0,f,c
 12043   0035FE                     
 12044                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 12045   0035FE  0E25               	movlw	low _dbuf
 12046   003600  242B               	addwf	dtoa@i^0,w,c
 12047   003602  6ED9               	movwf	fsr2l,c
 12048   003604  0E01               	movlw	high _dbuf
 12049   003606  202C               	addwfc	(dtoa@i+1)^0,w,c
 12050   003608  6EDA               	movwf	fsr2h,c
 12051   00360A  C022  F006         	movff	dtoa@d,___awmod@dividend
 12052   00360E  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 12053   003612  0E00               	movlw	0
 12054   003614  6E09               	movwf	(___awmod@divisor+1)^0,c
 12055   003616  0E0A               	movlw	10
 12056   003618  6E08               	movwf	___awmod@divisor^0,c
 12057   00361A  EC23  F021         	call	___awmod	;wreg free
 12058   00361E  C006  F00C         	movff	?___awmod,abs@a
 12059   003622  C007  F00D         	movff	?___awmod+1,abs@a+1
 12060   003626  EC23  F024         	call	_abs	;wreg free
 12061   00362A  500C               	movf	?_abs^0,w,c
 12062   00362C  0F30               	addlw	48
 12063   00362E  6EDF               	movwf	indf2,c
 12064   003630                     
 12065                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 12066   003630  0628               	decf	dtoa@p^0,f,c
 12067   003632  A0D8               	btfss	status,0,c
 12068   003634  0629               	decf	(dtoa@p+1)^0,f,c
 12069   003636                     
 12070                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 12071   003636  0626               	decf	dtoa@w^0,f,c
 12072   003638  A0D8               	btfss	status,0,c
 12073   00363A  0627               	decf	(dtoa@w+1)^0,f,c
 12074   00363C                     
 12075                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 12076   00363C  C022  F006         	movff	dtoa@d,___awdiv@dividend
 12077   003640  C023  F007         	movff	dtoa@d+1,___awdiv@dividend+1
 12078   003644  0E00               	movlw	0
 12079   003646  6E09               	movwf	(___awdiv@divisor+1)^0,c
 12080   003648  0E0A               	movlw	10
 12081   00364A  6E08               	movwf	___awdiv@divisor^0,c
 12082   00364C  EC68  F020         	call	___awdiv	;wreg free
 12083   003650  C006  F022         	movff	?___awdiv,dtoa@d
 12084   003654  C007  F023         	movff	?___awdiv+1,dtoa@d+1
 12085   003658                     l6308:
 12086                           
 12087                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 12088   003658  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 12089   00365A  EF37  F01B         	goto	u7861
 12090   00365E  502C               	movf	(dtoa@i+1)^0,w,c
 12091   003660  E108               	bnz	u7860
 12092   003662  042B               	decf	dtoa@i^0,w,c
 12093   003664  A0D8               	btfss	status,0,c
 12094   003666  EF37  F01B         	goto	u7861
 12095   00366A  EF39  F01B         	goto	u7860
 12096   00366E                     u7861:
 12097   00366E  EF4F  F01B         	goto	l6314
 12098   003672                     u7860:
 12099   003672  5022               	movf	dtoa@d^0,w,c
 12100   003674  1023               	iorwf	(dtoa@d+1)^0,w,c
 12101   003676  A4D8               	btfss	status,2,c
 12102   003678  EF40  F01B         	goto	u7871
 12103   00367C  EF42  F01B         	goto	u7870
 12104   003680                     u7871:
 12105   003680  EFFC  F01A         	goto	l6298
 12106   003684                     u7870:
 12107   003684  BE29               	btfsc	(dtoa@p+1)^0,7,c
 12108   003686  EF4F  F01B         	goto	u7880
 12109   00368A  5029               	movf	(dtoa@p+1)^0,w,c
 12110   00368C  E106               	bnz	u7881
 12111   00368E  0428               	decf	dtoa@p^0,w,c
 12112   003690  B0D8               	btfsc	status,0,c
 12113   003692  EF4D  F01B         	goto	u7881
 12114   003696  EF4F  F01B         	goto	u7880
 12115   00369A                     u7881:
 12116   00369A  EFFC  F01A         	goto	l6298
 12117   00369E                     u7880:
 12118   00369E                     l6314:
 12119                           
 12120                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 12121   00369E  502A               	movf	dtoa@s^0,w,c
 12122   0036A0  B4D8               	btfsc	status,2,c
 12123   0036A2  EF55  F01B         	goto	u7891
 12124   0036A6  EF57  F01B         	goto	u7890
 12125   0036AA                     u7891:
 12126   0036AA  EF62  F01B         	goto	l6320
 12127   0036AE                     u7890:
 12128   0036AE                     
 12129                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 12130   0036AE  062B               	decf	dtoa@i^0,f,c
 12131   0036B0  A0D8               	btfss	status,0,c
 12132   0036B2  062C               	decf	(dtoa@i+1)^0,f,c
 12133   0036B4                     
 12134                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 12135   0036B4  0E25               	movlw	low _dbuf
 12136   0036B6  242B               	addwf	dtoa@i^0,w,c
 12137   0036B8  6ED9               	movwf	fsr2l,c
 12138   0036BA  0E01               	movlw	high _dbuf
 12139   0036BC  202C               	addwfc	(dtoa@i+1)^0,w,c
 12140   0036BE  6EDA               	movwf	fsr2h,c
 12141   0036C0  C02A  FFDF         	movff	dtoa@s,indf2
 12142   0036C4                     l6320:
 12143                           
 12144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 12145   0036C4  C020  F017         	movff	dtoa@fp,pad@fp
 12146   0036C8  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 12147   0036CC  0E25               	movlw	low _dbuf
 12148   0036CE  242B               	addwf	dtoa@i^0,w,c
 12149   0036D0  6E19               	movwf	pad@buf^0,c
 12150   0036D2  0E01               	movlw	high _dbuf
 12151   0036D4  202C               	addwfc	(dtoa@i+1)^0,w,c
 12152   0036D6  6E1A               	movwf	(pad@buf+1)^0,c
 12153   0036D8  C026  F01B         	movff	dtoa@w,pad@p
 12154   0036DC  C027  F01C         	movff	dtoa@w+1,pad@p+1
 12155   0036E0  EC27  F022         	call	_pad	;wreg free
 12156   0036E4  0012               	return		;funcret
 12157   0036E6                     __end_of_dtoa:
 12158                           	callstack 0
 12159                           
 12160 ;; *************** function _pad *****************
 12161 ;; Defined at:
 12162 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 12165 ;;		 -> NULL(0), sprintf@f(12), 
 12166 ;;  buf             2   24[COMRAM] PTR unsigned char 
 12167 ;;		 -> dbuf(80), 
 12168 ;;  p               2   26[COMRAM] int 
 12169 ;; Auto vars:     Size  Location     Type
 12170 ;;  i               2   29[COMRAM] int 
 12171 ;; Return value:  Size  Location     Type
 12172 ;;                  1    wreg      void 
 12173 ;; Registers used:
 12174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12175 ;; Tracked objects:
 12176 ;;		On entry : 0/0
 12177 ;;		On exit  : 0/0
 12178 ;;		Unchanged: 0/0
 12179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12180 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;Total ram usage:        9 bytes
 12185 ;; Hardware stack levels used: 1
 12186 ;; Hardware stack levels required when called: 4
 12187 ;; This function calls:
 12188 ;;		_fputc
 12189 ;;		_fputs
 12190 ;; This function is called by:
 12191 ;;		_dtoa
 12192 ;;		_efgtoa
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196                           	psect	text43
 12197   00444E                     __ptext43:
 12198                           	callstack 0
 12199   00444E                     _pad:
 12200                           	callstack 21
 12201   00444E                     
 12202                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 12203   00444E  A059               	btfss	_flags^0,0,c
 12204   004450  EF2C  F022         	goto	u7561
 12205   004454  EF2E  F022         	goto	u7560
 12206   004458                     u7561:
 12207   004458  EF38  F022         	goto	l6190
 12208   00445C                     u7560:
 12209   00445C                     
 12210                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 12211   00445C  C019  F010         	movff	pad@buf,fputs@s
 12212   004460  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12213   004464  C017  F012         	movff	pad@fp,fputs@fp
 12214   004468  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12215   00446C  EC59  F023         	call	_fputs	;wreg free
 12216   004470                     l6190:
 12217                           
 12218                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 12219   004470  BE1C               	btfsc	(pad@p+1)^0,7,c
 12220   004472  EF3F  F022         	goto	u7570
 12221   004476  EF3D  F022         	goto	u7571
 12222   00447A                     u7571:
 12223   00447A  EF43  F022         	goto	l1259
 12224   00447E                     u7570:
 12225   00447E                     
 12226                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12227   00447E  0E00               	movlw	0
 12228   004480  6E1C               	movwf	(pad@p+1)^0,c
 12229   004482  0E00               	movlw	0
 12230   004484  6E1B               	movwf	pad@p^0,c
 12231   004486                     l1259:
 12232                           
 12233                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12234   004486  0E00               	movlw	0
 12235   004488  6E1F               	movwf	(pad@i+1)^0,c
 12236   00448A  0E00               	movlw	0
 12237   00448C  6E1E               	movwf	pad@i^0,c
 12238                           
 12239                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12240   00448E  EF55  F022         	goto	l6198
 12241   004492                     l6194:
 12242                           
 12243                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 12244   004492  0E00               	movlw	0
 12245   004494  6E08               	movwf	(fputc@c+1)^0,c
 12246   004496  0E20               	movlw	32
 12247   004498  6E07               	movwf	fputc@c^0,c
 12248   00449A  C017  F009         	movff	pad@fp,fputc@fp
 12249   00449E  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12250   0044A2  EC03  F020         	call	_fputc	;wreg free
 12251   0044A6                     
 12252                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12253   0044A6  4A1E               	infsnz	pad@i^0,f,c
 12254   0044A8  2A1F               	incf	(pad@i+1)^0,f,c
 12255   0044AA                     l6198:
 12256                           
 12257                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12258   0044AA  501B               	movf	pad@p^0,w,c
 12259   0044AC  5C1E               	subwf	pad@i^0,w,c
 12260   0044AE  501F               	movf	(pad@i+1)^0,w,c
 12261   0044B0  0A80               	xorlw	128
 12262   0044B2  6E1D               	movwf	??_pad^0,c
 12263   0044B4  501C               	movf	(pad@p+1)^0,w,c
 12264   0044B6  0A80               	xorlw	128
 12265   0044B8  581D               	subwfb	??_pad^0,w,c
 12266   0044BA  A0D8               	btfss	status,0,c
 12267   0044BC  EF62  F022         	goto	u7581
 12268   0044C0  EF64  F022         	goto	u7580
 12269   0044C4                     u7581:
 12270   0044C4  EF49  F022         	goto	l6194
 12271   0044C8                     u7580:
 12272   0044C8                     
 12273                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 12274   0044C8  B059               	btfsc	_flags^0,0,c
 12275   0044CA  EF69  F022         	goto	u7591
 12276   0044CE  EF6B  F022         	goto	u7590
 12277   0044D2                     u7591:
 12278   0044D2  EF75  F022         	goto	l1264
 12279   0044D6                     u7590:
 12280   0044D6                     
 12281                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 12282   0044D6  C019  F010         	movff	pad@buf,fputs@s
 12283   0044DA  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12284   0044DE  C017  F012         	movff	pad@fp,fputs@fp
 12285   0044E2  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12286   0044E6  EC59  F023         	call	_fputs	;wreg free
 12287   0044EA                     l1264:
 12288   0044EA  0012               	return		;funcret
 12289   0044EC                     __end_of_pad:
 12290                           	callstack 0
 12291                           
 12292 ;; *************** function _fputs *****************
 12293 ;; Defined at:
 12294 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12297 ;;		 -> dbuf(80), 
 12298 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12299 ;;		 -> NULL(0), sprintf@f(12), 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;  i               2   20[COMRAM] int 
 12302 ;;  c               1   19[COMRAM] unsigned char 
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  2   15[COMRAM] int 
 12305 ;; Registers used:
 12306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12315 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12316 ;;Total ram usage:        7 bytes
 12317 ;; Hardware stack levels used: 1
 12318 ;; Hardware stack levels required when called: 3
 12319 ;; This function calls:
 12320 ;;		_fputc
 12321 ;; This function is called by:
 12322 ;;		_pad
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text44
 12327   0046B2                     __ptext44:
 12328                           	callstack 0
 12329   0046B2                     _fputs:
 12330                           	callstack 21
 12331   0046B2  0E00               	movlw	0
 12332   0046B4  6E16               	movwf	(fputs@i+1)^0,c
 12333   0046B6  0E00               	movlw	0
 12334   0046B8  6E15               	movwf	fputs@i^0,c
 12335   0046BA  EF6A  F023         	goto	l5734
 12336   0046BE                     l5730:
 12337   0046BE  C014  F007         	movff	fputs@c,fputc@c
 12338   0046C2  6A08               	clrf	(fputc@c+1)^0,c
 12339   0046C4  C012  F009         	movff	fputs@fp,fputc@fp
 12340   0046C8  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12341   0046CC  EC03  F020         	call	_fputc	;wreg free
 12342   0046D0  4A15               	infsnz	fputs@i^0,f,c
 12343   0046D2  2A16               	incf	(fputs@i+1)^0,f,c
 12344   0046D4                     l5734:
 12345   0046D4  5015               	movf	fputs@i^0,w,c
 12346   0046D6  2410               	addwf	fputs@s^0,w,c
 12347   0046D8  6ED9               	movwf	fsr2l,c
 12348   0046DA  5016               	movf	(fputs@i+1)^0,w,c
 12349   0046DC  2011               	addwfc	(fputs@s+1)^0,w,c
 12350   0046DE  6EDA               	movwf	fsr2h,c
 12351   0046E0  50DF               	movf	indf2,w,c
 12352   0046E2  6E14               	movwf	fputs@c^0,c
 12353   0046E4  5014               	movf	fputs@c^0,w,c
 12354   0046E6  A4D8               	btfss	status,2,c
 12355   0046E8  EF78  F023         	goto	u6851
 12356   0046EC  EF7A  F023         	goto	u6850
 12357   0046F0                     u6851:
 12358   0046F0  EF5F  F023         	goto	l5730
 12359   0046F4                     u6850:
 12360   0046F4  0012               	return		;funcret
 12361   0046F6                     __end_of_fputs:
 12362                           	callstack 0
 12363                           
 12364 ;; *************** function _fputc *****************
 12365 ;; Defined at:
 12366 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 12367 ;; Parameters:    Size  Location     Type
 12368 ;;  c               2    6[COMRAM] int 
 12369 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12370 ;;		 -> NULL(0), sprintf@f(12), 
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  2    6[COMRAM] int 
 12375 ;; Registers used:
 12376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;Total ram usage:        9 bytes
 12387 ;; Hardware stack levels used: 1
 12388 ;; Hardware stack levels required when called: 2
 12389 ;; This function calls:
 12390 ;;		_putch
 12391 ;; This function is called by:
 12392 ;;		_pad
 12393 ;;		_stoa
 12394 ;;		_vfpfcnvrt
 12395 ;;		_fputs
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text45
 12400   004006                     __ptext45:
 12401                           	callstack 0
 12402   004006                     _fputc:
 12403                           	callstack 23
 12404   004006  5009               	movf	fputc@fp^0,w,c
 12405   004008  100A               	iorwf	(fputc@fp+1)^0,w,c
 12406   00400A  B4D8               	btfsc	status,2,c
 12407   00400C  EF0A  F020         	goto	u6421
 12408   004010  EF0C  F020         	goto	u6420
 12409   004014                     u6421:
 12410   004014  EF15  F020         	goto	l5516
 12411   004018                     u6420:
 12412   004018  5009               	movf	fputc@fp^0,w,c
 12413   00401A  100A               	iorwf	(fputc@fp+1)^0,w,c
 12414   00401C  A4D8               	btfss	status,2,c
 12415   00401E  EF13  F020         	goto	u6431
 12416   004022  EF15  F020         	goto	u6430
 12417   004026                     u6431:
 12418   004026  EF1A  F020         	goto	l5518
 12419   00402A                     u6430:
 12420   00402A                     l5516:
 12421   00402A  5007               	movf	fputc@c^0,w,c
 12422   00402C  EC87  F024         	call	_putch
 12423   004030  EF67  F020         	goto	l1460
 12424   004034                     l5518:
 12425   004034  EE20 F00A          	lfsr	2,10
 12426   004038  5009               	movf	fputc@fp^0,w,c
 12427   00403A  26D9               	addwf	fsr2l,f,c
 12428   00403C  500A               	movf	(fputc@fp+1)^0,w,c
 12429   00403E  22DA               	addwfc	fsr2h,f,c
 12430   004040  50DE               	movf	postinc2,w,c
 12431   004042  10DE               	iorwf	postinc2,w,c
 12432   004044  B4D8               	btfsc	status,2,c
 12433   004046  EF27  F020         	goto	u6441
 12434   00404A  EF29  F020         	goto	u6440
 12435   00404E                     u6441:
 12436   00404E  EF44  F020         	goto	l5522
 12437   004052                     u6440:
 12438   004052  EE20 F00A          	lfsr	2,10
 12439   004056  5009               	movf	fputc@fp^0,w,c
 12440   004058  26D9               	addwf	fsr2l,f,c
 12441   00405A  500A               	movf	(fputc@fp+1)^0,w,c
 12442   00405C  22DA               	addwfc	fsr2h,f,c
 12443   00405E  EE10 F003          	lfsr	1,3
 12444   004062  5009               	movf	fputc@fp^0,w,c
 12445   004064  26E1               	addwf	fsr1l,f,c
 12446   004066  500A               	movf	(fputc@fp+1)^0,w,c
 12447   004068  22E2               	addwfc	fsr1h,f,c
 12448   00406A  50DE               	movf	postinc2,w,c
 12449   00406C  5CE6               	subwf	postinc1,w,c
 12450   00406E  50E6               	movf	postinc1,w,c
 12451   004070  0A80               	xorlw	128
 12452   004072  6E0F               	movwf	(??_fputc+4)^0,c
 12453   004074  50DE               	movf	postinc2,w,c
 12454   004076  0A80               	xorlw	128
 12455   004078  580F               	subwfb	(??_fputc+4)^0,w,c
 12456   00407A  B0D8               	btfsc	status,0,c
 12457   00407C  EF42  F020         	goto	u6451
 12458   004080  EF44  F020         	goto	u6450
 12459   004084                     u6451:
 12460   004084  EF67  F020         	goto	l1460
 12461   004088                     u6450:
 12462   004088                     l5522:
 12463   004088  EE20 F003          	lfsr	2,3
 12464   00408C  5009               	movf	fputc@fp^0,w,c
 12465   00408E  26D9               	addwf	fsr2l,f,c
 12466   004090  500A               	movf	(fputc@fp+1)^0,w,c
 12467   004092  22DA               	addwfc	fsr2h,f,c
 12468   004094  CFDE F00B          	movff	postinc2,??_fputc
 12469   004098  CFDD F00C          	movff	postdec2,??_fputc+1
 12470   00409C  C009  FFD9         	movff	fputc@fp,fsr2l
 12471   0040A0  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 12472   0040A4  CFDE F00D          	movff	postinc2,??_fputc+2
 12473   0040A8  CFDD F00E          	movff	postdec2,??_fputc+3
 12474   0040AC  500B               	movf	??_fputc^0,w,c
 12475   0040AE  240D               	addwf	(??_fputc+2)^0,w,c
 12476   0040B0  6ED9               	movwf	fsr2l,c
 12477   0040B2  500C               	movf	(??_fputc+1)^0,w,c
 12478   0040B4  200E               	addwfc	(??_fputc+3)^0,w,c
 12479   0040B6  6EDA               	movwf	fsr2h,c
 12480   0040B8  C007  FFDF         	movff	fputc@c,indf2
 12481   0040BC  EE20 F003          	lfsr	2,3
 12482   0040C0  5009               	movf	fputc@fp^0,w,c
 12483   0040C2  26D9               	addwf	fsr2l,f,c
 12484   0040C4  500A               	movf	(fputc@fp+1)^0,w,c
 12485   0040C6  22DA               	addwfc	fsr2h,f,c
 12486   0040C8  2ADE               	incf	postinc2,f,c
 12487   0040CA  0E00               	movlw	0
 12488   0040CC  22DD               	addwfc	postdec2,f,c
 12489   0040CE                     l1460:
 12490   0040CE  0012               	return		;funcret
 12491   0040D0                     __end_of_fputc:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function _putch *****************
 12495 ;; Defined at:
 12496 ;;		line 11 in file "putch.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  data            1    wreg     unsigned char 
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;  data            1    5[COMRAM] unsigned char 
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  1    wreg      void 
 12503 ;; Registers used:
 12504 ;;		wreg
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;Total ram usage:        1 bytes
 12515 ;; Hardware stack levels used: 1
 12516 ;; Hardware stack levels required when called: 1
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_fputc
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           	psect	text46
 12525   00490E                     __ptext46:
 12526                           	callstack 0
 12527   00490E                     _putch:
 12528                           	callstack 23
 12529                           
 12530                           ;incstack = 0
 12531                           ;putch@data stored from wreg
 12532   00490E  6E06               	movwf	putch@data^0,c
 12533   004910                     l250:
 12534   004910  A89E               	btfss	3998,4,c	;volatile
 12535   004912  EF8D  F024         	goto	u6411
 12536   004916  EF8F  F024         	goto	u6410
 12537   00491A                     u6411:
 12538   00491A  EF88  F024         	goto	l250
 12539   00491E                     u6410:
 12540   00491E                     
 12541                           ;putch.c: 13:     TXREG1 = data;
 12542   00491E  C006  FFAD         	movff	putch@data,4013	;volatile
 12543   004922  0012               	return		;funcret
 12544   004924                     __end_of_putch:
 12545                           	callstack 0
 12546                           
 12547 ;; *************** function _abs *****************
 12548 ;; Defined at:
 12549 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  a               2   11[COMRAM] int 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  2   11[COMRAM] int 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;Total ram usage:        4 bytes
 12568 ;; Hardware stack levels used: 1
 12569 ;; Hardware stack levels required when called: 1
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_dtoa
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text47
 12578   004846                     __ptext47:
 12579                           	callstack 0
 12580   004846                     _abs:
 12581                           	callstack 24
 12582   004846  BE0D               	btfsc	(abs@a+1)^0,7,c
 12583   004848  EF28  F024         	goto	u7601
 12584   00484C  EF2A  F024         	goto	u7600
 12585   004850                     u7601:
 12586   004850  EF30  F024         	goto	l1419
 12587   004854                     u7600:
 12588   004854  C00C  F00C         	movff	abs@a,?_abs
 12589   004858  C00D  F00D         	movff	abs@a+1,?_abs+1
 12590   00485C  EF3C  F024         	goto	l1422
 12591   004860                     l1419:
 12592   004860  C00C  F00E         	movff	abs@a,??_abs
 12593   004864  C00D  F00F         	movff	abs@a+1,??_abs+1
 12594   004868  1E0E               	comf	??_abs^0,f,c
 12595   00486A  1E0F               	comf	(??_abs+1)^0,f,c
 12596   00486C  4A0E               	infsnz	??_abs^0,f,c
 12597   00486E  2A0F               	incf	(??_abs+1)^0,f,c
 12598   004870  C00E  F00C         	movff	??_abs,?_abs
 12599   004874  C00F  F00D         	movff	??_abs+1,?_abs+1
 12600   004878                     l1422:
 12601   004878  0012               	return		;funcret
 12602   00487A                     __end_of_abs:
 12603                           	callstack 0
 12604                           
 12605 ;; *************** function ___awmod *****************
 12606 ;; Defined at:
 12607 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  dividend        2    5[COMRAM] int 
 12610 ;;  divisor         2    7[COMRAM] int 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  sign            1   10[COMRAM] unsigned char 
 12613 ;;  counter         1    9[COMRAM] unsigned char 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  2    5[COMRAM] int 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;Total ram usage:        6 bytes
 12628 ;; Hardware stack levels used: 1
 12629 ;; Hardware stack levels required when called: 1
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_dtoa
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           	psect	text48
 12638   004246                     __ptext48:
 12639                           	callstack 0
 12640   004246                     ___awmod:
 12641                           	callstack 24
 12642   004246  0E00               	movlw	0
 12643   004248  6E0B               	movwf	___awmod@sign^0,c
 12644   00424A  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 12645   00424C  EF2C  F021         	goto	u7340
 12646   004250  EF2A  F021         	goto	u7341
 12647   004254                     u7341:
 12648   004254  EF32  F021         	goto	l6068
 12649   004258                     u7340:
 12650   004258  6C06               	negf	___awmod@dividend^0,c
 12651   00425A  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12652   00425C  B0D8               	btfsc	status,0,c
 12653   00425E  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12654   004260  0E01               	movlw	1
 12655   004262  6E0B               	movwf	___awmod@sign^0,c
 12656   004264                     l6068:
 12657   004264  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 12658   004266  EF39  F021         	goto	u7350
 12659   00426A  EF37  F021         	goto	u7351
 12660   00426E                     u7351:
 12661   00426E  EF3D  F021         	goto	l6072
 12662   004272                     u7350:
 12663   004272  6C08               	negf	___awmod@divisor^0,c
 12664   004274  1E09               	comf	(___awmod@divisor+1)^0,f,c
 12665   004276  B0D8               	btfsc	status,0,c
 12666   004278  2A09               	incf	(___awmod@divisor+1)^0,f,c
 12667   00427A                     l6072:
 12668   00427A  5008               	movf	___awmod@divisor^0,w,c
 12669   00427C  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 12670   00427E  B4D8               	btfsc	status,2,c
 12671   004280  EF44  F021         	goto	u7361
 12672   004284  EF46  F021         	goto	u7360
 12673   004288                     u7361:
 12674   004288  EF6A  F021         	goto	l6088
 12675   00428C                     u7360:
 12676   00428C  0E01               	movlw	1
 12677   00428E  6E0A               	movwf	___awmod@counter^0,c
 12678   004290  EF4E  F021         	goto	l6078
 12679   004294                     l6076:
 12680   004294  90D8               	bcf	status,0,c
 12681   004296  3608               	rlcf	___awmod@divisor^0,f,c
 12682   004298  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 12683   00429A  2A0A               	incf	___awmod@counter^0,f,c
 12684   00429C                     l6078:
 12685   00429C  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 12686   00429E  EF53  F021         	goto	u7371
 12687   0042A2  EF55  F021         	goto	u7370
 12688   0042A6                     u7371:
 12689   0042A6  EF4A  F021         	goto	l6076
 12690   0042AA                     u7370:
 12691   0042AA                     l6080:
 12692   0042AA  5008               	movf	___awmod@divisor^0,w,c
 12693   0042AC  5C06               	subwf	___awmod@dividend^0,w,c
 12694   0042AE  5009               	movf	(___awmod@divisor+1)^0,w,c
 12695   0042B0  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 12696   0042B2  A0D8               	btfss	status,0,c
 12697   0042B4  EF5E  F021         	goto	u7381
 12698   0042B8  EF60  F021         	goto	u7380
 12699   0042BC                     u7381:
 12700   0042BC  EF64  F021         	goto	l6084
 12701   0042C0                     u7380:
 12702   0042C0  5008               	movf	___awmod@divisor^0,w,c
 12703   0042C2  5E06               	subwf	___awmod@dividend^0,f,c
 12704   0042C4  5009               	movf	(___awmod@divisor+1)^0,w,c
 12705   0042C6  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 12706   0042C8                     l6084:
 12707   0042C8  90D8               	bcf	status,0,c
 12708   0042CA  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 12709   0042CC  3208               	rrcf	___awmod@divisor^0,f,c
 12710   0042CE  2E0A               	decfsz	___awmod@counter^0,f,c
 12711   0042D0  EF55  F021         	goto	l6080
 12712   0042D4                     l6088:
 12713   0042D4  500B               	movf	___awmod@sign^0,w,c
 12714   0042D6  B4D8               	btfsc	status,2,c
 12715   0042D8  EF70  F021         	goto	u7391
 12716   0042DC  EF72  F021         	goto	u7390
 12717   0042E0                     u7391:
 12718   0042E0  EF76  F021         	goto	l6092
 12719   0042E4                     u7390:
 12720   0042E4  6C06               	negf	___awmod@dividend^0,c
 12721   0042E6  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12722   0042E8  B0D8               	btfsc	status,0,c
 12723   0042EA  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12724   0042EC                     l6092:
 12725   0042EC  C006  F006         	movff	___awmod@dividend,?___awmod
 12726   0042F0  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 12727   0042F4  0012               	return		;funcret
 12728   0042F6                     __end_of___awmod:
 12729                           	callstack 0
 12730                           
 12731 ;; *************** function ___awdiv *****************
 12732 ;; Defined at:
 12733 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;  dividend        2    5[COMRAM] int 
 12736 ;;  divisor         2    7[COMRAM] int 
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;  quotient        2   11[COMRAM] int 
 12739 ;;  sign            1   10[COMRAM] unsigned char 
 12740 ;;  counter         1    9[COMRAM] unsigned char 
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  2    5[COMRAM] int 
 12743 ;; Registers used:
 12744 ;;		wreg, status,2, status,0
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12751 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12753 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;Total ram usage:        8 bytes
 12755 ;; Hardware stack levels used: 1
 12756 ;; Hardware stack levels required when called: 1
 12757 ;; This function calls:
 12758 ;;		Nothing
 12759 ;; This function is called by:
 12760 ;;		_runPWM
 12761 ;;		_dtoa
 12762 ;; This function uses a non-reentrant model
 12763 ;;
 12764                           
 12765                           	psect	text49
 12766   0040D0                     __ptext49:
 12767                           	callstack 0
 12768   0040D0                     ___awdiv:
 12769                           	callstack 24
 12770   0040D0  0E00               	movlw	0
 12771   0040D2  6E0B               	movwf	___awdiv@sign^0,c
 12772   0040D4  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 12773   0040D6  EF71  F020         	goto	u7280
 12774   0040DA  EF6F  F020         	goto	u7281
 12775   0040DE                     u7281:
 12776   0040DE  EF77  F020         	goto	l6024
 12777   0040E2                     u7280:
 12778   0040E2  6C08               	negf	___awdiv@divisor^0,c
 12779   0040E4  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 12780   0040E6  B0D8               	btfsc	status,0,c
 12781   0040E8  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 12782   0040EA  0E01               	movlw	1
 12783   0040EC  6E0B               	movwf	___awdiv@sign^0,c
 12784   0040EE                     l6024:
 12785   0040EE  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 12786   0040F0  EF7E  F020         	goto	u7290
 12787   0040F4  EF7C  F020         	goto	u7291
 12788   0040F8                     u7291:
 12789   0040F8  EF84  F020         	goto	l6030
 12790   0040FC                     u7290:
 12791   0040FC  6C06               	negf	___awdiv@dividend^0,c
 12792   0040FE  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 12793   004100  B0D8               	btfsc	status,0,c
 12794   004102  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 12795   004104  0E01               	movlw	1
 12796   004106  1A0B               	xorwf	___awdiv@sign^0,f,c
 12797   004108                     l6030:
 12798   004108  0E00               	movlw	0
 12799   00410A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 12800   00410C  0E00               	movlw	0
 12801   00410E  6E0C               	movwf	___awdiv@quotient^0,c
 12802   004110  5008               	movf	___awdiv@divisor^0,w,c
 12803   004112  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 12804   004114  B4D8               	btfsc	status,2,c
 12805   004116  EF8F  F020         	goto	u7301
 12806   00411A  EF91  F020         	goto	u7300
 12807   00411E                     u7301:
 12808   00411E  EFB9  F020         	goto	l6052
 12809   004122                     u7300:
 12810   004122  0E01               	movlw	1
 12811   004124  6E0A               	movwf	___awdiv@counter^0,c
 12812   004126  EF99  F020         	goto	l6038
 12813   00412A                     l6036:
 12814   00412A  90D8               	bcf	status,0,c
 12815   00412C  3608               	rlcf	___awdiv@divisor^0,f,c
 12816   00412E  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 12817   004130  2A0A               	incf	___awdiv@counter^0,f,c
 12818   004132                     l6038:
 12819   004132  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 12820   004134  EF9E  F020         	goto	u7311
 12821   004138  EFA0  F020         	goto	u7310
 12822   00413C                     u7311:
 12823   00413C  EF95  F020         	goto	l6036
 12824   004140                     u7310:
 12825   004140                     l6040:
 12826   004140  90D8               	bcf	status,0,c
 12827   004142  360C               	rlcf	___awdiv@quotient^0,f,c
 12828   004144  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 12829   004146  5008               	movf	___awdiv@divisor^0,w,c
 12830   004148  5C06               	subwf	___awdiv@dividend^0,w,c
 12831   00414A  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12832   00414C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 12833   00414E  A0D8               	btfss	status,0,c
 12834   004150  EFAC  F020         	goto	u7321
 12835   004154  EFAE  F020         	goto	u7320
 12836   004158                     u7321:
 12837   004158  EFB3  F020         	goto	l6048
 12838   00415C                     u7320:
 12839   00415C  5008               	movf	___awdiv@divisor^0,w,c
 12840   00415E  5E06               	subwf	___awdiv@dividend^0,f,c
 12841   004160  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12842   004162  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 12843   004164  800C               	bsf	___awdiv@quotient^0,0,c
 12844   004166                     l6048:
 12845   004166  90D8               	bcf	status,0,c
 12846   004168  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 12847   00416A  3208               	rrcf	___awdiv@divisor^0,f,c
 12848   00416C  2E0A               	decfsz	___awdiv@counter^0,f,c
 12849   00416E  EFA0  F020         	goto	l6040
 12850   004172                     l6052:
 12851   004172  500B               	movf	___awdiv@sign^0,w,c
 12852   004174  B4D8               	btfsc	status,2,c
 12853   004176  EFBF  F020         	goto	u7331
 12854   00417A  EFC1  F020         	goto	u7330
 12855   00417E                     u7331:
 12856   00417E  EFC5  F020         	goto	l6056
 12857   004182                     u7330:
 12858   004182  6C0C               	negf	___awdiv@quotient^0,c
 12859   004184  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 12860   004186  B0D8               	btfsc	status,0,c
 12861   004188  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 12862   00418A                     l6056:
 12863   00418A  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 12864   00418E  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 12865   004192  0012               	return		;funcret
 12866   004194                     __end_of___awdiv:
 12867                           	callstack 0
 12868                           
 12869 ;; *************** function _LCD_ShowString *****************
 12870 ;; Defined at:
 12871 ;;		line 55 in file "lcd.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  lineNum         1    wreg     unsigned char 
 12874 ;;  textData        2    6[COMRAM] PTR unsigned char 
 12875 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_9(17), 
 12876 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 12877 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  lineNum         1   10[COMRAM] unsigned char 
 12880 ;;  i               1   11[COMRAM] unsigned char 
 12881 ;; Return value:  Size  Location     Type
 12882 ;;                  1    wreg      void 
 12883 ;; Registers used:
 12884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12885 ;; Tracked objects:
 12886 ;;		On entry : 0/0
 12887 ;;		On exit  : 0/0
 12888 ;;		Unchanged: 0/0
 12889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12894 ;;Total ram usage:        6 bytes
 12895 ;; Hardware stack levels used: 1
 12896 ;; Hardware stack levels required when called: 2
 12897 ;; This function calls:
 12898 ;;		_LCD_Send
 12899 ;; This function is called by:
 12900 ;;		_main
 12901 ;;		_moveDisplay
 12902 ;;		_runADC
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text50
 12907   004194                     __ptext50:
 12908                           	callstack 0
 12909   004194                     _LCD_ShowString:
 12910                           	callstack 27
 12911                           
 12912                           ;incstack = 0
 12913                           ;LCD_ShowString@lineNum stored from wreg
 12914   004194  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 12915   004196                     
 12916                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 12917   004196  806B               	bsf	107,0,c	;volatile
 12918   004198                     l120:
 12919   004198  B06B               	btfsc	107,0,c	;volatile
 12920   00419A  EFD1  F020         	goto	u8651
 12921   00419E  EFD3  F020         	goto	u8650
 12922   0041A2                     u8651:
 12923   0041A2  EFCC  F020         	goto	l120
 12924   0041A6                     u8650:
 12925   0041A6                     
 12926                           ;lcd.c: 62:     SSP2IF = 0;
 12927   0041A6  9EA4               	bcf	4004,7,c	;volatile
 12928   0041A8                     
 12929                           ;lcd.c: 64:     LCD_Send(0x7c);
 12930   0041A8  0E7C               	movlw	124
 12931   0041AA  EC64  F024         	call	_LCD_Send
 12932                           
 12933                           ;lcd.c: 66:     LCD_Send(0x80);
 12934   0041AE  0E80               	movlw	128
 12935   0041B0  EC64  F024         	call	_LCD_Send
 12936   0041B4                     
 12937                           ;lcd.c: 68:     if(lineNum == 1){
 12938   0041B4  040B               	decf	LCD_ShowString@lineNum^0,w,c
 12939   0041B6  A4D8               	btfss	status,2,c
 12940   0041B8  EFE0  F020         	goto	u8661
 12941   0041BC  EFE2  F020         	goto	u8660
 12942   0041C0                     u8661:
 12943   0041C0  EFE7  F020         	goto	l6844
 12944   0041C4                     u8660:
 12945   0041C4                     
 12946                           ;lcd.c: 69:         LCD_Send(0x80);
 12947   0041C4  0E80               	movlw	128
 12948   0041C6  EC64  F024         	call	_LCD_Send
 12949                           
 12950                           ;lcd.c: 70:     }
 12951   0041CA  EFF3  F020         	goto	l124
 12952   0041CE                     l6844:
 12953   0041CE  0E02               	movlw	2
 12954   0041D0  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 12955   0041D2  A4D8               	btfss	status,2,c
 12956   0041D4  EFEE  F020         	goto	u8671
 12957   0041D8  EFF0  F020         	goto	u8670
 12958   0041DC                     u8671:
 12959   0041DC  EFF3  F020         	goto	l124
 12960   0041E0                     u8670:
 12961   0041E0                     
 12962                           ;lcd.c: 72:         LCD_Send(0xC0);
 12963   0041E0  0EC0               	movlw	192
 12964   0041E2  EC64  F024         	call	_LCD_Send
 12965   0041E6                     l124:
 12966                           
 12967                           ;lcd.c: 75:     LCD_Send(0x40);
 12968   0041E6  0E40               	movlw	64
 12969   0041E8  EC64  F024         	call	_LCD_Send
 12970   0041EC                     
 12971                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 12972   0041EC  0E00               	movlw	0
 12973   0041EE  6E0C               	movwf	LCD_ShowString@i^0,c
 12974   0041F0                     l6854:
 12975                           
 12976                           ;lcd.c: 78:         LCD_Send(textData[i]);
 12977   0041F0  500C               	movf	LCD_ShowString@i^0,w,c
 12978   0041F2  2407               	addwf	LCD_ShowString@textData^0,w,c
 12979   0041F4  6E09               	movwf	??_LCD_ShowString^0,c
 12980   0041F6  0E00               	movlw	0
 12981   0041F8  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 12982   0041FA  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 12983   0041FC  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 12984   004200  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 12985   004204  0E00               	movlw	low (__mediumconst shr (0+16))
 12986   004206  6EF8               	movwf	tblptru,c
 12987   004208  0E0F               	movlw	(high __ramtop+-1)
 12988   00420A  64F7               	cpfsgt	tblptrh,c
 12989   00420C  D003               	bra	u8687
 12990   00420E  0008               	tblrd		*
 12991   004210  50F5               	movf	tablat,w,c
 12992   004212  D005               	bra	u8680
 12993   004214                     u8687:
 12994   004214  CFF6 FFE1          	movff	tblptrl,fsr1l
 12995   004218  CFF7 FFE2          	movff	tblptrh,fsr1h
 12996   00421C  50E7               	movf	indf1,w,c
 12997   00421E                     u8680:
 12998   00421E  EC64  F024         	call	_LCD_Send
 12999   004222                     
 13000                           ;lcd.c: 79:     }
 13001   004222  2A0C               	incf	LCD_ShowString@i^0,f,c
 13002   004224  0E0F               	movlw	15
 13003   004226  640C               	cpfsgt	LCD_ShowString@i^0,c
 13004   004228  EF18  F021         	goto	u8691
 13005   00422C  EF1A  F021         	goto	u8690
 13006   004230                     u8691:
 13007   004230  EFF8  F020         	goto	l6854
 13008   004234                     u8690:
 13009   004234                     
 13010                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 13011   004234  846B               	bsf	107,2,c	;volatile
 13012   004236                     l128:
 13013   004236  B46B               	btfsc	107,2,c	;volatile
 13014   004238  EF20  F021         	goto	u8701
 13015   00423C  EF22  F021         	goto	u8700
 13016   004240                     u8701:
 13017   004240  EF1B  F021         	goto	l128
 13018   004244                     u8700:
 13019   004244  0012               	return		;funcret
 13020   004246                     __end_of_LCD_ShowString:
 13021                           	callstack 0
 13022                           
 13023 ;; *************** function _LCD_Clear *****************
 13024 ;; Defined at:
 13025 ;;		line 94 in file "lcd.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;		None
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;		None
 13030 ;; Return value:  Size  Location     Type
 13031 ;;                  1    wreg      void 
 13032 ;; Registers used:
 13033 ;;		wreg, cstack
 13034 ;; Tracked objects:
 13035 ;;		On entry : 0/0
 13036 ;;		On exit  : 0/0
 13037 ;;		Unchanged: 0/0
 13038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;Total ram usage:        0 bytes
 13044 ;; Hardware stack levels used: 1
 13045 ;; Hardware stack levels required when called: 2
 13046 ;; This function calls:
 13047 ;;		_LCD_Send
 13048 ;; This function is called by:
 13049 ;;		_moveDisplay
 13050 ;; This function uses a non-reentrant model
 13051 ;;
 13052                           
 13053                           	psect	text51
 13054   0047DC                     __ptext51:
 13055                           	callstack 0
 13056   0047DC                     _LCD_Clear:
 13057                           	callstack 27
 13058   0047DC                     
 13059                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 13060   0047DC  806B               	bsf	107,0,c	;volatile
 13061   0047DE                     l143:
 13062   0047DE  B06B               	btfsc	107,0,c	;volatile
 13063   0047E0  EFF4  F023         	goto	u8711
 13064   0047E4  EFF6  F023         	goto	u8710
 13065   0047E8                     u8711:
 13066   0047E8  EFEF  F023         	goto	l143
 13067   0047EC                     u8710:
 13068   0047EC                     
 13069                           ;lcd.c: 97:     SSP2IF = 0;
 13070   0047EC  9EA4               	bcf	4004,7,c	;volatile
 13071   0047EE                     
 13072                           ;lcd.c: 99:     LCD_Send(0x7C);
 13073   0047EE  0E7C               	movlw	124
 13074   0047F0  EC64  F024         	call	_LCD_Send
 13075                           
 13076                           ;lcd.c: 100:     LCD_Send(0x80);
 13077   0047F4  0E80               	movlw	128
 13078   0047F6  EC64  F024         	call	_LCD_Send
 13079                           
 13080                           ;lcd.c: 101:     LCD_Send(0x01);
 13081   0047FA  0E01               	movlw	1
 13082   0047FC  EC64  F024         	call	_LCD_Send
 13083   004800                     
 13084                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 13085   004800  846B               	bsf	107,2,c	;volatile
 13086   004802                     l146:
 13087   004802  B46B               	btfsc	107,2,c	;volatile
 13088   004804  EF06  F024         	goto	u8721
 13089   004808  EF08  F024         	goto	u8720
 13090   00480C                     u8721:
 13091   00480C  EF01  F024         	goto	l146
 13092   004810                     u8720:
 13093   004810  0012               	return		;funcret
 13094   004812                     __end_of_LCD_Clear:
 13095                           	callstack 0
 13096                           
 13097 ;; *************** function _LCD_Init *****************
 13098 ;; Defined at:
 13099 ;;		line 3 in file "lcd.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;		None
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;		None
 13104 ;; Return value:  Size  Location     Type
 13105 ;;                  1    wreg      void 
 13106 ;; Registers used:
 13107 ;;		wreg, status,2, cstack
 13108 ;; Tracked objects:
 13109 ;;		On entry : 0/0
 13110 ;;		On exit  : 0/0
 13111 ;;		Unchanged: 0/0
 13112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;Total ram usage:        1 bytes
 13118 ;; Hardware stack levels used: 1
 13119 ;; Hardware stack levels required when called: 2
 13120 ;; This function calls:
 13121 ;;		_LCD_Send
 13122 ;; This function is called by:
 13123 ;;		_main
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           	psect	text52
 13128   003F2C                     __ptext52:
 13129                           	callstack 0
 13130   003F2C                     _LCD_Init:
 13131                           	callstack 28
 13132   003F2C                     
 13133                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 13134   003F2C  010F               	movlb	15	; () banked
 13135   003F2E  913B               	bcf	59,0,b	;volatile
 13136                           
 13137                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 13138   003F30  933B               	bcf	59,1,b	;volatile
 13139                           
 13140                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 13141   003F32  8095               	bsf	149,0,c	;volatile
 13142                           
 13143                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 13144   003F34  8295               	bsf	149,1,c	;volatile
 13145                           
 13146                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 13147   003F36  9092               	bcf	146,0,c	;volatile
 13148                           
 13149                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 13150   003F38  8089               	bsf	137,0,c	;volatile
 13151   003F3A                     
 13152                           ; BSR set to: 15
 13153                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 13154   003F3A  506C               	movf	108,w,c	;volatile
 13155   003F3C  0BF0               	andlw	-16
 13156   003F3E  0908               	iorlw	8
 13157   003F40  6E6C               	movwf	108,c	;volatile
 13158                           
 13159                           ;lcd.c: 15:     SSP2ADD = 19;
 13160   003F42  0E13               	movlw	19
 13161   003F44  6E6E               	movwf	110,c	;volatile
 13162   003F46                     
 13163                           ; BSR set to: 15
 13164                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 13165   003F46  8A6C               	bsf	108,5,c	;volatile
 13166   003F48                     
 13167                           ; BSR set to: 15
 13168                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13169   003F48  0E34               	movlw	52
 13170   003F4A  6E07               	movwf	??_LCD_Init^0,c
 13171   003F4C  0EF2               	movlw	242
 13172   003F4E                     u9617:
 13173   003F4E  2EE8               	decfsz	wreg,f,c
 13174   003F50  D7FE               	bra	u9617
 13175   003F52  2E07               	decfsz	??_LCD_Init^0,f,c
 13176   003F54  D7FC               	bra	u9617
 13177   003F56                     
 13178                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 13179   003F56  806B               	bsf	107,0,c	;volatile
 13180   003F58                     l111:
 13181   003F58  B06B               	btfsc	107,0,c	;volatile
 13182   003F5A  EFB1  F01F         	goto	u8951
 13183   003F5E  EFB3  F01F         	goto	u8950
 13184   003F62                     u8951:
 13185   003F62  EFAC  F01F         	goto	l111
 13186   003F66                     u8950:
 13187   003F66                     
 13188                           ;lcd.c: 22:     SSP2IF = 0;
 13189   003F66  9EA4               	bcf	4004,7,c	;volatile
 13190   003F68                     
 13191                           ;lcd.c: 27:     LCD_Send(0x7C);
 13192   003F68  0E7C               	movlw	124
 13193   003F6A  EC64  F024         	call	_LCD_Send
 13194                           
 13195                           ;lcd.c: 28:     LCD_Send(0x80);
 13196   003F6E  0E80               	movlw	128
 13197   003F70  EC64  F024         	call	_LCD_Send
 13198                           
 13199                           ;lcd.c: 29:     LCD_Send(0x38);
 13200   003F74  0E38               	movlw	56
 13201   003F76  EC64  F024         	call	_LCD_Send
 13202                           
 13203                           ;lcd.c: 30:     LCD_Send(0x80);
 13204   003F7A  0E80               	movlw	128
 13205   003F7C  EC64  F024         	call	_LCD_Send
 13206                           
 13207                           ;lcd.c: 31:     LCD_Send(0x39);
 13208   003F80  0E39               	movlw	57
 13209   003F82  EC64  F024         	call	_LCD_Send
 13210                           
 13211                           ;lcd.c: 32:     LCD_Send(0x80);
 13212   003F86  0E80               	movlw	128
 13213   003F88  EC64  F024         	call	_LCD_Send
 13214                           
 13215                           ;lcd.c: 33:     LCD_Send(0x17);
 13216   003F8C  0E17               	movlw	23
 13217   003F8E  EC64  F024         	call	_LCD_Send
 13218                           
 13219                           ;lcd.c: 34:     LCD_Send(0x80);
 13220   003F92  0E80               	movlw	128
 13221   003F94  EC64  F024         	call	_LCD_Send
 13222                           
 13223                           ;lcd.c: 35:     LCD_Send(0x7A);
 13224   003F98  0E7A               	movlw	122
 13225   003F9A  EC64  F024         	call	_LCD_Send
 13226                           
 13227                           ;lcd.c: 36:     LCD_Send(0x80);
 13228   003F9E  0E80               	movlw	128
 13229   003FA0  EC64  F024         	call	_LCD_Send
 13230                           
 13231                           ;lcd.c: 37:     LCD_Send(0x5E);
 13232   003FA4  0E5E               	movlw	94
 13233   003FA6  EC64  F024         	call	_LCD_Send
 13234                           
 13235                           ;lcd.c: 38:     LCD_Send(0x80);
 13236   003FAA  0E80               	movlw	128
 13237   003FAC  EC64  F024         	call	_LCD_Send
 13238                           
 13239                           ;lcd.c: 39:     LCD_Send(0x6B);
 13240   003FB0  0E6B               	movlw	107
 13241   003FB2  EC64  F024         	call	_LCD_Send
 13242                           
 13243                           ;lcd.c: 40:     LCD_Send(0x80);
 13244   003FB6  0E80               	movlw	128
 13245   003FB8  EC64  F024         	call	_LCD_Send
 13246                           
 13247                           ;lcd.c: 41:     LCD_Send(0x0C);
 13248   003FBC  0E0C               	movlw	12
 13249   003FBE  EC64  F024         	call	_LCD_Send
 13250                           
 13251                           ;lcd.c: 42:     LCD_Send(0x80);
 13252   003FC2  0E80               	movlw	128
 13253   003FC4  EC64  F024         	call	_LCD_Send
 13254                           
 13255                           ;lcd.c: 43:     LCD_Send(0x01);
 13256   003FC8  0E01               	movlw	1
 13257   003FCA  EC64  F024         	call	_LCD_Send
 13258                           
 13259                           ;lcd.c: 44:     LCD_Send(0x80);
 13260   003FCE  0E80               	movlw	128
 13261   003FD0  EC64  F024         	call	_LCD_Send
 13262                           
 13263                           ;lcd.c: 45:     LCD_Send(0x06);
 13264   003FD4  0E06               	movlw	6
 13265   003FD6  EC64  F024         	call	_LCD_Send
 13266                           
 13267                           ;lcd.c: 46:     LCD_Send(0x80);
 13268   003FDA  0E80               	movlw	128
 13269   003FDC  EC64  F024         	call	_LCD_Send
 13270                           
 13271                           ;lcd.c: 47:     LCD_Send(0x02);
 13272   003FE0  0E02               	movlw	2
 13273   003FE2  EC64  F024         	call	_LCD_Send
 13274   003FE6                     
 13275                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 13276   003FE6  846B               	bsf	107,2,c	;volatile
 13277   003FE8                     l114:
 13278   003FE8  B46B               	btfsc	107,2,c	;volatile
 13279   003FEA  EFF9  F01F         	goto	u8961
 13280   003FEE  EFFB  F01F         	goto	u8960
 13281   003FF2                     u8961:
 13282   003FF2  EFF4  F01F         	goto	l114
 13283   003FF6                     u8960:
 13284   003FF6                     
 13285                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13286   003FF6  0E34               	movlw	52
 13287   003FF8  6E07               	movwf	??_LCD_Init^0,c
 13288   003FFA  0EF2               	movlw	242
 13289   003FFC                     u9627:
 13290   003FFC  2EE8               	decfsz	wreg,f,c
 13291   003FFE  D7FE               	bra	u9627
 13292   004000  2E07               	decfsz	??_LCD_Init^0,f,c
 13293   004002  D7FC               	bra	u9627
 13294   004004  0012               	return		;funcret
 13295   004006                     __end_of_LCD_Init:
 13296                           	callstack 0
 13297                           
 13298 ;; *************** function _LCD_Send *****************
 13299 ;; Defined at:
 13300 ;;		line 85 in file "lcd.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  data            1    wreg     unsigned char 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;  data            1    5[COMRAM] unsigned char 
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1    wreg      void 
 13307 ;; Registers used:
 13308 ;;		wreg
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/0
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;Total ram usage:        1 bytes
 13319 ;; Hardware stack levels used: 1
 13320 ;; Hardware stack levels required when called: 1
 13321 ;; This function calls:
 13322 ;;		Nothing
 13323 ;; This function is called by:
 13324 ;;		_LCD_Init
 13325 ;;		_LCD_ShowString
 13326 ;;		_LCD_Clear
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text53
 13331   0048C8                     __ptext53:
 13332                           	callstack 0
 13333   0048C8                     _LCD_Send:
 13334                           	callstack 27
 13335                           
 13336                           ;incstack = 0
 13337                           ;LCD_Send@data stored from wreg
 13338   0048C8  6E06               	movwf	LCD_Send@data^0,c
 13339   0048CA                     
 13340                           ;lcd.c: 87:     SSP2BUF = data;
 13341   0048CA  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 13342   0048CE                     l134:
 13343   0048CE  B06D               	btfsc	109,0,c	;volatile
 13344   0048D0  EF6C  F024         	goto	u8571
 13345   0048D4  EF6E  F024         	goto	u8570
 13346   0048D8                     u8571:
 13347   0048D8  EF67  F024         	goto	l134
 13348   0048DC                     u8570:
 13349   0048DC                     l137:
 13350   0048DC  AEA4               	btfss	4004,7,c	;volatile
 13351   0048DE  EF73  F024         	goto	u8581
 13352   0048E2  EF75  F024         	goto	u8580
 13353   0048E6                     u8581:
 13354   0048E6  EF6E  F024         	goto	l137
 13355   0048EA                     u8580:
 13356   0048EA                     
 13357                           ;lcd.c: 90:     SSP2IF = 0;
 13358   0048EA  9EA4               	bcf	4004,7,c	;volatile
 13359   0048EC  0012               	return		;funcret
 13360   0048EE                     __end_of_LCD_Send:
 13361                           	callstack 0
 13362                           
 13363 ;; *************** function _ISR *****************
 13364 ;; Defined at:
 13365 ;;		line 11 in file "interrupt.c"
 13366 ;; Parameters:    Size  Location     Type
 13367 ;;		None
 13368 ;; Auto vars:     Size  Location     Type
 13369 ;;  temp            1    4[COMRAM] unsigned char 
 13370 ;; Return value:  Size  Location     Type
 13371 ;;                  1    wreg      void 
 13372 ;; Registers used:
 13373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13381 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13382 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13383 ;;Total ram usage:        5 bytes
 13384 ;; Hardware stack levels used: 1
 13385 ;; This function calls:
 13386 ;;		Nothing
 13387 ;; This function is called by:
 13388 ;;		Interrupt level 2
 13389 ;; This function uses a non-reentrant model
 13390 ;;
 13391                           
 13392                           	psect	intcode
 13393   000008                     __pintcode:
 13394                           	callstack 0
 13395   000008                     _ISR:
 13396                           	callstack 21
 13397                           
 13398                           ;incstack = 0
 13399   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13400   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 13401   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 13402   000012                     
 13403                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 13404   000012  A09D               	btfss	3997,0,c	;volatile
 13405   000014  EF0E  F000         	goto	i2u631_41
 13406   000018  EF10  F000         	goto	i2u631_40
 13407   00001C                     i2u631_41:
 13408   00001C  EF49  F000         	goto	i2l5488
 13409   000020                     i2u631_40:
 13410   000020  A09E               	btfss	3998,0,c	;volatile
 13411   000022  EF15  F000         	goto	i2u632_41
 13412   000026  EF17  F000         	goto	i2u632_40
 13413   00002A                     i2u632_41:
 13414   00002A  EF49  F000         	goto	i2l5488
 13415   00002E                     i2u632_40:
 13416   00002E  0101               	movlb	1	; () banked
 13417   000030  5124               	movf	_GPIOIE& (0+255),w,b
 13418   000032  B4D8               	btfsc	status,2,c
 13419   000034  EF1E  F000         	goto	i2u633_41
 13420   000038  EF20  F000         	goto	i2u633_40
 13421   00003C                     i2u633_41:
 13422   00003C  EF49  F000         	goto	i2l5488
 13423   000040                     i2u633_40:
 13424   000040                     
 13425                           ; BSR set to: 1
 13426                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 13427   000040  A480               	btfss	128,2,c	;volatile
 13428   000042  EF25  F000         	goto	i2u634_41
 13429   000046  EF27  F000         	goto	i2u634_40
 13430   00004A                     i2u634_41:
 13431   00004A  EF44  F000         	goto	i2l380
 13432   00004E                     i2u634_40:
 13433   00004E                     
 13434                           ; BSR set to: 1
 13435                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 13436   00004E  0E03               	movlw	3
 13437   000050  6E02               	movwf	(??_ISR+1)^0,c
 13438   000052  0E08               	movlw	8
 13439   000054  6E01               	movwf	??_ISR^0,c
 13440   000056  0E77               	movlw	119
 13441   000058                     i2u963_47:
 13442   000058  2EE8               	decfsz	wreg,f,c
 13443   00005A  D7FE               	bra	i2u963_47
 13444   00005C  2E01               	decfsz	??_ISR^0,f,c
 13445   00005E  D7FC               	bra	i2u963_47
 13446   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 13447   000062  D7FA               	bra	i2u963_47
 13448   000064  0000               	nop	
 13449   000066                     
 13450                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 13451   000066  A480               	btfss	128,2,c	;volatile
 13452   000068  EF38  F000         	goto	i2u635_41
 13453   00006C  EF3A  F000         	goto	i2u635_40
 13454   000070                     i2u635_41:
 13455   000070  EF44  F000         	goto	i2l380
 13456   000074                     i2u635_40:
 13457   000074                     i2l382:
 13458   000074  B480               	btfsc	128,2,c	;volatile
 13459   000076  EF3F  F000         	goto	i2u636_41
 13460   00007A  EF41  F000         	goto	i2u636_40
 13461   00007E                     i2u636_41:
 13462   00007E  EF3A  F000         	goto	i2l382
 13463   000082                     i2u636_40:
 13464   000082                     
 13465                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 13466   000082  0E00               	movlw	0
 13467   000084  0100               	movlb	0	; () banked
 13468   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 13469   000088                     i2l380:
 13470                           
 13471                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 13472   000088  0E9E               	movlw	158
 13473   00008A  6ECF               	movwf	207,c	;volatile
 13474   00008C  0E58               	movlw	88
 13475   00008E  6ECE               	movwf	206,c	;volatile
 13476   000090                     
 13477                           ;interrupt.c: 23:         TMR1IF = 0;
 13478   000090  909E               	bcf	3998,0,c	;volatile
 13479   000092                     i2l5488:
 13480                           
 13481                           ;interrupt.c: 26:     if(RC1IE && RC1IF && UARTIE){
 13482   000092  AA9D               	btfss	3997,5,c	;volatile
 13483   000094  EF4E  F000         	goto	i2u637_41
 13484   000098  EF50  F000         	goto	i2u637_40
 13485   00009C                     i2u637_41:
 13486   00009C  EF84  F000         	goto	i2l390
 13487   0000A0                     i2u637_40:
 13488   0000A0  AA9E               	btfss	3998,5,c	;volatile
 13489   0000A2  EF55  F000         	goto	i2u638_41
 13490   0000A6  EF57  F000         	goto	i2u638_40
 13491   0000AA                     i2u638_41:
 13492   0000AA  EF84  F000         	goto	i2l390
 13493   0000AE                     i2u638_40:
 13494   0000AE  0101               	movlb	1	; () banked
 13495   0000B0  5123               	movf	_UARTIE& (0+255),w,b
 13496   0000B2  B4D8               	btfsc	status,2,c
 13497   0000B4  EF5E  F000         	goto	i2u639_41
 13498   0000B8  EF60  F000         	goto	i2u639_40
 13499   0000BC                     i2u639_41:
 13500   0000BC  EF84  F000         	goto	i2l390
 13501   0000C0                     i2u639_40:
 13502   0000C0                     
 13503                           ; BSR set to: 1
 13504                           ;interrupt.c: 27:         char temp = RCREG1;
 13505   0000C0  CFAE F005          	movff	4014,ISR@temp	;volatile
 13506   0000C4                     
 13507                           ; BSR set to: 1
 13508                           ;interrupt.c: 28:         static int i = 0;;interrupt.c: 30:         if(temp != '\n'){
 13509   0000C4  0E0A               	movlw	10
 13510   0000C6  1805               	xorwf	ISR@temp^0,w,c
 13511   0000C8  B4D8               	btfsc	status,2,c
 13512   0000CA  EF69  F000         	goto	i2u640_41
 13513   0000CE  EF6B  F000         	goto	i2u640_40
 13514   0000D2                     i2u640_41:
 13515   0000D2  EF77  F000         	goto	i2l5502
 13516   0000D6                     i2u640_40:
 13517   0000D6                     
 13518                           ; BSR set to: 1
 13519                           ;interrupt.c: 31:             gmail.data[i] = temp;
 13520   0000D6  0E75               	movlw	low _gmail
 13521   0000D8  2521               	addwf	ISR@i& (0+255),w,b
 13522   0000DA  6ED9               	movwf	fsr2l,c
 13523   0000DC  0E01               	movlw	high _gmail
 13524   0000DE  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13525   0000E0  6EDA               	movwf	fsr2h,c
 13526   0000E2  C005  FFDF         	movff	ISR@temp,indf2
 13527   0000E6                     
 13528                           ; BSR set to: 1
 13529                           ;interrupt.c: 32:             i++;
 13530   0000E6  4B21               	infsnz	ISR@i& (0+255),f,b
 13531   0000E8  2B22               	incf	(ISR@i+1)& (0+255),f,b
 13532                           
 13533                           ;interrupt.c: 33:         } else {
 13534   0000EA  EF84  F000         	goto	i2l390
 13535   0000EE                     i2l5502:
 13536                           
 13537                           ; BSR set to: 1
 13538                           ;interrupt.c: 34:             gmail.full = 1;
 13539   0000EE  0E01               	movlw	1
 13540   0000F0  6F94               	movwf	(_gmail+31)& (0+255),b	;volatile
 13541   0000F2                     
 13542                           ; BSR set to: 1
 13543                           ;interrupt.c: 35:             gmail.data[i] = '\0';
 13544   0000F2  0E75               	movlw	low _gmail
 13545   0000F4  2521               	addwf	ISR@i& (0+255),w,b
 13546   0000F6  6ED9               	movwf	fsr2l,c
 13547   0000F8  0E01               	movlw	high _gmail
 13548   0000FA  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13549   0000FC  6EDA               	movwf	fsr2h,c
 13550   0000FE  6ADF               	clrf	indf2,c
 13551   000100                     
 13552                           ; BSR set to: 1
 13553                           ;interrupt.c: 36:             i = 0;
 13554   000100  0E00               	movlw	0
 13555   000102  6F22               	movwf	(ISR@i+1)& (0+255),b
 13556   000104  0E00               	movlw	0
 13557   000106  6F21               	movwf	ISR@i& (0+255),b
 13558   000108                     i2l390:
 13559   000108  C004  FFDA         	movff	??_ISR+3,fsr2h
 13560   00010C  C003  FFD9         	movff	??_ISR+2,fsr2l
 13561   000110  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13562   000112  0011               	retfie		f
 13563   000114                     __end_of_ISR:
 13564                           	callstack 0
 13565                           
 13566                           	psect	rparam
 13567   000000                     
 13568                           	psect	temp
 13569   00005A                     btemp:
 13570                           	callstack 0
 13571   00005A                     	ds	1
 13572   000000                     int$flags	set	btemp
 13573   000000                     wtemp8	set	btemp+1
 13574   000000                     ttemp5	set	btemp+1
 13575   000000                     ttemp6	set	btemp+4
 13576   000000                     ttemp7	set	btemp+8
 13577                           
 13578                           	psect	config
 13579                           
 13580                           ; Padding undefined space
 13581   300000                     	org	3145728
 13582   300000  FF                 	db	255
 13583                           
 13584                           ;Config register CONFIG1H @ 0x300001
 13585                           ;	Oscillator Selection bits
 13586                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13587                           ;	4X PLL Enable
 13588                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13589                           ;	Primary clock enable bit
 13590                           ;	PRICLKEN = 0x1, unprogrammed default
 13591                           ;	Fail-Safe Clock Monitor Enable bit
 13592                           ;	FCMEN = 0x0, unprogrammed default
 13593                           ;	Internal/External Oscillator Switchover bit
 13594                           ;	IESO = 0x0, unprogrammed default
 13595   300001                     	org	3145729
 13596   300001  33                 	db	51
 13597                           
 13598                           ;Config register CONFIG2L @ 0x300002
 13599                           ;	unspecified, using default values
 13600                           ;	Power-up Timer Enable bit
 13601                           ;	PWRTEN = 0x1, unprogrammed default
 13602                           ;	Brown-out Reset Enable bits
 13603                           ;	BOREN = 0x3, unprogrammed default
 13604                           ;	Brown Out Reset Voltage bits
 13605                           ;	BORV = 0x3, unprogrammed default
 13606   300002                     	org	3145730
 13607   300002  1F                 	db	31
 13608                           
 13609                           ;Config register CONFIG2H @ 0x300003
 13610                           ;	Watchdog Timer Enable bits
 13611                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13612                           ;	Watchdog Timer Postscale Select bits
 13613                           ;	WDTPS = 0xF, unprogrammed default
 13614   300003                     	org	3145731
 13615   300003  3C                 	db	60
 13616                           tosu	equ	0xFFF
 13617                           tosh	equ	0xFFE
 13618                           tosl	equ	0xFFD
 13619                           stkptr	equ	0xFFC
 13620                           pclatu	equ	0xFFB
 13621                           pclath	equ	0xFFA
 13622                           pcl	equ	0xFF9
 13623                           tblptru	equ	0xFF8
 13624                           tblptrh	equ	0xFF7
 13625                           tblptrl	equ	0xFF6
 13626                           tablat	equ	0xFF5
 13627                           prodh	equ	0xFF4
 13628                           prodl	equ	0xFF3
 13629                           indf0	equ	0xFEF
 13630                           postinc0	equ	0xFEE
 13631                           postdec0	equ	0xFED
 13632                           preinc0	equ	0xFEC
 13633                           plusw0	equ	0xFEB
 13634                           fsr0h	equ	0xFEA
 13635                           fsr0l	equ	0xFE9
 13636                           wreg	equ	0xFE8
 13637                           indf1	equ	0xFE7
 13638                           postinc1	equ	0xFE6
 13639                           postdec1	equ	0xFE5
 13640                           preinc1	equ	0xFE4
 13641                           plusw1	equ	0xFE3
 13642                           fsr1h	equ	0xFE2
 13643                           fsr1l	equ	0xFE1
 13644                           bsr	equ	0xFE0
 13645                           indf2	equ	0xFDF
 13646                           postinc2	equ	0xFDE
 13647                           postdec2	equ	0xFDD
 13648                           preinc2	equ	0xFDC
 13649                           plusw2	equ	0xFDB
 13650                           fsr2h	equ	0xFDA
 13651                           fsr2l	equ	0xFD9
 13652                           status	equ	0xFD8

Data Sizes:
    Strings     219
    Constant    64
    Data        40
    BSS         155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), STR_1(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4119	PTR unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    moveDisplay@F6961	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_10(CODE[5]), STR_22(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6973	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3536$buffer	PTR unsigned char  size(2) Largest target is 0

    S3536$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_11(CODE[5]), 
		 -> STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), STR_15(CODE[4]), 
		 -> STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), STR_29(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_11(CODE[5]), 
		 -> STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), STR_15(CODE[4]), 
		 -> STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), STR_26(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  333188
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGPIO
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   56195
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             13 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              6 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  145438
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   55533
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   70319
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   58232
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   56118
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   55248
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   54448
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   40798
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7043
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4693
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1306
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRhhhhhh      D      0       0      36        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E8      54        0.0%
DATA                 0      0     1E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 12:24:08 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FF0F                          _C1 FF0B                          _C2 FF07  
                        _C3 FF03                          l50 27F0                          l60 2894  
                        l55 2842                          l58 2992                          _S1 FEEF  
                        _S2 FEEB                          _S3 FEE7                          _S4 FEE3  
              ___awdiv@sign 000B         ___wmul@multiplicand 0008                         l111 3F58  
                       l120 4198                         l113 3F66                         l114 3FE8  
                       l122 41A6                         l131 4244                         l140 48EC  
                       l124 41E6                         l117 4004                         l134 48CE  
                       l143 47DE                         l127 4234                         l231 471A  
                       l215 26C4                         l128 4236                         l232 4720  
                       l137 48DC                         l145 47EC                         l146 4802  
                       l250 4910                         l234 472E                         l226 2760  
                       l218 26C6                         l322 4968                         l139 48EA  
                       l235 4732                         l331 493E                         l149 4810  
                       l253 4922                         l229 470C                         l325 495A  
                       l430 2EE2                         l334 4930                         l350 39C8  
                       l328 494C                         l344 39A0                         l425 3004  
                       l337 4976                         l435 2FF0                         l427 2E42  
                       l349 39B2                         l438 3016                         l534 3834  
                       l551 48C6                         l279 3C20                         l439 3018  
                       l480 39F8                         l544 3820                         l536 37EC  
                       l481 3AF6                         l810 444C                         l547 3846  
                       l484 3AB0                         l548 3858                         l821 3E2C  
                       l493 3AE4                         l485 3A72                         l478 39EA  
                       l816 3DE6                         l825 476C                         l497 3B0E  
                       l782 4192                         l848 3D28                         l795 42F4  
                       _GIE 7F97                         _PR2 0FBB                         _ISR 0008  
                       _abs 4846                         _pad 444E                ___awmod@sign 000B  
                       prod 0FF3                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0021                ___flmul@bexp 0026  
              ___flmul@sign 0020                ___flmul@temp 002B                ___flmul@prod 0027  
                      ?_ISR 0001                        ISR@i 0121                ___fltol@exp1 0053  
                      l1105 13F6                        l1121 466A                        l1106 13E4  
                      ?_abs 000C                        l1220 3362                        l1133 2478  
                      l1213 3306                        l1206 326E                        l1135 22D8  
                      l1144 231E                        l1080 11FA                        l1081 11C0  
                      l1209 33CA                        l1146 2396                        l1138 229C  
                      l1147 2384                        l1172 1798                        l1404 45DA  
                      l1165 15A2                        l1229 46B0                        l1422 4878  
                      l1262 44C8                        l1270 35A0                        l1182 18C8  
                      l1174 1810                        l1414 3F2A                        l1326 08F4  
                      l1342 3470                        l1271 35E6                        l1175 17FE  
                      l1079 120C                        l1431 2D4A                        l1264 44EA  
                      l1096 1326                        l1088 14DC                        l1169 1906  
                      l1282 36E4                        l1442 4540                        l1362 43A2  
                      l1354 3568                        l1419 4860                        l1259 4486  
                      l1460 40CE                        l1268 3598                        l1428 2E06  
                      l1293 0B10                        l1349 3520                        l1358 439A  
                      l1448 4590                        l1296 04AA                        l1528 3216  
                      l1544 1F40                        l1545 20DE                        l1298 02F0  
                      l1378 1D1C                        l1562 4844                        l1475 490C  
                      l1468 46F4                        l1557 2BF0                        l1494 101A  
                      l1574 47DA                        l6000 18EA                        l1568 47A4  
                      l6002 18EC                        l6010 4624                        l6020 40E2  
                      l6100 43E2                        l6004 18F2                        l6012 4636  
                      l6030 4108                        l6022 40EA                        l6102 4410  
                      l6006 18F6                        l6040 4140                        l6032 4110  
                      l6024 40EE                        l6016 40D0                        l6200 44D6  
                      l6104 4420                        l6120 3DA6                        l6112 3D2A  
                      l7000 4934                        l6050 416C                        l6042 4146  
                      l6034 4122                        l6026 40FC                        l6018 40D4  
                      l6202 4846                        l6106 4444                        l6130 3E2A  
                      l6122 3DB4                        l6114 3D58                        l6210 3E8C  
                      l7002 4926                        l7010 47B6                        l7020 3F46  
                      l6044 415C                        l6036 412A                        l6052 4172  
                      l6028 4104                        l6060 4246                        l6204 4854  
                      l6300 35FE                        l6108 444A                        l6124 3DC6  
                      l6116 3D68                        l6220 3EDE                        l6212 3EB4  
                      l7004 496C                        l7012 47CE                        l7100 36F2  
                      l7030 3FF6                        l7022 3F48                        l6054 4182  
                      l6046 4164                        l6038 4132                        l6070 4272  
                      l6062 424A                        l5510 491E                        l6310 3672  
                      l6302 3630                        l6126 3DD4                        l6118 3D96  
                      l6134 4734                        l6150 3C78                        l6142 3C22  
                      l6214 3EC0                        l6206 3E2E                        l6230 4776  
                      l7006 47A6                        l7110 3704                        l7102 36F6  
                      ?_pad 0017                        l7024 3F56                        l7016 3F2C  
                      l6056 418A                        l6048 4166                        l6080 42AA  
                      l6072 427A                        l6064 4258                        l5520 4052  
                      l5512 4006                        l6320 36C4                        l6312 3684  
                      l6304 3636                        l6128 3E24                        l6136 474C  
                      l5600 1156                        l6152 3C7A                        l6144 3C3A  
                      l6224 3F22                        l6208 3E4E                        l6240 2BF2  
                      l6232 44EC                        l6400 03E8                        l7040 3B46  
                      l7032 3B14                        l7200 3AF2                        l7008 47B2  
                      l7120 373A                        l7112 3706                        l7104 36F8  
                      l7026 3F68                        l7018 3F3A                        l6090 42E4  
                      l6082 42C0                        l6074 428C                        l6066 4260  
                      l5522 4088                        l5514 4018                        l6314 369E  
                      l6306 363C                        l6138 475C                        l5610 11A8  
                      l5602 115A                        l5530 1038                        l6154 3C8A  
                      l6218 3ECC                        l6242 2C12                        l6234 44FA  
                      l6402 03FC                        l6410 0478                        l6330 013C  
                      l7050 3C00                        l7042 3B58                        l7034 3B18  
                      l7210 2E08                        l7202 3B06                        l7130 379C  
                      l7122 3748                        l7114 3708                        l7106 36FA  
                      l7028 3FE6                        l6092 42EC                        l6084 42C8  
                      l6076 4294                        l6068 4264                        l5508 4910  
                      l5516 402A                        l6316 36AE                        l6308 3658  
                      l5700 1420                        l5620 11EC                        l5612 11B8  
                      l5604 115E                        l5540 106C                        l5532 103A  
                      l6180 3D08                        l6164 3CB4                        l6156 3C8E  
                      l6148 3C4E                        l6260 2DBE                        l6252 2CFE  
                      l6244 2C6A                        l6236 450E                        l6228 476E  
                      l6500 0946                        l6420 04DE                        l6412 04B2  
                      l6404 0430                        l6340 0186                        l6332 0140  
                      l6324 0118                        l7052 3C0E                        l7036 3B2E  
                      l7220 2E38                        l7212 2E10                        l7300 26F6  
                      l7060 3884                        l7204 3B0A                        l7140 37BE  
                      l7132 37AE                        l7124 3770                        l7116 3714  
                      l7108 36FC                        l6086 42CE                        l6078 429C  
                      l5518 4034                        l6190 4470                        l6318 36B4  
                      l5710 149C                        l5702 145A                        l5622 11EE  
                      l5614 11CE                        l5606 1162                        l5550 109E  
                      l5534 104A                        l5542 1074                        l5526 101C  
                      l6182 3D18                        l6174 3CDC                        l6166 3CBE  
                      l6158 3C9C                        l6262 2DE6                        l6254 2D3A  
                      l6246 2C7E                        l6270 4556                        l6510 097A  
                      l6502 094A                        l6430 052E                        l6422 04E4  
                      l6414 04C0                        l6406 0438                        l6350 01D4  
                      l6342 0196                        l6334 0164                        l6326 011E  
                      l7054 3C1C                        l7038 3B40                        l7046 3B5E  
                      l7230 2EE0                        l7222 2E40                        l7214 2E20  
                      l7310 2724                        l7302 26FC                        l7070 38A2  
                      l7062 388C                        l7206 3B0C                        l7142 37CC  
                      l7134 37B4                        l7126 3774                        l7118 3726  
                      l6088 42D4                        l6192 447E                        l6280 356A  
                      l5800 2216                        l6096 43A4                        l5720 14BC  
                      l5712 14A0                        l5704 145C                        l5640 1276  
                      l5632 123E                        l5624 11F8                        l5616 11DA  
                      l5608 118C                        l5560 10D4                        l5552 10A4  
                      l5544 1084                        l5536 105A                        l5528 102A  
                      l6176 3CE8                        l6168 3CC8                        l6264 2DF6  
                      l6248 2C8C                        l6256 2D6E                        l6272 4562  
                      l6520 0A18                        l6512 097E                        l6504 0950  
                      l6440 05C6                        l6424 04F6                        l6432 0536  
                      l6416 04CC                        l6360 0210                        l6352 01E6  
                      l6344 01A2                        l6336 016E                        l6328 012E  
                      l7048 3B7E                        l6600 322A                        l7240 2FBC  
                      l7232 2EF0                        l7224 2E50                        l7216 2E22  
                      l7312 2732                        l7304 270A                        l7072 38AE  
                      l7064 388E                        l7160 3856                        l7152 382E  
                      l7144 37D0                        l7128 3792                        l7400 28D0  
                      l7320 2762                        l5730 46BE                        l6194 4492  
                      l6186 444E                        l6290 35CE                        l6282 358C  
                      l5810 2268                        l5802 2230                        l6098 43D2  
                      l5722 14CA                        l5714 14AE                        l5706 146C  
                      l5642 127A                        l5634 124E                        l5626 121A  
                      l5650 129A                        l5618 11DE                        l5570 1110  
                      l5562 10E4                        l5554 10B2                        l5546 108A  
                      l5538 106A                        l6178 3CF8                        l6258 2DAA  
                      l6274 4566                        l6530 0A6C                        l6514 0984  
                      l6506 0956                        l6522 0A1C                        l6450 06AA  
                      l6442 061E                        l6434 053E                        l6426 0504  
                      l6418 04D6                        l6370 0272                        l6362 021A  
                      l6354 01EA                        l6346 01AA                        l6338 0176  
                      l6610 32A8                        l6602 3238                        l7242 2FCA  
                      l7234 2F0E                        l7226 2E6E                        l7218 2E2E  
                      l7314 2738                        l7306 2710                        l7250 247A  
                      l7090 397C                        l7082 38EA                        l7074 38C0  
                      l7066 3890                        l7058 385A                        l7170 39E8  
                      l7154 384C                        l7146 37FA                        l7402 28EC  
                      l7330 2782                        l7322 277A                        l5732 46D0  
                      l6196 44A6                        l6188 445C                        l6292 35DA  
                      l6284 35A8                        l5820 22C4                        l5812 2278  
                      l5804 2240                        l5900 154C                        l5724 14CC  
                      l5716 14B4                        l5708 147C                        l5652 12C0  
                      l5660 1316                        l5644 1288                        l5636 125C  
                      l5628 122A                        l5580 112E                        l5572 111E  
                      l5564 10E6                        l5556 10B4                        l5548 109C  
                      l6276 4572                        l6268 4542                        l6540 0AE8  
                      l6532 0A9C                        l6524 0A3A                        l6516 09DC  
                      l6508 0968                        l6460 0744                        l6452 06DC  
                      l6444 0652                        l6436 054E                        l6428 051C  
                      l6372 0276                        l6356 01F0                        l6348 01AE  
                      l6700 1AD4                        l6620 32FC                        l6612 32B0  
                      l6604 327E                        l7244 2FE2                        l7236 2F78  
                      l7228 2ED8                        l7316 273C                        l7308 271E  
                      l7260 249C                        l7252 248E                        l7092 399C  
                      l7084 3944                        l7076 38E2                        l7068 3898  
                      l7180 3A64                        l7172 3A16                        l7164 39CA  
                      l7156 3852                        l7148 3812                        l7420 294A  
                      l7412 2918                        l7340 278E                        l7332 2786  
                      l7324 277C                        l5734 46D4                        l6198 44AA  
                      l6294 35E2                        l6286 35B8                        l5830 2304  
                      l5822 22C6                        l5814 228C                        l5806 2250  
                      l5750 210C                        l5742 20E0                        l5910 158C  
                      l5902 155A                        l5718 14B6                        l5670 136A  
                      l5662 133C                        l5654 12F4                        l5646 128A  
                      l5638 126A                        l5590 1142                        l5582 1132  
                      l5574 1122                        l5558 10C4                        l5566 10EE  
                      l6278 4576                        l6542 0AF0                        l6534 0AAA  
                      l6526 0A56                        l6518 0A10                        l6470 081C  
                      l6462 0778                        l6454 06F2                        l6438 0562  
                      l6446 0658                        l6390 0300                        l6374 027C  
                      l6358 01F8                        l6366 023A                        l6550 33EE  
                      l6702 1AF6                        l6710 1B6C                        l6630 3372  
                      l6622 3338                        l6614 32BC                        l6606 3294  
                      l7238 2FAE                        l7318 274E                        l7270 24BA  
                      l7262 249E                        l7254 2496                        l7094 39C2  
                      l7086 3948                        l7190 3AAA                        l7174 3A22  
                      l7166 39CC                        l7158 3854                        l7430 29A6  
                      l7414 2926                        l7406 28F4                        l7350 2798  
                      l7342 2790                        l7334 2788                        l7326 277E  
                      l5728 46B2                        l6296 35EE                        l6288 35BE  
                      l5840 2340                        l5832 230E                        l5824 22D6  
                      l5816 229A                        l5808 2260                        l5760 2146  
                      l5752 211C                        l5744 20EC                        l5920 15D6  
                      l5912 1592                        l5904 155C                        l5680 1394  
                      l5672 1378                        l5664 134C                        l5656 12F6  
                      l5648 1294                        l5592 1146                        l5584 1136  
                      l5576 1126                        l5568 10FE                        l6536 0AC2  
                      l6528 0A5E                        l6480 0846                        l6464 07CE  
                      l6472 0820                        l6456 0724                        l6448 0676  
                      l6392 0306                        l6376 0284                        l6368 0260  
                      l6384 02A0                        l5736 48A2                        l6560 3468  
                      l6552 33FA                        l6720 1BC4                        l6712 1B7C  
                      l6704 1B28                        l6640 33BA                        l6632 3376  
                      l6624 3344                        l6616 32EE                        l7248 2FFE  
                      l6800 1E04                        l7280 253A                        l7272 24BC  
                      l7264 24B0                        l7256 2498                        l7088 3964  
                      l7184 3A80                        l7192 3AB0                        l7176 3A3E  
                      l7168 39E6                        l7432 29B4                        l7408 2910  
                      l7360 27A4                        l7352 279A                        l7344 2792  
                      l7336 278A                        l7328 2780                        l6298 35F8  
                      l5850 23B2                        l5842 234E                        l5834 231C  
                      l5826 22E8                        l5818 22A6                        l5770 2172  
                      l5762 214C                        l5754 212C                        l5746 20FA  
                      l5930 1626                        l5922 15E2                        l5914 15B2  
                      l5906 156C                        l5690 13C6                        l5682 13A4  
                      l5674 137A                        l5658 1306                        l5594 114A  
                      l5586 113A                        l5578 112A                        l6538 0AD2  
                      l6490 0914                        l6482 0852                        l6474 0830  
                      l6466 07D4                        l6458 0734                        l6394 033A  
                      l6386 02BA                        l5738 48BE                        l6570 34CC  
                      l6554 33FE                        l6546 33CC                        l6722 1BCC  
                      l6730 1BFA                        l6706 1B5A                        l6650 1944  
                      l6634 339A                        l6626 3352                        l6618 32F0  
                      l6810 1F24                        l6802 1E2A                        l7290 269A  
                      l7282 254C                        l7274 24BE                        l7266 24B6  
                      l7258 249A                        l7194 3ABE                        l7186 3A92  
                      l7178 3A4C                        l7098 36E6                        l7418 292E  
                      l7426 2952                        l7370 27E2                        l7362 27AA  
                      l7354 279C                        l7346 2794                        l7338 278C  
                      l5860 241E                        l5852 23C0                        l5844 237C  
                      l5828 22FE                        l5836 232E                        l5780 21AC  
                      l5772 2182                        l5764 2152                        l5756 212E  
                      l5748 20FC                        l5940 1668                        l5932 1632  
                      l5924 15EC                        l5916 15C2                        l5908 157C  
                      l5692 13DC                        l5676 1388                        l5668 1360  
                      l5684 13A6                        l5596 114E                        l5588 113E  
                      l6492 0924                        l6484 08CC                        l6476 0838  
                      l6468 0808                        l6396 0378                        l6580 3546  
                      l6572 3502                        l6564 3492                        l6556 343C  
                      l6548 33E6                        l6740 1C80                        l6732 1C1A  
                      l6724 1BD4                        l6716 1BA4                        l6652 1948  
                      l6644 1908                        l6636 33AA                        l6628 3370  
                      l6820 2002                        l6804 1E82                        l7284 25A6  
                      l7276 24DA                        l7268 24B8                        l7196 3AD6  
                      l7188 3A9A                        l7428 2994                        l7380 2834  
                      l7364 27AE                        l7356 279E                        l7348 2796  
                      l5870 246C                        l5862 2438                        l5854 23EA  
                      l5838 233C                        l5782 21C2                        l5774 2192  
                      l5766 2160                        l5758 2136                        l5950 16CA  
                      l5942 1674                        l5934 163E                        l5926 1602  
                      l5678 1390                        l5686 13B4                        l5598 1152  
                      l6494 0928                        l6486 08EC                        l6478 083E  
                      l6398 03AA                        l6590 432C                        l6582 354A  
                      l6566 34A6                        l6574 3506                        l6558 344A  
                      l6742 1C9E                        l6734 1C42                        l6750 1CE4  
                      l6718 1BB2                        l6670 19BA                        l6662 196A  
                      l6654 1950                        l6646 192C                        l6638 33B8  
                      l6822 205A                        l6806 1EE2                        l6814 1F4C  
                      l6910 0CD2                        l6902 0C66                        l7294 26A6  
                      l7286 260E                        l7278 24EA                        l7390 2886  
                      l7374 27FE                        l7366 27BC                        l7358 27A0  
                      l6840 41B4                        l5872 246E                        l5864 2454  
                      l5848 23A6                        l5856 23EE                        l5784 21D2  
                      l5792 21F2                        l5776 2194                        l5768 2162  
                      l5960 1760                        l5952 16D6                        l5944 1684  
                      l5936 164C                        l5928 160E                        l5880 14DE  
                      l5696 1406                        l5688 13B8                        l6496 092E  
                      l6488 0906                        l6592 4348                        l6584 42F6  
                      l6568 34AA                        l6728 1BDC                        l6680 1A18  
                      l6672 19C4                        l6656 1952                        l6664 1988  
                      l6648 1938                        l6760 4812                        l6824 20B2  
                      l6816 1F70                        l6808 1EF2                        l6920 0DAC  
                      l6912 0D1E                        l6904 0C9A                        l7296 26D4  
                      l7288 2632                        l7384 2850                        l7368 27CA  
                      l7376 280E                        l6842 41C4                        l6834 4196  
                      l5866 2458                        l5858 2408                        l5794 2202  
                      l5786 21DA                        l5778 219C                        l5970 17B6  
                      l5962 177E                        l5954 16F2                        l5946 169E  
                      l5938 1658                        l5890 151A                        l5882 14EA  
                      l5698 1412                        l6498 0936                        l6594 4368  
                      l6586 42FE                        l6578 3532                        l6738 1C6A  
                      l6682 1A34                        l6674 19E8                        l6666 1998  
                      l6658 1962                        l6754 1CF6                        l6770 4592  
                      l6762 4832                        l6826 20CA                        l6818 1FDC  
                      l6922 0DCA                        l6914 0D66                        l7298 26E8  
                      l7394 28A6                        l7378 281C                        l7386 2860  
                      l6860 47DC                        l6844 41CE                        l6836 4196  
                      l5868 2466                        l5796 2202                        l5788 21DE  
                      l5980 1820                        l5972 17BA                        l5964 1788  
                      l5956 171C                        l5948 16AE                        l5892 152A  
                      l5884 14F8                        l6588 4320                        l6596 4374  
                      l6748 1CCC                        l6692 1A9A                        l6684 1A50  
                      l6676 19F4                        l6668 19AC                        l6772 459E  
                      l6764 4834                        l6780 29C0                        l6940 0E5A  
                      l6924 0DDA                        l6932 0E12                        l6908 0CC2  
                      l7396 28C2                        l7388 286E                        l6862 47EE  
                      l6854 41F0                        l6846 41E0                        l6838 41A8  
                      l5990 1882                        l5982 182C                        l5974 17C8  
                      l5966 1796                        l5958 1752                        l5894 1530  
                      l5886 14FA                        l6694 1A9E                        l6686 1A68  
                      l6678 1A08                        l6774 45B4                        l6598 321A  
                      l6870 4708                        l6790 1D3E                        l6950 0F04  
                      l6942 0E92                        l6918 0D8E                        l7398 28C6  
                      l6768 48CA                        l6864 4800                        l6856 4222  
                      l6848 41EC                        l5992 1896                        l5984 183A  
                      l5976 17F6                        l5968 17A8                        l5896 1540  
                      l5888 150A                        l6696 1AC0                        l6688 1A82  
                      l6776 45D0                        l6784 301A                        l6792 1D54  
                      l6960 0F70                        l6952 0F14                        l6944 0EC6  
                      l6880 0B58                        l6872 0B12                        l6858 4224  
                      l5994 18B0                        l5986 1864                        l5898 1546  
                      l6698 1ACC                        l6866 46F8                        l6794 1D56  
                      l6938 0E4A                        l6890 0BC8                        l6882 0B6E  
                      l6874 0B22                        l5996 18CC                        l5988 1868  
                      l6868 4706                        l6796 1D74                        l6788 1D1E  
                      l6964 0F98                        l6956 0F28                        l6948 0EEE  
                      l6892 0BE6                        l6884 0B82                        l6876 0B38  
                      l5998 18DC                        l6990 46A0                        l6982 466C  
                      l6798 1D98                        l6958 0F4C                        l6974 0FFC  
                      l6894 0BF6                        l6878 0B3A                        l6984 467A  
                      l6976 48EE                        l6968 0FC0                        l6896 0C2A  
                      l6888 0BAA                        l6986 4682                        l6978 48F2  
                      l6994 495E                        l6988 468A                        l6996 4950  
                      l6998 4942                        STR_1 FF58                        STR_2 FF36  
                      STR_3 FF47                        STR_4 FF9C                        STR_5 FF69  
                      STR_6 FF36                        STR_7 FF8B                        STR_8 FF7A  
                      STR_9 FFAD                        u7000 233C                        u7001 2338  
                      u7010 234E                        u7011 234A                        _PEIE 7F96  
                      u7020 237C                        u7100 150A                        u7021 2378  
                      u7101 1506                        u7030 2392                        u7110 151A  
                      u7031 238E                        u7111 1516                        u7040 23A6  
                      u7200 17C8                        u7120 155A                        u8000 03E8  
                      u7041 23A2                        u7201 17C4                        u7121 1556  
                      u8001 03E4                        u6410 491E                        u7050 23C0  
                      u7210 17F6                        u7130 156C                        u8010 0474  
                      u6411 491A                        u7051 23BC                        u7211 17F2  
                      u7131 1568                        u8011 0470                        u7300 4122  
                      u6420 4018                        u7060 2408                        u7220 180C  
                      u7140 157C                        u6500 10B2                        u8100 0734  
                      u8020 04AA                        u7301 411E                        u6421 4014  
                      u7061 2404                        u7221 1808                        u7141 1578  
                      u6501 10AE                        u8101 0730                        u8021 04A6  
                      u7310 4140                        u6430 402A                        u7070 2438  
                      u7230 1820                        u7150 15B2                        u6510 10C4  
                      u8110 07CE                        u8030 04C0                        u7311 413C  
                      u6431 4026                        u7071 2434                        u7231 181C  
                      u7151 15AE                        u6511 10C0                        u8111 07CA  
                      u8031 04BC                        u7320 415C                        u6440 4052  
                      u7080 2466                        u7400 43D2                        u7240 183A  
                      u7160 15C2                        u6600 120C                        u6520 10D4  
                      u8200 0ABE                        u8120 081C                        u8040 04F6  
                      u7321 4158                        u6441 404E                        u7081 2462  
                      u7401 43CE                        u7241 1836                        u7161 15BE  
                      u6601 1208                        u6521 10D0                        u8121 0818  
                      u8041 04F2                        u9001 38B8                        u7330 4182  
                      u6450 4088                        u7410 4410                        u7250 1882  
                      u7170 173C                        u7090 14F8                        u6610 121A  
                      u6530 1110                        u8210 0AD2                        u8130 08CC  
                      u8050 0504                        u7331 417E                        u6451 4084  
                      u7411 440C                        u7251 187E                        u7091 14F4  
                      u6611 1216                        u6531 110C                        u8211 0ACE  
                      u8131 08C8                        u8051 0500                        u9011 38CA  
                      u7340 4258                        u7420 4444                        u7260 18B0  
                      u7180 1796                        u6700 1378                        u6620 122A  
                      u6540 111E                        u6460 1038                        u7500 3C6E  
                      u8140 0906                        u8060 052E                        u8300 3520  
                      u8220 33E6                        u9100 3792                        u7341 4254  
                      u7421 4440                        u7261 18AC                        u7181 1792  
                      u6701 1374                        u6621 1226                        u6541 111A  
                      u6461 1034                        u8141 0902                        u8061 052A  
                      u8301 351C                        u8221 33E2                        u9101 378E  
                      u7350 4272                        u7430 3D58                        u7270 18EA  
                      u7190 17B6                        u6710 1388                        u6630 125C  
                      u6550 118C                        u6470 104A                        u7510 3C9C  
                      u8150 0914                        u8070 0676                        u8310 352E  
                      u8230 342C                        u9110 37EC                        u7351 426E  
                      u7431 3D54                        u7271 18E6                        u7191 17B2  
                      u7175 1732                        u6711 1384                        u6631 1258  
                      u6551 1188                        u6471 1046                        u7511 3C98  
                      u8151 0910                        u8071 0672                        u8311 352A  
                      u9111 37E8                        u7280 40E2                        u7360 428C  
                      u7600 4854                        u7440 3D96                        u6800 146C  
                      u6720 13A4                        u6640 126A                        u6560 11A4  
                      u6480 105A                        u7520 3CB0                        u8160 0968  
                      u8080 06DC                        u8320 3568                        u8240 343C  
                      u8400 3352                        u9040 3940                        u9200 3A92  
                      u9120 37FA                        u7281 40DE                        u7361 4288  
                      u7601 4850                        u7441 3D92                        u6801 1468  
                      u6721 13A0                        u6641 1266                        u6561 119E  
                      u6481 1056                        u7521 3CAC                        u7505 3C64  
                      u8161 0964                        u8081 06D8                        u8321 3564  
                      u8241 3438                        u8401 334E                        u9041 393A  
                      u9201 3A8E                        u9121 37F6                        u7290 40FC  
                      u7370 42AA                        u7450 3DB4                        u6810 147C  
                      u6730 13B4                        u6650 1288                        u6570 11A6  
                      u6490 109C                        u7530 3CD8                        u7610 3E6E  
                      u8170 0A3A                        u8090 0724                        u8330 4320  
                      u8250 344A                        u8410 3362                        u9050 3942  
                      u9034 392A                        u9210 3AAA                        u9130 3820  
                      u7291 40F8                        u7371 42A6                        u7451 3DB0  
                      u6811 1478                        u6731 13B0                        u6651 1284  
                      u6491 1098                        u7531 3CD4                        u8171 0A36  
                      u8091 0720                        u8331 431C                        u8251 3446  
                      u8411 335E                        u9035 3926                        u9211 3AA6  
                      u9131 381C                        u7380 42C0                        u6900 2172  
                      u7460 3DD4                        u6820 149C                        u6740 13C6  
                      u6660 12C0                        u6580 11CE                        u7540 3CF8  
                      u7620 3E8C                        u7700 2C3A                        u8180 0A56  
                      u8340 439A                        u8260 3468                        u8500 1A50  
                      u8420 3370                        u9300 2FF0                        u9060 3964  
                      u9028 38FC                        u9220 3ABE                        u9140 382E  
                      u7381 42BC                        u6901 216E                        u7461 3DD0  
                      u6821 1498                        u6741 13C2                        u6661 12BC  
                      u6581 11CA                        u7541 3CF4                        u7621 3E88  
                      u8181 0A52                        u8341 4396                        u8261 3464  
                      u8237 3422                        u8501 1A4C                        u8421 336C  
                      u9301 2FEC                        u9061 3960                        u9029 3944  
                      u9221 3ABA                        u9141 382A                        u7390 42E4  
                      u6910 2182                        u7470 3E24                        u6830 14AE  
                      u6750 13DC                        u6670 1306                        u6590 11EC  
                      u7550 3D08                        u7630 3EB4                        u7710 2C6A  
                      u8190 0ABC                        u8270 348E                        u8510 1AC0  
                      u8430 33AA                        u8350 322A                        u9310 2FFE  
                      u9070 399C                        u9230 3AE4                        u9150 3846  
                      u7391 42E0                        u6911 217E                        u7471 3E20  
                      u6831 14AA                        u6751 13D8                        u6671 1302  
                      u6591 11E8                        u7551 3D04                        u7631 3EB0  
                      u7615 3E64                        u7711 2C66                        u8191 0AB6  
                      u8271 348A                        u8511 1ABC                        u8431 33A6  
                      u8351 3226                        u9311 2FFA                        u9071 3998  
                      u9231 3AE0                        u9151 3842                        u7560 445C  
                      u6920 21C2                        u7480 474C                        u6840 14CA  
                      u6760 13F2                        u6680 133C                        u7640 3EDE  
                      u7720 2C8C                        u7800 4590                        u8280 34C8  
                      u8520 1AF6                        u8440 33B8                        u8360 3238  
                      u9320 3016                        u8600 1D50                        u9400 2760  
                      u9080 39B2                        u9240 3AF2                        u9160 39F8  
                      u7561 4458                        u6921 21BE                        u7481 4748  
                      u6841 14C6                        u6761 13EE                        u6681 1338  
                      u7641 3EDA                        u7721 2C88                        u7705 2C30  
                      u7801 458C                        u8281 34C4                        u8521 1AF2  
                      u8441 33B4                        u8361 3234                        u9321 3012  
                      u8601 1D4A                        u9401 275C                        u9081 39AE  
                      u9241 3AEE                        u9161 39F4                        u6850 46F4  
                      u7570 447E                        u7810 357A                        u6930 2202  
                      u6770 1406                        u6690 134C                        u7490 3C3A  
                      u8290 34EE                        u8530 1B28                        u8450 192C  
                      u8370 3294                        u8610 1D52                        u9330 24EA  
                      u9250 3B06                        u9170 3A4C                        u9090 3726  
                      u9410 27CA                        u6851 46F0                        u7571 447A  
                      u7811 3574                        u6931 21FE                        u6771 1402  
                      u6691 1348                        u7491 3C36                        u8531 1B24  
                      u8451 1928                        u8371 3290                        u9331 24E6  
                      u9251 3B02                        u9171 3A48                        u9091 3722  
                      u9411 27C6                        u8700 4244                        u7580 44C8  
                      u7820 357C                        u6940 2278                        u6860 20FA  
                      u6780 1420                        u7660 3F18                        u7740 2CFA  
                      u7900 013C                        u8540 1B5A                        u8460 1998  
                      u8380 32EA                        u8620 1D74                        u9340 254C  
                      u9180 3A72                        u9500 29A6                        u9420 27F0  
                      u8701 4240                        u7581 44C4                        u6941 2274  
                      u6861 20F6                        u6781 141C                        u7661 3F12  
                      u7741 2CF6                        u7901 0138                        u8541 1B56  
                      u8461 1994                        u8381 32E6                        u9261 2E28  
                      u8621 1D70                        u9341 2548                        u9181 3A6E  
                      u9501 29A2                        u9421 27EC                        u8710 47EC  
                      u7590 44D6                        u7830 358C                        u6950 229A  
                      u6870 210C                        u6790 145A                        u7670 3F1A  
                      u7750 2D1E                        u7910 0186                        u8550 1B7C  
                      u8470 19BA                        u8390 3334                        u9270 2E50  
                      u8630 1EF2                        u9350 26D4                        u9190 3A80  
                      u9430 27FE                        u8711 47E8                        u7591 44D2  
                      u7831 3588                        u6951 2296                        u6871 2108  
                      u6791 1456                        u7655 3EF0                        u7735 2CA0  
                      u7911 0182                        u8551 1B78                        u8471 19B6  
                      u8391 3330                        u9271 2E4C                        u8631 1EEE  
                      u9351 26D0                        u9191 3A7C                        u9431 27FA  
                      u8720 4810                        u7840 35B8                        u6960 22C4  
                      u6880 211C                        u7760 2D3A                        u7736 2CAA  
                      u7680 47A4                        u7920 0196                        u8560 1C16  
                      u8480 19E8                        u9280 2EF0                        u8640 20DA  
                      u8800 0BE6                        u9360 26F6                        u9440 281C  
                      u8721 480C                        u7841 35B4                        u6961 22C0  
                      u6881 2118                        u7761 2D36                        u7737 2CBA  
                      u7681 47A0                        u7921 0192                        u8297 34E4  
                      u8561 1C12                        u8481 19E4                        u9281 2EEC  
                      u8641 20D6                        u8801 0BE2                        u9361 26F2  
                      u9441 2818                        u8570 48DC                        u8650 41A6  
                      u7850 35CE                        u6970 22E8                        u6890 2160  
                      u7770 2D8E                        u7690 44FA                        u7930 01D4  
                      u8490 1A34                        u9290 2FCA                        u8730 471A  
                      u8810 0BF6                        u9370 270A                        u9450 2842  
                      u8571 48D8                        u8651 41A2                        u7851 35CA  
                      u6971 22E4                        u6891 215C                        u7755 2D14  
                      u7691 44F6                        u7931 01D0                        u8491 1A30  
                      u9291 2FC6                        u8731 4716                        u8811 0BF2  
                      u9371 2706                        u9451 283E                        u8580 48EA  
                      u8660 41C4                        u7860 3672                        u6980 22FE  
                      u7780 2DAA                        u7940 01E6                        u8740 472E  
                      u8820 0CD2                        u9380 271E                        u9460 2850  
                      u8581 48E6                        u8661 41C0                        u7861 366E  
                      u6981 22FA                        u7781 2DA6                        u7941 01E2  
                      u8741 472A                        u8821 0CCE                        u9381 271A  
                      u9461 284C                        u9517 276E                        u8670 41E0  
                      u7870 3684                        u6990 231C                        u7790 2DE6  
                      u7950 0260                        u8590 45D0                        u8830 0DAC  
                      u8750 0B34                        u9390 2732                        u9470 286E  
                      u8671 41DC                        u7871 3680                        u6991 2318  
                      u7791 2DE2                        u7775 2D84                        u7951 025C  
                      u8591 45CC                        u9607 2FD6                        u8831 0DA8  
                      u8751 0B2E                        u9391 272E                        u9471 286A  
                      u9527 27D6                        u8680 421E                        u7880 369E  
                      u7960 0272                        u8840 0DCA                        u8760 0B36  
                      u9480 2894                        u9617 3F4E                        u7881 369A  
                      u7961 026E                        u8841 0DC6                        u8905 494A  
                      u9481 2890                        u9537 2828                        u8690 4234  
                      u7890 36AE                        u7970 02EC                        u8850 0DDA  
                      u8770 0B58                        u8906 494C                        u9490 28A2  
                      u9627 3FFC                        u8691 4230                        u7891 36AA  
                      u7971 02E8                        u8851 0DD6                        u8771 0B54  
                      u8915 493C                        u9491 289E                        u9547 287A  
                      u7980 0378                        u8860 0E5A                        u8780 0B6E  
                      u8916 493E                        u8940 47CE                        u7981 0374  
                      u8861 0E56                        u8781 0B6A                        u8925 492E  
                      u8941 47CA                        u9557 3806                        u8950 3F66  
                      u7990 03AA                        u8870 0F04                        u8790 0BC8  
                      u8926 4930                        u8951 3F62                        u8687 4214  
                      u7991 03A6                        u8871 0F00                        u8791 0BC4  
                      u8935 4974                        u9567 3A56                        u8960 3FF6  
                      u8936 4976                        u8961 3FF2                        u9577 3AC8  
                      u8971 3B22                        u9587 396E                        u8980 3B40  
                      u8981 3B3C                        u9597 2744                        u8885 4966  
                      u8990 3B58                        u8886 4968                        u8991 3B54  
                      u8895 4958                        u8896 495A                        _TMR1 0FCE  
                      abs@a 000C                        _dbuf 0125                        _half FEFF  
                      _labs 44EC                        _main 2762                        _dtoa 356A  
                      _prec 0057                        _sinf 0B12                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 33CC                        btemp 005A  
             ___fpclassifyf 3E2E                        prodh 0FF4                        prodl 0FF3  
                      start 0114             ___fldiv@new_exp 003E                ___param_bank 0000  
                     ??_ISR 0001              _LCD_ShowString 4194                       ??_abs 000E  
                     ??_pad 001D            __end_of_LCD_Init 4006            __end_of_LCD_Send 48EE  
             ___fltol@sign1 0052                       ?_labs 0006             __end_of___fladd 14DE  
                     ?_main 0001                       ?_dtoa 0020             __end_of___fldiv 247A  
           __end_of___awdiv 4194             __end_of___cosdf 3218             __end_of___flneg 476E  
                     STR_10 FFE5                       STR_11 FFDB                       STR_20 FFCC  
                     STR_12 FFE0                       STR_21 FF23                       STR_13 FFFA  
                     STR_22 FFD1                       STR_14 FFF6                       STR_23 FFEA  
                     STR_15 FFF2                       STR_16 FFD6                       STR_17 FFC5  
                     STR_26 FFEE                       STR_18 FFD5                       STR_19 FFCB  
           __end_of___awmod 42F6                       STR_29 FFBE                       ?_sinf 00A4  
           __end_of___flmul 1908             __end_of___flsub 466C             __end_of___fltol 3D2A  
                     ?_stoa 0010             ___awdiv@divisor 0008                       _RC1IE 7CED  
                     _RC1IF 7CF5             __end_of___sindf 2BF2                       i2l380 0088  
                     i2l390 0108                       i2l382 0074                ___sindf$4125 0070  
              ___sindf$4126 0074                ___sindf$4127 0078             ___awdiv@counter 000A  
              vfpfcnvrt@fmt 00BB                       _TX1IF 7CF4             __end_of_pio2_1t FEF7  
                     _fabsf 4812                       _flags 0059                       _gmail 0175  
       read_prec_or_width@c 000E         read_prec_or_width@n 000F                       _fputc 4006  
                     _fputs 46B2                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FEFF                       _putch 490E  
                     dtoa@d 0022                       dtoa@i 002B                       dtoa@p 0028  
                     dtoa@s 002A                       dtoa@w 0026        __end_of_LED1_Control 496A  
           __end_of_runGPIO 39CA                       pclath 0FFA                       tablat 0FF5  
           __end_of_runUART 385A        __end_of_LED2_Control 495C                       sinf@n 00B0  
                     sinf@x 00A4                       sinf@y 00B6                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 001C                       stoa@p 0016  
                     stoa@s 0012                       stoa@w 0018                       ttemp5 005B  
                     ttemp6 005E                       ttemp7 0062        __end_of_LED3_Control 494E  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 46B2  
            ?___fpclassifyf 0006        __end_of_LED4_Control 4940        __end_of_LED5_Control 4932  
           runUART@reversed 00D4        __end_of_LED6_Control 4978             __initialization 45DC  
    __end_of_LCD_ShowString 4246                __end_of_half FF03                __end_of_labs 4542  
              __end_of_main 29C0                __end_of_dtoa 36E6                __end_of_sinf 101C  
              __end_of_stoa 356A                LCD_Send@data 0006                      ??_labs 000A  
                    ??_main 00FA                      ??_dtoa 0024                      ??_sinf 0054  
                    ??_stoa 0014           __end_of_LCD_Clear 4812               __activetblptr 0002  
__end_of_read_prec_or_width 43A4                ?_moveDisplay 00E7                      ?_fabsf 0006  
                    ?_fputc 0007                      ?_fputs 0010                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      _CCPR1L 0FBE            ___awdiv@dividend 0006  
                    ?_putch 0001                      _GODONE 7E11                      _GPIOIE 0124  
                    i2l5500 00E6                      i2l5502 00EE                      i2l5504 00F2  
                    i2l5506 0100                      i2l5470 0012                      i2l5480 0066  
                    i2l5472 0020                      i2l5490 00A0                      i2l5474 002E  
                    i2l5492 00AE                      i2l5484 0082                      i2l5476 0040  
                    i2l5494 00C0                      i2l5486 0090                      i2l5478 004E  
                    i2l5496 00C4                      i2l5488 0092                      i2l5498 00D6  
                    _RCREG1 0FAE               ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C  
             ___rem_pio2f@x 0084               ___rem_pio2f@y 0088               vfpfcnvrt@done 00C4  
                    _UARTIE 0123                      _SPBRG1 0FAF                      _TMR1IE 7CE8  
                    _TMR1IF 7CF0                      _TMR2IE 7CE9                      _TMR2IF 7CF1  
                    _TMR1ON 7E68                      _TMR2ON 7DD2                      _SSP1IF 7CF3  
                    _SSP2IF 7D27                      _TXREG1 0FAD            __end_of___xxtofl 33CC  
              _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC             ?_LCD_ShowString 0007  
                    _s1pio2 FF1F                      _s2pio2 FF1B                      _s3pio2 FF17  
                    _s4pio2 FF13                      ___flge 3D2A                      ___fleq 43A4  
                 ??___fladd 004E                      ___wmul 48A2                   ??___fldiv 0035  
                 ??___awdiv 000A                   ??___cosdf 0052                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 00F3                      _efgtoa 0118  
                 ??___sindf 0052                      _pio2_1 FEF7                      _floorf 2BF2  
                    fabsf@u 000A                      fabsf@x 0006                      _memcpy 4542  
      read_prec_or_width@ap 000D                      clear_0 4602            ___awdiv@quotient 000C  
                    _runADC 2E08                      _runDAC 247A             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 39CA             ___awmod@counter 000A  
                    _printf 48EE                      pad@buf 0019                      dtoa@fp 0020  
                    _strcpy 476E                      _strlen 47A6                      fputc@c 0007  
                    fputs@c 0014                      fputs@i 0015                      fputs@s 0010  
           ___fpclassifyf@e 000E             ___fpclassifyf@u 0010             ___fpclassifyf@x 0006  
              __mediumconst FEE2                      sinf@ux 00BA                   ??_runGPIO 0007  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
         __end_of_SPI_write 4734                   ??_runUART 00D2                      stoa@cp 001A  
                    stoa@fp 0010            __end_of_vfprintf 45DC                   ??_sprintf 0054  
                ___flge@ff1 002D                  ___flge@ff2 0031             ??___fpclassifyf 000A  
              ___xxtofl@arg 0010                ___xxtofl@exp 000F                ___xxtofl@val 0006  
                ___fleq@ff1 0006                  ___fleq@ff2 000A                  __accesstop 0060  
   __end_of__initialization 4616                   ?_LCD_Init 0001                   ?_LCD_Send 0001  
                ___flneg@f1 0080               ___rparam_used 0001                  ___fltol@f1 0064  
            __pcstackCOMRAM 0001           LED4_Control@state 0006                __pidataBANK1 487A  
             __end_of_fabsf 4846               __end_of_fputc 40D0               __end_of_fputs 46F6  
             __end_of_putch 4924                  __end_of_C0 FF13                  __end_of_C1 FF0F  
                __end_of_C2 FF0B                  __end_of_C3 FF07                  __end_of_S1 FEF3  
                __end_of_S2 FEEF                  __end_of_S3 FEEB                  __end_of_S4 FEE7  
                   ??_fabsf 000A                     ??_fputc 000B                     ??_fputs 0014  
                   ??_putch 0006                  __pbssBANK0 00FE                  __pbssBANK1 0100  
                ??_LCD_Init 0007                  ??_LCD_Send 0006                 runADC@F6963 0100  
              SPI_write@LSB 0007                SPI_write@MSB 0006                     ISR@temp 0005  
                   ?___flge 002D                     ?___fleq 0006                     ?___wmul 0006  
                   ?_efgtoa 0084               ??___rem_pio2f 0089                     ?_floorf 0046  
              _LED1_Control 495C                     ?_memcpy 0006                     ?_runADC 0001  
                   ?_runDAC 0001                _LED2_Control 494E                     ?_runPWM 0001  
                   ?_printf 00CE                     ?_strcpy 0006                     ?_strlen 0006  
              _LED3_Control 4940                _LED4_Control 4932                   ?___xxtofl 0006  
              _LED5_Control 4924              ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B  
            ___rem_pio2f@ux 0094                _LED6_Control 496A                     _SSP2ADD 0F6E  
                   _SSP1BUF 0FC9                     _SSP2BUF 0F6F           runGPIO@LEDControl 0015  
           LCD_ShowString@i 000C                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 101C                     ___fldiv 20E0                     ___awdiv 40D0  
                   ___cosdf 301A                     ___flneg 4734                     ___awmod 4246  
                   ___flmul 14DE                     ___flsub 4624                     ___fltol 3C22  
                   ___sindf 29C0                   ?_vfprintf 00C7              main@setUpAgain 00FC  
                   __pcinit 45DC                     __ramtop 1000                     __ptext0 2762  
                   __ptext1 36E6                     __ptext2 47A6                     __ptext3 39CA  
                   __ptext4 385A                     __ptext5 4924                     __ptext6 4932  
                   __ptext7 4940                     __ptext8 494E                     __ptext9 495C  
                   _pio2_1t FEF3                   _T1CONbits 0FCD             runPWM@keepState 0010  
     read_prec_or_width@fmt 000C                  ??___xxtofl 000A         __end_of___rem_pio2f 20E0  
          ___awmod@dividend 0006                     _invpio2 FEFB                     _runGPIO 385A  
                   efgtoa@c 008A                     efgtoa@d 0098                     efgtoa@e 009C  
                   efgtoa@f 0086                     efgtoa@g 00AF                     efgtoa@h 00A6  
                   efgtoa@i 00A4                     efgtoa@l 00AA                     efgtoa@m 009A  
                   efgtoa@n 00B3                     efgtoa@p 008F                     efgtoa@t 0091  
                   efgtoa@u 00B5                     efgtoa@w 009E                     _runUART 36E6  
                 _LCD_Clear 47DC                     _sprintf 466C            ___rem_pio2f$4124 008F  
      end_of_initialization 4616                     floorf@e 0064                     floorf@m 0060  
                   floorf@u 0066                     floorf@x 0046                     memcpy@d 000D  
                   memcpy@n 000A                     memcpy@s 000F                     fputc@fp 0009  
          ___rem_pio2f@F526 0115               __Lmediumconst FEE2                     fputs@fp 0012  
          ??_LCD_ShowString 0009          _read_prec_or_width 42F6           LED1_Control@state 0006  
     LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093           __end_of_vfpfcnvrt 1D1E  
                efgtoa@mode 0096                  efgtoa@sign 00AE                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 000C                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 00BF  
                ??_vfprintf 0054                     strcpy@d 000A                     strlen@a 0008  
                   strlen@s 0006                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0063               ___xxtofl@sign 000E                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 000E                 ___fldiv@grs 0040  
               ___fldiv@rem 0039                   _SPI_write 46F6                 ___flmul@grs 0022  
               _CCP1CONbits 0FBD           LED5_Control@state 0006              __end_of_s1pio2 FF23  
            __end_of_s2pio2 FF1F              __end_of_s3pio2 FF1B              __end_of_s4pio2 FF17  
            __end_of___flge 3E2E              __end_of___fleq 444E                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 1D1E                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 48C8              __end_of_efgtoa 0B12              __end_of_pio2_1 FEFB  
      moveDisplay@menuItem1 0195        moveDisplay@menuItem2 01A6              __end_of_floorf 2E08  
      moveDisplay@menuItems 01B7              __end_of_memcpy 4592                  floorf@F521 0119  
            __end_of_runADC 301A              __end_of_runDAC 2762              __end_of_runPWM 3B10  
            __end_of_printf 490E              __end_of_strcpy 47A6              __end_of_strlen 47DC  
       start_initialization 45DC                 __end_of_ISR 0114                 __end_of_abs 487A  
               __end_of_pad 44EC                  ?_SPI_write 0001       __end_of___fpclassifyf 3F2C  
           runADC@keepState 01B2                 vfprintf@fmt 00C9                    ??___flge 0035  
                  ??___fleq 000E                    ??___wmul 000A                    ??_efgtoa 008B  
               __pdataBANK1 01C8                    ??_floorf 004A                    ??_memcpy 000C  
                  ??_runADC 00E7                    ??_runDAC 00D2                    ??_runPWM 000E  
                  ??_printf 0054                    ??_strcpy 000A                    ??_strlen 0008  
                 ___fladd@a 004A                   ___fladd@b 0046                   ___fldiv@a 0031  
                 ___fldiv@b 002D               runGPIO@states 0009                   ___cosdf@r 0068  
                 ___cosdf@w 0078                   ___cosdf@x 0064                   ___cosdf@z 007C  
                 ___flmul@a 0018                   ___flmul@b 0014                 __pbssCOMRAM 0055  
                 ___flsub@a 0068                   ___flsub@b 0064               __pcstackBANK0 0060  
             __pcstackBANK1 0195                 ??_LCD_Clear 0007                   ___sindf@r 0068  
                 ___sindf@s 007C                   ___sindf@w 006C                   ___sindf@x 0064  
                 ___sindf@z 0080       runGPIO@numberOfStates 0022                 _efgtoa$3677 0093  
                 _dtoa$3646 0024               SPI_write@data 0008                   __pintcode 0008  
             __pmediumconst FEE2                    ?___fladd 0046                    ?___fldiv 002D  
                  ?___awdiv 0006                    ?___cosdf 0064                    ?___flneg 0080  
                  ?___awmod 0006                    ?___flmul 0014                    ?___flsub 0064  
                  ?___fltol 0064                  runADC@pot1 01AE                  runADC@pot2 01B0  
                  ?___sindf 0064                  runADC@text 0195                   fabsf@F465 0111  
             ??_moveDisplay 00E8                    ?_runGPIO 0001                    ?_runUART 0001  
           runDAC@keepState 00DB                   _sinf$4120 00B2                    ?_sprintf 00CE  
                 _sinf$3841 00A8                   _sinf$3842 00AC                 ??_SPI_write 0006  
            runDAC@DACindex 00DD                    _LCD_Init 3F2C                    _LCD_Send 48C8  
            ___wmul@product 000A                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C                  runUART@len 00F4  
         LED2_Control@state 0006                    i2u631_40 0020                    i2u631_41 001C  
                  i2u640_40 00D6                    i2u632_40 002E                    i2u640_41 00D2  
                  i2u632_41 002A                    i2u633_40 0040                    i2u633_41 003C  
                  i2u634_40 004E                    i2u634_41 004A                    i2u635_40 0074  
                  i2u635_41 0070                    i2u636_40 0082                    i2u636_41 007E  
                  i2u637_40 00A0                    i2u637_41 009C                    i2u638_40 00AE  
                  i2u638_41 00AA                    i2u639_40 00C0                    i2u639_41 00BC  
                  i2u963_47 0058                   _vfpfcnvrt 1908                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0006                   main@menuI 00FD  
          moveDisplay@F6961 01C8                  vfpfcnvrt@c 00C3                   copy_data0 45F0  
       __end_of_moveDisplay 3C22            moveDisplay@menuI 01C7            moveDisplay@where 00E7  
              runGPIO@F6973 01E4                runGPIO@F6991 01D8                runGPIO@GPIOi 0024  
                  __Hrparam 0000                   memcpy@tmp 000C                  vfprintf@ap 00CB  
                  __Lrparam 0000                  vfprintf@fp 00C7          runGPIO@GPIOreverse 0021  
         LED6_Control@state 0006                ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9  
       runDAC@selectModeDAC 00DC                  _ANSELAbits 0F38                  _ANSELBbits 0F39  
                _ANSELCbits 0F3A                  _ANSELDbits 0F3B                  _ANSELEbits 0F3C  
        ___fpclassifyf@F465 011D                  sprintf@fmt 00D0                    ___xxtofl 3218  
                  __ptext10 496A                    __ptext11 247A                    __ptext20 3218  
                  __ptext12 0B12                    __ptext21 3B10                    __ptext13 29C0  
                  __ptext30 4542                    __ptext22 466C                    __ptext14 1D1E  
                  __ptext31 44EC                    __ptext23 4592                    __ptext15 4812  
                  __ptext40 43A4                    __ptext32 2BF2                    __ptext24 1908  
                  __ptext16 301A                    __ptext41 20E0                    __ptext33 3E2E  
                  __ptext25 33CC                    __ptext17 48EE                    __ptext50 4194  
                  __ptext42 356A                    __ptext34 3C22                    __ptext26 42F6  
                  __ptext18 46F6                    __ptext51 47DC                    __ptext43 444E  
                  __ptext35 4624                    __ptext27 48A2                    __ptext19 2E08  
                  __ptext52 3F2C                    __ptext44 46B2                    __ptext36 101C  
                  __ptext28 0118                    __ptext53 48C8                    __ptext45 4006  
                  __ptext37 4734                    __ptext29 476E                    __ptext46 490E  
                  __ptext38 14DE                    __ptext47 4846                    __ptext39 3D2A  
                  __ptext48 4246                    __ptext49 40D0              runADC@voltage1 01A6  
            runADC@voltage2 01AA                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0006                    efgtoa@fp 0084  
                  efgtoa@ne 008D                    efgtoa@pp 0095                    efgtoa@ou 00A0  
                  isa$xinst 0000                    int$flags 005A                 _runDAC$4117 00D3  
               _runDAC$4118 00D7                    _vfprintf 4592               ?_LED1_Control 0001  
                 printf@fmt 00CE                _SSP1STATbits 0FC7               ?_LED2_Control 0001  
              _SSP2STATbits 0F6D               ?_LED3_Control 0001               ?_LED4_Control 0001  
                 putch@data 0006               ?_LED5_Control 0001                    memcpy@d1 0006  
             ?_LED6_Control 0001                    memcpy@s1 0008                 _moveDisplay 3B10  
                  intlevel2 0000                   sprintf@ap 00DA                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00B1                    runGPIO@j 0025  
                  runUART@i 00F6                    runUART@p 00F8                 efgtoa@nmode 0097  
                  printf@ap 0054              ??_LED1_Control 0006              ??_LED2_Control 0006  
               ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007              ??_LED3_Control 0006  
            ??_LED4_Control 0006                    sprintf@f 00DB                    sprintf@s 00CE  
            ??_LED5_Control 0006              ??_LED6_Control 0006            runPWM@multiplier 0011  
             ___fladd@signs 0060                ___fladd@aexp 0061                ___fladd@bexp 0062  
              ___cosdf$4121 006C                ___cosdf$4122 0070                ___cosdf$4123 0074  
             _keepStateGPIO 00FE           LED3_Control@state 0006  
