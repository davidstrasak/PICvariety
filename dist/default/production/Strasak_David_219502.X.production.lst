

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 10:57:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 12/10/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F46K22 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataBANK0
    95   004086                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for runGPIO@F6981
    99   004086  20                 	db	32
   100   004087  30                 	db	48
   101   004088  18                 	db	24
   102   004089  0C                 	db	12
   103   00408A  06                 	db	6
   104   00408B  03                 	db	3
   105   00408C  01                 	db	1
   106   00408D  03                 	db	3
   107   00408E  06                 	db	6
   108   00408F  0C                 	db	12
   109   004090  18                 	db	24
   110   004091  30                 	db	48
   111                           
   112                           ;initializer for runGPIO@F6963
   113   004092  0E                 	db	low _LED1_Control
   114   004093  41                 	db	high _LED1_Control
   115   004094  00                 	db	low _LED2_Control
   116   004095  41                 	db	high _LED2_Control
   117   004096  F2                 	db	low _LED3_Control
   118   004097  40                 	db	high _LED3_Control
   119   004098  E4                 	db	low _LED4_Control
   120   004099  40                 	db	high _LED4_Control
   121   00409A  D6                 	db	low _LED5_Control
   122   00409B  40                 	db	high _LED5_Control
   123   00409C  1C                 	db	low _LED6_Control
   124   00409D  41                 	db	high _LED6_Control
   125                           
   126                           ;initializer for moveDisplay@F6950
   127   00409E  9D                 	db	low STR_6
   128   00409F  A2                 	db	low STR_7
   129   0040A0  B4                 	db	low STR_8
   130   0040A1  B0                 	db	low STR_9
   131   0040A2  AC                 	db	low STR_10
   132   0040A3  98                 	db	low STR_11
   133   0040A4  8C                 	db	low STR_12
   134   0040A5  AB                 	db	low (STR_5+4)
   135                           
   136                           	psect	smallconst
   137   001000                     __psmallconst:
   138                           	callstack 0
   139   001000  00                 	db	0
   140   001001  6C3C               	dw	27708
   141   001003  3636               	dw	13878
   142   001005                     __end_of_S4:
   143                           	callstack 0
   144   001005  07CF               	dw	1999
   145   001007  B950               	dw	47440
   146   001009                     __end_of_S3:
   147                           	callstack 0
   148   001009  8884               	dw	34948
   149   00100B  3C08               	dw	15368
   150   00100D                     __end_of_S2:
   151                           	callstack 0
   152   00100D  AAAB               	dw	43691
   153   00100F  BE2A               	dw	48682
   154   001011                     __end_of_S1:
   155                           	callstack 0
   156   001011  85A3               	dw	34211
   157   001013  3288               	dw	12936
   158   001015                     __end_of_pio2_1t:
   159                           	callstack 0
   160   001015  0FDA               	dw	4058
   161   001017  3FC9               	dw	16329
   162   001019                     __end_of_pio2_1:
   163                           	callstack 0
   164   001019  F983               	dw	63875
   165   00101B  3F22               	dw	16162
   166   00101D                     __end_of_invpio2:
   167                           	callstack 0
   168   00101D  0000               	dw	0
   169   00101F  3F00               	dw	16128
   170   001021                     __end_of_half:
   171                           	callstack 0
   172   001021  9A17               	dw	39447
   173   001023  37CC               	dw	14284
   174   001025                     __end_of_C3:
   175                           	callstack 0
   176   001025  043F               	dw	1087
   177   001027  BAB6               	dw	47798
   178   001029                     __end_of_C2:
   179                           	callstack 0
   180   001029  AA9F               	dw	43679
   181   00102B  3D2A               	dw	15658
   182   00102D                     __end_of_C1:
   183                           	callstack 0
   184   00102D  0000               	dw	0
   185   00102F  BF00               	dw	48896
   186   001031                     __end_of_C0:
   187                           	callstack 0
   188   001031  0FDB               	dw	4059
   189   001033  40C9               	dw	16585
   190   001035                     __end_of_s4pio2:
   191                           	callstack 0
   192   001035  CBE4               	dw	52196
   193   001037  4096               	dw	16534
   194   001039                     __end_of_s3pio2:
   195                           	callstack 0
   196   001039  0FDB               	dw	4059
   197   00103B  4049               	dw	16457
   198   00103D                     __end_of_s2pio2:
   199                           	callstack 0
   200   00103D  0FDB               	dw	4059
   201   00103F  3FC9               	dw	16329
   202   001041                     __end_of_s1pio2:
   203                           	callstack 0
   204   000000                     _LATBbits	set	3978
   205   000000                     _TRISBbits	set	3987
   206   000000                     _SSP2STATbits	set	3949
   207   000000                     _SSP2ADD	set	3950
   208   000000                     _TX1IF	set	31988
   209   000000                     _GODONE	set	32273
   210   000000                     _ANSELBbits	set	3897
   211   000000                     _ANSELDbits	set	3899
   212   000000                     _PORTAbits	set	3968
   213   000000                     _PORTCbits	set	3970
   214   000000                     _LATCbits	set	3979
   215   000000                     _LATDbits	set	3980
   216   000000                     _ANSELAbits	set	3896
   217   000000                     _TRISAbits	set	3986
   218   000000                     _TRISCbits	set	3988
   219   000000                     _TRISDbits	set	3989
   220   000000                     _SSP1IF	set	31987
   221   000000                     _SSP2IF	set	32039
   222   000000                     _LATAbits	set	3977
   223   000000                     _SSP2CON2bits	set	3947
   224   000000                     _SSP2CON1bits	set	3948
   225   000000                     _SSP2BUF	set	3951
   226   000000                     _RCSTA1bits	set	4011
   227   000000                     _SPBRG1	set	4015
   228   000000                     _ADCON2bits	set	4032
   229   000000                     _SSP1CON1bits	set	4038
   230   000000                     _SSP1BUF	set	4041
   231   000000                     _SSP1STATbits	set	4039
   232   000000                     _ADCON0bits	set	4034
   233   000000                     _ADRESH	set	4036
   234   000000                     _TXREG1	set	4013
   235   000000                     _TXSTA1bits	set	4012
   236   001041                     STR_1:
   237   001041  56                 	db	86	;'V'
   238   001042  79                 	db	121	;'y'
   239   001043  74                 	db	116	;'t'
   240   001044  76                 	db	118	;'v'
   241   001045  6F                 	db	111	;'o'
   242   001046  72                 	db	114	;'r'
   243   001047  69                 	db	105	;'i'
   244   001048  6C                 	db	108	;'l'
   245   001049  3A                 	db	58	;':'
   246   00104A  20                 	db	32
   247   00104B  20                 	db	32
   248   00104C  20                 	db	32
   249   00104D  20                 	db	32
   250   00104E  20                 	db	32
   251   00104F  20                 	db	32
   252   001050  20                 	db	32
   253   001051  00                 	db	0
   254   001052                     STR_2:
   255   001052  44                 	db	68	;'D'
   256   001053  61                 	db	97	;'a'
   257   001054  76                 	db	118	;'v'
   258   001055  69                 	db	105	;'i'
   259   001056  64                 	db	100	;'d'
   260   001057  20                 	db	32
   261   001058  53                 	db	83	;'S'
   262   001059  74                 	db	116	;'t'
   263   00105A  72                 	db	114	;'r'
   264   00105B  61                 	db	97	;'a'
   265   00105C  73                 	db	115	;'s'
   266   00105D  61                 	db	97	;'a'
   267   00105E  6B                 	db	107	;'k'
   268   00105F  20                 	db	32
   269   001060  20                 	db	32
   270   001061  20                 	db	32
   271   001062  00                 	db	0
   272   001063                     STR_3:
   273   001063  52                 	db	82	;'R'
   274   001064  42                 	db	66	;'B'
   275   001065  30                 	db	48	;'0'
   276   001066  2D                 	db	45
   277   001067  41                 	db	65	;'A'
   278   001068  32                 	db	50	;'2'
   279   001069  2C                 	db	44
   280   00106A  20                 	db	32
   281   00106B  42                 	db	66	;'B'
   282   00106C  52                 	db	82	;'R'
   283   00106D  3A                 	db	58	;':'
   284   00106E  20                 	db	32
   285   00106F  39                 	db	57	;'9'
   286   001070  36                 	db	54	;'6'
   287   001071  30                 	db	48	;'0'
   288   001072  30                 	db	48	;'0'
   289   001073  00                 	db	0
   290   001074                     STR_4:
   291   001074  31                 	db	49	;'1'
   292   001075  3A                 	db	58	;':'
   293   001076  74                 	db	116	;'t'
   294   001077  72                 	db	114	;'r'
   295   001078  2C                 	db	44
   296   001079  32                 	db	50	;'2'
   297   00107A  3A                 	db	58	;':'
   298   00107B  73                 	db	115	;'s'
   299   00107C  69                 	db	105	;'i'
   300   00107D  6E                 	db	110	;'n'
   301   00107E  2C                 	db	44
   302   00107F  33                 	db	51	;'3'
   303   001080  3A                 	db	58	;':'
   304   001081  70                 	db	112	;'p'
   305   001082  69                 	db	105	;'i'
   306   001083  6C                 	db	108	;'l'
   307   001084  00                 	db	0
   308   001085                     STR_16:
   309   001085  28                 	db	40
   310   001086  6E                 	db	110	;'n'
   311   001087  75                 	db	117	;'u'
   312   001088  6C                 	db	108	;'l'
   313   001089  6C                 	db	108	;'l'
   314   00108A  29                 	db	41
   315   00108B  00                 	db	0
   316   00108C                     STR_12:
   317   00108C  4D                 	db	77	;'M'
   318   00108D  55                 	db	85	;'U'
   319   00108E  53                 	db	83	;'S'
   320   00108F  49                 	db	73	;'I'
   321   001090  43                 	db	67	;'C'
   322   001091  00                 	db	0
   323   001092                     STR_14:
   324   001092  3E                 	db	62	;'>'
   325   001093  25                 	db	37
   326   001094  2D                 	db	45
   327   001095  2A                 	db	42
   328   001096  73                 	db	115	;'s'
   329   001097  00                 	db	0
   330   001098                     STR_11:
   331   001098  47                 	db	71	;'G'
   332   001099  41                 	db	65	;'A'
   333   00109A  4D                 	db	77	;'M'
   334   00109B  45                 	db	69	;'E'
   335   00109C  00                 	db	0
   336   00109D                     STR_6:
   337   00109D  47                 	db	71	;'G'
   338   00109E  50                 	db	80	;'P'
   339   00109F  49                 	db	73	;'I'
   340   0010A0  4F                 	db	79	;'O'
   341   0010A1  00                 	db	0
   342   0010A2                     STR_7:
   343   0010A2  55                 	db	85	;'U'
   344   0010A3  41                 	db	65	;'A'
   345   0010A4  52                 	db	82	;'R'
   346   0010A5  54                 	db	84	;'T'
   347   0010A6  00                 	db	0
   348   0010A7                     STR_5:
   349   0010A7  25                 	db	37
   350   0010A8  64                 	db	100	;'d'
   351   0010A9  20                 	db	32
   352   0010AA  0D                 	db	13
   353   0010AB  00                 	db	0
   354   0010AC                     STR_10:
   355   0010AC  44                 	db	68	;'D'
   356   0010AD  41                 	db	65	;'A'
   357   0010AE  43                 	db	67	;'C'
   358   0010AF  00                 	db	0
   359   0010B0                     STR_9:
   360   0010B0  41                 	db	65	;'A'
   361   0010B1  44                 	db	68	;'D'
   362   0010B2  43                 	db	67	;'C'
   363   0010B3  00                 	db	0
   364   0010B4                     STR_8:
   365   0010B4  50                 	db	80	;'P'
   366   0010B5  57                 	db	87	;'W'
   367   0010B6  4D                 	db	77	;'M'
   368   0010B7  00                 	db	0
   369   0010B8  00                 	db	0	; dummy byte at the end
   370   000000                     
   371                           ; #config settings
   372                           
   373                           	psect	cinit
   374   003E6A                     __pcinit:
   375                           	callstack 0
   376   003E6A                     start_initialization:
   377                           	callstack 0
   378   003E6A                     __initialization:
   379                           	callstack 0
   380                           
   381                           ; Initialize objects allocated to BANK0 (32 bytes)
   382                           ; load TBLPTR registers with __pidataBANK0
   383   003E6A  0E86               	movlw	low __pidataBANK0
   384   003E6C  6EF6               	movwf	tblptrl,c
   385   003E6E  0E40               	movlw	high __pidataBANK0
   386   003E70  6EF7               	movwf	tblptrh,c
   387   003E72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   388   003E74  6EF8               	movwf	tblptru,c
   389   003E76  EE00  F0C1         	lfsr	0,__pdataBANK0
   390   003E7A  EE10 F020          	lfsr	1,32
   391   003E7E                     copy_data0:
   392   003E7E  0009               	tblrd		*+
   393   003E80  CFF5 FFEE          	movff	tablat,postinc0
   394   003E84  50E5               	movf	postdec1,w,c
   395   003E86  50E1               	movf	fsr1l,w,c
   396   003E88  E1FA               	bnz	copy_data0
   397                           
   398                           ; Clear objects allocated to BANK1 (32 bytes)
   399   003E8A  EE01  F000         	lfsr	0,__pbssBANK1
   400   003E8E  0E20               	movlw	32
   401   003E90                     clear_0:
   402   003E90  6AEE               	clrf	postinc0,c
   403   003E92  06E8               	decf	wreg,f,c
   404   003E94  E1FD               	bnz	clear_0
   405                           
   406                           ; Clear objects allocated to BANK0 (13 bytes)
   407   003E96  EE00  F0E1         	lfsr	0,__pbssBANK0
   408   003E9A  0E0D               	movlw	13
   409   003E9C                     clear_1:
   410   003E9C  6AEE               	clrf	postinc0,c
   411   003E9E  06E8               	decf	wreg,f,c
   412   003EA0  E1FD               	bnz	clear_1
   413   003EA2                     end_of_initialization:
   414                           	callstack 0
   415   003EA2                     __end_of__initialization:
   416                           	callstack 0
   417   003EA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   418   003EA4  6EF8               	movwf	tblptru,c
   419   003EA6  0100               	movlb	0
   420   003EA8  EF6E  F016         	goto	_main	;jump to C main() function
   421                           
   422                           	psect	bssBANK0
   423   0000E1                     __pbssBANK0:
   424                           	callstack 0
   425   0000E1                     fabsf@F465:
   426                           	callstack 0
   427   0000E1                     	ds	4
   428   0000E5                     ___rem_pio2f@F526:
   429                           	callstack 0
   430   0000E5                     	ds	4
   431   0000E9                     _width:
   432                           	callstack 0
   433   0000E9                     	ds	2
   434   0000EB                     _prec:
   435                           	callstack 0
   436   0000EB                     	ds	2
   437   0000ED                     _flags:
   438                           	callstack 0
   439   0000ED                     	ds	1
   440                           
   441                           	psect	dataBANK0
   442   0000C1                     __pdataBANK0:
   443                           	callstack 0
   444   0000C1                     runGPIO@F6981:
   445                           	callstack 0
   446   0000C1                     	ds	12
   447   0000CD                     runGPIO@F6963:
   448                           	callstack 0
   449   0000CD                     	ds	12
   450   0000D9                     moveDisplay@F6950:
   451                           	callstack 0
   452   0000D9                     	ds	8
   453                           
   454                           	psect	bssBANK1
   455   000100                     __pbssBANK1:
   456                           	callstack 0
   457   000100                     _dbuf:
   458                           	callstack 0
   459   000100                     	ds	32
   460                           
   461                           	psect	cstackBANK0
   462   000060                     __pcstackBANK0:
   463                           	callstack 0
   464   000060                     ___cosdf@r:
   465                           	callstack 0
   466   000060                     ___sindf@r:
   467                           	callstack 0
   468   000060                     moveDisplay@menuItem1:
   469                           	callstack 0
   470                           
   471                           ; 17 bytes @ 0x0
   472   000060                     	ds	4
   473   000064                     ___sindf@w:
   474                           	callstack 0
   475   000064                     ___cosdf$3125:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x4
   479   000064                     	ds	4
   480   000068                     ___cosdf$3126:
   481                           	callstack 0
   482   000068                     ___sindf$3129:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x8
   486   000068                     	ds	4
   487   00006C                     ___cosdf$3127:
   488                           	callstack 0
   489   00006C                     ___sindf$3130:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0xC
   493   00006C                     	ds	4
   494   000070                     ___cosdf@w:
   495                           	callstack 0
   496   000070                     ___sindf$3131:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x10
   500   000070                     	ds	1
   501   000071                     moveDisplay@menuItem2:
   502                           	callstack 0
   503                           
   504                           ; 17 bytes @ 0x11
   505   000071                     	ds	3
   506   000074                     ___cosdf@z:
   507                           	callstack 0
   508   000074                     ___sindf@s:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x14
   512   000074                     	ds	4
   513   000078                     ?___flneg:
   514                           	callstack 0
   515   000078                     ___flneg@f1:
   516                           	callstack 0
   517   000078                     ___sindf@z:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x18
   521   000078                     	ds	4
   522   00007C                     ?___rem_pio2f:
   523                           	callstack 0
   524   00007C                     ___rem_pio2f@x:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x1C
   528   00007C                     	ds	4
   529   000080                     ___rem_pio2f@y:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x20
   533   000080                     	ds	1
   534   000081                     ___rem_pio2f@ty:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x21
   538   000081                     	ds	1
   539   000082                     moveDisplay@menuItems:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x22
   543   000082                     	ds	3
   544   000085                     ___rem_pio2f$3128:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x25
   548   000085                     	ds	4
   549   000089                     ___rem_pio2f@sign:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x29
   553   000089                     	ds	1
   554   00008A                     moveDisplay@menuI:
   555                           	callstack 0
   556   00008A                     ___rem_pio2f@ux:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x2A
   560   00008A                     	ds	4
   561   00008E                     ___rem_pio2f@fn:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x2E
   565   00008E                     	ds	4
   566   000092                     ___rem_pio2f@t:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x32
   570   000092                     	ds	4
   571   000096                     ___rem_pio2f@n:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x36
   575   000096                     	ds	4
   576   00009A                     ?_sinf:
   577                           	callstack 0
   578   00009A                     sinf@x:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x3A
   582   00009A                     	ds	4
   583   00009E                     _sinf$2859:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x3E
   587   00009E                     	ds	4
   588   0000A2                     _sinf$2860:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x42
   592   0000A2                     	ds	4
   593   0000A6                     sinf@n:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x46
   597   0000A6                     	ds	1
   598   0000A7                     sinf@sign:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x47
   602   0000A7                     	ds	1
   603   0000A8                     _sinf$3124:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x48
   607   0000A8                     	ds	4
   608   0000AC                     sinf@y:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x4C
   612   0000AC                     	ds	4
   613   0000B0                     sinf@ux:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x50
   617   0000B0                     	ds	4
   618   0000B4                     _runDAC$3121:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x54
   622   0000B4                     	ds	4
   623   0000B8                     _runDAC$3122:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x58
   627   0000B8                     	ds	4
   628   0000BC                     runDAC@keepState:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x5C
   632   0000BC                     	ds	1
   633   0000BD                     runDAC@selectModeDAC:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x5D
   637   0000BD                     	ds	1
   638   0000BE                     runDAC@DACindex:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x5E
   642   0000BE                     	ds	1
   643   0000BF                     main@setUpAgain:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x5F
   647   0000BF                     	ds	1
   648   0000C0                     main@menuI:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x60
   652   0000C0                     	ds	1
   653                           
   654                           	psect	cstackCOMRAM
   655   000001                     __pcstackCOMRAM:
   656                           	callstack 0
   657   000001                     ?___wmul:
   658                           	callstack 0
   659   000001                     ?___awdiv:
   660                           	callstack 0
   661   000001                     ?___awmod:
   662                           	callstack 0
   663   000001                     ?_fabsf:
   664                           	callstack 0
   665   000001                     ?___xxtofl:
   666                           	callstack 0
   667   000001                     LCD_Send@data:
   668                           	callstack 0
   669   000001                     SPI_write@MSB:
   670                           	callstack 0
   671   000001                     putch@data:
   672                           	callstack 0
   673   000001                     LED1_Control@state:
   674                           	callstack 0
   675   000001                     LED2_Control@state:
   676                           	callstack 0
   677   000001                     LED3_Control@state:
   678                           	callstack 0
   679   000001                     LED4_Control@state:
   680                           	callstack 0
   681   000001                     LED5_Control@state:
   682                           	callstack 0
   683   000001                     LED6_Control@state:
   684                           	callstack 0
   685   000001                     ___wmul@multiplier:
   686                           	callstack 0
   687   000001                     ___awdiv@dividend:
   688                           	callstack 0
   689   000001                     ___awmod@dividend:
   690                           	callstack 0
   691   000001                     ___xxtofl@val:
   692                           	callstack 0
   693   000001                     fabsf@x:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x0
   697   000001                     	ds	1
   698   000002                     ??_LCD_Init:
   699   000002                     ??_runGPIO:
   700   000002                     SPI_write@LSB:
   701                           	callstack 0
   702   000002                     LCD_ShowString@textData:
   703                           	callstack 0
   704   000002                     fputc@c:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x1
   708   000002                     	ds	1
   709   000003                     SPI_write@data:
   710                           	callstack 0
   711   000003                     ___wmul@multiplicand:
   712                           	callstack 0
   713   000003                     ___awdiv@divisor:
   714                           	callstack 0
   715   000003                     ___awmod@divisor:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x2
   719   000003                     	ds	1
   720   000004                     ??_LCD_ShowString:
   721   000004                     fputc@fp:
   722                           	callstack 0
   723   000004                     runGPIO@states:
   724                           	callstack 0
   725                           
   726                           ; 12 bytes @ 0x3
   727   000004                     	ds	1
   728   000005                     ??___xxtofl:
   729   000005                     ___awdiv@counter:
   730                           	callstack 0
   731   000005                     ___awmod@counter:
   732                           	callstack 0
   733   000005                     ___wmul@product:
   734                           	callstack 0
   735   000005                     fabsf@u:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x4
   739   000005                     	ds	1
   740   000006                     ??_fputc:
   741   000006                     LCD_ShowString@lineNum:
   742                           	callstack 0
   743   000006                     ___awdiv@sign:
   744                           	callstack 0
   745   000006                     ___awmod@sign:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x5
   749   000006                     	ds	1
   750   000007                     ?_abs:
   751                           	callstack 0
   752   000007                     ?_read_prec_or_width:
   753                           	callstack 0
   754   000007                     LCD_ShowString@i:
   755                           	callstack 0
   756   000007                     read_prec_or_width@fmt:
   757                           	callstack 0
   758   000007                     ___awdiv@quotient:
   759                           	callstack 0
   760   000007                     abs@a:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x6
   764   000007                     	ds	1
   765   000008                     read_prec_or_width@ap:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0x7
   769   000008                     	ds	1
   770   000009                     ??_abs:
   771   000009                     ___xxtofl@sign:
   772                           	callstack 0
   773   000009                     read_prec_or_width@c:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x8
   777   000009                     	ds	1
   778   00000A                     ___xxtofl@exp:
   779                           	callstack 0
   780   00000A                     read_prec_or_width@n:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x9
   784   00000A                     	ds	1
   785   00000B                     stoa@fp:
   786                           	callstack 0
   787   00000B                     fputs@s:
   788                           	callstack 0
   789   00000B                     ___xxtofl@arg:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0xA
   793   00000B                     	ds	2
   794   00000D                     stoa@s:
   795                           	callstack 0
   796   00000D                     fputs@fp:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0xC
   800   00000D                     	ds	2
   801   00000F                     ??_stoa:
   802   00000F                     ?___flmul:
   803                           	callstack 0
   804   00000F                     fputs@c:
   805                           	callstack 0
   806   00000F                     ___flmul@b:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0xE
   810   00000F                     	ds	1
   811   000010                     fputs@i:
   812                           	callstack 0
   813   000010                     runGPIO@LEDControl:
   814                           	callstack 0
   815                           
   816                           ; 12 bytes @ 0xF
   817   000010                     	ds	1
   818   000011                     stoa@p:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x10
   822   000011                     	ds	1
   823   000012                     pad@fp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x11
   827   000012                     	ds	1
   828   000013                     stoa@w:
   829                           	callstack 0
   830   000013                     ___flmul@a:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x12
   834   000013                     	ds	1
   835   000014                     pad@buf:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x13
   839   000014                     	ds	1
   840   000015                     stoa@cp:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x14
   844   000015                     	ds	1
   845   000016                     pad@p:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x15
   849   000016                     	ds	1
   850   000017                     ??___flmul:
   851   000017                     stoa@l:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x16
   855   000017                     	ds	1
   856   000018                     ??_pad:
   857                           
   858                           ; 1 bytes @ 0x17
   859   000018                     	ds	1
   860   000019                     pad@i:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x18
   864   000019                     	ds	2
   865   00001B                     ___flmul@sign:
   866                           	callstack 0
   867   00001B                     dtoa@fp:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x1A
   871   00001B                     	ds	1
   872   00001C                     runGPIO@GPIOreverse:
   873                           	callstack 0
   874   00001C                     ___flmul@grs:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x1B
   878   00001C                     	ds	1
   879   00001D                     runGPIO@numStates:
   880                           	callstack 0
   881   00001D                     dtoa@d:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x1C
   885   00001D                     	ds	2
   886   00001F                     runGPIO@keepState:
   887                           	callstack 0
   888   00001F                     _dtoa$2736:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x1E
   892   00001F                     	ds	1
   893   000020                     ___flmul@aexp:
   894                           	callstack 0
   895   000020                     runGPIO@i:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x1F
   899   000020                     	ds	1
   900   000021                     ___flmul@bexp:
   901                           	callstack 0
   902   000021                     dtoa@p:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x20
   906   000021                     	ds	1
   907   000022                     runGPIO@j:
   908                           	callstack 0
   909   000022                     dtoa@w:
   910                           	callstack 0
   911   000022                     ___flmul@prod:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x21
   915   000022                     	ds	2
   916   000024                     dtoa@s:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x23
   920   000024                     	ds	1
   921   000025                     dtoa@i:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x24
   925   000025                     	ds	1
   926   000026                     ___flmul@temp:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x25
   930   000026                     	ds	1
   931   000027                     vfpfcnvrt@fp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x26
   935   000027                     	ds	1
   936   000028                     ?___fldiv:
   937                           	callstack 0
   938   000028                     ___fldiv@b:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x27
   942   000028                     	ds	1
   943   000029                     vfpfcnvrt@fmt:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x28
   947   000029                     	ds	1
   948   00002A                     vfpfcnvrt@ap:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x29
   952   00002A                     	ds	1
   953   00002B                     ??_vfpfcnvrt:
   954                           
   955                           ; 1 bytes @ 0x2A
   956   00002B                     	ds	1
   957   00002C                     ___fldiv@a:
   958                           	callstack 0
   959   00002C                     vfpfcnvrt@convarg:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x2B
   963   00002C                     	ds	4
   964   000030                     ??___fldiv:
   965   000030                     vfpfcnvrt@cp:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x2F
   969   000030                     	ds	1
   970   000031                     vfpfcnvrt@done:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x30
   974   000031                     	ds	1
   975   000032                     ?_vfprintf:
   976                           	callstack 0
   977   000032                     vfprintf@fp:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x31
   981   000032                     	ds	2
   982   000034                     vfprintf@fmt:
   983                           	callstack 0
   984   000034                     ___fldiv@rem:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x33
   988   000034                     	ds	1
   989   000035                     vfprintf@ap:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x34
   993   000035                     	ds	1
   994   000036                     vfprintf@cfmt:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x35
   998   000036                     	ds	1
   999   000037                     ?_printf:
  1000                           	callstack 0
  1001   000037                     ?_sprintf:
  1002                           	callstack 0
  1003   000037                     sprintf@s:
  1004                           	callstack 0
  1005   000037                     printf@fmt:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x36
  1009   000037                     	ds	1
  1010   000038                     ___fldiv@sign:
  1011                           	callstack 0
  1012   000038                     sprintf@fmt:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x37
  1016   000038                     	ds	1
  1017   000039                     ___fldiv@new_exp:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x38
  1021   000039                     	ds	1
  1022   00003A                     printf@ap:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x39
  1026   00003A                     	ds	1
  1027   00003B                     ___fldiv@grs:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x3A
  1031   00003B                     	ds	2
  1032   00003D                     sprintf@ap:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x3C
  1036   00003D                     	ds	1
  1037   00003E                     sprintf@f:
  1038                           	callstack 0
  1039                           
  1040                           ; 12 bytes @ 0x3D
  1041   00003E                     	ds	1
  1042   00003F                     ___fldiv@bexp:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x3E
  1046   00003F                     	ds	1
  1047   000040                     ___fldiv@aexp:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x3F
  1051   000040                     	ds	1
  1052   000041                     ?___fladd:
  1053                           	callstack 0
  1054   000041                     ___fladd@b:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x40
  1058   000041                     	ds	4
  1059   000045                     ___fladd@a:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x44
  1063   000045                     	ds	4
  1064   000049                     ??___fladd:
  1065                           
  1066                           ; 1 bytes @ 0x48
  1067   000049                     	ds	1
  1068   00004A                     moveDisplay@where:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x49
  1072   00004A                     	ds	1
  1073   00004B                     ??_moveDisplay:
  1074                           
  1075                           ; 1 bytes @ 0x4A
  1076   00004B                     	ds	2
  1077   00004D                     ___fladd@signs:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x4C
  1081   00004D                     	ds	1
  1082   00004E                     ___fladd@aexp:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x4D
  1086   00004E                     	ds	1
  1087   00004F                     ___fladd@bexp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x4E
  1091   00004F                     	ds	1
  1092   000050                     ___fladd@grs:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x4F
  1096   000050                     	ds	1
  1097   000051                     ?___flsub:
  1098                           	callstack 0
  1099   000051                     ?___sindf:
  1100                           	callstack 0
  1101   000051                     ?___cosdf:
  1102                           	callstack 0
  1103   000051                     ?___fltol:
  1104                           	callstack 0
  1105   000051                     ___fltol@f1:
  1106                           	callstack 0
  1107   000051                     ___flsub@b:
  1108                           	callstack 0
  1109   000051                     ___cosdf@x:
  1110                           	callstack 0
  1111   000051                     ___sindf@x:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x50
  1115   000051                     	ds	4
  1116   000055                     ??___fltol:
  1117   000055                     ___flsub@a:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x54
  1121   000055                     	ds	4
  1122   000059                     ___fltol@sign1:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x58
  1126   000059                     	ds	1
  1127   00005A                     ___fltol@exp1:
  1128                           	callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x59
  1131   00005A                     	ds	1
  1132   00005B                     ??___rem_pio2f:
  1133                           
  1134                           ; 1 bytes @ 0x5A
  1135   00005B                     	ds	2
  1136   00005D                     ??_runDAC:
  1137   00005D                     
  1138                           ; 1 bytes @ 0x5C
  1139   00005D                     	ds	1
  1140   00005E                     ??_main:
  1141                           
  1142                           ; 1 bytes @ 0x5D
  1143   00005E                     	ds	2
  1144                           
  1145 ;;
  1146 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1147 ;;
  1148 ;; *************** function _main *****************
  1149 ;; Defined at:
  1150 ;;		line 10 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  menuI           1   96[BANK0 ] unsigned char 
  1155 ;;  setUpAgain      1   95[BANK0 ] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        4 bytes
  1170 ;; Hardware stack levels required when called: 9
  1171 ;; This function calls:
  1172 ;;		_LCD_Init
  1173 ;;		_LCD_ShowString
  1174 ;;		_moveDisplay
  1175 ;;		_runDAC
  1176 ;;		_runGPIO
  1177 ;; This function is called by:
  1178 ;;		Startup code after reset
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text0
  1183   002CDC                     __ptext0:
  1184                           	callstack 0
  1185   002CDC                     _main:
  1186                           	callstack 22
  1187   002CDC                     
  1188                           ;main.c: 12:     TRISCbits.RC0 = 1;
  1189   002CDC  8094               	bsf	148,0,c	;volatile
  1190                           
  1191                           ;main.c: 13:     TRISAbits.RA4 = 1;
  1192   002CDE  8892               	bsf	146,4,c	;volatile
  1193                           
  1194                           ;main.c: 14:     TRISAbits.RA3 = 1;
  1195   002CE0  8692               	bsf	146,3,c	;volatile
  1196                           
  1197                           ;main.c: 15:     TRISAbits.RA2 = 1;
  1198   002CE2  8492               	bsf	146,2,c	;volatile
  1199                           
  1200                           ;main.c: 16:     ANSELAbits.ANSA3 = 0;
  1201   002CE4  010F               	movlb	15	; () banked
  1202   002CE6  9738               	bcf	56,3,b	;volatile
  1203                           
  1204                           ;main.c: 17:     ANSELAbits.ANSA2 = 0;
  1205   002CE8  9538               	bcf	56,2,b	;volatile
  1206                           
  1207                           ;main.c: 20:     TRISDbits.RD2 = 0;
  1208   002CEA  9495               	bcf	149,2,c	;volatile
  1209                           
  1210                           ;main.c: 21:     TRISDbits.RD3 = 0;
  1211   002CEC  9695               	bcf	149,3,c	;volatile
  1212                           
  1213                           ;main.c: 22:     TRISCbits.RC4 = 0;
  1214   002CEE  9894               	bcf	148,4,c	;volatile
  1215                           
  1216                           ;main.c: 23:     TRISDbits.RD4 = 0;
  1217   002CF0  9895               	bcf	149,4,c	;volatile
  1218                           
  1219                           ;main.c: 24:     TRISDbits.RD5 = 0;
  1220   002CF2  9A95               	bcf	149,5,c	;volatile
  1221                           
  1222                           ;main.c: 25:     TRISDbits.RD6 = 0;
  1223   002CF4  9C95               	bcf	149,6,c	;volatile
  1224                           
  1225                           ;main.c: 26:     LATDbits.LD2 = 1;
  1226   002CF6  848C               	bsf	140,2,c	;volatile
  1227                           
  1228                           ;main.c: 27:     LATDbits.LD3 = 1;
  1229   002CF8  868C               	bsf	140,3,c	;volatile
  1230                           
  1231                           ;main.c: 28:     LATCbits.LC4 = 1;
  1232   002CFA  888B               	bsf	139,4,c	;volatile
  1233                           
  1234                           ;main.c: 29:     LATDbits.LD4 = 1;
  1235   002CFC  888C               	bsf	140,4,c	;volatile
  1236                           
  1237                           ;main.c: 30:     LATDbits.LD5 = 1;
  1238   002CFE  8A8C               	bsf	140,5,c	;volatile
  1239                           
  1240                           ;main.c: 31:     LATDbits.LD6 = 1;
  1241   002D00  8C8C               	bsf	140,6,c	;volatile
  1242   002D02                     
  1243                           ; BSR set to: 15
  1244                           ;main.c: 34:     LCD_Init();
  1245   002D02  EC6F  F01C         	call	_LCD_Init	;wreg free
  1246   002D06                     
  1247                           ;main.c: 35:     uint8_t menuI = 0;
  1248   002D06  0E00               	movlw	0
  1249   002D08  0100               	movlb	0	; () banked
  1250   002D0A  6FC0               	movwf	main@menuI& (0+255),b
  1251   002D0C                     
  1252                           ; BSR set to: 0
  1253                           ;main.c: 36:     uint8_t setUpAgain = 0;
  1254   002D0C  0E00               	movlw	0
  1255   002D0E  6FBF               	movwf	main@setUpAgain& (0+255),b
  1256   002D10                     
  1257                           ; BSR set to: 0
  1258                           ;main.c: 39:     LCD_ShowString((char)1, "Vytvoril:       ");
  1259   002D10  0E41               	movlw	low STR_1
  1260   002D12  6E02               	movwf	LCD_ShowString@textData^0,c
  1261   002D14  5002               	movf	LCD_ShowString@textData^0,w,c
  1262   002D16  A4D8               	btfss	status,2,c
  1263   002D18  0E10               	movlw	high __smallconst
  1264   002D1A  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1265   002D1C  0E01               	movlw	1
  1266   002D1E  EC9B  F01D         	call	_LCD_ShowString
  1267   002D22                     
  1268                           ;main.c: 40:     LCD_ShowString((char)2, "David Strasak   ");
  1269   002D22  0E52               	movlw	low STR_2
  1270   002D24  6E02               	movwf	LCD_ShowString@textData^0,c
  1271   002D26  5002               	movf	LCD_ShowString@textData^0,w,c
  1272   002D28  A4D8               	btfss	status,2,c
  1273   002D2A  0E10               	movlw	high __smallconst
  1274   002D2C  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1275   002D2E  0E02               	movlw	2
  1276   002D30  EC9B  F01D         	call	_LCD_ShowString
  1277   002D34                     
  1278                           ;main.c: 41:     _delay((unsigned long)((3000)*(32E6/4000.0)));
  1279   002D34  0E7A               	movlw	122
  1280   002D36  6E5F               	movwf	(??_main+1)^0,c
  1281   002D38  0EC1               	movlw	193
  1282   002D3A  6E5E               	movwf	??_main^0,c
  1283   002D3C  0E82               	movlw	130
  1284   002D3E                     u4927:
  1285   002D3E  2EE8               	decfsz	wreg,f,c
  1286   002D40  D7FE               	bra	u4927
  1287   002D42  2E5E               	decfsz	??_main^0,f,c
  1288   002D44  D7FC               	bra	u4927
  1289   002D46  2E5F               	decfsz	(??_main+1)^0,f,c
  1290   002D48  D7FA               	bra	u4927
  1291   002D4A                     
  1292                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1293   002D4A  0E00               	movlw	0
  1294   002D4C  6E4A               	movwf	moveDisplay@where^0,c
  1295   002D4E  0100               	movlb	0	; () banked
  1296   002D50  51C0               	movf	main@menuI& (0+255),w,b
  1297   002D52  ECF9  F01B         	call	_moveDisplay
  1298   002D56  0100               	movlb	0	; () banked
  1299   002D58  6FC0               	movwf	main@menuI& (0+255),b
  1300   002D5A                     l4135:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;main.c: 47:         if(PORTCbits.RC0){
  1304   002D5A  A082               	btfss	130,0,c	;volatile
  1305   002D5C  EFB2  F016         	goto	u4821
  1306   002D60  EFB4  F016         	goto	u4820
  1307   002D64                     u4821:
  1308   002D64  EFD6  F016         	goto	l4145
  1309   002D68                     u4820:
  1310   002D68                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1313   002D68  0E03               	movlw	3
  1314   002D6A  6E5F               	movwf	(??_main+1)^0,c
  1315   002D6C  0E08               	movlw	8
  1316   002D6E  6E5E               	movwf	??_main^0,c
  1317   002D70  0E77               	movlw	119
  1318   002D72                     u4937:
  1319   002D72  2EE8               	decfsz	wreg,f,c
  1320   002D74  D7FE               	bra	u4937
  1321   002D76  2E5E               	decfsz	??_main^0,f,c
  1322   002D78  D7FC               	bra	u4937
  1323   002D7A  2E5F               	decfsz	(??_main+1)^0,f,c
  1324   002D7C  D7FA               	bra	u4937
  1325   002D7E  0000               	nop	
  1326   002D80                     
  1327                           ;main.c: 49:             if(PORTCbits.RC0){
  1328   002D80  A082               	btfss	130,0,c	;volatile
  1329   002D82  EFC5  F016         	goto	u4831
  1330   002D86  EFC7  F016         	goto	u4830
  1331   002D8A                     u4831:
  1332   002D8A  EFD6  F016         	goto	l4145
  1333   002D8E                     u4830:
  1334   002D8E                     l36:
  1335   002D8E  B082               	btfsc	130,0,c	;volatile
  1336   002D90  EFCC  F016         	goto	u4841
  1337   002D94  EFCE  F016         	goto	u4840
  1338   002D98                     u4841:
  1339   002D98  EFC7  F016         	goto	l36
  1340   002D9C                     u4840:
  1341   002D9C                     
  1342                           ;main.c: 51:                 menuI = moveDisplay(menuI,2);
  1343   002D9C  0E02               	movlw	2
  1344   002D9E  6E4A               	movwf	moveDisplay@where^0,c
  1345   002DA0  0100               	movlb	0	; () banked
  1346   002DA2  51C0               	movf	main@menuI& (0+255),w,b
  1347   002DA4  ECF9  F01B         	call	_moveDisplay
  1348   002DA8  0100               	movlb	0	; () banked
  1349   002DAA  6FC0               	movwf	main@menuI& (0+255),b
  1350   002DAC                     l4145:
  1351                           
  1352                           ;main.c: 54:         if(PORTAbits.RA4){
  1353   002DAC  A880               	btfss	128,4,c	;volatile
  1354   002DAE  EFDB  F016         	goto	u4851
  1355   002DB2  EFDD  F016         	goto	u4850
  1356   002DB6                     u4851:
  1357   002DB6  EFFF  F016         	goto	l4155
  1358   002DBA                     u4850:
  1359   002DBA                     
  1360                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1361   002DBA  0E03               	movlw	3
  1362   002DBC  6E5F               	movwf	(??_main+1)^0,c
  1363   002DBE  0E08               	movlw	8
  1364   002DC0  6E5E               	movwf	??_main^0,c
  1365   002DC2  0E77               	movlw	119
  1366   002DC4                     u4947:
  1367   002DC4  2EE8               	decfsz	wreg,f,c
  1368   002DC6  D7FE               	bra	u4947
  1369   002DC8  2E5E               	decfsz	??_main^0,f,c
  1370   002DCA  D7FC               	bra	u4947
  1371   002DCC  2E5F               	decfsz	(??_main+1)^0,f,c
  1372   002DCE  D7FA               	bra	u4947
  1373   002DD0  0000               	nop	
  1374   002DD2                     
  1375                           ;main.c: 56:             if(PORTAbits.RA4){
  1376   002DD2  A880               	btfss	128,4,c	;volatile
  1377   002DD4  EFEE  F016         	goto	u4861
  1378   002DD8  EFF0  F016         	goto	u4860
  1379   002DDC                     u4861:
  1380   002DDC  EFFF  F016         	goto	l4155
  1381   002DE0                     u4860:
  1382   002DE0                     l41:
  1383   002DE0  B880               	btfsc	128,4,c	;volatile
  1384   002DE2  EFF5  F016         	goto	u4871
  1385   002DE6  EFF7  F016         	goto	u4870
  1386   002DEA                     u4871:
  1387   002DEA  EFF0  F016         	goto	l41
  1388   002DEE                     u4870:
  1389   002DEE                     
  1390                           ;main.c: 58:                 menuI = moveDisplay(menuI,1);
  1391   002DEE  0E01               	movlw	1
  1392   002DF0  6E4A               	movwf	moveDisplay@where^0,c
  1393   002DF2  0100               	movlb	0	; () banked
  1394   002DF4  51C0               	movf	main@menuI& (0+255),w,b
  1395   002DF6  ECF9  F01B         	call	_moveDisplay
  1396   002DFA  0100               	movlb	0	; () banked
  1397   002DFC  6FC0               	movwf	main@menuI& (0+255),b
  1398   002DFE                     l4155:
  1399                           
  1400                           ;main.c: 61:         if(PORTAbits.RA3){
  1401   002DFE  A680               	btfss	128,3,c	;volatile
  1402   002E00  EF04  F017         	goto	u4881
  1403   002E04  EF06  F017         	goto	u4880
  1404   002E08                     u4881:
  1405   002E08  EF63  F017         	goto	l44
  1406   002E0C                     u4880:
  1407   002E0C                     
  1408                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1409   002E0C  0E03               	movlw	3
  1410   002E0E  6E5F               	movwf	(??_main+1)^0,c
  1411   002E10  0E08               	movlw	8
  1412   002E12  6E5E               	movwf	??_main^0,c
  1413   002E14  0E77               	movlw	119
  1414   002E16                     u4957:
  1415   002E16  2EE8               	decfsz	wreg,f,c
  1416   002E18  D7FE               	bra	u4957
  1417   002E1A  2E5E               	decfsz	??_main^0,f,c
  1418   002E1C  D7FC               	bra	u4957
  1419   002E1E  2E5F               	decfsz	(??_main+1)^0,f,c
  1420   002E20  D7FA               	bra	u4957
  1421   002E22  0000               	nop	
  1422   002E24                     
  1423                           ;main.c: 63:             if(PORTAbits.RA3){
  1424   002E24  A680               	btfss	128,3,c	;volatile
  1425   002E26  EF17  F017         	goto	u4891
  1426   002E2A  EF19  F017         	goto	u4890
  1427   002E2E                     u4891:
  1428   002E2E  EF63  F017         	goto	l44
  1429   002E32                     u4890:
  1430   002E32                     l46:
  1431   002E32  B680               	btfsc	128,3,c	;volatile
  1432   002E34  EF1E  F017         	goto	u4901
  1433   002E38  EF20  F017         	goto	u4900
  1434   002E3C                     u4901:
  1435   002E3C  EF19  F017         	goto	l46
  1436   002E40                     u4900:
  1437   002E40  EF3F  F017         	goto	l4173
  1438   002E44                     l4163:
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 67:                         runGPIO();
  1442   002E44  EC53  F019         	call	_runGPIO	;wreg free
  1443                           
  1444                           ;main.c: 68:                         break;
  1445   002E48  EF63  F017         	goto	l44
  1446   002E4C                     l4165:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 76:                         LCD_ShowString((char)1, "RB0-A2, BR: 9600");
  1450   002E4C  0E63               	movlw	low STR_3
  1451   002E4E  6E02               	movwf	LCD_ShowString@textData^0,c
  1452   002E50  5002               	movf	LCD_ShowString@textData^0,w,c
  1453   002E52  A4D8               	btfss	status,2,c
  1454   002E54  0E10               	movlw	high __smallconst
  1455   002E56  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1456   002E58  0E01               	movlw	1
  1457   002E5A  EC9B  F01D         	call	_LCD_ShowString
  1458                           
  1459                           ;main.c: 77:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1460   002E5E  0E74               	movlw	low STR_4
  1461   002E60  6E02               	movwf	LCD_ShowString@textData^0,c
  1462   002E62  5002               	movf	LCD_ShowString@textData^0,w,c
  1463   002E64  A4D8               	btfss	status,2,c
  1464   002E66  0E10               	movlw	high __smallconst
  1465   002E68  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1466   002E6A  0E02               	movlw	2
  1467   002E6C  EC9B  F01D         	call	_LCD_ShowString
  1468   002E70                     
  1469                           ;main.c: 78:                         runDAC();
  1470   002E70  EC32  F014         	call	_runDAC	;wreg free
  1471   002E74                     
  1472                           ;main.c: 79:                         setUpAgain = 1;
  1473   002E74  0E01               	movlw	1
  1474   002E76  0100               	movlb	0	; () banked
  1475   002E78  6FBF               	movwf	main@setUpAgain& (0+255),b
  1476                           
  1477                           ;main.c: 80:                         break;
  1478   002E7A  EF63  F017         	goto	l44
  1479   002E7E                     l4173:
  1480   002E7E  0100               	movlb	0	; () banked
  1481   002E80  51C0               	movf	main@menuI& (0+255),w,b
  1482                           
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 8, Range of values is 0 to 7
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte           25    13 (average)
  1488                           ;	Chosen strategy is simple_byte
  1489   002E82  0A00               	xorlw	0	; case 0
  1490   002E84  B4D8               	btfsc	status,2,c
  1491   002E86  EF22  F017         	goto	l4163
  1492   002E8A  0A01               	xorlw	1	; case 1
  1493   002E8C  B4D8               	btfsc	status,2,c
  1494   002E8E  EF63  F017         	goto	l44
  1495   002E92  0A03               	xorlw	3	; case 2
  1496   002E94  B4D8               	btfsc	status,2,c
  1497   002E96  EF63  F017         	goto	l44
  1498   002E9A  0A01               	xorlw	1	; case 3
  1499   002E9C  B4D8               	btfsc	status,2,c
  1500   002E9E  EF63  F017         	goto	l44
  1501   002EA2  0A07               	xorlw	7	; case 4
  1502   002EA4  B4D8               	btfsc	status,2,c
  1503   002EA6  EF26  F017         	goto	l4165
  1504   002EAA  0A01               	xorlw	1	; case 5
  1505   002EAC  B4D8               	btfsc	status,2,c
  1506   002EAE  EF63  F017         	goto	l44
  1507   002EB2  0A03               	xorlw	3	; case 6
  1508   002EB4  B4D8               	btfsc	status,2,c
  1509   002EB6  EF63  F017         	goto	l44
  1510   002EBA  0A01               	xorlw	1	; case 7
  1511   002EBC  B4D8               	btfsc	status,2,c
  1512   002EBE  EF63  F017         	goto	l44
  1513   002EC2  EF63  F017         	goto	l44
  1514   002EC6                     l44:
  1515                           
  1516                           ;main.c: 91:         if(PORTAbits.RA2){
  1517   002EC6  5080               	movf	128,w,c	;volatile
  1518   002EC8                     
  1519                           ;main.c: 95:         if(setUpAgain){
  1520   002EC8  0100               	movlb	0	; () banked
  1521   002ECA  51BF               	movf	main@setUpAgain& (0+255),w,b
  1522   002ECC  B4D8               	btfsc	status,2,c
  1523   002ECE  EF6B  F017         	goto	u4911
  1524   002ED2  EF6D  F017         	goto	u4910
  1525   002ED6                     u4911:
  1526   002ED6  EFAD  F016         	goto	l4135
  1527   002EDA                     u4910:
  1528   002EDA                     
  1529                           ; BSR set to: 0
  1530                           ;main.c: 96:         menuI = moveDisplay(menuI,0);
  1531   002EDA  0E00               	movlw	0
  1532   002EDC  6E4A               	movwf	moveDisplay@where^0,c
  1533   002EDE  51C0               	movf	main@menuI& (0+255),w,b
  1534   002EE0  ECF9  F01B         	call	_moveDisplay
  1535   002EE4  0100               	movlb	0	; () banked
  1536   002EE6  6FC0               	movwf	main@menuI& (0+255),b
  1537   002EE8                     
  1538                           ; BSR set to: 0
  1539                           ;main.c: 97:         setUpAgain = 0;
  1540   002EE8  0E00               	movlw	0
  1541   002EEA  6FBF               	movwf	main@setUpAgain& (0+255),b
  1542   002EEC  EFAD  F016         	goto	l4135
  1543   002EF0  EF00  F000         	goto	start
  1544   002EF4                     __end_of_main:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function _runGPIO *****************
  1548 ;; Defined at:
  1549 ;;		line 31 in file "GPIO.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;  j               2   33[COMRAM] int 
  1554 ;;  i               2   31[COMRAM] int 
  1555 ;;  states         12    3[COMRAM] unsigned char [12]
  1556 ;;  numStates       2   28[COMRAM] int 
  1557 ;;  LEDControl     12   15[COMRAM] PTR FTN(unsigned char ,)
  1558 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  1559 ;;		 -> LED2_Control(1), LED1_Control(1), 
  1560 ;;  keepState       1   30[COMRAM] unsigned char 
  1561 ;;  GPIOreverse     1   27[COMRAM] unsigned char 
  1562 ;;  GPIOindex       1    0        unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Locals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;Total ram usage:       34 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 1
  1579 ;; This function calls:
  1580 ;;		_LED1_Control
  1581 ;;		_LED2_Control
  1582 ;;		_LED3_Control
  1583 ;;		_LED4_Control
  1584 ;;		_LED5_Control
  1585 ;;		_LED6_Control
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text1
  1592   0032A6                     __ptext1:
  1593                           	callstack 0
  1594   0032A6                     _runGPIO:
  1595                           	callstack 29
  1596   0032A6                     
  1597                           ;GPIO.c: 33:     TRISDbits.RD2 = 0;
  1598   0032A6  9495               	bcf	149,2,c	;volatile
  1599                           
  1600                           ;GPIO.c: 34:     TRISDbits.RD3 = 0;
  1601   0032A8  9695               	bcf	149,3,c	;volatile
  1602                           
  1603                           ;GPIO.c: 35:     TRISCbits.RC4 = 0;
  1604   0032AA  9894               	bcf	148,4,c	;volatile
  1605                           
  1606                           ;GPIO.c: 36:     TRISDbits.RD4 = 0;
  1607   0032AC  9895               	bcf	149,4,c	;volatile
  1608                           
  1609                           ;GPIO.c: 37:     TRISDbits.RD5 = 0;
  1610   0032AE  9A95               	bcf	149,5,c	;volatile
  1611                           
  1612                           ;GPIO.c: 38:     TRISDbits.RD6 = 0;
  1613   0032B0  9C95               	bcf	149,6,c	;volatile
  1614                           
  1615                           ;GPIO.c: 39:     LATDbits.LD2 = 1;
  1616   0032B2  848C               	bsf	140,2,c	;volatile
  1617                           
  1618                           ;GPIO.c: 40:     LATDbits.LD3 = 1;
  1619   0032B4  868C               	bsf	140,3,c	;volatile
  1620                           
  1621                           ;GPIO.c: 41:     LATCbits.LC4 = 1;
  1622   0032B6  888B               	bsf	139,4,c	;volatile
  1623                           
  1624                           ;GPIO.c: 42:     LATDbits.LD4 = 1;
  1625   0032B8  888C               	bsf	140,4,c	;volatile
  1626                           
  1627                           ;GPIO.c: 43:     LATDbits.LD5 = 1;
  1628   0032BA  8A8C               	bsf	140,5,c	;volatile
  1629                           
  1630                           ;GPIO.c: 44:     LATDbits.LD6 = 1;
  1631   0032BC  8C8C               	bsf	140,6,c	;volatile
  1632                           
  1633                           ;GPIO.c: 47:     TRISAbits.RA2 = 1;
  1634   0032BE  8492               	bsf	146,2,c	;volatile
  1635                           
  1636                           ;GPIO.c: 48:     ANSELAbits.ANSA2 = 0;
  1637   0032C0  010F               	movlb	15	; () banked
  1638   0032C2  9538               	bcf	56,2,b	;volatile
  1639   0032C4                     
  1640                           ; BSR set to: 15
  1641                           ;GPIO.c: 51:     uint8_t keepState;;GPIO.c: 52:     keepState = 1;
  1642   0032C4  0E01               	movlw	1
  1643   0032C6  6E1F               	movwf	runGPIO@keepState^0,c
  1644                           
  1645                           ;GPIO.c: 55:     uint8_t GPIOreverse;;GPIO.c: 56:     GPIOreverse = 0;
  1646   0032C8  0E00               	movlw	0
  1647   0032CA  6E1C               	movwf	runGPIO@GPIOreverse^0,c
  1648   0032CC                     
  1649                           ; BSR set to: 15
  1650                           ;GPIO.c: 58:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  1651   0032CC  EE20  F0CD         	lfsr	2,runGPIO@F6963
  1652   0032D0  EE10  F010         	lfsr	1,runGPIO@LEDControl
  1653   0032D4  0E0B               	movlw	11
  1654   0032D6                     u4171:
  1655   0032D6  CFDB FFE3          	movff	plusw2,plusw1
  1656   0032DA  06E8               	decf	wreg,f,c
  1657   0032DC  E2FC               	bc	u4171
  1658                           
  1659                           ;GPIO.c: 60:     while(keepState){
  1660   0032DE  EF05  F01A         	goto	l273
  1661   0032E2                     l3687:
  1662                           
  1663                           ;GPIO.c: 62:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  1664   0032E2  EE20  F0C1         	lfsr	2,runGPIO@F6981
  1665   0032E6  EE10  F004         	lfsr	1,runGPIO@states
  1666   0032EA  0E0B               	movlw	11
  1667   0032EC                     u4181:
  1668   0032EC  CFDB FFE3          	movff	plusw2,plusw1
  1669   0032F0  06E8               	decf	wreg,f,c
  1670   0032F2  E2FC               	bc	u4181
  1671   0032F4                     
  1672                           ;GPIO.c: 63:     int numStates = sizeof(states) / sizeof(states[0]);
  1673   0032F4  0E00               	movlw	0
  1674   0032F6  6E1E               	movwf	(runGPIO@numStates+1)^0,c
  1675   0032F8  0E0C               	movlw	12
  1676   0032FA  6E1D               	movwf	runGPIO@numStates^0,c
  1677   0032FC                     
  1678                           ;GPIO.c: 65:     for(int i = 0; i < numStates; i++) {
  1679   0032FC  0E00               	movlw	0
  1680   0032FE  6E21               	movwf	(runGPIO@i+1)^0,c
  1681   003300  0E00               	movlw	0
  1682   003302  6E20               	movwf	runGPIO@i^0,c
  1683   003304  EFD3  F019         	goto	l277
  1684   003308                     l3693:
  1685                           
  1686                           ;GPIO.c: 67:         for(int j = 0; j < 6; j++) {
  1687   003308  0E00               	movlw	0
  1688   00330A  6E23               	movwf	(runGPIO@j+1)^0,c
  1689   00330C  0E00               	movlw	0
  1690   00330E  6E22               	movwf	runGPIO@j^0,c
  1691   003310                     l3699:
  1692                           
  1693                           ;GPIO.c: 68:             (*LEDControl[j])(!((states[i] >> (5 - j)) & 0x1));
  1694   003310  5022               	movf	runGPIO@j^0,w,c
  1695   003312  0D02               	mullw	2
  1696   003314  50F3               	movf	243,w,c
  1697   003316  0F10               	addlw	low runGPIO@LEDControl
  1698   003318  6ED9               	movwf	fsr2l,c
  1699   00331A  6ADA               	clrf	fsr2h,c
  1700   00331C  D802               	call	u4198
  1701   00331E  EFB5  F019         	goto	u4199
  1702   003322                     u4198:
  1703   003322  0005               	push	
  1704   003324  6EFA               	movwf	pclath,c
  1705   003326  50DE               	movf	postinc2,w,c
  1706   003328  6EFD               	movwf	tosl,c
  1707   00332A  50DE               	movf	postinc2,w,c
  1708   00332C  6EFE               	movwf	tosh,c
  1709   00332E  50F8               	movf	tblptru,w,c
  1710   003330  6EFF               	movwf	tosu,c
  1711   003332  50FA               	movf	pclath,w,c
  1712   003334  5022               	movf	runGPIO@j^0,w,c
  1713   003336  0805               	sublw	5
  1714   003338  6E02               	movwf	??_runGPIO^0,c
  1715   00333A  5020               	movf	runGPIO@i^0,w,c
  1716   00333C  0F04               	addlw	low runGPIO@states
  1717   00333E  6ED9               	movwf	fsr2l,c
  1718   003340  6ADA               	clrf	fsr2h,c
  1719   003342  50DF               	movf	indf2,w,c
  1720   003344  6E03               	movwf	(??_runGPIO+1)^0,c
  1721   003346  2A02               	incf	??_runGPIO^0,f,c
  1722   003348  EFA8  F019         	goto	u4204
  1723   00334C                     u4205:
  1724   00334C  90D8               	bcf	status,0,c
  1725   00334E  3203               	rrcf	(??_runGPIO+1)^0,f,c
  1726   003350                     u4204:
  1727   003350  2E02               	decfsz	??_runGPIO^0,f,c
  1728   003352  EFA6  F019         	goto	u4205
  1729   003356  A003               	btfss	(??_runGPIO+1)^0,0,c
  1730   003358  EFB0  F019         	goto	u4211
  1731   00335C  EFB3  F019         	goto	u4210
  1732   003360                     u4211:
  1733   003360  0E01               	movlw	1
  1734   003362  EFB4  F019         	goto	u4220
  1735   003366                     u4210:
  1736   003366  0E00               	movlw	0
  1737   003368                     u4220:
  1738   003368  0012               	return		;indir
  1739   00336A                     u4199:
  1740   00336A                     
  1741                           ;GPIO.c: 69:         }
  1742   00336A  4A22               	infsnz	runGPIO@j^0,f,c
  1743   00336C  2A23               	incf	(runGPIO@j+1)^0,f,c
  1744   00336E  BE23               	btfsc	(runGPIO@j+1)^0,7,c
  1745   003370  EFC3  F019         	goto	u4231
  1746   003374  5023               	movf	(runGPIO@j+1)^0,w,c
  1747   003376  E109               	bnz	u4230
  1748   003378  0E06               	movlw	6
  1749   00337A  5C22               	subwf	runGPIO@j^0,w,c
  1750   00337C  A0D8               	btfss	status,0,c
  1751   00337E  EFC3  F019         	goto	u4231
  1752   003382  EFC5  F019         	goto	u4230
  1753   003386                     u4231:
  1754   003386  EF88  F019         	goto	l3699
  1755   00338A                     u4230:
  1756   00338A                     
  1757                           ;GPIO.c: 70:         _delay((unsigned long)((500)*(32E6/4000.0)));
  1758   00338A  0E15               	movlw	21
  1759   00338C  6E03               	movwf	(??_runGPIO+1)^0,c
  1760   00338E  0E4B               	movlw	75
  1761   003390  6E02               	movwf	??_runGPIO^0,c
  1762   003392  0EBE               	movlw	190
  1763   003394                     u4967:
  1764   003394  2EE8               	decfsz	wreg,f,c
  1765   003396  D7FE               	bra	u4967
  1766   003398  2E02               	decfsz	??_runGPIO^0,f,c
  1767   00339A  D7FC               	bra	u4967
  1768   00339C  2E03               	decfsz	(??_runGPIO+1)^0,f,c
  1769   00339E  D7FA               	bra	u4967
  1770   0033A0  D000               	nop2	
  1771   0033A2                     
  1772                           ;GPIO.c: 71:     }
  1773   0033A2  4A20               	infsnz	runGPIO@i^0,f,c
  1774   0033A4  2A21               	incf	(runGPIO@i+1)^0,f,c
  1775   0033A6                     l277:
  1776   0033A6  501D               	movf	runGPIO@numStates^0,w,c
  1777   0033A8  5C20               	subwf	runGPIO@i^0,w,c
  1778   0033AA  5021               	movf	(runGPIO@i+1)^0,w,c
  1779   0033AC  0A80               	xorlw	128
  1780   0033AE  6E02               	movwf	??_runGPIO^0,c
  1781   0033B0  501E               	movf	(runGPIO@numStates+1)^0,w,c
  1782   0033B2  0A80               	xorlw	128
  1783   0033B4  5802               	subwfb	??_runGPIO^0,w,c
  1784   0033B6  A0D8               	btfss	status,0,c
  1785   0033B8  EFE0  F019         	goto	u4241
  1786   0033BC  EFE2  F019         	goto	u4240
  1787   0033C0                     u4241:
  1788   0033C0  EF84  F019         	goto	l3693
  1789   0033C4                     u4240:
  1790   0033C4                     
  1791                           ;GPIO.c: 73:         if(PORTAbits.RA2){
  1792   0033C4  A480               	btfss	128,2,c	;volatile
  1793   0033C6  EFE7  F019         	goto	u4251
  1794   0033CA  EFE9  F019         	goto	u4250
  1795   0033CE                     u4251:
  1796   0033CE  EF05  F01A         	goto	l273
  1797   0033D2                     u4250:
  1798   0033D2                     
  1799                           ;GPIO.c: 74:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1800   0033D2  0E03               	movlw	3
  1801   0033D4  6E03               	movwf	(??_runGPIO+1)^0,c
  1802   0033D6  0E08               	movlw	8
  1803   0033D8  6E02               	movwf	??_runGPIO^0,c
  1804   0033DA  0E77               	movlw	119
  1805   0033DC                     u4977:
  1806   0033DC  2EE8               	decfsz	wreg,f,c
  1807   0033DE  D7FE               	bra	u4977
  1808   0033E0  2E02               	decfsz	??_runGPIO^0,f,c
  1809   0033E2  D7FC               	bra	u4977
  1810   0033E4  2E03               	decfsz	(??_runGPIO+1)^0,f,c
  1811   0033E6  D7FA               	bra	u4977
  1812   0033E8  0000               	nop	
  1813   0033EA                     
  1814                           ;GPIO.c: 75:             if(PORTAbits.RA2){
  1815   0033EA  A480               	btfss	128,2,c	;volatile
  1816   0033EC  EFFA  F019         	goto	u4261
  1817   0033F0  EFFC  F019         	goto	u4260
  1818   0033F4                     u4261:
  1819   0033F4  EF05  F01A         	goto	l273
  1820   0033F8                     u4260:
  1821   0033F8                     l284:
  1822   0033F8  B480               	btfsc	128,2,c	;volatile
  1823   0033FA  EF01  F01A         	goto	u4271
  1824   0033FE  EF03  F01A         	goto	u4270
  1825   003402                     u4271:
  1826   003402  EFFC  F019         	goto	l284
  1827   003406                     u4270:
  1828   003406                     
  1829                           ;GPIO.c: 77:                 keepState = 0;
  1830   003406  0E00               	movlw	0
  1831   003408  6E1F               	movwf	runGPIO@keepState^0,c
  1832   00340A                     l273:
  1833                           
  1834                           ;GPIO.c: 60:     while(keepState){
  1835   00340A  501F               	movf	runGPIO@keepState^0,w,c
  1836   00340C  A4D8               	btfss	status,2,c
  1837   00340E  EF0B  F01A         	goto	u4281
  1838   003412  EF0D  F01A         	goto	u4280
  1839   003416                     u4281:
  1840   003416  EF71  F019         	goto	l3687
  1841   00341A                     u4280:
  1842   00341A                     
  1843                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  1844   00341A  848C               	bsf	140,2,c	;volatile
  1845                           
  1846                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  1847   00341C  868C               	bsf	140,3,c	;volatile
  1848                           
  1849                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  1850   00341E  888B               	bsf	139,4,c	;volatile
  1851                           
  1852                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  1853   003420  888C               	bsf	140,4,c	;volatile
  1854                           
  1855                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  1856   003422  8A8C               	bsf	140,5,c	;volatile
  1857                           
  1858                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  1859   003424  8C8C               	bsf	140,6,c	;volatile
  1860   003426  0012               	return		;funcret
  1861   003428                     __end_of_runGPIO:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _LED5_Control *****************
  1865 ;; Defined at:
  1866 ;;		line 14 in file "GPIO.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  state           1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  state           1    0[COMRAM] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;Total ram usage:        1 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_runGPIO
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text2
  1894   0040D6                     __ptext2:
  1895                           	callstack 0
  1896   0040D6                     _LED5_Control:
  1897                           	callstack 29
  1898                           
  1899                           ;incstack = 0
  1900                           ;LED5_Control@state stored from wreg
  1901   0040D6  6E01               	movwf	LED5_Control@state^0,c
  1902   0040D8  B001               	btfsc	LED5_Control@state^0,0,c
  1903   0040DA  D002               	bra	u3875
  1904   0040DC  9A8C               	bcf	140,5,c	;volatile
  1905   0040DE  D001               	bra	u3876
  1906   0040E0                     u3875:
  1907   0040E0  8A8C               	bsf	140,5,c	;volatile
  1908   0040E2                     u3876:
  1909   0040E2  0012               	return		;funcret
  1910   0040E4                     __end_of_LED5_Control:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _LED4_Control *****************
  1914 ;; Defined at:
  1915 ;;		line 13 in file "GPIO.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  state           1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  state           1    0[COMRAM] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;Total ram usage:        1 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_runGPIO
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text3
  1943   0040E4                     __ptext3:
  1944                           	callstack 0
  1945   0040E4                     _LED4_Control:
  1946                           	callstack 29
  1947                           
  1948                           ;incstack = 0
  1949                           ;LED4_Control@state stored from wreg
  1950   0040E4  6E01               	movwf	LED4_Control@state^0,c
  1951   0040E6  B001               	btfsc	LED4_Control@state^0,0,c
  1952   0040E8  D002               	bra	u3865
  1953   0040EA  988C               	bcf	140,4,c	;volatile
  1954   0040EC  D001               	bra	u3866
  1955   0040EE                     u3865:
  1956   0040EE  888C               	bsf	140,4,c	;volatile
  1957   0040F0                     u3866:
  1958   0040F0  0012               	return		;funcret
  1959   0040F2                     __end_of_LED4_Control:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _LED3_Control *****************
  1963 ;; Defined at:
  1964 ;;		line 12 in file "GPIO.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  state           1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  state           1    0[COMRAM] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_runGPIO
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text4
  1992   0040F2                     __ptext4:
  1993                           	callstack 0
  1994   0040F2                     _LED3_Control:
  1995                           	callstack 29
  1996                           
  1997                           ;incstack = 0
  1998                           ;LED3_Control@state stored from wreg
  1999   0040F2  6E01               	movwf	LED3_Control@state^0,c
  2000   0040F4  B001               	btfsc	LED3_Control@state^0,0,c
  2001   0040F6  D002               	bra	u3855
  2002   0040F8  988B               	bcf	139,4,c	;volatile
  2003   0040FA  D001               	bra	u3856
  2004   0040FC                     u3855:
  2005   0040FC  888B               	bsf	139,4,c	;volatile
  2006   0040FE                     u3856:
  2007   0040FE  0012               	return		;funcret
  2008   004100                     __end_of_LED3_Control:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _LED2_Control *****************
  2012 ;; Defined at:
  2013 ;;		line 11 in file "GPIO.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  state           1    wreg     unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  state           1    0[COMRAM] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;Total ram usage:        1 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_runGPIO
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text5
  2041   004100                     __ptext5:
  2042                           	callstack 0
  2043   004100                     _LED2_Control:
  2044                           	callstack 29
  2045                           
  2046                           ;incstack = 0
  2047                           ;LED2_Control@state stored from wreg
  2048   004100  6E01               	movwf	LED2_Control@state^0,c
  2049   004102  B001               	btfsc	LED2_Control@state^0,0,c
  2050   004104  D002               	bra	u3845
  2051   004106  968C               	bcf	140,3,c	;volatile
  2052   004108  D001               	bra	u3846
  2053   00410A                     u3845:
  2054   00410A  868C               	bsf	140,3,c	;volatile
  2055   00410C                     u3846:
  2056   00410C  0012               	return		;funcret
  2057   00410E                     __end_of_LED2_Control:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _LED1_Control *****************
  2061 ;; Defined at:
  2062 ;;		line 10 in file "GPIO.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  state           1    wreg     unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  state           1    0[COMRAM] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        1 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_runGPIO
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text6
  2090   00410E                     __ptext6:
  2091                           	callstack 0
  2092   00410E                     _LED1_Control:
  2093                           	callstack 29
  2094                           
  2095                           ;incstack = 0
  2096                           ;LED1_Control@state stored from wreg
  2097   00410E  6E01               	movwf	LED1_Control@state^0,c
  2098   004110  B001               	btfsc	LED1_Control@state^0,0,c
  2099   004112  D002               	bra	u3835
  2100   004114  948C               	bcf	140,2,c	;volatile
  2101   004116  D001               	bra	u3836
  2102   004118                     u3835:
  2103   004118  848C               	bsf	140,2,c	;volatile
  2104   00411A                     u3836:
  2105   00411A  0012               	return		;funcret
  2106   00411C                     __end_of_LED1_Control:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _LED6_Control *****************
  2110 ;; Defined at:
  2111 ;;		line 15 in file "GPIO.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  state           1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  state           1    0[COMRAM] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_runGPIO
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text7
  2139   00411C                     __ptext7:
  2140                           	callstack 0
  2141   00411C                     _LED6_Control:
  2142                           	callstack 29
  2143                           
  2144                           ;incstack = 0
  2145                           ;LED6_Control@state stored from wreg
  2146   00411C  6E01               	movwf	LED6_Control@state^0,c
  2147   00411E  B001               	btfsc	LED6_Control@state^0,0,c
  2148   004120  D002               	bra	u3885
  2149   004122  9C8C               	bcf	140,6,c	;volatile
  2150   004124  D001               	bra	u3886
  2151   004126                     u3885:
  2152   004126  8C8C               	bsf	140,6,c	;volatile
  2153   004128                     u3886:
  2154   004128  0012               	return		;funcret
  2155   00412A                     __end_of_LED6_Control:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _runDAC *****************
  2159 ;; Defined at:
  2160 ;;		line 10 in file "DAC.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  DACindex        1   94[BANK0 ] unsigned char 
  2165 ;;  selectModeDA    1   93[BANK0 ] unsigned char 
  2166 ;;  keepState       1   92[BANK0 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:       12 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 8
  2183 ;; This function calls:
  2184 ;;		_SPI_write
  2185 ;;		___fladd
  2186 ;;		___fldiv
  2187 ;;		___flmul
  2188 ;;		___fltol
  2189 ;;		___xxtofl
  2190 ;;		_printf
  2191 ;;		_sinf
  2192 ;; This function is called by:
  2193 ;;		_main
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text8
  2198   002864                     __ptext8:
  2199                           	callstack 0
  2200   002864                     _runDAC:
  2201                           	callstack 22
  2202   002864                     
  2203                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  2204   002864  8094               	bsf	148,0,c	;volatile
  2205                           
  2206                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  2207   002866  8892               	bsf	146,4,c	;volatile
  2208                           
  2209                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  2210   002868  8692               	bsf	146,3,c	;volatile
  2211                           
  2212                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  2213   00286A  8492               	bsf	146,2,c	;volatile
  2214                           
  2215                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  2216   00286C  010F               	movlb	15	; () banked
  2217   00286E  9738               	bcf	56,3,b	;volatile
  2218                           
  2219                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  2220   002870  9538               	bcf	56,2,b	;volatile
  2221                           
  2222                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  2223   002872  9693               	bcf	147,3,c	;volatile
  2224                           
  2225                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  2226   002874  9694               	bcf	148,3,c	;volatile
  2227                           
  2228                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  2229   002876  9A94               	bcf	148,5,c	;volatile
  2230   002878                     
  2231                           ; BSR set to: 15
  2232                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  2233   002878  50C6               	movf	198,w,c	;volatile
  2234   00287A  0BF0               	andlw	-16
  2235   00287C  0902               	iorlw	2
  2236   00287E  6EC6               	movwf	198,c	;volatile
  2237   002880                     
  2238                           ; BSR set to: 15
  2239                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  2240   002880  98C6               	bcf	198,4,c	;volatile
  2241   002882                     
  2242                           ; BSR set to: 15
  2243                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  2244   002882  8CC7               	bsf	199,6,c	;volatile
  2245   002884                     
  2246                           ; BSR set to: 15
  2247                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  2248   002884  8AC6               	bsf	198,5,c	;volatile
  2249   002886                     
  2250                           ; BSR set to: 15
  2251                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  2252   002886  8139               	bsf	57,0,b	;volatile
  2253   002888                     
  2254                           ; BSR set to: 15
  2255                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  2256   002888  9EC0               	bcf	192,7,c	;volatile
  2257                           
  2258                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  2259   00288A  50C0               	movf	192,w,c	;volatile
  2260   00288C  0BF8               	andlw	-8
  2261   00288E  0906               	iorlw	6
  2262   002890  6EC0               	movwf	192,c	;volatile
  2263                           
  2264                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  2265   002892  50C0               	movf	192,w,c	;volatile
  2266   002894  0BC7               	andlw	-57
  2267   002896  0930               	iorlw	48
  2268   002898  6EC0               	movwf	192,c	;volatile
  2269   00289A                     
  2270                           ; BSR set to: 15
  2271                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  2272   00289A  80C2               	bsf	194,0,c	;volatile
  2273                           
  2274                           ;DAC.c: 38:     SPBRG1 = 51;
  2275   00289C  0E33               	movlw	51
  2276   00289E  6EAF               	movwf	175,c	;volatile
  2277   0028A0                     
  2278                           ; BSR set to: 15
  2279                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  2280   0028A0  8EAB               	bsf	171,7,c	;volatile
  2281   0028A2                     
  2282                           ; BSR set to: 15
  2283                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  2284   0028A2  98AC               	bcf	172,4,c	;volatile
  2285   0028A4                     
  2286                           ; BSR set to: 15
  2287                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  2288   0028A4  8AAC               	bsf	172,5,c	;volatile
  2289   0028A6                     
  2290                           ; BSR set to: 15
  2291                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  2292   0028A6  88AB               	bsf	171,4,c	;volatile
  2293   0028A8                     
  2294                           ; BSR set to: 15
  2295                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  2296   0028A8  868A               	bsf	138,3,c	;volatile
  2297                           
  2298                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  2299   0028AA  50C2               	movf	194,w,c	;volatile
  2300   0028AC  0B83               	andlw	-125
  2301   0028AE  0930               	iorlw	48
  2302   0028B0  6EC2               	movwf	194,c	;volatile
  2303                           
  2304                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  2305   0028B2  0E01               	movlw	1
  2306   0028B4  0100               	movlb	0	; () banked
  2307   0028B6  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2308                           
  2309                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  2310   0028B8  0E01               	movlw	1
  2311   0028BA  6FBC               	movwf	runDAC@keepState& (0+255),b
  2312                           
  2313                           ;DAC.c: 52:     uint8_t DACindex = 0;
  2314   0028BC  0E00               	movlw	0
  2315   0028BE  6FBE               	movwf	runDAC@DACindex& (0+255),b
  2316                           
  2317                           ;DAC.c: 54:     while(keepState){
  2318   0028C0  EF4B  F015         	goto	l4117
  2319   0028C4                     l4075:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;DAC.c: 57:                 if(DACindex<255/2){
  2323   0028C4  0E7F               	movlw	127
  2324   0028C6  61BE               	cpfslt	runDAC@DACindex& (0+255),b
  2325   0028C8  EF68  F014         	goto	u4741
  2326   0028CC  EF6A  F014         	goto	u4740
  2327   0028D0                     u4741:
  2328   0028D0  EF6D  F014         	goto	l4079
  2329   0028D4                     u4740:
  2330   0028D4                     
  2331                           ; BSR set to: 0
  2332                           ;DAC.c: 58:                     SPI_write(DACindex);
  2333   0028D4  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2334   0028D6  EC77  F01F         	call	_SPI_write
  2335   0028DA                     l4079:
  2336                           
  2337                           ;DAC.c: 60:                 if(DACindex>=255/2){
  2338   0028DA  0E7E               	movlw	126
  2339   0028DC  0100               	movlb	0	; () banked
  2340   0028DE  65BE               	cpfsgt	runDAC@DACindex& (0+255),b
  2341   0028E0  EF74  F014         	goto	u4751
  2342   0028E4  EF76  F014         	goto	u4750
  2343   0028E8                     u4751:
  2344   0028E8  EF0A  F015         	goto	l186
  2345   0028EC                     u4750:
  2346   0028EC                     
  2347                           ; BSR set to: 0
  2348                           ;DAC.c: 61:                     SPI_write(255-DACindex);
  2349   0028EC  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2350   0028EE  0AFF               	xorlw	255
  2351   0028F0  EC77  F01F         	call	_SPI_write
  2352   0028F4  EF0A  F015         	goto	l186
  2353   0028F8                     l4083:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2357   0028F8  0E00               	movlw	0
  2358   0028FA  6E2C               	movwf	___fldiv@a^0,c
  2359   0028FC  0E00               	movlw	0
  2360   0028FE  6E2D               	movwf	(___fldiv@a+1)^0,c
  2361   002900  0E7F               	movlw	127
  2362   002902  6E2E               	movwf	(___fldiv@a+2)^0,c
  2363   002904  0E43               	movlw	67
  2364   002906  6E2F               	movwf	(___fldiv@a+3)^0,c
  2365   002908  0EC3               	movlw	195
  2366   00290A  6E13               	movwf	___flmul@a^0,c
  2367   00290C  0EF5               	movlw	245
  2368   00290E  6E14               	movwf	(___flmul@a+1)^0,c
  2369   002910  0EC8               	movlw	200
  2370   002912  6E15               	movwf	(___flmul@a+2)^0,c
  2371   002914  0E40               	movlw	64
  2372   002916  6E16               	movwf	(___flmul@a+3)^0,c
  2373   002918  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2374   00291A  6E01               	movwf	___xxtofl@val^0,c
  2375   00291C  6A02               	clrf	(___xxtofl@val+1)^0,c
  2376   00291E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2377   002920  6A04               	clrf	(___xxtofl@val+3)^0,c
  2378   002922  0E01               	movlw	1
  2379   002924  EC79  F018         	call	___xxtofl
  2380   002928  C001  F00F         	movff	?___xxtofl,___flmul@b
  2381   00292C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  2382   002930  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  2383   002934  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  2384   002938  EC42  F00D         	call	___flmul	;wreg free
  2385   00293C  C00F  F028         	movff	?___flmul,___fldiv@b
  2386   002940  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  2387   002944  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  2388   002948  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  2389   00294C  EC38  F011         	call	___fldiv	;wreg free
  2390   002950  C028  F0B4         	movff	?___fldiv,_runDAC$3121
  2391   002954  C029  F0B5         	movff	?___fldiv+1,_runDAC$3121+1
  2392   002958  C02A  F0B6         	movff	?___fldiv+2,_runDAC$3121+2
  2393   00295C  C02B  F0B7         	movff	?___fldiv+3,_runDAC$3121+3
  2394   002960                     
  2395                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2396   002960  C0B4  F09A         	movff	_runDAC$3121,sinf@x
  2397   002964  C0B5  F09B         	movff	_runDAC$3121+1,sinf@x+1
  2398   002968  C0B6  F09C         	movff	_runDAC$3121+2,sinf@x+2
  2399   00296C  C0B7  F09D         	movff	_runDAC$3121+3,sinf@x+3
  2400   002970  EC5D  F008         	call	_sinf	;wreg free
  2401   002974  C09A  F0B8         	movff	?_sinf,_runDAC$3122
  2402   002978  C09B  F0B9         	movff	?_sinf+1,_runDAC$3122+1
  2403   00297C  C09C  F0BA         	movff	?_sinf+2,_runDAC$3122+2
  2404   002980  C09D  F0BB         	movff	?_sinf+3,_runDAC$3122+3
  2405   002984                     
  2406                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  2407   002984  0E00               	movlw	0
  2408   002986  6E45               	movwf	___fladd@a^0,c
  2409   002988  0E00               	movlw	0
  2410   00298A  6E46               	movwf	(___fladd@a+1)^0,c
  2411   00298C  0EFE               	movlw	254
  2412   00298E  6E47               	movwf	(___fladd@a+2)^0,c
  2413   002990  0E42               	movlw	66
  2414   002992  6E48               	movwf	(___fladd@a+3)^0,c
  2415   002994  0E00               	movlw	0
  2416   002996  6E13               	movwf	___flmul@a^0,c
  2417   002998  0E00               	movlw	0
  2418   00299A  6E14               	movwf	(___flmul@a+1)^0,c
  2419   00299C  0EFE               	movlw	254
  2420   00299E  6E15               	movwf	(___flmul@a+2)^0,c
  2421   0029A0  0E42               	movlw	66
  2422   0029A2  6E16               	movwf	(___flmul@a+3)^0,c
  2423   0029A4  C0B8  F00F         	movff	_runDAC$3122,___flmul@b
  2424   0029A8  C0B9  F010         	movff	_runDAC$3122+1,___flmul@b+1
  2425   0029AC  C0BA  F011         	movff	_runDAC$3122+2,___flmul@b+2
  2426   0029B0  C0BB  F012         	movff	_runDAC$3122+3,___flmul@b+3
  2427   0029B4  EC42  F00D         	call	___flmul	;wreg free
  2428   0029B8  C00F  F041         	movff	?___flmul,___fladd@b
  2429   0029BC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2430   0029C0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2431   0029C4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2432   0029C8  ECE2  F00A         	call	___fladd	;wreg free
  2433   0029CC  C041  F051         	movff	?___fladd,___fltol@f1
  2434   0029D0  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2435   0029D4  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2436   0029D8  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2437   0029DC  EC76  F01B         	call	___fltol	;wreg free
  2438   0029E0  5051               	movf	?___fltol^0,w,c
  2439   0029E2  EC77  F01F         	call	_SPI_write
  2440                           
  2441                           ;DAC.c: 66:                 break;
  2442   0029E6  EF0A  F015         	goto	l186
  2443   0029EA                     l4089:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  2447   0029EA  51BE               	movf	runDAC@DACindex& (0+255),w,b
  2448   0029EC  0AFF               	xorlw	255
  2449   0029EE  EC77  F01F         	call	_SPI_write
  2450                           
  2451                           ;DAC.c: 69:                 break;
  2452   0029F2  EF0A  F015         	goto	l186
  2453   0029F6                     l4093:
  2454                           
  2455                           ; BSR set to: 0
  2456   0029F6  51BD               	movf	runDAC@selectModeDAC& (0+255),w,b
  2457                           
  2458                           ; Switch size 1, requested type "simple"
  2459                           ; Number of cases is 3, Range of values is 1 to 3
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte           10     6 (average)
  2463                           ;	Chosen strategy is simple_byte
  2464   0029F8  0A01               	xorlw	1	; case 1
  2465   0029FA  B4D8               	btfsc	status,2,c
  2466   0029FC  EF62  F014         	goto	l4075
  2467   002A00  0A03               	xorlw	3	; case 2
  2468   002A02  B4D8               	btfsc	status,2,c
  2469   002A04  EF7C  F014         	goto	l4083
  2470   002A08  0A01               	xorlw	1	; case 3
  2471   002A0A  B4D8               	btfsc	status,2,c
  2472   002A0C  EFF5  F014         	goto	l4089
  2473   002A10  EF0A  F015         	goto	l186
  2474   002A14                     l186:
  2475                           
  2476                           ;DAC.c: 71:         GODONE = 1;
  2477   002A14  82C2               	bsf	4034,1,c	;volatile
  2478   002A16                     l189:
  2479   002A16  B2C2               	btfsc	4034,1,c	;volatile
  2480   002A18  EF10  F015         	goto	u4761
  2481   002A1C  EF12  F015         	goto	u4760
  2482   002A20                     u4761:
  2483   002A20  EF0B  F015         	goto	l189
  2484   002A24                     u4760:
  2485   002A24                     
  2486                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  2487   002A24  0EA7               	movlw	low STR_5
  2488   002A26  6E37               	movwf	printf@fmt^0,c
  2489   002A28  CFC4 F038          	movff	4036,?_printf+1	;volatile
  2490   002A2C  6A39               	clrf	(?_printf+2)^0,c
  2491   002A2E  EC53  F020         	call	_printf	;wreg free
  2492   002A32                     
  2493                           ;DAC.c: 75:         if(PORTCbits.RC0){
  2494   002A32  A082               	btfss	130,0,c	;volatile
  2495   002A34  EF1E  F015         	goto	u4771
  2496   002A38  EF20  F015         	goto	u4770
  2497   002A3C                     u4771:
  2498   002A3C  EF23  F015         	goto	l4101
  2499   002A40                     u4770:
  2500   002A40                     
  2501                           ;DAC.c: 76:             selectModeDAC = 1;
  2502   002A40  0E01               	movlw	1
  2503   002A42  0100               	movlb	0	; () banked
  2504   002A44  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2505   002A46                     l4101:
  2506                           
  2507                           ;DAC.c: 78:         if(PORTAbits.RA4){
  2508   002A46  A880               	btfss	128,4,c	;volatile
  2509   002A48  EF28  F015         	goto	u4781
  2510   002A4C  EF2A  F015         	goto	u4780
  2511   002A50                     u4781:
  2512   002A50  EF2D  F015         	goto	l4105
  2513   002A54                     u4780:
  2514   002A54                     
  2515                           ;DAC.c: 79:             selectModeDAC = 2;
  2516   002A54  0E02               	movlw	2
  2517   002A56  0100               	movlb	0	; () banked
  2518   002A58  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2519   002A5A                     l4105:
  2520                           
  2521                           ;DAC.c: 81:         if(PORTAbits.RA3){
  2522   002A5A  A680               	btfss	128,3,c	;volatile
  2523   002A5C  EF32  F015         	goto	u4791
  2524   002A60  EF34  F015         	goto	u4790
  2525   002A64                     u4791:
  2526   002A64  EF37  F015         	goto	l4109
  2527   002A68                     u4790:
  2528   002A68                     
  2529                           ;DAC.c: 82:             selectModeDAC = 3;
  2530   002A68  0E03               	movlw	3
  2531   002A6A  0100               	movlb	0	; () banked
  2532   002A6C  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  2533   002A6E                     l4109:
  2534                           
  2535                           ;DAC.c: 84:         if(PORTAbits.RA2){
  2536   002A6E  A480               	btfss	128,2,c	;volatile
  2537   002A70  EF3C  F015         	goto	u4801
  2538   002A74  EF3E  F015         	goto	u4800
  2539   002A78                     u4801:
  2540   002A78  EF41  F015         	goto	l4113
  2541   002A7C                     u4800:
  2542   002A7C                     
  2543                           ;DAC.c: 85:             keepState = 0;
  2544   002A7C  0E00               	movlw	0
  2545   002A7E  0100               	movlb	0	; () banked
  2546   002A80  6FBC               	movwf	runDAC@keepState& (0+255),b
  2547   002A82                     l4113:
  2548                           
  2549                           ;DAC.c: 87:         DACindex++;
  2550   002A82  0100               	movlb	0	; () banked
  2551   002A84  2BBE               	incf	runDAC@DACindex& (0+255),f,b
  2552   002A86                     
  2553                           ; BSR set to: 0
  2554                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  2555   002A86  0E68               	movlw	104
  2556   002A88  6E5D               	movwf	??_runDAC^0,c
  2557   002A8A  0EE4               	movlw	228
  2558   002A8C                     u4987:
  2559   002A8C  2EE8               	decfsz	wreg,f,c
  2560   002A8E  D7FE               	bra	u4987
  2561   002A90  2E5D               	decfsz	??_runDAC^0,f,c
  2562   002A92  D7FC               	bra	u4987
  2563   002A94  D000               	nop2	
  2564   002A96                     l4117:
  2565                           
  2566                           ;DAC.c: 54:     while(keepState){
  2567   002A96  0100               	movlb	0	; () banked
  2568   002A98  51BC               	movf	runDAC@keepState& (0+255),w,b
  2569   002A9A  A4D8               	btfss	status,2,c
  2570   002A9C  EF52  F015         	goto	u4811
  2571   002AA0  EF54  F015         	goto	u4810
  2572   002AA4                     u4811:
  2573   002AA4  EFFB  F014         	goto	l4093
  2574   002AA8                     u4810:
  2575   002AA8                     
  2576                           ; BSR set to: 0
  2577   002AA8  0012               	return		;funcret
  2578   002AAA                     __end_of_runDAC:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _sinf *****************
  2582 ;; Defined at:
  2583 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sinf.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  x               4   58[BANK0 ] float 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  ux              4   80[BANK0 ] struct .
  2588 ;;  y               4   76[BANK0 ] struct .
  2589 ;;  sign            1   71[BANK0 ] _Bool 
  2590 ;;  n               1   70[BANK0 ] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  4   58[BANK0 ] float 
  2593 ;; Registers used:
  2594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:       26 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; Hardware stack levels required when called: 3
  2607 ;; This function calls:
  2608 ;;		___cosdf
  2609 ;;		___fladd
  2610 ;;		___flneg
  2611 ;;		___rem_pio2f
  2612 ;;		___sindf
  2613 ;; This function is called by:
  2614 ;;		_runDAC
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text9
  2619   0010BA                     __ptext9:
  2620                           	callstack 0
  2621   0010BA                     _sinf:
  2622                           	callstack 26
  2623   0010BA  C09A  F0B0         	movff	sinf@x,sinf@ux
  2624   0010BE  C09B  F0B1         	movff	sinf@x+1,sinf@ux+1
  2625   0010C2  C09C  F0B2         	movff	sinf@x+2,sinf@ux+2
  2626   0010C6  C09D  F0B3         	movff	sinf@x+3,sinf@ux+3
  2627   0010CA  0100               	movlb	0	; () banked
  2628   0010CC  BFB3               	btfsc	(sinf@ux+3)& (0+255),7,b
  2629   0010CE  EF6B  F008         	goto	u3701
  2630   0010D2  EF6E  F008         	goto	u3700
  2631   0010D6                     u3701:
  2632   0010D6  0E01               	movlw	1
  2633   0010D8  EF6F  F008         	goto	u3710
  2634   0010DC                     u3700:
  2635   0010DC  0E00               	movlw	0
  2636   0010DE                     u3710:
  2637   0010DE  6FA7               	movwf	sinf@sign& (0+255),b
  2638   0010E0                     
  2639                           ; BSR set to: 0
  2640   0010E0  9FB3               	bcf	(sinf@ux+3)& (0+255),7,b
  2641   0010E2                     
  2642                           ; BSR set to: 0
  2643   0010E2  0EDB               	movlw	219
  2644   0010E4  5DB0               	subwf	sinf@ux& (0+255),w,b
  2645   0010E6  0E0F               	movlw	15
  2646   0010E8  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2647   0010EA  0E49               	movlw	73
  2648   0010EC  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2649   0010EE  0E3F               	movlw	63
  2650   0010F0  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2651   0010F2  B0D8               	btfsc	status,0,c
  2652   0010F4  EF7E  F008         	goto	u3721
  2653   0010F8  EF80  F008         	goto	u3720
  2654   0010FC                     u3721:
  2655   0010FC  EFA9  F008         	goto	l3383
  2656   001100                     u3720:
  2657   001100                     
  2658                           ; BSR set to: 0
  2659   001100  0E80               	movlw	128
  2660   001102  5DB2               	subwf	(sinf@ux+2)& (0+255),w,b
  2661   001104  0E39               	movlw	57
  2662   001106  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2663   001108  B0D8               	btfsc	status,0,c
  2664   00110A  EF89  F008         	goto	u3731
  2665   00110E  EF8B  F008         	goto	u3730
  2666   001112                     u3731:
  2667   001112  EF95  F008         	goto	l3379
  2668   001116                     u3730:
  2669   001116                     
  2670                           ; BSR set to: 0
  2671   001116  C09A  F09A         	movff	sinf@x,?_sinf
  2672   00111A  C09B  F09B         	movff	sinf@x+1,?_sinf+1
  2673   00111E  C09C  F09C         	movff	sinf@x+2,?_sinf+2
  2674   001122  C09D  F09D         	movff	sinf@x+3,?_sinf+3
  2675   001126  EFE1  F00A         	goto	l1113
  2676   00112A                     l3379:
  2677                           
  2678                           ; BSR set to: 0
  2679   00112A  C09A  F051         	movff	sinf@x,___sindf@x
  2680   00112E  C09B  F052         	movff	sinf@x+1,___sindf@x+1
  2681   001132  C09C  F053         	movff	sinf@x+2,___sindf@x+2
  2682   001136  C09D  F054         	movff	sinf@x+3,___sindf@x+3
  2683   00113A  EC55  F015         	call	___sindf	;wreg free
  2684   00113E  C051  F09A         	movff	?___sindf,?_sinf
  2685   001142  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2686   001146  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2687   00114A  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2688   00114E  EFE1  F00A         	goto	l1113
  2689   001152                     l3383:
  2690                           
  2691                           ; BSR set to: 0
  2692   001152  0ED2               	movlw	210
  2693   001154  5DB0               	subwf	sinf@ux& (0+255),w,b
  2694   001156  0E53               	movlw	83
  2695   001158  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2696   00115A  0E7B               	movlw	123
  2697   00115C  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2698   00115E  0E40               	movlw	64
  2699   001160  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2700   001162  B0D8               	btfsc	status,0,c
  2701   001164  EFB6  F008         	goto	u3741
  2702   001168  EFB8  F008         	goto	u3740
  2703   00116C                     u3741:
  2704   00116C  EF9B  F009         	goto	l3413
  2705   001170                     u3740:
  2706   001170                     
  2707                           ; BSR set to: 0
  2708   001170  0EE4               	movlw	228
  2709   001172  5DB0               	subwf	sinf@ux& (0+255),w,b
  2710   001174  0ECB               	movlw	203
  2711   001176  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2712   001178  0E16               	movlw	22
  2713   00117A  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2714   00117C  0E40               	movlw	64
  2715   00117E  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2716   001180  B0D8               	btfsc	status,0,c
  2717   001182  EFC5  F008         	goto	u3751
  2718   001186  EFC7  F008         	goto	u3750
  2719   00118A                     u3751:
  2720   00118A  EF35  F009         	goto	l3403
  2721   00118E                     u3750:
  2722   00118E                     
  2723                           ; BSR set to: 0
  2724   00118E  51A7               	movf	sinf@sign& (0+255),w,b
  2725   001190  B4D8               	btfsc	status,2,c
  2726   001192  EFCD  F008         	goto	u3761
  2727   001196  EFCF  F008         	goto	u3760
  2728   00119A                     u3761:
  2729   00119A  EF07  F009         	goto	l3397
  2730   00119E                     u3760:
  2731   00119E                     
  2732                           ; BSR set to: 0
  2733   00119E  0EDB               	movlw	219
  2734   0011A0  6E45               	movwf	___fladd@a^0,c
  2735   0011A2  0E0F               	movlw	15
  2736   0011A4  6E46               	movwf	(___fladd@a+1)^0,c
  2737   0011A6  0EC9               	movlw	201
  2738   0011A8  6E47               	movwf	(___fladd@a+2)^0,c
  2739   0011AA  0E3F               	movlw	63
  2740   0011AC  6E48               	movwf	(___fladd@a+3)^0,c
  2741   0011AE  C09A  F041         	movff	sinf@x,___fladd@b
  2742   0011B2  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2743   0011B6  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2744   0011BA  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2745   0011BE  ECE2  F00A         	call	___fladd	;wreg free
  2746   0011C2  C041  F0A8         	movff	?___fladd,_sinf$3124
  2747   0011C6  C042  F0A9         	movff	?___fladd+1,_sinf$3124+1
  2748   0011CA  C043  F0AA         	movff	?___fladd+2,_sinf$3124+2
  2749   0011CE  C044  F0AB         	movff	?___fladd+3,_sinf$3124+3
  2750   0011D2                     l3391:
  2751   0011D2  C0A8  F051         	movff	_sinf$3124,___cosdf@x
  2752   0011D6  C0A9  F052         	movff	_sinf$3124+1,___cosdf@x+1
  2753   0011DA  C0AA  F053         	movff	_sinf$3124+2,___cosdf@x+2
  2754   0011DE  C0AB  F054         	movff	_sinf$3124+3,___cosdf@x+3
  2755   0011E2  EC7A  F017         	call	___cosdf	;wreg free
  2756   0011E6  C051  F078         	movff	?___cosdf,___flneg@f1
  2757   0011EA  C052  F079         	movff	?___cosdf+1,___flneg@f1+1
  2758   0011EE  C053  F07A         	movff	?___cosdf+2,___flneg@f1+2
  2759   0011F2  C054  F07B         	movff	?___cosdf+3,___flneg@f1+3
  2760   0011F6  EC96  F01F         	call	___flneg	;wreg free
  2761   0011FA  C078  F09A         	movff	?___flneg,?_sinf
  2762   0011FE  C079  F09B         	movff	?___flneg+1,?_sinf+1
  2763   001202  C07A  F09C         	movff	?___flneg+2,?_sinf+2
  2764   001206  C07B  F09D         	movff	?___flneg+3,?_sinf+3
  2765   00120A  EFE1  F00A         	goto	l1113
  2766   00120E                     l3397:
  2767                           
  2768                           ; BSR set to: 0
  2769   00120E  C09A  F041         	movff	sinf@x,___fladd@b
  2770   001212  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2771   001216  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2772   00121A  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2773   00121E  0EDB               	movlw	219
  2774   001220  6E45               	movwf	___fladd@a^0,c
  2775   001222  0E0F               	movlw	15
  2776   001224  6E46               	movwf	(___fladd@a+1)^0,c
  2777   001226  0EC9               	movlw	201
  2778   001228  6E47               	movwf	(___fladd@a+2)^0,c
  2779   00122A  0EBF               	movlw	191
  2780   00122C  6E48               	movwf	(___fladd@a+3)^0,c
  2781   00122E  ECE2  F00A         	call	___fladd	;wreg free
  2782   001232  C041  F0A8         	movff	?___fladd,_sinf$3124
  2783   001236  C042  F0A9         	movff	?___fladd+1,_sinf$3124+1
  2784   00123A  C043  F0AA         	movff	?___fladd+2,_sinf$3124+2
  2785   00123E  C044  F0AB         	movff	?___fladd+3,_sinf$3124+3
  2786   001242                     l3399:
  2787   001242  C0A8  F051         	movff	_sinf$3124,___cosdf@x
  2788   001246  C0A9  F052         	movff	_sinf$3124+1,___cosdf@x+1
  2789   00124A  C0AA  F053         	movff	_sinf$3124+2,___cosdf@x+2
  2790   00124E  C0AB  F054         	movff	_sinf$3124+3,___cosdf@x+3
  2791   001252  EC7A  F017         	call	___cosdf	;wreg free
  2792   001256  C051  F09A         	movff	?___cosdf,?_sinf
  2793   00125A  C052  F09B         	movff	?___cosdf+1,?_sinf+1
  2794   00125E  C053  F09C         	movff	?___cosdf+2,?_sinf+2
  2795   001262  C054  F09D         	movff	?___cosdf+3,?_sinf+3
  2796   001266  EFE1  F00A         	goto	l1113
  2797   00126A                     l3403:
  2798                           
  2799                           ; BSR set to: 0
  2800   00126A  51A7               	movf	sinf@sign& (0+255),w,b
  2801   00126C  A4D8               	btfss	status,2,c
  2802   00126E  EF3B  F009         	goto	u3771
  2803   001272  EF3D  F009         	goto	u3770
  2804   001276                     u3771:
  2805   001276  EF63  F009         	goto	l3407
  2806   00127A                     u3770:
  2807   00127A                     
  2808                           ; BSR set to: 0
  2809   00127A  0EDB               	movlw	219
  2810   00127C  6E45               	movwf	___fladd@a^0,c
  2811   00127E  0E0F               	movlw	15
  2812   001280  6E46               	movwf	(___fladd@a+1)^0,c
  2813   001282  0E49               	movlw	73
  2814   001284  6E47               	movwf	(___fladd@a+2)^0,c
  2815   001286  0EC0               	movlw	192
  2816   001288  6E48               	movwf	(___fladd@a+3)^0,c
  2817   00128A  C09A  F041         	movff	sinf@x,___fladd@b
  2818   00128E  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2819   001292  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2820   001296  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2821   00129A  ECE2  F00A         	call	___fladd	;wreg free
  2822   00129E  C041  F078         	movff	?___fladd,___flneg@f1
  2823   0012A2  C042  F079         	movff	?___fladd+1,___flneg@f1+1
  2824   0012A6  C043  F07A         	movff	?___fladd+2,___flneg@f1+2
  2825   0012AA  C044  F07B         	movff	?___fladd+3,___flneg@f1+3
  2826   0012AE  EC96  F01F         	call	___flneg	;wreg free
  2827   0012B2  C078  F09E         	movff	?___flneg,_sinf$2859
  2828   0012B6  C079  F09F         	movff	?___flneg+1,_sinf$2859+1
  2829   0012BA  C07A  F0A0         	movff	?___flneg+2,_sinf$2859+2
  2830   0012BE  C07B  F0A1         	movff	?___flneg+3,_sinf$2859+3
  2831   0012C2  EF87  F009         	goto	l3409
  2832   0012C6                     l3407:
  2833                           
  2834                           ; BSR set to: 0
  2835   0012C6  0EDB               	movlw	219
  2836   0012C8  6E45               	movwf	___fladd@a^0,c
  2837   0012CA  0E0F               	movlw	15
  2838   0012CC  6E46               	movwf	(___fladd@a+1)^0,c
  2839   0012CE  0E49               	movlw	73
  2840   0012D0  6E47               	movwf	(___fladd@a+2)^0,c
  2841   0012D2  0E40               	movlw	64
  2842   0012D4  6E48               	movwf	(___fladd@a+3)^0,c
  2843   0012D6  C09A  F041         	movff	sinf@x,___fladd@b
  2844   0012DA  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2845   0012DE  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2846   0012E2  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2847   0012E6  ECE2  F00A         	call	___fladd	;wreg free
  2848   0012EA  C041  F078         	movff	?___fladd,___flneg@f1
  2849   0012EE  C042  F079         	movff	?___fladd+1,___flneg@f1+1
  2850   0012F2  C043  F07A         	movff	?___fladd+2,___flneg@f1+2
  2851   0012F6  C044  F07B         	movff	?___fladd+3,___flneg@f1+3
  2852   0012FA  EC96  F01F         	call	___flneg	;wreg free
  2853   0012FE  C078  F09E         	movff	?___flneg,_sinf$2859
  2854   001302  C079  F09F         	movff	?___flneg+1,_sinf$2859+1
  2855   001306  C07A  F0A0         	movff	?___flneg+2,_sinf$2859+2
  2856   00130A  C07B  F0A1         	movff	?___flneg+3,_sinf$2859+3
  2857   00130E                     l3409:
  2858   00130E  C09E  F051         	movff	_sinf$2859,___sindf@x
  2859   001312  C09F  F052         	movff	_sinf$2859+1,___sindf@x+1
  2860   001316  C0A0  F053         	movff	_sinf$2859+2,___sindf@x+2
  2861   00131A  C0A1  F054         	movff	_sinf$2859+3,___sindf@x+3
  2862   00131E  EC55  F015         	call	___sindf	;wreg free
  2863   001322  C051  F09A         	movff	?___sindf,?_sinf
  2864   001326  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2865   00132A  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2866   00132E  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2867   001332  EFE1  F00A         	goto	l1113
  2868   001336                     l3413:
  2869                           
  2870                           ; BSR set to: 0
  2871   001336  0ED6               	movlw	214
  2872   001338  5DB0               	subwf	sinf@ux& (0+255),w,b
  2873   00133A  0E31               	movlw	49
  2874   00133C  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2875   00133E  0EE2               	movlw	226
  2876   001340  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2877   001342  0E40               	movlw	64
  2878   001344  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2879   001346  B0D8               	btfsc	status,0,c
  2880   001348  EFA8  F009         	goto	u3781
  2881   00134C  EFAA  F009         	goto	u3780
  2882   001350                     u3781:
  2883   001350  EF4B  F00A         	goto	l3443
  2884   001354                     u3780:
  2885   001354                     
  2886                           ; BSR set to: 0
  2887   001354  0EE0               	movlw	224
  2888   001356  5DB0               	subwf	sinf@ux& (0+255),w,b
  2889   001358  0EED               	movlw	237
  2890   00135A  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2891   00135C  0EAF               	movlw	175
  2892   00135E  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2893   001360  0E40               	movlw	64
  2894   001362  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2895   001364  B0D8               	btfsc	status,0,c
  2896   001366  EFB7  F009         	goto	u3791
  2897   00136A  EFB9  F009         	goto	u3790
  2898   00136E                     u3791:
  2899   00136E  EFF9  F009         	goto	l3433
  2900   001372                     u3790:
  2901   001372                     
  2902                           ; BSR set to: 0
  2903   001372  51A7               	movf	sinf@sign& (0+255),w,b
  2904   001374  B4D8               	btfsc	status,2,c
  2905   001376  EFBF  F009         	goto	u3801
  2906   00137A  EFC1  F009         	goto	u3800
  2907   00137E                     u3801:
  2908   00137E  EFDD  F009         	goto	l3427
  2909   001382                     u3800:
  2910   001382                     
  2911                           ; BSR set to: 0
  2912   001382  C09A  F041         	movff	sinf@x,___fladd@b
  2913   001386  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2914   00138A  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2915   00138E  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2916   001392  0EE4               	movlw	228
  2917   001394  6E45               	movwf	___fladd@a^0,c
  2918   001396  0ECB               	movlw	203
  2919   001398  6E46               	movwf	(___fladd@a+1)^0,c
  2920   00139A  0E96               	movlw	150
  2921   00139C  6E47               	movwf	(___fladd@a+2)^0,c
  2922   00139E  0E40               	movlw	64
  2923   0013A0  6E48               	movwf	(___fladd@a+3)^0,c
  2924   0013A2  ECE2  F00A         	call	___fladd	;wreg free
  2925   0013A6  C041  F0A8         	movff	?___fladd,_sinf$3124
  2926   0013AA  C042  F0A9         	movff	?___fladd+1,_sinf$3124+1
  2927   0013AE  C043  F0AA         	movff	?___fladd+2,_sinf$3124+2
  2928   0013B2  C044  F0AB         	movff	?___fladd+3,_sinf$3124+3
  2929   0013B6  EF21  F009         	goto	l3399
  2930   0013BA                     l3427:
  2931                           
  2932                           ; BSR set to: 0
  2933   0013BA  0EE4               	movlw	228
  2934   0013BC  6E45               	movwf	___fladd@a^0,c
  2935   0013BE  0ECB               	movlw	203
  2936   0013C0  6E46               	movwf	(___fladd@a+1)^0,c
  2937   0013C2  0E96               	movlw	150
  2938   0013C4  6E47               	movwf	(___fladd@a+2)^0,c
  2939   0013C6  0EC0               	movlw	192
  2940   0013C8  6E48               	movwf	(___fladd@a+3)^0,c
  2941   0013CA  C09A  F041         	movff	sinf@x,___fladd@b
  2942   0013CE  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2943   0013D2  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2944   0013D6  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2945   0013DA  ECE2  F00A         	call	___fladd	;wreg free
  2946   0013DE  C041  F0A8         	movff	?___fladd,_sinf$3124
  2947   0013E2  C042  F0A9         	movff	?___fladd+1,_sinf$3124+1
  2948   0013E6  C043  F0AA         	movff	?___fladd+2,_sinf$3124+2
  2949   0013EA  C044  F0AB         	movff	?___fladd+3,_sinf$3124+3
  2950   0013EE  EFE9  F008         	goto	l3391
  2951   0013F2                     l3433:
  2952                           
  2953                           ; BSR set to: 0
  2954   0013F2  51A7               	movf	sinf@sign& (0+255),w,b
  2955   0013F4  A4D8               	btfss	status,2,c
  2956   0013F6  EFFF  F009         	goto	u3811
  2957   0013FA  EF01  F00A         	goto	u3810
  2958   0013FE                     u3811:
  2959   0013FE  EF1D  F00A         	goto	l3437
  2960   001402                     u3810:
  2961   001402                     
  2962                           ; BSR set to: 0
  2963   001402  C09A  F041         	movff	sinf@x,___fladd@b
  2964   001406  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2965   00140A  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2966   00140E  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2967   001412  0EDB               	movlw	219
  2968   001414  6E45               	movwf	___fladd@a^0,c
  2969   001416  0E0F               	movlw	15
  2970   001418  6E46               	movwf	(___fladd@a+1)^0,c
  2971   00141A  0EC9               	movlw	201
  2972   00141C  6E47               	movwf	(___fladd@a+2)^0,c
  2973   00141E  0EC0               	movlw	192
  2974   001420  6E48               	movwf	(___fladd@a+3)^0,c
  2975   001422  ECE2  F00A         	call	___fladd	;wreg free
  2976   001426  C041  F0A2         	movff	?___fladd,_sinf$2860
  2977   00142A  C042  F0A3         	movff	?___fladd+1,_sinf$2860+1
  2978   00142E  C043  F0A4         	movff	?___fladd+2,_sinf$2860+2
  2979   001432  C044  F0A5         	movff	?___fladd+3,_sinf$2860+3
  2980   001436  EF37  F00A         	goto	l3439
  2981   00143A                     l3437:
  2982                           
  2983                           ; BSR set to: 0
  2984   00143A  C09A  F041         	movff	sinf@x,___fladd@b
  2985   00143E  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2986   001442  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2987   001446  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2988   00144A  0EDB               	movlw	219
  2989   00144C  6E45               	movwf	___fladd@a^0,c
  2990   00144E  0E0F               	movlw	15
  2991   001450  6E46               	movwf	(___fladd@a+1)^0,c
  2992   001452  0EC9               	movlw	201
  2993   001454  6E47               	movwf	(___fladd@a+2)^0,c
  2994   001456  0E40               	movlw	64
  2995   001458  6E48               	movwf	(___fladd@a+3)^0,c
  2996   00145A  ECE2  F00A         	call	___fladd	;wreg free
  2997   00145E  C041  F0A2         	movff	?___fladd,_sinf$2860
  2998   001462  C042  F0A3         	movff	?___fladd+1,_sinf$2860+1
  2999   001466  C043  F0A4         	movff	?___fladd+2,_sinf$2860+2
  3000   00146A  C044  F0A5         	movff	?___fladd+3,_sinf$2860+3
  3001   00146E                     l3439:
  3002   00146E  C0A2  F051         	movff	_sinf$2860,___sindf@x
  3003   001472  C0A3  F052         	movff	_sinf$2860+1,___sindf@x+1
  3004   001476  C0A4  F053         	movff	_sinf$2860+2,___sindf@x+2
  3005   00147A  C0A5  F054         	movff	_sinf$2860+3,___sindf@x+3
  3006   00147E  EC55  F015         	call	___sindf	;wreg free
  3007   001482  C051  F09A         	movff	?___sindf,?_sinf
  3008   001486  C052  F09B         	movff	?___sindf+1,?_sinf+1
  3009   00148A  C053  F09C         	movff	?___sindf+2,?_sinf+2
  3010   00148E  C054  F09D         	movff	?___sindf+3,?_sinf+3
  3011   001492  EFE1  F00A         	goto	l1113
  3012   001496                     l3443:
  3013                           
  3014                           ; BSR set to: 0
  3015   001496  0E80               	movlw	128
  3016   001498  5DB2               	subwf	(sinf@ux+2)& (0+255),w,b
  3017   00149A  0E7F               	movlw	127
  3018   00149C  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  3019   00149E  A0D8               	btfss	status,0,c
  3020   0014A0  EF54  F00A         	goto	u3821
  3021   0014A4  EF56  F00A         	goto	u3820
  3022   0014A8                     u3821:
  3023   0014A8  EF68  F00A         	goto	l3451
  3024   0014AC                     u3820:
  3025   0014AC                     
  3026                           ; BSR set to: 0
  3027   0014AC  0EFF               	movlw	255
  3028   0014AE  13B0               	iorwf	sinf@ux& (0+255),f,b
  3029   0014B0  0EFF               	movlw	255
  3030   0014B2  13B1               	iorwf	(sinf@ux+1)& (0+255),f,b
  3031   0014B4  0EFF               	movlw	255
  3032   0014B6  13B2               	iorwf	(sinf@ux+2)& (0+255),f,b
  3033   0014B8  0E00               	movlw	0
  3034   0014BA  13B3               	iorwf	(sinf@ux+3)& (0+255),f,b
  3035   0014BC                     
  3036                           ; BSR set to: 0
  3037   0014BC  C0B0  F09A         	movff	sinf@ux,?_sinf
  3038   0014C0  C0B1  F09B         	movff	sinf@ux+1,?_sinf+1
  3039   0014C4  C0B2  F09C         	movff	sinf@ux+2,?_sinf+2
  3040   0014C8  C0B3  F09D         	movff	sinf@ux+3,?_sinf+3
  3041   0014CC  EFE1  F00A         	goto	l1113
  3042   0014D0                     l3451:
  3043                           
  3044                           ; BSR set to: 0
  3045   0014D0  C09A  F07C         	movff	sinf@x,___rem_pio2f@x
  3046   0014D4  C09B  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  3047   0014D8  C09C  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  3048   0014DC  C09D  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  3049   0014E0  0EAC               	movlw	low sinf@y
  3050   0014E2  6F80               	movwf	___rem_pio2f@y& (0+255),b
  3051   0014E4  EC57  F00F         	call	___rem_pio2f	;wreg free
  3052   0014E8  0100               	movlb	0	; () banked
  3053   0014EA  517C               	movf	?___rem_pio2f& (0+255),w,b
  3054   0014EC  0B03               	andlw	3
  3055   0014EE  6FA6               	movwf	sinf@n& (0+255),b
  3056   0014F0  EFD2  F00A         	goto	l3469
  3057   0014F4                     l3453:
  3058                           
  3059                           ; BSR set to: 0
  3060   0014F4  C0AC  F078         	movff	sinf@y,___flneg@f1
  3061   0014F8  C0AD  F079         	movff	sinf@y+1,___flneg@f1+1
  3062   0014FC  C0AE  F07A         	movff	sinf@y+2,___flneg@f1+2
  3063   001500  C0AF  F07B         	movff	sinf@y+3,___flneg@f1+3
  3064   001504  EC96  F01F         	call	___flneg	;wreg free
  3065   001508  C078  F0AC         	movff	?___flneg,sinf@y
  3066   00150C  C079  F0AD         	movff	?___flneg+1,sinf@y+1
  3067   001510  C07A  F0AE         	movff	?___flneg+2,sinf@y+2
  3068   001514  C07B  F0AF         	movff	?___flneg+3,sinf@y+3
  3069   001518                     l3455:
  3070   001518  C0AC  F051         	movff	sinf@y,___sindf@x
  3071   00151C  C0AD  F052         	movff	sinf@y+1,___sindf@x+1
  3072   001520  C0AE  F053         	movff	sinf@y+2,___sindf@x+2
  3073   001524  C0AF  F054         	movff	sinf@y+3,___sindf@x+3
  3074   001528  EC55  F015         	call	___sindf	;wreg free
  3075   00152C  C051  F09A         	movff	?___sindf,?_sinf
  3076   001530  C052  F09B         	movff	?___sindf+1,?_sinf+1
  3077   001534  C053  F09C         	movff	?___sindf+2,?_sinf+2
  3078   001538  C054  F09D         	movff	?___sindf+3,?_sinf+3
  3079   00153C  EFE1  F00A         	goto	l1113
  3080   001540                     l3459:
  3081                           
  3082                           ; BSR set to: 0
  3083   001540  C0AC  F051         	movff	sinf@y,___cosdf@x
  3084   001544  C0AD  F052         	movff	sinf@y+1,___cosdf@x+1
  3085   001548  C0AE  F053         	movff	sinf@y+2,___cosdf@x+2
  3086   00154C  C0AF  F054         	movff	sinf@y+3,___cosdf@x+3
  3087   001550  EC7A  F017         	call	___cosdf	;wreg free
  3088   001554  C051  F09A         	movff	?___cosdf,?_sinf
  3089   001558  C052  F09B         	movff	?___cosdf+1,?_sinf+1
  3090   00155C  C053  F09C         	movff	?___cosdf+2,?_sinf+2
  3091   001560  C054  F09D         	movff	?___cosdf+3,?_sinf+3
  3092   001564  EFE1  F00A         	goto	l1113
  3093   001568                     l3463:
  3094                           
  3095                           ; BSR set to: 0
  3096   001568  C0AC  F051         	movff	sinf@y,___cosdf@x
  3097   00156C  C0AD  F052         	movff	sinf@y+1,___cosdf@x+1
  3098   001570  C0AE  F053         	movff	sinf@y+2,___cosdf@x+2
  3099   001574  C0AF  F054         	movff	sinf@y+3,___cosdf@x+3
  3100   001578  EC7A  F017         	call	___cosdf	;wreg free
  3101   00157C  C051  F078         	movff	?___cosdf,___flneg@f1
  3102   001580  C052  F079         	movff	?___cosdf+1,___flneg@f1+1
  3103   001584  C053  F07A         	movff	?___cosdf+2,___flneg@f1+2
  3104   001588  C054  F07B         	movff	?___cosdf+3,___flneg@f1+3
  3105   00158C  EC96  F01F         	call	___flneg	;wreg free
  3106   001590  C078  F09A         	movff	?___flneg,?_sinf
  3107   001594  C079  F09B         	movff	?___flneg+1,?_sinf+1
  3108   001598  C07A  F09C         	movff	?___flneg+2,?_sinf+2
  3109   00159C  C07B  F09D         	movff	?___flneg+3,?_sinf+3
  3110   0015A0  EFE1  F00A         	goto	l1113
  3111   0015A4                     l3469:
  3112                           
  3113                           ; BSR set to: 0
  3114   0015A4  51A6               	movf	sinf@n& (0+255),w,b
  3115                           
  3116                           ; Switch size 1, requested type "simple"
  3117                           ; Number of cases is 3, Range of values is 0 to 2
  3118                           ; switch strategies available:
  3119                           ; Name         Instructions Cycles
  3120                           ; simple_byte           10     6 (average)
  3121                           ;	Chosen strategy is simple_byte
  3122   0015A6  0A00               	xorlw	0	; case 0
  3123   0015A8  B4D8               	btfsc	status,2,c
  3124   0015AA  EF8C  F00A         	goto	l3455
  3125   0015AE  0A01               	xorlw	1	; case 1
  3126   0015B0  B4D8               	btfsc	status,2,c
  3127   0015B2  EFA0  F00A         	goto	l3459
  3128   0015B6  0A03               	xorlw	3	; case 2
  3129   0015B8  B4D8               	btfsc	status,2,c
  3130   0015BA  EF7A  F00A         	goto	l3453
  3131   0015BE  EFB4  F00A         	goto	l3463
  3132   0015C2                     l1113:
  3133   0015C2  0012               	return		;funcret
  3134   0015C4                     __end_of_sinf:
  3135                           	callstack 0
  3136                           
  3137 ;; *************** function ___sindf *****************
  3138 ;; Defined at:
  3139 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__sindf.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  x               4   80[COMRAM] float 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  z               4   24[BANK0 ] float 
  3144 ;;  s               4   20[BANK0 ] float 
  3145 ;;  w               4    4[BANK0 ] float 
  3146 ;;  r               4    0[BANK0 ] float 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  4   80[COMRAM] float 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:       32 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		___fladd
  3165 ;;		___flmul
  3166 ;; This function is called by:
  3167 ;;		_sinf
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text10
  3172   002AAA                     __ptext10:
  3173                           	callstack 0
  3174   002AAA                     ___sindf:
  3175                           	callstack 27
  3176   002AAA  C051  F00F         	movff	___sindf@x,___flmul@b
  3177   002AAE  C052  F010         	movff	___sindf@x+1,___flmul@b+1
  3178   002AB2  C053  F011         	movff	___sindf@x+2,___flmul@b+2
  3179   002AB6  C054  F012         	movff	___sindf@x+3,___flmul@b+3
  3180   002ABA  C051  F013         	movff	___sindf@x,___flmul@a
  3181   002ABE  C052  F014         	movff	___sindf@x+1,___flmul@a+1
  3182   002AC2  C053  F015         	movff	___sindf@x+2,___flmul@a+2
  3183   002AC6  C054  F016         	movff	___sindf@x+3,___flmul@a+3
  3184   002ACA  EC42  F00D         	call	___flmul	;wreg free
  3185   002ACE  C00F  F078         	movff	?___flmul,___sindf@z
  3186   002AD2  C010  F079         	movff	?___flmul+1,___sindf@z+1
  3187   002AD6  C011  F07A         	movff	?___flmul+2,___sindf@z+2
  3188   002ADA  C012  F07B         	movff	?___flmul+3,___sindf@z+3
  3189   002ADE  C078  F00F         	movff	___sindf@z,___flmul@b
  3190   002AE2  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3191   002AE6  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3192   002AEA  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3193   002AEE  C078  F013         	movff	___sindf@z,___flmul@a
  3194   002AF2  C079  F014         	movff	___sindf@z+1,___flmul@a+1
  3195   002AF6  C07A  F015         	movff	___sindf@z+2,___flmul@a+2
  3196   002AFA  C07B  F016         	movff	___sindf@z+3,___flmul@a+3
  3197   002AFE  EC42  F00D         	call	___flmul	;wreg free
  3198   002B02  C00F  F064         	movff	?___flmul,___sindf@w
  3199   002B06  C010  F065         	movff	?___flmul+1,___sindf@w+1
  3200   002B0A  C011  F066         	movff	?___flmul+2,___sindf@w+2
  3201   002B0E  C012  F067         	movff	?___flmul+3,___sindf@w+3
  3202   002B12  0E3C               	movlw	60
  3203   002B14  6E13               	movwf	___flmul@a^0,c
  3204   002B16  0E6C               	movlw	108
  3205   002B18  6E14               	movwf	(___flmul@a+1)^0,c
  3206   002B1A  0E36               	movlw	54
  3207   002B1C  6E15               	movwf	(___flmul@a+2)^0,c
  3208   002B1E  0E36               	movlw	54
  3209   002B20  6E16               	movwf	(___flmul@a+3)^0,c
  3210   002B22  C078  F00F         	movff	___sindf@z,___flmul@b
  3211   002B26  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3212   002B2A  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3213   002B2E  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3214   002B32  EC42  F00D         	call	___flmul	;wreg free
  3215   002B36  C00F  F041         	movff	?___flmul,___fladd@b
  3216   002B3A  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3217   002B3E  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3218   002B42  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3219   002B46  0ECF               	movlw	207
  3220   002B48  6E45               	movwf	___fladd@a^0,c
  3221   002B4A  0E07               	movlw	7
  3222   002B4C  6E46               	movwf	(___fladd@a+1)^0,c
  3223   002B4E  0E50               	movlw	80
  3224   002B50  6E47               	movwf	(___fladd@a+2)^0,c
  3225   002B52  0EB9               	movlw	185
  3226   002B54  6E48               	movwf	(___fladd@a+3)^0,c
  3227   002B56  ECE2  F00A         	call	___fladd	;wreg free
  3228   002B5A  C041  F060         	movff	?___fladd,___sindf@r
  3229   002B5E  C042  F061         	movff	?___fladd+1,___sindf@r+1
  3230   002B62  C043  F062         	movff	?___fladd+2,___sindf@r+2
  3231   002B66  C044  F063         	movff	?___fladd+3,___sindf@r+3
  3232   002B6A  C078  F00F         	movff	___sindf@z,___flmul@b
  3233   002B6E  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3234   002B72  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3235   002B76  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3236   002B7A  C051  F013         	movff	___sindf@x,___flmul@a
  3237   002B7E  C052  F014         	movff	___sindf@x+1,___flmul@a+1
  3238   002B82  C053  F015         	movff	___sindf@x+2,___flmul@a+2
  3239   002B86  C054  F016         	movff	___sindf@x+3,___flmul@a+3
  3240   002B8A  EC42  F00D         	call	___flmul	;wreg free
  3241   002B8E  C00F  F074         	movff	?___flmul,___sindf@s
  3242   002B92  C010  F075         	movff	?___flmul+1,___sindf@s+1
  3243   002B96  C011  F076         	movff	?___flmul+2,___sindf@s+2
  3244   002B9A  C012  F077         	movff	?___flmul+3,___sindf@s+3
  3245   002B9E  0EAB               	movlw	171
  3246   002BA0  6E45               	movwf	___fladd@a^0,c
  3247   002BA2  0EAA               	movlw	170
  3248   002BA4  6E46               	movwf	(___fladd@a+1)^0,c
  3249   002BA6  0E2A               	movlw	42
  3250   002BA8  6E47               	movwf	(___fladd@a+2)^0,c
  3251   002BAA  0EBE               	movlw	190
  3252   002BAC  6E48               	movwf	(___fladd@a+3)^0,c
  3253   002BAE  0E84               	movlw	132
  3254   002BB0  6E13               	movwf	___flmul@a^0,c
  3255   002BB2  0E88               	movlw	136
  3256   002BB4  6E14               	movwf	(___flmul@a+1)^0,c
  3257   002BB6  0E08               	movlw	8
  3258   002BB8  6E15               	movwf	(___flmul@a+2)^0,c
  3259   002BBA  0E3C               	movlw	60
  3260   002BBC  6E16               	movwf	(___flmul@a+3)^0,c
  3261   002BBE  C078  F00F         	movff	___sindf@z,___flmul@b
  3262   002BC2  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  3263   002BC6  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  3264   002BCA  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  3265   002BCE  EC42  F00D         	call	___flmul	;wreg free
  3266   002BD2  C00F  F041         	movff	?___flmul,___fladd@b
  3267   002BD6  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3268   002BDA  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3269   002BDE  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3270   002BE2  ECE2  F00A         	call	___fladd	;wreg free
  3271   002BE6  C041  F068         	movff	?___fladd,___sindf$3129
  3272   002BEA  C042  F069         	movff	?___fladd+1,___sindf$3129+1
  3273   002BEE  C043  F06A         	movff	?___fladd+2,___sindf$3129+2
  3274   002BF2  C044  F06B         	movff	?___fladd+3,___sindf$3129+3
  3275   002BF6  C064  F013         	movff	___sindf@w,___flmul@a
  3276   002BFA  C065  F014         	movff	___sindf@w+1,___flmul@a+1
  3277   002BFE  C066  F015         	movff	___sindf@w+2,___flmul@a+2
  3278   002C02  C067  F016         	movff	___sindf@w+3,___flmul@a+3
  3279   002C06  C074  F00F         	movff	___sindf@s,___flmul@b
  3280   002C0A  C075  F010         	movff	___sindf@s+1,___flmul@b+1
  3281   002C0E  C076  F011         	movff	___sindf@s+2,___flmul@b+2
  3282   002C12  C077  F012         	movff	___sindf@s+3,___flmul@b+3
  3283   002C16  EC42  F00D         	call	___flmul	;wreg free
  3284   002C1A  C00F  F06C         	movff	?___flmul,___sindf$3130
  3285   002C1E  C010  F06D         	movff	?___flmul+1,___sindf$3130+1
  3286   002C22  C011  F06E         	movff	?___flmul+2,___sindf$3130+2
  3287   002C26  C012  F06F         	movff	?___flmul+3,___sindf$3130+3
  3288   002C2A  C051  F045         	movff	___sindf@x,___fladd@a
  3289   002C2E  C052  F046         	movff	___sindf@x+1,___fladd@a+1
  3290   002C32  C053  F047         	movff	___sindf@x+2,___fladd@a+2
  3291   002C36  C054  F048         	movff	___sindf@x+3,___fladd@a+3
  3292   002C3A  C074  F013         	movff	___sindf@s,___flmul@a
  3293   002C3E  C075  F014         	movff	___sindf@s+1,___flmul@a+1
  3294   002C42  C076  F015         	movff	___sindf@s+2,___flmul@a+2
  3295   002C46  C077  F016         	movff	___sindf@s+3,___flmul@a+3
  3296   002C4A  C068  F00F         	movff	___sindf$3129,___flmul@b
  3297   002C4E  C069  F010         	movff	___sindf$3129+1,___flmul@b+1
  3298   002C52  C06A  F011         	movff	___sindf$3129+2,___flmul@b+2
  3299   002C56  C06B  F012         	movff	___sindf$3129+3,___flmul@b+3
  3300   002C5A  EC42  F00D         	call	___flmul	;wreg free
  3301   002C5E  C00F  F041         	movff	?___flmul,___fladd@b
  3302   002C62  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3303   002C66  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3304   002C6A  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3305   002C6E  ECE2  F00A         	call	___fladd	;wreg free
  3306   002C72  C041  F070         	movff	?___fladd,___sindf$3131
  3307   002C76  C042  F071         	movff	?___fladd+1,___sindf$3131+1
  3308   002C7A  C043  F072         	movff	?___fladd+2,___sindf$3131+2
  3309   002C7E  C044  F073         	movff	?___fladd+3,___sindf$3131+3
  3310   002C82  C070  F041         	movff	___sindf$3131,___fladd@b
  3311   002C86  C071  F042         	movff	___sindf$3131+1,___fladd@b+1
  3312   002C8A  C072  F043         	movff	___sindf$3131+2,___fladd@b+2
  3313   002C8E  C073  F044         	movff	___sindf$3131+3,___fladd@b+3
  3314   002C92  C060  F013         	movff	___sindf@r,___flmul@a
  3315   002C96  C061  F014         	movff	___sindf@r+1,___flmul@a+1
  3316   002C9A  C062  F015         	movff	___sindf@r+2,___flmul@a+2
  3317   002C9E  C063  F016         	movff	___sindf@r+3,___flmul@a+3
  3318   002CA2  C06C  F00F         	movff	___sindf$3130,___flmul@b
  3319   002CA6  C06D  F010         	movff	___sindf$3130+1,___flmul@b+1
  3320   002CAA  C06E  F011         	movff	___sindf$3130+2,___flmul@b+2
  3321   002CAE  C06F  F012         	movff	___sindf$3130+3,___flmul@b+3
  3322   002CB2  EC42  F00D         	call	___flmul	;wreg free
  3323   002CB6  C00F  F045         	movff	?___flmul,___fladd@a
  3324   002CBA  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3325   002CBE  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3326   002CC2  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3327   002CC6  ECE2  F00A         	call	___fladd	;wreg free
  3328   002CCA  C041  F051         	movff	?___fladd,?___sindf
  3329   002CCE  C042  F052         	movff	?___fladd+1,?___sindf+1
  3330   002CD2  C043  F053         	movff	?___fladd+2,?___sindf+2
  3331   002CD6  C044  F054         	movff	?___fladd+3,?___sindf+3
  3332   002CDA  0012               	return		;funcret
  3333   002CDC                     __end_of___sindf:
  3334                           	callstack 0
  3335                           
  3336 ;; *************** function ___rem_pio2f *****************
  3337 ;; Defined at:
  3338 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__rem_pio2f.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  x               4   28[BANK0 ] float 
  3341 ;;  y               1   32[BANK0 ] PTR 
  3342 ;;		 -> sinf@y(4), 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  n               4   54[BANK0 ] long 
  3345 ;;  t               4   50[BANK0 ] float 
  3346 ;;  fn              4   46[BANK0 ] float 
  3347 ;;  ux              4   42[BANK0 ] struct .
  3348 ;;  ty              4   33[BANK0 ] [1]
  3349 ;;  sign            1   41[BANK0 ] _Bool 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2   28[BANK0 ] int 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3359 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;Total ram usage:       32 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 2
  3366 ;; This function calls:
  3367 ;;		___fladd
  3368 ;;		___flmul
  3369 ;;		___flneg
  3370 ;;		___flsub
  3371 ;;		___fltol
  3372 ;;		___xxtofl
  3373 ;;		_fabsf
  3374 ;; This function is called by:
  3375 ;;		_sinf
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text11
  3380   001EAE                     __ptext11:
  3381                           	callstack 0
  3382   001EAE                     ___rem_pio2f:
  3383                           	callstack 26
  3384   001EAE  C0E5  F08A         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  3385   001EB2  C0E6  F08B         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  3386   001EB6  C0E7  F08C         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  3387   001EBA  C0E8  F08D         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  3388   001EBE  C07C  F08A         	movff	___rem_pio2f@x,___rem_pio2f@ux
  3389   001EC2  C07D  F08B         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  3390   001EC6  C07E  F08C         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  3391   001ECA  C07F  F08D         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  3392   001ECE  0100               	movlb	0	; () banked
  3393   001ED0  BF8D               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  3394   001ED2  EF6D  F00F         	goto	u3551
  3395   001ED6  EF70  F00F         	goto	u3550
  3396   001EDA                     u3551:
  3397   001EDA  0E01               	movlw	1
  3398   001EDC  EF71  F00F         	goto	u3560
  3399   001EE0                     u3550:
  3400   001EE0  0E00               	movlw	0
  3401   001EE2                     u3560:
  3402   001EE2  6F89               	movwf	___rem_pio2f@sign& (0+255),b
  3403   001EE4                     
  3404                           ; BSR set to: 0
  3405   001EE4  9F8D               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  3406   001EE6                     
  3407                           ; BSR set to: 0
  3408   001EE6  0EDB               	movlw	219
  3409   001EE8  5D8A               	subwf	___rem_pio2f@ux& (0+255),w,b
  3410   001EEA  0E0F               	movlw	15
  3411   001EEC  598B               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  3412   001EEE  0EC9               	movlw	201
  3413   001EF0  598C               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  3414   001EF2  0E4D               	movlw	77
  3415   001EF4  598D               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  3416   001EF6  B0D8               	btfsc	status,0,c
  3417   001EF8  EF80  F00F         	goto	u3571
  3418   001EFC  EF82  F00F         	goto	u3570
  3419   001F00                     u3571:
  3420   001F00  EF6E  F010         	goto	l3309
  3421   001F04                     u3570:
  3422   001F04                     
  3423                           ; BSR set to: 0
  3424   001F04  C07C  F001         	movff	___rem_pio2f@x,fabsf@x
  3425   001F08  C07D  F002         	movff	___rem_pio2f@x+1,fabsf@x+1
  3426   001F0C  C07E  F003         	movff	___rem_pio2f@x+2,fabsf@x+2
  3427   001F10  C07F  F004         	movff	___rem_pio2f@x+3,fabsf@x+3
  3428   001F14  ECE9  F01F         	call	_fabsf	;wreg free
  3429   001F18  C001  F092         	movff	?_fabsf,___rem_pio2f@t
  3430   001F1C  C002  F093         	movff	?_fabsf+1,___rem_pio2f@t+1
  3431   001F20  C003  F094         	movff	?_fabsf+2,___rem_pio2f@t+2
  3432   001F24  C004  F095         	movff	?_fabsf+3,___rem_pio2f@t+3
  3433   001F28  0E00               	movlw	0
  3434   001F2A  6E45               	movwf	___fladd@a^0,c
  3435   001F2C  0E00               	movlw	0
  3436   001F2E  6E46               	movwf	(___fladd@a+1)^0,c
  3437   001F30  0E00               	movlw	0
  3438   001F32  6E47               	movwf	(___fladd@a+2)^0,c
  3439   001F34  0E3F               	movlw	63
  3440   001F36  6E48               	movwf	(___fladd@a+3)^0,c
  3441   001F38  0E83               	movlw	131
  3442   001F3A  6E13               	movwf	___flmul@a^0,c
  3443   001F3C  0EF9               	movlw	249
  3444   001F3E  6E14               	movwf	(___flmul@a+1)^0,c
  3445   001F40  0E22               	movlw	34
  3446   001F42  6E15               	movwf	(___flmul@a+2)^0,c
  3447   001F44  0E3F               	movlw	63
  3448   001F46  6E16               	movwf	(___flmul@a+3)^0,c
  3449   001F48  C092  F00F         	movff	___rem_pio2f@t,___flmul@b
  3450   001F4C  C093  F010         	movff	___rem_pio2f@t+1,___flmul@b+1
  3451   001F50  C094  F011         	movff	___rem_pio2f@t+2,___flmul@b+2
  3452   001F54  C095  F012         	movff	___rem_pio2f@t+3,___flmul@b+3
  3453   001F58  EC42  F00D         	call	___flmul	;wreg free
  3454   001F5C  C00F  F041         	movff	?___flmul,___fladd@b
  3455   001F60  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3456   001F64  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3457   001F68  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3458   001F6C  ECE2  F00A         	call	___fladd	;wreg free
  3459   001F70  C041  F051         	movff	?___fladd,___fltol@f1
  3460   001F74  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  3461   001F78  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  3462   001F7C  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  3463   001F80  EC76  F01B         	call	___fltol	;wreg free
  3464   001F84  C051  F096         	movff	?___fltol,___rem_pio2f@n
  3465   001F88  C052  F097         	movff	?___fltol+1,___rem_pio2f@n+1
  3466   001F8C  C053  F098         	movff	?___fltol+2,___rem_pio2f@n+2
  3467   001F90  C054  F099         	movff	?___fltol+3,___rem_pio2f@n+3
  3468   001F94  C096  F001         	movff	___rem_pio2f@n,___xxtofl@val
  3469   001F98  C097  F002         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3470   001F9C  C098  F003         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3471   001FA0  C099  F004         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3472   001FA4  0E01               	movlw	1
  3473   001FA6  EC79  F018         	call	___xxtofl
  3474   001FAA  C001  F08E         	movff	?___xxtofl,___rem_pio2f@fn
  3475   001FAE  C002  F08F         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3476   001FB2  C003  F090         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3477   001FB6  C004  F091         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3478   001FBA  0EDA               	movlw	218
  3479   001FBC  6E13               	movwf	___flmul@a^0,c
  3480   001FBE  0E0F               	movlw	15
  3481   001FC0  6E14               	movwf	(___flmul@a+1)^0,c
  3482   001FC2  0EC9               	movlw	201
  3483   001FC4  6E15               	movwf	(___flmul@a+2)^0,c
  3484   001FC6  0E3F               	movlw	63
  3485   001FC8  6E16               	movwf	(___flmul@a+3)^0,c
  3486   001FCA  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3487   001FCE  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3488   001FD2  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3489   001FD6  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3490   001FDA  EC42  F00D         	call	___flmul	;wreg free
  3491   001FDE  C00F  F055         	movff	?___flmul,___flsub@a
  3492   001FE2  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3493   001FE6  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3494   001FEA  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3495   001FEE  C092  F051         	movff	___rem_pio2f@t,___flsub@b
  3496   001FF2  C093  F052         	movff	___rem_pio2f@t+1,___flsub@b+1
  3497   001FF6  C094  F053         	movff	___rem_pio2f@t+2,___flsub@b+2
  3498   001FFA  C095  F054         	movff	___rem_pio2f@t+3,___flsub@b+3
  3499   001FFE  ECF0  F01E         	call	___flsub	;wreg free
  3500   002002  C051  F085         	movff	?___flsub,___rem_pio2f$3128
  3501   002006  C052  F086         	movff	?___flsub+1,___rem_pio2f$3128+1
  3502   00200A  C053  F087         	movff	?___flsub+2,___rem_pio2f$3128+2
  3503   00200E  C054  F088         	movff	?___flsub+3,___rem_pio2f$3128+3
  3504   002012  C085  F051         	movff	___rem_pio2f$3128,___flsub@b
  3505   002016  C086  F052         	movff	___rem_pio2f$3128+1,___flsub@b+1
  3506   00201A  C087  F053         	movff	___rem_pio2f$3128+2,___flsub@b+2
  3507   00201E  C088  F054         	movff	___rem_pio2f$3128+3,___flsub@b+3
  3508   002022  0EA3               	movlw	163
  3509   002024  6E13               	movwf	___flmul@a^0,c
  3510   002026  0E85               	movlw	133
  3511   002028  6E14               	movwf	(___flmul@a+1)^0,c
  3512   00202A  0E88               	movlw	136
  3513   00202C  6E15               	movwf	(___flmul@a+2)^0,c
  3514   00202E  0E32               	movlw	50
  3515   002030  6E16               	movwf	(___flmul@a+3)^0,c
  3516   002032  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3517   002036  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3518   00203A  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3519   00203E  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3520   002042  EC42  F00D         	call	___flmul	;wreg free
  3521   002046  C00F  F055         	movff	?___flmul,___flsub@a
  3522   00204A  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3523   00204E  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3524   002052  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3525   002056  ECF0  F01E         	call	___flsub	;wreg free
  3526   00205A  0100               	movlb	0	; () banked
  3527   00205C  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3528   00205E  6ED9               	movwf	fsr2l,c
  3529   002060  6ADA               	clrf	fsr2h,c
  3530   002062  C051  FFDE         	movff	?___flsub,postinc2
  3531   002066  C052  FFDE         	movff	?___flsub+1,postinc2
  3532   00206A  C053  FFDE         	movff	?___flsub+2,postinc2
  3533   00206E  C054  FFDE         	movff	?___flsub+3,postinc2
  3534   002072                     
  3535                           ; BSR set to: 0
  3536   002072  5189               	movf	___rem_pio2f@sign& (0+255),w,b
  3537   002074  B4D8               	btfsc	status,2,c
  3538   002076  EF3F  F010         	goto	u3581
  3539   00207A  EF41  F010         	goto	u3580
  3540   00207E                     u3581:
  3541   00207E  EF68  F010         	goto	l1163
  3542   002082                     u3580:
  3543   002082                     l3303:
  3544                           
  3545                           ; BSR set to: 0
  3546   002082  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3547   002084  6ED9               	movwf	fsr2l,c
  3548   002086  6ADA               	clrf	fsr2h,c
  3549   002088  CFDE F078          	movff	postinc2,___flneg@f1
  3550   00208C  CFDE F079          	movff	postinc2,___flneg@f1+1
  3551   002090  CFDE F07A          	movff	postinc2,___flneg@f1+2
  3552   002094  CFDE F07B          	movff	postinc2,___flneg@f1+3
  3553   002098  EC96  F01F         	call	___flneg	;wreg free
  3554   00209C  0100               	movlb	0	; () banked
  3555   00209E  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3556   0020A0  6ED9               	movwf	fsr2l,c
  3557   0020A2  6ADA               	clrf	fsr2h,c
  3558   0020A4  C078  FFDE         	movff	?___flneg,postinc2
  3559   0020A8  C079  FFDE         	movff	?___flneg+1,postinc2
  3560   0020AC  C07A  FFDE         	movff	?___flneg+2,postinc2
  3561   0020B0  C07B  FFDE         	movff	?___flneg+3,postinc2
  3562   0020B4                     
  3563                           ; BSR set to: 0
  3564   0020B4  C096  F05B         	movff	___rem_pio2f@n,??___rem_pio2f
  3565   0020B8  C097  F05C         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  3566   0020BC  1E5B               	comf	??___rem_pio2f^0,f,c
  3567   0020BE  1E5C               	comf	(??___rem_pio2f+1)^0,f,c
  3568   0020C0  4A5B               	infsnz	??___rem_pio2f^0,f,c
  3569   0020C2  2A5C               	incf	(??___rem_pio2f+1)^0,f,c
  3570   0020C4  C05B  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  3571   0020C8  C05C  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  3572   0020CC  EF37  F011         	goto	l1164
  3573   0020D0                     l1163:
  3574                           
  3575                           ; BSR set to: 0
  3576   0020D0  C096  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  3577   0020D4  C097  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  3578   0020D8  EF37  F011         	goto	l1164
  3579   0020DC                     l3309:
  3580                           
  3581                           ; BSR set to: 0
  3582   0020DC  C07C  F001         	movff	___rem_pio2f@x,fabsf@x
  3583   0020E0  C07D  F002         	movff	___rem_pio2f@x+1,fabsf@x+1
  3584   0020E4  C07E  F003         	movff	___rem_pio2f@x+2,fabsf@x+2
  3585   0020E8  C07F  F004         	movff	___rem_pio2f@x+3,fabsf@x+3
  3586   0020EC  ECE9  F01F         	call	_fabsf	;wreg free
  3587   0020F0  C001  F092         	movff	?_fabsf,___rem_pio2f@t
  3588   0020F4  C002  F093         	movff	?_fabsf+1,___rem_pio2f@t+1
  3589   0020F8  C003  F094         	movff	?_fabsf+2,___rem_pio2f@t+2
  3590   0020FC  C004  F095         	movff	?_fabsf+3,___rem_pio2f@t+3
  3591   002100  0E00               	movlw	0
  3592   002102  6E45               	movwf	___fladd@a^0,c
  3593   002104  0E00               	movlw	0
  3594   002106  6E46               	movwf	(___fladd@a+1)^0,c
  3595   002108  0E00               	movlw	0
  3596   00210A  6E47               	movwf	(___fladd@a+2)^0,c
  3597   00210C  0E3F               	movlw	63
  3598   00210E  6E48               	movwf	(___fladd@a+3)^0,c
  3599   002110  0E83               	movlw	131
  3600   002112  6E13               	movwf	___flmul@a^0,c
  3601   002114  0EF9               	movlw	249
  3602   002116  6E14               	movwf	(___flmul@a+1)^0,c
  3603   002118  0E22               	movlw	34
  3604   00211A  6E15               	movwf	(___flmul@a+2)^0,c
  3605   00211C  0E3F               	movlw	63
  3606   00211E  6E16               	movwf	(___flmul@a+3)^0,c
  3607   002120  C092  F00F         	movff	___rem_pio2f@t,___flmul@b
  3608   002124  C093  F010         	movff	___rem_pio2f@t+1,___flmul@b+1
  3609   002128  C094  F011         	movff	___rem_pio2f@t+2,___flmul@b+2
  3610   00212C  C095  F012         	movff	___rem_pio2f@t+3,___flmul@b+3
  3611   002130  EC42  F00D         	call	___flmul	;wreg free
  3612   002134  C00F  F041         	movff	?___flmul,___fladd@b
  3613   002138  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3614   00213C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3615   002140  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3616   002144  ECE2  F00A         	call	___fladd	;wreg free
  3617   002148  C041  F051         	movff	?___fladd,___fltol@f1
  3618   00214C  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  3619   002150  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  3620   002154  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  3621   002158  EC76  F01B         	call	___fltol	;wreg free
  3622   00215C  C051  F096         	movff	?___fltol,___rem_pio2f@n
  3623   002160  C052  F097         	movff	?___fltol+1,___rem_pio2f@n+1
  3624   002164  C053  F098         	movff	?___fltol+2,___rem_pio2f@n+2
  3625   002168  C054  F099         	movff	?___fltol+3,___rem_pio2f@n+3
  3626   00216C  C096  F001         	movff	___rem_pio2f@n,___xxtofl@val
  3627   002170  C097  F002         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  3628   002174  C098  F003         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  3629   002178  C099  F004         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  3630   00217C  0E01               	movlw	1
  3631   00217E  EC79  F018         	call	___xxtofl
  3632   002182  C001  F08E         	movff	?___xxtofl,___rem_pio2f@fn
  3633   002186  C002  F08F         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  3634   00218A  C003  F090         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  3635   00218E  C004  F091         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  3636   002192  0EDA               	movlw	218
  3637   002194  6E13               	movwf	___flmul@a^0,c
  3638   002196  0E0F               	movlw	15
  3639   002198  6E14               	movwf	(___flmul@a+1)^0,c
  3640   00219A  0EC9               	movlw	201
  3641   00219C  6E15               	movwf	(___flmul@a+2)^0,c
  3642   00219E  0E3F               	movlw	63
  3643   0021A0  6E16               	movwf	(___flmul@a+3)^0,c
  3644   0021A2  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3645   0021A6  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3646   0021AA  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3647   0021AE  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3648   0021B2  EC42  F00D         	call	___flmul	;wreg free
  3649   0021B6  C00F  F055         	movff	?___flmul,___flsub@a
  3650   0021BA  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3651   0021BE  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3652   0021C2  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3653   0021C6  C092  F051         	movff	___rem_pio2f@t,___flsub@b
  3654   0021CA  C093  F052         	movff	___rem_pio2f@t+1,___flsub@b+1
  3655   0021CE  C094  F053         	movff	___rem_pio2f@t+2,___flsub@b+2
  3656   0021D2  C095  F054         	movff	___rem_pio2f@t+3,___flsub@b+3
  3657   0021D6  ECF0  F01E         	call	___flsub	;wreg free
  3658   0021DA  C051  F085         	movff	?___flsub,___rem_pio2f$3128
  3659   0021DE  C052  F086         	movff	?___flsub+1,___rem_pio2f$3128+1
  3660   0021E2  C053  F087         	movff	?___flsub+2,___rem_pio2f$3128+2
  3661   0021E6  C054  F088         	movff	?___flsub+3,___rem_pio2f$3128+3
  3662   0021EA  C085  F051         	movff	___rem_pio2f$3128,___flsub@b
  3663   0021EE  C086  F052         	movff	___rem_pio2f$3128+1,___flsub@b+1
  3664   0021F2  C087  F053         	movff	___rem_pio2f$3128+2,___flsub@b+2
  3665   0021F6  C088  F054         	movff	___rem_pio2f$3128+3,___flsub@b+3
  3666   0021FA  0EA3               	movlw	163
  3667   0021FC  6E13               	movwf	___flmul@a^0,c
  3668   0021FE  0E85               	movlw	133
  3669   002200  6E14               	movwf	(___flmul@a+1)^0,c
  3670   002202  0E88               	movlw	136
  3671   002204  6E15               	movwf	(___flmul@a+2)^0,c
  3672   002206  0E32               	movlw	50
  3673   002208  6E16               	movwf	(___flmul@a+3)^0,c
  3674   00220A  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  3675   00220E  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  3676   002212  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  3677   002216  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  3678   00221A  EC42  F00D         	call	___flmul	;wreg free
  3679   00221E  C00F  F055         	movff	?___flmul,___flsub@a
  3680   002222  C010  F056         	movff	?___flmul+1,___flsub@a+1
  3681   002226  C011  F057         	movff	?___flmul+2,___flsub@a+2
  3682   00222A  C012  F058         	movff	?___flmul+3,___flsub@a+3
  3683   00222E  ECF0  F01E         	call	___flsub	;wreg free
  3684   002232  C051  F081         	movff	?___flsub,___rem_pio2f@ty
  3685   002236  C052  F082         	movff	?___flsub+1,___rem_pio2f@ty+1
  3686   00223A  C053  F083         	movff	?___flsub+2,___rem_pio2f@ty+2
  3687   00223E  C054  F084         	movff	?___flsub+3,___rem_pio2f@ty+3
  3688   002242  0100               	movlb	0	; () banked
  3689   002244  5180               	movf	___rem_pio2f@y& (0+255),w,b
  3690   002246  6ED9               	movwf	fsr2l,c
  3691   002248  6ADA               	clrf	fsr2h,c
  3692   00224A  C081  FFDE         	movff	___rem_pio2f@ty,postinc2
  3693   00224E  C082  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  3694   002252  C083  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  3695   002256  C084  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  3696   00225A                     
  3697                           ; BSR set to: 0
  3698   00225A  5189               	movf	___rem_pio2f@sign& (0+255),w,b
  3699   00225C  B4D8               	btfsc	status,2,c
  3700   00225E  EF33  F011         	goto	u3591
  3701   002262  EF35  F011         	goto	u3590
  3702   002266                     u3591:
  3703   002266  EF68  F010         	goto	l1163
  3704   00226A                     u3590:
  3705   00226A  EF41  F010         	goto	l3303
  3706   00226E                     l1164:
  3707                           
  3708                           ; BSR set to: 0
  3709   00226E  0012               	return		;funcret
  3710   002270                     __end_of___rem_pio2f:
  3711                           	callstack 0
  3712                           
  3713 ;; *************** function _fabsf *****************
  3714 ;; Defined at:
  3715 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;  x               4    0[COMRAM] float 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  u               4    4[COMRAM] struct .
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  4    0[COMRAM] float 
  3722 ;; Registers used:
  3723 ;;		status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;Total ram usage:        8 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		___rem_pio2f
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text12
  3743   003FD2                     __ptext12:
  3744                           	callstack 0
  3745   003FD2                     _fabsf:
  3746                           	callstack 27
  3747   003FD2  C0E1  F005         	movff	fabsf@F465,fabsf@u
  3748   003FD6  C0E2  F006         	movff	fabsf@F465+1,fabsf@u+1
  3749   003FDA  C0E3  F007         	movff	fabsf@F465+2,fabsf@u+2
  3750   003FDE  C0E4  F008         	movff	fabsf@F465+3,fabsf@u+3
  3751   003FE2  C001  F005         	movff	fabsf@x,fabsf@u
  3752   003FE6  C002  F006         	movff	fabsf@x+1,fabsf@u+1
  3753   003FEA  C003  F007         	movff	fabsf@x+2,fabsf@u+2
  3754   003FEE  C004  F008         	movff	fabsf@x+3,fabsf@u+3
  3755   003FF2  9E08               	bcf	(fabsf@u+3)^0,7,c
  3756   003FF4  C005  F001         	movff	fabsf@u,?_fabsf
  3757   003FF8  C006  F002         	movff	fabsf@u+1,?_fabsf+1
  3758   003FFC  C007  F003         	movff	fabsf@u+2,?_fabsf+2
  3759   004000  C008  F004         	movff	fabsf@u+3,?_fabsf+3
  3760   004004  0012               	return		;funcret
  3761   004006                     __end_of_fabsf:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function ___xxtofl *****************
  3765 ;; Defined at:
  3766 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  sign            1    wreg     unsigned char 
  3769 ;;  val             4    0[COMRAM] long 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  sign            1    8[COMRAM] unsigned char 
  3772 ;;  arg             4   10[COMRAM] unsigned long 
  3773 ;;  exp             1    9[COMRAM] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  4    0[COMRAM] unsigned char 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:       14 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_runDAC
  3793 ;;		___rem_pio2f
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text13
  3798   0030F2                     __ptext13:
  3799                           	callstack 0
  3800   0030F2                     ___xxtofl:
  3801                           	callstack 27
  3802                           
  3803                           ;incstack = 0
  3804                           ;___xxtofl@sign stored from wreg
  3805   0030F2  6E09               	movwf	___xxtofl@sign^0,c
  3806   0030F4  5009               	movf	___xxtofl@sign^0,w,c
  3807   0030F6  B4D8               	btfsc	status,2,c
  3808   0030F8  EF80  F018         	goto	u3321
  3809   0030FC  EF82  F018         	goto	u3320
  3810   003100                     u3321:
  3811   003100  EFA4  F018         	goto	l946
  3812   003104                     u3320:
  3813   003104  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3814   003106  EF89  F018         	goto	u3330
  3815   00310A  EF87  F018         	goto	u3331
  3816   00310E                     u3331:
  3817   00310E  EFA4  F018         	goto	l946
  3818   003112                     u3330:
  3819   003112  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3820   003116  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3821   00311A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3822   00311E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3823   003122  1E05               	comf	??___xxtofl^0,f,c
  3824   003124  1E06               	comf	(??___xxtofl+1)^0,f,c
  3825   003126  1E07               	comf	(??___xxtofl+2)^0,f,c
  3826   003128  1E08               	comf	(??___xxtofl+3)^0,f,c
  3827   00312A  2A05               	incf	??___xxtofl^0,f,c
  3828   00312C  0E00               	movlw	0
  3829   00312E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3830   003130  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3831   003132  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3832   003134  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3833   003138  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3834   00313C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3835   003140  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3836   003144  EFAC  F018         	goto	l3139
  3837   003148                     l946:
  3838   003148  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3839   00314C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3840   003150  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3841   003154  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3842   003158                     l3139:
  3843   003158  5001               	movf	___xxtofl@val^0,w,c
  3844   00315A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3845   00315C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3846   00315E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3847   003160  A4D8               	btfss	status,2,c
  3848   003162  EFB5  F018         	goto	u3341
  3849   003166  EFB7  F018         	goto	u3340
  3850   00316A                     u3341:
  3851   00316A  EFC1  F018         	goto	l3145
  3852   00316E                     u3340:
  3853   00316E  0E00               	movlw	0
  3854   003170  6E01               	movwf	?___xxtofl^0,c
  3855   003172  0E00               	movlw	0
  3856   003174  6E02               	movwf	(?___xxtofl+1)^0,c
  3857   003176  0E00               	movlw	0
  3858   003178  6E03               	movwf	(?___xxtofl+2)^0,c
  3859   00317A  0E00               	movlw	0
  3860   00317C  6E04               	movwf	(?___xxtofl+3)^0,c
  3861   00317E  EF52  F019         	goto	l949
  3862   003182                     l3145:
  3863   003182  0E96               	movlw	150
  3864   003184  6E0A               	movwf	___xxtofl@exp^0,c
  3865   003186  EFCB  F018         	goto	l3149
  3866   00318A                     l3147:
  3867   00318A  2A0A               	incf	___xxtofl@exp^0,f,c
  3868   00318C  90D8               	bcf	status,0,c
  3869   00318E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3870   003190  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3871   003192  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3872   003194  320B               	rrcf	___xxtofl@arg^0,f,c
  3873   003196                     l3149:
  3874   003196  0E00               	movlw	0
  3875   003198  140B               	andwf	___xxtofl@arg^0,w,c
  3876   00319A  6E05               	movwf	??___xxtofl^0,c
  3877   00319C  0E00               	movlw	0
  3878   00319E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3879   0031A0  6E06               	movwf	(??___xxtofl+1)^0,c
  3880   0031A2  0E00               	movlw	0
  3881   0031A4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3882   0031A6  6E07               	movwf	(??___xxtofl+2)^0,c
  3883   0031A8  0EFE               	movlw	254
  3884   0031AA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3885   0031AC  6E08               	movwf	(??___xxtofl+3)^0,c
  3886   0031AE  5005               	movf	??___xxtofl^0,w,c
  3887   0031B0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3888   0031B2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3889   0031B4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3890   0031B6  A4D8               	btfss	status,2,c
  3891   0031B8  EFE0  F018         	goto	u3351
  3892   0031BC  EFE2  F018         	goto	u3350
  3893   0031C0                     u3351:
  3894   0031C0  EFC5  F018         	goto	l3147
  3895   0031C4                     u3350:
  3896   0031C4  EFF0  F018         	goto	l953
  3897   0031C8                     l3151:
  3898   0031C8  2A0A               	incf	___xxtofl@exp^0,f,c
  3899   0031CA  0E01               	movlw	1
  3900   0031CC  260B               	addwf	___xxtofl@arg^0,f,c
  3901   0031CE  0E00               	movlw	0
  3902   0031D0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3903   0031D2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3904   0031D4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3905   0031D6  90D8               	bcf	status,0,c
  3906   0031D8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3907   0031DA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3908   0031DC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3909   0031DE  320B               	rrcf	___xxtofl@arg^0,f,c
  3910   0031E0                     l953:
  3911   0031E0  0E00               	movlw	0
  3912   0031E2  140B               	andwf	___xxtofl@arg^0,w,c
  3913   0031E4  6E05               	movwf	??___xxtofl^0,c
  3914   0031E6  0E00               	movlw	0
  3915   0031E8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3916   0031EA  6E06               	movwf	(??___xxtofl+1)^0,c
  3917   0031EC  0E00               	movlw	0
  3918   0031EE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3919   0031F0  6E07               	movwf	(??___xxtofl+2)^0,c
  3920   0031F2  0EFF               	movlw	255
  3921   0031F4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3922   0031F6  6E08               	movwf	(??___xxtofl+3)^0,c
  3923   0031F8  5005               	movf	??___xxtofl^0,w,c
  3924   0031FA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3925   0031FC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3926   0031FE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3927   003200  A4D8               	btfss	status,2,c
  3928   003202  EF05  F019         	goto	u3361
  3929   003206  EF07  F019         	goto	u3360
  3930   00320A                     u3361:
  3931   00320A  EFE4  F018         	goto	l3151
  3932   00320E                     u3360:
  3933   00320E  EF0F  F019         	goto	l3159
  3934   003212                     l3157:
  3935   003212  060A               	decf	___xxtofl@exp^0,f,c
  3936   003214  90D8               	bcf	status,0,c
  3937   003216  360B               	rlcf	___xxtofl@arg^0,f,c
  3938   003218  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3939   00321A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3940   00321C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3941   00321E                     l3159:
  3942   00321E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3943   003220  EF14  F019         	goto	u3371
  3944   003224  EF16  F019         	goto	u3370
  3945   003228                     u3371:
  3946   003228  EF1E  F019         	goto	l960
  3947   00322C                     u3370:
  3948   00322C  0E02               	movlw	2
  3949   00322E  600A               	cpfslt	___xxtofl@exp^0,c
  3950   003230  EF1C  F019         	goto	u3381
  3951   003234  EF1E  F019         	goto	u3380
  3952   003238                     u3381:
  3953   003238  EF09  F019         	goto	l3157
  3954   00323C                     u3380:
  3955   00323C                     l960:
  3956   00323C  B00A               	btfsc	___xxtofl@exp^0,0,c
  3957   00323E  EF23  F019         	goto	u3391
  3958   003242  EF25  F019         	goto	u3390
  3959   003246                     u3391:
  3960   003246  EF26  F019         	goto	l3165
  3961   00324A                     u3390:
  3962   00324A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3963   00324C                     l3165:
  3964   00324C  90D8               	bcf	status,0,c
  3965   00324E  320A               	rrcf	___xxtofl@exp^0,f,c
  3966   003250  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3967   003254  6A06               	clrf	(??___xxtofl+1)^0,c
  3968   003256  6A07               	clrf	(??___xxtofl+2)^0,c
  3969   003258  6A08               	clrf	(??___xxtofl+3)^0,c
  3970   00325A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3971   00325E  6A07               	clrf	(??___xxtofl+2)^0,c
  3972   003260  6A06               	clrf	(??___xxtofl+1)^0,c
  3973   003262  6A05               	clrf	??___xxtofl^0,c
  3974   003264  5005               	movf	??___xxtofl^0,w,c
  3975   003266  120B               	iorwf	___xxtofl@arg^0,f,c
  3976   003268  5006               	movf	(??___xxtofl+1)^0,w,c
  3977   00326A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3978   00326C  5007               	movf	(??___xxtofl+2)^0,w,c
  3979   00326E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3980   003270  5008               	movf	(??___xxtofl+3)^0,w,c
  3981   003272  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3982   003274  5009               	movf	___xxtofl@sign^0,w,c
  3983   003276  B4D8               	btfsc	status,2,c
  3984   003278  EF40  F019         	goto	u3401
  3985   00327C  EF42  F019         	goto	u3400
  3986   003280                     u3401:
  3987   003280  EF4A  F019         	goto	l3175
  3988   003284                     u3400:
  3989   003284  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3990   003286  EF49  F019         	goto	u3410
  3991   00328A  EF47  F019         	goto	u3411
  3992   00328E                     u3411:
  3993   00328E  EF4A  F019         	goto	l3175
  3994   003292                     u3410:
  3995   003292  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3996   003294                     l3175:
  3997   003294  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3998   003298  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3999   00329C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4000   0032A0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4001   0032A4                     l949:
  4002   0032A4  0012               	return		;funcret
  4003   0032A6                     __end_of___xxtofl:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function ___fltol *****************
  4007 ;; Defined at:
  4008 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  f1              4   80[COMRAM] unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  exp1            1   89[COMRAM] unsigned char 
  4013 ;;  sign1           1   88[COMRAM] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  4   80[COMRAM] long 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;Total ram usage:       10 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_runDAC
  4033 ;;		___rem_pio2f
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text14
  4038   0036EC                     __ptext14:
  4039                           	callstack 0
  4040   0036EC                     ___fltol:
  4041                           	callstack 27
  4042   0036EC  3453               	rlcf	(___fltol@f1+2)^0,w,c
  4043   0036EE  3454               	rlcf	(___fltol@f1+3)^0,w,c
  4044   0036F0  6E5A               	movwf	___fltol@exp1^0,c
  4045   0036F2  505A               	movf	___fltol@exp1^0,w,c
  4046   0036F4  A4D8               	btfss	status,2,c
  4047   0036F6  EF7F  F01B         	goto	u3251
  4048   0036FA  EF81  F01B         	goto	u3250
  4049   0036FE                     u3251:
  4050   0036FE  EF8B  F01B         	goto	l3095
  4051   003702                     u3250:
  4052   003702                     l3091:
  4053   003702  0E00               	movlw	0
  4054   003704  6E51               	movwf	?___fltol^0,c
  4055   003706  0E00               	movlw	0
  4056   003708  6E52               	movwf	(?___fltol+1)^0,c
  4057   00370A  0E00               	movlw	0
  4058   00370C  6E53               	movwf	(?___fltol+2)^0,c
  4059   00370E  0E00               	movlw	0
  4060   003710  6E54               	movwf	(?___fltol+3)^0,c
  4061   003712  EFF8  F01B         	goto	l588
  4062   003716                     l3095:
  4063   003716  C051  F055         	movff	___fltol@f1,??___fltol
  4064   00371A  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  4065   00371E  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  4066   003722  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  4067   003726  0E20               	movlw	32
  4068   003728  EF9B  F01B         	goto	u3260
  4069   00372C                     u3265:
  4070   00372C  90D8               	bcf	status,0,c
  4071   00372E  3258               	rrcf	(??___fltol+3)^0,f,c
  4072   003730  3257               	rrcf	(??___fltol+2)^0,f,c
  4073   003732  3256               	rrcf	(??___fltol+1)^0,f,c
  4074   003734  3255               	rrcf	??___fltol^0,f,c
  4075   003736                     u3260:
  4076   003736  2EE8               	decfsz	wreg,f,c
  4077   003738  EF96  F01B         	goto	u3265
  4078   00373C  5055               	movf	??___fltol^0,w,c
  4079   00373E  6E59               	movwf	___fltol@sign1^0,c
  4080   003740  8E53               	bsf	(___fltol@f1+2)^0,7,c
  4081   003742  0EFF               	movlw	255
  4082   003744  1651               	andwf	___fltol@f1^0,f,c
  4083   003746  0EFF               	movlw	255
  4084   003748  1652               	andwf	(___fltol@f1+1)^0,f,c
  4085   00374A  0EFF               	movlw	255
  4086   00374C  1653               	andwf	(___fltol@f1+2)^0,f,c
  4087   00374E  0E00               	movlw	0
  4088   003750  1654               	andwf	(___fltol@f1+3)^0,f,c
  4089   003752  0E96               	movlw	150
  4090   003754  5E5A               	subwf	___fltol@exp1^0,f,c
  4091   003756  BE5A               	btfsc	___fltol@exp1^0,7,c
  4092   003758  EFB2  F01B         	goto	u3270
  4093   00375C  EFB0  F01B         	goto	u3271
  4094   003760                     u3271:
  4095   003760  EFC8  F01B         	goto	l3115
  4096   003764                     u3270:
  4097   003764  505A               	movf	___fltol@exp1^0,w,c
  4098   003766  0A80               	xorlw	128
  4099   003768  0F97               	addlw	151
  4100   00376A  B0D8               	btfsc	status,0,c
  4101   00376C  EFBA  F01B         	goto	u3281
  4102   003770  EFBC  F01B         	goto	u3280
  4103   003774                     u3281:
  4104   003774  EFBE  F01B         	goto	l3111
  4105   003778                     u3280:
  4106   003778  EF81  F01B         	goto	l3091
  4107   00377C                     l3111:
  4108   00377C  90D8               	bcf	status,0,c
  4109   00377E  3254               	rrcf	(___fltol@f1+3)^0,f,c
  4110   003780  3253               	rrcf	(___fltol@f1+2)^0,f,c
  4111   003782  3252               	rrcf	(___fltol@f1+1)^0,f,c
  4112   003784  3251               	rrcf	___fltol@f1^0,f,c
  4113   003786  3E5A               	incfsz	___fltol@exp1^0,f,c
  4114   003788  EFBE  F01B         	goto	l3111
  4115   00378C  EFE0  F01B         	goto	l3125
  4116   003790                     l3115:
  4117   003790  0E1F               	movlw	31
  4118   003792  645A               	cpfsgt	___fltol@exp1^0,c
  4119   003794  EFCE  F01B         	goto	u3291
  4120   003798  EFD0  F01B         	goto	u3290
  4121   00379C                     u3291:
  4122   00379C  EFD8  F01B         	goto	l3123
  4123   0037A0                     u3290:
  4124   0037A0  EF81  F01B         	goto	l3091
  4125   0037A4                     l3121:
  4126   0037A4  90D8               	bcf	status,0,c
  4127   0037A6  3651               	rlcf	___fltol@f1^0,f,c
  4128   0037A8  3652               	rlcf	(___fltol@f1+1)^0,f,c
  4129   0037AA  3653               	rlcf	(___fltol@f1+2)^0,f,c
  4130   0037AC  3654               	rlcf	(___fltol@f1+3)^0,f,c
  4131   0037AE  065A               	decf	___fltol@exp1^0,f,c
  4132   0037B0                     l3123:
  4133   0037B0  505A               	movf	___fltol@exp1^0,w,c
  4134   0037B2  A4D8               	btfss	status,2,c
  4135   0037B4  EFDE  F01B         	goto	u3301
  4136   0037B8  EFE0  F01B         	goto	u3300
  4137   0037BC                     u3301:
  4138   0037BC  EFD2  F01B         	goto	l3121
  4139   0037C0                     u3300:
  4140   0037C0                     l3125:
  4141   0037C0  5059               	movf	___fltol@sign1^0,w,c
  4142   0037C2  B4D8               	btfsc	status,2,c
  4143   0037C4  EFE6  F01B         	goto	u3311
  4144   0037C8  EFE8  F01B         	goto	u3310
  4145   0037CC                     u3311:
  4146   0037CC  EFF0  F01B         	goto	l3129
  4147   0037D0                     u3310:
  4148   0037D0  1E54               	comf	(___fltol@f1+3)^0,f,c
  4149   0037D2  1E53               	comf	(___fltol@f1+2)^0,f,c
  4150   0037D4  1E52               	comf	(___fltol@f1+1)^0,f,c
  4151   0037D6  6C51               	negf	___fltol@f1^0,c
  4152   0037D8  0E00               	movlw	0
  4153   0037DA  2252               	addwfc	(___fltol@f1+1)^0,f,c
  4154   0037DC  2253               	addwfc	(___fltol@f1+2)^0,f,c
  4155   0037DE  2254               	addwfc	(___fltol@f1+3)^0,f,c
  4156   0037E0                     l3129:
  4157   0037E0  C051  F051         	movff	___fltol@f1,?___fltol
  4158   0037E4  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  4159   0037E8  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  4160   0037EC  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  4161   0037F0                     l588:
  4162   0037F0  0012               	return		;funcret
  4163   0037F2                     __end_of___fltol:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function ___flsub *****************
  4167 ;; Defined at:
  4168 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  b               4   80[COMRAM] long 
  4171 ;;  a               4   84[COMRAM] long 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  4   80[COMRAM] long 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        8 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 1
  4190 ;; This function calls:
  4191 ;;		___fladd
  4192 ;; This function is called by:
  4193 ;;		___rem_pio2f
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text15
  4198   003DE0                     __ptext15:
  4199                           	callstack 0
  4200   003DE0                     ___flsub:
  4201                           	callstack 26
  4202   003DE0  0E00               	movlw	0
  4203   003DE2  1A55               	xorwf	___flsub@a^0,f,c
  4204   003DE4  0E00               	movlw	0
  4205   003DE6  1A56               	xorwf	(___flsub@a+1)^0,f,c
  4206   003DE8  0E00               	movlw	0
  4207   003DEA  1A57               	xorwf	(___flsub@a+2)^0,f,c
  4208   003DEC  0E80               	movlw	128
  4209   003DEE  1A58               	xorwf	(___flsub@a+3)^0,f,c
  4210   003DF0  C051  F041         	movff	___flsub@b,___fladd@b
  4211   003DF4  C052  F042         	movff	___flsub@b+1,___fladd@b+1
  4212   003DF8  C053  F043         	movff	___flsub@b+2,___fladd@b+2
  4213   003DFC  C054  F044         	movff	___flsub@b+3,___fladd@b+3
  4214   003E00  C055  F045         	movff	___flsub@a,___fladd@a
  4215   003E04  C056  F046         	movff	___flsub@a+1,___fladd@a+1
  4216   003E08  C057  F047         	movff	___flsub@a+2,___fladd@a+2
  4217   003E0C  C058  F048         	movff	___flsub@a+3,___fladd@a+3
  4218   003E10  ECE2  F00A         	call	___fladd	;wreg free
  4219   003E14  C041  F051         	movff	?___fladd,?___flsub
  4220   003E18  C042  F052         	movff	?___fladd+1,?___flsub+1
  4221   003E1C  C043  F053         	movff	?___fladd+2,?___flsub+2
  4222   003E20  C044  F054         	movff	?___fladd+3,?___flsub+3
  4223   003E24  0012               	return		;funcret
  4224   003E26                     __end_of___flsub:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function ___flneg *****************
  4228 ;; Defined at:
  4229 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  f1              4   24[BANK0 ] long 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  4   24[BANK0 ] long 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;Total ram usage:        4 bytes
  4248 ;; Hardware stack levels used: 1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_sinf
  4253 ;;		___rem_pio2f
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text16
  4258   003F2C                     __ptext16:
  4259                           	callstack 0
  4260   003F2C                     ___flneg:
  4261                           	callstack 27
  4262   003F2C  0100               	movlb	0	; () banked
  4263   003F2E  5178               	movf	___flneg@f1& (0+255),w,b
  4264   003F30  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  4265   003F32  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  4266   003F34  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  4267   003F36  B4D8               	btfsc	status,2,c
  4268   003F38  EFA0  F01F         	goto	u3241
  4269   003F3C  EFA2  F01F         	goto	u3240
  4270   003F40                     u3241:
  4271   003F40  EFAA  F01F         	goto	l3085
  4272   003F44                     u3240:
  4273   003F44                     
  4274                           ; BSR set to: 0
  4275   003F44  0E00               	movlw	0
  4276   003F46  1B78               	xorwf	___flneg@f1& (0+255),f,b
  4277   003F48  0E00               	movlw	0
  4278   003F4A  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  4279   003F4C  0E00               	movlw	0
  4280   003F4E  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  4281   003F50  0E80               	movlw	128
  4282   003F52  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  4283   003F54                     l3085:
  4284                           
  4285                           ; BSR set to: 0
  4286   003F54  C078  F078         	movff	___flneg@f1,?___flneg
  4287   003F58  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  4288   003F5C  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  4289   003F60  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  4290   003F64                     
  4291                           ; BSR set to: 0
  4292   003F64  0012               	return		;funcret
  4293   003F66                     __end_of___flneg:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function ___cosdf *****************
  4297 ;; Defined at:
  4298 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__cosdf.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  x               4   80[COMRAM] long 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  z               4   20[BANK0 ] long 
  4303 ;;  w               4   16[BANK0 ] long 
  4304 ;;  r               4    0[BANK0 ] long 
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  4   80[COMRAM] float 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;Total ram usage:       28 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 1
  4321 ;; This function calls:
  4322 ;;		___fladd
  4323 ;;		___flmul
  4324 ;; This function is called by:
  4325 ;;		_sinf
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text17
  4330   002EF4                     __ptext17:
  4331                           	callstack 0
  4332   002EF4                     ___cosdf:
  4333                           	callstack 27
  4334   002EF4  C051  F00F         	movff	___cosdf@x,___flmul@b
  4335   002EF8  C052  F010         	movff	___cosdf@x+1,___flmul@b+1
  4336   002EFC  C053  F011         	movff	___cosdf@x+2,___flmul@b+2
  4337   002F00  C054  F012         	movff	___cosdf@x+3,___flmul@b+3
  4338   002F04  C051  F013         	movff	___cosdf@x,___flmul@a
  4339   002F08  C052  F014         	movff	___cosdf@x+1,___flmul@a+1
  4340   002F0C  C053  F015         	movff	___cosdf@x+2,___flmul@a+2
  4341   002F10  C054  F016         	movff	___cosdf@x+3,___flmul@a+3
  4342   002F14  EC42  F00D         	call	___flmul	;wreg free
  4343   002F18  C00F  F074         	movff	?___flmul,___cosdf@z
  4344   002F1C  C010  F075         	movff	?___flmul+1,___cosdf@z+1
  4345   002F20  C011  F076         	movff	?___flmul+2,___cosdf@z+2
  4346   002F24  C012  F077         	movff	?___flmul+3,___cosdf@z+3
  4347   002F28  C074  F00F         	movff	___cosdf@z,___flmul@b
  4348   002F2C  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  4349   002F30  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  4350   002F34  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  4351   002F38  C074  F013         	movff	___cosdf@z,___flmul@a
  4352   002F3C  C075  F014         	movff	___cosdf@z+1,___flmul@a+1
  4353   002F40  C076  F015         	movff	___cosdf@z+2,___flmul@a+2
  4354   002F44  C077  F016         	movff	___cosdf@z+3,___flmul@a+3
  4355   002F48  EC42  F00D         	call	___flmul	;wreg free
  4356   002F4C  C00F  F070         	movff	?___flmul,___cosdf@w
  4357   002F50  C010  F071         	movff	?___flmul+1,___cosdf@w+1
  4358   002F54  C011  F072         	movff	?___flmul+2,___cosdf@w+2
  4359   002F58  C012  F073         	movff	?___flmul+3,___cosdf@w+3
  4360   002F5C  0E17               	movlw	23
  4361   002F5E  6E13               	movwf	___flmul@a^0,c
  4362   002F60  0E9A               	movlw	154
  4363   002F62  6E14               	movwf	(___flmul@a+1)^0,c
  4364   002F64  0ECC               	movlw	204
  4365   002F66  6E15               	movwf	(___flmul@a+2)^0,c
  4366   002F68  0E37               	movlw	55
  4367   002F6A  6E16               	movwf	(___flmul@a+3)^0,c
  4368   002F6C  C074  F00F         	movff	___cosdf@z,___flmul@b
  4369   002F70  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  4370   002F74  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  4371   002F78  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  4372   002F7C  EC42  F00D         	call	___flmul	;wreg free
  4373   002F80  C00F  F041         	movff	?___flmul,___fladd@b
  4374   002F84  C010  F042         	movff	?___flmul+1,___fladd@b+1
  4375   002F88  C011  F043         	movff	?___flmul+2,___fladd@b+2
  4376   002F8C  C012  F044         	movff	?___flmul+3,___fladd@b+3
  4377   002F90  0E3F               	movlw	63
  4378   002F92  6E45               	movwf	___fladd@a^0,c
  4379   002F94  0E04               	movlw	4
  4380   002F96  6E46               	movwf	(___fladd@a+1)^0,c
  4381   002F98  0EB6               	movlw	182
  4382   002F9A  6E47               	movwf	(___fladd@a+2)^0,c
  4383   002F9C  0EBA               	movlw	186
  4384   002F9E  6E48               	movwf	(___fladd@a+3)^0,c
  4385   002FA0  ECE2  F00A         	call	___fladd	;wreg free
  4386   002FA4  C041  F060         	movff	?___fladd,___cosdf@r
  4387   002FA8  C042  F061         	movff	?___fladd+1,___cosdf@r+1
  4388   002FAC  C043  F062         	movff	?___fladd+2,___cosdf@r+2
  4389   002FB0  C044  F063         	movff	?___fladd+3,___cosdf@r+3
  4390   002FB4  0E00               	movlw	0
  4391   002FB6  6E45               	movwf	___fladd@a^0,c
  4392   002FB8  0E00               	movlw	0
  4393   002FBA  6E46               	movwf	(___fladd@a+1)^0,c
  4394   002FBC  0E80               	movlw	128
  4395   002FBE  6E47               	movwf	(___fladd@a+2)^0,c
  4396   002FC0  0E3F               	movlw	63
  4397   002FC2  6E48               	movwf	(___fladd@a+3)^0,c
  4398   002FC4  0E00               	movlw	0
  4399   002FC6  6E13               	movwf	___flmul@a^0,c
  4400   002FC8  0E00               	movlw	0
  4401   002FCA  6E14               	movwf	(___flmul@a+1)^0,c
  4402   002FCC  0E00               	movlw	0
  4403   002FCE  6E15               	movwf	(___flmul@a+2)^0,c
  4404   002FD0  0EBF               	movlw	191
  4405   002FD2  6E16               	movwf	(___flmul@a+3)^0,c
  4406   002FD4  C074  F00F         	movff	___cosdf@z,___flmul@b
  4407   002FD8  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  4408   002FDC  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  4409   002FE0  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  4410   002FE4  EC42  F00D         	call	___flmul	;wreg free
  4411   002FE8  C00F  F041         	movff	?___flmul,___fladd@b
  4412   002FEC  C010  F042         	movff	?___flmul+1,___fladd@b+1
  4413   002FF0  C011  F043         	movff	?___flmul+2,___fladd@b+2
  4414   002FF4  C012  F044         	movff	?___flmul+3,___fladd@b+3
  4415   002FF8  ECE2  F00A         	call	___fladd	;wreg free
  4416   002FFC  C041  F064         	movff	?___fladd,___cosdf$3125
  4417   003000  C042  F065         	movff	?___fladd+1,___cosdf$3125+1
  4418   003004  C043  F066         	movff	?___fladd+2,___cosdf$3125+2
  4419   003008  C044  F067         	movff	?___fladd+3,___cosdf$3125+3
  4420   00300C  C074  F013         	movff	___cosdf@z,___flmul@a
  4421   003010  C075  F014         	movff	___cosdf@z+1,___flmul@a+1
  4422   003014  C076  F015         	movff	___cosdf@z+2,___flmul@a+2
  4423   003018  C077  F016         	movff	___cosdf@z+3,___flmul@a+3
  4424   00301C  C070  F00F         	movff	___cosdf@w,___flmul@b
  4425   003020  C071  F010         	movff	___cosdf@w+1,___flmul@b+1
  4426   003024  C072  F011         	movff	___cosdf@w+2,___flmul@b+2
  4427   003028  C073  F012         	movff	___cosdf@w+3,___flmul@b+3
  4428   00302C  EC42  F00D         	call	___flmul	;wreg free
  4429   003030  C00F  F068         	movff	?___flmul,___cosdf$3126
  4430   003034  C010  F069         	movff	?___flmul+1,___cosdf$3126+1
  4431   003038  C011  F06A         	movff	?___flmul+2,___cosdf$3126+2
  4432   00303C  C012  F06B         	movff	?___flmul+3,___cosdf$3126+3
  4433   003040  0E9F               	movlw	159
  4434   003042  6E13               	movwf	___flmul@a^0,c
  4435   003044  0EAA               	movlw	170
  4436   003046  6E14               	movwf	(___flmul@a+1)^0,c
  4437   003048  0E2A               	movlw	42
  4438   00304A  6E15               	movwf	(___flmul@a+2)^0,c
  4439   00304C  0E3D               	movlw	61
  4440   00304E  6E16               	movwf	(___flmul@a+3)^0,c
  4441   003050  C070  F00F         	movff	___cosdf@w,___flmul@b
  4442   003054  C071  F010         	movff	___cosdf@w+1,___flmul@b+1
  4443   003058  C072  F011         	movff	___cosdf@w+2,___flmul@b+2
  4444   00305C  C073  F012         	movff	___cosdf@w+3,___flmul@b+3
  4445   003060  EC42  F00D         	call	___flmul	;wreg free
  4446   003064  C00F  F045         	movff	?___flmul,___fladd@a
  4447   003068  C010  F046         	movff	?___flmul+1,___fladd@a+1
  4448   00306C  C011  F047         	movff	?___flmul+2,___fladd@a+2
  4449   003070  C012  F048         	movff	?___flmul+3,___fladd@a+3
  4450   003074  C064  F041         	movff	___cosdf$3125,___fladd@b
  4451   003078  C065  F042         	movff	___cosdf$3125+1,___fladd@b+1
  4452   00307C  C066  F043         	movff	___cosdf$3125+2,___fladd@b+2
  4453   003080  C067  F044         	movff	___cosdf$3125+3,___fladd@b+3
  4454   003084  ECE2  F00A         	call	___fladd	;wreg free
  4455   003088  C041  F06C         	movff	?___fladd,___cosdf$3127
  4456   00308C  C042  F06D         	movff	?___fladd+1,___cosdf$3127+1
  4457   003090  C043  F06E         	movff	?___fladd+2,___cosdf$3127+2
  4458   003094  C044  F06F         	movff	?___fladd+3,___cosdf$3127+3
  4459   003098  C06C  F041         	movff	___cosdf$3127,___fladd@b
  4460   00309C  C06D  F042         	movff	___cosdf$3127+1,___fladd@b+1
  4461   0030A0  C06E  F043         	movff	___cosdf$3127+2,___fladd@b+2
  4462   0030A4  C06F  F044         	movff	___cosdf$3127+3,___fladd@b+3
  4463   0030A8  C060  F013         	movff	___cosdf@r,___flmul@a
  4464   0030AC  C061  F014         	movff	___cosdf@r+1,___flmul@a+1
  4465   0030B0  C062  F015         	movff	___cosdf@r+2,___flmul@a+2
  4466   0030B4  C063  F016         	movff	___cosdf@r+3,___flmul@a+3
  4467   0030B8  C068  F00F         	movff	___cosdf$3126,___flmul@b
  4468   0030BC  C069  F010         	movff	___cosdf$3126+1,___flmul@b+1
  4469   0030C0  C06A  F011         	movff	___cosdf$3126+2,___flmul@b+2
  4470   0030C4  C06B  F012         	movff	___cosdf$3126+3,___flmul@b+3
  4471   0030C8  EC42  F00D         	call	___flmul	;wreg free
  4472   0030CC  C00F  F045         	movff	?___flmul,___fladd@a
  4473   0030D0  C010  F046         	movff	?___flmul+1,___fladd@a+1
  4474   0030D4  C011  F047         	movff	?___flmul+2,___fladd@a+2
  4475   0030D8  C012  F048         	movff	?___flmul+3,___fladd@a+3
  4476   0030DC  ECE2  F00A         	call	___fladd	;wreg free
  4477   0030E0  C041  F051         	movff	?___fladd,?___cosdf
  4478   0030E4  C042  F052         	movff	?___fladd+1,?___cosdf+1
  4479   0030E8  C043  F053         	movff	?___fladd+2,?___cosdf+2
  4480   0030EC  C044  F054         	movff	?___fladd+3,?___cosdf+3
  4481   0030F0  0012               	return		;funcret
  4482   0030F2                     __end_of___cosdf:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function ___flmul *****************
  4486 ;; Defined at:
  4487 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  b               4   14[COMRAM] float 
  4490 ;;  a               4   18[COMRAM] float 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  prod            4   33[COMRAM] struct .
  4493 ;;  grs             4   27[COMRAM] unsigned long 
  4494 ;;  temp            2   37[COMRAM] struct .
  4495 ;;  bexp            1   32[COMRAM] unsigned char 
  4496 ;;  aexp            1   31[COMRAM] unsigned char 
  4497 ;;  sign            1   26[COMRAM] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  4   14[COMRAM] unsigned char 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, prodl, prodh
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;Total ram usage:       25 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; This function calls:
  4514 ;;		Nothing
  4515 ;; This function is called by:
  4516 ;;		_runDAC
  4517 ;;		___cosdf
  4518 ;;		___rem_pio2f
  4519 ;;		___sindf
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text18
  4524   001A84                     __ptext18:
  4525                           	callstack 0
  4526   001A84                     ___flmul:
  4527                           	callstack 27
  4528   001A84  5012               	movf	(___flmul@b+3)^0,w,c
  4529   001A86  0B80               	andlw	128
  4530   001A88  6E1B               	movwf	___flmul@sign^0,c
  4531   001A8A  5012               	movf	(___flmul@b+3)^0,w,c
  4532   001A8C  2412               	addwf	(___flmul@b+3)^0,w,c
  4533   001A8E  6E21               	movwf	___flmul@bexp^0,c
  4534   001A90  AE11               	btfss	(___flmul@b+2)^0,7,c
  4535   001A92  EF4D  F00D         	goto	u3051
  4536   001A96  EF4F  F00D         	goto	u3050
  4537   001A9A                     u3051:
  4538   001A9A  EF50  F00D         	goto	l2951
  4539   001A9E                     u3050:
  4540   001A9E  8021               	bsf	___flmul@bexp^0,0,c
  4541   001AA0                     l2951:
  4542   001AA0  5021               	movf	___flmul@bexp^0,w,c
  4543   001AA2  B4D8               	btfsc	status,2,c
  4544   001AA4  EF56  F00D         	goto	u3061
  4545   001AA8  EF58  F00D         	goto	u3060
  4546   001AAC                     u3061:
  4547   001AAC  EF6B  F00D         	goto	l2959
  4548   001AB0                     u3060:
  4549   001AB0  2821               	incf	___flmul@bexp^0,w,c
  4550   001AB2  A4D8               	btfss	status,2,c
  4551   001AB4  EF5E  F00D         	goto	u3071
  4552   001AB8  EF60  F00D         	goto	u3070
  4553   001ABC                     u3071:
  4554   001ABC  EF68  F00D         	goto	l2957
  4555   001AC0                     u3070:
  4556   001AC0  0E00               	movlw	0
  4557   001AC2  6E0F               	movwf	___flmul@b^0,c
  4558   001AC4  0E00               	movlw	0
  4559   001AC6  6E10               	movwf	(___flmul@b+1)^0,c
  4560   001AC8  0E00               	movlw	0
  4561   001ACA  6E11               	movwf	(___flmul@b+2)^0,c
  4562   001ACC  0E00               	movlw	0
  4563   001ACE  6E12               	movwf	(___flmul@b+3)^0,c
  4564   001AD0                     l2957:
  4565   001AD0  8E11               	bsf	(___flmul@b+2)^0,7,c
  4566   001AD2  EF73  F00D         	goto	l2961
  4567   001AD6                     l2959:
  4568   001AD6  0E00               	movlw	0
  4569   001AD8  6E0F               	movwf	___flmul@b^0,c
  4570   001ADA  0E00               	movlw	0
  4571   001ADC  6E10               	movwf	(___flmul@b+1)^0,c
  4572   001ADE  0E00               	movlw	0
  4573   001AE0  6E11               	movwf	(___flmul@b+2)^0,c
  4574   001AE2  0E00               	movlw	0
  4575   001AE4  6E12               	movwf	(___flmul@b+3)^0,c
  4576   001AE6                     l2961:
  4577   001AE6  5016               	movf	(___flmul@a+3)^0,w,c
  4578   001AE8  0B80               	andlw	128
  4579   001AEA  1A1B               	xorwf	___flmul@sign^0,f,c
  4580   001AEC  5016               	movf	(___flmul@a+3)^0,w,c
  4581   001AEE  2416               	addwf	(___flmul@a+3)^0,w,c
  4582   001AF0  6E20               	movwf	___flmul@aexp^0,c
  4583   001AF2  AE15               	btfss	(___flmul@a+2)^0,7,c
  4584   001AF4  EF7E  F00D         	goto	u3081
  4585   001AF8  EF80  F00D         	goto	u3080
  4586   001AFC                     u3081:
  4587   001AFC  EF81  F00D         	goto	l2969
  4588   001B00                     u3080:
  4589   001B00  8020               	bsf	___flmul@aexp^0,0,c
  4590   001B02                     l2969:
  4591   001B02  5020               	movf	___flmul@aexp^0,w,c
  4592   001B04  B4D8               	btfsc	status,2,c
  4593   001B06  EF87  F00D         	goto	u3091
  4594   001B0A  EF89  F00D         	goto	u3090
  4595   001B0E                     u3091:
  4596   001B0E  EF9C  F00D         	goto	l2977
  4597   001B12                     u3090:
  4598   001B12  2820               	incf	___flmul@aexp^0,w,c
  4599   001B14  A4D8               	btfss	status,2,c
  4600   001B16  EF8F  F00D         	goto	u3101
  4601   001B1A  EF91  F00D         	goto	u3100
  4602   001B1E                     u3101:
  4603   001B1E  EF99  F00D         	goto	l2975
  4604   001B22                     u3100:
  4605   001B22  0E00               	movlw	0
  4606   001B24  6E13               	movwf	___flmul@a^0,c
  4607   001B26  0E00               	movlw	0
  4608   001B28  6E14               	movwf	(___flmul@a+1)^0,c
  4609   001B2A  0E00               	movlw	0
  4610   001B2C  6E15               	movwf	(___flmul@a+2)^0,c
  4611   001B2E  0E00               	movlw	0
  4612   001B30  6E16               	movwf	(___flmul@a+3)^0,c
  4613   001B32                     l2975:
  4614   001B32  8E15               	bsf	(___flmul@a+2)^0,7,c
  4615   001B34  EFA4  F00D         	goto	l905
  4616   001B38                     l2977:
  4617   001B38  0E00               	movlw	0
  4618   001B3A  6E13               	movwf	___flmul@a^0,c
  4619   001B3C  0E00               	movlw	0
  4620   001B3E  6E14               	movwf	(___flmul@a+1)^0,c
  4621   001B40  0E00               	movlw	0
  4622   001B42  6E15               	movwf	(___flmul@a+2)^0,c
  4623   001B44  0E00               	movlw	0
  4624   001B46  6E16               	movwf	(___flmul@a+3)^0,c
  4625   001B48                     l905:
  4626   001B48  5020               	movf	___flmul@aexp^0,w,c
  4627   001B4A  B4D8               	btfsc	status,2,c
  4628   001B4C  EFAA  F00D         	goto	u3111
  4629   001B50  EFAC  F00D         	goto	u3110
  4630   001B54                     u3111:
  4631   001B54  EFB4  F00D         	goto	l2981
  4632   001B58                     u3110:
  4633   001B58  5021               	movf	___flmul@bexp^0,w,c
  4634   001B5A  A4D8               	btfss	status,2,c
  4635   001B5C  EFB2  F00D         	goto	u3121
  4636   001B60  EFB4  F00D         	goto	u3120
  4637   001B64                     u3121:
  4638   001B64  EFBE  F00D         	goto	l2985
  4639   001B68                     u3120:
  4640   001B68                     l2981:
  4641   001B68  0E00               	movlw	0
  4642   001B6A  6E0F               	movwf	?___flmul^0,c
  4643   001B6C  0E00               	movlw	0
  4644   001B6E  6E10               	movwf	(?___flmul+1)^0,c
  4645   001B70  0E00               	movlw	0
  4646   001B72  6E11               	movwf	(?___flmul+2)^0,c
  4647   001B74  0E00               	movlw	0
  4648   001B76  6E12               	movwf	(?___flmul+3)^0,c
  4649   001B78  EF56  F00F         	goto	l909
  4650   001B7C                     l2985:
  4651   001B7C  5015               	movf	(___flmul@a+2)^0,w,c
  4652   001B7E  020F               	mulwf	___flmul@b^0,c
  4653   001B80  CFF3 F026          	movff	prodl,___flmul@temp
  4654   001B84  CFF4 F027          	movff	prodh,___flmul@temp+1
  4655   001B88  5026               	movf	___flmul@temp^0,w,c
  4656   001B8A  6E1C               	movwf	___flmul@grs^0,c
  4657   001B8C  6A1D               	clrf	(___flmul@grs+1)^0,c
  4658   001B8E  6A1E               	clrf	(___flmul@grs+2)^0,c
  4659   001B90  6A1F               	clrf	(___flmul@grs+3)^0,c
  4660   001B92  5027               	movf	(___flmul@temp+1)^0,w,c
  4661   001B94  6E22               	movwf	___flmul@prod^0,c
  4662   001B96  6A23               	clrf	(___flmul@prod+1)^0,c
  4663   001B98  6A24               	clrf	(___flmul@prod+2)^0,c
  4664   001B9A  6A25               	clrf	(___flmul@prod+3)^0,c
  4665   001B9C  5014               	movf	(___flmul@a+1)^0,w,c
  4666   001B9E  0210               	mulwf	(___flmul@b+1)^0,c
  4667   001BA0  CFF3 F026          	movff	prodl,___flmul@temp
  4668   001BA4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4669   001BA8  5026               	movf	___flmul@temp^0,w,c
  4670   001BAA  261C               	addwf	___flmul@grs^0,f,c
  4671   001BAC  0E00               	movlw	0
  4672   001BAE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4673   001BB0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4674   001BB2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4675   001BB4  5027               	movf	(___flmul@temp+1)^0,w,c
  4676   001BB6  2622               	addwf	___flmul@prod^0,f,c
  4677   001BB8  0E00               	movlw	0
  4678   001BBA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4679   001BBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4680   001BBE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4681   001BC0  5013               	movf	___flmul@a^0,w,c
  4682   001BC2  0211               	mulwf	(___flmul@b+2)^0,c
  4683   001BC4  CFF3 F026          	movff	prodl,___flmul@temp
  4684   001BC8  CFF4 F027          	movff	prodh,___flmul@temp+1
  4685   001BCC  5026               	movf	___flmul@temp^0,w,c
  4686   001BCE  261C               	addwf	___flmul@grs^0,f,c
  4687   001BD0  0E00               	movlw	0
  4688   001BD2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4689   001BD4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4690   001BD6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4691   001BD8  5027               	movf	(___flmul@temp+1)^0,w,c
  4692   001BDA  2622               	addwf	___flmul@prod^0,f,c
  4693   001BDC  0E00               	movlw	0
  4694   001BDE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4695   001BE0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4696   001BE2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4697   001BE4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4698   001BE8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4699   001BEC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4700   001BF0  6A1C               	clrf	___flmul@grs^0,c
  4701   001BF2  5013               	movf	___flmul@a^0,w,c
  4702   001BF4  0210               	mulwf	(___flmul@b+1)^0,c
  4703   001BF6  CFF3 F026          	movff	prodl,___flmul@temp
  4704   001BFA  CFF4 F027          	movff	prodh,___flmul@temp+1
  4705   001BFE  5026               	movf	___flmul@temp^0,w,c
  4706   001C00  261C               	addwf	___flmul@grs^0,f,c
  4707   001C02  5027               	movf	(___flmul@temp+1)^0,w,c
  4708   001C04  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4709   001C06  0E00               	movlw	0
  4710   001C08  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4711   001C0A  0E00               	movlw	0
  4712   001C0C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4713   001C0E  5014               	movf	(___flmul@a+1)^0,w,c
  4714   001C10  020F               	mulwf	___flmul@b^0,c
  4715   001C12  CFF3 F026          	movff	prodl,___flmul@temp
  4716   001C16  CFF4 F027          	movff	prodh,___flmul@temp+1
  4717   001C1A  5026               	movf	___flmul@temp^0,w,c
  4718   001C1C  261C               	addwf	___flmul@grs^0,f,c
  4719   001C1E  5027               	movf	(___flmul@temp+1)^0,w,c
  4720   001C20  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4721   001C22  0E00               	movlw	0
  4722   001C24  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4723   001C26  0E00               	movlw	0
  4724   001C28  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4725   001C2A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4726   001C2E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4727   001C32  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4728   001C36  6A1C               	clrf	___flmul@grs^0,c
  4729   001C38  5013               	movf	___flmul@a^0,w,c
  4730   001C3A  020F               	mulwf	___flmul@b^0,c
  4731   001C3C  CFF3 F026          	movff	prodl,___flmul@temp
  4732   001C40  CFF4 F027          	movff	prodh,___flmul@temp+1
  4733   001C44  5026               	movf	___flmul@temp^0,w,c
  4734   001C46  261C               	addwf	___flmul@grs^0,f,c
  4735   001C48  5027               	movf	(___flmul@temp+1)^0,w,c
  4736   001C4A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4737   001C4C  0E00               	movlw	0
  4738   001C4E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4739   001C50  0E00               	movlw	0
  4740   001C52  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4741   001C54  5015               	movf	(___flmul@a+2)^0,w,c
  4742   001C56  0210               	mulwf	(___flmul@b+1)^0,c
  4743   001C58  CFF3 F026          	movff	prodl,___flmul@temp
  4744   001C5C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4745   001C60  5026               	movf	___flmul@temp^0,w,c
  4746   001C62  2622               	addwf	___flmul@prod^0,f,c
  4747   001C64  5027               	movf	(___flmul@temp+1)^0,w,c
  4748   001C66  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4749   001C68  0E00               	movlw	0
  4750   001C6A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4751   001C6C  0E00               	movlw	0
  4752   001C6E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4753   001C70  5014               	movf	(___flmul@a+1)^0,w,c
  4754   001C72  0211               	mulwf	(___flmul@b+2)^0,c
  4755   001C74  CFF3 F026          	movff	prodl,___flmul@temp
  4756   001C78  CFF4 F027          	movff	prodh,___flmul@temp+1
  4757   001C7C  5026               	movf	___flmul@temp^0,w,c
  4758   001C7E  2622               	addwf	___flmul@prod^0,f,c
  4759   001C80  5027               	movf	(___flmul@temp+1)^0,w,c
  4760   001C82  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4761   001C84  0E00               	movlw	0
  4762   001C86  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4763   001C88  0E00               	movlw	0
  4764   001C8A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4765   001C8C  5015               	movf	(___flmul@a+2)^0,w,c
  4766   001C8E  0211               	mulwf	(___flmul@b+2)^0,c
  4767   001C90  CFF3 F026          	movff	prodl,___flmul@temp
  4768   001C94  CFF4 F027          	movff	prodh,___flmul@temp+1
  4769   001C98  5026               	movf	___flmul@temp^0,w,c
  4770   001C9A  6E17               	movwf	??___flmul^0,c
  4771   001C9C  5027               	movf	(___flmul@temp+1)^0,w,c
  4772   001C9E  6E18               	movwf	(??___flmul+1)^0,c
  4773   001CA0  6A19               	clrf	(??___flmul+2)^0,c
  4774   001CA2  6A1A               	clrf	(??___flmul+3)^0,c
  4775   001CA4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4776   001CA8  C018  F019         	movff	??___flmul+1,??___flmul+2
  4777   001CAC  C017  F018         	movff	??___flmul,??___flmul+1
  4778   001CB0  6A17               	clrf	??___flmul^0,c
  4779   001CB2  5017               	movf	??___flmul^0,w,c
  4780   001CB4  2622               	addwf	___flmul@prod^0,f,c
  4781   001CB6  5018               	movf	(??___flmul+1)^0,w,c
  4782   001CB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4783   001CBA  5019               	movf	(??___flmul+2)^0,w,c
  4784   001CBC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4785   001CBE  501A               	movf	(??___flmul+3)^0,w,c
  4786   001CC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4787   001CC2  C01C  F017         	movff	___flmul@grs,??___flmul
  4788   001CC6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4789   001CCA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4790   001CCE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4791   001CD2  0E19               	movlw	25
  4792   001CD4  EF71  F00E         	goto	u3130
  4793   001CD8                     u3135:
  4794   001CD8  90D8               	bcf	status,0,c
  4795   001CDA  321A               	rrcf	(??___flmul+3)^0,f,c
  4796   001CDC  3219               	rrcf	(??___flmul+2)^0,f,c
  4797   001CDE  3218               	rrcf	(??___flmul+1)^0,f,c
  4798   001CE0  3217               	rrcf	??___flmul^0,f,c
  4799   001CE2                     u3130:
  4800   001CE2  2EE8               	decfsz	wreg,f,c
  4801   001CE4  EF6C  F00E         	goto	u3135
  4802   001CE8  5017               	movf	??___flmul^0,w,c
  4803   001CEA  2622               	addwf	___flmul@prod^0,f,c
  4804   001CEC  5018               	movf	(??___flmul+1)^0,w,c
  4805   001CEE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4806   001CF0  5019               	movf	(??___flmul+2)^0,w,c
  4807   001CF2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4808   001CF4  501A               	movf	(??___flmul+3)^0,w,c
  4809   001CF6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4810   001CF8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4811   001CFC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4812   001D00  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4813   001D04  6A1C               	clrf	___flmul@grs^0,c
  4814   001D06  5020               	movf	___flmul@aexp^0,w,c
  4815   001D08  C021  F017         	movff	___flmul@bexp,??___flmul
  4816   001D0C  6A18               	clrf	(??___flmul+1)^0,c
  4817   001D0E  2617               	addwf	??___flmul^0,f,c
  4818   001D10  0E00               	movlw	0
  4819   001D12  2218               	addwfc	(??___flmul+1)^0,f,c
  4820   001D14  0E82               	movlw	130
  4821   001D16  2417               	addwf	??___flmul^0,w,c
  4822   001D18  6E26               	movwf	___flmul@temp^0,c
  4823   001D1A  0EFF               	movlw	255
  4824   001D1C  2018               	addwfc	(??___flmul+1)^0,w,c
  4825   001D1E  6E27               	movwf	(___flmul@temp+1)^0,c
  4826   001D20  EFA7  F00E         	goto	l3033
  4827   001D24                     l3027:
  4828   001D24  90D8               	bcf	status,0,c
  4829   001D26  3622               	rlcf	___flmul@prod^0,f,c
  4830   001D28  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4831   001D2A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4832   001D2C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4833   001D2E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4834   001D30  EF9C  F00E         	goto	u3141
  4835   001D34  EF9E  F00E         	goto	u3140
  4836   001D38                     u3141:
  4837   001D38  EF9F  F00E         	goto	l912
  4838   001D3C                     u3140:
  4839   001D3C  8022               	bsf	___flmul@prod^0,0,c
  4840   001D3E                     l912:
  4841   001D3E  90D8               	bcf	status,0,c
  4842   001D40  361C               	rlcf	___flmul@grs^0,f,c
  4843   001D42  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4844   001D44  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4845   001D46  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4846   001D48  0626               	decf	___flmul@temp^0,f,c
  4847   001D4A  A0D8               	btfss	status,0,c
  4848   001D4C  0627               	decf	(___flmul@temp+1)^0,f,c
  4849   001D4E                     l3033:
  4850   001D4E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4851   001D50  EFAC  F00E         	goto	u3151
  4852   001D54  EFAE  F00E         	goto	u3150
  4853   001D58                     u3151:
  4854   001D58  EF92  F00E         	goto	l3027
  4855   001D5C                     u3150:
  4856   001D5C  0E00               	movlw	0
  4857   001D5E  6E20               	movwf	___flmul@aexp^0,c
  4858   001D60  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4859   001D62  EFB5  F00E         	goto	u3161
  4860   001D66  EFB7  F00E         	goto	u3160
  4861   001D6A                     u3161:
  4862   001D6A  EFDB  F00E         	goto	l914
  4863   001D6E                     u3160:
  4864   001D6E  0EFF               	movlw	255
  4865   001D70  141C               	andwf	___flmul@grs^0,w,c
  4866   001D72  6E17               	movwf	??___flmul^0,c
  4867   001D74  0EFF               	movlw	255
  4868   001D76  141D               	andwf	(___flmul@grs+1)^0,w,c
  4869   001D78  6E18               	movwf	(??___flmul+1)^0,c
  4870   001D7A  0EFF               	movlw	255
  4871   001D7C  141E               	andwf	(___flmul@grs+2)^0,w,c
  4872   001D7E  6E19               	movwf	(??___flmul+2)^0,c
  4873   001D80  0E7F               	movlw	127
  4874   001D82  141F               	andwf	(___flmul@grs+3)^0,w,c
  4875   001D84  6E1A               	movwf	(??___flmul+3)^0,c
  4876   001D86  5017               	movf	??___flmul^0,w,c
  4877   001D88  1018               	iorwf	(??___flmul+1)^0,w,c
  4878   001D8A  1019               	iorwf	(??___flmul+2)^0,w,c
  4879   001D8C  101A               	iorwf	(??___flmul+3)^0,w,c
  4880   001D8E  B4D8               	btfsc	status,2,c
  4881   001D90  EFCC  F00E         	goto	u3171
  4882   001D94  EFCE  F00E         	goto	u3170
  4883   001D98                     u3171:
  4884   001D98  EFD2  F00E         	goto	l915
  4885   001D9C                     u3170:
  4886   001D9C                     l3041:
  4887   001D9C  0E01               	movlw	1
  4888   001D9E  6E20               	movwf	___flmul@aexp^0,c
  4889   001DA0  EFDB  F00E         	goto	l914
  4890   001DA4                     l915:
  4891   001DA4  A022               	btfss	___flmul@prod^0,0,c
  4892   001DA6  EFD7  F00E         	goto	u3181
  4893   001DAA  EFD9  F00E         	goto	u3180
  4894   001DAE                     u3181:
  4895   001DAE  EFDB  F00E         	goto	l914
  4896   001DB2                     u3180:
  4897   001DB2  EFCE  F00E         	goto	l3041
  4898   001DB6                     l914:
  4899   001DB6  5020               	movf	___flmul@aexp^0,w,c
  4900   001DB8  B4D8               	btfsc	status,2,c
  4901   001DBA  EFE1  F00E         	goto	u3191
  4902   001DBE  EFE3  F00E         	goto	u3190
  4903   001DC2                     u3191:
  4904   001DC2  EF07  F00F         	goto	l3053
  4905   001DC6                     u3190:
  4906   001DC6  0E01               	movlw	1
  4907   001DC8  2622               	addwf	___flmul@prod^0,f,c
  4908   001DCA  0E00               	movlw	0
  4909   001DCC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4910   001DCE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4911   001DD0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4912   001DD2  A025               	btfss	(___flmul@prod+3)^0,0,c
  4913   001DD4  EFEE  F00E         	goto	u3201
  4914   001DD8  EFF0  F00E         	goto	u3200
  4915   001DDC                     u3201:
  4916   001DDC  EF07  F00F         	goto	l3053
  4917   001DE0                     u3200:
  4918   001DE0  C022  F017         	movff	___flmul@prod,??___flmul
  4919   001DE4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4920   001DE8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4921   001DEC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4922   001DF0  341A               	rlcf	(??___flmul+3)^0,w,c
  4923   001DF2  321A               	rrcf	(??___flmul+3)^0,f,c
  4924   001DF4  3219               	rrcf	(??___flmul+2)^0,f,c
  4925   001DF6  3218               	rrcf	(??___flmul+1)^0,f,c
  4926   001DF8  3217               	rrcf	??___flmul^0,f,c
  4927   001DFA  C017  F022         	movff	??___flmul,___flmul@prod
  4928   001DFE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4929   001E02  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4930   001E06  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4931   001E0A  4A26               	infsnz	___flmul@temp^0,f,c
  4932   001E0C  2A27               	incf	(___flmul@temp+1)^0,f,c
  4933   001E0E                     l3053:
  4934   001E0E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4935   001E10  EF12  F00F         	goto	u3211
  4936   001E14  5027               	movf	(___flmul@temp+1)^0,w,c
  4937   001E16  E108               	bnz	u3210
  4938   001E18  2826               	incf	___flmul@temp^0,w,c
  4939   001E1A  A0D8               	btfss	status,0,c
  4940   001E1C  EF12  F00F         	goto	u3211
  4941   001E20  EF14  F00F         	goto	u3210
  4942   001E24                     u3211:
  4943   001E24  EF1E  F00F         	goto	l3057
  4944   001E28                     u3210:
  4945   001E28  0E00               	movlw	0
  4946   001E2A  6E22               	movwf	___flmul@prod^0,c
  4947   001E2C  0E00               	movlw	0
  4948   001E2E  6E23               	movwf	(___flmul@prod+1)^0,c
  4949   001E30  0E80               	movlw	128
  4950   001E32  6E24               	movwf	(___flmul@prod+2)^0,c
  4951   001E34  0E7F               	movlw	127
  4952   001E36  6E25               	movwf	(___flmul@prod+3)^0,c
  4953   001E38  EF4C  F00F         	goto	l3069
  4954   001E3C                     l3057:
  4955   001E3C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4956   001E3E  EF2B  F00F         	goto	u3220
  4957   001E42  5027               	movf	(___flmul@temp+1)^0,w,c
  4958   001E44  E106               	bnz	u3221
  4959   001E46  0426               	decf	___flmul@temp^0,w,c
  4960   001E48  B0D8               	btfsc	status,0,c
  4961   001E4A  EF29  F00F         	goto	u3221
  4962   001E4E  EF2B  F00F         	goto	u3220
  4963   001E52                     u3221:
  4964   001E52  EF37  F00F         	goto	l922
  4965   001E56                     u3220:
  4966   001E56  0E00               	movlw	0
  4967   001E58  6E22               	movwf	___flmul@prod^0,c
  4968   001E5A  0E00               	movlw	0
  4969   001E5C  6E23               	movwf	(___flmul@prod+1)^0,c
  4970   001E5E  0E00               	movlw	0
  4971   001E60  6E24               	movwf	(___flmul@prod+2)^0,c
  4972   001E62  0E00               	movlw	0
  4973   001E64  6E25               	movwf	(___flmul@prod+3)^0,c
  4974   001E66  0E00               	movlw	0
  4975   001E68  6E1B               	movwf	___flmul@sign^0,c
  4976   001E6A  EF4C  F00F         	goto	l3069
  4977   001E6E                     l922:
  4978   001E6E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4979   001E72  0EFF               	movlw	255
  4980   001E74  1622               	andwf	___flmul@prod^0,f,c
  4981   001E76  0EFF               	movlw	255
  4982   001E78  1623               	andwf	(___flmul@prod+1)^0,f,c
  4983   001E7A  0E7F               	movlw	127
  4984   001E7C  1624               	andwf	(___flmul@prod+2)^0,f,c
  4985   001E7E  0E00               	movlw	0
  4986   001E80  1625               	andwf	(___flmul@prod+3)^0,f,c
  4987   001E82  A021               	btfss	___flmul@bexp^0,0,c
  4988   001E84  EF46  F00F         	goto	u3231
  4989   001E88  EF48  F00F         	goto	u3230
  4990   001E8C                     u3231:
  4991   001E8C  EF49  F00F         	goto	l3067
  4992   001E90                     u3230:
  4993   001E90  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4994   001E92                     l3067:
  4995   001E92  90D8               	bcf	status,0,c
  4996   001E94  3021               	rrcf	___flmul@bexp^0,w,c
  4997   001E96  6E25               	movwf	(___flmul@prod+3)^0,c
  4998   001E98                     l3069:
  4999   001E98  501B               	movf	___flmul@sign^0,w,c
  5000   001E9A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5001   001E9C  C022  F00F         	movff	___flmul@prod,?___flmul
  5002   001EA0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5003   001EA4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5004   001EA8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5005   001EAC                     l909:
  5006   001EAC  0012               	return		;funcret
  5007   001EAE                     __end_of___flmul:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function ___fladd *****************
  5011 ;; Defined at:
  5012 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  b               4   64[COMRAM] unsigned char 
  5015 ;;  a               4   68[COMRAM] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  grs             1   79[COMRAM] unsigned char 
  5018 ;;  bexp            1   78[COMRAM] unsigned char 
  5019 ;;  aexp            1   77[COMRAM] unsigned char 
  5020 ;;  signs           1   76[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  4   64[COMRAM] unsigned char 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5030 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;Total ram usage:       16 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_runDAC
  5040 ;;		___flsub
  5041 ;;		_sinf
  5042 ;;		___cosdf
  5043 ;;		___rem_pio2f
  5044 ;;		___sindf
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text19
  5049   0015C4                     __ptext19:
  5050                           	callstack 0
  5051   0015C4                     ___fladd:
  5052                           	callstack 27
  5053   0015C4  5044               	movf	(___fladd@b+3)^0,w,c
  5054   0015C6  0B80               	andlw	128
  5055   0015C8  6E4D               	movwf	___fladd@signs^0,c
  5056   0015CA  5044               	movf	(___fladd@b+3)^0,w,c
  5057   0015CC  2444               	addwf	(___fladd@b+3)^0,w,c
  5058   0015CE  6E4F               	movwf	___fladd@bexp^0,c
  5059   0015D0  AE43               	btfss	(___fladd@b+2)^0,7,c
  5060   0015D2  EFED  F00A         	goto	u2471
  5061   0015D6  EFEF  F00A         	goto	u2470
  5062   0015DA                     u2471:
  5063   0015DA  EFF0  F00A         	goto	l2657
  5064   0015DE                     u2470:
  5065   0015DE  804F               	bsf	___fladd@bexp^0,0,c
  5066   0015E0                     l2657:
  5067   0015E0  504F               	movf	___fladd@bexp^0,w,c
  5068   0015E2  B4D8               	btfsc	status,2,c
  5069   0015E4  EFF6  F00A         	goto	u2481
  5070   0015E8  EFF8  F00A         	goto	u2480
  5071   0015EC                     u2481:
  5072   0015EC  EF0D  F00B         	goto	l2667
  5073   0015F0                     u2480:
  5074   0015F0  284F               	incf	___fladd@bexp^0,w,c
  5075   0015F2  A4D8               	btfss	status,2,c
  5076   0015F4  EFFE  F00A         	goto	u2491
  5077   0015F8  EF00  F00B         	goto	u2490
  5078   0015FC                     u2491:
  5079   0015FC  EF08  F00B         	goto	l2663
  5080   001600                     u2490:
  5081   001600  0E00               	movlw	0
  5082   001602  6E41               	movwf	___fladd@b^0,c
  5083   001604  0E00               	movlw	0
  5084   001606  6E42               	movwf	(___fladd@b+1)^0,c
  5085   001608  0E00               	movlw	0
  5086   00160A  6E43               	movwf	(___fladd@b+2)^0,c
  5087   00160C  0E00               	movlw	0
  5088   00160E  6E44               	movwf	(___fladd@b+3)^0,c
  5089   001610                     l2663:
  5090   001610  8E43               	bsf	(___fladd@b+2)^0,7,c
  5091   001612  0E00               	movlw	0
  5092   001614  6E44               	movwf	(___fladd@b+3)^0,c
  5093   001616  EF15  F00B         	goto	l2669
  5094   00161A                     l2667:
  5095   00161A  0E00               	movlw	0
  5096   00161C  6E41               	movwf	___fladd@b^0,c
  5097   00161E  0E00               	movlw	0
  5098   001620  6E42               	movwf	(___fladd@b+1)^0,c
  5099   001622  0E00               	movlw	0
  5100   001624  6E43               	movwf	(___fladd@b+2)^0,c
  5101   001626  0E00               	movlw	0
  5102   001628  6E44               	movwf	(___fladd@b+3)^0,c
  5103   00162A                     l2669:
  5104   00162A  5048               	movf	(___fladd@a+3)^0,w,c
  5105   00162C  0B80               	andlw	128
  5106   00162E  6E4E               	movwf	___fladd@aexp^0,c
  5107   001630  504D               	movf	___fladd@signs^0,w,c
  5108   001632  184E               	xorwf	___fladd@aexp^0,w,c
  5109   001634  B4D8               	btfsc	status,2,c
  5110   001636  EF1F  F00B         	goto	u2501
  5111   00163A  EF21  F00B         	goto	u2500
  5112   00163E                     u2501:
  5113   00163E  EF22  F00B         	goto	l2675
  5114   001642                     u2500:
  5115   001642  8C4D               	bsf	___fladd@signs^0,6,c
  5116   001644                     l2675:
  5117   001644  5048               	movf	(___fladd@a+3)^0,w,c
  5118   001646  2448               	addwf	(___fladd@a+3)^0,w,c
  5119   001648  6E4E               	movwf	___fladd@aexp^0,c
  5120   00164A  AE47               	btfss	(___fladd@a+2)^0,7,c
  5121   00164C  EF2A  F00B         	goto	u2511
  5122   001650  EF2C  F00B         	goto	u2510
  5123   001654                     u2511:
  5124   001654  EF2D  F00B         	goto	l2681
  5125   001658                     u2510:
  5126   001658  804E               	bsf	___fladd@aexp^0,0,c
  5127   00165A                     l2681:
  5128   00165A  504E               	movf	___fladd@aexp^0,w,c
  5129   00165C  B4D8               	btfsc	status,2,c
  5130   00165E  EF33  F00B         	goto	u2521
  5131   001662  EF35  F00B         	goto	u2520
  5132   001666                     u2521:
  5133   001666  EF4A  F00B         	goto	l2691
  5134   00166A                     u2520:
  5135   00166A  284E               	incf	___fladd@aexp^0,w,c
  5136   00166C  A4D8               	btfss	status,2,c
  5137   00166E  EF3B  F00B         	goto	u2531
  5138   001672  EF3D  F00B         	goto	u2530
  5139   001676                     u2531:
  5140   001676  EF45  F00B         	goto	l2687
  5141   00167A                     u2530:
  5142   00167A  0E00               	movlw	0
  5143   00167C  6E45               	movwf	___fladd@a^0,c
  5144   00167E  0E00               	movlw	0
  5145   001680  6E46               	movwf	(___fladd@a+1)^0,c
  5146   001682  0E00               	movlw	0
  5147   001684  6E47               	movwf	(___fladd@a+2)^0,c
  5148   001686  0E00               	movlw	0
  5149   001688  6E48               	movwf	(___fladd@a+3)^0,c
  5150   00168A                     l2687:
  5151   00168A  8E47               	bsf	(___fladd@a+2)^0,7,c
  5152   00168C  0E00               	movlw	0
  5153   00168E  6E48               	movwf	(___fladd@a+3)^0,c
  5154   001690  EF52  F00B         	goto	l2693
  5155   001694                     l2691:
  5156   001694  0E00               	movlw	0
  5157   001696  6E45               	movwf	___fladd@a^0,c
  5158   001698  0E00               	movlw	0
  5159   00169A  6E46               	movwf	(___fladd@a+1)^0,c
  5160   00169C  0E00               	movlw	0
  5161   00169E  6E47               	movwf	(___fladd@a+2)^0,c
  5162   0016A0  0E00               	movlw	0
  5163   0016A2  6E48               	movwf	(___fladd@a+3)^0,c
  5164   0016A4                     l2693:
  5165   0016A4  504F               	movf	___fladd@bexp^0,w,c
  5166   0016A6  5C4E               	subwf	___fladd@aexp^0,w,c
  5167   0016A8  B0D8               	btfsc	status,0,c
  5168   0016AA  EF59  F00B         	goto	u2541
  5169   0016AE  EF5B  F00B         	goto	u2540
  5170   0016B2                     u2541:
  5171   0016B2  EF82  F00B         	goto	l2729
  5172   0016B6                     u2540:
  5173   0016B6  AC4D               	btfss	___fladd@signs^0,6,c
  5174   0016B8  EF60  F00B         	goto	u2551
  5175   0016BC  EF62  F00B         	goto	u2550
  5176   0016C0                     u2551:
  5177   0016C0  EF64  F00B         	goto	l2699
  5178   0016C4                     u2550:
  5179   0016C4  0E80               	movlw	128
  5180   0016C6  1A4D               	xorwf	___fladd@signs^0,f,c
  5181   0016C8                     l2699:
  5182   0016C8  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5183   0016CC  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5184   0016D0  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5185   0016D4  C041  F050         	movff	___fladd@b,___fladd@grs
  5186   0016D8  C045  F041         	movff	___fladd@a,___fladd@b
  5187   0016DC  C050  F045         	movff	___fladd@grs,___fladd@a
  5188   0016E0  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5189   0016E4  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5190   0016E8  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5191   0016EC  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5192   0016F0  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5193   0016F4  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5194   0016F8  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5195   0016FC  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5196   001700  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5197   001704                     l2729:
  5198   001704  0E00               	movlw	0
  5199   001706  6E50               	movwf	___fladd@grs^0,c
  5200   001708  504F               	movf	___fladd@bexp^0,w,c
  5201   00170A  C04E  F049         	movff	___fladd@aexp,??___fladd
  5202   00170E  6A4A               	clrf	(??___fladd+1)^0,c
  5203   001710  5E49               	subwf	??___fladd^0,f,c
  5204   001712  0E00               	movlw	0
  5205   001714  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5206   001716  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5207   001718  EF97  F00B         	goto	u2561
  5208   00171C  504A               	movf	(??___fladd+1)^0,w,c
  5209   00171E  E109               	bnz	u2560
  5210   001720  0E1A               	movlw	26
  5211   001722  5C49               	subwf	??___fladd^0,w,c
  5212   001724  A0D8               	btfss	status,0,c
  5213   001726  EF97  F00B         	goto	u2561
  5214   00172A  EF99  F00B         	goto	u2560
  5215   00172E                     u2561:
  5216   00172E  EFD0  F00B         	goto	l820
  5217   001732                     u2560:
  5218   001732  5041               	movf	___fladd@b^0,w,c
  5219   001734  1042               	iorwf	(___fladd@b+1)^0,w,c
  5220   001736  1043               	iorwf	(___fladd@b+2)^0,w,c
  5221   001738  1044               	iorwf	(___fladd@b+3)^0,w,c
  5222   00173A  A4D8               	btfss	status,2,c
  5223   00173C  EFA2  F00B         	goto	u2571
  5224   001740  EFA5  F00B         	goto	u2570
  5225   001744                     u2571:
  5226   001744  0E01               	movlw	1
  5227   001746  EFA6  F00B         	goto	u2580
  5228   00174A                     u2570:
  5229   00174A  0E00               	movlw	0
  5230   00174C                     u2580:
  5231   00174C  6E50               	movwf	___fladd@grs^0,c
  5232   00174E  0E00               	movlw	0
  5233   001750  6E41               	movwf	___fladd@b^0,c
  5234   001752  0E00               	movlw	0
  5235   001754  6E42               	movwf	(___fladd@b+1)^0,c
  5236   001756  0E00               	movlw	0
  5237   001758  6E43               	movwf	(___fladd@b+2)^0,c
  5238   00175A  0E00               	movlw	0
  5239   00175C  6E44               	movwf	(___fladd@b+3)^0,c
  5240   00175E  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5241   001762  EFD9  F00B         	goto	l819
  5242   001766                     l821:
  5243   001766  A050               	btfss	___fladd@grs^0,0,c
  5244   001768  EFB8  F00B         	goto	u2591
  5245   00176C  EFBA  F00B         	goto	u2590
  5246   001770                     u2591:
  5247   001770  EFC0  F00B         	goto	l2741
  5248   001774                     u2590:
  5249   001774  90D8               	bcf	status,0,c
  5250   001776  3050               	rrcf	___fladd@grs^0,w,c
  5251   001778  0901               	iorlw	1
  5252   00177A  6E50               	movwf	___fladd@grs^0,c
  5253   00177C  EFC2  F00B         	goto	l2743
  5254   001780                     l2741:
  5255   001780  90D8               	bcf	status,0,c
  5256   001782  3250               	rrcf	___fladd@grs^0,f,c
  5257   001784                     l2743:
  5258   001784  A041               	btfss	___fladd@b^0,0,c
  5259   001786  EFC7  F00B         	goto	u2601
  5260   00178A  EFC9  F00B         	goto	u2600
  5261   00178E                     u2601:
  5262   00178E  EFCA  F00B         	goto	l2747
  5263   001792                     u2600:
  5264   001792  8E50               	bsf	___fladd@grs^0,7,c
  5265   001794                     l2747:
  5266   001794  3444               	rlcf	(___fladd@b+3)^0,w,c
  5267   001796  3244               	rrcf	(___fladd@b+3)^0,f,c
  5268   001798  3243               	rrcf	(___fladd@b+2)^0,f,c
  5269   00179A  3242               	rrcf	(___fladd@b+1)^0,f,c
  5270   00179C  3241               	rrcf	___fladd@b^0,f,c
  5271   00179E  2A4F               	incf	___fladd@bexp^0,f,c
  5272   0017A0                     l820:
  5273   0017A0  504E               	movf	___fladd@aexp^0,w,c
  5274   0017A2  5C4F               	subwf	___fladd@bexp^0,w,c
  5275   0017A4  A0D8               	btfss	status,0,c
  5276   0017A6  EFD7  F00B         	goto	u2611
  5277   0017AA  EFD9  F00B         	goto	u2610
  5278   0017AE                     u2611:
  5279   0017AE  EFB3  F00B         	goto	l821
  5280   0017B2                     u2610:
  5281   0017B2                     l819:
  5282   0017B2  BC4D               	btfsc	___fladd@signs^0,6,c
  5283   0017B4  EFDE  F00B         	goto	u2621
  5284   0017B8  EFE0  F00B         	goto	u2620
  5285   0017BC                     u2621:
  5286   0017BC  EF20  F00C         	goto	l2775
  5287   0017C0                     u2620:
  5288   0017C0  504F               	movf	___fladd@bexp^0,w,c
  5289   0017C2  A4D8               	btfss	status,2,c
  5290   0017C4  EFE6  F00B         	goto	u2631
  5291   0017C8  EFE8  F00B         	goto	u2630
  5292   0017CC                     u2631:
  5293   0017CC  EFF2  F00B         	goto	l2757
  5294   0017D0                     u2630:
  5295   0017D0  0E00               	movlw	0
  5296   0017D2  6E41               	movwf	?___fladd^0,c
  5297   0017D4  0E00               	movlw	0
  5298   0017D6  6E42               	movwf	(?___fladd+1)^0,c
  5299   0017D8  0E00               	movlw	0
  5300   0017DA  6E43               	movwf	(?___fladd+2)^0,c
  5301   0017DC  0E00               	movlw	0
  5302   0017DE  6E44               	movwf	(?___fladd+3)^0,c
  5303   0017E0  EF41  F00D         	goto	l828
  5304   0017E4                     l2757:
  5305   0017E4  5045               	movf	___fladd@a^0,w,c
  5306   0017E6  2641               	addwf	___fladd@b^0,f,c
  5307   0017E8  5046               	movf	(___fladd@a+1)^0,w,c
  5308   0017EA  2242               	addwfc	(___fladd@b+1)^0,f,c
  5309   0017EC  5047               	movf	(___fladd@a+2)^0,w,c
  5310   0017EE  2243               	addwfc	(___fladd@b+2)^0,f,c
  5311   0017F0  5048               	movf	(___fladd@a+3)^0,w,c
  5312   0017F2  2244               	addwfc	(___fladd@b+3)^0,f,c
  5313   0017F4  A044               	btfss	(___fladd@b+3)^0,0,c
  5314   0017F6  EFFF  F00B         	goto	u2641
  5315   0017FA  EF01  F00C         	goto	u2640
  5316   0017FE                     u2641:
  5317   0017FE  EFAD  F00C         	goto	l2811
  5318   001802                     u2640:
  5319   001802  A050               	btfss	___fladd@grs^0,0,c
  5320   001804  EF06  F00C         	goto	u2651
  5321   001808  EF08  F00C         	goto	u2650
  5322   00180C                     u2651:
  5323   00180C  EF0E  F00C         	goto	l2765
  5324   001810                     u2650:
  5325   001810  90D8               	bcf	status,0,c
  5326   001812  3050               	rrcf	___fladd@grs^0,w,c
  5327   001814  0901               	iorlw	1
  5328   001816  6E50               	movwf	___fladd@grs^0,c
  5329   001818  EF10  F00C         	goto	l2767
  5330   00181C                     l2765:
  5331   00181C  90D8               	bcf	status,0,c
  5332   00181E  3250               	rrcf	___fladd@grs^0,f,c
  5333   001820                     l2767:
  5334   001820  A041               	btfss	___fladd@b^0,0,c
  5335   001822  EF15  F00C         	goto	u2661
  5336   001826  EF17  F00C         	goto	u2660
  5337   00182A                     u2661:
  5338   00182A  EF18  F00C         	goto	l2771
  5339   00182E                     u2660:
  5340   00182E  8E50               	bsf	___fladd@grs^0,7,c
  5341   001830                     l2771:
  5342   001830  3444               	rlcf	(___fladd@b+3)^0,w,c
  5343   001832  3244               	rrcf	(___fladd@b+3)^0,f,c
  5344   001834  3243               	rrcf	(___fladd@b+2)^0,f,c
  5345   001836  3242               	rrcf	(___fladd@b+1)^0,f,c
  5346   001838  3241               	rrcf	___fladd@b^0,f,c
  5347   00183A  2A4F               	incf	___fladd@bexp^0,f,c
  5348   00183C  EFAD  F00C         	goto	l2811
  5349   001840                     l2775:
  5350   001840  5045               	movf	___fladd@a^0,w,c
  5351   001842  5C41               	subwf	___fladd@b^0,w,c
  5352   001844  5046               	movf	(___fladd@a+1)^0,w,c
  5353   001846  5842               	subwfb	(___fladd@b+1)^0,w,c
  5354   001848  5047               	movf	(___fladd@a+2)^0,w,c
  5355   00184A  5843               	subwfb	(___fladd@b+2)^0,w,c
  5356   00184C  5044               	movf	(___fladd@b+3)^0,w,c
  5357   00184E  0A80               	xorlw	128
  5358   001850  6E49               	movwf	??___fladd^0,c
  5359   001852  5048               	movf	(___fladd@a+3)^0,w,c
  5360   001854  0A80               	xorlw	128
  5361   001856  5849               	subwfb	??___fladd^0,w,c
  5362   001858  B0D8               	btfsc	status,0,c
  5363   00185A  EF31  F00C         	goto	u2671
  5364   00185E  EF33  F00C         	goto	u2670
  5365   001862                     u2671:
  5366   001862  EF5E  F00C         	goto	l2785
  5367   001866                     u2670:
  5368   001866  5041               	movf	___fladd@b^0,w,c
  5369   001868  5C45               	subwf	___fladd@a^0,w,c
  5370   00186A  6E49               	movwf	??___fladd^0,c
  5371   00186C  5042               	movf	(___fladd@b+1)^0,w,c
  5372   00186E  5846               	subwfb	(___fladd@a+1)^0,w,c
  5373   001870  6E4A               	movwf	(??___fladd+1)^0,c
  5374   001872  5043               	movf	(___fladd@b+2)^0,w,c
  5375   001874  5847               	subwfb	(___fladd@a+2)^0,w,c
  5376   001876  6E4B               	movwf	(??___fladd+2)^0,c
  5377   001878  5044               	movf	(___fladd@b+3)^0,w,c
  5378   00187A  5848               	subwfb	(___fladd@a+3)^0,w,c
  5379   00187C  6E4C               	movwf	(??___fladd+3)^0,c
  5380   00187E  0EFF               	movlw	255
  5381   001880  2449               	addwf	??___fladd^0,w,c
  5382   001882  6E41               	movwf	___fladd@b^0,c
  5383   001884  0EFF               	movlw	255
  5384   001886  204A               	addwfc	(??___fladd+1)^0,w,c
  5385   001888  6E42               	movwf	(___fladd@b+1)^0,c
  5386   00188A  0EFF               	movlw	255
  5387   00188C  204B               	addwfc	(??___fladd+2)^0,w,c
  5388   00188E  6E43               	movwf	(___fladd@b+2)^0,c
  5389   001890  0EFF               	movlw	255
  5390   001892  204C               	addwfc	(??___fladd+3)^0,w,c
  5391   001894  6E44               	movwf	(___fladd@b+3)^0,c
  5392   001896  0E80               	movlw	128
  5393   001898  1A4D               	xorwf	___fladd@signs^0,f,c
  5394   00189A  6C50               	negf	___fladd@grs^0,c
  5395   00189C  5050               	movf	___fladd@grs^0,w,c
  5396   00189E  A4D8               	btfss	status,2,c
  5397   0018A0  EF54  F00C         	goto	u2681
  5398   0018A4  EF56  F00C         	goto	u2680
  5399   0018A8                     u2681:
  5400   0018A8  EF66  F00C         	goto	l836
  5401   0018AC                     u2680:
  5402   0018AC  0E01               	movlw	1
  5403   0018AE  2641               	addwf	___fladd@b^0,f,c
  5404   0018B0  0E00               	movlw	0
  5405   0018B2  2242               	addwfc	(___fladd@b+1)^0,f,c
  5406   0018B4  2243               	addwfc	(___fladd@b+2)^0,f,c
  5407   0018B6  2244               	addwfc	(___fladd@b+3)^0,f,c
  5408   0018B8  EF66  F00C         	goto	l836
  5409   0018BC                     l2785:
  5410   0018BC  5045               	movf	___fladd@a^0,w,c
  5411   0018BE  5E41               	subwf	___fladd@b^0,f,c
  5412   0018C0  5046               	movf	(___fladd@a+1)^0,w,c
  5413   0018C2  5A42               	subwfb	(___fladd@b+1)^0,f,c
  5414   0018C4  5047               	movf	(___fladd@a+2)^0,w,c
  5415   0018C6  5A43               	subwfb	(___fladd@b+2)^0,f,c
  5416   0018C8  5048               	movf	(___fladd@a+3)^0,w,c
  5417   0018CA  5A44               	subwfb	(___fladd@b+3)^0,f,c
  5418   0018CC                     l836:
  5419   0018CC  5041               	movf	___fladd@b^0,w,c
  5420   0018CE  1042               	iorwf	(___fladd@b+1)^0,w,c
  5421   0018D0  1043               	iorwf	(___fladd@b+2)^0,w,c
  5422   0018D2  1044               	iorwf	(___fladd@b+3)^0,w,c
  5423   0018D4  A4D8               	btfss	status,2,c
  5424   0018D6  EF6F  F00C         	goto	u2691
  5425   0018DA  EF71  F00C         	goto	u2690
  5426   0018DE                     u2691:
  5427   0018DE  EFA6  F00C         	goto	l2809
  5428   0018E2                     u2690:
  5429   0018E2  5050               	movf	___fladd@grs^0,w,c
  5430   0018E4  A4D8               	btfss	status,2,c
  5431   0018E6  EF77  F00C         	goto	u2701
  5432   0018EA  EF79  F00C         	goto	u2700
  5433   0018EE                     u2701:
  5434   0018EE  EFA6  F00C         	goto	l2809
  5435   0018F2                     u2700:
  5436   0018F2  0E00               	movlw	0
  5437   0018F4  6E41               	movwf	?___fladd^0,c
  5438   0018F6  0E00               	movlw	0
  5439   0018F8  6E42               	movwf	(?___fladd+1)^0,c
  5440   0018FA  0E00               	movlw	0
  5441   0018FC  6E43               	movwf	(?___fladd+2)^0,c
  5442   0018FE  0E00               	movlw	0
  5443   001900  6E44               	movwf	(?___fladd+3)^0,c
  5444   001902  EF41  F00D         	goto	l828
  5445   001906                     l2793:
  5446   001906  90D8               	bcf	status,0,c
  5447   001908  3641               	rlcf	___fladd@b^0,f,c
  5448   00190A  3642               	rlcf	(___fladd@b+1)^0,f,c
  5449   00190C  3643               	rlcf	(___fladd@b+2)^0,f,c
  5450   00190E  3644               	rlcf	(___fladd@b+3)^0,f,c
  5451   001910  AE50               	btfss	___fladd@grs^0,7,c
  5452   001912  EF8D  F00C         	goto	u2711
  5453   001916  EF8F  F00C         	goto	u2710
  5454   00191A                     u2711:
  5455   00191A  EF90  F00C         	goto	l2799
  5456   00191E                     u2710:
  5457   00191E  8041               	bsf	___fladd@b^0,0,c
  5458   001920                     l2799:
  5459   001920  A050               	btfss	___fladd@grs^0,0,c
  5460   001922  EF95  F00C         	goto	u2721
  5461   001926  EF97  F00C         	goto	u2720
  5462   00192A                     u2721:
  5463   00192A  EF9B  F00C         	goto	l2803
  5464   00192E                     u2720:
  5465   00192E  80D8               	bsf	status,0,c
  5466   001930  3650               	rlcf	___fladd@grs^0,f,c
  5467   001932  EF9D  F00C         	goto	l2805
  5468   001936                     l2803:
  5469   001936  90D8               	bcf	status,0,c
  5470   001938  3650               	rlcf	___fladd@grs^0,f,c
  5471   00193A                     l2805:
  5472   00193A  504F               	movf	___fladd@bexp^0,w,c
  5473   00193C  B4D8               	btfsc	status,2,c
  5474   00193E  EFA3  F00C         	goto	u2731
  5475   001942  EFA5  F00C         	goto	u2730
  5476   001946                     u2731:
  5477   001946  EFA6  F00C         	goto	l2809
  5478   00194A                     u2730:
  5479   00194A  064F               	decf	___fladd@bexp^0,f,c
  5480   00194C                     l2809:
  5481   00194C  AE43               	btfss	(___fladd@b+2)^0,7,c
  5482   00194E  EFAB  F00C         	goto	u2741
  5483   001952  EFAD  F00C         	goto	u2740
  5484   001956                     u2741:
  5485   001956  EF83  F00C         	goto	l2793
  5486   00195A                     u2740:
  5487   00195A                     l2811:
  5488   00195A  0E00               	movlw	0
  5489   00195C  6E4E               	movwf	___fladd@aexp^0,c
  5490   00195E  AE50               	btfss	___fladd@grs^0,7,c
  5491   001960  EFB4  F00C         	goto	u2751
  5492   001964  EFB6  F00C         	goto	u2750
  5493   001968                     u2751:
  5494   001968  EFCE  F00C         	goto	l845
  5495   00196C                     u2750:
  5496   00196C  C050  F049         	movff	___fladd@grs,??___fladd
  5497   001970  0E7F               	movlw	127
  5498   001972  1649               	andwf	??___fladd^0,f,c
  5499   001974  B4D8               	btfsc	status,2,c
  5500   001976  EFBF  F00C         	goto	u2761
  5501   00197A  EFC1  F00C         	goto	u2760
  5502   00197E                     u2761:
  5503   00197E  EFC5  F00C         	goto	l846
  5504   001982                     u2760:
  5505   001982                     l2817:
  5506   001982  0E01               	movlw	1
  5507   001984  6E4E               	movwf	___fladd@aexp^0,c
  5508   001986  EFCE  F00C         	goto	l845
  5509   00198A                     l846:
  5510   00198A  A041               	btfss	___fladd@b^0,0,c
  5511   00198C  EFCA  F00C         	goto	u2771
  5512   001990  EFCC  F00C         	goto	u2770
  5513   001994                     u2771:
  5514   001994  EFCE  F00C         	goto	l845
  5515   001998                     u2770:
  5516   001998  EFC1  F00C         	goto	l2817
  5517   00199C                     l845:
  5518   00199C  504E               	movf	___fladd@aexp^0,w,c
  5519   00199E  B4D8               	btfsc	status,2,c
  5520   0019A0  EFD4  F00C         	goto	u2781
  5521   0019A4  EFD6  F00C         	goto	u2780
  5522   0019A8                     u2781:
  5523   0019A8  EF01  F00D         	goto	l2829
  5524   0019AC                     u2780:
  5525   0019AC  0E01               	movlw	1
  5526   0019AE  2641               	addwf	___fladd@b^0,f,c
  5527   0019B0  0E00               	movlw	0
  5528   0019B2  2242               	addwfc	(___fladd@b+1)^0,f,c
  5529   0019B4  2243               	addwfc	(___fladd@b+2)^0,f,c
  5530   0019B6  2244               	addwfc	(___fladd@b+3)^0,f,c
  5531   0019B8  A044               	btfss	(___fladd@b+3)^0,0,c
  5532   0019BA  EFE1  F00C         	goto	u2791
  5533   0019BE  EFE3  F00C         	goto	u2790
  5534   0019C2                     u2791:
  5535   0019C2  EF01  F00D         	goto	l2829
  5536   0019C6                     u2790:
  5537   0019C6  C041  F049         	movff	___fladd@b,??___fladd
  5538   0019CA  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  5539   0019CE  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  5540   0019D2  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  5541   0019D6  344C               	rlcf	(??___fladd+3)^0,w,c
  5542   0019D8  324C               	rrcf	(??___fladd+3)^0,f,c
  5543   0019DA  324B               	rrcf	(??___fladd+2)^0,f,c
  5544   0019DC  324A               	rrcf	(??___fladd+1)^0,f,c
  5545   0019DE  3249               	rrcf	??___fladd^0,f,c
  5546   0019E0  C049  F041         	movff	??___fladd,___fladd@b
  5547   0019E4  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  5548   0019E8  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  5549   0019EC  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  5550   0019F0  284F               	incf	___fladd@bexp^0,w,c
  5551   0019F2  B4D8               	btfsc	status,2,c
  5552   0019F4  EFFE  F00C         	goto	u2801
  5553   0019F8  EF00  F00D         	goto	u2800
  5554   0019FC                     u2801:
  5555   0019FC  EF01  F00D         	goto	l2829
  5556   001A00                     u2800:
  5557   001A00  2A4F               	incf	___fladd@bexp^0,f,c
  5558   001A02                     l2829:
  5559   001A02  284F               	incf	___fladd@bexp^0,w,c
  5560   001A04  B4D8               	btfsc	status,2,c
  5561   001A06  EF07  F00D         	goto	u2811
  5562   001A0A  EF09  F00D         	goto	u2810
  5563   001A0E                     u2811:
  5564   001A0E  EF11  F00D         	goto	l2833
  5565   001A12                     u2810:
  5566   001A12  504F               	movf	___fladd@bexp^0,w,c
  5567   001A14  A4D8               	btfss	status,2,c
  5568   001A16  EF0F  F00D         	goto	u2821
  5569   001A1A  EF11  F00D         	goto	u2820
  5570   001A1E                     u2821:
  5571   001A1E  EF23  F00D         	goto	l2837
  5572   001A22                     u2820:
  5573   001A22                     l2833:
  5574   001A22  0E00               	movlw	0
  5575   001A24  6E41               	movwf	___fladd@b^0,c
  5576   001A26  0E00               	movlw	0
  5577   001A28  6E42               	movwf	(___fladd@b+1)^0,c
  5578   001A2A  0E00               	movlw	0
  5579   001A2C  6E43               	movwf	(___fladd@b+2)^0,c
  5580   001A2E  0E00               	movlw	0
  5581   001A30  6E44               	movwf	(___fladd@b+3)^0,c
  5582   001A32  504F               	movf	___fladd@bexp^0,w,c
  5583   001A34  A4D8               	btfss	status,2,c
  5584   001A36  EF1F  F00D         	goto	u2831
  5585   001A3A  EF21  F00D         	goto	u2830
  5586   001A3E                     u2831:
  5587   001A3E  EF23  F00D         	goto	l2837
  5588   001A42                     u2830:
  5589   001A42  0E00               	movlw	0
  5590   001A44  6E4D               	movwf	___fladd@signs^0,c
  5591   001A46                     l2837:
  5592   001A46  A04F               	btfss	___fladd@bexp^0,0,c
  5593   001A48  EF28  F00D         	goto	u2841
  5594   001A4C  EF2A  F00D         	goto	u2840
  5595   001A50                     u2841:
  5596   001A50  EF2D  F00D         	goto	l2841
  5597   001A54                     u2840:
  5598   001A54  8E43               	bsf	(___fladd@b+2)^0,7,c
  5599   001A56  EF2E  F00D         	goto	l2843
  5600   001A5A                     l2841:
  5601   001A5A  9E43               	bcf	(___fladd@b+2)^0,7,c
  5602   001A5C                     l2843:
  5603   001A5C  90D8               	bcf	status,0,c
  5604   001A5E  304F               	rrcf	___fladd@bexp^0,w,c
  5605   001A60  6E44               	movwf	(___fladd@b+3)^0,c
  5606   001A62  AE4D               	btfss	___fladd@signs^0,7,c
  5607   001A64  EF36  F00D         	goto	u2851
  5608   001A68  EF38  F00D         	goto	u2850
  5609   001A6C                     u2851:
  5610   001A6C  EF39  F00D         	goto	l2849
  5611   001A70                     u2850:
  5612   001A70  8E44               	bsf	(___fladd@b+3)^0,7,c
  5613   001A72                     l2849:
  5614   001A72  C041  F041         	movff	___fladd@b,?___fladd
  5615   001A76  C042  F042         	movff	___fladd@b+1,?___fladd+1
  5616   001A7A  C043  F043         	movff	___fladd@b+2,?___fladd+2
  5617   001A7E  C044  F044         	movff	___fladd@b+3,?___fladd+3
  5618   001A82                     l828:
  5619   001A82  0012               	return		;funcret
  5620   001A84                     __end_of___fladd:
  5621                           	callstack 0
  5622                           
  5623 ;; *************** function _printf *****************
  5624 ;; Defined at:
  5625 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  fmt             1   54[COMRAM] PTR const unsigned char 
  5628 ;;		 -> STR_5(5), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  ret             2    0        int 
  5631 ;;  ap              1   57[COMRAM] PTR void [1]
  5632 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2   54[COMRAM] int 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5642 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;Total ram usage:        4 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 7
  5649 ;; This function calls:
  5650 ;;		_vfprintf
  5651 ;; This function is called by:
  5652 ;;		_runDAC
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text20
  5657   0040A6                     __ptext20:
  5658                           	callstack 0
  5659   0040A6                     _printf:
  5660                           	callstack 22
  5661   0040A6  0E38               	movlw	low (?_printf+1)
  5662   0040A8  6E3A               	movwf	printf@ap^0,c
  5663   0040AA  0E00               	movlw	0
  5664   0040AC  6E32               	movwf	vfprintf@fp^0,c
  5665   0040AE  0E00               	movlw	0
  5666   0040B0  6E33               	movwf	(vfprintf@fp+1)^0,c
  5667   0040B2  C037  F034         	movff	printf@fmt,vfprintf@fmt
  5668   0040B6  0E3A               	movlw	low printf@ap
  5669   0040B8  6E35               	movwf	vfprintf@ap^0,c
  5670   0040BA  EC56  F01F         	call	_vfprintf	;wreg free
  5671   0040BE  0012               	return		;funcret
  5672   0040C0                     __end_of_printf:
  5673                           	callstack 0
  5674                           
  5675 ;; *************** function ___fldiv *****************
  5676 ;; Defined at:
  5677 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  b               4   39[COMRAM] int 
  5680 ;;  a               4   43[COMRAM] int 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  grs             4   58[COMRAM] unsigned long 
  5683 ;;  rem             4   51[COMRAM] unsigned long 
  5684 ;;  new_exp         2   56[COMRAM] short 
  5685 ;;  aexp            1   63[COMRAM] unsigned char 
  5686 ;;  bexp            1   62[COMRAM] unsigned char 
  5687 ;;  sign            1   55[COMRAM] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  4   39[COMRAM] unsigned char 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:       25 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_runDAC
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text21
  5711   002270                     __ptext21:
  5712                           	callstack 0
  5713   002270                     ___fldiv:
  5714                           	callstack 29
  5715   002270  502B               	movf	(___fldiv@b+3)^0,w,c
  5716   002272  0B80               	andlw	128
  5717   002274  6E38               	movwf	___fldiv@sign^0,c
  5718   002276  502B               	movf	(___fldiv@b+3)^0,w,c
  5719   002278  242B               	addwf	(___fldiv@b+3)^0,w,c
  5720   00227A  6E3F               	movwf	___fldiv@bexp^0,c
  5721   00227C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5722   00227E  EF43  F011         	goto	u3891
  5723   002282  EF45  F011         	goto	u3890
  5724   002286                     u3891:
  5725   002286  EF46  F011         	goto	l3507
  5726   00228A                     u3890:
  5727   00228A  803F               	bsf	___fldiv@bexp^0,0,c
  5728   00228C                     l3507:
  5729   00228C  503F               	movf	___fldiv@bexp^0,w,c
  5730   00228E  B4D8               	btfsc	status,2,c
  5731   002290  EF4C  F011         	goto	u3901
  5732   002294  EF4E  F011         	goto	u3900
  5733   002298                     u3901:
  5734   002298  EF63  F011         	goto	l3517
  5735   00229C                     u3900:
  5736   00229C  283F               	incf	___fldiv@bexp^0,w,c
  5737   00229E  A4D8               	btfss	status,2,c
  5738   0022A0  EF54  F011         	goto	u3911
  5739   0022A4  EF56  F011         	goto	u3910
  5740   0022A8                     u3911:
  5741   0022A8  EF5E  F011         	goto	l3513
  5742   0022AC                     u3910:
  5743   0022AC  0E00               	movlw	0
  5744   0022AE  6E28               	movwf	___fldiv@b^0,c
  5745   0022B0  0E00               	movlw	0
  5746   0022B2  6E29               	movwf	(___fldiv@b+1)^0,c
  5747   0022B4  0E00               	movlw	0
  5748   0022B6  6E2A               	movwf	(___fldiv@b+2)^0,c
  5749   0022B8  0E00               	movlw	0
  5750   0022BA  6E2B               	movwf	(___fldiv@b+3)^0,c
  5751   0022BC                     l3513:
  5752   0022BC  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  5753   0022BE  0E00               	movlw	0
  5754   0022C0  6E2B               	movwf	(___fldiv@b+3)^0,c
  5755   0022C2  EF6B  F011         	goto	l3519
  5756   0022C6                     l3517:
  5757   0022C6  0E00               	movlw	0
  5758   0022C8  6E28               	movwf	___fldiv@b^0,c
  5759   0022CA  0E00               	movlw	0
  5760   0022CC  6E29               	movwf	(___fldiv@b+1)^0,c
  5761   0022CE  0E00               	movlw	0
  5762   0022D0  6E2A               	movwf	(___fldiv@b+2)^0,c
  5763   0022D2  0E00               	movlw	0
  5764   0022D4  6E2B               	movwf	(___fldiv@b+3)^0,c
  5765   0022D6                     l3519:
  5766   0022D6  502F               	movf	(___fldiv@a+3)^0,w,c
  5767   0022D8  0B80               	andlw	128
  5768   0022DA  1A38               	xorwf	___fldiv@sign^0,f,c
  5769   0022DC  502F               	movf	(___fldiv@a+3)^0,w,c
  5770   0022DE  242F               	addwf	(___fldiv@a+3)^0,w,c
  5771   0022E0  6E40               	movwf	___fldiv@aexp^0,c
  5772   0022E2  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  5773   0022E4  EF76  F011         	goto	u3921
  5774   0022E8  EF78  F011         	goto	u3920
  5775   0022EC                     u3921:
  5776   0022EC  EF79  F011         	goto	l3527
  5777   0022F0                     u3920:
  5778   0022F0  8040               	bsf	___fldiv@aexp^0,0,c
  5779   0022F2                     l3527:
  5780   0022F2  5040               	movf	___fldiv@aexp^0,w,c
  5781   0022F4  B4D8               	btfsc	status,2,c
  5782   0022F6  EF7F  F011         	goto	u3931
  5783   0022FA  EF81  F011         	goto	u3930
  5784   0022FE                     u3931:
  5785   0022FE  EF96  F011         	goto	l3537
  5786   002302                     u3930:
  5787   002302  2840               	incf	___fldiv@aexp^0,w,c
  5788   002304  A4D8               	btfss	status,2,c
  5789   002306  EF87  F011         	goto	u3941
  5790   00230A  EF89  F011         	goto	u3940
  5791   00230E                     u3941:
  5792   00230E  EF91  F011         	goto	l3533
  5793   002312                     u3940:
  5794   002312  0E00               	movlw	0
  5795   002314  6E2C               	movwf	___fldiv@a^0,c
  5796   002316  0E00               	movlw	0
  5797   002318  6E2D               	movwf	(___fldiv@a+1)^0,c
  5798   00231A  0E00               	movlw	0
  5799   00231C  6E2E               	movwf	(___fldiv@a+2)^0,c
  5800   00231E  0E00               	movlw	0
  5801   002320  6E2F               	movwf	(___fldiv@a+3)^0,c
  5802   002322                     l3533:
  5803   002322  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  5804   002324  0E00               	movlw	0
  5805   002326  6E2F               	movwf	(___fldiv@a+3)^0,c
  5806   002328  EF9E  F011         	goto	l3539
  5807   00232C                     l3537:
  5808   00232C  0E00               	movlw	0
  5809   00232E  6E2C               	movwf	___fldiv@a^0,c
  5810   002330  0E00               	movlw	0
  5811   002332  6E2D               	movwf	(___fldiv@a+1)^0,c
  5812   002334  0E00               	movlw	0
  5813   002336  6E2E               	movwf	(___fldiv@a+2)^0,c
  5814   002338  0E00               	movlw	0
  5815   00233A  6E2F               	movwf	(___fldiv@a+3)^0,c
  5816   00233C                     l3539:
  5817   00233C  502C               	movf	___fldiv@a^0,w,c
  5818   00233E  102D               	iorwf	(___fldiv@a+1)^0,w,c
  5819   002340  102E               	iorwf	(___fldiv@a+2)^0,w,c
  5820   002342  102F               	iorwf	(___fldiv@a+3)^0,w,c
  5821   002344  A4D8               	btfss	status,2,c
  5822   002346  EFA7  F011         	goto	u3951
  5823   00234A  EFA9  F011         	goto	u3950
  5824   00234E                     u3951:
  5825   00234E  EFC1  F011         	goto	l3551
  5826   002352                     u3950:
  5827   002352  0E00               	movlw	0
  5828   002354  6E28               	movwf	___fldiv@b^0,c
  5829   002356  0E00               	movlw	0
  5830   002358  6E29               	movwf	(___fldiv@b+1)^0,c
  5831   00235A  0E00               	movlw	0
  5832   00235C  6E2A               	movwf	(___fldiv@b+2)^0,c
  5833   00235E  0E00               	movlw	0
  5834   002360  6E2B               	movwf	(___fldiv@b+3)^0,c
  5835   002362  0E80               	movlw	128
  5836   002364  122A               	iorwf	(___fldiv@b+2)^0,f,c
  5837   002366  0E7F               	movlw	127
  5838   002368  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5839   00236A                     l3545:
  5840   00236A  5038               	movf	___fldiv@sign^0,w,c
  5841   00236C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5842   00236E  C028  F028         	movff	___fldiv@b,?___fldiv
  5843   002372  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  5844   002376  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  5845   00237A  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  5846   00237E  EF04  F013         	goto	l873
  5847   002382                     l3551:
  5848   002382  503F               	movf	___fldiv@bexp^0,w,c
  5849   002384  A4D8               	btfss	status,2,c
  5850   002386  EFC7  F011         	goto	u3961
  5851   00238A  EFC9  F011         	goto	u3960
  5852   00238E                     u3961:
  5853   00238E  EFD3  F011         	goto	l3559
  5854   002392                     u3960:
  5855   002392  0E00               	movlw	0
  5856   002394  6E28               	movwf	?___fldiv^0,c
  5857   002396  0E00               	movlw	0
  5858   002398  6E29               	movwf	(?___fldiv+1)^0,c
  5859   00239A  0E00               	movlw	0
  5860   00239C  6E2A               	movwf	(?___fldiv+2)^0,c
  5861   00239E  0E00               	movlw	0
  5862   0023A0  6E2B               	movwf	(?___fldiv+3)^0,c
  5863   0023A2  EF04  F013         	goto	l873
  5864   0023A6                     l3559:
  5865   0023A6  5040               	movf	___fldiv@aexp^0,w,c
  5866   0023A8  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  5867   0023AC  6A31               	clrf	(??___fldiv+1)^0,c
  5868   0023AE  5E30               	subwf	??___fldiv^0,f,c
  5869   0023B0  0E00               	movlw	0
  5870   0023B2  5A31               	subwfb	(??___fldiv+1)^0,f,c
  5871   0023B4  0E7F               	movlw	127
  5872   0023B6  2430               	addwf	??___fldiv^0,w,c
  5873   0023B8  6E39               	movwf	___fldiv@new_exp^0,c
  5874   0023BA  0E00               	movlw	0
  5875   0023BC  2031               	addwfc	(??___fldiv+1)^0,w,c
  5876   0023BE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5877   0023C0  C028  F034         	movff	___fldiv@b,___fldiv@rem
  5878   0023C4  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  5879   0023C8  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  5880   0023CC  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  5881   0023D0  0E00               	movlw	0
  5882   0023D2  6E28               	movwf	___fldiv@b^0,c
  5883   0023D4  0E00               	movlw	0
  5884   0023D6  6E29               	movwf	(___fldiv@b+1)^0,c
  5885   0023D8  0E00               	movlw	0
  5886   0023DA  6E2A               	movwf	(___fldiv@b+2)^0,c
  5887   0023DC  0E00               	movlw	0
  5888   0023DE  6E2B               	movwf	(___fldiv@b+3)^0,c
  5889   0023E0  0E00               	movlw	0
  5890   0023E2  6E3B               	movwf	___fldiv@grs^0,c
  5891   0023E4  0E00               	movlw	0
  5892   0023E6  6E3C               	movwf	(___fldiv@grs+1)^0,c
  5893   0023E8  0E00               	movlw	0
  5894   0023EA  6E3D               	movwf	(___fldiv@grs+2)^0,c
  5895   0023EC  0E00               	movlw	0
  5896   0023EE  6E3E               	movwf	(___fldiv@grs+3)^0,c
  5897   0023F0  0E00               	movlw	0
  5898   0023F2  6E40               	movwf	___fldiv@aexp^0,c
  5899   0023F4  EF34  F012         	goto	l875
  5900   0023F8                     l3569:
  5901   0023F8  5040               	movf	___fldiv@aexp^0,w,c
  5902   0023FA  B4D8               	btfsc	status,2,c
  5903   0023FC  EF02  F012         	goto	u3971
  5904   002400  EF04  F012         	goto	u3970
  5905   002404                     u3971:
  5906   002404  EF1B  F012         	goto	l3577
  5907   002408                     u3970:
  5908   002408  90D8               	bcf	status,0,c
  5909   00240A  3634               	rlcf	___fldiv@rem^0,f,c
  5910   00240C  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  5911   00240E  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  5912   002410  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  5913   002412  90D8               	bcf	status,0,c
  5914   002414  3628               	rlcf	___fldiv@b^0,f,c
  5915   002416  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5916   002418  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5917   00241A  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5918   00241C  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5919   00241E  EF13  F012         	goto	u3981
  5920   002422  EF15  F012         	goto	u3980
  5921   002426                     u3981:
  5922   002426  EF16  F012         	goto	l878
  5923   00242A                     u3980:
  5924   00242A  8028               	bsf	___fldiv@b^0,0,c
  5925   00242C                     l878:
  5926   00242C  90D8               	bcf	status,0,c
  5927   00242E  363B               	rlcf	___fldiv@grs^0,f,c
  5928   002430  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  5929   002432  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  5930   002434  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  5931   002436                     l3577:
  5932   002436  502C               	movf	___fldiv@a^0,w,c
  5933   002438  5C34               	subwf	___fldiv@rem^0,w,c
  5934   00243A  502D               	movf	(___fldiv@a+1)^0,w,c
  5935   00243C  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  5936   00243E  502E               	movf	(___fldiv@a+2)^0,w,c
  5937   002440  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  5938   002442  502F               	movf	(___fldiv@a+3)^0,w,c
  5939   002444  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  5940   002446  A0D8               	btfss	status,0,c
  5941   002448  EF28  F012         	goto	u3991
  5942   00244C  EF2A  F012         	goto	u3990
  5943   002450                     u3991:
  5944   002450  EF33  F012         	goto	l3583
  5945   002454                     u3990:
  5946   002454  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  5947   002456  502C               	movf	___fldiv@a^0,w,c
  5948   002458  5E34               	subwf	___fldiv@rem^0,f,c
  5949   00245A  502D               	movf	(___fldiv@a+1)^0,w,c
  5950   00245C  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  5951   00245E  502E               	movf	(___fldiv@a+2)^0,w,c
  5952   002460  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  5953   002462  502F               	movf	(___fldiv@a+3)^0,w,c
  5954   002464  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  5955   002466                     l3583:
  5956   002466  2A40               	incf	___fldiv@aexp^0,f,c
  5957   002468                     l875:
  5958   002468  0E19               	movlw	25
  5959   00246A  6440               	cpfsgt	___fldiv@aexp^0,c
  5960   00246C  EF3A  F012         	goto	u4001
  5961   002470  EF3C  F012         	goto	u4000
  5962   002474                     u4001:
  5963   002474  EFFC  F011         	goto	l3569
  5964   002478                     u4000:
  5965   002478  5034               	movf	___fldiv@rem^0,w,c
  5966   00247A  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  5967   00247C  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  5968   00247E  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  5969   002480  B4D8               	btfsc	status,2,c
  5970   002482  EF45  F012         	goto	u4011
  5971   002486  EF47  F012         	goto	u4010
  5972   00248A                     u4011:
  5973   00248A  EF5F  F012         	goto	l3595
  5974   00248E                     u4010:
  5975   00248E  803B               	bsf	___fldiv@grs^0,0,c
  5976   002490  EF5F  F012         	goto	l3595
  5977   002494                     l3589:
  5978   002494  90D8               	bcf	status,0,c
  5979   002496  3628               	rlcf	___fldiv@b^0,f,c
  5980   002498  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5981   00249A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5982   00249C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5983   00249E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5984   0024A0  EF54  F012         	goto	u4021
  5985   0024A4  EF56  F012         	goto	u4020
  5986   0024A8                     u4021:
  5987   0024A8  EF57  F012         	goto	l884
  5988   0024AC                     u4020:
  5989   0024AC  8028               	bsf	___fldiv@b^0,0,c
  5990   0024AE                     l884:
  5991   0024AE  90D8               	bcf	status,0,c
  5992   0024B0  363B               	rlcf	___fldiv@grs^0,f,c
  5993   0024B2  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  5994   0024B4  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  5995   0024B6  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  5996   0024B8  0639               	decf	___fldiv@new_exp^0,f,c
  5997   0024BA  A0D8               	btfss	status,0,c
  5998   0024BC  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  5999   0024BE                     l3595:
  6000   0024BE  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6001   0024C0  EF64  F012         	goto	u4031
  6002   0024C4  EF66  F012         	goto	u4030
  6003   0024C8                     u4031:
  6004   0024C8  EF4A  F012         	goto	l3589
  6005   0024CC                     u4030:
  6006   0024CC  0E00               	movlw	0
  6007   0024CE  6E40               	movwf	___fldiv@aexp^0,c
  6008   0024D0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6009   0024D2  EF6D  F012         	goto	u4041
  6010   0024D6  EF6F  F012         	goto	u4040
  6011   0024DA                     u4041:
  6012   0024DA  EF93  F012         	goto	l886
  6013   0024DE                     u4040:
  6014   0024DE  0EFF               	movlw	255
  6015   0024E0  143B               	andwf	___fldiv@grs^0,w,c
  6016   0024E2  6E30               	movwf	??___fldiv^0,c
  6017   0024E4  0EFF               	movlw	255
  6018   0024E6  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6019   0024E8  6E31               	movwf	(??___fldiv+1)^0,c
  6020   0024EA  0EFF               	movlw	255
  6021   0024EC  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6022   0024EE  6E32               	movwf	(??___fldiv+2)^0,c
  6023   0024F0  0E7F               	movlw	127
  6024   0024F2  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6025   0024F4  6E33               	movwf	(??___fldiv+3)^0,c
  6026   0024F6  5030               	movf	??___fldiv^0,w,c
  6027   0024F8  1031               	iorwf	(??___fldiv+1)^0,w,c
  6028   0024FA  1032               	iorwf	(??___fldiv+2)^0,w,c
  6029   0024FC  1033               	iorwf	(??___fldiv+3)^0,w,c
  6030   0024FE  B4D8               	btfsc	status,2,c
  6031   002500  EF84  F012         	goto	u4051
  6032   002504  EF86  F012         	goto	u4050
  6033   002508                     u4051:
  6034   002508  EF8A  F012         	goto	l887
  6035   00250C                     u4050:
  6036   00250C                     l3603:
  6037   00250C  0E01               	movlw	1
  6038   00250E  6E40               	movwf	___fldiv@aexp^0,c
  6039   002510  EF93  F012         	goto	l886
  6040   002514                     l887:
  6041   002514  A028               	btfss	___fldiv@b^0,0,c
  6042   002516  EF8F  F012         	goto	u4061
  6043   00251A  EF91  F012         	goto	u4060
  6044   00251E                     u4061:
  6045   00251E  EF93  F012         	goto	l886
  6046   002522                     u4060:
  6047   002522  EF86  F012         	goto	l3603
  6048   002526                     l886:
  6049   002526  5040               	movf	___fldiv@aexp^0,w,c
  6050   002528  B4D8               	btfsc	status,2,c
  6051   00252A  EF99  F012         	goto	u4071
  6052   00252E  EF9B  F012         	goto	u4070
  6053   002532                     u4071:
  6054   002532  EFBF  F012         	goto	l3615
  6055   002536                     u4070:
  6056   002536  0E01               	movlw	1
  6057   002538  2628               	addwf	___fldiv@b^0,f,c
  6058   00253A  0E00               	movlw	0
  6059   00253C  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6060   00253E  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6061   002540  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6062   002542  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6063   002544  EFA6  F012         	goto	u4081
  6064   002548  EFA8  F012         	goto	u4080
  6065   00254C                     u4081:
  6066   00254C  EFBF  F012         	goto	l3615
  6067   002550                     u4080:
  6068   002550  C028  F030         	movff	___fldiv@b,??___fldiv
  6069   002554  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6070   002558  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6071   00255C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6072   002560  3433               	rlcf	(??___fldiv+3)^0,w,c
  6073   002562  3233               	rrcf	(??___fldiv+3)^0,f,c
  6074   002564  3232               	rrcf	(??___fldiv+2)^0,f,c
  6075   002566  3231               	rrcf	(??___fldiv+1)^0,f,c
  6076   002568  3230               	rrcf	??___fldiv^0,f,c
  6077   00256A  C030  F028         	movff	??___fldiv,___fldiv@b
  6078   00256E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6079   002572  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6080   002576  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6081   00257A  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6082   00257C  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6083   00257E                     l3615:
  6084   00257E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6085   002580  EFCA  F012         	goto	u4091
  6086   002584  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6087   002586  E108               	bnz	u4090
  6088   002588  2839               	incf	___fldiv@new_exp^0,w,c
  6089   00258A  A0D8               	btfss	status,0,c
  6090   00258C  EFCA  F012         	goto	u4091
  6091   002590  EFCC  F012         	goto	u4090
  6092   002594                     u4091:
  6093   002594  EFD7  F012         	goto	l3619
  6094   002598                     u4090:
  6095   002598  0E00               	movlw	0
  6096   00259A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6097   00259C  6839               	setf	___fldiv@new_exp^0,c
  6098   00259E  0E00               	movlw	0
  6099   0025A0  6E28               	movwf	___fldiv@b^0,c
  6100   0025A2  0E00               	movlw	0
  6101   0025A4  6E29               	movwf	(___fldiv@b+1)^0,c
  6102   0025A6  0E00               	movlw	0
  6103   0025A8  6E2A               	movwf	(___fldiv@b+2)^0,c
  6104   0025AA  0E00               	movlw	0
  6105   0025AC  6E2B               	movwf	(___fldiv@b+3)^0,c
  6106   0025AE                     l3619:
  6107   0025AE  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6108   0025B0  EFE4  F012         	goto	u4100
  6109   0025B4  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6110   0025B6  E106               	bnz	u4101
  6111   0025B8  0439               	decf	___fldiv@new_exp^0,w,c
  6112   0025BA  B0D8               	btfsc	status,0,c
  6113   0025BC  EFE2  F012         	goto	u4101
  6114   0025C0  EFE4  F012         	goto	u4100
  6115   0025C4                     u4101:
  6116   0025C4  EFF2  F012         	goto	l3623
  6117   0025C8                     u4100:
  6118   0025C8  0E00               	movlw	0
  6119   0025CA  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6120   0025CC  0E00               	movlw	0
  6121   0025CE  6E39               	movwf	___fldiv@new_exp^0,c
  6122   0025D0  0E00               	movlw	0
  6123   0025D2  6E28               	movwf	___fldiv@b^0,c
  6124   0025D4  0E00               	movlw	0
  6125   0025D6  6E29               	movwf	(___fldiv@b+1)^0,c
  6126   0025D8  0E00               	movlw	0
  6127   0025DA  6E2A               	movwf	(___fldiv@b+2)^0,c
  6128   0025DC  0E00               	movlw	0
  6129   0025DE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6130   0025E0  0E00               	movlw	0
  6131   0025E2  6E38               	movwf	___fldiv@sign^0,c
  6132   0025E4                     l3623:
  6133   0025E4  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6134   0025E8  A03F               	btfss	___fldiv@bexp^0,0,c
  6135   0025EA  EFF9  F012         	goto	u4111
  6136   0025EE  EFFB  F012         	goto	u4110
  6137   0025F2                     u4111:
  6138   0025F2  EFFE  F012         	goto	l3629
  6139   0025F6                     u4110:
  6140   0025F6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6141   0025F8  EFFF  F012         	goto	l3631
  6142   0025FC                     l3629:
  6143   0025FC  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6144   0025FE                     l3631:
  6145   0025FE  90D8               	bcf	status,0,c
  6146   002600  303F               	rrcf	___fldiv@bexp^0,w,c
  6147   002602  6E2B               	movwf	(___fldiv@b+3)^0,c
  6148   002604  EFB5  F011         	goto	l3545
  6149   002608                     l873:
  6150   002608  0012               	return		;funcret
  6151   00260A                     __end_of___fldiv:
  6152                           	callstack 0
  6153                           
  6154 ;; *************** function _SPI_write *****************
  6155 ;; Defined at:
  6156 ;;		line 93 in file "DAC.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  data            1    wreg     unsigned char 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  data            1    2[COMRAM] unsigned char 
  6161 ;;  LSB             1    1[COMRAM] unsigned char 
  6162 ;;  MSB             1    0[COMRAM] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;Total ram usage:        3 bytes
  6177 ;; Hardware stack levels used: 1
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_runDAC
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text22
  6186   003EEE                     __ptext22:
  6187                           	callstack 0
  6188   003EEE                     _SPI_write:
  6189                           	callstack 29
  6190                           
  6191                           ;incstack = 0
  6192                           ;SPI_write@data stored from wreg
  6193   003EEE  6E03               	movwf	SPI_write@data^0,c
  6194   003EF0                     
  6195                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6196   003EF0  3803               	swapf	SPI_write@data^0,w,c
  6197   003EF2  0B0F               	andlw	15
  6198   003EF4  0930               	iorlw	48
  6199   003EF6  6E01               	movwf	SPI_write@MSB^0,c
  6200                           
  6201                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6202   003EF8  3803               	swapf	SPI_write@data^0,w,c
  6203   003EFA  0BF0               	andlw	240
  6204   003EFC  6E02               	movwf	SPI_write@LSB^0,c
  6205   003EFE                     
  6206                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6207   003EFE  968A               	bcf	138,3,c	;volatile
  6208   003F00                     
  6209                           ;DAC.c: 101:     SSP1BUF = MSB;
  6210   003F00  C001  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6211   003F04                     l200:
  6212   003F04  A69E               	btfss	3998,3,c	;volatile
  6213   003F06  EF87  F01F         	goto	u3681
  6214   003F0A  EF89  F01F         	goto	u3680
  6215   003F0E                     u3681:
  6216   003F0E  EF82  F01F         	goto	l200
  6217   003F12                     u3680:
  6218   003F12                     
  6219                           ;DAC.c: 103:     SSP1IF = 0;
  6220   003F12  969E               	bcf	3998,3,c	;volatile
  6221                           
  6222                           ;DAC.c: 105:     SSP1BUF = LSB;
  6223   003F14  C002  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6224   003F18                     l203:
  6225   003F18  A69E               	btfss	3998,3,c	;volatile
  6226   003F1A  EF91  F01F         	goto	u3691
  6227   003F1E  EF93  F01F         	goto	u3690
  6228   003F22                     u3691:
  6229   003F22  EF8C  F01F         	goto	l203
  6230   003F26                     u3690:
  6231   003F26                     
  6232                           ;DAC.c: 107:     SSP1IF = 0;
  6233   003F26  969E               	bcf	3998,3,c	;volatile
  6234                           
  6235                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6236   003F28  868A               	bsf	138,3,c	;volatile
  6237   003F2A  0012               	return		;funcret
  6238   003F2C                     __end_of_SPI_write:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _moveDisplay *****************
  6242 ;; Defined at:
  6243 ;;		line 11 in file "menu.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  menuI           1    wreg     unsigned char 
  6246 ;;  where           1   73[COMRAM] unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  menuI           1   42[BANK0 ] unsigned char 
  6249 ;;  menuItem2      17   17[BANK0 ] unsigned char [17]
  6250 ;;  menuItem1      17    0[BANK0 ] unsigned char [17]
  6251 ;;  menuItems       8   34[BANK0 ] PTR unsigned char [8]
  6252 ;;		 -> STR_13(1), STR_12(6), STR_11(5), STR_10(4), 
  6253 ;;		 -> STR_9(4), STR_8(4), STR_7(5), STR_6(5), 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      unsigned char 
  6256 ;; Registers used:
  6257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6263 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Totals:         3      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;Total ram usage:       46 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; Hardware stack levels required when called: 8
  6270 ;; This function calls:
  6271 ;;		_LCD_Clear
  6272 ;;		_LCD_ShowString
  6273 ;;		_sprintf
  6274 ;; This function is called by:
  6275 ;;		_main
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text23
  6280   0037F2                     __ptext23:
  6281                           	callstack 0
  6282   0037F2                     _moveDisplay:
  6283                           	callstack 22
  6284                           
  6285                           ;incstack = 0
  6286                           ;moveDisplay@menuI stored from wreg
  6287   0037F2  0100               	movlb	0	; () banked
  6288   0037F4  6F8A               	movwf	moveDisplay@menuI& (0+255),b
  6289   0037F6                     
  6290                           ;menu.c: 12:     LCD_Clear();
  6291   0037F6  ECCE  F01F         	call	_LCD_Clear	;wreg free
  6292   0037FA                     
  6293                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  6294   0037FA  EE20  F0D9         	lfsr	2,moveDisplay@F6950
  6295   0037FE  EE10  F082         	lfsr	1,moveDisplay@menuItems
  6296   003802  0E07               	movlw	7
  6297   003804                     u4711:
  6298   003804  CFDB FFE3          	movff	plusw2,plusw1
  6299   003808  06E8               	decf	wreg,f,c
  6300   00380A  E2FC               	bc	u4711
  6301                           
  6302                           ;menu.c: 14:     switch (where){
  6303   00380C  EF20  F01C         	goto	l4037
  6304   003810                     l4027:
  6305                           
  6306                           ;menu.c: 18:             if(menuI<6){
  6307   003810  0E06               	movlw	6
  6308   003812  0100               	movlb	0	; () banked
  6309   003814  618A               	cpfslt	moveDisplay@menuI& (0+255),b
  6310   003816  EF0F  F01C         	goto	u4721
  6311   00381A  EF11  F01C         	goto	u4720
  6312   00381E                     u4721:
  6313   00381E  EF2F  F01C         	goto	l4039
  6314   003822                     u4720:
  6315   003822                     
  6316                           ; BSR set to: 0
  6317                           ;menu.c: 19:             menuI++;
  6318   003822  2B8A               	incf	moveDisplay@menuI& (0+255),f,b
  6319   003824  EF2F  F01C         	goto	l4039
  6320   003828                     l4031:
  6321                           
  6322                           ;menu.c: 23:             if(menuI>0){
  6323   003828  0100               	movlb	0	; () banked
  6324   00382A  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6325   00382C  B4D8               	btfsc	status,2,c
  6326   00382E  EF1B  F01C         	goto	u4731
  6327   003832  EF1D  F01C         	goto	u4730
  6328   003836                     u4731:
  6329   003836  EF2F  F01C         	goto	l4039
  6330   00383A                     u4730:
  6331   00383A                     
  6332                           ; BSR set to: 0
  6333                           ;menu.c: 24:             menuI--;
  6334   00383A  078A               	decf	moveDisplay@menuI& (0+255),f,b
  6335   00383C  EF2F  F01C         	goto	l4039
  6336   003840                     l4037:
  6337   003840  504A               	movf	moveDisplay@where^0,w,c
  6338                           
  6339                           ; Switch size 1, requested type "simple"
  6340                           ; Number of cases is 3, Range of values is 0 to 2
  6341                           ; switch strategies available:
  6342                           ; Name         Instructions Cycles
  6343                           ; simple_byte           10     6 (average)
  6344                           ;	Chosen strategy is simple_byte
  6345   003842  0A00               	xorlw	0	; case 0
  6346   003844  B4D8               	btfsc	status,2,c
  6347   003846  EF2F  F01C         	goto	l4039
  6348   00384A  0A01               	xorlw	1	; case 1
  6349   00384C  B4D8               	btfsc	status,2,c
  6350   00384E  EF08  F01C         	goto	l4027
  6351   003852  0A03               	xorlw	3	; case 2
  6352   003854  B4D8               	btfsc	status,2,c
  6353   003856  EF14  F01C         	goto	l4031
  6354   00385A  EF2F  F01C         	goto	l4039
  6355   00385E                     l4039:
  6356                           
  6357                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  6358   00385E  0E60               	movlw	low moveDisplay@menuItem1
  6359   003860  6E37               	movwf	sprintf@s^0,c
  6360   003862  0E92               	movlw	low STR_14
  6361   003864  6E38               	movwf	sprintf@fmt^0,c
  6362   003866  0E00               	movlw	0
  6363   003868  6E3A               	movwf	(?_sprintf+3)^0,c
  6364   00386A  0E0F               	movlw	15
  6365   00386C  6E39               	movwf	(?_sprintf+2)^0,c
  6366   00386E  0100               	movlb	0	; () banked
  6367   003870  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6368   003872  0F82               	addlw	low moveDisplay@menuItems
  6369   003874  6ED9               	movwf	fsr2l,c
  6370   003876  6ADA               	clrf	fsr2h,c
  6371   003878  50DF               	movf	indf2,w,c
  6372   00387A  6E4B               	movwf	??_moveDisplay^0,c
  6373   00387C  C04B  F03B         	movff	??_moveDisplay,?_sprintf+4
  6374   003880  503B               	movf	(?_sprintf+4)^0,w,c
  6375   003882  A4D8               	btfss	status,2,c
  6376   003884  0E10               	movlw	high __smallconst
  6377   003886  6E3C               	movwf	(?_sprintf+5)^0,c
  6378   003888  ECB3  F01F         	call	_sprintf	;wreg free
  6379                           
  6380                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  6381   00388C  0E71               	movlw	low moveDisplay@menuItem2
  6382   00388E  6E37               	movwf	sprintf@s^0,c
  6383   003890  0E93               	movlw	low (STR_14+1)
  6384   003892  6E38               	movwf	sprintf@fmt^0,c
  6385   003894  0E00               	movlw	0
  6386   003896  6E3A               	movwf	(?_sprintf+3)^0,c
  6387   003898  0E10               	movlw	16
  6388   00389A  6E39               	movwf	(?_sprintf+2)^0,c
  6389   00389C  C08A  F04B         	movff	moveDisplay@menuI,??_moveDisplay
  6390   0038A0  0E01               	movlw	1
  6391   0038A2  264B               	addwf	??_moveDisplay^0,f,c
  6392   0038A4  504B               	movf	??_moveDisplay^0,w,c
  6393   0038A6  0F82               	addlw	low moveDisplay@menuItems
  6394   0038A8  6ED9               	movwf	fsr2l,c
  6395   0038AA  6ADA               	clrf	fsr2h,c
  6396   0038AC  50DF               	movf	indf2,w,c
  6397   0038AE  6E4C               	movwf	(??_moveDisplay+1)^0,c
  6398   0038B0  C04C  F03B         	movff	??_moveDisplay+1,?_sprintf+4
  6399   0038B4  503B               	movf	(?_sprintf+4)^0,w,c
  6400   0038B6  A4D8               	btfss	status,2,c
  6401   0038B8  0E10               	movlw	high __smallconst
  6402   0038BA  6E3C               	movwf	(?_sprintf+5)^0,c
  6403   0038BC  ECB3  F01F         	call	_sprintf	;wreg free
  6404   0038C0                     
  6405                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  6406   0038C0  0E60               	movlw	low moveDisplay@menuItem1
  6407   0038C2  6E02               	movwf	LCD_ShowString@textData^0,c
  6408   0038C4  6A03               	clrf	(LCD_ShowString@textData+1)^0,c
  6409   0038C6  0E01               	movlw	1
  6410   0038C8  EC9B  F01D         	call	_LCD_ShowString
  6411   0038CC                     
  6412                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  6413   0038CC  0E71               	movlw	low moveDisplay@menuItem2
  6414   0038CE  6E02               	movwf	LCD_ShowString@textData^0,c
  6415   0038D0  6A03               	clrf	(LCD_ShowString@textData+1)^0,c
  6416   0038D2  0E02               	movlw	2
  6417   0038D4  EC9B  F01D         	call	_LCD_ShowString
  6418   0038D8                     
  6419                           ;menu.c: 35:     return menuI;
  6420   0038D8  0100               	movlb	0	; () banked
  6421   0038DA  518A               	movf	moveDisplay@menuI& (0+255),w,b
  6422   0038DC                     
  6423                           ; BSR set to: 0
  6424   0038DC  0012               	return		;funcret
  6425   0038DE                     __end_of_moveDisplay:
  6426                           	callstack 0
  6427                           
  6428 ;; *************** function _sprintf *****************
  6429 ;; Defined at:
  6430 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  s               1   54[COMRAM] PTR unsigned char 
  6433 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  6434 ;;  fmt             1   55[COMRAM] PTR const unsigned char 
  6435 ;;		 -> STR_15(5), STR_14(6), 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  f              12   61[COMRAM] struct _IO_FILE
  6438 ;;  ret             2    0        int 
  6439 ;;  ap              1   60[COMRAM] PTR void [1]
  6440 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2   54[COMRAM] int 
  6443 ;; Registers used:
  6444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6454 ;;Total ram usage:       19 bytes
  6455 ;; Hardware stack levels used: 1
  6456 ;; Hardware stack levels required when called: 7
  6457 ;; This function calls:
  6458 ;;		_vfprintf
  6459 ;; This function is called by:
  6460 ;;		_moveDisplay
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text24
  6465   003F66                     __ptext24:
  6466                           	callstack 0
  6467   003F66                     _sprintf:
  6468                           	callstack 22
  6469   003F66  0E39               	movlw	low (?_sprintf+2)
  6470   003F68  6E3D               	movwf	sprintf@ap^0,c
  6471   003F6A  C037  F03E         	movff	sprintf@s,sprintf@f
  6472   003F6E  0E00               	movlw	0
  6473   003F70  6E42               	movwf	(sprintf@f+4)^0,c
  6474   003F72  0E00               	movlw	0
  6475   003F74  6E41               	movwf	(sprintf@f+3)^0,c
  6476   003F76  0E00               	movlw	0
  6477   003F78  6E49               	movwf	(sprintf@f+11)^0,c
  6478   003F7A  0E00               	movlw	0
  6479   003F7C  6E48               	movwf	(sprintf@f+10)^0,c
  6480   003F7E  0E3E               	movlw	low sprintf@f
  6481   003F80  6E32               	movwf	vfprintf@fp^0,c
  6482   003F82  6A33               	clrf	(vfprintf@fp+1)^0,c
  6483   003F84  C038  F034         	movff	sprintf@fmt,vfprintf@fmt
  6484   003F88  0E3D               	movlw	low sprintf@ap
  6485   003F8A  6E35               	movwf	vfprintf@ap^0,c
  6486   003F8C  EC56  F01F         	call	_vfprintf	;wreg free
  6487   003F90  5037               	movf	sprintf@s^0,w,c
  6488   003F92  2441               	addwf	(sprintf@f+3)^0,w,c
  6489   003F94  6ED9               	movwf	fsr2l,c
  6490   003F96  6ADA               	clrf	fsr2h,c
  6491   003F98  6ADF               	clrf	indf2,c
  6492   003F9A  0012               	return		;funcret
  6493   003F9C                     __end_of_sprintf:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function _vfprintf *****************
  6497 ;; Defined at:
  6498 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  6501 ;;		 -> NULL(0), sprintf@f(12), 
  6502 ;;  fmt             1   51[COMRAM] PTR const unsigned char 
  6503 ;;		 -> STR_15(5), STR_14(6), STR_5(5), 
  6504 ;;  ap              1   52[COMRAM] PTR PTR void 
  6505 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  cfmt            1   53[COMRAM] PTR unsigned char 
  6508 ;;		 -> STR_15(5), STR_14(6), STR_5(5), 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  2   49[COMRAM] int 
  6511 ;; Registers used:
  6512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;Total ram usage:        5 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; Hardware stack levels required when called: 6
  6525 ;; This function calls:
  6526 ;;		_vfpfcnvrt
  6527 ;; This function is called by:
  6528 ;;		_sprintf
  6529 ;;		_printf
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text25
  6534   003EAC                     __ptext25:
  6535                           	callstack 0
  6536   003EAC                     _vfprintf:
  6537                           	callstack 22
  6538   003EAC                     
  6539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6540   003EAC  C034  F036         	movff	vfprintf@fmt,vfprintf@cfmt
  6541                           
  6542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6543   003EB0  EF64  F01F         	goto	l3999
  6544   003EB4                     l3997:
  6545                           
  6546                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6547   003EB4  C032  F027         	movff	vfprintf@fp,vfpfcnvrt@fp
  6548   003EB8  C033  F028         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6549   003EBC  0E36               	movlw	low vfprintf@cfmt
  6550   003EBE  6E29               	movwf	vfpfcnvrt@fmt^0,c
  6551   003EC0  C035  F02A         	movff	vfprintf@ap,vfpfcnvrt@ap
  6552   003EC4  EC05  F013         	call	_vfpfcnvrt	;wreg free
  6553   003EC8                     l3999:
  6554                           
  6555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6556   003EC8  C036  FFF6         	movff	vfprintf@cfmt,tblptrl
  6557   003ECC                     	if	1	;There is more than 1 active tblptr byte
  6558   003ECC  0E10               	movlw	high __smallconst
  6559   003ECE  6EF7               	movwf	tblptrh,c
  6560   003ED0                     	endif
  6561   003ED0                     	if	0	;tblptru may be non-zero
  6562   003ED0                     	endif
  6563   003ED0                     	if	0	;tblptru may be non-zero
  6564   003ED0                     	endif
  6565   003ED0  0008               	tblrd		*
  6566   003ED2  50F5               	movf	tablat,w,c
  6567   003ED4  0900               	iorlw	0
  6568   003ED6  A4D8               	btfss	status,2,c
  6569   003ED8  EF70  F01F         	goto	u4701
  6570   003EDC  EF72  F01F         	goto	u4700
  6571   003EE0                     u4701:
  6572   003EE0  EF5A  F01F         	goto	l3997
  6573   003EE4                     u4700:
  6574   003EE4                     
  6575                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6576   003EE4  0E00               	movlw	0
  6577   003EE6  6E33               	movwf	(?_vfprintf+1)^0,c
  6578   003EE8  0E00               	movlw	0
  6579   003EEA  6E32               	movwf	?_vfprintf^0,c
  6580   003EEC  0012               	return		;funcret
  6581   003EEE                     __end_of_vfprintf:
  6582                           	callstack 0
  6583                           
  6584 ;; *************** function _vfpfcnvrt *****************
  6585 ;; Defined at:
  6586 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  6589 ;;		 -> NULL(0), sprintf@f(12), 
  6590 ;;  fmt             1   40[COMRAM] PTR PTR unsigned char 
  6591 ;;		 -> vfprintf@cfmt(1), 
  6592 ;;  ap              1   41[COMRAM] PTR PTR void 
  6593 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  convarg         4   43[COMRAM] struct .
  6596 ;;  done            1   48[COMRAM] _Bool 
  6597 ;;  cp              1   47[COMRAM] PTR unsigned char 
  6598 ;;		 -> STR_15(5), STR_14(6), STR_5(5), 
  6599 ;;  c               1    0        unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;Total ram usage:       11 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 5
  6616 ;; This function calls:
  6617 ;;		_dtoa
  6618 ;;		_fputc
  6619 ;;		_read_prec_or_width
  6620 ;;		_stoa
  6621 ;; This function is called by:
  6622 ;;		_vfprintf
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text26
  6627   00260A                     __ptext26:
  6628                           	callstack 0
  6629   00260A                     _vfpfcnvrt:
  6630                           	callstack 22
  6631   00260A                     
  6632                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6633   00260A  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6634   00260C  6ED9               	movwf	fsr2l,c
  6635   00260E  6ADA               	clrf	fsr2h,c
  6636   002610  CFDF FFF6          	movff	indf2,tblptrl
  6637   002614                     	if	1	;There is more than 1 active tblptr byte
  6638   002614  0E10               	movlw	high __smallconst
  6639   002616  6EF7               	movwf	tblptrh,c
  6640   002618                     	endif
  6641   002618                     	if	0	;tblptru may be non-zero
  6642   002618                     	endif
  6643   002618                     	if	0	;tblptru may be non-zero
  6644   002618                     	endif
  6645   002618  0008               	tblrd		*
  6646   00261A  50F5               	movf	tablat,w,c
  6647   00261C  0A25               	xorlw	37
  6648   00261E  A4D8               	btfss	status,2,c
  6649   002620  EF14  F013         	goto	u4601
  6650   002624  EF16  F013         	goto	u4600
  6651   002628                     u4601:
  6652   002628  EF1E  F014         	goto	l3989
  6653   00262C                     u4600:
  6654   00262C                     
  6655                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6656   00262C  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6657   00262E  6ED9               	movwf	fsr2l,c
  6658   002630  6ADA               	clrf	fsr2h,c
  6659   002632  2ADF               	incf	indf2,f,c
  6660   002634                     
  6661                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6662   002634  0E00               	movlw	0
  6663   002636  0100               	movlb	0	; () banked
  6664   002638  6FEA               	movwf	(_width+1)& (0+255),b
  6665   00263A  0E00               	movlw	0
  6666   00263C  6FE9               	movwf	_width& (0+255),b
  6667   00263E  C0E9  F0ED         	movff	_width,_flags
  6668   002642                     
  6669                           ; BSR set to: 0
  6670                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6671   002642  69EB               	setf	_prec& (0+255),b
  6672   002644  69EC               	setf	(_prec+1)& (0+255),b
  6673   002646                     
  6674                           ; BSR set to: 0
  6675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6676   002646  0E00               	movlw	0
  6677   002648  6E31               	movwf	vfpfcnvrt@done^0,c
  6678                           
  6679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6680   00264A  EF42  F013         	goto	l3939
  6681   00264E                     l3929:
  6682                           
  6683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  6684   00264E  0100               	movlb	0	; () banked
  6685   002650  81ED               	bsf	_flags& (0+255),0,b
  6686   002652                     
  6687                           ; BSR set to: 0
  6688                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  6689   002652  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6690   002654  6ED9               	movwf	fsr2l,c
  6691   002656  6ADA               	clrf	fsr2h,c
  6692   002658  2ADF               	incf	indf2,f,c
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  6695   00265A  EF42  F013         	goto	l3939
  6696   00265E                     l3933:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6699   00265E  0E01               	movlw	1
  6700   002660  6E31               	movwf	vfpfcnvrt@done^0,c
  6701                           
  6702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6703   002662  EF42  F013         	goto	l3939
  6704   002666                     l3937:
  6705   002666  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6706   002668  6ED9               	movwf	fsr2l,c
  6707   00266A  6ADA               	clrf	fsr2h,c
  6708   00266C  CFDF FFF6          	movff	indf2,tblptrl
  6709   002670                     	if	1	;There is more than 1 active tblptr byte
  6710   002670  0E10               	movlw	high __smallconst
  6711   002672  6EF7               	movwf	tblptrh,c
  6712   002674                     	endif
  6713   002674                     	if	0	;tblptru may be non-zero
  6714   002674                     	endif
  6715   002674                     	if	0	;tblptru may be non-zero
  6716   002674                     	endif
  6717   002674  0008               	tblrd		*
  6718   002676  50F5               	movf	tablat,w,c
  6719                           
  6720                           ; Switch size 1, requested type "simple"
  6721                           ; Number of cases is 1, Range of values is 45 to 45
  6722                           ; switch strategies available:
  6723                           ; Name         Instructions Cycles
  6724                           ; simple_byte            4     3 (average)
  6725                           ;	Chosen strategy is simple_byte
  6726   002678  0A2D               	xorlw	45	; case 45
  6727   00267A  B4D8               	btfsc	status,2,c
  6728   00267C  EF27  F013         	goto	l3929
  6729   002680  EF2F  F013         	goto	l3933
  6730   002684                     l3939:
  6731                           
  6732                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6733   002684  5031               	movf	vfpfcnvrt@done^0,w,c
  6734   002686  B4D8               	btfsc	status,2,c
  6735   002688  EF48  F013         	goto	u4611
  6736   00268C  EF4A  F013         	goto	u4610
  6737   002690                     u4611:
  6738   002690  EF33  F013         	goto	l3937
  6739   002694                     u4610:
  6740   002694                     
  6741                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6742   002694  C029  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6743   002698  C02A  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6744   00269C  EC4C  F01E         	call	_read_prec_or_width	;wreg free
  6745   0026A0  C007  F0E9         	movff	?_read_prec_or_width,_width
  6746   0026A4  C008  F0EA         	movff	?_read_prec_or_width+1,_width+1
  6747   0026A8                     
  6748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6749   0026A8  0100               	movlb	0	; () banked
  6750   0026AA  BFEA               	btfsc	(_width+1)& (0+255),7,b
  6751   0026AC  EF5C  F013         	goto	u4620
  6752   0026B0  EF5A  F013         	goto	u4621
  6753   0026B4                     u4621:
  6754   0026B4  EF61  F013         	goto	l3947
  6755   0026B8                     u4620:
  6756   0026B8                     
  6757                           ; BSR set to: 0
  6758                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6759   0026B8  81ED               	bsf	_flags& (0+255),0,b
  6760                           
  6761                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6762   0026BA  6DE9               	negf	_width& (0+255),b
  6763   0026BC  1FEA               	comf	(_width+1)& (0+255),f,b
  6764   0026BE  B0D8               	btfsc	status,0,c
  6765   0026C0  2BEA               	incf	(_width+1)& (0+255),f,b
  6766   0026C2                     l3947:
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6770   0026C2  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6771   0026C4  6ED9               	movwf	fsr2l,c
  6772   0026C6  6ADA               	clrf	fsr2h,c
  6773   0026C8  50DF               	movf	indf2,w,c
  6774   0026CA  6E30               	movwf	vfpfcnvrt@cp^0,c
  6775   0026CC                     
  6776                           ; BSR set to: 0
  6777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6778   0026CC  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6779   0026D0                     	if	1	;There is more than 1 active tblptr byte
  6780   0026D0  0E10               	movlw	high __smallconst
  6781   0026D2  6EF7               	movwf	tblptrh,c
  6782   0026D4                     	endif
  6783   0026D4                     	if	0	;tblptru may be non-zero
  6784   0026D4                     	endif
  6785   0026D4                     	if	0	;tblptru may be non-zero
  6786   0026D4                     	endif
  6787   0026D4  0008               	tblrd		*
  6788   0026D6  50F5               	movf	tablat,w,c
  6789   0026D8  0A64               	xorlw	100
  6790   0026DA  B4D8               	btfsc	status,2,c
  6791   0026DC  EF72  F013         	goto	u4631
  6792   0026E0  EF74  F013         	goto	u4630
  6793   0026E4                     u4631:
  6794   0026E4  EF82  F013         	goto	l3953
  6795   0026E8                     u4630:
  6796   0026E8                     
  6797                           ; BSR set to: 0
  6798   0026E8  C030  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6799   0026EC                     	if	1	;There is more than 1 active tblptr byte
  6800   0026EC  0E10               	movlw	high __smallconst
  6801   0026EE  6EF7               	movwf	tblptrh,c
  6802   0026F0                     	endif
  6803   0026F0                     	if	0	;tblptru may be non-zero
  6804   0026F0                     	endif
  6805   0026F0                     	if	0	;tblptru may be non-zero
  6806   0026F0                     	endif
  6807   0026F0  0008               	tblrd		*
  6808   0026F2  50F5               	movf	tablat,w,c
  6809   0026F4  0A69               	xorlw	105
  6810   0026F6  A4D8               	btfss	status,2,c
  6811   0026F8  EF80  F013         	goto	u4641
  6812   0026FC  EF82  F013         	goto	u4640
  6813   002700                     u4641:
  6814   002700  EF9F  F013         	goto	l3961
  6815   002704                     u4640:
  6816   002704                     l3953:
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6820   002704  502A               	movf	vfpfcnvrt@ap^0,w,c
  6821   002706  6ED9               	movwf	fsr2l,c
  6822   002708  6ADA               	clrf	fsr2h,c
  6823   00270A  0E02               	movlw	2
  6824   00270C  26DF               	addwf	indf2,f,c
  6825   00270E  5CDF               	subwf	indf2,w,c
  6826   002710  6ED9               	movwf	fsr2l,c
  6827   002712  6ADA               	clrf	fsr2h,c
  6828   002714  CFDE F02C          	movff	postinc2,vfpfcnvrt@convarg
  6829   002718  CFDE F02D          	movff	postinc2,vfpfcnvrt@convarg+1
  6830   00271C                     
  6831                           ; BSR set to: 0
  6832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6833   00271C  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6834   00271E  6ED9               	movwf	fsr2l,c
  6835   002720  6ADA               	clrf	fsr2h,c
  6836   002722  2830               	incf	vfpfcnvrt@cp^0,w,c
  6837   002724  6EDF               	movwf	indf2,c
  6838   002726                     
  6839                           ; BSR set to: 0
  6840                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6841   002726  C027  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  6842   00272A  C028  F01C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6843   00272E  C02C  F01D         	movff	vfpfcnvrt@convarg,dtoa@d
  6844   002732  C02D  F01E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6845   002736  ECCD  F01A         	call	_dtoa	;wreg free
  6846   00273A  EF31  F014         	goto	l1050
  6847   00273E                     l3961:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6851   00273E  0E00               	movlw	0
  6852   002740  6E31               	movwf	vfpfcnvrt@done^0,c
  6853   002742                     
  6854                           ; BSR set to: 0
  6855                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6856   002742  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6857   002744  6ED9               	movwf	fsr2l,c
  6858   002746  6ADA               	clrf	fsr2h,c
  6859   002748  CFDF FFF6          	movff	indf2,tblptrl
  6860   00274C                     	if	1	;There is more than 1 active tblptr byte
  6861   00274C  0E10               	movlw	high __smallconst
  6862   00274E  6EF7               	movwf	tblptrh,c
  6863   002750                     	endif
  6864   002750                     	if	0	;tblptru may be non-zero
  6865   002750                     	endif
  6866   002750                     	if	0	;tblptru may be non-zero
  6867   002750                     	endif
  6868   002750  0008               	tblrd		*
  6869   002752  50F5               	movf	tablat,w,c
  6870   002754  0A73               	xorlw	115
  6871   002756  A4D8               	btfss	status,2,c
  6872   002758  EFB0  F013         	goto	u4651
  6873   00275C  EFB2  F013         	goto	u4650
  6874   002760                     u4651:
  6875   002760  EFBA  F013         	goto	l3969
  6876   002764                     u4650:
  6877   002764                     
  6878                           ; BSR set to: 0
  6879                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6880   002764  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6881   002766  6ED9               	movwf	fsr2l,c
  6882   002768  6ADA               	clrf	fsr2h,c
  6883   00276A  2ADF               	incf	indf2,f,c
  6884   00276C                     l3967:
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6888   00276C  0E01               	movlw	1
  6889   00276E  6E31               	movwf	vfpfcnvrt@done^0,c
  6890                           
  6891                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  6892   002770  EFFC  F013         	goto	l3979
  6893   002774                     l3969:
  6894                           
  6895                           ; BSR set to: 0
  6896   002774  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6897   002776  6ED9               	movwf	fsr2l,c
  6898   002778  6ADA               	clrf	fsr2h,c
  6899   00277A  CFDF FFF6          	movff	indf2,tblptrl
  6900   00277E                     	if	1	;There is more than 1 active tblptr byte
  6901   00277E  0E10               	movlw	high __smallconst
  6902   002780  6EF7               	movwf	tblptrh,c
  6903   002782                     	endif
  6904   002782                     	if	0	;tblptru may be non-zero
  6905   002782                     	endif
  6906   002782                     	if	0	;tblptru may be non-zero
  6907   002782                     	endif
  6908   002782  0008               	tblrd		*
  6909   002784  50F5               	movf	tablat,w,c
  6910   002786  0A6C               	xorlw	108
  6911   002788  A4D8               	btfss	status,2,c
  6912   00278A  EFC9  F013         	goto	u4661
  6913   00278E  EFCB  F013         	goto	u4660
  6914   002792                     u4661:
  6915   002792  EFFC  F013         	goto	l3979
  6916   002796                     u4660:
  6917   002796                     
  6918                           ; BSR set to: 0
  6919   002796  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6920   002798  6ED9               	movwf	fsr2l,c
  6921   00279A  6ADA               	clrf	fsr2h,c
  6922   00279C  50DF               	movf	indf2,w,c
  6923   00279E  6E2B               	movwf	??_vfpfcnvrt^0,c
  6924   0027A0  0E01               	movlw	1
  6925   0027A2  262B               	addwf	??_vfpfcnvrt^0,f,c
  6926   0027A4  C02B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6927   0027A8                     	if	1	;There is more than 1 active tblptr byte
  6928   0027A8  0E10               	movlw	high __smallconst
  6929   0027AA  6EF7               	movwf	tblptrh,c
  6930   0027AC                     	endif
  6931   0027AC                     	if	0	;tblptru may be non-zero
  6932   0027AC                     	endif
  6933   0027AC                     	if	0	;tblptru may be non-zero
  6934   0027AC                     	endif
  6935   0027AC  0008               	tblrd		*
  6936   0027AE  50F5               	movf	tablat,w,c
  6937   0027B0  0A6C               	xorlw	108
  6938   0027B2  A4D8               	btfss	status,2,c
  6939   0027B4  EFDE  F013         	goto	u4671
  6940   0027B8  EFE0  F013         	goto	u4670
  6941   0027BC                     u4671:
  6942   0027BC  EFFC  F013         	goto	l3979
  6943   0027C0                     u4670:
  6944   0027C0                     
  6945                           ; BSR set to: 0
  6946   0027C0  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6947   0027C2  6ED9               	movwf	fsr2l,c
  6948   0027C4  6ADA               	clrf	fsr2h,c
  6949   0027C6  50DF               	movf	indf2,w,c
  6950   0027C8  6E2B               	movwf	??_vfpfcnvrt^0,c
  6951   0027CA  0E02               	movlw	2
  6952   0027CC  262B               	addwf	??_vfpfcnvrt^0,f,c
  6953   0027CE  C02B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6954   0027D2                     	if	1	;There is more than 1 active tblptr byte
  6955   0027D2  0E10               	movlw	high __smallconst
  6956   0027D4  6EF7               	movwf	tblptrh,c
  6957   0027D6                     	endif
  6958   0027D6                     	if	0	;tblptru may be non-zero
  6959   0027D6                     	endif
  6960   0027D6                     	if	0	;tblptru may be non-zero
  6961   0027D6                     	endif
  6962   0027D6  0008               	tblrd		*
  6963   0027D8  50F5               	movf	tablat,w,c
  6964   0027DA  0A73               	xorlw	115
  6965   0027DC  A4D8               	btfss	status,2,c
  6966   0027DE  EFF3  F013         	goto	u4681
  6967   0027E2  EFF5  F013         	goto	u4680
  6968   0027E6                     u4681:
  6969   0027E6  EFFC  F013         	goto	l3979
  6970   0027EA                     u4680:
  6971   0027EA                     
  6972                           ; BSR set to: 0
  6973                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  6974   0027EA  5029               	movf	vfpfcnvrt@fmt^0,w,c
  6975   0027EC  6ED9               	movwf	fsr2l,c
  6976   0027EE  6ADA               	clrf	fsr2h,c
  6977   0027F0  0E03               	movlw	3
  6978   0027F2  26DF               	addwf	indf2,f,c
  6979   0027F4  EFB6  F013         	goto	l3967
  6980   0027F8                     l3979:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  6984   0027F8  5031               	movf	vfpfcnvrt@done^0,w,c
  6985   0027FA  B4D8               	btfsc	status,2,c
  6986   0027FC  EF02  F014         	goto	u4691
  6987   002800  EF04  F014         	goto	u4690
  6988   002804                     u4691:
  6989   002804  EF18  F014         	goto	l3985
  6990   002808                     u4690:
  6991   002808                     
  6992                           ; BSR set to: 0
  6993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  6994   002808  C027  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  6995   00280C  C028  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6996   002810  502A               	movf	vfpfcnvrt@ap^0,w,c
  6997   002812  6ED9               	movwf	fsr2l,c
  6998   002814  6ADA               	clrf	fsr2h,c
  6999   002816  0E02               	movlw	2
  7000   002818  26DF               	addwf	indf2,f,c
  7001   00281A  5CDF               	subwf	indf2,w,c
  7002   00281C  6ED9               	movwf	fsr2l,c
  7003   00281E  6ADA               	clrf	fsr2h,c
  7004   002820  CFDE F00D          	movff	postinc2,stoa@s
  7005   002824  CFDE F00E          	movff	postinc2,stoa@s+1
  7006   002828  EC14  F01A         	call	_stoa	;wreg free
  7007   00282C  EF31  F014         	goto	l1050
  7008   002830                     l3985:
  7009                           
  7010                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7011   002830  5029               	movf	vfpfcnvrt@fmt^0,w,c
  7012   002832  6ED9               	movwf	fsr2l,c
  7013   002834  6ADA               	clrf	fsr2h,c
  7014   002836  2ADF               	incf	indf2,f,c
  7015   002838  EF31  F014         	goto	l1050
  7016   00283C                     l3989:
  7017                           
  7018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7019   00283C  5029               	movf	vfpfcnvrt@fmt^0,w,c
  7020   00283E  6ED9               	movwf	fsr2l,c
  7021   002840  6ADA               	clrf	fsr2h,c
  7022   002842  CFDF FFF6          	movff	indf2,tblptrl
  7023   002846                     	if	1	;There is more than 1 active tblptr byte
  7024   002846  0E10               	movlw	high __smallconst
  7025   002848  6EF7               	movwf	tblptrh,c
  7026   00284A                     	endif
  7027   00284A                     	if	0	;tblptru may be non-zero
  7028   00284A                     	endif
  7029   00284A                     	if	0	;tblptru may be non-zero
  7030   00284A                     	endif
  7031   00284A  0008               	tblrd		*
  7032   00284C  50F5               	movf	tablat,w,c
  7033   00284E  6E02               	movwf	fputc@c^0,c
  7034   002850  6A03               	clrf	(fputc@c+1)^0,c
  7035   002852  C027  F004         	movff	vfpfcnvrt@fp,fputc@fp
  7036   002856  C028  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7037   00285A  EC3E  F01D         	call	_fputc	;wreg free
  7038   00285E  EF18  F014         	goto	l3985
  7039   002862                     l1050:
  7040   002862  0012               	return		;funcret
  7041   002864                     __end_of_vfpfcnvrt:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function _stoa *****************
  7045 ;; Defined at:
  7046 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  7049 ;;		 -> NULL(0), sprintf@f(12), 
  7050 ;;  s               2   12[COMRAM] PTR unsigned char 
  7051 ;;		 -> ?_printf(2), ?_sprintf(2), STR_13(1), STR_12(6), 
  7052 ;;		 -> STR_11(5), STR_10(4), STR_9(4), STR_8(4), 
  7053 ;;		 -> STR_7(5), STR_6(5), 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  l               2   22[COMRAM] int 
  7056 ;;  cp              2   20[COMRAM] PTR unsigned char 
  7057 ;;		 -> ?_printf(2), STR_16(7), ?_sprintf(2), STR_13(1), 
  7058 ;;		 -> STR_12(6), STR_11(5), STR_10(4), STR_9(4), 
  7059 ;;		 -> STR_8(4), STR_7(5), STR_6(5), 
  7060 ;;  w               2   18[COMRAM] int 
  7061 ;;  p               2   16[COMRAM] int 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  1    wreg      void 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;Total ram usage:       14 bytes
  7076 ;; Hardware stack levels used: 1
  7077 ;; Hardware stack levels required when called: 2
  7078 ;; This function calls:
  7079 ;;		_fputc
  7080 ;; This function is called by:
  7081 ;;		_vfpfcnvrt
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text27
  7086   003428                     __ptext27:
  7087                           	callstack 0
  7088   003428                     _stoa:
  7089                           	callstack 24
  7090   003428                     
  7091                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  7092   003428  C00D  F015         	movff	stoa@s,stoa@cp
  7093   00342C  C00E  F016         	movff	stoa@s+1,stoa@cp+1
  7094                           
  7095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  7096   003430  5015               	movf	stoa@cp^0,w,c
  7097   003432  1016               	iorwf	(stoa@cp+1)^0,w,c
  7098   003434  A4D8               	btfss	status,2,c
  7099   003436  EF1F  F01A         	goto	u2941
  7100   00343A  EF21  F01A         	goto	u2940
  7101   00343E                     u2941:
  7102   00343E  EF27  F01A         	goto	l2903
  7103   003442                     u2940:
  7104   003442                     
  7105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  7106   003442  0E85               	movlw	low STR_16
  7107   003444  6E15               	movwf	stoa@cp^0,c
  7108   003446  5015               	movf	stoa@cp^0,w,c
  7109   003448  A4D8               	btfss	status,2,c
  7110   00344A  0E10               	movlw	high __smallconst
  7111   00344C  6E16               	movwf	(stoa@cp+1)^0,c
  7112   00344E                     l2903:
  7113                           
  7114                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  7115   00344E  0E00               	movlw	0
  7116   003450  6E18               	movwf	(stoa@l+1)^0,c
  7117   003452  0E00               	movlw	0
  7118   003454  6E17               	movwf	stoa@l^0,c
  7119   003456  EF2F  F01A         	goto	l2907
  7120   00345A                     l2905:
  7121   00345A  4A17               	infsnz	stoa@l^0,f,c
  7122   00345C  2A18               	incf	(stoa@l+1)^0,f,c
  7123   00345E                     l2907:
  7124   00345E  5017               	movf	stoa@l^0,w,c
  7125   003460  2415               	addwf	stoa@cp^0,w,c
  7126   003462  6E0F               	movwf	??_stoa^0,c
  7127   003464  5018               	movf	(stoa@l+1)^0,w,c
  7128   003466  2016               	addwfc	(stoa@cp+1)^0,w,c
  7129   003468  6E10               	movwf	(??_stoa+1)^0,c
  7130   00346A  C00F  FFF6         	movff	??_stoa,tblptrl
  7131   00346E  C010  FFF7         	movff	??_stoa+1,tblptrh
  7132   003472  0E00               	movlw	low (__smallconst shr (0+16))
  7133   003474  6EF8               	movwf	tblptru,c
  7134   003476  0E0F               	movlw	(high __ramtop+-1)
  7135   003478  64F7               	cpfsgt	tblptrh,c
  7136   00347A  D003               	bra	u2957
  7137   00347C  0008               	tblrd		*
  7138   00347E  50F5               	movf	tablat,w,c
  7139   003480  D005               	bra	u2950
  7140   003482                     u2957:
  7141   003482  CFF6 FFE1          	movff	tblptrl,fsr1l
  7142   003486  CFF7 FFE2          	movff	tblptrh,fsr1h
  7143   00348A  50E7               	movf	indf1,w,c
  7144   00348C                     u2950:
  7145   00348C  0900               	iorlw	0
  7146   00348E  A4D8               	btfss	status,2,c
  7147   003490  EF4C  F01A         	goto	u2961
  7148   003494  EF4E  F01A         	goto	u2960
  7149   003498                     u2961:
  7150   003498  EF2D  F01A         	goto	l2905
  7151   00349C                     u2960:
  7152   00349C                     
  7153                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  7154   00349C  C017  F011         	movff	stoa@l,stoa@p
  7155   0034A0  C018  F012         	movff	stoa@l+1,stoa@p+1
  7156                           
  7157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  7158   0034A4  C0E9  F013         	movff	_width,stoa@w
  7159   0034A8  C0EA  F014         	movff	_width+1,stoa@w+1
  7160                           
  7161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  7162   0034AC  0100               	movlb	0	; () banked
  7163   0034AE  B1ED               	btfsc	_flags& (0+255),0,b
  7164   0034B0  EF5C  F01A         	goto	u2971
  7165   0034B4  EF5E  F01A         	goto	u2970
  7166   0034B8                     u2971:
  7167   0034B8  EF9A  F01A         	goto	l2921
  7168   0034BC                     u2970:
  7169   0034BC  EF6C  F01A         	goto	l2915
  7170   0034C0                     l2911:
  7171                           
  7172                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  7173   0034C0  0E00               	movlw	0
  7174   0034C2  6E03               	movwf	(fputc@c+1)^0,c
  7175   0034C4  0E20               	movlw	32
  7176   0034C6  6E02               	movwf	fputc@c^0,c
  7177   0034C8  C00B  F004         	movff	stoa@fp,fputc@fp
  7178   0034CC  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  7179   0034D0  EC3E  F01D         	call	_fputc	;wreg free
  7180   0034D4                     
  7181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  7182   0034D4  4A17               	infsnz	stoa@l^0,f,c
  7183   0034D6  2A18               	incf	(stoa@l+1)^0,f,c
  7184   0034D8                     l2915:
  7185                           
  7186                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  7187   0034D8  5013               	movf	stoa@w^0,w,c
  7188   0034DA  5C17               	subwf	stoa@l^0,w,c
  7189   0034DC  5018               	movf	(stoa@l+1)^0,w,c
  7190   0034DE  0A80               	xorlw	128
  7191   0034E0  6E0F               	movwf	??_stoa^0,c
  7192   0034E2  5014               	movf	(stoa@w+1)^0,w,c
  7193   0034E4  0A80               	xorlw	128
  7194   0034E6  580F               	subwfb	??_stoa^0,w,c
  7195   0034E8  A0D8               	btfss	status,0,c
  7196   0034EA  EF79  F01A         	goto	u2981
  7197   0034EE  EF7B  F01A         	goto	u2980
  7198   0034F2                     u2981:
  7199   0034F2  EF60  F01A         	goto	l2911
  7200   0034F6                     u2980:
  7201   0034F6  EF9A  F01A         	goto	l2921
  7202   0034FA                     l2917:
  7203                           
  7204                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  7205   0034FA  C015  FFF6         	movff	stoa@cp,tblptrl
  7206   0034FE  C016  FFF7         	movff	stoa@cp+1,tblptrh
  7207   003502  0E00               	movlw	low (__smallconst shr (0+16))
  7208   003504  6EF8               	movwf	tblptru,c
  7209   003506  0E0F               	movlw	(high __ramtop+-1)
  7210   003508  64F7               	cpfsgt	tblptrh,c
  7211   00350A  D003               	bra	u2997
  7212   00350C  0008               	tblrd		*
  7213   00350E  50F5               	movf	tablat,w,c
  7214   003510  D005               	bra	u2990
  7215   003512                     u2997:
  7216   003512  CFF6 FFE1          	movff	tblptrl,fsr1l
  7217   003516  CFF7 FFE2          	movff	tblptrh,fsr1h
  7218   00351A  50E7               	movf	indf1,w,c
  7219   00351C                     u2990:
  7220   00351C  6E0F               	movwf	??_stoa^0,c
  7221   00351E  500F               	movf	??_stoa^0,w,c
  7222   003520  6E02               	movwf	fputc@c^0,c
  7223   003522  6A03               	clrf	(fputc@c+1)^0,c
  7224   003524  C00B  F004         	movff	stoa@fp,fputc@fp
  7225   003528  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  7226   00352C  EC3E  F01D         	call	_fputc	;wreg free
  7227   003530                     
  7228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  7229   003530  4A15               	infsnz	stoa@cp^0,f,c
  7230   003532  2A16               	incf	(stoa@cp+1)^0,f,c
  7231   003534                     l2921:
  7232                           
  7233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  7234   003534  0611               	decf	stoa@p^0,f,c
  7235   003536  A0D8               	btfss	status,0,c
  7236   003538  0612               	decf	(stoa@p+1)^0,f,c
  7237   00353A  2811               	incf	stoa@p^0,w,c
  7238   00353C  E106               	bnz	u3001
  7239   00353E  2812               	incf	(stoa@p+1)^0,w,c
  7240   003540  A4D8               	btfss	status,2,c
  7241   003542  EFA5  F01A         	goto	u3001
  7242   003546  EFA7  F01A         	goto	u3000
  7243   00354A                     u3001:
  7244   00354A  EF7D  F01A         	goto	l2917
  7245   00354E                     u3000:
  7246   00354E                     
  7247                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  7248   00354E  0100               	movlb	0	; () banked
  7249   003550  A1ED               	btfss	_flags& (0+255),0,b
  7250   003552  EFAD  F01A         	goto	u3011
  7251   003556  EFAF  F01A         	goto	u3010
  7252   00355A                     u3011:
  7253   00355A  EFCC  F01A         	goto	l1027
  7254   00355E                     u3010:
  7255   00355E  EFBD  F01A         	goto	l2929
  7256   003562                     l2925:
  7257                           
  7258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  7259   003562  0E00               	movlw	0
  7260   003564  6E03               	movwf	(fputc@c+1)^0,c
  7261   003566  0E20               	movlw	32
  7262   003568  6E02               	movwf	fputc@c^0,c
  7263   00356A  C00B  F004         	movff	stoa@fp,fputc@fp
  7264   00356E  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  7265   003572  EC3E  F01D         	call	_fputc	;wreg free
  7266   003576                     
  7267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  7268   003576  4A17               	infsnz	stoa@l^0,f,c
  7269   003578  2A18               	incf	(stoa@l+1)^0,f,c
  7270   00357A                     l2929:
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  7273   00357A  5013               	movf	stoa@w^0,w,c
  7274   00357C  5C17               	subwf	stoa@l^0,w,c
  7275   00357E  5018               	movf	(stoa@l+1)^0,w,c
  7276   003580  0A80               	xorlw	128
  7277   003582  6E0F               	movwf	??_stoa^0,c
  7278   003584  5014               	movf	(stoa@w+1)^0,w,c
  7279   003586  0A80               	xorlw	128
  7280   003588  580F               	subwfb	??_stoa^0,w,c
  7281   00358A  A0D8               	btfss	status,0,c
  7282   00358C  EFCA  F01A         	goto	u3021
  7283   003590  EFCC  F01A         	goto	u3020
  7284   003594                     u3021:
  7285   003594  EFB1  F01A         	goto	l2925
  7286   003598                     u3020:
  7287   003598                     l1027:
  7288   003598  0012               	return		;funcret
  7289   00359A                     __end_of_stoa:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _read_prec_or_width *****************
  7293 ;; Defined at:
  7294 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  7297 ;;		 -> vfprintf@cfmt(1), 
  7298 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  7299 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  c               1    8[COMRAM] unsigned char 
  7302 ;;  n               2    9[COMRAM] int 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  2    6[COMRAM] int 
  7305 ;; Registers used:
  7306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;Total ram usage:        5 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 1
  7319 ;; This function calls:
  7320 ;;		___wmul
  7321 ;; This function is called by:
  7322 ;;		_vfpfcnvrt
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text28
  7327   003C98                     __ptext28:
  7328                           	callstack 0
  7329   003C98                     _read_prec_or_width:
  7330                           	callstack 25
  7331   003C98                     
  7332                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7333   003C98  0E00               	movlw	0
  7334   003C9A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7335   003C9C  0E00               	movlw	0
  7336   003C9E  6E0A               	movwf	read_prec_or_width@n^0,c
  7337   003CA0                     
  7338                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7339   003CA0  5007               	movf	read_prec_or_width@fmt^0,w,c
  7340   003CA2  6ED9               	movwf	fsr2l,c
  7341   003CA4  6ADA               	clrf	fsr2h,c
  7342   003CA6  CFDF FFF6          	movff	indf2,tblptrl
  7343   003CAA                     	if	1	;There is more than 1 active tblptr byte
  7344   003CAA  0E10               	movlw	high __smallconst
  7345   003CAC  6EF7               	movwf	tblptrh,c
  7346   003CAE                     	endif
  7347   003CAE                     	if	0	;tblptru may be non-zero
  7348   003CAE                     	endif
  7349   003CAE                     	if	0	;tblptru may be non-zero
  7350   003CAE                     	endif
  7351   003CAE  0008               	tblrd		*
  7352   003CB0  50F5               	movf	tablat,w,c
  7353   003CB2  0A2A               	xorlw	42
  7354   003CB4  A4D8               	btfss	status,2,c
  7355   003CB6  EF5F  F01E         	goto	u3031
  7356   003CBA  EF61  F01E         	goto	u3030
  7357   003CBE                     u3031:
  7358   003CBE  EF87  F01E         	goto	l2943
  7359   003CC2                     u3030:
  7360   003CC2                     
  7361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7362   003CC2  5007               	movf	read_prec_or_width@fmt^0,w,c
  7363   003CC4  6ED9               	movwf	fsr2l,c
  7364   003CC6  6ADA               	clrf	fsr2h,c
  7365   003CC8  2ADF               	incf	indf2,f,c
  7366   003CCA                     
  7367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7368   003CCA  5008               	movf	read_prec_or_width@ap^0,w,c
  7369   003CCC  6ED9               	movwf	fsr2l,c
  7370   003CCE  6ADA               	clrf	fsr2h,c
  7371   003CD0  0E02               	movlw	2
  7372   003CD2  26DF               	addwf	indf2,f,c
  7373   003CD4  5CDF               	subwf	indf2,w,c
  7374   003CD6  6ED9               	movwf	fsr2l,c
  7375   003CD8  6ADA               	clrf	fsr2h,c
  7376   003CDA  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  7377   003CDE  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  7378                           
  7379                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7380   003CE2  EF9A  F01E         	goto	l1031
  7381   003CE6                     l2939:
  7382                           
  7383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7384   003CE6  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  7385   003CEA  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7386   003CEE  0E00               	movlw	0
  7387   003CF0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7388   003CF2  0E0A               	movlw	10
  7389   003CF4  6E03               	movwf	___wmul@multiplicand^0,c
  7390   003CF6  EC1D  F020         	call	___wmul	;wreg free
  7391   003CFA  5009               	movf	read_prec_or_width@c^0,w,c
  7392   003CFC  2401               	addwf	?___wmul^0,w,c
  7393   003CFE  6E0A               	movwf	read_prec_or_width@n^0,c
  7394   003D00  0E00               	movlw	0
  7395   003D02  2002               	addwfc	(?___wmul+1)^0,w,c
  7396   003D04  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7397   003D06                     
  7398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7399   003D06  5007               	movf	read_prec_or_width@fmt^0,w,c
  7400   003D08  6ED9               	movwf	fsr2l,c
  7401   003D0A  6ADA               	clrf	fsr2h,c
  7402   003D0C  2ADF               	incf	indf2,f,c
  7403   003D0E                     l2943:
  7404                           
  7405                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7406   003D0E  5007               	movf	read_prec_or_width@fmt^0,w,c
  7407   003D10  6ED9               	movwf	fsr2l,c
  7408   003D12  6ADA               	clrf	fsr2h,c
  7409   003D14  CFDF FFF6          	movff	indf2,tblptrl
  7410   003D18                     	if	1	;There is more than 1 active tblptr byte
  7411   003D18  0E10               	movlw	high __smallconst
  7412   003D1A  6EF7               	movwf	tblptrh,c
  7413   003D1C                     	endif
  7414   003D1C                     	if	0	;tblptru may be non-zero
  7415   003D1C                     	endif
  7416   003D1C                     	if	0	;tblptru may be non-zero
  7417   003D1C                     	endif
  7418   003D1C  0008               	tblrd		*
  7419   003D1E  50F5               	movf	tablat,w,c
  7420   003D20  0FD0               	addlw	208
  7421   003D22  6E09               	movwf	read_prec_or_width@c^0,c
  7422   003D24  0E09               	movlw	9
  7423   003D26  6409               	cpfsgt	read_prec_or_width@c^0,c
  7424   003D28  EF98  F01E         	goto	u3041
  7425   003D2C  EF9A  F01E         	goto	u3040
  7426   003D30                     u3041:
  7427   003D30  EF73  F01E         	goto	l2939
  7428   003D34                     u3040:
  7429   003D34                     l1031:
  7430                           
  7431                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7432   003D34  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  7433   003D38  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7434   003D3C  0012               	return		;funcret
  7435   003D3E                     __end_of_read_prec_or_width:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function ___wmul *****************
  7439 ;; Defined at:
  7440 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  multiplier      2    0[COMRAM] unsigned int 
  7443 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  product         2    4[COMRAM] unsigned int 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  2    0[COMRAM] unsigned int 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0, prodl, prodh
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7458 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7459 ;;Total ram usage:        6 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_read_prec_or_width
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text29
  7469   00403A                     __ptext29:
  7470                           	callstack 0
  7471   00403A                     ___wmul:
  7472                           	callstack 25
  7473   00403A  5001               	movf	___wmul@multiplier^0,w,c
  7474   00403C  0203               	mulwf	___wmul@multiplicand^0,c
  7475   00403E  CFF3 F005          	movff	prodl,___wmul@product
  7476   004042  CFF4 F006          	movff	prodh,___wmul@product+1
  7477   004046  5001               	movf	___wmul@multiplier^0,w,c
  7478   004048  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7479   00404A  50F3               	movf	243,w,c
  7480   00404C  2606               	addwf	(___wmul@product+1)^0,f,c
  7481   00404E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7482   004050  0203               	mulwf	___wmul@multiplicand^0,c
  7483   004052  50F3               	movf	243,w,c
  7484   004054  2606               	addwf	(___wmul@product+1)^0,f,c
  7485   004056  C005  F001         	movff	___wmul@product,?___wmul
  7486   00405A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7487   00405E  0012               	return		;funcret
  7488   004060                     __end_of___wmul:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _dtoa *****************
  7492 ;; Defined at:
  7493 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
  7496 ;;		 -> NULL(0), sprintf@f(12), 
  7497 ;;  d               2   28[COMRAM] int 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  i               2   36[COMRAM] int 
  7500 ;;  w               2   33[COMRAM] int 
  7501 ;;  s               1   35[COMRAM] unsigned char 
  7502 ;;  p               1   32[COMRAM] _Bool 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;Total ram usage:       12 bytes
  7517 ;; Hardware stack levels used: 1
  7518 ;; Hardware stack levels required when called: 4
  7519 ;; This function calls:
  7520 ;;		___awdiv
  7521 ;;		___awmod
  7522 ;;		_abs
  7523 ;;		_pad
  7524 ;; This function is called by:
  7525 ;;		_vfpfcnvrt
  7526 ;; This function uses a non-reentrant model
  7527 ;;
  7528                           
  7529                           	psect	text30
  7530   00359A                     __ptext30:
  7531                           	callstack 0
  7532   00359A                     _dtoa:
  7533                           	callstack 22
  7534   00359A                     
  7535                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  7536   00359A  0E01               	movlw	1
  7537   00359C  6E21               	movwf	dtoa@p^0,c
  7538   00359E                     
  7539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  7540   00359E  BE1E               	btfsc	(dtoa@d+1)^0,7,c
  7541   0035A0  EFD4  F01A         	goto	u4521
  7542   0035A4  EFD7  F01A         	goto	u4520
  7543   0035A8                     u4521:
  7544   0035A8  0E01               	movlw	1
  7545   0035AA  EFD8  F01A         	goto	u4530
  7546   0035AE                     u4520:
  7547   0035AE  0E00               	movlw	0
  7548   0035B0                     u4530:
  7549   0035B0  6E24               	movwf	dtoa@s^0,c
  7550   0035B2                     
  7551                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7552   0035B2  C0E9  F022         	movff	_width,dtoa@w
  7553   0035B6  C0EA  F023         	movff	_width+1,dtoa@w+1
  7554   0035BA                     
  7555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  7556   0035BA  5024               	movf	dtoa@s^0,w,c
  7557   0035BC  B4D8               	btfsc	status,2,c
  7558   0035BE  EFE3  F01A         	goto	u4541
  7559   0035C2  EFE5  F01A         	goto	u4540
  7560   0035C6                     u4541:
  7561   0035C6  EFFC  F01A         	goto	l997
  7562   0035CA                     u4540:
  7563   0035CA                     
  7564                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  7565   0035CA  0622               	decf	dtoa@w^0,f,c
  7566   0035CC  A0D8               	btfss	status,0,c
  7567   0035CE  0623               	decf	(dtoa@w+1)^0,f,c
  7568   0035D0                     
  7569                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7570   0035D0  5024               	movf	dtoa@s^0,w,c
  7571   0035D2  A4D8               	btfss	status,2,c
  7572   0035D4  EFEE  F01A         	goto	u4551
  7573   0035D8  EFF0  F01A         	goto	u4550
  7574   0035DC                     u4551:
  7575   0035DC  EFF6  F01A         	goto	l3887
  7576   0035E0                     u4550:
  7577   0035E0  0E00               	movlw	0
  7578   0035E2  6E20               	movwf	(_dtoa$2736+1)^0,c
  7579   0035E4  0E2B               	movlw	43
  7580   0035E6  6E1F               	movwf	_dtoa$2736^0,c
  7581   0035E8  EFFA  F01A         	goto	l3889
  7582   0035EC                     l3887:
  7583   0035EC  0E00               	movlw	0
  7584   0035EE  6E20               	movwf	(_dtoa$2736+1)^0,c
  7585   0035F0  0E2D               	movlw	45
  7586   0035F2  6E1F               	movwf	_dtoa$2736^0,c
  7587   0035F4                     l3889:
  7588   0035F4  C01F  F024         	movff	_dtoa$2736,dtoa@s
  7589   0035F8                     l997:
  7590                           
  7591                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7592   0035F8  0E00               	movlw	0
  7593   0035FA  6E26               	movwf	(dtoa@i+1)^0,c
  7594   0035FC  0E1F               	movlw	31
  7595   0035FE  6E25               	movwf	dtoa@i^0,c
  7596   003600                     
  7597                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7598   003600  0E00               	movlw	0
  7599   003602  0101               	movlb	1	; () banked
  7600   003604  6F1F               	movwf	(_dbuf+31)& (0+255),b
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7603   003606  EF34  F01B         	goto	l3903
  7604   00360A                     l3893:
  7605                           
  7606                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  7607   00360A  0625               	decf	dtoa@i^0,f,c
  7608   00360C  A0D8               	btfss	status,0,c
  7609   00360E  0626               	decf	(dtoa@i+1)^0,f,c
  7610   003610                     
  7611                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7612   003610  0E00               	movlw	low _dbuf
  7613   003612  2425               	addwf	dtoa@i^0,w,c
  7614   003614  6ED9               	movwf	fsr2l,c
  7615   003616  0E01               	movlw	high _dbuf
  7616   003618  2026               	addwfc	(dtoa@i+1)^0,w,c
  7617   00361A  6EDA               	movwf	fsr2h,c
  7618   00361C  C01D  F001         	movff	dtoa@d,___awmod@dividend
  7619   003620  C01E  F002         	movff	dtoa@d+1,___awmod@dividend+1
  7620   003624  0E00               	movlw	0
  7621   003626  6E04               	movwf	(___awmod@divisor+1)^0,c
  7622   003628  0E0A               	movlw	10
  7623   00362A  6E03               	movwf	___awmod@divisor^0,c
  7624   00362C  ECF4  F01D         	call	___awmod	;wreg free
  7625   003630  C001  F007         	movff	?___awmod,abs@a
  7626   003634  C002  F008         	movff	?___awmod+1,abs@a+1
  7627   003638  EC03  F020         	call	_abs	;wreg free
  7628   00363C  5007               	movf	?_abs^0,w,c
  7629   00363E  0F30               	addlw	48
  7630   003640  6EDF               	movwf	indf2,c
  7631   003642                     
  7632                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7633   003642  0E00               	movlw	0
  7634   003644  6E21               	movwf	dtoa@p^0,c
  7635   003646                     
  7636                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  7637   003646  0622               	decf	dtoa@w^0,f,c
  7638   003648  A0D8               	btfss	status,0,c
  7639   00364A  0623               	decf	(dtoa@w+1)^0,f,c
  7640   00364C                     
  7641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7642   00364C  C01D  F001         	movff	dtoa@d,___awdiv@dividend
  7643   003650  C01E  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  7644   003654  0E00               	movlw	0
  7645   003656  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7646   003658  0E0A               	movlw	10
  7647   00365A  6E03               	movwf	___awdiv@divisor^0,c
  7648   00365C  ECDC  F01C         	call	___awdiv	;wreg free
  7649   003660  C001  F01D         	movff	?___awdiv,dtoa@d
  7650   003664  C002  F01E         	movff	?___awdiv+1,dtoa@d+1
  7651   003668                     l3903:
  7652                           
  7653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7654   003668  BE26               	btfsc	(dtoa@i+1)^0,7,c
  7655   00366A  EF3F  F01B         	goto	u4561
  7656   00366E  5026               	movf	(dtoa@i+1)^0,w,c
  7657   003670  E108               	bnz	u4560
  7658   003672  0425               	decf	dtoa@i^0,w,c
  7659   003674  A0D8               	btfss	status,0,c
  7660   003676  EF3F  F01B         	goto	u4561
  7661   00367A  EF41  F01B         	goto	u4560
  7662   00367E                     u4561:
  7663   00367E  EF52  F01B         	goto	l3909
  7664   003682                     u4560:
  7665   003682  501D               	movf	dtoa@d^0,w,c
  7666   003684  101E               	iorwf	(dtoa@d+1)^0,w,c
  7667   003686  A4D8               	btfss	status,2,c
  7668   003688  EF48  F01B         	goto	u4571
  7669   00368C  EF4A  F01B         	goto	u4570
  7670   003690                     u4571:
  7671   003690  EF05  F01B         	goto	l3893
  7672   003694                     u4570:
  7673   003694  5021               	movf	dtoa@p^0,w,c
  7674   003696  A4D8               	btfss	status,2,c
  7675   003698  EF50  F01B         	goto	u4581
  7676   00369C  EF52  F01B         	goto	u4580
  7677   0036A0                     u4581:
  7678   0036A0  EF05  F01B         	goto	l3893
  7679   0036A4                     u4580:
  7680   0036A4                     l3909:
  7681                           
  7682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7683   0036A4  5024               	movf	dtoa@s^0,w,c
  7684   0036A6  B4D8               	btfsc	status,2,c
  7685   0036A8  EF58  F01B         	goto	u4591
  7686   0036AC  EF5A  F01B         	goto	u4590
  7687   0036B0                     u4591:
  7688   0036B0  EF65  F01B         	goto	l3915
  7689   0036B4                     u4590:
  7690   0036B4                     
  7691                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  7692   0036B4  0625               	decf	dtoa@i^0,f,c
  7693   0036B6  A0D8               	btfss	status,0,c
  7694   0036B8  0626               	decf	(dtoa@i+1)^0,f,c
  7695   0036BA                     
  7696                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7697   0036BA  0E00               	movlw	low _dbuf
  7698   0036BC  2425               	addwf	dtoa@i^0,w,c
  7699   0036BE  6ED9               	movwf	fsr2l,c
  7700   0036C0  0E01               	movlw	high _dbuf
  7701   0036C2  2026               	addwfc	(dtoa@i+1)^0,w,c
  7702   0036C4  6EDA               	movwf	fsr2h,c
  7703   0036C6  C024  FFDF         	movff	dtoa@s,indf2
  7704   0036CA                     l3915:
  7705                           
  7706                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7707   0036CA  C01B  F012         	movff	dtoa@fp,pad@fp
  7708   0036CE  C01C  F013         	movff	dtoa@fp+1,pad@fp+1
  7709   0036D2  0E00               	movlw	low _dbuf
  7710   0036D4  2425               	addwf	dtoa@i^0,w,c
  7711   0036D6  6E14               	movwf	pad@buf^0,c
  7712   0036D8  0E01               	movlw	high _dbuf
  7713   0036DA  2026               	addwfc	(dtoa@i+1)^0,w,c
  7714   0036DC  6E15               	movwf	(pad@buf+1)^0,c
  7715   0036DE  C022  F016         	movff	dtoa@w,pad@p
  7716   0036E2  C023  F017         	movff	dtoa@w+1,pad@p+1
  7717   0036E6  EC9F  F01E         	call	_pad	;wreg free
  7718   0036EA  0012               	return		;funcret
  7719   0036EC                     __end_of_dtoa:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function _pad *****************
  7723 ;; Defined at:
  7724 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  7727 ;;		 -> NULL(0), sprintf@f(12), 
  7728 ;;  buf             2   19[COMRAM] PTR unsigned char 
  7729 ;;		 -> dbuf(32), 
  7730 ;;  p               2   21[COMRAM] int 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  i               2   24[COMRAM] int 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7742 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;Total ram usage:        9 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 3
  7749 ;; This function calls:
  7750 ;;		_fputc
  7751 ;;		_fputs
  7752 ;; This function is called by:
  7753 ;;		_dtoa
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text31
  7758   003D3E                     __ptext31:
  7759                           	callstack 0
  7760   003D3E                     _pad:
  7761                           	callstack 22
  7762   003D3E                     
  7763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7764   003D3E  0100               	movlb	0	; () banked
  7765   003D40  A1ED               	btfss	_flags& (0+255),0,b
  7766   003D42  EFA5  F01E         	goto	u4481
  7767   003D46  EFA7  F01E         	goto	u4480
  7768   003D4A                     u4481:
  7769   003D4A  EFB1  F01E         	goto	l3861
  7770   003D4E                     u4480:
  7771   003D4E                     
  7772                           ; BSR set to: 0
  7773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7774   003D4E  C014  F00B         	movff	pad@buf,fputs@s
  7775   003D52  C015  F00C         	movff	pad@buf+1,fputs@s+1
  7776   003D56  C012  F00D         	movff	pad@fp,fputs@fp
  7777   003D5A  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  7778   003D5E  EC13  F01F         	call	_fputs	;wreg free
  7779   003D62                     l3861:
  7780                           
  7781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  7782   003D62  BE17               	btfsc	(pad@p+1)^0,7,c
  7783   003D64  EFB8  F01E         	goto	u4490
  7784   003D68  EFB6  F01E         	goto	u4491
  7785   003D6C                     u4491:
  7786   003D6C  EFBC  F01E         	goto	l989
  7787   003D70                     u4490:
  7788   003D70                     
  7789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7790   003D70  0E00               	movlw	0
  7791   003D72  6E17               	movwf	(pad@p+1)^0,c
  7792   003D74  0E00               	movlw	0
  7793   003D76  6E16               	movwf	pad@p^0,c
  7794   003D78                     l989:
  7795                           
  7796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7797   003D78  0E00               	movlw	0
  7798   003D7A  6E1A               	movwf	(pad@i+1)^0,c
  7799   003D7C  0E00               	movlw	0
  7800   003D7E  6E19               	movwf	pad@i^0,c
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7803   003D80  EFCE  F01E         	goto	l3869
  7804   003D84                     l3865:
  7805                           
  7806                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7807   003D84  0E00               	movlw	0
  7808   003D86  6E03               	movwf	(fputc@c+1)^0,c
  7809   003D88  0E20               	movlw	32
  7810   003D8A  6E02               	movwf	fputc@c^0,c
  7811   003D8C  C012  F004         	movff	pad@fp,fputc@fp
  7812   003D90  C013  F005         	movff	pad@fp+1,fputc@fp+1
  7813   003D94  EC3E  F01D         	call	_fputc	;wreg free
  7814   003D98                     
  7815                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7816   003D98  4A19               	infsnz	pad@i^0,f,c
  7817   003D9A  2A1A               	incf	(pad@i+1)^0,f,c
  7818   003D9C                     l3869:
  7819                           
  7820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7821   003D9C  5016               	movf	pad@p^0,w,c
  7822   003D9E  5C19               	subwf	pad@i^0,w,c
  7823   003DA0  501A               	movf	(pad@i+1)^0,w,c
  7824   003DA2  0A80               	xorlw	128
  7825   003DA4  6E18               	movwf	??_pad^0,c
  7826   003DA6  5017               	movf	(pad@p+1)^0,w,c
  7827   003DA8  0A80               	xorlw	128
  7828   003DAA  5818               	subwfb	??_pad^0,w,c
  7829   003DAC  A0D8               	btfss	status,0,c
  7830   003DAE  EFDB  F01E         	goto	u4501
  7831   003DB2  EFDD  F01E         	goto	u4500
  7832   003DB6                     u4501:
  7833   003DB6  EFC2  F01E         	goto	l3865
  7834   003DBA                     u4500:
  7835   003DBA                     
  7836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7837   003DBA  0100               	movlb	0	; () banked
  7838   003DBC  B1ED               	btfsc	_flags& (0+255),0,b
  7839   003DBE  EFE3  F01E         	goto	u4511
  7840   003DC2  EFE5  F01E         	goto	u4510
  7841   003DC6                     u4511:
  7842   003DC6  EFEF  F01E         	goto	l994
  7843   003DCA                     u4510:
  7844   003DCA                     
  7845                           ; BSR set to: 0
  7846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7847   003DCA  C014  F00B         	movff	pad@buf,fputs@s
  7848   003DCE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  7849   003DD2  C012  F00D         	movff	pad@fp,fputs@fp
  7850   003DD6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  7851   003DDA  EC13  F01F         	call	_fputs	;wreg free
  7852   003DDE                     l994:
  7853   003DDE  0012               	return		;funcret
  7854   003DE0                     __end_of_pad:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _fputs *****************
  7858 ;; Defined at:
  7859 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7862 ;;		 -> dbuf(32), 
  7863 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7864 ;;		 -> NULL(0), sprintf@f(12), 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  i               2   15[COMRAM] int 
  7867 ;;  c               1   14[COMRAM] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  2   10[COMRAM] int 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;Total ram usage:        7 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; Hardware stack levels required when called: 2
  7884 ;; This function calls:
  7885 ;;		_fputc
  7886 ;; This function is called by:
  7887 ;;		_pad
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	text32
  7892   003E26                     __ptext32:
  7893                           	callstack 0
  7894   003E26                     _fputs:
  7895                           	callstack 22
  7896   003E26  0E00               	movlw	0
  7897   003E28  6E11               	movwf	(fputs@i+1)^0,c
  7898   003E2A  0E00               	movlw	0
  7899   003E2C  6E10               	movwf	fputs@i^0,c
  7900   003E2E  EF24  F01F         	goto	l3855
  7901   003E32                     l3851:
  7902   003E32  C00F  F002         	movff	fputs@c,fputc@c
  7903   003E36  6A03               	clrf	(fputc@c+1)^0,c
  7904   003E38  C00D  F004         	movff	fputs@fp,fputc@fp
  7905   003E3C  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  7906   003E40  EC3E  F01D         	call	_fputc	;wreg free
  7907   003E44  4A10               	infsnz	fputs@i^0,f,c
  7908   003E46  2A11               	incf	(fputs@i+1)^0,f,c
  7909   003E48                     l3855:
  7910   003E48  5010               	movf	fputs@i^0,w,c
  7911   003E4A  240B               	addwf	fputs@s^0,w,c
  7912   003E4C  6ED9               	movwf	fsr2l,c
  7913   003E4E  5011               	movf	(fputs@i+1)^0,w,c
  7914   003E50  200C               	addwfc	(fputs@s+1)^0,w,c
  7915   003E52  6EDA               	movwf	fsr2h,c
  7916   003E54  50DF               	movf	indf2,w,c
  7917   003E56  6E0F               	movwf	fputs@c^0,c
  7918   003E58  500F               	movf	fputs@c^0,w,c
  7919   003E5A  A4D8               	btfss	status,2,c
  7920   003E5C  EF32  F01F         	goto	u4471
  7921   003E60  EF34  F01F         	goto	u4470
  7922   003E64                     u4471:
  7923   003E64  EF19  F01F         	goto	l3851
  7924   003E68                     u4470:
  7925   003E68  0012               	return		;funcret
  7926   003E6A                     __end_of_fputs:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _fputc *****************
  7930 ;; Defined at:
  7931 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  c               2    1[COMRAM] int 
  7934 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  7935 ;;		 -> NULL(0), sprintf@f(12), 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  2    1[COMRAM] int 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;Total ram usage:        9 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 1
  7954 ;; This function calls:
  7955 ;;		_putch
  7956 ;; This function is called by:
  7957 ;;		_pad
  7958 ;;		_stoa
  7959 ;;		_vfpfcnvrt
  7960 ;;		_fputs
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text33
  7965   003A7C                     __ptext33:
  7966                           	callstack 0
  7967   003A7C                     _fputc:
  7968                           	callstack 24
  7969   003A7C  5004               	movf	fputc@fp^0,w,c
  7970   003A7E  1005               	iorwf	(fputc@fp+1)^0,w,c
  7971   003A80  B4D8               	btfsc	status,2,c
  7972   003A82  EF45  F01D         	goto	u2251
  7973   003A86  EF47  F01D         	goto	u2250
  7974   003A8A                     u2251:
  7975   003A8A  EF50  F01D         	goto	l2527
  7976   003A8E                     u2250:
  7977   003A8E  5004               	movf	fputc@fp^0,w,c
  7978   003A90  1005               	iorwf	(fputc@fp+1)^0,w,c
  7979   003A92  A4D8               	btfss	status,2,c
  7980   003A94  EF4E  F01D         	goto	u2261
  7981   003A98  EF50  F01D         	goto	u2260
  7982   003A9C                     u2261:
  7983   003A9C  EF55  F01D         	goto	l2529
  7984   003AA0                     u2260:
  7985   003AA0                     l2527:
  7986   003AA0  5002               	movf	fputc@c^0,w,c
  7987   003AA2  EC60  F020         	call	_putch
  7988   003AA6  EF9A  F01D         	goto	l1079
  7989   003AAA                     l2529:
  7990   003AAA  EE20 F00A          	lfsr	2,10
  7991   003AAE  5004               	movf	fputc@fp^0,w,c
  7992   003AB0  26D9               	addwf	fsr2l,f,c
  7993   003AB2  5005               	movf	(fputc@fp+1)^0,w,c
  7994   003AB4  22DA               	addwfc	fsr2h,f,c
  7995   003AB6  50DE               	movf	postinc2,w,c
  7996   003AB8  10DE               	iorwf	postinc2,w,c
  7997   003ABA  B4D8               	btfsc	status,2,c
  7998   003ABC  EF62  F01D         	goto	u2271
  7999   003AC0  EF64  F01D         	goto	u2270
  8000   003AC4                     u2271:
  8001   003AC4  EF7F  F01D         	goto	l2533
  8002   003AC8                     u2270:
  8003   003AC8  EE20 F00A          	lfsr	2,10
  8004   003ACC  5004               	movf	fputc@fp^0,w,c
  8005   003ACE  26D9               	addwf	fsr2l,f,c
  8006   003AD0  5005               	movf	(fputc@fp+1)^0,w,c
  8007   003AD2  22DA               	addwfc	fsr2h,f,c
  8008   003AD4  EE10 F003          	lfsr	1,3
  8009   003AD8  5004               	movf	fputc@fp^0,w,c
  8010   003ADA  26E1               	addwf	fsr1l,f,c
  8011   003ADC  5005               	movf	(fputc@fp+1)^0,w,c
  8012   003ADE  22E2               	addwfc	fsr1h,f,c
  8013   003AE0  50DE               	movf	postinc2,w,c
  8014   003AE2  5CE6               	subwf	postinc1,w,c
  8015   003AE4  50E6               	movf	postinc1,w,c
  8016   003AE6  0A80               	xorlw	128
  8017   003AE8  6E0A               	movwf	(??_fputc+4)^0,c
  8018   003AEA  50DE               	movf	postinc2,w,c
  8019   003AEC  0A80               	xorlw	128
  8020   003AEE  580A               	subwfb	(??_fputc+4)^0,w,c
  8021   003AF0  B0D8               	btfsc	status,0,c
  8022   003AF2  EF7D  F01D         	goto	u2281
  8023   003AF6  EF7F  F01D         	goto	u2280
  8024   003AFA                     u2281:
  8025   003AFA  EF9A  F01D         	goto	l1079
  8026   003AFE                     u2280:
  8027   003AFE                     l2533:
  8028   003AFE  EE20 F003          	lfsr	2,3
  8029   003B02  5004               	movf	fputc@fp^0,w,c
  8030   003B04  26D9               	addwf	fsr2l,f,c
  8031   003B06  5005               	movf	(fputc@fp+1)^0,w,c
  8032   003B08  22DA               	addwfc	fsr2h,f,c
  8033   003B0A  50DF               	movf	indf2,w,c
  8034   003B0C  6E06               	movwf	??_fputc^0,c
  8035   003B0E  C004  FFD9         	movff	fputc@fp,fsr2l
  8036   003B12  C005  FFDA         	movff	fputc@fp+1,fsr2h
  8037   003B16  50DF               	movf	indf2,w,c
  8038   003B18  2406               	addwf	??_fputc^0,w,c
  8039   003B1A  6ED9               	movwf	fsr2l,c
  8040   003B1C  6ADA               	clrf	fsr2h,c
  8041   003B1E  C002  FFDF         	movff	fputc@c,indf2
  8042   003B22  EE20 F003          	lfsr	2,3
  8043   003B26  5004               	movf	fputc@fp^0,w,c
  8044   003B28  26D9               	addwf	fsr2l,f,c
  8045   003B2A  5005               	movf	(fputc@fp+1)^0,w,c
  8046   003B2C  22DA               	addwfc	fsr2h,f,c
  8047   003B2E  2ADE               	incf	postinc2,f,c
  8048   003B30  0E00               	movlw	0
  8049   003B32  22DD               	addwfc	postdec2,f,c
  8050   003B34                     l1079:
  8051   003B34  0012               	return		;funcret
  8052   003B36                     __end_of_fputc:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _putch *****************
  8056 ;; Defined at:
  8057 ;;		line 11 in file "putch.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  data            1    wreg     unsigned char 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  data            1    0[COMRAM] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;Total ram usage:        1 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_fputc
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text34
  8085   0040C0                     __ptext34:
  8086                           	callstack 0
  8087   0040C0                     _putch:
  8088                           	callstack 24
  8089                           
  8090                           ;incstack = 0
  8091                           ;putch@data stored from wreg
  8092   0040C0  6E01               	movwf	putch@data^0,c
  8093   0040C2                     l213:
  8094   0040C2  A89E               	btfss	3998,4,c	;volatile
  8095   0040C4  EF66  F020         	goto	u2241
  8096   0040C8  EF68  F020         	goto	u2240
  8097   0040CC                     u2241:
  8098   0040CC  EF61  F020         	goto	l213
  8099   0040D0                     u2240:
  8100   0040D0                     
  8101                           ;putch.c: 13:     TXREG1 = data;
  8102   0040D0  C001  FFAD         	movff	putch@data,4013	;volatile
  8103   0040D4  0012               	return		;funcret
  8104   0040D6                     __end_of_putch:
  8105                           	callstack 0
  8106                           
  8107 ;; *************** function _abs *****************
  8108 ;; Defined at:
  8109 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  a               2    6[COMRAM] int 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  2    6[COMRAM] int 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;Total ram usage:        4 bytes
  8128 ;; Hardware stack levels used: 1
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_dtoa
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text35
  8137   004006                     __ptext35:
  8138                           	callstack 0
  8139   004006                     _abs:
  8140                           	callstack 25
  8141   004006  BE08               	btfsc	(abs@a+1)^0,7,c
  8142   004008  EF08  F020         	goto	u2461
  8143   00400C  EF0A  F020         	goto	u2460
  8144   004010                     u2461:
  8145   004010  EF10  F020         	goto	l1064
  8146   004014                     u2460:
  8147   004014  C007  F007         	movff	abs@a,?_abs
  8148   004018  C008  F008         	movff	abs@a+1,?_abs+1
  8149   00401C  EF1C  F020         	goto	l1067
  8150   004020                     l1064:
  8151   004020  C007  F009         	movff	abs@a,??_abs
  8152   004024  C008  F00A         	movff	abs@a+1,??_abs+1
  8153   004028  1E09               	comf	??_abs^0,f,c
  8154   00402A  1E0A               	comf	(??_abs+1)^0,f,c
  8155   00402C  4A09               	infsnz	??_abs^0,f,c
  8156   00402E  2A0A               	incf	(??_abs+1)^0,f,c
  8157   004030  C009  F007         	movff	??_abs,?_abs
  8158   004034  C00A  F008         	movff	??_abs+1,?_abs+1
  8159   004038                     l1067:
  8160   004038  0012               	return		;funcret
  8161   00403A                     __end_of_abs:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function ___awmod *****************
  8165 ;; Defined at:
  8166 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  dividend        2    0[COMRAM] int 
  8169 ;;  divisor         2    2[COMRAM] int 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  sign            1    5[COMRAM] unsigned char 
  8172 ;;  counter         1    4[COMRAM] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2    0[COMRAM] int 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;Total ram usage:        6 bytes
  8187 ;; Hardware stack levels used: 1
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_dtoa
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text36
  8196   003BE8                     __ptext36:
  8197                           	callstack 0
  8198   003BE8                     ___awmod:
  8199                           	callstack 25
  8200   003BE8  0E00               	movlw	0
  8201   003BEA  6E06               	movwf	___awmod@sign^0,c
  8202   003BEC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8203   003BEE  EFFD  F01D         	goto	u2360
  8204   003BF2  EFFB  F01D         	goto	u2361
  8205   003BF6                     u2361:
  8206   003BF6  EF03  F01E         	goto	l2603
  8207   003BFA                     u2360:
  8208   003BFA  6C01               	negf	___awmod@dividend^0,c
  8209   003BFC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8210   003BFE  B0D8               	btfsc	status,0,c
  8211   003C00  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8212   003C02  0E01               	movlw	1
  8213   003C04  6E06               	movwf	___awmod@sign^0,c
  8214   003C06                     l2603:
  8215   003C06  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8216   003C08  EF0A  F01E         	goto	u2370
  8217   003C0C  EF08  F01E         	goto	u2371
  8218   003C10                     u2371:
  8219   003C10  EF0E  F01E         	goto	l2607
  8220   003C14                     u2370:
  8221   003C14  6C03               	negf	___awmod@divisor^0,c
  8222   003C16  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8223   003C18  B0D8               	btfsc	status,0,c
  8224   003C1A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8225   003C1C                     l2607:
  8226   003C1C  5003               	movf	___awmod@divisor^0,w,c
  8227   003C1E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8228   003C20  B4D8               	btfsc	status,2,c
  8229   003C22  EF15  F01E         	goto	u2381
  8230   003C26  EF17  F01E         	goto	u2380
  8231   003C2A                     u2381:
  8232   003C2A  EF3B  F01E         	goto	l2623
  8233   003C2E                     u2380:
  8234   003C2E  0E01               	movlw	1
  8235   003C30  6E05               	movwf	___awmod@counter^0,c
  8236   003C32  EF1F  F01E         	goto	l2613
  8237   003C36                     l2611:
  8238   003C36  90D8               	bcf	status,0,c
  8239   003C38  3603               	rlcf	___awmod@divisor^0,f,c
  8240   003C3A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8241   003C3C  2A05               	incf	___awmod@counter^0,f,c
  8242   003C3E                     l2613:
  8243   003C3E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8244   003C40  EF24  F01E         	goto	u2391
  8245   003C44  EF26  F01E         	goto	u2390
  8246   003C48                     u2391:
  8247   003C48  EF1B  F01E         	goto	l2611
  8248   003C4C                     u2390:
  8249   003C4C                     l2615:
  8250   003C4C  5003               	movf	___awmod@divisor^0,w,c
  8251   003C4E  5C01               	subwf	___awmod@dividend^0,w,c
  8252   003C50  5004               	movf	(___awmod@divisor+1)^0,w,c
  8253   003C52  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8254   003C54  A0D8               	btfss	status,0,c
  8255   003C56  EF2F  F01E         	goto	u2401
  8256   003C5A  EF31  F01E         	goto	u2400
  8257   003C5E                     u2401:
  8258   003C5E  EF35  F01E         	goto	l2619
  8259   003C62                     u2400:
  8260   003C62  5003               	movf	___awmod@divisor^0,w,c
  8261   003C64  5E01               	subwf	___awmod@dividend^0,f,c
  8262   003C66  5004               	movf	(___awmod@divisor+1)^0,w,c
  8263   003C68  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8264   003C6A                     l2619:
  8265   003C6A  90D8               	bcf	status,0,c
  8266   003C6C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8267   003C6E  3203               	rrcf	___awmod@divisor^0,f,c
  8268   003C70  2E05               	decfsz	___awmod@counter^0,f,c
  8269   003C72  EF26  F01E         	goto	l2615
  8270   003C76                     l2623:
  8271   003C76  5006               	movf	___awmod@sign^0,w,c
  8272   003C78  B4D8               	btfsc	status,2,c
  8273   003C7A  EF41  F01E         	goto	u2411
  8274   003C7E  EF43  F01E         	goto	u2410
  8275   003C82                     u2411:
  8276   003C82  EF47  F01E         	goto	l2627
  8277   003C86                     u2410:
  8278   003C86  6C01               	negf	___awmod@dividend^0,c
  8279   003C88  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8280   003C8A  B0D8               	btfsc	status,0,c
  8281   003C8C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8282   003C8E                     l2627:
  8283   003C8E  C001  F001         	movff	___awmod@dividend,?___awmod
  8284   003C92  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8285   003C96  0012               	return		;funcret
  8286   003C98                     __end_of___awmod:
  8287                           	callstack 0
  8288                           
  8289 ;; *************** function ___awdiv *****************
  8290 ;; Defined at:
  8291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  dividend        2    0[COMRAM] int 
  8294 ;;  divisor         2    2[COMRAM] int 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;  quotient        2    6[COMRAM] int 
  8297 ;;  sign            1    5[COMRAM] unsigned char 
  8298 ;;  counter         1    4[COMRAM] unsigned char 
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  2    0[COMRAM] int 
  8301 ;; Registers used:
  8302 ;;		wreg, status,2, status,0
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;Total ram usage:        8 bytes
  8313 ;; Hardware stack levels used: 1
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_dtoa
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text37
  8322   0039B8                     __ptext37:
  8323                           	callstack 0
  8324   0039B8                     ___awdiv:
  8325                           	callstack 25
  8326   0039B8  0E00               	movlw	0
  8327   0039BA  6E06               	movwf	___awdiv@sign^0,c
  8328   0039BC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8329   0039BE  EFE5  F01C         	goto	u2300
  8330   0039C2  EFE3  F01C         	goto	u2301
  8331   0039C6                     u2301:
  8332   0039C6  EFEB  F01C         	goto	l2559
  8333   0039CA                     u2300:
  8334   0039CA  6C03               	negf	___awdiv@divisor^0,c
  8335   0039CC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8336   0039CE  B0D8               	btfsc	status,0,c
  8337   0039D0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8338   0039D2  0E01               	movlw	1
  8339   0039D4  6E06               	movwf	___awdiv@sign^0,c
  8340   0039D6                     l2559:
  8341   0039D6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8342   0039D8  EFF2  F01C         	goto	u2310
  8343   0039DC  EFF0  F01C         	goto	u2311
  8344   0039E0                     u2311:
  8345   0039E0  EFF8  F01C         	goto	l2565
  8346   0039E4                     u2310:
  8347   0039E4  6C01               	negf	___awdiv@dividend^0,c
  8348   0039E6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8349   0039E8  B0D8               	btfsc	status,0,c
  8350   0039EA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8351   0039EC  0E01               	movlw	1
  8352   0039EE  1A06               	xorwf	___awdiv@sign^0,f,c
  8353   0039F0                     l2565:
  8354   0039F0  0E00               	movlw	0
  8355   0039F2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8356   0039F4  0E00               	movlw	0
  8357   0039F6  6E07               	movwf	___awdiv@quotient^0,c
  8358   0039F8  5003               	movf	___awdiv@divisor^0,w,c
  8359   0039FA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8360   0039FC  B4D8               	btfsc	status,2,c
  8361   0039FE  EF03  F01D         	goto	u2321
  8362   003A02  EF05  F01D         	goto	u2320
  8363   003A06                     u2321:
  8364   003A06  EF2D  F01D         	goto	l2587
  8365   003A0A                     u2320:
  8366   003A0A  0E01               	movlw	1
  8367   003A0C  6E05               	movwf	___awdiv@counter^0,c
  8368   003A0E  EF0D  F01D         	goto	l2573
  8369   003A12                     l2571:
  8370   003A12  90D8               	bcf	status,0,c
  8371   003A14  3603               	rlcf	___awdiv@divisor^0,f,c
  8372   003A16  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8373   003A18  2A05               	incf	___awdiv@counter^0,f,c
  8374   003A1A                     l2573:
  8375   003A1A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8376   003A1C  EF12  F01D         	goto	u2331
  8377   003A20  EF14  F01D         	goto	u2330
  8378   003A24                     u2331:
  8379   003A24  EF09  F01D         	goto	l2571
  8380   003A28                     u2330:
  8381   003A28                     l2575:
  8382   003A28  90D8               	bcf	status,0,c
  8383   003A2A  3607               	rlcf	___awdiv@quotient^0,f,c
  8384   003A2C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8385   003A2E  5003               	movf	___awdiv@divisor^0,w,c
  8386   003A30  5C01               	subwf	___awdiv@dividend^0,w,c
  8387   003A32  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8388   003A34  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8389   003A36  A0D8               	btfss	status,0,c
  8390   003A38  EF20  F01D         	goto	u2341
  8391   003A3C  EF22  F01D         	goto	u2340
  8392   003A40                     u2341:
  8393   003A40  EF27  F01D         	goto	l2583
  8394   003A44                     u2340:
  8395   003A44  5003               	movf	___awdiv@divisor^0,w,c
  8396   003A46  5E01               	subwf	___awdiv@dividend^0,f,c
  8397   003A48  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8398   003A4A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8399   003A4C  8007               	bsf	___awdiv@quotient^0,0,c
  8400   003A4E                     l2583:
  8401   003A4E  90D8               	bcf	status,0,c
  8402   003A50  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8403   003A52  3203               	rrcf	___awdiv@divisor^0,f,c
  8404   003A54  2E05               	decfsz	___awdiv@counter^0,f,c
  8405   003A56  EF14  F01D         	goto	l2575
  8406   003A5A                     l2587:
  8407   003A5A  5006               	movf	___awdiv@sign^0,w,c
  8408   003A5C  B4D8               	btfsc	status,2,c
  8409   003A5E  EF33  F01D         	goto	u2351
  8410   003A62  EF35  F01D         	goto	u2350
  8411   003A66                     u2351:
  8412   003A66  EF39  F01D         	goto	l2591
  8413   003A6A                     u2350:
  8414   003A6A  6C07               	negf	___awdiv@quotient^0,c
  8415   003A6C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8416   003A6E  B0D8               	btfsc	status,0,c
  8417   003A70  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8418   003A72                     l2591:
  8419   003A72  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8420   003A76  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8421   003A7A  0012               	return		;funcret
  8422   003A7C                     __end_of___awdiv:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function _LCD_ShowString *****************
  8426 ;; Defined at:
  8427 ;;		line 55 in file "lcd.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  lineNum         1    wreg     unsigned char 
  8430 ;;  textData        2    1[COMRAM] PTR unsigned char 
  8431 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_4(17), STR_3(17), 
  8432 ;;		 -> STR_2(17), STR_1(17), 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  lineNum         1    5[COMRAM] unsigned char 
  8435 ;;  i               1    6[COMRAM] unsigned char 
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  1    wreg      void 
  8438 ;; Registers used:
  8439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;Total ram usage:        6 bytes
  8450 ;; Hardware stack levels used: 1
  8451 ;; Hardware stack levels required when called: 1
  8452 ;; This function calls:
  8453 ;;		_LCD_Send
  8454 ;; This function is called by:
  8455 ;;		_main
  8456 ;;		_moveDisplay
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text38
  8461   003B36                     __ptext38:
  8462                           	callstack 0
  8463   003B36                     _LCD_ShowString:
  8464                           	callstack 28
  8465                           
  8466                           ;incstack = 0
  8467                           ;LCD_ShowString@lineNum stored from wreg
  8468   003B36  6E06               	movwf	LCD_ShowString@lineNum^0,c
  8469   003B38                     
  8470                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
  8471   003B38  806B               	bsf	107,0,c	;volatile
  8472   003B3A                     l99:
  8473   003B3A  B06B               	btfsc	107,0,c	;volatile
  8474   003B3C  EFA2  F01D         	goto	u3601
  8475   003B40  EFA4  F01D         	goto	u3600
  8476   003B44                     u3601:
  8477   003B44  EF9D  F01D         	goto	l99
  8478   003B48                     u3600:
  8479   003B48                     
  8480                           ;lcd.c: 62:     SSP2IF = 0;
  8481   003B48  9EA4               	bcf	4004,7,c	;volatile
  8482   003B4A                     
  8483                           ;lcd.c: 64:     LCD_Send(0x7c);
  8484   003B4A  0E7C               	movlw	124
  8485   003B4C  EC30  F020         	call	_LCD_Send
  8486                           
  8487                           ;lcd.c: 66:     LCD_Send(0x80);
  8488   003B50  0E80               	movlw	128
  8489   003B52  EC30  F020         	call	_LCD_Send
  8490   003B56                     
  8491                           ;lcd.c: 68:     if(lineNum == 1){
  8492   003B56  0406               	decf	LCD_ShowString@lineNum^0,w,c
  8493   003B58  A4D8               	btfss	status,2,c
  8494   003B5A  EFB1  F01D         	goto	u3611
  8495   003B5E  EFB3  F01D         	goto	u3610
  8496   003B62                     u3611:
  8497   003B62  EFB8  F01D         	goto	l3339
  8498   003B66                     u3610:
  8499   003B66                     
  8500                           ;lcd.c: 69:         LCD_Send(0x80);
  8501   003B66  0E80               	movlw	128
  8502   003B68  EC30  F020         	call	_LCD_Send
  8503                           
  8504                           ;lcd.c: 70:     }
  8505   003B6C  EFC4  F01D         	goto	l103
  8506   003B70                     l3339:
  8507   003B70  0E02               	movlw	2
  8508   003B72  1806               	xorwf	LCD_ShowString@lineNum^0,w,c
  8509   003B74  A4D8               	btfss	status,2,c
  8510   003B76  EFBF  F01D         	goto	u3621
  8511   003B7A  EFC1  F01D         	goto	u3620
  8512   003B7E                     u3621:
  8513   003B7E  EFC4  F01D         	goto	l103
  8514   003B82                     u3620:
  8515   003B82                     
  8516                           ;lcd.c: 72:         LCD_Send(0xC0);
  8517   003B82  0EC0               	movlw	192
  8518   003B84  EC30  F020         	call	_LCD_Send
  8519   003B88                     l103:
  8520                           
  8521                           ;lcd.c: 75:     LCD_Send(0x40);
  8522   003B88  0E40               	movlw	64
  8523   003B8A  EC30  F020         	call	_LCD_Send
  8524   003B8E                     
  8525                           ;lcd.c: 77:     for (i = 0; i<16; i++){
  8526   003B8E  0E00               	movlw	0
  8527   003B90  6E07               	movwf	LCD_ShowString@i^0,c
  8528   003B92                     l3349:
  8529                           
  8530                           ;lcd.c: 78:         LCD_Send(textData[i]);
  8531   003B92  5007               	movf	LCD_ShowString@i^0,w,c
  8532   003B94  2402               	addwf	LCD_ShowString@textData^0,w,c
  8533   003B96  6E04               	movwf	??_LCD_ShowString^0,c
  8534   003B98  0E00               	movlw	0
  8535   003B9A  2003               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  8536   003B9C  6E05               	movwf	(??_LCD_ShowString+1)^0,c
  8537   003B9E  C004  FFF6         	movff	??_LCD_ShowString,tblptrl
  8538   003BA2  C005  FFF7         	movff	??_LCD_ShowString+1,tblptrh
  8539   003BA6  0E00               	movlw	low (__smallconst shr (0+16))
  8540   003BA8  6EF8               	movwf	tblptru,c
  8541   003BAA  0E0F               	movlw	(high __ramtop+-1)
  8542   003BAC  64F7               	cpfsgt	tblptrh,c
  8543   003BAE  D003               	bra	u3637
  8544   003BB0  0008               	tblrd		*
  8545   003BB2  50F5               	movf	tablat,w,c
  8546   003BB4  D005               	bra	u3630
  8547   003BB6                     u3637:
  8548   003BB6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8549   003BBA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8550   003BBE  50E7               	movf	indf1,w,c
  8551   003BC0                     u3630:
  8552   003BC0  EC30  F020         	call	_LCD_Send
  8553   003BC4                     
  8554                           ;lcd.c: 79:     }
  8555   003BC4  2A07               	incf	LCD_ShowString@i^0,f,c
  8556   003BC6  0E0F               	movlw	15
  8557   003BC8  6407               	cpfsgt	LCD_ShowString@i^0,c
  8558   003BCA  EFE9  F01D         	goto	u3641
  8559   003BCE  EFEB  F01D         	goto	u3640
  8560   003BD2                     u3641:
  8561   003BD2  EFC9  F01D         	goto	l3349
  8562   003BD6                     u3640:
  8563   003BD6                     
  8564                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
  8565   003BD6  846B               	bsf	107,2,c	;volatile
  8566   003BD8                     l107:
  8567   003BD8  B46B               	btfsc	107,2,c	;volatile
  8568   003BDA  EFF1  F01D         	goto	u3651
  8569   003BDE  EFF3  F01D         	goto	u3650
  8570   003BE2                     u3651:
  8571   003BE2  EFEC  F01D         	goto	l107
  8572   003BE6                     u3650:
  8573   003BE6  0012               	return		;funcret
  8574   003BE8                     __end_of_LCD_ShowString:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function _LCD_Clear *****************
  8578 ;; Defined at:
  8579 ;;		line 94 in file "lcd.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;		None
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      void 
  8586 ;; Registers used:
  8587 ;;		wreg, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;Total ram usage:        0 bytes
  8598 ;; Hardware stack levels used: 1
  8599 ;; Hardware stack levels required when called: 1
  8600 ;; This function calls:
  8601 ;;		_LCD_Send
  8602 ;; This function is called by:
  8603 ;;		_moveDisplay
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text39
  8608   003F9C                     __ptext39:
  8609                           	callstack 0
  8610   003F9C                     _LCD_Clear:
  8611                           	callstack 28
  8612   003F9C                     
  8613                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
  8614   003F9C  806B               	bsf	107,0,c	;volatile
  8615   003F9E                     l122:
  8616   003F9E  B06B               	btfsc	107,0,c	;volatile
  8617   003FA0  EFD4  F01F         	goto	u3661
  8618   003FA4  EFD6  F01F         	goto	u3660
  8619   003FA8                     u3661:
  8620   003FA8  EFCF  F01F         	goto	l122
  8621   003FAC                     u3660:
  8622   003FAC                     
  8623                           ;lcd.c: 97:     SSP2IF = 0;
  8624   003FAC  9EA4               	bcf	4004,7,c	;volatile
  8625   003FAE                     
  8626                           ;lcd.c: 99:     LCD_Send(0x7C);
  8627   003FAE  0E7C               	movlw	124
  8628   003FB0  EC30  F020         	call	_LCD_Send
  8629                           
  8630                           ;lcd.c: 100:     LCD_Send(0x80);
  8631   003FB4  0E80               	movlw	128
  8632   003FB6  EC30  F020         	call	_LCD_Send
  8633                           
  8634                           ;lcd.c: 101:     LCD_Send(0x01);
  8635   003FBA  0E01               	movlw	1
  8636   003FBC  EC30  F020         	call	_LCD_Send
  8637   003FC0                     
  8638                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
  8639   003FC0  846B               	bsf	107,2,c	;volatile
  8640   003FC2                     l125:
  8641   003FC2  B46B               	btfsc	107,2,c	;volatile
  8642   003FC4  EFE6  F01F         	goto	u3671
  8643   003FC8  EFE8  F01F         	goto	u3670
  8644   003FCC                     u3671:
  8645   003FCC  EFE1  F01F         	goto	l125
  8646   003FD0                     u3670:
  8647   003FD0  0012               	return		;funcret
  8648   003FD2                     __end_of_LCD_Clear:
  8649                           	callstack 0
  8650                           
  8651 ;; *************** function _LCD_Init *****************
  8652 ;; Defined at:
  8653 ;;		line 3 in file "lcd.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;		None
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1    wreg      void 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, cstack
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;Total ram usage:        1 bytes
  8672 ;; Hardware stack levels used: 1
  8673 ;; Hardware stack levels required when called: 1
  8674 ;; This function calls:
  8675 ;;		_LCD_Send
  8676 ;; This function is called by:
  8677 ;;		_main
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text40
  8682   0038DE                     __ptext40:
  8683                           	callstack 0
  8684   0038DE                     _LCD_Init:
  8685                           	callstack 29
  8686   0038DE                     
  8687                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
  8688   0038DE  010F               	movlb	15	; () banked
  8689   0038E0  913B               	bcf	59,0,b	;volatile
  8690                           
  8691                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
  8692   0038E2  933B               	bcf	59,1,b	;volatile
  8693                           
  8694                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
  8695   0038E4  8095               	bsf	149,0,c	;volatile
  8696                           
  8697                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
  8698   0038E6  8295               	bsf	149,1,c	;volatile
  8699                           
  8700                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
  8701   0038E8  9092               	bcf	146,0,c	;volatile
  8702                           
  8703                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
  8704   0038EA  8089               	bsf	137,0,c	;volatile
  8705   0038EC                     
  8706                           ; BSR set to: 15
  8707                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
  8708   0038EC  506C               	movf	108,w,c	;volatile
  8709   0038EE  0BF0               	andlw	-16
  8710   0038F0  0908               	iorlw	8
  8711   0038F2  6E6C               	movwf	108,c	;volatile
  8712                           
  8713                           ;lcd.c: 15:     SSP2ADD = 19;
  8714   0038F4  0E13               	movlw	19
  8715   0038F6  6E6E               	movwf	110,c	;volatile
  8716   0038F8                     
  8717                           ; BSR set to: 15
  8718                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
  8719   0038F8  8A6C               	bsf	108,5,c	;volatile
  8720   0038FA                     
  8721                           ; BSR set to: 15
  8722                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8723   0038FA  0E34               	movlw	52
  8724   0038FC  6E02               	movwf	??_LCD_Init^0,c
  8725   0038FE  0EF2               	movlw	242
  8726   003900                     u4997:
  8727   003900  2EE8               	decfsz	wreg,f,c
  8728   003902  D7FE               	bra	u4997
  8729   003904  2E02               	decfsz	??_LCD_Init^0,f,c
  8730   003906  D7FC               	bra	u4997
  8731   003908                     
  8732                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
  8733   003908  806B               	bsf	107,0,c	;volatile
  8734   00390A                     l90:
  8735   00390A  B06B               	btfsc	107,0,c	;volatile
  8736   00390C  EF8A  F01C         	goto	u4121
  8737   003910  EF8C  F01C         	goto	u4120
  8738   003914                     u4121:
  8739   003914  EF85  F01C         	goto	l90
  8740   003918                     u4120:
  8741   003918                     
  8742                           ;lcd.c: 22:     SSP2IF = 0;
  8743   003918  9EA4               	bcf	4004,7,c	;volatile
  8744   00391A                     
  8745                           ;lcd.c: 27:     LCD_Send(0x7C);
  8746   00391A  0E7C               	movlw	124
  8747   00391C  EC30  F020         	call	_LCD_Send
  8748                           
  8749                           ;lcd.c: 28:     LCD_Send(0x80);
  8750   003920  0E80               	movlw	128
  8751   003922  EC30  F020         	call	_LCD_Send
  8752                           
  8753                           ;lcd.c: 29:     LCD_Send(0x38);
  8754   003926  0E38               	movlw	56
  8755   003928  EC30  F020         	call	_LCD_Send
  8756                           
  8757                           ;lcd.c: 30:     LCD_Send(0x80);
  8758   00392C  0E80               	movlw	128
  8759   00392E  EC30  F020         	call	_LCD_Send
  8760                           
  8761                           ;lcd.c: 31:     LCD_Send(0x39);
  8762   003932  0E39               	movlw	57
  8763   003934  EC30  F020         	call	_LCD_Send
  8764                           
  8765                           ;lcd.c: 32:     LCD_Send(0x80);
  8766   003938  0E80               	movlw	128
  8767   00393A  EC30  F020         	call	_LCD_Send
  8768                           
  8769                           ;lcd.c: 33:     LCD_Send(0x17);
  8770   00393E  0E17               	movlw	23
  8771   003940  EC30  F020         	call	_LCD_Send
  8772                           
  8773                           ;lcd.c: 34:     LCD_Send(0x80);
  8774   003944  0E80               	movlw	128
  8775   003946  EC30  F020         	call	_LCD_Send
  8776                           
  8777                           ;lcd.c: 35:     LCD_Send(0x7A);
  8778   00394A  0E7A               	movlw	122
  8779   00394C  EC30  F020         	call	_LCD_Send
  8780                           
  8781                           ;lcd.c: 36:     LCD_Send(0x80);
  8782   003950  0E80               	movlw	128
  8783   003952  EC30  F020         	call	_LCD_Send
  8784                           
  8785                           ;lcd.c: 37:     LCD_Send(0x5E);
  8786   003956  0E5E               	movlw	94
  8787   003958  EC30  F020         	call	_LCD_Send
  8788                           
  8789                           ;lcd.c: 38:     LCD_Send(0x80);
  8790   00395C  0E80               	movlw	128
  8791   00395E  EC30  F020         	call	_LCD_Send
  8792                           
  8793                           ;lcd.c: 39:     LCD_Send(0x6B);
  8794   003962  0E6B               	movlw	107
  8795   003964  EC30  F020         	call	_LCD_Send
  8796                           
  8797                           ;lcd.c: 40:     LCD_Send(0x80);
  8798   003968  0E80               	movlw	128
  8799   00396A  EC30  F020         	call	_LCD_Send
  8800                           
  8801                           ;lcd.c: 41:     LCD_Send(0x0C);
  8802   00396E  0E0C               	movlw	12
  8803   003970  EC30  F020         	call	_LCD_Send
  8804                           
  8805                           ;lcd.c: 42:     LCD_Send(0x80);
  8806   003974  0E80               	movlw	128
  8807   003976  EC30  F020         	call	_LCD_Send
  8808                           
  8809                           ;lcd.c: 43:     LCD_Send(0x01);
  8810   00397A  0E01               	movlw	1
  8811   00397C  EC30  F020         	call	_LCD_Send
  8812                           
  8813                           ;lcd.c: 44:     LCD_Send(0x80);
  8814   003980  0E80               	movlw	128
  8815   003982  EC30  F020         	call	_LCD_Send
  8816                           
  8817                           ;lcd.c: 45:     LCD_Send(0x06);
  8818   003986  0E06               	movlw	6
  8819   003988  EC30  F020         	call	_LCD_Send
  8820                           
  8821                           ;lcd.c: 46:     LCD_Send(0x80);
  8822   00398C  0E80               	movlw	128
  8823   00398E  EC30  F020         	call	_LCD_Send
  8824                           
  8825                           ;lcd.c: 47:     LCD_Send(0x02);
  8826   003992  0E02               	movlw	2
  8827   003994  EC30  F020         	call	_LCD_Send
  8828   003998                     
  8829                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
  8830   003998  846B               	bsf	107,2,c	;volatile
  8831   00399A                     l93:
  8832   00399A  B46B               	btfsc	107,2,c	;volatile
  8833   00399C  EFD2  F01C         	goto	u4131
  8834   0039A0  EFD4  F01C         	goto	u4130
  8835   0039A4                     u4131:
  8836   0039A4  EFCD  F01C         	goto	l93
  8837   0039A8                     u4130:
  8838   0039A8                     
  8839                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8840   0039A8  0E34               	movlw	52
  8841   0039AA  6E02               	movwf	??_LCD_Init^0,c
  8842   0039AC  0EF2               	movlw	242
  8843   0039AE                     u5007:
  8844   0039AE  2EE8               	decfsz	wreg,f,c
  8845   0039B0  D7FE               	bra	u5007
  8846   0039B2  2E02               	decfsz	??_LCD_Init^0,f,c
  8847   0039B4  D7FC               	bra	u5007
  8848   0039B6  0012               	return		;funcret
  8849   0039B8                     __end_of_LCD_Init:
  8850                           	callstack 0
  8851                           
  8852 ;; *************** function _LCD_Send *****************
  8853 ;; Defined at:
  8854 ;;		line 85 in file "lcd.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  data            1    wreg     unsigned char 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  data            1    0[COMRAM] unsigned char 
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		wreg
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;Total ram usage:        1 bytes
  8873 ;; Hardware stack levels used: 1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_LCD_Init
  8878 ;;		_LCD_ShowString
  8879 ;;		_LCD_Clear
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text41
  8884   004060                     __ptext41:
  8885                           	callstack 0
  8886   004060                     _LCD_Send:
  8887                           	callstack 28
  8888                           
  8889                           ;incstack = 0
  8890                           ;LCD_Send@data stored from wreg
  8891   004060  6E01               	movwf	LCD_Send@data^0,c
  8892   004062                     
  8893                           ;lcd.c: 87:     SSP2BUF = data;
  8894   004062  C001  FF6F         	movff	LCD_Send@data,3951	;volatile
  8895   004066                     l113:
  8896   004066  B06D               	btfsc	109,0,c	;volatile
  8897   004068  EF38  F020         	goto	u3521
  8898   00406C  EF3A  F020         	goto	u3520
  8899   004070                     u3521:
  8900   004070  EF33  F020         	goto	l113
  8901   004074                     u3520:
  8902   004074                     l116:
  8903   004074  AEA4               	btfss	4004,7,c	;volatile
  8904   004076  EF3F  F020         	goto	u3531
  8905   00407A  EF41  F020         	goto	u3530
  8906   00407E                     u3531:
  8907   00407E  EF3A  F020         	goto	l116
  8908   004082                     u3530:
  8909   004082                     
  8910                           ;lcd.c: 90:     SSP2IF = 0;
  8911   004082  9EA4               	bcf	4004,7,c	;volatile
  8912   004084  0012               	return		;funcret
  8913   004086                     __end_of_LCD_Send:
  8914                           	callstack 0
  8915                           
  8916                           	psect	rparam
  8917   000000                     
  8918                           	psect	config
  8919                           
  8920                           ; Padding undefined space
  8921   300000                     	org	3145728
  8922   300000  FF                 	db	255
  8923                           
  8924                           ;Config register CONFIG1H @ 0x300001
  8925                           ;	Oscillator Selection bits
  8926                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  8927                           ;	4X PLL Enable
  8928                           ;	PLLCFG = ON, Oscillator multiplied by 4
  8929                           ;	Primary clock enable bit
  8930                           ;	PRICLKEN = 0x1, unprogrammed default
  8931                           ;	Fail-Safe Clock Monitor Enable bit
  8932                           ;	FCMEN = 0x0, unprogrammed default
  8933                           ;	Internal/External Oscillator Switchover bit
  8934                           ;	IESO = 0x0, unprogrammed default
  8935   300001                     	org	3145729
  8936   300001  33                 	db	51
  8937                           
  8938                           ;Config register CONFIG2L @ 0x300002
  8939                           ;	unspecified, using default values
  8940                           ;	Power-up Timer Enable bit
  8941                           ;	PWRTEN = 0x1, unprogrammed default
  8942                           ;	Brown-out Reset Enable bits
  8943                           ;	BOREN = 0x3, unprogrammed default
  8944                           ;	Brown Out Reset Voltage bits
  8945                           ;	BORV = 0x3, unprogrammed default
  8946   300002                     	org	3145730
  8947   300002  1F                 	db	31
  8948                           
  8949                           ;Config register CONFIG2H @ 0x300003
  8950                           ;	Watchdog Timer Enable bits
  8951                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8952                           ;	Watchdog Timer Postscale Select bits
  8953                           ;	WDTPS = 0xF, unprogrammed default
  8954   300003                     	org	3145731
  8955   300003  3C                 	db	60
  8956                           tosu	equ	0xFFF
  8957                           tosh	equ	0xFFE
  8958                           tosl	equ	0xFFD
  8959                           stkptr	equ	0xFFC
  8960                           pclatu	equ	0xFFB
  8961                           pclath	equ	0xFFA
  8962                           pcl	equ	0xFF9
  8963                           tblptru	equ	0xFF8
  8964                           tblptrh	equ	0xFF7
  8965                           tblptrl	equ	0xFF6
  8966                           tablat	equ	0xFF5
  8967                           prodh	equ	0xFF4
  8968                           prodl	equ	0xFF3
  8969                           indf0	equ	0xFEF
  8970                           postinc0	equ	0xFEE
  8971                           postdec0	equ	0xFED
  8972                           preinc0	equ	0xFEC
  8973                           plusw0	equ	0xFEB
  8974                           fsr0h	equ	0xFEA
  8975                           fsr0l	equ	0xFE9
  8976                           wreg	equ	0xFE8
  8977                           indf1	equ	0xFE7
  8978                           postinc1	equ	0xFE6
  8979                           postdec1	equ	0xFE5
  8980                           preinc1	equ	0xFE4
  8981                           plusw1	equ	0xFE3
  8982                           fsr1h	equ	0xFE2
  8983                           fsr1l	equ	0xFE1
  8984                           bsr	equ	0xFE0
  8985                           indf2	equ	0xFDF
  8986                           postinc2	equ	0xFDE
  8987                           postdec2	equ	0xFDD
  8988                           preinc2	equ	0xFDC
  8989                           plusw2	equ	0xFDB
  8990                           fsr2h	equ	0xFDA
  8991                           fsr2l	equ	0xFD9
  8992                           status	equ	0xFD8

Data Sizes:
    Strings     119
    Constant    64
    Data        32
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     97     142
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), STR_1(CODE[17]), STR_2(CODE[17]), 
		 -> STR_3(CODE[17]), STR_4(CODE[17]), 

    moveDisplay$3123	PTR unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[5]), STR_12(CODE[6]), STR_13(CODE[1]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    moveDisplay@F6950	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[5]), STR_12(CODE[6]), STR_13(CODE[1]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_11(CODE[5]), STR_12(CODE[6]), STR_13(CODE[1]), 
		 -> STR_6(CODE[5]), STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6963	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S2657$buffer	PTR unsigned char  size(2) Largest target is 0

    S2657$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[4]), STR_11(CODE[5]), 
		 -> STR_12(CODE[6]), STR_13(CODE[1]), STR_16(CODE[7]), STR_6(CODE[5]), 
		 -> STR_7(CODE[5]), STR_8(CODE[4]), STR_9(CODE[4]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[4]), STR_11(CODE[5]), 
		 -> STR_12(CODE[6]), STR_13(CODE[1]), STR_6(CODE[5]), STR_7(CODE[5]), 
		 -> STR_8(CODE[4]), STR_9(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), STR_5(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), STR_5(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_14(CODE[6]), STR_15(CODE[5]), STR_5(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_runDAC
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf
    ___cosdf->___fladd
    ___flmul->___xxtofl
    ___fladd->___fldiv
    _printf->_vfprintf
    ___fldiv->___flmul
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _main in BANK0

    _main->_runDAC
    _runDAC->_sinf
    _sinf->___rem_pio2f
    ___rem_pio2f->___flneg
    ___flneg->___cosdf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   85640
                                             93 COMRAM     2     2      0
                                             95 BANK0      2     2      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runDAC
                            _runGPIO
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             35    35      0     365
                                              1 COMRAM    34    34      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0   71526
                                             92 COMRAM     1     1      0
                                             84 BANK0     11    11      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   47455
                                             58 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   10901
                                             80 COMRAM     4     0      4
                                              0 BANK0     28    28      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   18851
                                             90 COMRAM     2     2      0
                                             28 BANK0     30    25      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     199
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5929
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     653
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   10986
                                             80 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    5088
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    5150
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   10997
                                             54 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         46    45      1   12904
                                             73 COMRAM     3     2      1
                                              0 BANK0     43    43      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   11492
                                             54 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   10814
                                             49 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4   10032
                                             38 COMRAM    11     7      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    1635
                                             10 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     943
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     611
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     8      4    5135
                                             26 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    3347
                                             17 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1660
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1160
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2     613
                                              1 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      22
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              1 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runDAC
     _SPI_write
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
         ___fladd
         ___flmul
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
         ___cosdf (ARG)
         ___fladd (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      8E       5       88.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRhhhh       36      0       0      37        0.0%
BITBIGSFRlllllh     2F      0       0      51        0.0%
BITBIGSFRhhllh      10      0       0      42        0.0%
BITBIGSFRlllllh     10      0       0      50        0.0%
BITBIGSFRhll         8      0       0      46        0.0%
BITBIGSFRhhllll      6      0       0      44        0.0%
BITBIGSFRlllhl       6      0       0      48        0.0%
BITBIGSFRhlh         5      0       0      45        0.0%
BITBIGSFRllh         5      0       0      47        0.0%
BITBIGSFRhhlhhh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      43        0.0%
BITBIGSFRhhlhhl      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      38        0.0%
BITBIGSFRllllh       1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D      33        0.0%
DATA                 0      0     10D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 10:57:26 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l41 2DE0                          l44 2EC6  
                        l36 2D8E                          l46 2E32                          l90 390A  
                        _S1 100D                          l92 3918                          _S2 1009  
                        l93 399A                          _S3 1005                          _S4 1001  
                        l96 39B6                          l99 3B3A                ___awdiv@sign 0006  
       ___wmul@multiplicand 0003                         l101 3B48                         l110 3BE6  
                       l103 3B88                         l200 3F04                         l113 4066  
                       l122 3F9E                         l106 3BD6                         l202 3F12  
                       l107 3BD8                         l203 3F18                         l116 4074  
                       l124 3FAC                         l125 3FC2                         l213 40C2  
                       l205 3F26                         l118 4082                         l206 3F2A  
                       l119 4084                         l128 3FD0                         l216 40D4  
                       l234 38DC                         l253 411A                         l262 40F0  
                       l256 410C                         l265 40E2                         l281 33C4  
                       l273 340A                         l522 3A7A                         l186 2A14  
                       l291 405E                         l259 40FE                         l268 4128  
                       l284 33F8                         l197 2AA8                         l189 2A16  
                       l277 33A6                         l535 3C96                         l287 341A  
                       l288 3426                         l820 17A0                         l821 1766  
                       l565 3F64                         l912 1D3E                         l905 1B48  
                       l922 1E6E                         l914 1DB6                         l819 17B2  
                       l915 1DA4                         l836 18CC                         l828 1A82  
                       l588 37F0                         l845 199C                         l909 1EAC  
                       l861 3E24                         l846 198A                         l960 323C  
                       l873 2608                         l953 31E0                         l946 3148  
                       l875 2468                         l884 24AE                         l949 32A4  
                       l886 2526                         l878 242C                         l887 2514  
                       l992 3DBA                         l969 3F9A                         l994 3DDE  
                       l989 3D78                         l997 35F8                         _abs 4006  
                       _pad 3D3E                ___awmod@sign 0006                         tosl 0FFD  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0020  
              ___flmul@bexp 0021                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022                ___fltol@exp1 005A                        l1022 354E  
                      l1031 3D34                        l1015 349C                        l1008 36EA  
                      l1113 15C2                        l1050 2862                        l1035 3D3C  
                      l1027 3598                        ?_abs 0007                        l1060 3EEC  
                      l1064 4020                        l3001 1BF2                        l1067 4038  
                      l3011 1C44                        l3003 1BFE                        l1147 30F0  
                      l1163 20D0                        l1164 226E                        l3021 1CC2  
                      l3013 1C54                        l3005 1C0E                        l3101 3752  
                      l1181 4004                        l1094 40BE                        l1079 3B34  
                      l1087 3E68                        l3031 1D3C                        l3023 1CF8  
                      l3015 1C70                        l3007 1C1A                        l3111 377C  
                      l3103 3756                        l1176 2CDA                        l4001 3EE4  
                      l3041 1D9C                        l3033 1D4E                        l3025 1D06  
                      l3017 1C7C                        l3009 1C2A                        l3121 37A4  
                      l3113 3786                        l3105 3764                        l4011 3F66  
                      l3051 1E0A                        l3035 1D5C                        l3027 1D24  
                      l3019 1C98                        l3123 37B0                        l3115 3790  
                      l4013 3F6E                        l4005 40A6                        l3061 1E72  
                      l3045 1DC6                        l3053 1E0E                        l3037 1D60  
                      l3029 1D2E                        l3125 37C0                        l3141 316E  
                      l3133 30F4                        l3301 2072                        l4101 2A46  
                      l4015 3F76                        l4031 3828                        l4023 37F6  
                      l4007 40AA                        l3071 1E9C                        l3063 1E82  
                      l3055 1E28                        l3047 1DD2                        l3039 1D6E  
                      l3127 37D0                        l3151 31C8                        l3135 3104  
                      l3311 2100                        l3303 2082                        l4111 2A7C  
                      l4103 2A54                        l2601 3C02                        l2521 40D0  
                      l4017 3F7E                        l4041 38C0                        l4033 383A  
                      l4025 37FA                        l3065 1E90                        l3057 1E3C  
                      l3049 1DE0                        l3081 3F2C                        l3129 37E0  
                      l3161 322C                        l3153 31CA                        l3145 3182  
                      l3137 3112                        l3321 225A                        l3313 216C  
                      l3305 20B4                        l4113 2A82                        l4105 2A5A  
                      l4121 2D02                        l3331 3B38                        l2611 3C36  
                      l2603 3C06                        l2531 3AC8                        l2523 3A7C  
                      l4019 3F90                        l4043 38CC                        l4027 3810  
                      l3067 1E92                        l3059 1E56                        l3083 3F44  
                      l3075 3DE0                        l3091 3702                        l3171 3284  
                      l3163 324A                        l3155 31D6                        l3147 318A  
                      l3139 3158                        l3315 2192                        l3403 126A  
                      l4115 2A86                        l4107 2A68                        l4051 2878  
                      l4131 2D34                        l4123 2D06                        l3341 3B82  
                      l3333 3B4A                        l2621 3C70                        l2613 3C3E  
                      l2605 3C14                        l2533 3AFE                        l2525 3A8E  
                      l4045 38D8                        l4029 3822                        l4037 3840  
                      l3501 2270                        l2701 16CC                        l3069 1E98  
                      l3085 3F54                        l3077 3DF0                        l3173 3292  
                      l3165 324C                        l3157 3212                        l3149 3196  
                      l3317 21EA                        l3309 20DC                        l3405 127A  
                      l3413 1336                        l4109 2A6E                        l4117 2A96  
                      l4061 2888                        l4053 2880                        l4133 2D4A  
                      l4125 2D0C                        l3263 4062                        l3351 3BC4  
                      l3343 3B8E                        l3335 3B56                        l2551 39B8  
                      l2615 3C4C                        l2623 3C76                        l2607 3C1C  
                      l2519 40C2                        l2527 3AA0                        l4039 385E  
                      l3511 22AC                        l3503 227C                        l2711 16E0  
                      l2703 16D0                        l3095 3716                        l3175 3294  
                      l3167 3250                        l3159 321E                        l3255 3FD2  
                      l3319 2242                        l3415 1354                        l3407 12C6  
                      l4071 28A6                        l4063 289A                        l4055 2882  
                      l4143 2D9C                        l4135 2D5A                        l4127 2D10  
                      l4119 2CDC                        l3353 3BC6                        l3337 3B66  
                      l3329 3B38                        l2561 39E4                        l2553 39BC  
                      l2625 3C86                        l2617 3C62                        l2609 3C2E  
                      l2529 3AAA                        l2545 403A                        l3361 3EF0  
                      l3601 24DE                        l3521 22DC                        l3513 22BC  
                      l3505 228A                        l2801 192E                        l2721 16F4  
                      l2713 16E4                        l2705 16D4                        l3097 3740  
                      l3089 36EC                        l3169 3274                        l3257 3FF2  
                      l3417 1372                        l3433 13F2                        l3409 130E  
                      l4081 28EC                        l4073 28A8                        l4065 28A0  
                      l4057 2884                        l4049 2864                        l4153 2DEE  
                      l4137 2D68                        l4145 2DAC                        l4129 2D22  
                      l3355 3F9C                        l3339 3B70                        l2571 3A12  
                      l2563 39EC                        l2555 39CA                        l2627 3C8E  
                      l2619 3C6A                        l2547 4056                        l3363 3EFE  
                      l3611 2550                        l3603 250C                        l3531 2312  
                      l3523 22E2                        l3515 22BE                        l3507 228C  
                      l2803 1936                        l2811 195A                        l2731 1708  
                      l2723 16F8                        l2715 16E8                        l2707 16D8  
                      l2651 15C4                        l3099 3742                        l3259 3FF4  
                      l3291 1F04                        l3283 1EAE                        l3275 2AAA  
                      l3451 14D0                        l3435 1402                        l3419 1382  
                      l3427 13BA                        l3443 1496                        l3371 10E0  
                      l4083 28F8                        l4075 28C4                        l4067 28A2  
                      l4059 2886                        l4163 2E44                        l4147 2DBA  
                      l4155 2DFE                        l4139 2D80                        l3357 3FAE  
                      l3349 3B92                        l2581 3A4C                        l2573 3A1A  
                      l2565 39F0                        l2557 39D2                        l2901 3442  
                      l3365 3F00                        l3621 25C8                        l3613 257A  
                      l3541 2352                        l3533 2322                        l3525 22F0  
                      l3509 229C                        l3517 22C6                        l2821 19AC  
                      l2813 195E                        l2805 193A                        l2741 1780  
                      l2733 1732                        l2725 16FC                        l2717 16EC  
                      l2709 16DC                        l2661 1600                        l2653 15D0  
                      l3293 1F28                        l3285 1ECE                        l3453 14F4  
                      l3445 14AC                        l3437 143A                        l3373 10E2  
                      l4093 29F6                        l4085 2960                        l4077 28D4  
                      l4069 28A4                        l3701 336A                        l4165 2E4C  
                      l4173 2E7E                        l4157 2E0C                        l4149 2DD2  
                      l3359 3FC0                        l2591 3A72                        l2583 3A4E  
                      l2575 3A28                        l2567 39F8                        l2559 39D6  
                      l2647 4006                        l2911 34C0                        l2903 344E  
                      l3631 25FE                        l3623 25E4                        l3607 2536  
                      l3615 257E                        l3543 2362                        l3551 2382  
                      l3535 2324                        l3527 22F2                        l3519 22D6  
                      l2831 1A12                        l2823 19B8                        l2815 196C  
                      l2807 194A                        l2751 17C0                        l2743 1784  
                      l2735 174E                        l2727 1700                        l2719 16F0  
                      l2671 1630                        l2663 1610                        l2655 15DE  
                      l3279 2EF4                        l3295 1F94                        l3287 1EE4  
                      l3463 1568                        l3455 1518                        l3447 14BC  
                      l3439 146E                        l3391 11D2                        l3375 1100  
                      l3383 1152                        l3367 10BA                        l4095 2A24  
                      l4087 2984                        l4079 28DA                        l3711 33EA  
                      l3703 336E                        l4175 2EC8                        l4167 2E70  
                      l4159 2E24                        l3641 38EC                        l2585 3A54  
                      l2577 3A2E                        l2569 3A0A                        l2649 4014  
                      l2913 34D4                        l2921 3534                        l2905 345A  
                      l3625 25E8                        l3617 2598                        l3609 2542  
                      l3561 23C0                        l3553 2392                        l3545 236A  
                      l3529 2302                        l3537 232C                        l2841 1A5A  
                      l2833 1A22                        l2825 19C6                        l2817 1982  
                      l2809 194C                        l2761 1802                        l2753 17D0  
                      l2745 1792                        l2737 175E                        l2729 1704  
                      l2681 165A                        l2673 1642                        l2665 1612  
                      l2657 15E0                        l3297 1FBA                        l3289 1EE6  
                      l3385 1170                        l3377 1116                        l3369 10CA  
                      l4097 2A32                        l4089 29EA                        l3705 338A  
                      l4177 2EDA                        l4169 2E74                        l3651 3998  
                      l3643 38F8                        l2579 3A44                        l2587 3A5A  
                      l2595 3BE8                        l2931 3C98                        l2915 34D8  
                      l2907 345E                        l3627 25F6                        l3619 25AE  
                      l3571 2408                        l3563 23D0                        l3555 2392  
                      l3547 236E                        l3539 233C                        l2843 1A5C  
                      l2835 1A42                        l2827 1A00                        l2771 1830  
                      l2763 1810                        l2747 1794                        l2739 1774  
                      l2683 166A                        l2691 1694                        l2675 1644  
                      l2659 15F0                        l2667 161A                        l3299 2012  
                      l3459 1540                        l3387 118E                        l3379 112A  
                      l4099 2A40                        l3491 4102                        l3715 3406  
                      l3707 33A2                        l4179 2EE8                        l3653 39A8  
                      l3645 38FA                        l2589 3A6A                        l2597 3BEC  
                      l3901 364C                        l2941 3D06                        l2933 3CA0  
                      l2925 3562                        l2917 34FA                        l3629 25FC  
                      l3581 2456                        l3573 241C                        l3565 23E0  
                      l2845 1A62                        l2837 1A46                        l2829 1A02  
                      l2781 189C                        l2773 183A                        l2765 181C  
                      l2757 17E4                        l2749 179E                        l2693 16A4  
                      l2685 167A                        l2677 164A                        l2669 162A  
                      l3469 15A4                        l3389 119E                        l3397 120E  
                      l3493 40F4                        l3709 33D2                        ?_pad 0012  
                      l3647 3908                        l3639 38DE                        l2599 3BFA  
                      l3911 36B4                        l3903 3668                        l2935 3CC2  
                      l2943 3D0E                        l2927 3576                        l2919 3530  
                      l3591 249E                        l3583 2466                        l3575 242A  
                      l3567 23F0                        l3559 23A6                        l2847 1A70  
                      l2839 1A54                        l2783 18AC                        l2767 1820  
                      l2759 17F4                        l2775 1840                        l2695 16B6  
                      l2687 168A                        l2679 1658                        l2951 1AA0  
                      l3399 1242                        l3495 40E6                        l3649 391A  
                      l3913 36BA                        l3905 3682                        l2937 3CCA  
                      l2929 357A                        l3921 262C                        l3593 24AC  
                      l3585 2478                        l3577 2436                        l3569 23F8  
                      l2849 1A72                        l2793 1906                        l2777 1866  
                      l2785 18BC                        l2769 182E                        l2697 16C4  
                      l2689 168C                        l2961 1AE6                        l2953 1AB0  
                      l2945 1A84                        l3489 4110                        l3497 40D8  
                      l3681 32A6                        l3851 3E32                        l3915 36CA  
                      l3907 3694                        l2939 3CE6                        l3931 2652  
                      l3923 2634                        l3587 248E                        l3595 24BE  
                      l3579 2454                        l2795 1910                        l2787 18E2  
                      l2779 189A                        l2699 16C8                        l2971 1B12  
                      l2963 1AEC                        l2955 1AC0                        l2947 1A90  
                      l3499 411E                        l3691 32FC                        l3683 32C4  
                      l3853 3E44                        l3861 3D62                        l3909 36A4  
                      l3941 2694                        l3933 265E                        l3925 2642  
                      l3597 24CC                        l3589 2494                        l2797 191E  
                      l2789 18F2                        l2981 1B68                        l2973 1B22  
                      l2965 1AF2                        l2957 1AD0                        l2949 1A9E  
                      l3693 3308                        l3685 32CC                        l3855 3E48  
                      l3871 3DCA                        l3863 3D70                        l3951 26E8  
                      l3943 26A8                        l3927 2646                        l3919 260A  
                      l3599 24D0                        l2799 1920                        l2991 1BA8  
                      l2975 1B32                        l2967 1B00                        l2959 1AD6  
                      l3687 32E2                        l3849 3E26                        l3865 3D84  
                      l3857 3D3E                        l3881 35CA                        l3873 359A  
                      l3961 273E                        l3953 2704                        l3945 26B8  
                      l3937 2666                        l3929 264E                        l2993 1BB4  
                      l2985 1B7C                        l2977 1B38                        l2969 1B02  
                      l3689 32F4                        l3867 3D98                        l3859 3D4E  
                      l3891 3600                        l3883 35D0                        l3875 359E  
                      l2899 3428                        l3971 2796                        l3963 2742  
                      l3955 271C                        l3947 26C2                        l3939 2684  
                      l2995 1BCC                        l2987 1B88                        l2979 1B58  
                      l3699 3310                        l3869 3D9C                        l3893 360A  
                      l3885 35E0                        l3877 35B2                        l3981 2808  
                      l3973 27C0                        l3965 2764                        l3957 2726  
                      l3949 26CC                        l2997 1BD8                        l2989 1B92  
                      l3895 3610                        l3887 35EC                        l3879 35BA  
                      l3975 27EA                        l3967 276C                        l2999 1BE4  
                      l3897 3642                        l3889 35F4                        l3985 2830  
                      l3969 2774                        l3899 3646                        l3979 27F8  
                      l3995 3EAC                        l3989 283C                        l3997 3EB4  
                      l3999 3EC8                        STR_1 1041                        STR_2 1052  
                      STR_3 1063                        STR_4 1074                        STR_5 10A7  
                      STR_6 109D                        STR_7 10A2                        STR_8 10B4  
                      STR_9 10B0                        u3000 354E                        u3001 354A  
                      u3010 355E                        u3011 355A                        u2300 39CA  
                      u3020 3598                        u3100 1B22                        u2301 39C6  
                      u3021 3594                        u3101 1B1E                        u2310 39E4  
                      u3030 3CC2                        u3110 1B58                        u2311 39E0  
                      u3031 3CBE                        u3111 1B54                        u2320 3A0A  
                      u2400 3C62                        u2240 40D0                        u3040 3D34  
                      u4000 2478                        u3200 1DE0                        u3120 1B68  
                      u2321 3A06                        u2401 3C5E                        u2241 40CC  
                      u3041 3D30                        u4001 2474                        u3201 1DDC  
                      u3121 1B64                        u2330 3A28                        u2410 3C86  
                      u2250 3A8E                        u4010 248E                        u3210 1E28  
                      u3130 1CE2                        u3050 1A9E                        u2331 3A24  
                      u2411 3C82                        u2251 3A8A                        u4011 248A  
                      u3211 1E24                        u3051 1A9A                        u2340 3A44  
                      u2260 3AA0                        u4100 25C8                        u4020 24AC  
                      u2500 1642                        u3220 1E56                        u3140 1D3C  
                      u3060 1AB0                        u3300 37C0                        u2341 3A40  
                      u2261 3A9C                        u4101 25C4                        u4021 24A8  
                      u2501 163E                        u3221 1E52                        u3141 1D38  
                      u3061 1AAC                        u3301 37BC                        u2350 3A6A  
                      u2270 3AC8                        u4110 25F6                        u4030 24CC  
                      u2510 1658                        u3230 1E90                        u3150 1D5C  
                      u3070 1AC0                        u3310 37D0                        u2351 3A66  
                      u2271 3AC4                        u4111 25F2                        u4031 24C8  
                      u2511 1654                        u3231 1E8C                        u3151 1D58  
                      u3135 1CD8                        u3071 1ABC                        u3311 37CC  
                      u4120 3918                        u2360 3BFA                        u2280 3AFE  
                      u4040 24DE                        u2600 1792                        u2520 166A  
                      u3160 1D6E                        u3080 1B00                        u3240 3F44  
                      u3400 3284                        u3320 3104                        u4121 3914  
                      u2361 3BF6                        u2281 3AFA                        u4041 24DA  
                      u2601 178E                        u2521 1666                        u3161 1D6A  
                      u3081 1AFC                        u3241 3F40                        u3401 3280  
                      u3321 3100                        u4130 39A8                        u2370 3C14  
                      u4050 250C                        u2610 17B2                        u2530 167A  
                      u3170 1D9C                        u3090 1B12                        u3250 3702  
                      u3410 3292                        u3330 3112                        u4210 3366  
                      u4131 39A4                        u2371 3C10                        u4051 2508  
                      u2611 17AE                        u2531 1676                        u3171 1D98  
                      u3091 1B0E                        u3251 36FE                        u3411 328E  
                      u3331 310E                        u4211 3360                        u2380 3C2E  
                      u2460 4014                        u4060 2522                        u2700 18F2  
                      u2620 17C0                        u2540 16B6                        u3180 1DB2  
                      u3260 3736                        u3340 316E                        u4220 3368  
                      u4204 3350                        u2381 3C2A                        u2461 4010  
                      u4061 251E                        u2701 18EE                        u2621 17BC  
                      u2541 16B2                        u3181 1DAE                        u3341 316A  
                      u4205 334C                        u2390 3C4C                        u4070 2536  
                      u2710 191E                        u2630 17D0                        u2550 16C4  
                      u2470 15DE                        u3190 1DC6                        u3270 3764  
                      u3350 31C4                        u4230 338A                        u5007 39AE  
                      u2391 3C48                        u4071 2532                        u2711 191A  
                      u2631 17CC                        u2551 16C0                        u2471 15DA  
                      u3191 1DC2                        u3271 3760                        u3351 31C0  
                      u4231 3386                        u3520 4074                        u3600 3B48  
                      u4080 2550                        u2800 1A00                        u2720 192E  
                      u2640 1802                        u2560 1732                        u2480 15F0  
                      u3280 3778                        u3360 320E                        u4240 33C4  
                      u3521 4070                        u3601 3B44                        u4081 254C  
                      u2801 19FC                        u2721 192A                        u2641 17FE  
                      u2561 172E                        u2481 15EC                        u3281 3774  
                      u3265 372C                        u3361 320A                        u4241 33C0  
                      u3530 4082                        u3610 3B66                        u4090 2598  
                      u2810 1A12                        u2730 194A                        u2650 1810  
                      u2570 174A                        u2490 1600                        u3290 37A0  
                      u3370 322C                        u4250 33D2                        u3531 407E  
                      u3611 3B62                        u4091 2594                        u2811 1A0E  
                      u2731 1946                        u2651 180C                        u2571 1744  
                      u2491 15FC                        u3291 379C                        u3371 3228  
                      u4251 33CE                        u4171 32D6                        u3620 3B82  
                      u4500 3DBA                        u2820 1A22                        u2740 195A  
                      u2660 182E                        u2580 174C                        u3380 323C  
                      u3700 10DC                        u4260 33F8                        u3621 3B7E  
                      u4501 3DB6                        u2821 1A1E                        u2741 1956  
                      u2661 182A                        u3381 3238                        u3701 10D6  
                      u4261 33F4                        u4181 32EC                        u3630 3BC0  
                      u4510 3DCA                        u2830 1A42                        u2750 196C  
                      u2670 1866                        u2590 1774                        u3390 324A  
                      u3550 1EE0                        u3710 10DE                        u4270 3406  
                      u4511 3DC6                        u2831 1A3E                        u2751 1968  
                      u2671 1862                        u2591 1770                        u3391 3246  
                      u3551 1EDA                        u4271 3402                        u3640 3BD6  
                      u4520 35AE                        u4600 262C                        u2840 1A54  
                      u2760 1982                        u2680 18AC                        u3560 1EE2  
                      u3800 1382                        u3720 1100                        u4280 341A  
                      u3641 3BD2                        u4521 35A8                        u4601 2628  
                      u2841 1A50                        u2761 197E                        u2681 18A8  
                      u3801 137E                        u3721 10FC                        u4281 3416  
                      u3650 3BE6                        u4530 35B0                        u4610 2694  
                      u2850 1A70                        u2770 1998                        u2690 18E2  
                      u3570 1F04                        u3810 1402                        u3730 1116  
                      u3651 3BE2                        u4611 2690                        u2851 1A6C  
                      u2771 1994                        u2691 18DE                        u3571 1F00  
                      u3811 13FE                        u3731 1112                        u3660 3FAC  
                      u4540 35CA                        u2940 3442                        u4620 26B8  
                      u4700 3EE4                        u3900 229C                        u2780 19AC  
                      u3580 2082                        u3820 14AC                        u3740 1170  
                      u3661 3FA8                        u3637 3BB6                        u4541 35C6  
                      u2941 343E                        u4621 26B4                        u4701 3EE0  
                      u3901 2298                        u2781 19A8                        u3581 207E  
                      u3821 14A8                        u3741 116C                        u3670 3FD0  
                      u4470 3E68                        u4550 35E0                        u2950 348C  
                      u4630 26E8                        u3910 22AC                        u2790 19C6  
                      u3590 226A                        u3750 118E                        u4198 3322  
                      u3671 3FCC                        u4471 3E64                        u4551 35DC  
                      u4631 26E4                        u4711 3804                        u3911 22A8  
                      u2791 19C2                        u3591 2266                        u3751 118A  
                      u4199 336A                        u4480 3D4E                        u4560 3682  
                      u2960 349C                        u4640 2704                        u4720 3822  
                      u3680 3F12                        u3920 22F0                        u3760 119E  
                      u4800 2A7C                        u4481 3D4A                        u4561 367E  
                      u2961 3498                        u4641 2700                        u4721 381E  
                      u3681 3F0E                        u3921 22EC                        u3761 119A  
                      u4801 2A78                        u4490 3D70                        u4570 3694  
                      u2970 34BC                        u4650 2764                        u4730 383A  
                      u3690 3F26                        u3930 2302                        u3770 127A  
                      u4810 2AA8                        u4491 3D6C                        u4571 3690  
                      u2971 34B8                        u4651 2760                        u4731 3836  
                      u3691 3F22                        u3931 22FE                        u3771 1276  
                      u4811 2AA4                        u3835 4118                        u4580 36A4  
                      u2980 34F6                        u4660 2796                        u3940 2312  
                      u3780 1354                        u4740 28D4                        u3836 411A  
                      u4900 2E40                        u4820 2D68                        u4581 36A0  
                      u2981 34F2                        u2957 3482                        u4661 2792  
                      u3941 230E                        u3781 1350                        u4741 28D0  
                      u3845 410A                        u4901 2E3C                        u4821 2D64  
                      u4590 36B4                        u2990 351C                        u4670 27C0  
                      u3950 2352                        u3790 1372                        u4750 28EC  
                      u3846 410C                        u4910 2EDA                        u4830 2D8E  
                      u4591 36B0                        u4671 27BC                        u3951 234E  
                      u3791 136E                        u4751 28E8                        u3855 40FC  
                      u4911 2ED6                        u4831 2D8A                        u4680 27EA  
                      u3960 2392                        u4760 2A24                        u3856 40FE  
                      u4840 2D9C                        u4681 27E6                        u3961 238E  
                      u4761 2A20                        u3865 40EE                        u4841 2D98  
                      u4690 2808                        u3970 2408                        u3890 228A  
                      u4770 2A40                        u3866 40F0                        u4850 2DBA  
                      u4691 2804                        u3971 2404                        u3891 2286  
                      u4771 2A3C                        u3875 40E0                        u4851 2DB6  
                      u3980 242A                        u4780 2A54                        u3876 40E2  
                      u4860 2DE0                        u2997 3512                        u3981 2426  
                      u4781 2A50                        u3885 4126                        u4861 2DDC  
                      u3990 2454                        u4790 2A68                        u3886 4128  
                      u4870 2DEE                        u3991 2450                        u4791 2A64  
                      u4871 2DEA                        u4927 2D3E                        u4880 2E0C  
                      u4881 2E08                        u4937 2D72                        u4890 2E32  
                      u4891 2E2E                        u4947 2DC4                        u4957 2E16  
                      u4967 3394                        u4977 33DC                        u4987 2A8C  
                      u4997 3900                        abs@a 0007                        _dbuf 0100  
                      _half 101D                        _main 2CDC                        _dtoa 359A  
                      _prec 00EB                        _sinf 10BA                        pad@i 0019  
                      pad@p 0016                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 3428                        prodh 0FF4  
                      prodl 0FF3                        start 0000             ___fldiv@new_exp 0039  
              ___param_bank 0000              _LCD_ShowString 3B36                       ??_abs 0009  
                     ??_pad 0018            __end_of_LCD_Init 39B8            __end_of_LCD_Send 4086  
             ___fltol@sign1 0059             __end_of___fladd 1A84                       ?_main 0001  
                     ?_dtoa 001B             __end_of___fldiv 260A             __end_of___awdiv 3A7C  
           __end_of___cosdf 30F2             __end_of___flneg 3F66                       STR_10 10AC  
                     STR_11 1098                       STR_12 108C                       STR_13 10AB  
                     STR_14 1092                       STR_15 1093                       STR_16 1085  
           __end_of___awmod 3C98                       ?_sinf 009A             __end_of___flmul 1EAE  
           __end_of___flsub 3E26             __end_of___fltol 37F2                       ?_stoa 000B  
           ___awdiv@divisor 0003             __end_of___sindf 2CDC                ___sindf$3130 006C  
              ___sindf$3131 0070                ___sindf$3129 0068             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0029                       _TX1IF 7CF4             __end_of_pio2_1t 1015  
                     _fabsf 3FD2                       _flags 00ED         read_prec_or_width@c 0009  
       read_prec_or_width@n 000A                       _fputc 3A7C                       _fputs 3E26  
                     pad@fp 0012                       _width 00E9             __end_of_invpio2 101D  
                     _putch 40C0                       dtoa@d 001D                       dtoa@i 0025  
                     dtoa@p 0021                       dtoa@s 0024                       dtoa@w 0022  
      __end_of_LED1_Control 411C             __end_of_runGPIO 3428                       pclath 0FFA  
                     tablat 0FF5        __end_of_LED2_Control 410E                       sinf@n 00A6  
                     sinf@x 009A                       sinf@y 00AC                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 0017                       stoa@p 0011  
                     stoa@s 000D                       stoa@w 0013        __end_of_LED3_Control 4100  
                     status 0FD8             __end_of_sprintf 3F9C        __end_of_LED4_Control 40F2  
      __end_of_LED5_Control 40E4        __end_of_LED6_Control 412A             __initialization 3E6A  
    __end_of_LCD_ShowString 3BE8                __end_of_half 1021                __end_of_main 2EF4  
              __end_of_dtoa 36EC                __end_of_sinf 15C4                __end_of_stoa 359A  
              LCD_Send@data 0001                      ??_main 005E                      ??_dtoa 001F  
                    ??_sinf 005D                      ??_stoa 000F           __end_of_LCD_Clear 3FD2  
             __activetblptr 0002  __end_of_read_prec_or_width 3D3E                ?_moveDisplay 004A  
                    ?_fabsf 0001                      ?_fputc 0002                      ?_fputs 000B  
                    _ADRESH 0FC4            ___awdiv@dividend 0001                      ?_putch 0001  
                    _GODONE 7E11               ___rem_pio2f@n 0096               ___rem_pio2f@t 0092  
             ___rem_pio2f@x 007C               ___rem_pio2f@y 0080               vfpfcnvrt@done 0031  
                    _SPBRG1 0FAF                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 32A6                vfprintf@cfmt 0036  
           ?_LCD_ShowString 0002                      _s1pio2 103D                      _s2pio2 1039  
                    _s3pio2 1035                      _s4pio2 1031                   ??___fladd 0049  
                    ___wmul 403A                   ??___fldiv 0030                   ??___awdiv 0005  
                 ??___cosdf 0055                   ??___flneg 0055                   ??___awmod 0005  
                 ??___flmul 0017                   ??___flsub 0059                   ??___fltol 0055  
                 ??___sindf 0055                      _pio2_1 1015                      fabsf@u 0005  
                    fabsf@x 0001        read_prec_or_width@ap 0008                      clear_0 3E90  
                    clear_1 3E9C            ___awdiv@quotient 0007                      _runDAC 2864  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    _printf 40A6                      pad@buf 0014                      dtoa@fp 001B  
                    fputc@c 0002                      fputs@c 000F                      fputs@i 0010  
                    fputs@s 000B                __mediumconst 0000                      sinf@ux 00B0  
                 ??_runGPIO 0002                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8           __end_of_SPI_write 3F2C                      stoa@cp 0015  
                    stoa@fp 000B            __end_of_vfprintf 3EEE                   ??_sprintf 003D  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                __accesstop 0060     __end_of__initialization 3EA2                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0078               ___rparam_used 0001  
                ___fltol@f1 0051              __pcstackCOMRAM 0001           LED4_Control@state 0001  
              __pidataBANK0 4086               __end_of_fabsf 4006               __end_of_fputc 3B36  
             __end_of_fputs 3E6A               __end_of_putch 40D6                  __end_of_C0 1031  
                __end_of_C1 102D                  __end_of_C2 1029                  __end_of_C3 1025  
                __end_of_S1 1011                  __end_of_S2 100D                  __end_of_S3 1009  
                __end_of_S4 1005                     ??_fabsf 0005                     ??_fputc 0006  
                   ??_fputs 000F                     ??_putch 0001                  __pbssBANK0 00E1  
                __pbssBANK1 0100                  ??_LCD_Init 0002                  ??_LCD_Send 0001  
              SPI_write@LSB 0002                SPI_write@MSB 0001                     ?___wmul 0001  
             ??___rem_pio2f 005B                _LED1_Control 410E                     ?_runDAC 0001  
              _LED2_Control 4100                     ?_printf 0037                _LED3_Control 40F2  
              _LED4_Control 40E4                   ?___xxtofl 0001                _LED5_Control 40D6  
            ___rem_pio2f@fn 008E              ___rem_pio2f@ty 0081              ___rem_pio2f@ux 008A  
              _LED6_Control 411C                     _SSP2ADD 0F6E                     _SSP1BUF 0FC9  
                   _SSP2BUF 0F6F           runGPIO@LEDControl 0010             LCD_ShowString@i 0007  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 15C4  
                   ___fldiv 2270                     ___awdiv 39B8                     ___cosdf 2EF4  
                   ___flneg 3F2C                     ___awmod 3BE8                     ___flmul 1A84  
                   ___flsub 3DE0                     ___fltol 36EC                     ___sindf 2AAA  
                 ?_vfprintf 0032                __psmallconst 1000              main@setUpAgain 00BF  
                   __pcinit 3E6A                     __ramtop 1000                     __ptext0 2CDC  
                   __ptext1 32A6                     __ptext2 40D6                     __ptext3 40E4  
                   __ptext4 40F2                     __ptext5 4100                     __ptext6 410E  
                   __ptext7 411C                     __ptext8 2864                     __ptext9 10BA  
                   _pio2_1t 1011       read_prec_or_width@fmt 0007                  ??___xxtofl 0005  
       __end_of___rem_pio2f 2270            ___awmod@dividend 0001                     _invpio2 1019  
                   _runGPIO 32A6                   _LCD_Clear 3F9C                     _sprintf 3F66  
          ___rem_pio2f$3128 0085        end_of_initialization 3EA2                     fputc@fp 0004  
          ___rem_pio2f@F526 00E5               __Lmediumconst 0000                     fputs@fp 000D  
          ??_LCD_ShowString 0004          _read_prec_or_width 3C98           LED1_Control@state 0001  
     LCD_ShowString@lineNum 0006            ___rem_pio2f@sign 0089           __end_of_vfpfcnvrt 2864  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 002C                  ??_vfprintf 0036                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0050               ___xxtofl@sign 0009  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  ?_LCD_Clear 0001        ??_read_prec_or_width 0009  
               ___fldiv@grs 003B                 ___fldiv@rem 0034                   _SPI_write 3EEE  
               ___flmul@grs 001C           LED5_Control@state 0001              __end_of_s1pio2 1041  
            __end_of_s2pio2 103D              __end_of_s3pio2 1039              __end_of_s4pio2 1035  
               vfpfcnvrt@ap 002A                 vfpfcnvrt@cp 0030                 ___rem_pio2f 1EAE  
               vfpfcnvrt@fp 0027              __end_of___wmul 4060              __end_of_pio2_1 1019  
      moveDisplay@menuItem1 0060        moveDisplay@menuItem2 0071        moveDisplay@menuItems 0082  
            __end_of_runDAC 2AAA              __end_of_printf 40C0         start_initialization 3E6A  
               __end_of_abs 403A                 __end_of_pad 3DE0                  ?_SPI_write 0001  
               vfprintf@fmt 0034                    ??___wmul 0005                 __pdataBANK0 00C1  
                  ??_runDAC 005D                    ??_printf 003A                   ___fladd@a 0045  
                 ___fladd@b 0041                   ___fldiv@a 002C                   ___fldiv@b 0028  
             runGPIO@states 0004                   ___cosdf@r 0060                   ___cosdf@w 0070  
                 ___cosdf@x 0051                   ___cosdf@z 0074                   ___flmul@a 0013  
                 ___flmul@b 000F                   ___flsub@a 0055                   ___flsub@b 0051  
             __pcstackBANK0 0060                 ??_LCD_Clear 0002                   ___sindf@r 0060  
                 ___sindf@s 0074                   ___sindf@w 0064                   ___sindf@x 0051  
                 ___sindf@z 0078                   _dtoa$2736 001F               SPI_write@data 0003  
                  ?___fladd 0041                    ?___fldiv 0028                    ?___awdiv 0001  
                  ?___cosdf 0051                    ?___flneg 0078                    ?___awmod 0001  
                  ?___flmul 000F                    ?___flsub 0051                    ?___fltol 0051  
                  ?___sindf 0051                   fabsf@F465 00E1                 __smallconst 1000  
             ??_moveDisplay 004B                    ?_runGPIO 0001             runDAC@keepState 00BC  
                 _sinf$3124 00A8                    ?_sprintf 0037                   _sinf$2860 00A2  
                 _sinf$2859 009E                 ??_SPI_write 0001              runDAC@DACindex 00BE  
                  _LCD_Init 38DE                    _LCD_Send 4060              ___wmul@product 0005  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C           LED2_Control@state 0001                   _vfpfcnvrt 260A  
                _ADCON0bits 0FC2                  _ADCON2bits 0FC0           ___wmul@multiplier 0001  
                 main@menuI 00C0            moveDisplay@F6950 00D9                   copy_data0 3E7E  
       __end_of_moveDisplay 38DE            moveDisplay@menuI 008A                runGPIO@F6963 00CD  
          moveDisplay@where 004A                runGPIO@F6981 00C1                    __Hrparam 0000  
                vfprintf@ap 0035                    __Lrparam 0000                  vfprintf@fp 0032  
        runGPIO@GPIOreverse 001C           LED6_Control@state 0001                ?___rem_pio2f 007C  
                ?_vfpfcnvrt 0027         runDAC@selectModeDAC 00BD                  _ANSELAbits 0F38  
                _ANSELBbits 0F39                  _ANSELDbits 0F3B                  sprintf@fmt 0038  
                  ___xxtofl 30F2                    __ptext10 2AAA                    __ptext11 1EAE  
                  __ptext20 40A6                    __ptext12 3FD2                    __ptext21 2270  
                  __ptext13 30F2                    __ptext30 359A                    __ptext22 3EEE  
                  __ptext14 36EC                    __ptext31 3D3E                    __ptext23 37F2  
                  __ptext15 3DE0                    __ptext40 38DE                    __ptext32 3E26  
                  __ptext24 3F66                    __ptext16 3F2C                    __ptext41 4060  
                  __ptext33 3A7C                    __ptext25 3EAC                    __ptext17 2EF4  
                  __ptext34 40C0                    __ptext26 260A                    __ptext18 1A84  
                  __ptext35 4006                    __ptext27 3428                    __ptext19 15C4  
                  __ptext36 3BE8                    __ptext28 3C98                    __ptext37 39B8  
                  __ptext29 403A                    __ptext38 3B36                    __ptext39 3F9C  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                  isa$xinst 0000                 _runDAC$3121 00B4                 _runDAC$3122 00B8  
                  _vfprintf 3EAC               ?_LED1_Control 0001                   printf@fmt 0037  
              _SSP1STATbits 0FC7               ?_LED2_Control 0001                _SSP2STATbits 0F6D  
             ?_LED3_Control 0001               ?_LED4_Control 0001                   putch@data 0001  
             ?_LED5_Control 0001               ?_LED6_Control 0001                 _moveDisplay 37F2  
                 sprintf@ap 003D                  _RCSTA1bits 0FAB                    sinf@sign 00A7  
                  runGPIO@i 0020                    runGPIO@j 0022            runGPIO@keepState 001F  
                  printf@ap 003A              ??_LED1_Control 0001              ??_LED2_Control 0001  
               ??_vfpfcnvrt 002B      LCD_ShowString@textData 0002              ??_LED3_Control 0001  
            ??_LED4_Control 0001                    sprintf@f 003E                    sprintf@s 0037  
            ??_LED5_Control 0001              ??_LED6_Control 0001               ___fladd@signs 004D  
              ___fladd@aexp 004E                ___fladd@bexp 004F            runGPIO@numStates 001D  
              ___cosdf$3125 0064                ___cosdf$3126 0068                ___cosdf$3127 006C  
         LED3_Control@state 0001  
