

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 28 00:26:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 12/10/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F46K22 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataBANK0
    87   003E8C                     __pidataBANK0:
    88                           	callstack 0
    89                           
    90                           ;initializer for moveDisplay@F6949
    91   003E8C  7B                 	db	low STR_4
    92   003E8D  80                 	db	low STR_5
    93   003E8E  92                 	db	low STR_6
    94   003E8F  8E                 	db	low STR_7
    95   003E90  8A                 	db	low STR_8
    96   003E91  76                 	db	low STR_9
    97   003E92  6A                 	db	low STR_10
    98   003E93  89                 	db	low (STR_3+4)
    99                           
   100                           	psect	smallconst
   101   001000                     __psmallconst:
   102                           	callstack 0
   103   001000  00                 	db	0
   104   001001  6C3C               	dw	27708
   105   001003  3636               	dw	13878
   106   001005                     __end_of_S4:
   107                           	callstack 0
   108   001005  07CF               	dw	1999
   109   001007  B950               	dw	47440
   110   001009                     __end_of_S3:
   111                           	callstack 0
   112   001009  8884               	dw	34948
   113   00100B  3C08               	dw	15368
   114   00100D                     __end_of_S2:
   115                           	callstack 0
   116   00100D  AAAB               	dw	43691
   117   00100F  BE2A               	dw	48682
   118   001011                     __end_of_S1:
   119                           	callstack 0
   120   001011  85A3               	dw	34211
   121   001013  3288               	dw	12936
   122   001015                     __end_of_pio2_1t:
   123                           	callstack 0
   124   001015  0FDA               	dw	4058
   125   001017  3FC9               	dw	16329
   126   001019                     __end_of_pio2_1:
   127                           	callstack 0
   128   001019  F983               	dw	63875
   129   00101B  3F22               	dw	16162
   130   00101D                     __end_of_invpio2:
   131                           	callstack 0
   132   00101D  0000               	dw	0
   133   00101F  3F00               	dw	16128
   134   001021                     __end_of_half:
   135                           	callstack 0
   136   001021  9A17               	dw	39447
   137   001023  37CC               	dw	14284
   138   001025                     __end_of_C3:
   139                           	callstack 0
   140   001025  043F               	dw	1087
   141   001027  BAB6               	dw	47798
   142   001029                     __end_of_C2:
   143                           	callstack 0
   144   001029  AA9F               	dw	43679
   145   00102B  3D2A               	dw	15658
   146   00102D                     __end_of_C1:
   147                           	callstack 0
   148   00102D  0000               	dw	0
   149   00102F  BF00               	dw	48896
   150   001031                     __end_of_C0:
   151                           	callstack 0
   152   001031  0FDB               	dw	4059
   153   001033  40C9               	dw	16585
   154   001035                     __end_of_s4pio2:
   155                           	callstack 0
   156   001035  CBE4               	dw	52196
   157   001037  4096               	dw	16534
   158   001039                     __end_of_s3pio2:
   159                           	callstack 0
   160   001039  0FDB               	dw	4059
   161   00103B  4049               	dw	16457
   162   00103D                     __end_of_s2pio2:
   163                           	callstack 0
   164   00103D  0FDB               	dw	4059
   165   00103F  3FC9               	dw	16329
   166   001041                     __end_of_s1pio2:
   167                           	callstack 0
   168   000000                     _TRISBbits	set	3987
   169   000000                     _SSP2STATbits	set	3949
   170   000000                     _SSP2ADD	set	3950
   171   000000                     _TX1IF	set	31988
   172   000000                     _GODONE	set	32273
   173   000000                     _ANSELBbits	set	3897
   174   000000                     _ANSELDbits	set	3899
   175   000000                     _PORTAbits	set	3968
   176   000000                     _PORTCbits	set	3970
   177   000000                     _ANSELAbits	set	3896
   178   000000                     _TRISAbits	set	3986
   179   000000                     _TRISCbits	set	3988
   180   000000                     _TRISDbits	set	3989
   181   000000                     _SSP1IF	set	31987
   182   000000                     _SSP2IF	set	32039
   183   000000                     _LATAbits	set	3977
   184   000000                     _SSP2CON2bits	set	3947
   185   000000                     _SSP2CON1bits	set	3948
   186   000000                     _LATBbits	set	3978
   187   000000                     _SSP2BUF	set	3951
   188   000000                     _RCSTA1bits	set	4011
   189   000000                     _SPBRG1	set	4015
   190   000000                     _ADCON2bits	set	4032
   191   000000                     _SSP1CON1bits	set	4038
   192   000000                     _SSP1BUF	set	4041
   193   000000                     _SSP1STATbits	set	4039
   194   000000                     _ADCON0bits	set	4034
   195   000000                     _ADRESH	set	4036
   196   000000                     _TXREG1	set	4013
   197   000000                     _TXSTA1bits	set	4012
   198   001041                     STR_1:
   199   001041  52                 	db	82	;'R'
   200   001042  42                 	db	66	;'B'
   201   001043  30                 	db	48	;'0'
   202   001044  2D                 	db	45
   203   001045  41                 	db	65	;'A'
   204   001046  32                 	db	50	;'2'
   205   001047  2C                 	db	44
   206   001048  20                 	db	32
   207   001049  42                 	db	66	;'B'
   208   00104A  52                 	db	82	;'R'
   209   00104B  3A                 	db	58	;':'
   210   00104C  20                 	db	32
   211   00104D  39                 	db	57	;'9'
   212   00104E  36                 	db	54	;'6'
   213   00104F  30                 	db	48	;'0'
   214   001050  30                 	db	48	;'0'
   215   001051  00                 	db	0
   216   001052                     STR_2:
   217   001052  31                 	db	49	;'1'
   218   001053  3A                 	db	58	;':'
   219   001054  74                 	db	116	;'t'
   220   001055  72                 	db	114	;'r'
   221   001056  2C                 	db	44
   222   001057  32                 	db	50	;'2'
   223   001058  3A                 	db	58	;':'
   224   001059  73                 	db	115	;'s'
   225   00105A  69                 	db	105	;'i'
   226   00105B  6E                 	db	110	;'n'
   227   00105C  2C                 	db	44
   228   00105D  33                 	db	51	;'3'
   229   00105E  3A                 	db	58	;':'
   230   00105F  70                 	db	112	;'p'
   231   001060  69                 	db	105	;'i'
   232   001061  6C                 	db	108	;'l'
   233   001062  00                 	db	0
   234   001063                     STR_14:
   235   001063  28                 	db	40
   236   001064  6E                 	db	110	;'n'
   237   001065  75                 	db	117	;'u'
   238   001066  6C                 	db	108	;'l'
   239   001067  6C                 	db	108	;'l'
   240   001068  29                 	db	41
   241   001069  00                 	db	0
   242   00106A                     STR_10:
   243   00106A  4D                 	db	77	;'M'
   244   00106B  55                 	db	85	;'U'
   245   00106C  53                 	db	83	;'S'
   246   00106D  49                 	db	73	;'I'
   247   00106E  43                 	db	67	;'C'
   248   00106F  00                 	db	0
   249   001070                     STR_12:
   250   001070  3E                 	db	62	;'>'
   251   001071  25                 	db	37
   252   001072  2D                 	db	45
   253   001073  2A                 	db	42
   254   001074  73                 	db	115	;'s'
   255   001075  00                 	db	0
   256   001076                     STR_9:
   257   001076  47                 	db	71	;'G'
   258   001077  41                 	db	65	;'A'
   259   001078  4D                 	db	77	;'M'
   260   001079  45                 	db	69	;'E'
   261   00107A  00                 	db	0
   262   00107B                     STR_4:
   263   00107B  47                 	db	71	;'G'
   264   00107C  50                 	db	80	;'P'
   265   00107D  49                 	db	73	;'I'
   266   00107E  4F                 	db	79	;'O'
   267   00107F  00                 	db	0
   268   001080                     STR_5:
   269   001080  55                 	db	85	;'U'
   270   001081  41                 	db	65	;'A'
   271   001082  52                 	db	82	;'R'
   272   001083  54                 	db	84	;'T'
   273   001084  00                 	db	0
   274   001085                     STR_3:
   275   001085  25                 	db	37
   276   001086  64                 	db	100	;'d'
   277   001087  20                 	db	32
   278   001088  0D                 	db	13
   279   001089  00                 	db	0
   280   00108A                     STR_8:
   281   00108A  44                 	db	68	;'D'
   282   00108B  41                 	db	65	;'A'
   283   00108C  43                 	db	67	;'C'
   284   00108D  00                 	db	0
   285   00108E                     STR_7:
   286   00108E  41                 	db	65	;'A'
   287   00108F  44                 	db	68	;'D'
   288   001090  43                 	db	67	;'C'
   289   001091  00                 	db	0
   290   001092                     STR_6:
   291   001092  50                 	db	80	;'P'
   292   001093  57                 	db	87	;'W'
   293   001094  4D                 	db	77	;'M'
   294   001095  00                 	db	0
   295   001096  00                 	db	0	; dummy byte at the end
   296   000000                     
   297                           ; #config settings
   298                           
   299                           	psect	cinit
   300   003D06                     __pcinit:
   301                           	callstack 0
   302   003D06                     start_initialization:
   303                           	callstack 0
   304   003D06                     __initialization:
   305                           	callstack 0
   306                           
   307                           ; Initialize objects allocated to BANK0 (8 bytes)
   308                           ; load TBLPTR registers with __pidataBANK0
   309   003D06  0E8C               	movlw	low __pidataBANK0
   310   003D08  6EF6               	movwf	tblptrl,c
   311   003D0A  0E3E               	movlw	high __pidataBANK0
   312   003D0C  6EF7               	movwf	tblptrh,c
   313   003D0E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   314   003D10  6EF8               	movwf	tblptru,c
   315   003D12  EE00  F0EE         	lfsr	0,__pdataBANK0
   316   003D16  EE10 F008          	lfsr	1,8
   317   003D1A                     copy_data0:
   318   003D1A  0009               	tblrd		*+
   319   003D1C  CFF5 FFEE          	movff	tablat,postinc0
   320   003D20  50E5               	movf	postdec1,w,c
   321   003D22  50E1               	movf	fsr1l,w,c
   322   003D24  E1FA               	bnz	copy_data0
   323                           
   324                           ; Clear objects allocated to BANK0 (45 bytes)
   325   003D26  EE00  F0C1         	lfsr	0,__pbssBANK0
   326   003D2A  0E2D               	movlw	45
   327   003D2C                     clear_0:
   328   003D2C  6AEE               	clrf	postinc0,c
   329   003D2E  06E8               	decf	wreg,f,c
   330   003D30  E1FD               	bnz	clear_0
   331   003D32                     end_of_initialization:
   332                           	callstack 0
   333   003D32                     __end_of__initialization:
   334                           	callstack 0
   335   003D32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   336   003D34  6EF8               	movwf	tblptru,c
   337   003D36  0100               	movlb	0
   338   003D38  EF5C  F017         	goto	_main	;jump to C main() function
   339                           
   340                           	psect	bssBANK0
   341   0000C1                     __pbssBANK0:
   342                           	callstack 0
   343   0000C1                     fabsf@F465:
   344                           	callstack 0
   345   0000C1                     	ds	4
   346   0000C5                     ___rem_pio2f@F526:
   347                           	callstack 0
   348   0000C5                     	ds	4
   349   0000C9                     _width:
   350                           	callstack 0
   351   0000C9                     	ds	2
   352   0000CB                     _prec:
   353                           	callstack 0
   354   0000CB                     	ds	2
   355   0000CD                     _flags:
   356                           	callstack 0
   357   0000CD                     	ds	1
   358   0000CE                     _dbuf:
   359                           	callstack 0
   360   0000CE                     	ds	32
   361                           
   362                           	psect	dataBANK0
   363   0000EE                     __pdataBANK0:
   364                           	callstack 0
   365   0000EE                     moveDisplay@F6949:
   366                           	callstack 0
   367   0000EE                     	ds	8
   368                           
   369                           	psect	cstackBANK0
   370   000060                     __pcstackBANK0:
   371                           	callstack 0
   372   000060                     ___cosdf@r:
   373                           	callstack 0
   374   000060                     ___sindf@r:
   375                           	callstack 0
   376   000060                     moveDisplay@menuItem1:
   377                           	callstack 0
   378                           
   379                           ; 17 bytes @ 0x0
   380   000060                     	ds	4
   381   000064                     ___sindf@w:
   382                           	callstack 0
   383   000064                     ___cosdf$2734:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x4
   387   000064                     	ds	4
   388   000068                     ___cosdf$2735:
   389                           	callstack 0
   390   000068                     ___sindf$2738:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x8
   394   000068                     	ds	4
   395   00006C                     ___cosdf$2736:
   396                           	callstack 0
   397   00006C                     ___sindf$2739:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0xC
   401   00006C                     	ds	4
   402   000070                     ___cosdf@w:
   403                           	callstack 0
   404   000070                     ___sindf$2740:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x10
   408   000070                     	ds	1
   409   000071                     moveDisplay@menuItem2:
   410                           	callstack 0
   411                           
   412                           ; 17 bytes @ 0x11
   413   000071                     	ds	3
   414   000074                     ___cosdf@z:
   415                           	callstack 0
   416   000074                     ___sindf@s:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x14
   420   000074                     	ds	4
   421   000078                     ?___flneg:
   422                           	callstack 0
   423   000078                     ___flneg@f1:
   424                           	callstack 0
   425   000078                     ___sindf@z:
   426                           	callstack 0
   427                           
   428                           ; 4 bytes @ 0x18
   429   000078                     	ds	4
   430   00007C                     ?___rem_pio2f:
   431                           	callstack 0
   432   00007C                     ___rem_pio2f@x:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x1C
   436   00007C                     	ds	4
   437   000080                     ___rem_pio2f@y:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x20
   441   000080                     	ds	1
   442   000081                     ___rem_pio2f@ty:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x21
   446   000081                     	ds	1
   447   000082                     moveDisplay@menuItems:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0x22
   451   000082                     	ds	3
   452   000085                     ___rem_pio2f$2737:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x25
   456   000085                     	ds	4
   457   000089                     ___rem_pio2f@sign:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x29
   461   000089                     	ds	1
   462   00008A                     moveDisplay@menuI:
   463                           	callstack 0
   464   00008A                     ___rem_pio2f@ux:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x2A
   468   00008A                     	ds	4
   469   00008E                     ___rem_pio2f@fn:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x2E
   473   00008E                     	ds	4
   474   000092                     ___rem_pio2f@t:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0x32
   478   000092                     	ds	4
   479   000096                     ___rem_pio2f@n:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x36
   483   000096                     	ds	4
   484   00009A                     ?_sinf:
   485                           	callstack 0
   486   00009A                     sinf@x:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x3A
   490   00009A                     	ds	4
   491   00009E                     _sinf$2486:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x3E
   495   00009E                     	ds	4
   496   0000A2                     _sinf$2487:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x42
   500   0000A2                     	ds	4
   501   0000A6                     sinf@n:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x46
   505   0000A6                     	ds	1
   506   0000A7                     sinf@sign:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x47
   510   0000A7                     	ds	1
   511   0000A8                     _sinf$2733:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x48
   515   0000A8                     	ds	4
   516   0000AC                     sinf@y:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x4C
   520   0000AC                     	ds	4
   521   0000B0                     sinf@ux:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x50
   525   0000B0                     	ds	4
   526   0000B4                     _runDAC$2730:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x54
   530   0000B4                     	ds	4
   531   0000B8                     _runDAC$2731:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x58
   535   0000B8                     	ds	4
   536   0000BC                     runDAC@keepState:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x5C
   540   0000BC                     	ds	1
   541   0000BD                     runDAC@selectModeDAC:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x5D
   545   0000BD                     	ds	1
   546   0000BE                     runDAC@DACindex:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x5E
   550   0000BE                     	ds	1
   551   0000BF                     main@setUpAgain:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x5F
   555   0000BF                     	ds	1
   556   0000C0                     main@menuI:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x60
   560   0000C0                     	ds	1
   561                           
   562                           	psect	cstackCOMRAM
   563   000001                     __pcstackCOMRAM:
   564                           	callstack 0
   565   000001                     ?___wmul:
   566                           	callstack 0
   567   000001                     ?___awdiv:
   568                           	callstack 0
   569   000001                     ?___awmod:
   570                           	callstack 0
   571   000001                     ?_fabsf:
   572                           	callstack 0
   573   000001                     ?___xxtofl:
   574                           	callstack 0
   575   000001                     LCD_Send@data:
   576                           	callstack 0
   577   000001                     SPI_write@MSB:
   578                           	callstack 0
   579   000001                     putch@data:
   580                           	callstack 0
   581   000001                     ___wmul@multiplier:
   582                           	callstack 0
   583   000001                     ___awdiv@dividend:
   584                           	callstack 0
   585   000001                     ___awmod@dividend:
   586                           	callstack 0
   587   000001                     ___xxtofl@val:
   588                           	callstack 0
   589   000001                     fabsf@x:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x0
   593   000001                     	ds	1
   594   000002                     ??_LCD_Init:
   595   000002                     SPI_write@LSB:
   596                           	callstack 0
   597   000002                     LCD_ShowString@textData:
   598                           	callstack 0
   599   000002                     fputc@c:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x1
   603   000002                     	ds	1
   604   000003                     SPI_write@data:
   605                           	callstack 0
   606   000003                     ___wmul@multiplicand:
   607                           	callstack 0
   608   000003                     ___awdiv@divisor:
   609                           	callstack 0
   610   000003                     ___awmod@divisor:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x2
   614   000003                     	ds	1
   615   000004                     ??_LCD_ShowString:
   616   000004                     fputc@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x3
   620   000004                     	ds	1
   621   000005                     ??___xxtofl:
   622   000005                     ___awdiv@counter:
   623                           	callstack 0
   624   000005                     ___awmod@counter:
   625                           	callstack 0
   626   000005                     ___wmul@product:
   627                           	callstack 0
   628   000005                     fabsf@u:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x4
   632   000005                     	ds	1
   633   000006                     ??_fputc:
   634   000006                     LCD_ShowString@lineNum:
   635                           	callstack 0
   636   000006                     ___awdiv@sign:
   637                           	callstack 0
   638   000006                     ___awmod@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x5
   642   000006                     	ds	1
   643   000007                     ?_abs:
   644                           	callstack 0
   645   000007                     ?_read_prec_or_width:
   646                           	callstack 0
   647   000007                     LCD_ShowString@i:
   648                           	callstack 0
   649   000007                     read_prec_or_width@fmt:
   650                           	callstack 0
   651   000007                     ___awdiv@quotient:
   652                           	callstack 0
   653   000007                     abs@a:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x6
   657   000007                     	ds	1
   658   000008                     read_prec_or_width@ap:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x7
   662   000008                     	ds	1
   663   000009                     ??_abs:
   664   000009                     ___xxtofl@sign:
   665                           	callstack 0
   666   000009                     read_prec_or_width@c:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x8
   670   000009                     	ds	1
   671   00000A                     ___xxtofl@exp:
   672                           	callstack 0
   673   00000A                     read_prec_or_width@n:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x9
   677   00000A                     	ds	1
   678   00000B                     fputs@s:
   679                           	callstack 0
   680   00000B                     stoa@fp:
   681                           	callstack 0
   682   00000B                     ___xxtofl@arg:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0xA
   686   00000B                     	ds	1
   687   00000C                     fputs@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0xB
   691   00000C                     	ds	1
   692   00000D                     stoa@s:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0xC
   696   00000D                     	ds	1
   697   00000E                     fputs@c:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0xD
   701   00000E                     	ds	1
   702   00000F                     ??_stoa:
   703   00000F                     ?___flmul:
   704                           	callstack 0
   705   00000F                     fputs@i:
   706                           	callstack 0
   707   00000F                     ___flmul@b:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0xE
   711   00000F                     	ds	2
   712   000011                     pad@fp:
   713                           	callstack 0
   714   000011                     stoa@p:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x10
   718   000011                     	ds	2
   719   000013                     pad@buf:
   720                           	callstack 0
   721   000013                     stoa@w:
   722                           	callstack 0
   723   000013                     ___flmul@a:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x12
   727   000013                     	ds	1
   728   000014                     pad@p:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x13
   732   000014                     	ds	1
   733   000015                     stoa@cp:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x14
   737   000015                     	ds	1
   738   000016                     ??_pad:
   739                           
   740                           ; 1 bytes @ 0x15
   741   000016                     	ds	1
   742   000017                     ??___flmul:
   743   000017                     pad@i:
   744                           	callstack 0
   745   000017                     stoa@l:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x16
   749   000017                     	ds	2
   750   000019                     dtoa@fp:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x18
   754   000019                     	ds	2
   755   00001B                     ___flmul@sign:
   756                           	callstack 0
   757   00001B                     dtoa@d:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x1A
   761   00001B                     	ds	1
   762   00001C                     ___flmul@grs:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x1B
   766   00001C                     	ds	1
   767   00001D                     _dtoa$2363:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x1C
   771   00001D                     	ds	2
   772   00001F                     dtoa@w:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x1E
   776   00001F                     	ds	1
   777   000020                     ___flmul@aexp:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x1F
   781   000020                     	ds	1
   782   000021                     ___flmul@bexp:
   783                           	callstack 0
   784   000021                     dtoa@p:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x20
   788   000021                     	ds	1
   789   000022                     dtoa@s:
   790                           	callstack 0
   791   000022                     ___flmul@prod:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x21
   795   000022                     	ds	1
   796   000023                     dtoa@i:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x22
   800   000023                     	ds	2
   801   000025                     vfpfcnvrt@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x24
   805   000025                     	ds	1
   806   000026                     ___flmul@temp:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x25
   810   000026                     	ds	1
   811   000027                     vfpfcnvrt@fmt:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x26
   815   000027                     	ds	1
   816   000028                     ?___fldiv:
   817                           	callstack 0
   818   000028                     vfpfcnvrt@ap:
   819                           	callstack 0
   820   000028                     ___fldiv@b:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x27
   824   000028                     	ds	1
   825   000029                     ??_vfpfcnvrt:
   826                           
   827                           ; 1 bytes @ 0x28
   828   000029                     	ds	1
   829   00002A                     vfpfcnvrt@convarg:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x29
   833   00002A                     	ds	2
   834   00002C                     ___fldiv@a:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x2B
   838   00002C                     	ds	2
   839   00002E                     vfpfcnvrt@cp:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x2D
   843   00002E                     	ds	1
   844   00002F                     vfpfcnvrt@done:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x2E
   848   00002F                     	ds	1
   849   000030                     ??___fldiv:
   850   000030                     ?_vfprintf:
   851                           	callstack 0
   852   000030                     vfprintf@fp:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x2F
   856   000030                     	ds	2
   857   000032                     vfprintf@fmt:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0x31
   861   000032                     	ds	1
   862   000033                     vfprintf@ap:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x32
   866   000033                     	ds	1
   867   000034                     vfprintf@cfmt:
   868                           	callstack 0
   869   000034                     ___fldiv@rem:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x33
   873   000034                     	ds	1
   874   000035                     ?_printf:
   875                           	callstack 0
   876   000035                     ?_sprintf:
   877                           	callstack 0
   878   000035                     sprintf@s:
   879                           	callstack 0
   880   000035                     printf@fmt:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x34
   884   000035                     	ds	1
   885   000036                     sprintf@fmt:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x35
   889   000036                     	ds	2
   890   000038                     ___fldiv@sign:
   891                           	callstack 0
   892   000038                     printf@ap:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x37
   896   000038                     	ds	1
   897   000039                     ___fldiv@new_exp:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x38
   901   000039                     	ds	2
   902   00003B                     sprintf@ap:
   903                           	callstack 0
   904   00003B                     ___fldiv@grs:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x3A
   908   00003B                     	ds	1
   909   00003C                     sprintf@f:
   910                           	callstack 0
   911                           
   912                           ; 12 bytes @ 0x3B
   913   00003C                     	ds	3
   914   00003F                     ___fldiv@bexp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x3E
   918   00003F                     	ds	1
   919   000040                     ___fldiv@aexp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x3F
   923   000040                     	ds	1
   924   000041                     ?___fladd:
   925                           	callstack 0
   926   000041                     ___fladd@b:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x40
   930   000041                     	ds	4
   931   000045                     ___fladd@a:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x44
   935   000045                     	ds	3
   936   000048                     moveDisplay@where:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x47
   940   000048                     	ds	1
   941   000049                     ??_moveDisplay:
   942   000049                     ??___fladd:
   943                           
   944                           ; 1 bytes @ 0x48
   945   000049                     	ds	4
   946   00004D                     ___fladd@signs:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x4C
   950   00004D                     	ds	1
   951   00004E                     ___fladd@aexp:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x4D
   955   00004E                     	ds	1
   956   00004F                     ___fladd@bexp:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x4E
   960   00004F                     	ds	1
   961   000050                     ___fladd@grs:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x4F
   965   000050                     	ds	1
   966   000051                     ?___flsub:
   967                           	callstack 0
   968   000051                     ?___sindf:
   969                           	callstack 0
   970   000051                     ?___cosdf:
   971                           	callstack 0
   972   000051                     ?___fltol:
   973                           	callstack 0
   974   000051                     ___fltol@f1:
   975                           	callstack 0
   976   000051                     ___flsub@b:
   977                           	callstack 0
   978   000051                     ___cosdf@x:
   979                           	callstack 0
   980   000051                     ___sindf@x:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x50
   984   000051                     	ds	4
   985   000055                     ??___fltol:
   986   000055                     ___flsub@a:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x54
   990   000055                     	ds	4
   991   000059                     ___fltol@sign1:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x58
   995   000059                     	ds	1
   996   00005A                     ___fltol@exp1:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x59
  1000   00005A                     	ds	1
  1001   00005B                     ??___rem_pio2f:
  1002                           
  1003                           ; 1 bytes @ 0x5A
  1004   00005B                     	ds	2
  1005   00005D                     ??_runDAC:
  1006   00005D                     
  1007                           ; 1 bytes @ 0x5C
  1008   00005D                     	ds	1
  1009   00005E                     ??_main:
  1010                           
  1011                           ; 1 bytes @ 0x5D
  1012   00005E                     	ds	2
  1013                           
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 10 in file "main.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  menuI           1   96[BANK0 ] unsigned char 
  1024 ;;  setUpAgain      1   95[BANK0 ] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;Total ram usage:        4 bytes
  1039 ;; Hardware stack levels required when called: 9
  1040 ;; This function calls:
  1041 ;;		_LCD_Init
  1042 ;;		_LCD_ShowString
  1043 ;;		_moveDisplay
  1044 ;;		_runDAC
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text0
  1051   002EB8                     __ptext0:
  1052                           	callstack 0
  1053   002EB8                     _main:
  1054                           	callstack 22
  1055   002EB8                     
  1056                           ;main.c: 12:     TRISCbits.RC0 = 1;
  1057   002EB8  8094               	bsf	148,0,c	;volatile
  1058                           
  1059                           ;main.c: 13:     TRISAbits.RA4 = 1;
  1060   002EBA  8892               	bsf	146,4,c	;volatile
  1061                           
  1062                           ;main.c: 14:     TRISAbits.RA3 = 1;
  1063   002EBC  8692               	bsf	146,3,c	;volatile
  1064                           
  1065                           ;main.c: 15:     TRISAbits.RA2 = 1;
  1066   002EBE  8492               	bsf	146,2,c	;volatile
  1067                           
  1068                           ;main.c: 16:     ANSELAbits.ANSA3 = 0;
  1069   002EC0  010F               	movlb	15	; () banked
  1070   002EC2  9738               	bcf	56,3,b	;volatile
  1071                           
  1072                           ;main.c: 17:     ANSELAbits.ANSA2 = 0;
  1073   002EC4  9538               	bcf	56,2,b	;volatile
  1074   002EC6                     
  1075                           ; BSR set to: 15
  1076                           ;main.c: 20:     LCD_Init();
  1077   002EC6  EC66  F01B         	call	_LCD_Init	;wreg free
  1078   002ECA                     
  1079                           ;main.c: 21:     uint8_t menuI = 0;
  1080   002ECA  0E00               	movlw	0
  1081   002ECC  0100               	movlb	0	; () banked
  1082   002ECE  6FC0               	movwf	main@menuI& (0+255),b
  1083   002ED0                     
  1084                           ; BSR set to: 0
  1085                           ;main.c: 22:     uint8_t setUpAgain = 0;
  1086   002ED0  0E00               	movlw	0
  1087   002ED2  6FBF               	movwf	main@setUpAgain& (0+255),b
  1088   002ED4                     
  1089                           ; BSR set to: 0
  1090                           ;main.c: 25:     moveDisplay(menuI,0);
  1091   002ED4  0E00               	movlw	0
  1092   002ED6  6E48               	movwf	moveDisplay@where^0,c
  1093   002ED8  0E00               	movlw	0
  1094   002EDA  ECF0  F01A         	call	_moveDisplay
  1095   002EDE                     l3631:
  1096                           
  1097                           ;main.c: 28:         if(PORTCbits.RC0){
  1098   002EDE  A082               	btfss	130,0,c	;volatile
  1099   002EE0  EF74  F017         	goto	u4011
  1100   002EE4  EF76  F017         	goto	u4010
  1101   002EE8                     u4011:
  1102   002EE8  EF98  F017         	goto	l3641
  1103   002EEC                     u4010:
  1104   002EEC                     
  1105                           ;main.c: 29:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1106   002EEC  0E03               	movlw	3
  1107   002EEE  6E5F               	movwf	(??_main+1)^0,c
  1108   002EF0  0E08               	movlw	8
  1109   002EF2  6E5E               	movwf	??_main^0,c
  1110   002EF4  0E77               	movlw	119
  1111   002EF6                     u4117:
  1112   002EF6  2EE8               	decfsz	wreg,f,c
  1113   002EF8  D7FE               	bra	u4117
  1114   002EFA  2E5E               	decfsz	??_main^0,f,c
  1115   002EFC  D7FC               	bra	u4117
  1116   002EFE  2E5F               	decfsz	(??_main+1)^0,f,c
  1117   002F00  D7FA               	bra	u4117
  1118   002F02  0000               	nop	
  1119   002F04                     
  1120                           ;main.c: 30:             if(PORTCbits.RC0){
  1121   002F04  A082               	btfss	130,0,c	;volatile
  1122   002F06  EF87  F017         	goto	u4021
  1123   002F0A  EF89  F017         	goto	u4020
  1124   002F0E                     u4021:
  1125   002F0E  EF98  F017         	goto	l3641
  1126   002F12                     u4020:
  1127   002F12                     l28:
  1128   002F12  B082               	btfsc	130,0,c	;volatile
  1129   002F14  EF8E  F017         	goto	u4031
  1130   002F18  EF90  F017         	goto	u4030
  1131   002F1C                     u4031:
  1132   002F1C  EF89  F017         	goto	l28
  1133   002F20                     u4030:
  1134   002F20                     
  1135                           ;main.c: 32:                 menuI = moveDisplay(menuI,2);
  1136   002F20  0E02               	movlw	2
  1137   002F22  6E48               	movwf	moveDisplay@where^0,c
  1138   002F24  0100               	movlb	0	; () banked
  1139   002F26  51C0               	movf	main@menuI& (0+255),w,b
  1140   002F28  ECF0  F01A         	call	_moveDisplay
  1141   002F2C  0100               	movlb	0	; () banked
  1142   002F2E  6FC0               	movwf	main@menuI& (0+255),b
  1143   002F30                     l3641:
  1144                           
  1145                           ;main.c: 35:         if(PORTAbits.RA4){
  1146   002F30  A880               	btfss	128,4,c	;volatile
  1147   002F32  EF9D  F017         	goto	u4041
  1148   002F36  EF9F  F017         	goto	u4040
  1149   002F3A                     u4041:
  1150   002F3A  EFC1  F017         	goto	l3651
  1151   002F3E                     u4040:
  1152   002F3E                     
  1153                           ;main.c: 36:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1154   002F3E  0E03               	movlw	3
  1155   002F40  6E5F               	movwf	(??_main+1)^0,c
  1156   002F42  0E08               	movlw	8
  1157   002F44  6E5E               	movwf	??_main^0,c
  1158   002F46  0E77               	movlw	119
  1159   002F48                     u4127:
  1160   002F48  2EE8               	decfsz	wreg,f,c
  1161   002F4A  D7FE               	bra	u4127
  1162   002F4C  2E5E               	decfsz	??_main^0,f,c
  1163   002F4E  D7FC               	bra	u4127
  1164   002F50  2E5F               	decfsz	(??_main+1)^0,f,c
  1165   002F52  D7FA               	bra	u4127
  1166   002F54  0000               	nop	
  1167   002F56                     
  1168                           ;main.c: 37:             if(PORTAbits.RA4){
  1169   002F56  A880               	btfss	128,4,c	;volatile
  1170   002F58  EFB0  F017         	goto	u4051
  1171   002F5C  EFB2  F017         	goto	u4050
  1172   002F60                     u4051:
  1173   002F60  EFC1  F017         	goto	l3651
  1174   002F64                     u4050:
  1175   002F64                     l33:
  1176   002F64  B880               	btfsc	128,4,c	;volatile
  1177   002F66  EFB7  F017         	goto	u4061
  1178   002F6A  EFB9  F017         	goto	u4060
  1179   002F6E                     u4061:
  1180   002F6E  EFB2  F017         	goto	l33
  1181   002F72                     u4060:
  1182   002F72                     
  1183                           ;main.c: 39:                 menuI = moveDisplay(menuI,1);
  1184   002F72  0E01               	movlw	1
  1185   002F74  6E48               	movwf	moveDisplay@where^0,c
  1186   002F76  0100               	movlb	0	; () banked
  1187   002F78  51C0               	movf	main@menuI& (0+255),w,b
  1188   002F7A  ECF0  F01A         	call	_moveDisplay
  1189   002F7E  0100               	movlb	0	; () banked
  1190   002F80  6FC0               	movwf	main@menuI& (0+255),b
  1191   002F82                     l3651:
  1192                           
  1193                           ;main.c: 42:         if(PORTAbits.RA3){
  1194   002F82  A680               	btfss	128,3,c	;volatile
  1195   002F84  EFC6  F017         	goto	u4071
  1196   002F88  EFC8  F017         	goto	u4070
  1197   002F8C                     u4071:
  1198   002F8C  EF21  F018         	goto	l36
  1199   002F90                     u4070:
  1200   002F90                     
  1201                           ;main.c: 43:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1202   002F90  0E03               	movlw	3
  1203   002F92  6E5F               	movwf	(??_main+1)^0,c
  1204   002F94  0E08               	movlw	8
  1205   002F96  6E5E               	movwf	??_main^0,c
  1206   002F98  0E77               	movlw	119
  1207   002F9A                     u4137:
  1208   002F9A  2EE8               	decfsz	wreg,f,c
  1209   002F9C  D7FE               	bra	u4137
  1210   002F9E  2E5E               	decfsz	??_main^0,f,c
  1211   002FA0  D7FC               	bra	u4137
  1212   002FA2  2E5F               	decfsz	(??_main+1)^0,f,c
  1213   002FA4  D7FA               	bra	u4137
  1214   002FA6  0000               	nop	
  1215   002FA8                     
  1216                           ;main.c: 44:             if(PORTAbits.RA3){
  1217   002FA8  A680               	btfss	128,3,c	;volatile
  1218   002FAA  EFD9  F017         	goto	u4081
  1219   002FAE  EFDB  F017         	goto	u4080
  1220   002FB2                     u4081:
  1221   002FB2  EF21  F018         	goto	l36
  1222   002FB6                     u4080:
  1223   002FB6                     l38:
  1224   002FB6  B680               	btfsc	128,3,c	;volatile
  1225   002FB8  EFE0  F017         	goto	u4091
  1226   002FBC  EFE2  F017         	goto	u4090
  1227   002FC0                     u4091:
  1228   002FC0  EFDB  F017         	goto	l38
  1229   002FC4                     u4090:
  1230   002FC4  EFFD  F017         	goto	l3667
  1231   002FC8                     l3659:
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;main.c: 56:                         LCD_ShowString((char)1, "RB0-A2, BR: 9600");
  1235   002FC8  0E41               	movlw	low STR_1
  1236   002FCA  6E02               	movwf	LCD_ShowString@textData^0,c
  1237   002FCC  5002               	movf	LCD_ShowString@textData^0,w,c
  1238   002FCE  A4D8               	btfss	status,2,c
  1239   002FD0  0E10               	movlw	high __smallconst
  1240   002FD2  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1241   002FD4  0E01               	movlw	1
  1242   002FD6  EC92  F01C         	call	_LCD_ShowString
  1243                           
  1244                           ;main.c: 57:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1245   002FDA  0E52               	movlw	low STR_2
  1246   002FDC  6E02               	movwf	LCD_ShowString@textData^0,c
  1247   002FDE  5002               	movf	LCD_ShowString@textData^0,w,c
  1248   002FE0  A4D8               	btfss	status,2,c
  1249   002FE2  0E10               	movlw	high __smallconst
  1250   002FE4  6E03               	movwf	(LCD_ShowString@textData+1)^0,c
  1251   002FE6  0E02               	movlw	2
  1252   002FE8  EC92  F01C         	call	_LCD_ShowString
  1253   002FEC                     
  1254                           ;main.c: 58:                         runDAC();
  1255   002FEC  EC21  F014         	call	_runDAC	;wreg free
  1256   002FF0                     
  1257                           ;main.c: 59:                         setUpAgain = 1;
  1258   002FF0  0E01               	movlw	1
  1259   002FF2  0100               	movlb	0	; () banked
  1260   002FF4  6FBF               	movwf	main@setUpAgain& (0+255),b
  1261                           
  1262                           ;main.c: 60:                         break;
  1263   002FF6  EF21  F018         	goto	l36
  1264   002FFA                     l3667:
  1265   002FFA  0100               	movlb	0	; () banked
  1266   002FFC  51C0               	movf	main@menuI& (0+255),w,b
  1267                           
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 8, Range of values is 0 to 7
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte           25    13 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274   002FFE  0A00               	xorlw	0	; case 0
  1275   003000  B4D8               	btfsc	status,2,c
  1276   003002  EF21  F018         	goto	l36
  1277   003006  0A01               	xorlw	1	; case 1
  1278   003008  B4D8               	btfsc	status,2,c
  1279   00300A  EF21  F018         	goto	l36
  1280   00300E  0A03               	xorlw	3	; case 2
  1281   003010  B4D8               	btfsc	status,2,c
  1282   003012  EF21  F018         	goto	l36
  1283   003016  0A01               	xorlw	1	; case 3
  1284   003018  B4D8               	btfsc	status,2,c
  1285   00301A  EF21  F018         	goto	l36
  1286   00301E  0A07               	xorlw	7	; case 4
  1287   003020  B4D8               	btfsc	status,2,c
  1288   003022  EFE4  F017         	goto	l3659
  1289   003026  0A01               	xorlw	1	; case 5
  1290   003028  B4D8               	btfsc	status,2,c
  1291   00302A  EF21  F018         	goto	l36
  1292   00302E  0A03               	xorlw	3	; case 6
  1293   003030  B4D8               	btfsc	status,2,c
  1294   003032  EF21  F018         	goto	l36
  1295   003036  0A01               	xorlw	1	; case 7
  1296   003038  B4D8               	btfsc	status,2,c
  1297   00303A  EF21  F018         	goto	l36
  1298   00303E  EF21  F018         	goto	l36
  1299   003042                     l36:
  1300                           
  1301                           ;main.c: 71:         if(PORTAbits.RA2){
  1302   003042  5080               	movf	128,w,c	;volatile
  1303   003044                     
  1304                           ;main.c: 75:         if(setUpAgain){
  1305   003044  0100               	movlb	0	; () banked
  1306   003046  51BF               	movf	main@setUpAgain& (0+255),w,b
  1307   003048  B4D8               	btfsc	status,2,c
  1308   00304A  EF29  F018         	goto	u4101
  1309   00304E  EF2B  F018         	goto	u4100
  1310   003052                     u4101:
  1311   003052  EF6F  F017         	goto	l3631
  1312   003056                     u4100:
  1313   003056                     
  1314                           ; BSR set to: 0
  1315                           ;main.c: 76:         menuI = moveDisplay(menuI,0);
  1316   003056  0E00               	movlw	0
  1317   003058  6E48               	movwf	moveDisplay@where^0,c
  1318   00305A  51C0               	movf	main@menuI& (0+255),w,b
  1319   00305C  ECF0  F01A         	call	_moveDisplay
  1320   003060  0100               	movlb	0	; () banked
  1321   003062  6FC0               	movwf	main@menuI& (0+255),b
  1322   003064                     
  1323                           ; BSR set to: 0
  1324                           ;main.c: 77:         setUpAgain = 0;
  1325   003064  0E00               	movlw	0
  1326   003066  6FBF               	movwf	main@setUpAgain& (0+255),b
  1327   003068  EF6F  F017         	goto	l3631
  1328   00306C  EF00  F000         	goto	start
  1329   003070                     __end_of_main:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _runDAC *****************
  1333 ;; Defined at:
  1334 ;;		line 10 in file "DAC.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  DACindex        1   94[BANK0 ] unsigned char 
  1339 ;;  selectModeDA    1   93[BANK0 ] unsigned char 
  1340 ;;  keepState       1   92[BANK0 ] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;Total ram usage:       12 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 8
  1357 ;; This function calls:
  1358 ;;		_SPI_write
  1359 ;;		___fladd
  1360 ;;		___fldiv
  1361 ;;		___flmul
  1362 ;;		___fltol
  1363 ;;		___xxtofl
  1364 ;;		_printf
  1365 ;;		_sinf
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text1
  1372   002842                     __ptext1:
  1373                           	callstack 0
  1374   002842                     _runDAC:
  1375                           	callstack 22
  1376   002842                     
  1377                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  1378   002842  8094               	bsf	148,0,c	;volatile
  1379                           
  1380                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  1381   002844  8892               	bsf	146,4,c	;volatile
  1382                           
  1383                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  1384   002846  8692               	bsf	146,3,c	;volatile
  1385                           
  1386                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  1387   002848  8492               	bsf	146,2,c	;volatile
  1388                           
  1389                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  1390   00284A  010F               	movlb	15	; () banked
  1391   00284C  9738               	bcf	56,3,b	;volatile
  1392                           
  1393                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  1394   00284E  9538               	bcf	56,2,b	;volatile
  1395                           
  1396                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  1397   002850  9693               	bcf	147,3,c	;volatile
  1398                           
  1399                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  1400   002852  9694               	bcf	148,3,c	;volatile
  1401                           
  1402                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  1403   002854  9A94               	bcf	148,5,c	;volatile
  1404   002856                     
  1405                           ; BSR set to: 15
  1406                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  1407   002856  50C6               	movf	198,w,c	;volatile
  1408   002858  0BF0               	andlw	-16
  1409   00285A  0902               	iorlw	2
  1410   00285C  6EC6               	movwf	198,c	;volatile
  1411   00285E                     
  1412                           ; BSR set to: 15
  1413                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  1414   00285E  98C6               	bcf	198,4,c	;volatile
  1415   002860                     
  1416                           ; BSR set to: 15
  1417                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  1418   002860  8CC7               	bsf	199,6,c	;volatile
  1419   002862                     
  1420                           ; BSR set to: 15
  1421                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  1422   002862  8AC6               	bsf	198,5,c	;volatile
  1423   002864                     
  1424                           ; BSR set to: 15
  1425                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  1426   002864  8139               	bsf	57,0,b	;volatile
  1427   002866                     
  1428                           ; BSR set to: 15
  1429                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  1430   002866  9EC0               	bcf	192,7,c	;volatile
  1431                           
  1432                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  1433   002868  50C0               	movf	192,w,c	;volatile
  1434   00286A  0BF8               	andlw	-8
  1435   00286C  0906               	iorlw	6
  1436   00286E  6EC0               	movwf	192,c	;volatile
  1437                           
  1438                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  1439   002870  50C0               	movf	192,w,c	;volatile
  1440   002872  0BC7               	andlw	-57
  1441   002874  0930               	iorlw	48
  1442   002876  6EC0               	movwf	192,c	;volatile
  1443   002878                     
  1444                           ; BSR set to: 15
  1445                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  1446   002878  80C2               	bsf	194,0,c	;volatile
  1447                           
  1448                           ;DAC.c: 38:     SPBRG1 = 51;
  1449   00287A  0E33               	movlw	51
  1450   00287C  6EAF               	movwf	175,c	;volatile
  1451   00287E                     
  1452                           ; BSR set to: 15
  1453                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  1454   00287E  8EAB               	bsf	171,7,c	;volatile
  1455   002880                     
  1456                           ; BSR set to: 15
  1457                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  1458   002880  98AC               	bcf	172,4,c	;volatile
  1459   002882                     
  1460                           ; BSR set to: 15
  1461                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  1462   002882  8AAC               	bsf	172,5,c	;volatile
  1463   002884                     
  1464                           ; BSR set to: 15
  1465                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  1466   002884  88AB               	bsf	171,4,c	;volatile
  1467   002886                     
  1468                           ; BSR set to: 15
  1469                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  1470   002886  868A               	bsf	138,3,c	;volatile
  1471                           
  1472                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  1473   002888  50C2               	movf	194,w,c	;volatile
  1474   00288A  0B83               	andlw	-125
  1475   00288C  0930               	iorlw	48
  1476   00288E  6EC2               	movwf	194,c	;volatile
  1477                           
  1478                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  1479   002890  0E01               	movlw	1
  1480   002892  0100               	movlb	0	; () banked
  1481   002894  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  1482                           
  1483                           ;DAC.c: 50:     char keepState;;DAC.c: 51:     keepState = 1;
  1484   002896  0E01               	movlw	1
  1485   002898  6FBC               	movwf	runDAC@keepState& (0+255),b
  1486                           
  1487                           ;DAC.c: 52:     uint8_t DACindex = 0;
  1488   00289A  0E00               	movlw	0
  1489   00289C  6FBE               	movwf	runDAC@DACindex& (0+255),b
  1490                           
  1491                           ;DAC.c: 54:     while(keepState){
  1492   00289E  EF3A  F015         	goto	l3619
  1493   0028A2                     l3577:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;DAC.c: 57:                 if(DACindex<255/2){
  1497   0028A2  0E7F               	movlw	127
  1498   0028A4  61BE               	cpfslt	runDAC@DACindex& (0+255),b
  1499   0028A6  EF57  F014         	goto	u3931
  1500   0028AA  EF59  F014         	goto	u3930
  1501   0028AE                     u3931:
  1502   0028AE  EF5C  F014         	goto	l3581
  1503   0028B2                     u3930:
  1504   0028B2                     
  1505                           ; BSR set to: 0
  1506                           ;DAC.c: 58:                     SPI_write(DACindex);
  1507   0028B2  51BE               	movf	runDAC@DACindex& (0+255),w,b
  1508   0028B4  EC47  F01E         	call	_SPI_write
  1509   0028B8                     l3581:
  1510                           
  1511                           ;DAC.c: 60:                 if(DACindex>=255/2){
  1512   0028B8  0E7E               	movlw	126
  1513   0028BA  0100               	movlb	0	; () banked
  1514   0028BC  65BE               	cpfsgt	runDAC@DACindex& (0+255),b
  1515   0028BE  EF63  F014         	goto	u3941
  1516   0028C2  EF65  F014         	goto	u3940
  1517   0028C6                     u3941:
  1518   0028C6  EFF9  F014         	goto	l178
  1519   0028CA                     u3940:
  1520   0028CA                     
  1521                           ; BSR set to: 0
  1522                           ;DAC.c: 61:                     SPI_write(255-DACindex);
  1523   0028CA  51BE               	movf	runDAC@DACindex& (0+255),w,b
  1524   0028CC  0AFF               	xorlw	255
  1525   0028CE  EC47  F01E         	call	_SPI_write
  1526   0028D2  EFF9  F014         	goto	l178
  1527   0028D6                     l3585:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  1531   0028D6  0E00               	movlw	0
  1532   0028D8  6E2C               	movwf	___fldiv@a^0,c
  1533   0028DA  0E00               	movlw	0
  1534   0028DC  6E2D               	movwf	(___fldiv@a+1)^0,c
  1535   0028DE  0E7F               	movlw	127
  1536   0028E0  6E2E               	movwf	(___fldiv@a+2)^0,c
  1537   0028E2  0E43               	movlw	67
  1538   0028E4  6E2F               	movwf	(___fldiv@a+3)^0,c
  1539   0028E6  0EC3               	movlw	195
  1540   0028E8  6E13               	movwf	___flmul@a^0,c
  1541   0028EA  0EF5               	movlw	245
  1542   0028EC  6E14               	movwf	(___flmul@a+1)^0,c
  1543   0028EE  0EC8               	movlw	200
  1544   0028F0  6E15               	movwf	(___flmul@a+2)^0,c
  1545   0028F2  0E40               	movlw	64
  1546   0028F4  6E16               	movwf	(___flmul@a+3)^0,c
  1547   0028F6  51BE               	movf	runDAC@DACindex& (0+255),w,b
  1548   0028F8  6E01               	movwf	___xxtofl@val^0,c
  1549   0028FA  6A02               	clrf	(___xxtofl@val+1)^0,c
  1550   0028FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1551   0028FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1552   002900  0E01               	movlw	1
  1553   002902  EC38  F018         	call	___xxtofl
  1554   002906  C001  F00F         	movff	?___xxtofl,___flmul@b
  1555   00290A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1556   00290E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1557   002912  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1558   002916  EC31  F00D         	call	___flmul	;wreg free
  1559   00291A  C00F  F028         	movff	?___flmul,___fldiv@b
  1560   00291E  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1561   002922  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1562   002926  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1563   00292A  EC27  F011         	call	___fldiv	;wreg free
  1564   00292E  C028  F0B4         	movff	?___fldiv,_runDAC$2730
  1565   002932  C029  F0B5         	movff	?___fldiv+1,_runDAC$2730+1
  1566   002936  C02A  F0B6         	movff	?___fldiv+2,_runDAC$2730+2
  1567   00293A  C02B  F0B7         	movff	?___fldiv+3,_runDAC$2730+3
  1568   00293E                     
  1569                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  1570   00293E  C0B4  F09A         	movff	_runDAC$2730,sinf@x
  1571   002942  C0B5  F09B         	movff	_runDAC$2730+1,sinf@x+1
  1572   002946  C0B6  F09C         	movff	_runDAC$2730+2,sinf@x+2
  1573   00294A  C0B7  F09D         	movff	_runDAC$2730+3,sinf@x+3
  1574   00294E  EC4C  F008         	call	_sinf	;wreg free
  1575   002952  C09A  F0B8         	movff	?_sinf,_runDAC$2731
  1576   002956  C09B  F0B9         	movff	?_sinf+1,_runDAC$2731+1
  1577   00295A  C09C  F0BA         	movff	?_sinf+2,_runDAC$2731+2
  1578   00295E  C09D  F0BB         	movff	?_sinf+3,_runDAC$2731+3
  1579   002962                     
  1580                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  1581   002962  0E00               	movlw	0
  1582   002964  6E45               	movwf	___fladd@a^0,c
  1583   002966  0E00               	movlw	0
  1584   002968  6E46               	movwf	(___fladd@a+1)^0,c
  1585   00296A  0EFE               	movlw	254
  1586   00296C  6E47               	movwf	(___fladd@a+2)^0,c
  1587   00296E  0E42               	movlw	66
  1588   002970  6E48               	movwf	(___fladd@a+3)^0,c
  1589   002972  0E00               	movlw	0
  1590   002974  6E13               	movwf	___flmul@a^0,c
  1591   002976  0E00               	movlw	0
  1592   002978  6E14               	movwf	(___flmul@a+1)^0,c
  1593   00297A  0EFE               	movlw	254
  1594   00297C  6E15               	movwf	(___flmul@a+2)^0,c
  1595   00297E  0E42               	movlw	66
  1596   002980  6E16               	movwf	(___flmul@a+3)^0,c
  1597   002982  C0B8  F00F         	movff	_runDAC$2731,___flmul@b
  1598   002986  C0B9  F010         	movff	_runDAC$2731+1,___flmul@b+1
  1599   00298A  C0BA  F011         	movff	_runDAC$2731+2,___flmul@b+2
  1600   00298E  C0BB  F012         	movff	_runDAC$2731+3,___flmul@b+3
  1601   002992  EC31  F00D         	call	___flmul	;wreg free
  1602   002996  C00F  F041         	movff	?___flmul,___fladd@b
  1603   00299A  C010  F042         	movff	?___flmul+1,___fladd@b+1
  1604   00299E  C011  F043         	movff	?___flmul+2,___fladd@b+2
  1605   0029A2  C012  F044         	movff	?___flmul+3,___fladd@b+3
  1606   0029A6  ECD1  F00A         	call	___fladd	;wreg free
  1607   0029AA  C041  F051         	movff	?___fladd,___fltol@f1
  1608   0029AE  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  1609   0029B2  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  1610   0029B6  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  1611   0029BA  EC6D  F01A         	call	___fltol	;wreg free
  1612   0029BE  5051               	movf	?___fltol^0,w,c
  1613   0029C0  EC47  F01E         	call	_SPI_write
  1614                           
  1615                           ;DAC.c: 66:                 break;
  1616   0029C4  EFF9  F014         	goto	l178
  1617   0029C8                     l3591:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  1621   0029C8  51BE               	movf	runDAC@DACindex& (0+255),w,b
  1622   0029CA  0AFF               	xorlw	255
  1623   0029CC  EC47  F01E         	call	_SPI_write
  1624                           
  1625                           ;DAC.c: 69:                 break;
  1626   0029D0  EFF9  F014         	goto	l178
  1627   0029D4                     l3595:
  1628                           
  1629                           ; BSR set to: 0
  1630   0029D4  51BD               	movf	runDAC@selectModeDAC& (0+255),w,b
  1631                           
  1632                           ; Switch size 1, requested type "simple"
  1633                           ; Number of cases is 3, Range of values is 1 to 3
  1634                           ; switch strategies available:
  1635                           ; Name         Instructions Cycles
  1636                           ; simple_byte           10     6 (average)
  1637                           ;	Chosen strategy is simple_byte
  1638   0029D6  0A01               	xorlw	1	; case 1
  1639   0029D8  B4D8               	btfsc	status,2,c
  1640   0029DA  EF51  F014         	goto	l3577
  1641   0029DE  0A03               	xorlw	3	; case 2
  1642   0029E0  B4D8               	btfsc	status,2,c
  1643   0029E2  EF6B  F014         	goto	l3585
  1644   0029E6  0A01               	xorlw	1	; case 3
  1645   0029E8  B4D8               	btfsc	status,2,c
  1646   0029EA  EFE4  F014         	goto	l3591
  1647   0029EE  EFF9  F014         	goto	l178
  1648   0029F2                     l178:
  1649                           
  1650                           ;DAC.c: 71:         GODONE = 1;
  1651   0029F2  82C2               	bsf	4034,1,c	;volatile
  1652   0029F4                     l181:
  1653   0029F4  B2C2               	btfsc	4034,1,c	;volatile
  1654   0029F6  EFFF  F014         	goto	u3951
  1655   0029FA  EF01  F015         	goto	u3950
  1656   0029FE                     u3951:
  1657   0029FE  EFFA  F014         	goto	l181
  1658   002A02                     u3950:
  1659   002A02                     
  1660                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  1661   002A02  0E85               	movlw	low STR_3
  1662   002A04  6E35               	movwf	printf@fmt^0,c
  1663   002A06  CFC4 F036          	movff	4036,?_printf+1	;volatile
  1664   002A0A  6A37               	clrf	(?_printf+2)^0,c
  1665   002A0C  EC2E  F01F         	call	_printf	;wreg free
  1666   002A10                     
  1667                           ;DAC.c: 75:         if(PORTCbits.RC0){
  1668   002A10  A082               	btfss	130,0,c	;volatile
  1669   002A12  EF0D  F015         	goto	u3961
  1670   002A16  EF0F  F015         	goto	u3960
  1671   002A1A                     u3961:
  1672   002A1A  EF12  F015         	goto	l3603
  1673   002A1E                     u3960:
  1674   002A1E                     
  1675                           ;DAC.c: 76:             selectModeDAC = 1;
  1676   002A1E  0E01               	movlw	1
  1677   002A20  0100               	movlb	0	; () banked
  1678   002A22  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  1679   002A24                     l3603:
  1680                           
  1681                           ;DAC.c: 78:         if(PORTAbits.RA4){
  1682   002A24  A880               	btfss	128,4,c	;volatile
  1683   002A26  EF17  F015         	goto	u3971
  1684   002A2A  EF19  F015         	goto	u3970
  1685   002A2E                     u3971:
  1686   002A2E  EF1C  F015         	goto	l3607
  1687   002A32                     u3970:
  1688   002A32                     
  1689                           ;DAC.c: 79:             selectModeDAC = 2;
  1690   002A32  0E02               	movlw	2
  1691   002A34  0100               	movlb	0	; () banked
  1692   002A36  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  1693   002A38                     l3607:
  1694                           
  1695                           ;DAC.c: 81:         if(PORTAbits.RA3){
  1696   002A38  A680               	btfss	128,3,c	;volatile
  1697   002A3A  EF21  F015         	goto	u3981
  1698   002A3E  EF23  F015         	goto	u3980
  1699   002A42                     u3981:
  1700   002A42  EF26  F015         	goto	l3611
  1701   002A46                     u3980:
  1702   002A46                     
  1703                           ;DAC.c: 82:             selectModeDAC = 3;
  1704   002A46  0E03               	movlw	3
  1705   002A48  0100               	movlb	0	; () banked
  1706   002A4A  6FBD               	movwf	runDAC@selectModeDAC& (0+255),b
  1707   002A4C                     l3611:
  1708                           
  1709                           ;DAC.c: 84:         if(PORTAbits.RA2){
  1710   002A4C  A480               	btfss	128,2,c	;volatile
  1711   002A4E  EF2B  F015         	goto	u3991
  1712   002A52  EF2D  F015         	goto	u3990
  1713   002A56                     u3991:
  1714   002A56  EF30  F015         	goto	l3615
  1715   002A5A                     u3990:
  1716   002A5A                     
  1717                           ;DAC.c: 85:             keepState = 0;
  1718   002A5A  0E00               	movlw	0
  1719   002A5C  0100               	movlb	0	; () banked
  1720   002A5E  6FBC               	movwf	runDAC@keepState& (0+255),b
  1721   002A60                     l3615:
  1722                           
  1723                           ;DAC.c: 87:         DACindex++;
  1724   002A60  0100               	movlb	0	; () banked
  1725   002A62  2BBE               	incf	runDAC@DACindex& (0+255),f,b
  1726   002A64                     
  1727                           ; BSR set to: 0
  1728                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  1729   002A64  0E68               	movlw	104
  1730   002A66  6E5D               	movwf	??_runDAC^0,c
  1731   002A68  0EE4               	movlw	228
  1732   002A6A                     u4147:
  1733   002A6A  2EE8               	decfsz	wreg,f,c
  1734   002A6C  D7FE               	bra	u4147
  1735   002A6E  2E5D               	decfsz	??_runDAC^0,f,c
  1736   002A70  D7FC               	bra	u4147
  1737   002A72  D000               	nop2	
  1738   002A74                     l3619:
  1739                           
  1740                           ;DAC.c: 54:     while(keepState){
  1741   002A74  0100               	movlb	0	; () banked
  1742   002A76  51BC               	movf	runDAC@keepState& (0+255),w,b
  1743   002A78  A4D8               	btfss	status,2,c
  1744   002A7A  EF41  F015         	goto	u4001
  1745   002A7E  EF43  F015         	goto	u4000
  1746   002A82                     u4001:
  1747   002A82  EFEA  F014         	goto	l3595
  1748   002A86                     u4000:
  1749   002A86                     
  1750                           ; BSR set to: 0
  1751   002A86  0012               	return		;funcret
  1752   002A88                     __end_of_runDAC:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _sinf *****************
  1756 ;; Defined at:
  1757 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sinf.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  x               4   58[BANK0 ] float 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  ux              4   80[BANK0 ] struct .
  1762 ;;  y               4   76[BANK0 ] struct .
  1763 ;;  sign            1   71[BANK0 ] _Bool 
  1764 ;;  n               1   70[BANK0 ] unsigned char 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  4   58[BANK0 ] float 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1774 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;Total ram usage:       26 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 3
  1781 ;; This function calls:
  1782 ;;		___cosdf
  1783 ;;		___fladd
  1784 ;;		___flneg
  1785 ;;		___rem_pio2f
  1786 ;;		___sindf
  1787 ;; This function is called by:
  1788 ;;		_runDAC
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text2
  1793   001098                     __ptext2:
  1794                           	callstack 0
  1795   001098                     _sinf:
  1796                           	callstack 26
  1797   001098  C09A  F0B0         	movff	sinf@x,sinf@ux
  1798   00109C  C09B  F0B1         	movff	sinf@x+1,sinf@ux+1
  1799   0010A0  C09C  F0B2         	movff	sinf@x+2,sinf@ux+2
  1800   0010A4  C09D  F0B3         	movff	sinf@x+3,sinf@ux+3
  1801   0010A8  0100               	movlb	0	; () banked
  1802   0010AA  BFB3               	btfsc	(sinf@ux+3)& (0+255),7,b
  1803   0010AC  EF5A  F008         	goto	u3521
  1804   0010B0  EF5D  F008         	goto	u3520
  1805   0010B4                     u3521:
  1806   0010B4  0E01               	movlw	1
  1807   0010B6  EF5E  F008         	goto	u3530
  1808   0010BA                     u3520:
  1809   0010BA  0E00               	movlw	0
  1810   0010BC                     u3530:
  1811   0010BC  6FA7               	movwf	sinf@sign& (0+255),b
  1812   0010BE                     
  1813                           ; BSR set to: 0
  1814   0010BE  9FB3               	bcf	(sinf@ux+3)& (0+255),7,b
  1815   0010C0                     
  1816                           ; BSR set to: 0
  1817   0010C0  0EDB               	movlw	219
  1818   0010C2  5DB0               	subwf	sinf@ux& (0+255),w,b
  1819   0010C4  0E0F               	movlw	15
  1820   0010C6  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  1821   0010C8  0E49               	movlw	73
  1822   0010CA  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  1823   0010CC  0E3F               	movlw	63
  1824   0010CE  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  1825   0010D0  B0D8               	btfsc	status,0,c
  1826   0010D2  EF6D  F008         	goto	u3541
  1827   0010D6  EF6F  F008         	goto	u3540
  1828   0010DA                     u3541:
  1829   0010DA  EF98  F008         	goto	l3265
  1830   0010DE                     u3540:
  1831   0010DE                     
  1832                           ; BSR set to: 0
  1833   0010DE  0E80               	movlw	128
  1834   0010E0  5DB2               	subwf	(sinf@ux+2)& (0+255),w,b
  1835   0010E2  0E39               	movlw	57
  1836   0010E4  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  1837   0010E6  B0D8               	btfsc	status,0,c
  1838   0010E8  EF78  F008         	goto	u3551
  1839   0010EC  EF7A  F008         	goto	u3550
  1840   0010F0                     u3551:
  1841   0010F0  EF84  F008         	goto	l3261
  1842   0010F4                     u3550:
  1843   0010F4                     
  1844                           ; BSR set to: 0
  1845   0010F4  C09A  F09A         	movff	sinf@x,?_sinf
  1846   0010F8  C09B  F09B         	movff	sinf@x+1,?_sinf+1
  1847   0010FC  C09C  F09C         	movff	sinf@x+2,?_sinf+2
  1848   001100  C09D  F09D         	movff	sinf@x+3,?_sinf+3
  1849   001104  EFD0  F00A         	goto	l1051
  1850   001108                     l3261:
  1851                           
  1852                           ; BSR set to: 0
  1853   001108  C09A  F051         	movff	sinf@x,___sindf@x
  1854   00110C  C09B  F052         	movff	sinf@x+1,___sindf@x+1
  1855   001110  C09C  F053         	movff	sinf@x+2,___sindf@x+2
  1856   001114  C09D  F054         	movff	sinf@x+3,___sindf@x+3
  1857   001118  EC44  F015         	call	___sindf	;wreg free
  1858   00111C  C051  F09A         	movff	?___sindf,?_sinf
  1859   001120  C052  F09B         	movff	?___sindf+1,?_sinf+1
  1860   001124  C053  F09C         	movff	?___sindf+2,?_sinf+2
  1861   001128  C054  F09D         	movff	?___sindf+3,?_sinf+3
  1862   00112C  EFD0  F00A         	goto	l1051
  1863   001130                     l3265:
  1864                           
  1865                           ; BSR set to: 0
  1866   001130  0ED2               	movlw	210
  1867   001132  5DB0               	subwf	sinf@ux& (0+255),w,b
  1868   001134  0E53               	movlw	83
  1869   001136  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  1870   001138  0E7B               	movlw	123
  1871   00113A  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  1872   00113C  0E40               	movlw	64
  1873   00113E  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  1874   001140  B0D8               	btfsc	status,0,c
  1875   001142  EFA5  F008         	goto	u3561
  1876   001146  EFA7  F008         	goto	u3560
  1877   00114A                     u3561:
  1878   00114A  EF8A  F009         	goto	l3295
  1879   00114E                     u3560:
  1880   00114E                     
  1881                           ; BSR set to: 0
  1882   00114E  0EE4               	movlw	228
  1883   001150  5DB0               	subwf	sinf@ux& (0+255),w,b
  1884   001152  0ECB               	movlw	203
  1885   001154  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  1886   001156  0E16               	movlw	22
  1887   001158  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  1888   00115A  0E40               	movlw	64
  1889   00115C  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  1890   00115E  B0D8               	btfsc	status,0,c
  1891   001160  EFB4  F008         	goto	u3571
  1892   001164  EFB6  F008         	goto	u3570
  1893   001168                     u3571:
  1894   001168  EF24  F009         	goto	l3285
  1895   00116C                     u3570:
  1896   00116C                     
  1897                           ; BSR set to: 0
  1898   00116C  51A7               	movf	sinf@sign& (0+255),w,b
  1899   00116E  B4D8               	btfsc	status,2,c
  1900   001170  EFBC  F008         	goto	u3581
  1901   001174  EFBE  F008         	goto	u3580
  1902   001178                     u3581:
  1903   001178  EFF6  F008         	goto	l3279
  1904   00117C                     u3580:
  1905   00117C                     
  1906                           ; BSR set to: 0
  1907   00117C  0EDB               	movlw	219
  1908   00117E  6E45               	movwf	___fladd@a^0,c
  1909   001180  0E0F               	movlw	15
  1910   001182  6E46               	movwf	(___fladd@a+1)^0,c
  1911   001184  0EC9               	movlw	201
  1912   001186  6E47               	movwf	(___fladd@a+2)^0,c
  1913   001188  0E3F               	movlw	63
  1914   00118A  6E48               	movwf	(___fladd@a+3)^0,c
  1915   00118C  C09A  F041         	movff	sinf@x,___fladd@b
  1916   001190  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  1917   001194  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  1918   001198  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  1919   00119C  ECD1  F00A         	call	___fladd	;wreg free
  1920   0011A0  C041  F0A8         	movff	?___fladd,_sinf$2733
  1921   0011A4  C042  F0A9         	movff	?___fladd+1,_sinf$2733+1
  1922   0011A8  C043  F0AA         	movff	?___fladd+2,_sinf$2733+2
  1923   0011AC  C044  F0AB         	movff	?___fladd+3,_sinf$2733+3
  1924   0011B0                     l3273:
  1925   0011B0  C0A8  F051         	movff	_sinf$2733,___cosdf@x
  1926   0011B4  C0A9  F052         	movff	_sinf$2733+1,___cosdf@x+1
  1927   0011B8  C0AA  F053         	movff	_sinf$2733+2,___cosdf@x+2
  1928   0011BC  C0AB  F054         	movff	_sinf$2733+3,___cosdf@x+3
  1929   0011C0  EC5D  F016         	call	___cosdf	;wreg free
  1930   0011C4  C051  F078         	movff	?___cosdf,___flneg@f1
  1931   0011C8  C052  F079         	movff	?___cosdf+1,___flneg@f1+1
  1932   0011CC  C053  F07A         	movff	?___cosdf+2,___flneg@f1+2
  1933   0011D0  C054  F07B         	movff	?___cosdf+3,___flneg@f1+3
  1934   0011D4  EC66  F01E         	call	___flneg	;wreg free
  1935   0011D8  C078  F09A         	movff	?___flneg,?_sinf
  1936   0011DC  C079  F09B         	movff	?___flneg+1,?_sinf+1
  1937   0011E0  C07A  F09C         	movff	?___flneg+2,?_sinf+2
  1938   0011E4  C07B  F09D         	movff	?___flneg+3,?_sinf+3
  1939   0011E8  EFD0  F00A         	goto	l1051
  1940   0011EC                     l3279:
  1941                           
  1942                           ; BSR set to: 0
  1943   0011EC  C09A  F041         	movff	sinf@x,___fladd@b
  1944   0011F0  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  1945   0011F4  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  1946   0011F8  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  1947   0011FC  0EDB               	movlw	219
  1948   0011FE  6E45               	movwf	___fladd@a^0,c
  1949   001200  0E0F               	movlw	15
  1950   001202  6E46               	movwf	(___fladd@a+1)^0,c
  1951   001204  0EC9               	movlw	201
  1952   001206  6E47               	movwf	(___fladd@a+2)^0,c
  1953   001208  0EBF               	movlw	191
  1954   00120A  6E48               	movwf	(___fladd@a+3)^0,c
  1955   00120C  ECD1  F00A         	call	___fladd	;wreg free
  1956   001210  C041  F0A8         	movff	?___fladd,_sinf$2733
  1957   001214  C042  F0A9         	movff	?___fladd+1,_sinf$2733+1
  1958   001218  C043  F0AA         	movff	?___fladd+2,_sinf$2733+2
  1959   00121C  C044  F0AB         	movff	?___fladd+3,_sinf$2733+3
  1960   001220                     l3281:
  1961   001220  C0A8  F051         	movff	_sinf$2733,___cosdf@x
  1962   001224  C0A9  F052         	movff	_sinf$2733+1,___cosdf@x+1
  1963   001228  C0AA  F053         	movff	_sinf$2733+2,___cosdf@x+2
  1964   00122C  C0AB  F054         	movff	_sinf$2733+3,___cosdf@x+3
  1965   001230  EC5D  F016         	call	___cosdf	;wreg free
  1966   001234  C051  F09A         	movff	?___cosdf,?_sinf
  1967   001238  C052  F09B         	movff	?___cosdf+1,?_sinf+1
  1968   00123C  C053  F09C         	movff	?___cosdf+2,?_sinf+2
  1969   001240  C054  F09D         	movff	?___cosdf+3,?_sinf+3
  1970   001244  EFD0  F00A         	goto	l1051
  1971   001248                     l3285:
  1972                           
  1973                           ; BSR set to: 0
  1974   001248  51A7               	movf	sinf@sign& (0+255),w,b
  1975   00124A  A4D8               	btfss	status,2,c
  1976   00124C  EF2A  F009         	goto	u3591
  1977   001250  EF2C  F009         	goto	u3590
  1978   001254                     u3591:
  1979   001254  EF52  F009         	goto	l3289
  1980   001258                     u3590:
  1981   001258                     
  1982                           ; BSR set to: 0
  1983   001258  0EDB               	movlw	219
  1984   00125A  6E45               	movwf	___fladd@a^0,c
  1985   00125C  0E0F               	movlw	15
  1986   00125E  6E46               	movwf	(___fladd@a+1)^0,c
  1987   001260  0E49               	movlw	73
  1988   001262  6E47               	movwf	(___fladd@a+2)^0,c
  1989   001264  0EC0               	movlw	192
  1990   001266  6E48               	movwf	(___fladd@a+3)^0,c
  1991   001268  C09A  F041         	movff	sinf@x,___fladd@b
  1992   00126C  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  1993   001270  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  1994   001274  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  1995   001278  ECD1  F00A         	call	___fladd	;wreg free
  1996   00127C  C041  F078         	movff	?___fladd,___flneg@f1
  1997   001280  C042  F079         	movff	?___fladd+1,___flneg@f1+1
  1998   001284  C043  F07A         	movff	?___fladd+2,___flneg@f1+2
  1999   001288  C044  F07B         	movff	?___fladd+3,___flneg@f1+3
  2000   00128C  EC66  F01E         	call	___flneg	;wreg free
  2001   001290  C078  F09E         	movff	?___flneg,_sinf$2486
  2002   001294  C079  F09F         	movff	?___flneg+1,_sinf$2486+1
  2003   001298  C07A  F0A0         	movff	?___flneg+2,_sinf$2486+2
  2004   00129C  C07B  F0A1         	movff	?___flneg+3,_sinf$2486+3
  2005   0012A0  EF76  F009         	goto	l3291
  2006   0012A4                     l3289:
  2007                           
  2008                           ; BSR set to: 0
  2009   0012A4  0EDB               	movlw	219
  2010   0012A6  6E45               	movwf	___fladd@a^0,c
  2011   0012A8  0E0F               	movlw	15
  2012   0012AA  6E46               	movwf	(___fladd@a+1)^0,c
  2013   0012AC  0E49               	movlw	73
  2014   0012AE  6E47               	movwf	(___fladd@a+2)^0,c
  2015   0012B0  0E40               	movlw	64
  2016   0012B2  6E48               	movwf	(___fladd@a+3)^0,c
  2017   0012B4  C09A  F041         	movff	sinf@x,___fladd@b
  2018   0012B8  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2019   0012BC  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2020   0012C0  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2021   0012C4  ECD1  F00A         	call	___fladd	;wreg free
  2022   0012C8  C041  F078         	movff	?___fladd,___flneg@f1
  2023   0012CC  C042  F079         	movff	?___fladd+1,___flneg@f1+1
  2024   0012D0  C043  F07A         	movff	?___fladd+2,___flneg@f1+2
  2025   0012D4  C044  F07B         	movff	?___fladd+3,___flneg@f1+3
  2026   0012D8  EC66  F01E         	call	___flneg	;wreg free
  2027   0012DC  C078  F09E         	movff	?___flneg,_sinf$2486
  2028   0012E0  C079  F09F         	movff	?___flneg+1,_sinf$2486+1
  2029   0012E4  C07A  F0A0         	movff	?___flneg+2,_sinf$2486+2
  2030   0012E8  C07B  F0A1         	movff	?___flneg+3,_sinf$2486+3
  2031   0012EC                     l3291:
  2032   0012EC  C09E  F051         	movff	_sinf$2486,___sindf@x
  2033   0012F0  C09F  F052         	movff	_sinf$2486+1,___sindf@x+1
  2034   0012F4  C0A0  F053         	movff	_sinf$2486+2,___sindf@x+2
  2035   0012F8  C0A1  F054         	movff	_sinf$2486+3,___sindf@x+3
  2036   0012FC  EC44  F015         	call	___sindf	;wreg free
  2037   001300  C051  F09A         	movff	?___sindf,?_sinf
  2038   001304  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2039   001308  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2040   00130C  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2041   001310  EFD0  F00A         	goto	l1051
  2042   001314                     l3295:
  2043                           
  2044                           ; BSR set to: 0
  2045   001314  0ED6               	movlw	214
  2046   001316  5DB0               	subwf	sinf@ux& (0+255),w,b
  2047   001318  0E31               	movlw	49
  2048   00131A  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2049   00131C  0EE2               	movlw	226
  2050   00131E  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2051   001320  0E40               	movlw	64
  2052   001322  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2053   001324  B0D8               	btfsc	status,0,c
  2054   001326  EF97  F009         	goto	u3601
  2055   00132A  EF99  F009         	goto	u3600
  2056   00132E                     u3601:
  2057   00132E  EF3A  F00A         	goto	l3325
  2058   001332                     u3600:
  2059   001332                     
  2060                           ; BSR set to: 0
  2061   001332  0EE0               	movlw	224
  2062   001334  5DB0               	subwf	sinf@ux& (0+255),w,b
  2063   001336  0EED               	movlw	237
  2064   001338  59B1               	subwfb	(sinf@ux+1)& (0+255),w,b
  2065   00133A  0EAF               	movlw	175
  2066   00133C  59B2               	subwfb	(sinf@ux+2)& (0+255),w,b
  2067   00133E  0E40               	movlw	64
  2068   001340  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2069   001342  B0D8               	btfsc	status,0,c
  2070   001344  EFA6  F009         	goto	u3611
  2071   001348  EFA8  F009         	goto	u3610
  2072   00134C                     u3611:
  2073   00134C  EFE8  F009         	goto	l3315
  2074   001350                     u3610:
  2075   001350                     
  2076                           ; BSR set to: 0
  2077   001350  51A7               	movf	sinf@sign& (0+255),w,b
  2078   001352  B4D8               	btfsc	status,2,c
  2079   001354  EFAE  F009         	goto	u3621
  2080   001358  EFB0  F009         	goto	u3620
  2081   00135C                     u3621:
  2082   00135C  EFCC  F009         	goto	l3309
  2083   001360                     u3620:
  2084   001360                     
  2085                           ; BSR set to: 0
  2086   001360  C09A  F041         	movff	sinf@x,___fladd@b
  2087   001364  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2088   001368  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2089   00136C  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2090   001370  0EE4               	movlw	228
  2091   001372  6E45               	movwf	___fladd@a^0,c
  2092   001374  0ECB               	movlw	203
  2093   001376  6E46               	movwf	(___fladd@a+1)^0,c
  2094   001378  0E96               	movlw	150
  2095   00137A  6E47               	movwf	(___fladd@a+2)^0,c
  2096   00137C  0E40               	movlw	64
  2097   00137E  6E48               	movwf	(___fladd@a+3)^0,c
  2098   001380  ECD1  F00A         	call	___fladd	;wreg free
  2099   001384  C041  F0A8         	movff	?___fladd,_sinf$2733
  2100   001388  C042  F0A9         	movff	?___fladd+1,_sinf$2733+1
  2101   00138C  C043  F0AA         	movff	?___fladd+2,_sinf$2733+2
  2102   001390  C044  F0AB         	movff	?___fladd+3,_sinf$2733+3
  2103   001394  EF10  F009         	goto	l3281
  2104   001398                     l3309:
  2105                           
  2106                           ; BSR set to: 0
  2107   001398  0EE4               	movlw	228
  2108   00139A  6E45               	movwf	___fladd@a^0,c
  2109   00139C  0ECB               	movlw	203
  2110   00139E  6E46               	movwf	(___fladd@a+1)^0,c
  2111   0013A0  0E96               	movlw	150
  2112   0013A2  6E47               	movwf	(___fladd@a+2)^0,c
  2113   0013A4  0EC0               	movlw	192
  2114   0013A6  6E48               	movwf	(___fladd@a+3)^0,c
  2115   0013A8  C09A  F041         	movff	sinf@x,___fladd@b
  2116   0013AC  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2117   0013B0  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2118   0013B4  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2119   0013B8  ECD1  F00A         	call	___fladd	;wreg free
  2120   0013BC  C041  F0A8         	movff	?___fladd,_sinf$2733
  2121   0013C0  C042  F0A9         	movff	?___fladd+1,_sinf$2733+1
  2122   0013C4  C043  F0AA         	movff	?___fladd+2,_sinf$2733+2
  2123   0013C8  C044  F0AB         	movff	?___fladd+3,_sinf$2733+3
  2124   0013CC  EFD8  F008         	goto	l3273
  2125   0013D0                     l3315:
  2126                           
  2127                           ; BSR set to: 0
  2128   0013D0  51A7               	movf	sinf@sign& (0+255),w,b
  2129   0013D2  A4D8               	btfss	status,2,c
  2130   0013D4  EFEE  F009         	goto	u3631
  2131   0013D8  EFF0  F009         	goto	u3630
  2132   0013DC                     u3631:
  2133   0013DC  EF0C  F00A         	goto	l3319
  2134   0013E0                     u3630:
  2135   0013E0                     
  2136                           ; BSR set to: 0
  2137   0013E0  C09A  F041         	movff	sinf@x,___fladd@b
  2138   0013E4  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2139   0013E8  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2140   0013EC  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2141   0013F0  0EDB               	movlw	219
  2142   0013F2  6E45               	movwf	___fladd@a^0,c
  2143   0013F4  0E0F               	movlw	15
  2144   0013F6  6E46               	movwf	(___fladd@a+1)^0,c
  2145   0013F8  0EC9               	movlw	201
  2146   0013FA  6E47               	movwf	(___fladd@a+2)^0,c
  2147   0013FC  0EC0               	movlw	192
  2148   0013FE  6E48               	movwf	(___fladd@a+3)^0,c
  2149   001400  ECD1  F00A         	call	___fladd	;wreg free
  2150   001404  C041  F0A2         	movff	?___fladd,_sinf$2487
  2151   001408  C042  F0A3         	movff	?___fladd+1,_sinf$2487+1
  2152   00140C  C043  F0A4         	movff	?___fladd+2,_sinf$2487+2
  2153   001410  C044  F0A5         	movff	?___fladd+3,_sinf$2487+3
  2154   001414  EF26  F00A         	goto	l3321
  2155   001418                     l3319:
  2156                           
  2157                           ; BSR set to: 0
  2158   001418  C09A  F041         	movff	sinf@x,___fladd@b
  2159   00141C  C09B  F042         	movff	sinf@x+1,___fladd@b+1
  2160   001420  C09C  F043         	movff	sinf@x+2,___fladd@b+2
  2161   001424  C09D  F044         	movff	sinf@x+3,___fladd@b+3
  2162   001428  0EDB               	movlw	219
  2163   00142A  6E45               	movwf	___fladd@a^0,c
  2164   00142C  0E0F               	movlw	15
  2165   00142E  6E46               	movwf	(___fladd@a+1)^0,c
  2166   001430  0EC9               	movlw	201
  2167   001432  6E47               	movwf	(___fladd@a+2)^0,c
  2168   001434  0E40               	movlw	64
  2169   001436  6E48               	movwf	(___fladd@a+3)^0,c
  2170   001438  ECD1  F00A         	call	___fladd	;wreg free
  2171   00143C  C041  F0A2         	movff	?___fladd,_sinf$2487
  2172   001440  C042  F0A3         	movff	?___fladd+1,_sinf$2487+1
  2173   001444  C043  F0A4         	movff	?___fladd+2,_sinf$2487+2
  2174   001448  C044  F0A5         	movff	?___fladd+3,_sinf$2487+3
  2175   00144C                     l3321:
  2176   00144C  C0A2  F051         	movff	_sinf$2487,___sindf@x
  2177   001450  C0A3  F052         	movff	_sinf$2487+1,___sindf@x+1
  2178   001454  C0A4  F053         	movff	_sinf$2487+2,___sindf@x+2
  2179   001458  C0A5  F054         	movff	_sinf$2487+3,___sindf@x+3
  2180   00145C  EC44  F015         	call	___sindf	;wreg free
  2181   001460  C051  F09A         	movff	?___sindf,?_sinf
  2182   001464  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2183   001468  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2184   00146C  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2185   001470  EFD0  F00A         	goto	l1051
  2186   001474                     l3325:
  2187                           
  2188                           ; BSR set to: 0
  2189   001474  0E80               	movlw	128
  2190   001476  5DB2               	subwf	(sinf@ux+2)& (0+255),w,b
  2191   001478  0E7F               	movlw	127
  2192   00147A  59B3               	subwfb	(sinf@ux+3)& (0+255),w,b
  2193   00147C  A0D8               	btfss	status,0,c
  2194   00147E  EF43  F00A         	goto	u3641
  2195   001482  EF45  F00A         	goto	u3640
  2196   001486                     u3641:
  2197   001486  EF57  F00A         	goto	l3333
  2198   00148A                     u3640:
  2199   00148A                     
  2200                           ; BSR set to: 0
  2201   00148A  0EFF               	movlw	255
  2202   00148C  13B0               	iorwf	sinf@ux& (0+255),f,b
  2203   00148E  0EFF               	movlw	255
  2204   001490  13B1               	iorwf	(sinf@ux+1)& (0+255),f,b
  2205   001492  0EFF               	movlw	255
  2206   001494  13B2               	iorwf	(sinf@ux+2)& (0+255),f,b
  2207   001496  0E00               	movlw	0
  2208   001498  13B3               	iorwf	(sinf@ux+3)& (0+255),f,b
  2209   00149A                     
  2210                           ; BSR set to: 0
  2211   00149A  C0B0  F09A         	movff	sinf@ux,?_sinf
  2212   00149E  C0B1  F09B         	movff	sinf@ux+1,?_sinf+1
  2213   0014A2  C0B2  F09C         	movff	sinf@ux+2,?_sinf+2
  2214   0014A6  C0B3  F09D         	movff	sinf@ux+3,?_sinf+3
  2215   0014AA  EFD0  F00A         	goto	l1051
  2216   0014AE                     l3333:
  2217                           
  2218                           ; BSR set to: 0
  2219   0014AE  C09A  F07C         	movff	sinf@x,___rem_pio2f@x
  2220   0014B2  C09B  F07D         	movff	sinf@x+1,___rem_pio2f@x+1
  2221   0014B6  C09C  F07E         	movff	sinf@x+2,___rem_pio2f@x+2
  2222   0014BA  C09D  F07F         	movff	sinf@x+3,___rem_pio2f@x+3
  2223   0014BE  0EAC               	movlw	low sinf@y
  2224   0014C0  6F80               	movwf	___rem_pio2f@y& (0+255),b
  2225   0014C2  EC46  F00F         	call	___rem_pio2f	;wreg free
  2226   0014C6  0100               	movlb	0	; () banked
  2227   0014C8  517C               	movf	?___rem_pio2f& (0+255),w,b
  2228   0014CA  0B03               	andlw	3
  2229   0014CC  6FA6               	movwf	sinf@n& (0+255),b
  2230   0014CE  EFC1  F00A         	goto	l3351
  2231   0014D2                     l3335:
  2232                           
  2233                           ; BSR set to: 0
  2234   0014D2  C0AC  F078         	movff	sinf@y,___flneg@f1
  2235   0014D6  C0AD  F079         	movff	sinf@y+1,___flneg@f1+1
  2236   0014DA  C0AE  F07A         	movff	sinf@y+2,___flneg@f1+2
  2237   0014DE  C0AF  F07B         	movff	sinf@y+3,___flneg@f1+3
  2238   0014E2  EC66  F01E         	call	___flneg	;wreg free
  2239   0014E6  C078  F0AC         	movff	?___flneg,sinf@y
  2240   0014EA  C079  F0AD         	movff	?___flneg+1,sinf@y+1
  2241   0014EE  C07A  F0AE         	movff	?___flneg+2,sinf@y+2
  2242   0014F2  C07B  F0AF         	movff	?___flneg+3,sinf@y+3
  2243   0014F6                     l3337:
  2244   0014F6  C0AC  F051         	movff	sinf@y,___sindf@x
  2245   0014FA  C0AD  F052         	movff	sinf@y+1,___sindf@x+1
  2246   0014FE  C0AE  F053         	movff	sinf@y+2,___sindf@x+2
  2247   001502  C0AF  F054         	movff	sinf@y+3,___sindf@x+3
  2248   001506  EC44  F015         	call	___sindf	;wreg free
  2249   00150A  C051  F09A         	movff	?___sindf,?_sinf
  2250   00150E  C052  F09B         	movff	?___sindf+1,?_sinf+1
  2251   001512  C053  F09C         	movff	?___sindf+2,?_sinf+2
  2252   001516  C054  F09D         	movff	?___sindf+3,?_sinf+3
  2253   00151A  EFD0  F00A         	goto	l1051
  2254   00151E                     l3341:
  2255                           
  2256                           ; BSR set to: 0
  2257   00151E  C0AC  F051         	movff	sinf@y,___cosdf@x
  2258   001522  C0AD  F052         	movff	sinf@y+1,___cosdf@x+1
  2259   001526  C0AE  F053         	movff	sinf@y+2,___cosdf@x+2
  2260   00152A  C0AF  F054         	movff	sinf@y+3,___cosdf@x+3
  2261   00152E  EC5D  F016         	call	___cosdf	;wreg free
  2262   001532  C051  F09A         	movff	?___cosdf,?_sinf
  2263   001536  C052  F09B         	movff	?___cosdf+1,?_sinf+1
  2264   00153A  C053  F09C         	movff	?___cosdf+2,?_sinf+2
  2265   00153E  C054  F09D         	movff	?___cosdf+3,?_sinf+3
  2266   001542  EFD0  F00A         	goto	l1051
  2267   001546                     l3345:
  2268                           
  2269                           ; BSR set to: 0
  2270   001546  C0AC  F051         	movff	sinf@y,___cosdf@x
  2271   00154A  C0AD  F052         	movff	sinf@y+1,___cosdf@x+1
  2272   00154E  C0AE  F053         	movff	sinf@y+2,___cosdf@x+2
  2273   001552  C0AF  F054         	movff	sinf@y+3,___cosdf@x+3
  2274   001556  EC5D  F016         	call	___cosdf	;wreg free
  2275   00155A  C051  F078         	movff	?___cosdf,___flneg@f1
  2276   00155E  C052  F079         	movff	?___cosdf+1,___flneg@f1+1
  2277   001562  C053  F07A         	movff	?___cosdf+2,___flneg@f1+2
  2278   001566  C054  F07B         	movff	?___cosdf+3,___flneg@f1+3
  2279   00156A  EC66  F01E         	call	___flneg	;wreg free
  2280   00156E  C078  F09A         	movff	?___flneg,?_sinf
  2281   001572  C079  F09B         	movff	?___flneg+1,?_sinf+1
  2282   001576  C07A  F09C         	movff	?___flneg+2,?_sinf+2
  2283   00157A  C07B  F09D         	movff	?___flneg+3,?_sinf+3
  2284   00157E  EFD0  F00A         	goto	l1051
  2285   001582                     l3351:
  2286                           
  2287                           ; BSR set to: 0
  2288   001582  51A6               	movf	sinf@n& (0+255),w,b
  2289                           
  2290                           ; Switch size 1, requested type "simple"
  2291                           ; Number of cases is 3, Range of values is 0 to 2
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte           10     6 (average)
  2295                           ;	Chosen strategy is simple_byte
  2296   001584  0A00               	xorlw	0	; case 0
  2297   001586  B4D8               	btfsc	status,2,c
  2298   001588  EF7B  F00A         	goto	l3337
  2299   00158C  0A01               	xorlw	1	; case 1
  2300   00158E  B4D8               	btfsc	status,2,c
  2301   001590  EF8F  F00A         	goto	l3341
  2302   001594  0A03               	xorlw	3	; case 2
  2303   001596  B4D8               	btfsc	status,2,c
  2304   001598  EF69  F00A         	goto	l3335
  2305   00159C  EFA3  F00A         	goto	l3345
  2306   0015A0                     l1051:
  2307   0015A0  0012               	return		;funcret
  2308   0015A2                     __end_of_sinf:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function ___sindf *****************
  2312 ;; Defined at:
  2313 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__sindf.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  x               4   80[COMRAM] float 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  z               4   24[BANK0 ] float 
  2318 ;;  s               4   20[BANK0 ] float 
  2319 ;;  w               4    4[BANK0 ] float 
  2320 ;;  r               4    0[BANK0 ] float 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  4   80[COMRAM] float 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Totals:         4      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;Total ram usage:       32 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 1
  2337 ;; This function calls:
  2338 ;;		___fladd
  2339 ;;		___flmul
  2340 ;; This function is called by:
  2341 ;;		_sinf
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text3
  2346   002A88                     __ptext3:
  2347                           	callstack 0
  2348   002A88                     ___sindf:
  2349                           	callstack 27
  2350   002A88  C051  F00F         	movff	___sindf@x,___flmul@b
  2351   002A8C  C052  F010         	movff	___sindf@x+1,___flmul@b+1
  2352   002A90  C053  F011         	movff	___sindf@x+2,___flmul@b+2
  2353   002A94  C054  F012         	movff	___sindf@x+3,___flmul@b+3
  2354   002A98  C051  F013         	movff	___sindf@x,___flmul@a
  2355   002A9C  C052  F014         	movff	___sindf@x+1,___flmul@a+1
  2356   002AA0  C053  F015         	movff	___sindf@x+2,___flmul@a+2
  2357   002AA4  C054  F016         	movff	___sindf@x+3,___flmul@a+3
  2358   002AA8  EC31  F00D         	call	___flmul	;wreg free
  2359   002AAC  C00F  F078         	movff	?___flmul,___sindf@z
  2360   002AB0  C010  F079         	movff	?___flmul+1,___sindf@z+1
  2361   002AB4  C011  F07A         	movff	?___flmul+2,___sindf@z+2
  2362   002AB8  C012  F07B         	movff	?___flmul+3,___sindf@z+3
  2363   002ABC  C078  F00F         	movff	___sindf@z,___flmul@b
  2364   002AC0  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  2365   002AC4  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  2366   002AC8  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  2367   002ACC  C078  F013         	movff	___sindf@z,___flmul@a
  2368   002AD0  C079  F014         	movff	___sindf@z+1,___flmul@a+1
  2369   002AD4  C07A  F015         	movff	___sindf@z+2,___flmul@a+2
  2370   002AD8  C07B  F016         	movff	___sindf@z+3,___flmul@a+3
  2371   002ADC  EC31  F00D         	call	___flmul	;wreg free
  2372   002AE0  C00F  F064         	movff	?___flmul,___sindf@w
  2373   002AE4  C010  F065         	movff	?___flmul+1,___sindf@w+1
  2374   002AE8  C011  F066         	movff	?___flmul+2,___sindf@w+2
  2375   002AEC  C012  F067         	movff	?___flmul+3,___sindf@w+3
  2376   002AF0  0E3C               	movlw	60
  2377   002AF2  6E13               	movwf	___flmul@a^0,c
  2378   002AF4  0E6C               	movlw	108
  2379   002AF6  6E14               	movwf	(___flmul@a+1)^0,c
  2380   002AF8  0E36               	movlw	54
  2381   002AFA  6E15               	movwf	(___flmul@a+2)^0,c
  2382   002AFC  0E36               	movlw	54
  2383   002AFE  6E16               	movwf	(___flmul@a+3)^0,c
  2384   002B00  C078  F00F         	movff	___sindf@z,___flmul@b
  2385   002B04  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  2386   002B08  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  2387   002B0C  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  2388   002B10  EC31  F00D         	call	___flmul	;wreg free
  2389   002B14  C00F  F041         	movff	?___flmul,___fladd@b
  2390   002B18  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2391   002B1C  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2392   002B20  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2393   002B24  0ECF               	movlw	207
  2394   002B26  6E45               	movwf	___fladd@a^0,c
  2395   002B28  0E07               	movlw	7
  2396   002B2A  6E46               	movwf	(___fladd@a+1)^0,c
  2397   002B2C  0E50               	movlw	80
  2398   002B2E  6E47               	movwf	(___fladd@a+2)^0,c
  2399   002B30  0EB9               	movlw	185
  2400   002B32  6E48               	movwf	(___fladd@a+3)^0,c
  2401   002B34  ECD1  F00A         	call	___fladd	;wreg free
  2402   002B38  C041  F060         	movff	?___fladd,___sindf@r
  2403   002B3C  C042  F061         	movff	?___fladd+1,___sindf@r+1
  2404   002B40  C043  F062         	movff	?___fladd+2,___sindf@r+2
  2405   002B44  C044  F063         	movff	?___fladd+3,___sindf@r+3
  2406   002B48  C078  F00F         	movff	___sindf@z,___flmul@b
  2407   002B4C  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  2408   002B50  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  2409   002B54  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  2410   002B58  C051  F013         	movff	___sindf@x,___flmul@a
  2411   002B5C  C052  F014         	movff	___sindf@x+1,___flmul@a+1
  2412   002B60  C053  F015         	movff	___sindf@x+2,___flmul@a+2
  2413   002B64  C054  F016         	movff	___sindf@x+3,___flmul@a+3
  2414   002B68  EC31  F00D         	call	___flmul	;wreg free
  2415   002B6C  C00F  F074         	movff	?___flmul,___sindf@s
  2416   002B70  C010  F075         	movff	?___flmul+1,___sindf@s+1
  2417   002B74  C011  F076         	movff	?___flmul+2,___sindf@s+2
  2418   002B78  C012  F077         	movff	?___flmul+3,___sindf@s+3
  2419   002B7C  0EAB               	movlw	171
  2420   002B7E  6E45               	movwf	___fladd@a^0,c
  2421   002B80  0EAA               	movlw	170
  2422   002B82  6E46               	movwf	(___fladd@a+1)^0,c
  2423   002B84  0E2A               	movlw	42
  2424   002B86  6E47               	movwf	(___fladd@a+2)^0,c
  2425   002B88  0EBE               	movlw	190
  2426   002B8A  6E48               	movwf	(___fladd@a+3)^0,c
  2427   002B8C  0E84               	movlw	132
  2428   002B8E  6E13               	movwf	___flmul@a^0,c
  2429   002B90  0E88               	movlw	136
  2430   002B92  6E14               	movwf	(___flmul@a+1)^0,c
  2431   002B94  0E08               	movlw	8
  2432   002B96  6E15               	movwf	(___flmul@a+2)^0,c
  2433   002B98  0E3C               	movlw	60
  2434   002B9A  6E16               	movwf	(___flmul@a+3)^0,c
  2435   002B9C  C078  F00F         	movff	___sindf@z,___flmul@b
  2436   002BA0  C079  F010         	movff	___sindf@z+1,___flmul@b+1
  2437   002BA4  C07A  F011         	movff	___sindf@z+2,___flmul@b+2
  2438   002BA8  C07B  F012         	movff	___sindf@z+3,___flmul@b+3
  2439   002BAC  EC31  F00D         	call	___flmul	;wreg free
  2440   002BB0  C00F  F041         	movff	?___flmul,___fladd@b
  2441   002BB4  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2442   002BB8  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2443   002BBC  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2444   002BC0  ECD1  F00A         	call	___fladd	;wreg free
  2445   002BC4  C041  F068         	movff	?___fladd,___sindf$2738
  2446   002BC8  C042  F069         	movff	?___fladd+1,___sindf$2738+1
  2447   002BCC  C043  F06A         	movff	?___fladd+2,___sindf$2738+2
  2448   002BD0  C044  F06B         	movff	?___fladd+3,___sindf$2738+3
  2449   002BD4  C064  F013         	movff	___sindf@w,___flmul@a
  2450   002BD8  C065  F014         	movff	___sindf@w+1,___flmul@a+1
  2451   002BDC  C066  F015         	movff	___sindf@w+2,___flmul@a+2
  2452   002BE0  C067  F016         	movff	___sindf@w+3,___flmul@a+3
  2453   002BE4  C074  F00F         	movff	___sindf@s,___flmul@b
  2454   002BE8  C075  F010         	movff	___sindf@s+1,___flmul@b+1
  2455   002BEC  C076  F011         	movff	___sindf@s+2,___flmul@b+2
  2456   002BF0  C077  F012         	movff	___sindf@s+3,___flmul@b+3
  2457   002BF4  EC31  F00D         	call	___flmul	;wreg free
  2458   002BF8  C00F  F06C         	movff	?___flmul,___sindf$2739
  2459   002BFC  C010  F06D         	movff	?___flmul+1,___sindf$2739+1
  2460   002C00  C011  F06E         	movff	?___flmul+2,___sindf$2739+2
  2461   002C04  C012  F06F         	movff	?___flmul+3,___sindf$2739+3
  2462   002C08  C051  F045         	movff	___sindf@x,___fladd@a
  2463   002C0C  C052  F046         	movff	___sindf@x+1,___fladd@a+1
  2464   002C10  C053  F047         	movff	___sindf@x+2,___fladd@a+2
  2465   002C14  C054  F048         	movff	___sindf@x+3,___fladd@a+3
  2466   002C18  C074  F013         	movff	___sindf@s,___flmul@a
  2467   002C1C  C075  F014         	movff	___sindf@s+1,___flmul@a+1
  2468   002C20  C076  F015         	movff	___sindf@s+2,___flmul@a+2
  2469   002C24  C077  F016         	movff	___sindf@s+3,___flmul@a+3
  2470   002C28  C068  F00F         	movff	___sindf$2738,___flmul@b
  2471   002C2C  C069  F010         	movff	___sindf$2738+1,___flmul@b+1
  2472   002C30  C06A  F011         	movff	___sindf$2738+2,___flmul@b+2
  2473   002C34  C06B  F012         	movff	___sindf$2738+3,___flmul@b+3
  2474   002C38  EC31  F00D         	call	___flmul	;wreg free
  2475   002C3C  C00F  F041         	movff	?___flmul,___fladd@b
  2476   002C40  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2477   002C44  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2478   002C48  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2479   002C4C  ECD1  F00A         	call	___fladd	;wreg free
  2480   002C50  C041  F070         	movff	?___fladd,___sindf$2740
  2481   002C54  C042  F071         	movff	?___fladd+1,___sindf$2740+1
  2482   002C58  C043  F072         	movff	?___fladd+2,___sindf$2740+2
  2483   002C5C  C044  F073         	movff	?___fladd+3,___sindf$2740+3
  2484   002C60  C070  F041         	movff	___sindf$2740,___fladd@b
  2485   002C64  C071  F042         	movff	___sindf$2740+1,___fladd@b+1
  2486   002C68  C072  F043         	movff	___sindf$2740+2,___fladd@b+2
  2487   002C6C  C073  F044         	movff	___sindf$2740+3,___fladd@b+3
  2488   002C70  C060  F013         	movff	___sindf@r,___flmul@a
  2489   002C74  C061  F014         	movff	___sindf@r+1,___flmul@a+1
  2490   002C78  C062  F015         	movff	___sindf@r+2,___flmul@a+2
  2491   002C7C  C063  F016         	movff	___sindf@r+3,___flmul@a+3
  2492   002C80  C06C  F00F         	movff	___sindf$2739,___flmul@b
  2493   002C84  C06D  F010         	movff	___sindf$2739+1,___flmul@b+1
  2494   002C88  C06E  F011         	movff	___sindf$2739+2,___flmul@b+2
  2495   002C8C  C06F  F012         	movff	___sindf$2739+3,___flmul@b+3
  2496   002C90  EC31  F00D         	call	___flmul	;wreg free
  2497   002C94  C00F  F045         	movff	?___flmul,___fladd@a
  2498   002C98  C010  F046         	movff	?___flmul+1,___fladd@a+1
  2499   002C9C  C011  F047         	movff	?___flmul+2,___fladd@a+2
  2500   002CA0  C012  F048         	movff	?___flmul+3,___fladd@a+3
  2501   002CA4  ECD1  F00A         	call	___fladd	;wreg free
  2502   002CA8  C041  F051         	movff	?___fladd,?___sindf
  2503   002CAC  C042  F052         	movff	?___fladd+1,?___sindf+1
  2504   002CB0  C043  F053         	movff	?___fladd+2,?___sindf+2
  2505   002CB4  C044  F054         	movff	?___fladd+3,?___sindf+3
  2506   002CB8  0012               	return		;funcret
  2507   002CBA                     __end_of___sindf:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function ___rem_pio2f *****************
  2511 ;; Defined at:
  2512 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__rem_pio2f.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  x               4   28[BANK0 ] float 
  2515 ;;  y               1   32[BANK0 ] PTR 
  2516 ;;		 -> sinf@y(4), 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  n               4   54[BANK0 ] long 
  2519 ;;  t               4   50[BANK0 ] float 
  2520 ;;  fn              4   46[BANK0 ] float 
  2521 ;;  ux              4   42[BANK0 ] struct .
  2522 ;;  ty              4   33[BANK0 ] [1]
  2523 ;;  sign            1   41[BANK0 ] _Bool 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  2   28[BANK0 ] int 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:       32 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 2
  2540 ;; This function calls:
  2541 ;;		___fladd
  2542 ;;		___flmul
  2543 ;;		___flneg
  2544 ;;		___flsub
  2545 ;;		___fltol
  2546 ;;		___xxtofl
  2547 ;;		_fabsf
  2548 ;; This function is called by:
  2549 ;;		_sinf
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text4
  2554   001E8C                     __ptext4:
  2555                           	callstack 0
  2556   001E8C                     ___rem_pio2f:
  2557                           	callstack 26
  2558   001E8C  C0C5  F08A         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  2559   001E90  C0C6  F08B         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  2560   001E94  C0C7  F08C         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  2561   001E98  C0C8  F08D         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  2562   001E9C  C07C  F08A         	movff	___rem_pio2f@x,___rem_pio2f@ux
  2563   001EA0  C07D  F08B         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  2564   001EA4  C07E  F08C         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  2565   001EA8  C07F  F08D         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  2566   001EAC  0100               	movlb	0	; () banked
  2567   001EAE  BF8D               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  2568   001EB0  EF5C  F00F         	goto	u3371
  2569   001EB4  EF5F  F00F         	goto	u3370
  2570   001EB8                     u3371:
  2571   001EB8  0E01               	movlw	1
  2572   001EBA  EF60  F00F         	goto	u3380
  2573   001EBE                     u3370:
  2574   001EBE  0E00               	movlw	0
  2575   001EC0                     u3380:
  2576   001EC0  6F89               	movwf	___rem_pio2f@sign& (0+255),b
  2577   001EC2                     
  2578                           ; BSR set to: 0
  2579   001EC2  9F8D               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  2580   001EC4                     
  2581                           ; BSR set to: 0
  2582   001EC4  0EDB               	movlw	219
  2583   001EC6  5D8A               	subwf	___rem_pio2f@ux& (0+255),w,b
  2584   001EC8  0E0F               	movlw	15
  2585   001ECA  598B               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  2586   001ECC  0EC9               	movlw	201
  2587   001ECE  598C               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  2588   001ED0  0E4D               	movlw	77
  2589   001ED2  598D               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  2590   001ED4  B0D8               	btfsc	status,0,c
  2591   001ED6  EF6F  F00F         	goto	u3391
  2592   001EDA  EF71  F00F         	goto	u3390
  2593   001EDE                     u3391:
  2594   001EDE  EF5D  F010         	goto	l3191
  2595   001EE2                     u3390:
  2596   001EE2                     
  2597                           ; BSR set to: 0
  2598   001EE2  C07C  F001         	movff	___rem_pio2f@x,fabsf@x
  2599   001EE6  C07D  F002         	movff	___rem_pio2f@x+1,fabsf@x+1
  2600   001EEA  C07E  F003         	movff	___rem_pio2f@x+2,fabsf@x+2
  2601   001EEE  C07F  F004         	movff	___rem_pio2f@x+3,fabsf@x+3
  2602   001EF2  ECD4  F01E         	call	_fabsf	;wreg free
  2603   001EF6  C001  F092         	movff	?_fabsf,___rem_pio2f@t
  2604   001EFA  C002  F093         	movff	?_fabsf+1,___rem_pio2f@t+1
  2605   001EFE  C003  F094         	movff	?_fabsf+2,___rem_pio2f@t+2
  2606   001F02  C004  F095         	movff	?_fabsf+3,___rem_pio2f@t+3
  2607   001F06  0E00               	movlw	0
  2608   001F08  6E45               	movwf	___fladd@a^0,c
  2609   001F0A  0E00               	movlw	0
  2610   001F0C  6E46               	movwf	(___fladd@a+1)^0,c
  2611   001F0E  0E00               	movlw	0
  2612   001F10  6E47               	movwf	(___fladd@a+2)^0,c
  2613   001F12  0E3F               	movlw	63
  2614   001F14  6E48               	movwf	(___fladd@a+3)^0,c
  2615   001F16  0E83               	movlw	131
  2616   001F18  6E13               	movwf	___flmul@a^0,c
  2617   001F1A  0EF9               	movlw	249
  2618   001F1C  6E14               	movwf	(___flmul@a+1)^0,c
  2619   001F1E  0E22               	movlw	34
  2620   001F20  6E15               	movwf	(___flmul@a+2)^0,c
  2621   001F22  0E3F               	movlw	63
  2622   001F24  6E16               	movwf	(___flmul@a+3)^0,c
  2623   001F26  C092  F00F         	movff	___rem_pio2f@t,___flmul@b
  2624   001F2A  C093  F010         	movff	___rem_pio2f@t+1,___flmul@b+1
  2625   001F2E  C094  F011         	movff	___rem_pio2f@t+2,___flmul@b+2
  2626   001F32  C095  F012         	movff	___rem_pio2f@t+3,___flmul@b+3
  2627   001F36  EC31  F00D         	call	___flmul	;wreg free
  2628   001F3A  C00F  F041         	movff	?___flmul,___fladd@b
  2629   001F3E  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2630   001F42  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2631   001F46  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2632   001F4A  ECD1  F00A         	call	___fladd	;wreg free
  2633   001F4E  C041  F051         	movff	?___fladd,___fltol@f1
  2634   001F52  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2635   001F56  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2636   001F5A  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2637   001F5E  EC6D  F01A         	call	___fltol	;wreg free
  2638   001F62  C051  F096         	movff	?___fltol,___rem_pio2f@n
  2639   001F66  C052  F097         	movff	?___fltol+1,___rem_pio2f@n+1
  2640   001F6A  C053  F098         	movff	?___fltol+2,___rem_pio2f@n+2
  2641   001F6E  C054  F099         	movff	?___fltol+3,___rem_pio2f@n+3
  2642   001F72  C096  F001         	movff	___rem_pio2f@n,___xxtofl@val
  2643   001F76  C097  F002         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  2644   001F7A  C098  F003         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  2645   001F7E  C099  F004         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  2646   001F82  0E01               	movlw	1
  2647   001F84  EC38  F018         	call	___xxtofl
  2648   001F88  C001  F08E         	movff	?___xxtofl,___rem_pio2f@fn
  2649   001F8C  C002  F08F         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  2650   001F90  C003  F090         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  2651   001F94  C004  F091         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  2652   001F98  0EDA               	movlw	218
  2653   001F9A  6E13               	movwf	___flmul@a^0,c
  2654   001F9C  0E0F               	movlw	15
  2655   001F9E  6E14               	movwf	(___flmul@a+1)^0,c
  2656   001FA0  0EC9               	movlw	201
  2657   001FA2  6E15               	movwf	(___flmul@a+2)^0,c
  2658   001FA4  0E3F               	movlw	63
  2659   001FA6  6E16               	movwf	(___flmul@a+3)^0,c
  2660   001FA8  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  2661   001FAC  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  2662   001FB0  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  2663   001FB4  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  2664   001FB8  EC31  F00D         	call	___flmul	;wreg free
  2665   001FBC  C00F  F055         	movff	?___flmul,___flsub@a
  2666   001FC0  C010  F056         	movff	?___flmul+1,___flsub@a+1
  2667   001FC4  C011  F057         	movff	?___flmul+2,___flsub@a+2
  2668   001FC8  C012  F058         	movff	?___flmul+3,___flsub@a+3
  2669   001FCC  C092  F051         	movff	___rem_pio2f@t,___flsub@b
  2670   001FD0  C093  F052         	movff	___rem_pio2f@t+1,___flsub@b+1
  2671   001FD4  C094  F053         	movff	___rem_pio2f@t+2,___flsub@b+2
  2672   001FD8  C095  F054         	movff	___rem_pio2f@t+3,___flsub@b+3
  2673   001FDC  ECE3  F01D         	call	___flsub	;wreg free
  2674   001FE0  C051  F085         	movff	?___flsub,___rem_pio2f$2737
  2675   001FE4  C052  F086         	movff	?___flsub+1,___rem_pio2f$2737+1
  2676   001FE8  C053  F087         	movff	?___flsub+2,___rem_pio2f$2737+2
  2677   001FEC  C054  F088         	movff	?___flsub+3,___rem_pio2f$2737+3
  2678   001FF0  C085  F051         	movff	___rem_pio2f$2737,___flsub@b
  2679   001FF4  C086  F052         	movff	___rem_pio2f$2737+1,___flsub@b+1
  2680   001FF8  C087  F053         	movff	___rem_pio2f$2737+2,___flsub@b+2
  2681   001FFC  C088  F054         	movff	___rem_pio2f$2737+3,___flsub@b+3
  2682   002000  0EA3               	movlw	163
  2683   002002  6E13               	movwf	___flmul@a^0,c
  2684   002004  0E85               	movlw	133
  2685   002006  6E14               	movwf	(___flmul@a+1)^0,c
  2686   002008  0E88               	movlw	136
  2687   00200A  6E15               	movwf	(___flmul@a+2)^0,c
  2688   00200C  0E32               	movlw	50
  2689   00200E  6E16               	movwf	(___flmul@a+3)^0,c
  2690   002010  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  2691   002014  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  2692   002018  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  2693   00201C  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  2694   002020  EC31  F00D         	call	___flmul	;wreg free
  2695   002024  C00F  F055         	movff	?___flmul,___flsub@a
  2696   002028  C010  F056         	movff	?___flmul+1,___flsub@a+1
  2697   00202C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  2698   002030  C012  F058         	movff	?___flmul+3,___flsub@a+3
  2699   002034  ECE3  F01D         	call	___flsub	;wreg free
  2700   002038  0100               	movlb	0	; () banked
  2701   00203A  5180               	movf	___rem_pio2f@y& (0+255),w,b
  2702   00203C  6ED9               	movwf	fsr2l,c
  2703   00203E  6ADA               	clrf	fsr2h,c
  2704   002040  C051  FFDE         	movff	?___flsub,postinc2
  2705   002044  C052  FFDE         	movff	?___flsub+1,postinc2
  2706   002048  C053  FFDE         	movff	?___flsub+2,postinc2
  2707   00204C  C054  FFDE         	movff	?___flsub+3,postinc2
  2708   002050                     
  2709                           ; BSR set to: 0
  2710   002050  5189               	movf	___rem_pio2f@sign& (0+255),w,b
  2711   002052  B4D8               	btfsc	status,2,c
  2712   002054  EF2E  F010         	goto	u3401
  2713   002058  EF30  F010         	goto	u3400
  2714   00205C                     u3401:
  2715   00205C  EF57  F010         	goto	l1101
  2716   002060                     u3400:
  2717   002060                     l3185:
  2718                           
  2719                           ; BSR set to: 0
  2720   002060  5180               	movf	___rem_pio2f@y& (0+255),w,b
  2721   002062  6ED9               	movwf	fsr2l,c
  2722   002064  6ADA               	clrf	fsr2h,c
  2723   002066  CFDE F078          	movff	postinc2,___flneg@f1
  2724   00206A  CFDE F079          	movff	postinc2,___flneg@f1+1
  2725   00206E  CFDE F07A          	movff	postinc2,___flneg@f1+2
  2726   002072  CFDE F07B          	movff	postinc2,___flneg@f1+3
  2727   002076  EC66  F01E         	call	___flneg	;wreg free
  2728   00207A  0100               	movlb	0	; () banked
  2729   00207C  5180               	movf	___rem_pio2f@y& (0+255),w,b
  2730   00207E  6ED9               	movwf	fsr2l,c
  2731   002080  6ADA               	clrf	fsr2h,c
  2732   002082  C078  FFDE         	movff	?___flneg,postinc2
  2733   002086  C079  FFDE         	movff	?___flneg+1,postinc2
  2734   00208A  C07A  FFDE         	movff	?___flneg+2,postinc2
  2735   00208E  C07B  FFDE         	movff	?___flneg+3,postinc2
  2736   002092                     
  2737                           ; BSR set to: 0
  2738   002092  C096  F05B         	movff	___rem_pio2f@n,??___rem_pio2f
  2739   002096  C097  F05C         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  2740   00209A  1E5B               	comf	??___rem_pio2f^0,f,c
  2741   00209C  1E5C               	comf	(??___rem_pio2f+1)^0,f,c
  2742   00209E  4A5B               	infsnz	??___rem_pio2f^0,f,c
  2743   0020A0  2A5C               	incf	(??___rem_pio2f+1)^0,f,c
  2744   0020A2  C05B  F07C         	movff	??___rem_pio2f,?___rem_pio2f
  2745   0020A6  C05C  F07D         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  2746   0020AA  EF26  F011         	goto	l1102
  2747   0020AE                     l1101:
  2748                           
  2749                           ; BSR set to: 0
  2750   0020AE  C096  F07C         	movff	___rem_pio2f@n,?___rem_pio2f
  2751   0020B2  C097  F07D         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  2752   0020B6  EF26  F011         	goto	l1102
  2753   0020BA                     l3191:
  2754                           
  2755                           ; BSR set to: 0
  2756   0020BA  C07C  F001         	movff	___rem_pio2f@x,fabsf@x
  2757   0020BE  C07D  F002         	movff	___rem_pio2f@x+1,fabsf@x+1
  2758   0020C2  C07E  F003         	movff	___rem_pio2f@x+2,fabsf@x+2
  2759   0020C6  C07F  F004         	movff	___rem_pio2f@x+3,fabsf@x+3
  2760   0020CA  ECD4  F01E         	call	_fabsf	;wreg free
  2761   0020CE  C001  F092         	movff	?_fabsf,___rem_pio2f@t
  2762   0020D2  C002  F093         	movff	?_fabsf+1,___rem_pio2f@t+1
  2763   0020D6  C003  F094         	movff	?_fabsf+2,___rem_pio2f@t+2
  2764   0020DA  C004  F095         	movff	?_fabsf+3,___rem_pio2f@t+3
  2765   0020DE  0E00               	movlw	0
  2766   0020E0  6E45               	movwf	___fladd@a^0,c
  2767   0020E2  0E00               	movlw	0
  2768   0020E4  6E46               	movwf	(___fladd@a+1)^0,c
  2769   0020E6  0E00               	movlw	0
  2770   0020E8  6E47               	movwf	(___fladd@a+2)^0,c
  2771   0020EA  0E3F               	movlw	63
  2772   0020EC  6E48               	movwf	(___fladd@a+3)^0,c
  2773   0020EE  0E83               	movlw	131
  2774   0020F0  6E13               	movwf	___flmul@a^0,c
  2775   0020F2  0EF9               	movlw	249
  2776   0020F4  6E14               	movwf	(___flmul@a+1)^0,c
  2777   0020F6  0E22               	movlw	34
  2778   0020F8  6E15               	movwf	(___flmul@a+2)^0,c
  2779   0020FA  0E3F               	movlw	63
  2780   0020FC  6E16               	movwf	(___flmul@a+3)^0,c
  2781   0020FE  C092  F00F         	movff	___rem_pio2f@t,___flmul@b
  2782   002102  C093  F010         	movff	___rem_pio2f@t+1,___flmul@b+1
  2783   002106  C094  F011         	movff	___rem_pio2f@t+2,___flmul@b+2
  2784   00210A  C095  F012         	movff	___rem_pio2f@t+3,___flmul@b+3
  2785   00210E  EC31  F00D         	call	___flmul	;wreg free
  2786   002112  C00F  F041         	movff	?___flmul,___fladd@b
  2787   002116  C010  F042         	movff	?___flmul+1,___fladd@b+1
  2788   00211A  C011  F043         	movff	?___flmul+2,___fladd@b+2
  2789   00211E  C012  F044         	movff	?___flmul+3,___fladd@b+3
  2790   002122  ECD1  F00A         	call	___fladd	;wreg free
  2791   002126  C041  F051         	movff	?___fladd,___fltol@f1
  2792   00212A  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2793   00212E  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2794   002132  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2795   002136  EC6D  F01A         	call	___fltol	;wreg free
  2796   00213A  C051  F096         	movff	?___fltol,___rem_pio2f@n
  2797   00213E  C052  F097         	movff	?___fltol+1,___rem_pio2f@n+1
  2798   002142  C053  F098         	movff	?___fltol+2,___rem_pio2f@n+2
  2799   002146  C054  F099         	movff	?___fltol+3,___rem_pio2f@n+3
  2800   00214A  C096  F001         	movff	___rem_pio2f@n,___xxtofl@val
  2801   00214E  C097  F002         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  2802   002152  C098  F003         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  2803   002156  C099  F004         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  2804   00215A  0E01               	movlw	1
  2805   00215C  EC38  F018         	call	___xxtofl
  2806   002160  C001  F08E         	movff	?___xxtofl,___rem_pio2f@fn
  2807   002164  C002  F08F         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  2808   002168  C003  F090         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  2809   00216C  C004  F091         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  2810   002170  0EDA               	movlw	218
  2811   002172  6E13               	movwf	___flmul@a^0,c
  2812   002174  0E0F               	movlw	15
  2813   002176  6E14               	movwf	(___flmul@a+1)^0,c
  2814   002178  0EC9               	movlw	201
  2815   00217A  6E15               	movwf	(___flmul@a+2)^0,c
  2816   00217C  0E3F               	movlw	63
  2817   00217E  6E16               	movwf	(___flmul@a+3)^0,c
  2818   002180  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  2819   002184  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  2820   002188  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  2821   00218C  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  2822   002190  EC31  F00D         	call	___flmul	;wreg free
  2823   002194  C00F  F055         	movff	?___flmul,___flsub@a
  2824   002198  C010  F056         	movff	?___flmul+1,___flsub@a+1
  2825   00219C  C011  F057         	movff	?___flmul+2,___flsub@a+2
  2826   0021A0  C012  F058         	movff	?___flmul+3,___flsub@a+3
  2827   0021A4  C092  F051         	movff	___rem_pio2f@t,___flsub@b
  2828   0021A8  C093  F052         	movff	___rem_pio2f@t+1,___flsub@b+1
  2829   0021AC  C094  F053         	movff	___rem_pio2f@t+2,___flsub@b+2
  2830   0021B0  C095  F054         	movff	___rem_pio2f@t+3,___flsub@b+3
  2831   0021B4  ECE3  F01D         	call	___flsub	;wreg free
  2832   0021B8  C051  F085         	movff	?___flsub,___rem_pio2f$2737
  2833   0021BC  C052  F086         	movff	?___flsub+1,___rem_pio2f$2737+1
  2834   0021C0  C053  F087         	movff	?___flsub+2,___rem_pio2f$2737+2
  2835   0021C4  C054  F088         	movff	?___flsub+3,___rem_pio2f$2737+3
  2836   0021C8  C085  F051         	movff	___rem_pio2f$2737,___flsub@b
  2837   0021CC  C086  F052         	movff	___rem_pio2f$2737+1,___flsub@b+1
  2838   0021D0  C087  F053         	movff	___rem_pio2f$2737+2,___flsub@b+2
  2839   0021D4  C088  F054         	movff	___rem_pio2f$2737+3,___flsub@b+3
  2840   0021D8  0EA3               	movlw	163
  2841   0021DA  6E13               	movwf	___flmul@a^0,c
  2842   0021DC  0E85               	movlw	133
  2843   0021DE  6E14               	movwf	(___flmul@a+1)^0,c
  2844   0021E0  0E88               	movlw	136
  2845   0021E2  6E15               	movwf	(___flmul@a+2)^0,c
  2846   0021E4  0E32               	movlw	50
  2847   0021E6  6E16               	movwf	(___flmul@a+3)^0,c
  2848   0021E8  C08E  F00F         	movff	___rem_pio2f@fn,___flmul@b
  2849   0021EC  C08F  F010         	movff	___rem_pio2f@fn+1,___flmul@b+1
  2850   0021F0  C090  F011         	movff	___rem_pio2f@fn+2,___flmul@b+2
  2851   0021F4  C091  F012         	movff	___rem_pio2f@fn+3,___flmul@b+3
  2852   0021F8  EC31  F00D         	call	___flmul	;wreg free
  2853   0021FC  C00F  F055         	movff	?___flmul,___flsub@a
  2854   002200  C010  F056         	movff	?___flmul+1,___flsub@a+1
  2855   002204  C011  F057         	movff	?___flmul+2,___flsub@a+2
  2856   002208  C012  F058         	movff	?___flmul+3,___flsub@a+3
  2857   00220C  ECE3  F01D         	call	___flsub	;wreg free
  2858   002210  C051  F081         	movff	?___flsub,___rem_pio2f@ty
  2859   002214  C052  F082         	movff	?___flsub+1,___rem_pio2f@ty+1
  2860   002218  C053  F083         	movff	?___flsub+2,___rem_pio2f@ty+2
  2861   00221C  C054  F084         	movff	?___flsub+3,___rem_pio2f@ty+3
  2862   002220  0100               	movlb	0	; () banked
  2863   002222  5180               	movf	___rem_pio2f@y& (0+255),w,b
  2864   002224  6ED9               	movwf	fsr2l,c
  2865   002226  6ADA               	clrf	fsr2h,c
  2866   002228  C081  FFDE         	movff	___rem_pio2f@ty,postinc2
  2867   00222C  C082  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  2868   002230  C083  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  2869   002234  C084  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  2870   002238                     
  2871                           ; BSR set to: 0
  2872   002238  5189               	movf	___rem_pio2f@sign& (0+255),w,b
  2873   00223A  B4D8               	btfsc	status,2,c
  2874   00223C  EF22  F011         	goto	u3411
  2875   002240  EF24  F011         	goto	u3410
  2876   002244                     u3411:
  2877   002244  EF57  F010         	goto	l1101
  2878   002248                     u3410:
  2879   002248  EF30  F010         	goto	l3185
  2880   00224C                     l1102:
  2881                           
  2882                           ; BSR set to: 0
  2883   00224C  0012               	return		;funcret
  2884   00224E                     __end_of___rem_pio2f:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _fabsf *****************
  2888 ;; Defined at:
  2889 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fabsf.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  x               4    0[COMRAM] float 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  u               4    4[COMRAM] struct .
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  4    0[COMRAM] float 
  2896 ;; Registers used:
  2897 ;;		status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;Total ram usage:        8 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		___rem_pio2f
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text5
  2917   003DA8                     __ptext5:
  2918                           	callstack 0
  2919   003DA8                     _fabsf:
  2920                           	callstack 27
  2921   003DA8  C0C1  F005         	movff	fabsf@F465,fabsf@u
  2922   003DAC  C0C2  F006         	movff	fabsf@F465+1,fabsf@u+1
  2923   003DB0  C0C3  F007         	movff	fabsf@F465+2,fabsf@u+2
  2924   003DB4  C0C4  F008         	movff	fabsf@F465+3,fabsf@u+3
  2925   003DB8  C001  F005         	movff	fabsf@x,fabsf@u
  2926   003DBC  C002  F006         	movff	fabsf@x+1,fabsf@u+1
  2927   003DC0  C003  F007         	movff	fabsf@x+2,fabsf@u+2
  2928   003DC4  C004  F008         	movff	fabsf@x+3,fabsf@u+3
  2929   003DC8  9E08               	bcf	(fabsf@u+3)^0,7,c
  2930   003DCA  C005  F001         	movff	fabsf@u,?_fabsf
  2931   003DCE  C006  F002         	movff	fabsf@u+1,?_fabsf+1
  2932   003DD2  C007  F003         	movff	fabsf@u+2,?_fabsf+2
  2933   003DD6  C008  F004         	movff	fabsf@u+3,?_fabsf+3
  2934   003DDA  0012               	return		;funcret
  2935   003DDC                     __end_of_fabsf:
  2936                           	callstack 0
  2937                           
  2938 ;; *************** function ___xxtofl *****************
  2939 ;; Defined at:
  2940 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  sign            1    wreg     unsigned char 
  2943 ;;  val             4    0[COMRAM] long 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  sign            1    8[COMRAM] unsigned char 
  2946 ;;  arg             4   10[COMRAM] unsigned long 
  2947 ;;  exp             1    9[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  4    0[COMRAM] unsigned char 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:       14 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_runDAC
  2967 ;;		___rem_pio2f
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text6
  2972   003070                     __ptext6:
  2973                           	callstack 0
  2974   003070                     ___xxtofl:
  2975                           	callstack 27
  2976                           
  2977                           ;incstack = 0
  2978                           ;___xxtofl@sign stored from wreg
  2979   003070  6E09               	movwf	___xxtofl@sign^0,c
  2980   003072  5009               	movf	___xxtofl@sign^0,w,c
  2981   003074  B4D8               	btfsc	status,2,c
  2982   003076  EF3F  F018         	goto	u3141
  2983   00307A  EF41  F018         	goto	u3140
  2984   00307E                     u3141:
  2985   00307E  EF63  F018         	goto	l884
  2986   003082                     u3140:
  2987   003082  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2988   003084  EF48  F018         	goto	u3150
  2989   003088  EF46  F018         	goto	u3151
  2990   00308C                     u3151:
  2991   00308C  EF63  F018         	goto	l884
  2992   003090                     u3150:
  2993   003090  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2994   003094  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2995   003098  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2996   00309C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2997   0030A0  1E05               	comf	??___xxtofl^0,f,c
  2998   0030A2  1E06               	comf	(??___xxtofl+1)^0,f,c
  2999   0030A4  1E07               	comf	(??___xxtofl+2)^0,f,c
  3000   0030A6  1E08               	comf	(??___xxtofl+3)^0,f,c
  3001   0030A8  2A05               	incf	??___xxtofl^0,f,c
  3002   0030AA  0E00               	movlw	0
  3003   0030AC  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3004   0030AE  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3005   0030B0  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3006   0030B2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3007   0030B6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3008   0030BA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3009   0030BE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3010   0030C2  EF6B  F018         	goto	l3021
  3011   0030C6                     l884:
  3012   0030C6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3013   0030CA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3014   0030CE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3015   0030D2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3016   0030D6                     l3021:
  3017   0030D6  5001               	movf	___xxtofl@val^0,w,c
  3018   0030D8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3019   0030DA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3020   0030DC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3021   0030DE  A4D8               	btfss	status,2,c
  3022   0030E0  EF74  F018         	goto	u3161
  3023   0030E4  EF76  F018         	goto	u3160
  3024   0030E8                     u3161:
  3025   0030E8  EF80  F018         	goto	l3027
  3026   0030EC                     u3160:
  3027   0030EC  0E00               	movlw	0
  3028   0030EE  6E01               	movwf	?___xxtofl^0,c
  3029   0030F0  0E00               	movlw	0
  3030   0030F2  6E02               	movwf	(?___xxtofl+1)^0,c
  3031   0030F4  0E00               	movlw	0
  3032   0030F6  6E03               	movwf	(?___xxtofl+2)^0,c
  3033   0030F8  0E00               	movlw	0
  3034   0030FA  6E04               	movwf	(?___xxtofl+3)^0,c
  3035   0030FC  EF11  F019         	goto	l887
  3036   003100                     l3027:
  3037   003100  0E96               	movlw	150
  3038   003102  6E0A               	movwf	___xxtofl@exp^0,c
  3039   003104  EF8A  F018         	goto	l3031
  3040   003108                     l3029:
  3041   003108  2A0A               	incf	___xxtofl@exp^0,f,c
  3042   00310A  90D8               	bcf	status,0,c
  3043   00310C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3044   00310E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3045   003110  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3046   003112  320B               	rrcf	___xxtofl@arg^0,f,c
  3047   003114                     l3031:
  3048   003114  0E00               	movlw	0
  3049   003116  140B               	andwf	___xxtofl@arg^0,w,c
  3050   003118  6E05               	movwf	??___xxtofl^0,c
  3051   00311A  0E00               	movlw	0
  3052   00311C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3053   00311E  6E06               	movwf	(??___xxtofl+1)^0,c
  3054   003120  0E00               	movlw	0
  3055   003122  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3056   003124  6E07               	movwf	(??___xxtofl+2)^0,c
  3057   003126  0EFE               	movlw	254
  3058   003128  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3059   00312A  6E08               	movwf	(??___xxtofl+3)^0,c
  3060   00312C  5005               	movf	??___xxtofl^0,w,c
  3061   00312E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3062   003130  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3063   003132  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3064   003134  A4D8               	btfss	status,2,c
  3065   003136  EF9F  F018         	goto	u3171
  3066   00313A  EFA1  F018         	goto	u3170
  3067   00313E                     u3171:
  3068   00313E  EF84  F018         	goto	l3029
  3069   003142                     u3170:
  3070   003142  EFAF  F018         	goto	l891
  3071   003146                     l3033:
  3072   003146  2A0A               	incf	___xxtofl@exp^0,f,c
  3073   003148  0E01               	movlw	1
  3074   00314A  260B               	addwf	___xxtofl@arg^0,f,c
  3075   00314C  0E00               	movlw	0
  3076   00314E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3077   003150  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3078   003152  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3079   003154  90D8               	bcf	status,0,c
  3080   003156  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3081   003158  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3082   00315A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3083   00315C  320B               	rrcf	___xxtofl@arg^0,f,c
  3084   00315E                     l891:
  3085   00315E  0E00               	movlw	0
  3086   003160  140B               	andwf	___xxtofl@arg^0,w,c
  3087   003162  6E05               	movwf	??___xxtofl^0,c
  3088   003164  0E00               	movlw	0
  3089   003166  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3090   003168  6E06               	movwf	(??___xxtofl+1)^0,c
  3091   00316A  0E00               	movlw	0
  3092   00316C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3093   00316E  6E07               	movwf	(??___xxtofl+2)^0,c
  3094   003170  0EFF               	movlw	255
  3095   003172  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3096   003174  6E08               	movwf	(??___xxtofl+3)^0,c
  3097   003176  5005               	movf	??___xxtofl^0,w,c
  3098   003178  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3099   00317A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3100   00317C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3101   00317E  A4D8               	btfss	status,2,c
  3102   003180  EFC4  F018         	goto	u3181
  3103   003184  EFC6  F018         	goto	u3180
  3104   003188                     u3181:
  3105   003188  EFA3  F018         	goto	l3033
  3106   00318C                     u3180:
  3107   00318C  EFCE  F018         	goto	l3041
  3108   003190                     l3039:
  3109   003190  060A               	decf	___xxtofl@exp^0,f,c
  3110   003192  90D8               	bcf	status,0,c
  3111   003194  360B               	rlcf	___xxtofl@arg^0,f,c
  3112   003196  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3113   003198  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3114   00319A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3115   00319C                     l3041:
  3116   00319C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3117   00319E  EFD3  F018         	goto	u3191
  3118   0031A2  EFD5  F018         	goto	u3190
  3119   0031A6                     u3191:
  3120   0031A6  EFDD  F018         	goto	l898
  3121   0031AA                     u3190:
  3122   0031AA  0E02               	movlw	2
  3123   0031AC  600A               	cpfslt	___xxtofl@exp^0,c
  3124   0031AE  EFDB  F018         	goto	u3201
  3125   0031B2  EFDD  F018         	goto	u3200
  3126   0031B6                     u3201:
  3127   0031B6  EFC8  F018         	goto	l3039
  3128   0031BA                     u3200:
  3129   0031BA                     l898:
  3130   0031BA  B00A               	btfsc	___xxtofl@exp^0,0,c
  3131   0031BC  EFE2  F018         	goto	u3211
  3132   0031C0  EFE4  F018         	goto	u3210
  3133   0031C4                     u3211:
  3134   0031C4  EFE5  F018         	goto	l3047
  3135   0031C8                     u3210:
  3136   0031C8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3137   0031CA                     l3047:
  3138   0031CA  90D8               	bcf	status,0,c
  3139   0031CC  320A               	rrcf	___xxtofl@exp^0,f,c
  3140   0031CE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3141   0031D2  6A06               	clrf	(??___xxtofl+1)^0,c
  3142   0031D4  6A07               	clrf	(??___xxtofl+2)^0,c
  3143   0031D6  6A08               	clrf	(??___xxtofl+3)^0,c
  3144   0031D8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3145   0031DC  6A07               	clrf	(??___xxtofl+2)^0,c
  3146   0031DE  6A06               	clrf	(??___xxtofl+1)^0,c
  3147   0031E0  6A05               	clrf	??___xxtofl^0,c
  3148   0031E2  5005               	movf	??___xxtofl^0,w,c
  3149   0031E4  120B               	iorwf	___xxtofl@arg^0,f,c
  3150   0031E6  5006               	movf	(??___xxtofl+1)^0,w,c
  3151   0031E8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3152   0031EA  5007               	movf	(??___xxtofl+2)^0,w,c
  3153   0031EC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3154   0031EE  5008               	movf	(??___xxtofl+3)^0,w,c
  3155   0031F0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3156   0031F2  5009               	movf	___xxtofl@sign^0,w,c
  3157   0031F4  B4D8               	btfsc	status,2,c
  3158   0031F6  EFFF  F018         	goto	u3221
  3159   0031FA  EF01  F019         	goto	u3220
  3160   0031FE                     u3221:
  3161   0031FE  EF09  F019         	goto	l3057
  3162   003202                     u3220:
  3163   003202  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3164   003204  EF08  F019         	goto	u3230
  3165   003208  EF06  F019         	goto	u3231
  3166   00320C                     u3231:
  3167   00320C  EF09  F019         	goto	l3057
  3168   003210                     u3230:
  3169   003210  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3170   003212                     l3057:
  3171   003212  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3172   003216  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3173   00321A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3174   00321E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3175   003222                     l887:
  3176   003222  0012               	return		;funcret
  3177   003224                     __end_of___xxtofl:
  3178                           	callstack 0
  3179                           
  3180 ;; *************** function ___fltol *****************
  3181 ;; Defined at:
  3182 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  f1              4   80[COMRAM] unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  exp1            1   89[COMRAM] unsigned char 
  3187 ;;  sign1           1   88[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  4   80[COMRAM] long 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:       10 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_runDAC
  3207 ;;		___rem_pio2f
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text7
  3212   0034DA                     __ptext7:
  3213                           	callstack 0
  3214   0034DA                     ___fltol:
  3215                           	callstack 27
  3216   0034DA  3453               	rlcf	(___fltol@f1+2)^0,w,c
  3217   0034DC  3454               	rlcf	(___fltol@f1+3)^0,w,c
  3218   0034DE  6E5A               	movwf	___fltol@exp1^0,c
  3219   0034E0  505A               	movf	___fltol@exp1^0,w,c
  3220   0034E2  A4D8               	btfss	status,2,c
  3221   0034E4  EF76  F01A         	goto	u3071
  3222   0034E8  EF78  F01A         	goto	u3070
  3223   0034EC                     u3071:
  3224   0034EC  EF82  F01A         	goto	l2977
  3225   0034F0                     u3070:
  3226   0034F0                     l2973:
  3227   0034F0  0E00               	movlw	0
  3228   0034F2  6E51               	movwf	?___fltol^0,c
  3229   0034F4  0E00               	movlw	0
  3230   0034F6  6E52               	movwf	(?___fltol+1)^0,c
  3231   0034F8  0E00               	movlw	0
  3232   0034FA  6E53               	movwf	(?___fltol+2)^0,c
  3233   0034FC  0E00               	movlw	0
  3234   0034FE  6E54               	movwf	(?___fltol+3)^0,c
  3235   003500  EFEF  F01A         	goto	l526
  3236   003504                     l2977:
  3237   003504  C051  F055         	movff	___fltol@f1,??___fltol
  3238   003508  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  3239   00350C  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  3240   003510  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  3241   003514  0E20               	movlw	32
  3242   003516  EF92  F01A         	goto	u3080
  3243   00351A                     u3085:
  3244   00351A  90D8               	bcf	status,0,c
  3245   00351C  3258               	rrcf	(??___fltol+3)^0,f,c
  3246   00351E  3257               	rrcf	(??___fltol+2)^0,f,c
  3247   003520  3256               	rrcf	(??___fltol+1)^0,f,c
  3248   003522  3255               	rrcf	??___fltol^0,f,c
  3249   003524                     u3080:
  3250   003524  2EE8               	decfsz	wreg,f,c
  3251   003526  EF8D  F01A         	goto	u3085
  3252   00352A  5055               	movf	??___fltol^0,w,c
  3253   00352C  6E59               	movwf	___fltol@sign1^0,c
  3254   00352E  8E53               	bsf	(___fltol@f1+2)^0,7,c
  3255   003530  0EFF               	movlw	255
  3256   003532  1651               	andwf	___fltol@f1^0,f,c
  3257   003534  0EFF               	movlw	255
  3258   003536  1652               	andwf	(___fltol@f1+1)^0,f,c
  3259   003538  0EFF               	movlw	255
  3260   00353A  1653               	andwf	(___fltol@f1+2)^0,f,c
  3261   00353C  0E00               	movlw	0
  3262   00353E  1654               	andwf	(___fltol@f1+3)^0,f,c
  3263   003540  0E96               	movlw	150
  3264   003542  5E5A               	subwf	___fltol@exp1^0,f,c
  3265   003544  BE5A               	btfsc	___fltol@exp1^0,7,c
  3266   003546  EFA9  F01A         	goto	u3090
  3267   00354A  EFA7  F01A         	goto	u3091
  3268   00354E                     u3091:
  3269   00354E  EFBF  F01A         	goto	l2997
  3270   003552                     u3090:
  3271   003552  505A               	movf	___fltol@exp1^0,w,c
  3272   003554  0A80               	xorlw	128
  3273   003556  0F97               	addlw	151
  3274   003558  B0D8               	btfsc	status,0,c
  3275   00355A  EFB1  F01A         	goto	u3101
  3276   00355E  EFB3  F01A         	goto	u3100
  3277   003562                     u3101:
  3278   003562  EFB5  F01A         	goto	l2993
  3279   003566                     u3100:
  3280   003566  EF78  F01A         	goto	l2973
  3281   00356A                     l2993:
  3282   00356A  90D8               	bcf	status,0,c
  3283   00356C  3254               	rrcf	(___fltol@f1+3)^0,f,c
  3284   00356E  3253               	rrcf	(___fltol@f1+2)^0,f,c
  3285   003570  3252               	rrcf	(___fltol@f1+1)^0,f,c
  3286   003572  3251               	rrcf	___fltol@f1^0,f,c
  3287   003574  3E5A               	incfsz	___fltol@exp1^0,f,c
  3288   003576  EFB5  F01A         	goto	l2993
  3289   00357A  EFD7  F01A         	goto	l3007
  3290   00357E                     l2997:
  3291   00357E  0E1F               	movlw	31
  3292   003580  645A               	cpfsgt	___fltol@exp1^0,c
  3293   003582  EFC5  F01A         	goto	u3111
  3294   003586  EFC7  F01A         	goto	u3110
  3295   00358A                     u3111:
  3296   00358A  EFCF  F01A         	goto	l3005
  3297   00358E                     u3110:
  3298   00358E  EF78  F01A         	goto	l2973
  3299   003592                     l3003:
  3300   003592  90D8               	bcf	status,0,c
  3301   003594  3651               	rlcf	___fltol@f1^0,f,c
  3302   003596  3652               	rlcf	(___fltol@f1+1)^0,f,c
  3303   003598  3653               	rlcf	(___fltol@f1+2)^0,f,c
  3304   00359A  3654               	rlcf	(___fltol@f1+3)^0,f,c
  3305   00359C  065A               	decf	___fltol@exp1^0,f,c
  3306   00359E                     l3005:
  3307   00359E  505A               	movf	___fltol@exp1^0,w,c
  3308   0035A0  A4D8               	btfss	status,2,c
  3309   0035A2  EFD5  F01A         	goto	u3121
  3310   0035A6  EFD7  F01A         	goto	u3120
  3311   0035AA                     u3121:
  3312   0035AA  EFC9  F01A         	goto	l3003
  3313   0035AE                     u3120:
  3314   0035AE                     l3007:
  3315   0035AE  5059               	movf	___fltol@sign1^0,w,c
  3316   0035B0  B4D8               	btfsc	status,2,c
  3317   0035B2  EFDD  F01A         	goto	u3131
  3318   0035B6  EFDF  F01A         	goto	u3130
  3319   0035BA                     u3131:
  3320   0035BA  EFE7  F01A         	goto	l3011
  3321   0035BE                     u3130:
  3322   0035BE  1E54               	comf	(___fltol@f1+3)^0,f,c
  3323   0035C0  1E53               	comf	(___fltol@f1+2)^0,f,c
  3324   0035C2  1E52               	comf	(___fltol@f1+1)^0,f,c
  3325   0035C4  6C51               	negf	___fltol@f1^0,c
  3326   0035C6  0E00               	movlw	0
  3327   0035C8  2252               	addwfc	(___fltol@f1+1)^0,f,c
  3328   0035CA  2253               	addwfc	(___fltol@f1+2)^0,f,c
  3329   0035CC  2254               	addwfc	(___fltol@f1+3)^0,f,c
  3330   0035CE                     l3011:
  3331   0035CE  C051  F051         	movff	___fltol@f1,?___fltol
  3332   0035D2  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  3333   0035D6  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  3334   0035DA  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  3335   0035DE                     l526:
  3336   0035DE  0012               	return		;funcret
  3337   0035E0                     __end_of___fltol:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function ___flsub *****************
  3341 ;; Defined at:
  3342 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  b               4   80[COMRAM] long 
  3345 ;;  a               4   84[COMRAM] long 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  4   80[COMRAM] long 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        8 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 1
  3364 ;; This function calls:
  3365 ;;		___fladd
  3366 ;; This function is called by:
  3367 ;;		___rem_pio2f
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text8
  3372   003BC6                     __ptext8:
  3373                           	callstack 0
  3374   003BC6                     ___flsub:
  3375                           	callstack 26
  3376   003BC6  0E00               	movlw	0
  3377   003BC8  1A55               	xorwf	___flsub@a^0,f,c
  3378   003BCA  0E00               	movlw	0
  3379   003BCC  1A56               	xorwf	(___flsub@a+1)^0,f,c
  3380   003BCE  0E00               	movlw	0
  3381   003BD0  1A57               	xorwf	(___flsub@a+2)^0,f,c
  3382   003BD2  0E80               	movlw	128
  3383   003BD4  1A58               	xorwf	(___flsub@a+3)^0,f,c
  3384   003BD6  C051  F041         	movff	___flsub@b,___fladd@b
  3385   003BDA  C052  F042         	movff	___flsub@b+1,___fladd@b+1
  3386   003BDE  C053  F043         	movff	___flsub@b+2,___fladd@b+2
  3387   003BE2  C054  F044         	movff	___flsub@b+3,___fladd@b+3
  3388   003BE6  C055  F045         	movff	___flsub@a,___fladd@a
  3389   003BEA  C056  F046         	movff	___flsub@a+1,___fladd@a+1
  3390   003BEE  C057  F047         	movff	___flsub@a+2,___fladd@a+2
  3391   003BF2  C058  F048         	movff	___flsub@a+3,___fladd@a+3
  3392   003BF6  ECD1  F00A         	call	___fladd	;wreg free
  3393   003BFA  C041  F051         	movff	?___fladd,?___flsub
  3394   003BFE  C042  F052         	movff	?___fladd+1,?___flsub+1
  3395   003C02  C043  F053         	movff	?___fladd+2,?___flsub+2
  3396   003C06  C044  F054         	movff	?___fladd+3,?___flsub+3
  3397   003C0A  0012               	return		;funcret
  3398   003C0C                     __end_of___flsub:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function ___flneg *****************
  3402 ;; Defined at:
  3403 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  f1              4   24[BANK0 ] long 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  4   24[BANK0 ] long 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        4 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_sinf
  3427 ;;		___rem_pio2f
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text9
  3432   003CCC                     __ptext9:
  3433                           	callstack 0
  3434   003CCC                     ___flneg:
  3435                           	callstack 27
  3436   003CCC  0100               	movlb	0	; () banked
  3437   003CCE  5178               	movf	___flneg@f1& (0+255),w,b
  3438   003CD0  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
  3439   003CD2  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
  3440   003CD4  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
  3441   003CD6  B4D8               	btfsc	status,2,c
  3442   003CD8  EF70  F01E         	goto	u3061
  3443   003CDC  EF72  F01E         	goto	u3060
  3444   003CE0                     u3061:
  3445   003CE0  EF7A  F01E         	goto	l2967
  3446   003CE4                     u3060:
  3447   003CE4                     
  3448                           ; BSR set to: 0
  3449   003CE4  0E00               	movlw	0
  3450   003CE6  1B78               	xorwf	___flneg@f1& (0+255),f,b
  3451   003CE8  0E00               	movlw	0
  3452   003CEA  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
  3453   003CEC  0E00               	movlw	0
  3454   003CEE  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
  3455   003CF0  0E80               	movlw	128
  3456   003CF2  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
  3457   003CF4                     l2967:
  3458                           
  3459                           ; BSR set to: 0
  3460   003CF4  C078  F078         	movff	___flneg@f1,?___flneg
  3461   003CF8  C079  F079         	movff	___flneg@f1+1,?___flneg+1
  3462   003CFC  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
  3463   003D00  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
  3464   003D04                     
  3465                           ; BSR set to: 0
  3466   003D04  0012               	return		;funcret
  3467   003D06                     __end_of___flneg:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function ___cosdf *****************
  3471 ;; Defined at:
  3472 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__cosdf.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  x               4   80[COMRAM] long 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  z               4   20[BANK0 ] long 
  3477 ;;  w               4   16[BANK0 ] long 
  3478 ;;  r               4    0[BANK0 ] long 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  4   80[COMRAM] float 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;Total ram usage:       28 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 1
  3495 ;; This function calls:
  3496 ;;		___fladd
  3497 ;;		___flmul
  3498 ;; This function is called by:
  3499 ;;		_sinf
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text10
  3504   002CBA                     __ptext10:
  3505                           	callstack 0
  3506   002CBA                     ___cosdf:
  3507                           	callstack 27
  3508   002CBA  C051  F00F         	movff	___cosdf@x,___flmul@b
  3509   002CBE  C052  F010         	movff	___cosdf@x+1,___flmul@b+1
  3510   002CC2  C053  F011         	movff	___cosdf@x+2,___flmul@b+2
  3511   002CC6  C054  F012         	movff	___cosdf@x+3,___flmul@b+3
  3512   002CCA  C051  F013         	movff	___cosdf@x,___flmul@a
  3513   002CCE  C052  F014         	movff	___cosdf@x+1,___flmul@a+1
  3514   002CD2  C053  F015         	movff	___cosdf@x+2,___flmul@a+2
  3515   002CD6  C054  F016         	movff	___cosdf@x+3,___flmul@a+3
  3516   002CDA  EC31  F00D         	call	___flmul	;wreg free
  3517   002CDE  C00F  F074         	movff	?___flmul,___cosdf@z
  3518   002CE2  C010  F075         	movff	?___flmul+1,___cosdf@z+1
  3519   002CE6  C011  F076         	movff	?___flmul+2,___cosdf@z+2
  3520   002CEA  C012  F077         	movff	?___flmul+3,___cosdf@z+3
  3521   002CEE  C074  F00F         	movff	___cosdf@z,___flmul@b
  3522   002CF2  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  3523   002CF6  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  3524   002CFA  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  3525   002CFE  C074  F013         	movff	___cosdf@z,___flmul@a
  3526   002D02  C075  F014         	movff	___cosdf@z+1,___flmul@a+1
  3527   002D06  C076  F015         	movff	___cosdf@z+2,___flmul@a+2
  3528   002D0A  C077  F016         	movff	___cosdf@z+3,___flmul@a+3
  3529   002D0E  EC31  F00D         	call	___flmul	;wreg free
  3530   002D12  C00F  F070         	movff	?___flmul,___cosdf@w
  3531   002D16  C010  F071         	movff	?___flmul+1,___cosdf@w+1
  3532   002D1A  C011  F072         	movff	?___flmul+2,___cosdf@w+2
  3533   002D1E  C012  F073         	movff	?___flmul+3,___cosdf@w+3
  3534   002D22  0E17               	movlw	23
  3535   002D24  6E13               	movwf	___flmul@a^0,c
  3536   002D26  0E9A               	movlw	154
  3537   002D28  6E14               	movwf	(___flmul@a+1)^0,c
  3538   002D2A  0ECC               	movlw	204
  3539   002D2C  6E15               	movwf	(___flmul@a+2)^0,c
  3540   002D2E  0E37               	movlw	55
  3541   002D30  6E16               	movwf	(___flmul@a+3)^0,c
  3542   002D32  C074  F00F         	movff	___cosdf@z,___flmul@b
  3543   002D36  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  3544   002D3A  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  3545   002D3E  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  3546   002D42  EC31  F00D         	call	___flmul	;wreg free
  3547   002D46  C00F  F041         	movff	?___flmul,___fladd@b
  3548   002D4A  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3549   002D4E  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3550   002D52  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3551   002D56  0E3F               	movlw	63
  3552   002D58  6E45               	movwf	___fladd@a^0,c
  3553   002D5A  0E04               	movlw	4
  3554   002D5C  6E46               	movwf	(___fladd@a+1)^0,c
  3555   002D5E  0EB6               	movlw	182
  3556   002D60  6E47               	movwf	(___fladd@a+2)^0,c
  3557   002D62  0EBA               	movlw	186
  3558   002D64  6E48               	movwf	(___fladd@a+3)^0,c
  3559   002D66  ECD1  F00A         	call	___fladd	;wreg free
  3560   002D6A  C041  F060         	movff	?___fladd,___cosdf@r
  3561   002D6E  C042  F061         	movff	?___fladd+1,___cosdf@r+1
  3562   002D72  C043  F062         	movff	?___fladd+2,___cosdf@r+2
  3563   002D76  C044  F063         	movff	?___fladd+3,___cosdf@r+3
  3564   002D7A  0E00               	movlw	0
  3565   002D7C  6E45               	movwf	___fladd@a^0,c
  3566   002D7E  0E00               	movlw	0
  3567   002D80  6E46               	movwf	(___fladd@a+1)^0,c
  3568   002D82  0E80               	movlw	128
  3569   002D84  6E47               	movwf	(___fladd@a+2)^0,c
  3570   002D86  0E3F               	movlw	63
  3571   002D88  6E48               	movwf	(___fladd@a+3)^0,c
  3572   002D8A  0E00               	movlw	0
  3573   002D8C  6E13               	movwf	___flmul@a^0,c
  3574   002D8E  0E00               	movlw	0
  3575   002D90  6E14               	movwf	(___flmul@a+1)^0,c
  3576   002D92  0E00               	movlw	0
  3577   002D94  6E15               	movwf	(___flmul@a+2)^0,c
  3578   002D96  0EBF               	movlw	191
  3579   002D98  6E16               	movwf	(___flmul@a+3)^0,c
  3580   002D9A  C074  F00F         	movff	___cosdf@z,___flmul@b
  3581   002D9E  C075  F010         	movff	___cosdf@z+1,___flmul@b+1
  3582   002DA2  C076  F011         	movff	___cosdf@z+2,___flmul@b+2
  3583   002DA6  C077  F012         	movff	___cosdf@z+3,___flmul@b+3
  3584   002DAA  EC31  F00D         	call	___flmul	;wreg free
  3585   002DAE  C00F  F041         	movff	?___flmul,___fladd@b
  3586   002DB2  C010  F042         	movff	?___flmul+1,___fladd@b+1
  3587   002DB6  C011  F043         	movff	?___flmul+2,___fladd@b+2
  3588   002DBA  C012  F044         	movff	?___flmul+3,___fladd@b+3
  3589   002DBE  ECD1  F00A         	call	___fladd	;wreg free
  3590   002DC2  C041  F064         	movff	?___fladd,___cosdf$2734
  3591   002DC6  C042  F065         	movff	?___fladd+1,___cosdf$2734+1
  3592   002DCA  C043  F066         	movff	?___fladd+2,___cosdf$2734+2
  3593   002DCE  C044  F067         	movff	?___fladd+3,___cosdf$2734+3
  3594   002DD2  C074  F013         	movff	___cosdf@z,___flmul@a
  3595   002DD6  C075  F014         	movff	___cosdf@z+1,___flmul@a+1
  3596   002DDA  C076  F015         	movff	___cosdf@z+2,___flmul@a+2
  3597   002DDE  C077  F016         	movff	___cosdf@z+3,___flmul@a+3
  3598   002DE2  C070  F00F         	movff	___cosdf@w,___flmul@b
  3599   002DE6  C071  F010         	movff	___cosdf@w+1,___flmul@b+1
  3600   002DEA  C072  F011         	movff	___cosdf@w+2,___flmul@b+2
  3601   002DEE  C073  F012         	movff	___cosdf@w+3,___flmul@b+3
  3602   002DF2  EC31  F00D         	call	___flmul	;wreg free
  3603   002DF6  C00F  F068         	movff	?___flmul,___cosdf$2735
  3604   002DFA  C010  F069         	movff	?___flmul+1,___cosdf$2735+1
  3605   002DFE  C011  F06A         	movff	?___flmul+2,___cosdf$2735+2
  3606   002E02  C012  F06B         	movff	?___flmul+3,___cosdf$2735+3
  3607   002E06  0E9F               	movlw	159
  3608   002E08  6E13               	movwf	___flmul@a^0,c
  3609   002E0A  0EAA               	movlw	170
  3610   002E0C  6E14               	movwf	(___flmul@a+1)^0,c
  3611   002E0E  0E2A               	movlw	42
  3612   002E10  6E15               	movwf	(___flmul@a+2)^0,c
  3613   002E12  0E3D               	movlw	61
  3614   002E14  6E16               	movwf	(___flmul@a+3)^0,c
  3615   002E16  C070  F00F         	movff	___cosdf@w,___flmul@b
  3616   002E1A  C071  F010         	movff	___cosdf@w+1,___flmul@b+1
  3617   002E1E  C072  F011         	movff	___cosdf@w+2,___flmul@b+2
  3618   002E22  C073  F012         	movff	___cosdf@w+3,___flmul@b+3
  3619   002E26  EC31  F00D         	call	___flmul	;wreg free
  3620   002E2A  C00F  F045         	movff	?___flmul,___fladd@a
  3621   002E2E  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3622   002E32  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3623   002E36  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3624   002E3A  C064  F041         	movff	___cosdf$2734,___fladd@b
  3625   002E3E  C065  F042         	movff	___cosdf$2734+1,___fladd@b+1
  3626   002E42  C066  F043         	movff	___cosdf$2734+2,___fladd@b+2
  3627   002E46  C067  F044         	movff	___cosdf$2734+3,___fladd@b+3
  3628   002E4A  ECD1  F00A         	call	___fladd	;wreg free
  3629   002E4E  C041  F06C         	movff	?___fladd,___cosdf$2736
  3630   002E52  C042  F06D         	movff	?___fladd+1,___cosdf$2736+1
  3631   002E56  C043  F06E         	movff	?___fladd+2,___cosdf$2736+2
  3632   002E5A  C044  F06F         	movff	?___fladd+3,___cosdf$2736+3
  3633   002E5E  C06C  F041         	movff	___cosdf$2736,___fladd@b
  3634   002E62  C06D  F042         	movff	___cosdf$2736+1,___fladd@b+1
  3635   002E66  C06E  F043         	movff	___cosdf$2736+2,___fladd@b+2
  3636   002E6A  C06F  F044         	movff	___cosdf$2736+3,___fladd@b+3
  3637   002E6E  C060  F013         	movff	___cosdf@r,___flmul@a
  3638   002E72  C061  F014         	movff	___cosdf@r+1,___flmul@a+1
  3639   002E76  C062  F015         	movff	___cosdf@r+2,___flmul@a+2
  3640   002E7A  C063  F016         	movff	___cosdf@r+3,___flmul@a+3
  3641   002E7E  C068  F00F         	movff	___cosdf$2735,___flmul@b
  3642   002E82  C069  F010         	movff	___cosdf$2735+1,___flmul@b+1
  3643   002E86  C06A  F011         	movff	___cosdf$2735+2,___flmul@b+2
  3644   002E8A  C06B  F012         	movff	___cosdf$2735+3,___flmul@b+3
  3645   002E8E  EC31  F00D         	call	___flmul	;wreg free
  3646   002E92  C00F  F045         	movff	?___flmul,___fladd@a
  3647   002E96  C010  F046         	movff	?___flmul+1,___fladd@a+1
  3648   002E9A  C011  F047         	movff	?___flmul+2,___fladd@a+2
  3649   002E9E  C012  F048         	movff	?___flmul+3,___fladd@a+3
  3650   002EA2  ECD1  F00A         	call	___fladd	;wreg free
  3651   002EA6  C041  F051         	movff	?___fladd,?___cosdf
  3652   002EAA  C042  F052         	movff	?___fladd+1,?___cosdf+1
  3653   002EAE  C043  F053         	movff	?___fladd+2,?___cosdf+2
  3654   002EB2  C044  F054         	movff	?___fladd+3,?___cosdf+3
  3655   002EB6  0012               	return		;funcret
  3656   002EB8                     __end_of___cosdf:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function ___flmul *****************
  3660 ;; Defined at:
  3661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  b               4   14[COMRAM] float 
  3664 ;;  a               4   18[COMRAM] float 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  prod            4   33[COMRAM] struct .
  3667 ;;  grs             4   27[COMRAM] unsigned long 
  3668 ;;  temp            2   37[COMRAM] struct .
  3669 ;;  bexp            1   32[COMRAM] unsigned char 
  3670 ;;  aexp            1   31[COMRAM] unsigned char 
  3671 ;;  sign            1   26[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  4   14[COMRAM] unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, prodl, prodh
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3681 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;Total ram usage:       25 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_runDAC
  3691 ;;		___cosdf
  3692 ;;		___rem_pio2f
  3693 ;;		___sindf
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text11
  3698   001A62                     __ptext11:
  3699                           	callstack 0
  3700   001A62                     ___flmul:
  3701                           	callstack 27
  3702   001A62  5012               	movf	(___flmul@b+3)^0,w,c
  3703   001A64  0B80               	andlw	128
  3704   001A66  6E1B               	movwf	___flmul@sign^0,c
  3705   001A68  5012               	movf	(___flmul@b+3)^0,w,c
  3706   001A6A  2412               	addwf	(___flmul@b+3)^0,w,c
  3707   001A6C  6E21               	movwf	___flmul@bexp^0,c
  3708   001A6E  AE11               	btfss	(___flmul@b+2)^0,7,c
  3709   001A70  EF3C  F00D         	goto	u2871
  3710   001A74  EF3E  F00D         	goto	u2870
  3711   001A78                     u2871:
  3712   001A78  EF3F  F00D         	goto	l2833
  3713   001A7C                     u2870:
  3714   001A7C  8021               	bsf	___flmul@bexp^0,0,c
  3715   001A7E                     l2833:
  3716   001A7E  5021               	movf	___flmul@bexp^0,w,c
  3717   001A80  B4D8               	btfsc	status,2,c
  3718   001A82  EF45  F00D         	goto	u2881
  3719   001A86  EF47  F00D         	goto	u2880
  3720   001A8A                     u2881:
  3721   001A8A  EF5A  F00D         	goto	l2841
  3722   001A8E                     u2880:
  3723   001A8E  2821               	incf	___flmul@bexp^0,w,c
  3724   001A90  A4D8               	btfss	status,2,c
  3725   001A92  EF4D  F00D         	goto	u2891
  3726   001A96  EF4F  F00D         	goto	u2890
  3727   001A9A                     u2891:
  3728   001A9A  EF57  F00D         	goto	l2839
  3729   001A9E                     u2890:
  3730   001A9E  0E00               	movlw	0
  3731   001AA0  6E0F               	movwf	___flmul@b^0,c
  3732   001AA2  0E00               	movlw	0
  3733   001AA4  6E10               	movwf	(___flmul@b+1)^0,c
  3734   001AA6  0E00               	movlw	0
  3735   001AA8  6E11               	movwf	(___flmul@b+2)^0,c
  3736   001AAA  0E00               	movlw	0
  3737   001AAC  6E12               	movwf	(___flmul@b+3)^0,c
  3738   001AAE                     l2839:
  3739   001AAE  8E11               	bsf	(___flmul@b+2)^0,7,c
  3740   001AB0  EF62  F00D         	goto	l2843
  3741   001AB4                     l2841:
  3742   001AB4  0E00               	movlw	0
  3743   001AB6  6E0F               	movwf	___flmul@b^0,c
  3744   001AB8  0E00               	movlw	0
  3745   001ABA  6E10               	movwf	(___flmul@b+1)^0,c
  3746   001ABC  0E00               	movlw	0
  3747   001ABE  6E11               	movwf	(___flmul@b+2)^0,c
  3748   001AC0  0E00               	movlw	0
  3749   001AC2  6E12               	movwf	(___flmul@b+3)^0,c
  3750   001AC4                     l2843:
  3751   001AC4  5016               	movf	(___flmul@a+3)^0,w,c
  3752   001AC6  0B80               	andlw	128
  3753   001AC8  1A1B               	xorwf	___flmul@sign^0,f,c
  3754   001ACA  5016               	movf	(___flmul@a+3)^0,w,c
  3755   001ACC  2416               	addwf	(___flmul@a+3)^0,w,c
  3756   001ACE  6E20               	movwf	___flmul@aexp^0,c
  3757   001AD0  AE15               	btfss	(___flmul@a+2)^0,7,c
  3758   001AD2  EF6D  F00D         	goto	u2901
  3759   001AD6  EF6F  F00D         	goto	u2900
  3760   001ADA                     u2901:
  3761   001ADA  EF70  F00D         	goto	l2851
  3762   001ADE                     u2900:
  3763   001ADE  8020               	bsf	___flmul@aexp^0,0,c
  3764   001AE0                     l2851:
  3765   001AE0  5020               	movf	___flmul@aexp^0,w,c
  3766   001AE2  B4D8               	btfsc	status,2,c
  3767   001AE4  EF76  F00D         	goto	u2911
  3768   001AE8  EF78  F00D         	goto	u2910
  3769   001AEC                     u2911:
  3770   001AEC  EF8B  F00D         	goto	l2859
  3771   001AF0                     u2910:
  3772   001AF0  2820               	incf	___flmul@aexp^0,w,c
  3773   001AF2  A4D8               	btfss	status,2,c
  3774   001AF4  EF7E  F00D         	goto	u2921
  3775   001AF8  EF80  F00D         	goto	u2920
  3776   001AFC                     u2921:
  3777   001AFC  EF88  F00D         	goto	l2857
  3778   001B00                     u2920:
  3779   001B00  0E00               	movlw	0
  3780   001B02  6E13               	movwf	___flmul@a^0,c
  3781   001B04  0E00               	movlw	0
  3782   001B06  6E14               	movwf	(___flmul@a+1)^0,c
  3783   001B08  0E00               	movlw	0
  3784   001B0A  6E15               	movwf	(___flmul@a+2)^0,c
  3785   001B0C  0E00               	movlw	0
  3786   001B0E  6E16               	movwf	(___flmul@a+3)^0,c
  3787   001B10                     l2857:
  3788   001B10  8E15               	bsf	(___flmul@a+2)^0,7,c
  3789   001B12  EF93  F00D         	goto	l843
  3790   001B16                     l2859:
  3791   001B16  0E00               	movlw	0
  3792   001B18  6E13               	movwf	___flmul@a^0,c
  3793   001B1A  0E00               	movlw	0
  3794   001B1C  6E14               	movwf	(___flmul@a+1)^0,c
  3795   001B1E  0E00               	movlw	0
  3796   001B20  6E15               	movwf	(___flmul@a+2)^0,c
  3797   001B22  0E00               	movlw	0
  3798   001B24  6E16               	movwf	(___flmul@a+3)^0,c
  3799   001B26                     l843:
  3800   001B26  5020               	movf	___flmul@aexp^0,w,c
  3801   001B28  B4D8               	btfsc	status,2,c
  3802   001B2A  EF99  F00D         	goto	u2931
  3803   001B2E  EF9B  F00D         	goto	u2930
  3804   001B32                     u2931:
  3805   001B32  EFA3  F00D         	goto	l2863
  3806   001B36                     u2930:
  3807   001B36  5021               	movf	___flmul@bexp^0,w,c
  3808   001B38  A4D8               	btfss	status,2,c
  3809   001B3A  EFA1  F00D         	goto	u2941
  3810   001B3E  EFA3  F00D         	goto	u2940
  3811   001B42                     u2941:
  3812   001B42  EFAD  F00D         	goto	l2867
  3813   001B46                     u2940:
  3814   001B46                     l2863:
  3815   001B46  0E00               	movlw	0
  3816   001B48  6E0F               	movwf	?___flmul^0,c
  3817   001B4A  0E00               	movlw	0
  3818   001B4C  6E10               	movwf	(?___flmul+1)^0,c
  3819   001B4E  0E00               	movlw	0
  3820   001B50  6E11               	movwf	(?___flmul+2)^0,c
  3821   001B52  0E00               	movlw	0
  3822   001B54  6E12               	movwf	(?___flmul+3)^0,c
  3823   001B56  EF45  F00F         	goto	l847
  3824   001B5A                     l2867:
  3825   001B5A  5015               	movf	(___flmul@a+2)^0,w,c
  3826   001B5C  020F               	mulwf	___flmul@b^0,c
  3827   001B5E  CFF3 F026          	movff	prodl,___flmul@temp
  3828   001B62  CFF4 F027          	movff	prodh,___flmul@temp+1
  3829   001B66  5026               	movf	___flmul@temp^0,w,c
  3830   001B68  6E1C               	movwf	___flmul@grs^0,c
  3831   001B6A  6A1D               	clrf	(___flmul@grs+1)^0,c
  3832   001B6C  6A1E               	clrf	(___flmul@grs+2)^0,c
  3833   001B6E  6A1F               	clrf	(___flmul@grs+3)^0,c
  3834   001B70  5027               	movf	(___flmul@temp+1)^0,w,c
  3835   001B72  6E22               	movwf	___flmul@prod^0,c
  3836   001B74  6A23               	clrf	(___flmul@prod+1)^0,c
  3837   001B76  6A24               	clrf	(___flmul@prod+2)^0,c
  3838   001B78  6A25               	clrf	(___flmul@prod+3)^0,c
  3839   001B7A  5014               	movf	(___flmul@a+1)^0,w,c
  3840   001B7C  0210               	mulwf	(___flmul@b+1)^0,c
  3841   001B7E  CFF3 F026          	movff	prodl,___flmul@temp
  3842   001B82  CFF4 F027          	movff	prodh,___flmul@temp+1
  3843   001B86  5026               	movf	___flmul@temp^0,w,c
  3844   001B88  261C               	addwf	___flmul@grs^0,f,c
  3845   001B8A  0E00               	movlw	0
  3846   001B8C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3847   001B8E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3848   001B90  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3849   001B92  5027               	movf	(___flmul@temp+1)^0,w,c
  3850   001B94  2622               	addwf	___flmul@prod^0,f,c
  3851   001B96  0E00               	movlw	0
  3852   001B98  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3853   001B9A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3854   001B9C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3855   001B9E  5013               	movf	___flmul@a^0,w,c
  3856   001BA0  0211               	mulwf	(___flmul@b+2)^0,c
  3857   001BA2  CFF3 F026          	movff	prodl,___flmul@temp
  3858   001BA6  CFF4 F027          	movff	prodh,___flmul@temp+1
  3859   001BAA  5026               	movf	___flmul@temp^0,w,c
  3860   001BAC  261C               	addwf	___flmul@grs^0,f,c
  3861   001BAE  0E00               	movlw	0
  3862   001BB0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3863   001BB2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3864   001BB4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3865   001BB6  5027               	movf	(___flmul@temp+1)^0,w,c
  3866   001BB8  2622               	addwf	___flmul@prod^0,f,c
  3867   001BBA  0E00               	movlw	0
  3868   001BBC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3869   001BBE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3870   001BC0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3871   001BC2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3872   001BC6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3873   001BCA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3874   001BCE  6A1C               	clrf	___flmul@grs^0,c
  3875   001BD0  5013               	movf	___flmul@a^0,w,c
  3876   001BD2  0210               	mulwf	(___flmul@b+1)^0,c
  3877   001BD4  CFF3 F026          	movff	prodl,___flmul@temp
  3878   001BD8  CFF4 F027          	movff	prodh,___flmul@temp+1
  3879   001BDC  5026               	movf	___flmul@temp^0,w,c
  3880   001BDE  261C               	addwf	___flmul@grs^0,f,c
  3881   001BE0  5027               	movf	(___flmul@temp+1)^0,w,c
  3882   001BE2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3883   001BE4  0E00               	movlw	0
  3884   001BE6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3885   001BE8  0E00               	movlw	0
  3886   001BEA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3887   001BEC  5014               	movf	(___flmul@a+1)^0,w,c
  3888   001BEE  020F               	mulwf	___flmul@b^0,c
  3889   001BF0  CFF3 F026          	movff	prodl,___flmul@temp
  3890   001BF4  CFF4 F027          	movff	prodh,___flmul@temp+1
  3891   001BF8  5026               	movf	___flmul@temp^0,w,c
  3892   001BFA  261C               	addwf	___flmul@grs^0,f,c
  3893   001BFC  5027               	movf	(___flmul@temp+1)^0,w,c
  3894   001BFE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3895   001C00  0E00               	movlw	0
  3896   001C02  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3897   001C04  0E00               	movlw	0
  3898   001C06  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3899   001C08  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3900   001C0C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3901   001C10  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3902   001C14  6A1C               	clrf	___flmul@grs^0,c
  3903   001C16  5013               	movf	___flmul@a^0,w,c
  3904   001C18  020F               	mulwf	___flmul@b^0,c
  3905   001C1A  CFF3 F026          	movff	prodl,___flmul@temp
  3906   001C1E  CFF4 F027          	movff	prodh,___flmul@temp+1
  3907   001C22  5026               	movf	___flmul@temp^0,w,c
  3908   001C24  261C               	addwf	___flmul@grs^0,f,c
  3909   001C26  5027               	movf	(___flmul@temp+1)^0,w,c
  3910   001C28  221D               	addwfc	(___flmul@grs+1)^0,f,c
  3911   001C2A  0E00               	movlw	0
  3912   001C2C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  3913   001C2E  0E00               	movlw	0
  3914   001C30  221F               	addwfc	(___flmul@grs+3)^0,f,c
  3915   001C32  5015               	movf	(___flmul@a+2)^0,w,c
  3916   001C34  0210               	mulwf	(___flmul@b+1)^0,c
  3917   001C36  CFF3 F026          	movff	prodl,___flmul@temp
  3918   001C3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  3919   001C3E  5026               	movf	___flmul@temp^0,w,c
  3920   001C40  2622               	addwf	___flmul@prod^0,f,c
  3921   001C42  5027               	movf	(___flmul@temp+1)^0,w,c
  3922   001C44  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3923   001C46  0E00               	movlw	0
  3924   001C48  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3925   001C4A  0E00               	movlw	0
  3926   001C4C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3927   001C4E  5014               	movf	(___flmul@a+1)^0,w,c
  3928   001C50  0211               	mulwf	(___flmul@b+2)^0,c
  3929   001C52  CFF3 F026          	movff	prodl,___flmul@temp
  3930   001C56  CFF4 F027          	movff	prodh,___flmul@temp+1
  3931   001C5A  5026               	movf	___flmul@temp^0,w,c
  3932   001C5C  2622               	addwf	___flmul@prod^0,f,c
  3933   001C5E  5027               	movf	(___flmul@temp+1)^0,w,c
  3934   001C60  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3935   001C62  0E00               	movlw	0
  3936   001C64  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3937   001C66  0E00               	movlw	0
  3938   001C68  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3939   001C6A  5015               	movf	(___flmul@a+2)^0,w,c
  3940   001C6C  0211               	mulwf	(___flmul@b+2)^0,c
  3941   001C6E  CFF3 F026          	movff	prodl,___flmul@temp
  3942   001C72  CFF4 F027          	movff	prodh,___flmul@temp+1
  3943   001C76  5026               	movf	___flmul@temp^0,w,c
  3944   001C78  6E17               	movwf	??___flmul^0,c
  3945   001C7A  5027               	movf	(___flmul@temp+1)^0,w,c
  3946   001C7C  6E18               	movwf	(??___flmul+1)^0,c
  3947   001C7E  6A19               	clrf	(??___flmul+2)^0,c
  3948   001C80  6A1A               	clrf	(??___flmul+3)^0,c
  3949   001C82  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3950   001C86  C018  F019         	movff	??___flmul+1,??___flmul+2
  3951   001C8A  C017  F018         	movff	??___flmul,??___flmul+1
  3952   001C8E  6A17               	clrf	??___flmul^0,c
  3953   001C90  5017               	movf	??___flmul^0,w,c
  3954   001C92  2622               	addwf	___flmul@prod^0,f,c
  3955   001C94  5018               	movf	(??___flmul+1)^0,w,c
  3956   001C96  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3957   001C98  5019               	movf	(??___flmul+2)^0,w,c
  3958   001C9A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3959   001C9C  501A               	movf	(??___flmul+3)^0,w,c
  3960   001C9E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3961   001CA0  C01C  F017         	movff	___flmul@grs,??___flmul
  3962   001CA4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3963   001CA8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3964   001CAC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3965   001CB0  0E19               	movlw	25
  3966   001CB2  EF60  F00E         	goto	u2950
  3967   001CB6                     u2955:
  3968   001CB6  90D8               	bcf	status,0,c
  3969   001CB8  321A               	rrcf	(??___flmul+3)^0,f,c
  3970   001CBA  3219               	rrcf	(??___flmul+2)^0,f,c
  3971   001CBC  3218               	rrcf	(??___flmul+1)^0,f,c
  3972   001CBE  3217               	rrcf	??___flmul^0,f,c
  3973   001CC0                     u2950:
  3974   001CC0  2EE8               	decfsz	wreg,f,c
  3975   001CC2  EF5B  F00E         	goto	u2955
  3976   001CC6  5017               	movf	??___flmul^0,w,c
  3977   001CC8  2622               	addwf	___flmul@prod^0,f,c
  3978   001CCA  5018               	movf	(??___flmul+1)^0,w,c
  3979   001CCC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  3980   001CCE  5019               	movf	(??___flmul+2)^0,w,c
  3981   001CD0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  3982   001CD2  501A               	movf	(??___flmul+3)^0,w,c
  3983   001CD4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  3984   001CD6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3985   001CDA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3986   001CDE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3987   001CE2  6A1C               	clrf	___flmul@grs^0,c
  3988   001CE4  5020               	movf	___flmul@aexp^0,w,c
  3989   001CE6  C021  F017         	movff	___flmul@bexp,??___flmul
  3990   001CEA  6A18               	clrf	(??___flmul+1)^0,c
  3991   001CEC  2617               	addwf	??___flmul^0,f,c
  3992   001CEE  0E00               	movlw	0
  3993   001CF0  2218               	addwfc	(??___flmul+1)^0,f,c
  3994   001CF2  0E82               	movlw	130
  3995   001CF4  2417               	addwf	??___flmul^0,w,c
  3996   001CF6  6E26               	movwf	___flmul@temp^0,c
  3997   001CF8  0EFF               	movlw	255
  3998   001CFA  2018               	addwfc	(??___flmul+1)^0,w,c
  3999   001CFC  6E27               	movwf	(___flmul@temp+1)^0,c
  4000   001CFE  EF96  F00E         	goto	l2915
  4001   001D02                     l2909:
  4002   001D02  90D8               	bcf	status,0,c
  4003   001D04  3622               	rlcf	___flmul@prod^0,f,c
  4004   001D06  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4005   001D08  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4006   001D0A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4007   001D0C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4008   001D0E  EF8B  F00E         	goto	u2961
  4009   001D12  EF8D  F00E         	goto	u2960
  4010   001D16                     u2961:
  4011   001D16  EF8E  F00E         	goto	l850
  4012   001D1A                     u2960:
  4013   001D1A  8022               	bsf	___flmul@prod^0,0,c
  4014   001D1C                     l850:
  4015   001D1C  90D8               	bcf	status,0,c
  4016   001D1E  361C               	rlcf	___flmul@grs^0,f,c
  4017   001D20  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4018   001D22  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4019   001D24  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4020   001D26  0626               	decf	___flmul@temp^0,f,c
  4021   001D28  A0D8               	btfss	status,0,c
  4022   001D2A  0627               	decf	(___flmul@temp+1)^0,f,c
  4023   001D2C                     l2915:
  4024   001D2C  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4025   001D2E  EF9B  F00E         	goto	u2971
  4026   001D32  EF9D  F00E         	goto	u2970
  4027   001D36                     u2971:
  4028   001D36  EF81  F00E         	goto	l2909
  4029   001D3A                     u2970:
  4030   001D3A  0E00               	movlw	0
  4031   001D3C  6E20               	movwf	___flmul@aexp^0,c
  4032   001D3E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4033   001D40  EFA4  F00E         	goto	u2981
  4034   001D44  EFA6  F00E         	goto	u2980
  4035   001D48                     u2981:
  4036   001D48  EFCA  F00E         	goto	l852
  4037   001D4C                     u2980:
  4038   001D4C  0EFF               	movlw	255
  4039   001D4E  141C               	andwf	___flmul@grs^0,w,c
  4040   001D50  6E17               	movwf	??___flmul^0,c
  4041   001D52  0EFF               	movlw	255
  4042   001D54  141D               	andwf	(___flmul@grs+1)^0,w,c
  4043   001D56  6E18               	movwf	(??___flmul+1)^0,c
  4044   001D58  0EFF               	movlw	255
  4045   001D5A  141E               	andwf	(___flmul@grs+2)^0,w,c
  4046   001D5C  6E19               	movwf	(??___flmul+2)^0,c
  4047   001D5E  0E7F               	movlw	127
  4048   001D60  141F               	andwf	(___flmul@grs+3)^0,w,c
  4049   001D62  6E1A               	movwf	(??___flmul+3)^0,c
  4050   001D64  5017               	movf	??___flmul^0,w,c
  4051   001D66  1018               	iorwf	(??___flmul+1)^0,w,c
  4052   001D68  1019               	iorwf	(??___flmul+2)^0,w,c
  4053   001D6A  101A               	iorwf	(??___flmul+3)^0,w,c
  4054   001D6C  B4D8               	btfsc	status,2,c
  4055   001D6E  EFBB  F00E         	goto	u2991
  4056   001D72  EFBD  F00E         	goto	u2990
  4057   001D76                     u2991:
  4058   001D76  EFC1  F00E         	goto	l853
  4059   001D7A                     u2990:
  4060   001D7A                     l2923:
  4061   001D7A  0E01               	movlw	1
  4062   001D7C  6E20               	movwf	___flmul@aexp^0,c
  4063   001D7E  EFCA  F00E         	goto	l852
  4064   001D82                     l853:
  4065   001D82  A022               	btfss	___flmul@prod^0,0,c
  4066   001D84  EFC6  F00E         	goto	u3001
  4067   001D88  EFC8  F00E         	goto	u3000
  4068   001D8C                     u3001:
  4069   001D8C  EFCA  F00E         	goto	l852
  4070   001D90                     u3000:
  4071   001D90  EFBD  F00E         	goto	l2923
  4072   001D94                     l852:
  4073   001D94  5020               	movf	___flmul@aexp^0,w,c
  4074   001D96  B4D8               	btfsc	status,2,c
  4075   001D98  EFD0  F00E         	goto	u3011
  4076   001D9C  EFD2  F00E         	goto	u3010
  4077   001DA0                     u3011:
  4078   001DA0  EFF6  F00E         	goto	l2935
  4079   001DA4                     u3010:
  4080   001DA4  0E01               	movlw	1
  4081   001DA6  2622               	addwf	___flmul@prod^0,f,c
  4082   001DA8  0E00               	movlw	0
  4083   001DAA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4084   001DAC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4085   001DAE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4086   001DB0  A025               	btfss	(___flmul@prod+3)^0,0,c
  4087   001DB2  EFDD  F00E         	goto	u3021
  4088   001DB6  EFDF  F00E         	goto	u3020
  4089   001DBA                     u3021:
  4090   001DBA  EFF6  F00E         	goto	l2935
  4091   001DBE                     u3020:
  4092   001DBE  C022  F017         	movff	___flmul@prod,??___flmul
  4093   001DC2  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4094   001DC6  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4095   001DCA  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4096   001DCE  341A               	rlcf	(??___flmul+3)^0,w,c
  4097   001DD0  321A               	rrcf	(??___flmul+3)^0,f,c
  4098   001DD2  3219               	rrcf	(??___flmul+2)^0,f,c
  4099   001DD4  3218               	rrcf	(??___flmul+1)^0,f,c
  4100   001DD6  3217               	rrcf	??___flmul^0,f,c
  4101   001DD8  C017  F022         	movff	??___flmul,___flmul@prod
  4102   001DDC  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4103   001DE0  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4104   001DE4  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4105   001DE8  4A26               	infsnz	___flmul@temp^0,f,c
  4106   001DEA  2A27               	incf	(___flmul@temp+1)^0,f,c
  4107   001DEC                     l2935:
  4108   001DEC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4109   001DEE  EF01  F00F         	goto	u3031
  4110   001DF2  5027               	movf	(___flmul@temp+1)^0,w,c
  4111   001DF4  E108               	bnz	u3030
  4112   001DF6  2826               	incf	___flmul@temp^0,w,c
  4113   001DF8  A0D8               	btfss	status,0,c
  4114   001DFA  EF01  F00F         	goto	u3031
  4115   001DFE  EF03  F00F         	goto	u3030
  4116   001E02                     u3031:
  4117   001E02  EF0D  F00F         	goto	l2939
  4118   001E06                     u3030:
  4119   001E06  0E00               	movlw	0
  4120   001E08  6E22               	movwf	___flmul@prod^0,c
  4121   001E0A  0E00               	movlw	0
  4122   001E0C  6E23               	movwf	(___flmul@prod+1)^0,c
  4123   001E0E  0E80               	movlw	128
  4124   001E10  6E24               	movwf	(___flmul@prod+2)^0,c
  4125   001E12  0E7F               	movlw	127
  4126   001E14  6E25               	movwf	(___flmul@prod+3)^0,c
  4127   001E16  EF3B  F00F         	goto	l2951
  4128   001E1A                     l2939:
  4129   001E1A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4130   001E1C  EF1A  F00F         	goto	u3040
  4131   001E20  5027               	movf	(___flmul@temp+1)^0,w,c
  4132   001E22  E106               	bnz	u3041
  4133   001E24  0426               	decf	___flmul@temp^0,w,c
  4134   001E26  B0D8               	btfsc	status,0,c
  4135   001E28  EF18  F00F         	goto	u3041
  4136   001E2C  EF1A  F00F         	goto	u3040
  4137   001E30                     u3041:
  4138   001E30  EF26  F00F         	goto	l860
  4139   001E34                     u3040:
  4140   001E34  0E00               	movlw	0
  4141   001E36  6E22               	movwf	___flmul@prod^0,c
  4142   001E38  0E00               	movlw	0
  4143   001E3A  6E23               	movwf	(___flmul@prod+1)^0,c
  4144   001E3C  0E00               	movlw	0
  4145   001E3E  6E24               	movwf	(___flmul@prod+2)^0,c
  4146   001E40  0E00               	movlw	0
  4147   001E42  6E25               	movwf	(___flmul@prod+3)^0,c
  4148   001E44  0E00               	movlw	0
  4149   001E46  6E1B               	movwf	___flmul@sign^0,c
  4150   001E48  EF3B  F00F         	goto	l2951
  4151   001E4C                     l860:
  4152   001E4C  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4153   001E50  0EFF               	movlw	255
  4154   001E52  1622               	andwf	___flmul@prod^0,f,c
  4155   001E54  0EFF               	movlw	255
  4156   001E56  1623               	andwf	(___flmul@prod+1)^0,f,c
  4157   001E58  0E7F               	movlw	127
  4158   001E5A  1624               	andwf	(___flmul@prod+2)^0,f,c
  4159   001E5C  0E00               	movlw	0
  4160   001E5E  1625               	andwf	(___flmul@prod+3)^0,f,c
  4161   001E60  A021               	btfss	___flmul@bexp^0,0,c
  4162   001E62  EF35  F00F         	goto	u3051
  4163   001E66  EF37  F00F         	goto	u3050
  4164   001E6A                     u3051:
  4165   001E6A  EF38  F00F         	goto	l2949
  4166   001E6E                     u3050:
  4167   001E6E  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4168   001E70                     l2949:
  4169   001E70  90D8               	bcf	status,0,c
  4170   001E72  3021               	rrcf	___flmul@bexp^0,w,c
  4171   001E74  6E25               	movwf	(___flmul@prod+3)^0,c
  4172   001E76                     l2951:
  4173   001E76  501B               	movf	___flmul@sign^0,w,c
  4174   001E78  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4175   001E7A  C022  F00F         	movff	___flmul@prod,?___flmul
  4176   001E7E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4177   001E82  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4178   001E86  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4179   001E8A                     l847:
  4180   001E8A  0012               	return		;funcret
  4181   001E8C                     __end_of___flmul:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function ___fladd *****************
  4185 ;; Defined at:
  4186 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  b               4   64[COMRAM] unsigned char 
  4189 ;;  a               4   68[COMRAM] unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  grs             1   79[COMRAM] unsigned char 
  4192 ;;  bexp            1   78[COMRAM] unsigned char 
  4193 ;;  aexp            1   77[COMRAM] unsigned char 
  4194 ;;  signs           1   76[COMRAM] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  4   64[COMRAM] unsigned char 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4204 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;Total ram usage:       16 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_runDAC
  4214 ;;		___flsub
  4215 ;;		_sinf
  4216 ;;		___cosdf
  4217 ;;		___rem_pio2f
  4218 ;;		___sindf
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text12
  4223   0015A2                     __ptext12:
  4224                           	callstack 0
  4225   0015A2                     ___fladd:
  4226                           	callstack 27
  4227   0015A2  5044               	movf	(___fladd@b+3)^0,w,c
  4228   0015A4  0B80               	andlw	128
  4229   0015A6  6E4D               	movwf	___fladd@signs^0,c
  4230   0015A8  5044               	movf	(___fladd@b+3)^0,w,c
  4231   0015AA  2444               	addwf	(___fladd@b+3)^0,w,c
  4232   0015AC  6E4F               	movwf	___fladd@bexp^0,c
  4233   0015AE  AE43               	btfss	(___fladd@b+2)^0,7,c
  4234   0015B0  EFDC  F00A         	goto	u2291
  4235   0015B4  EFDE  F00A         	goto	u2290
  4236   0015B8                     u2291:
  4237   0015B8  EFDF  F00A         	goto	l2539
  4238   0015BC                     u2290:
  4239   0015BC  804F               	bsf	___fladd@bexp^0,0,c
  4240   0015BE                     l2539:
  4241   0015BE  504F               	movf	___fladd@bexp^0,w,c
  4242   0015C0  B4D8               	btfsc	status,2,c
  4243   0015C2  EFE5  F00A         	goto	u2301
  4244   0015C6  EFE7  F00A         	goto	u2300
  4245   0015CA                     u2301:
  4246   0015CA  EFFC  F00A         	goto	l2549
  4247   0015CE                     u2300:
  4248   0015CE  284F               	incf	___fladd@bexp^0,w,c
  4249   0015D0  A4D8               	btfss	status,2,c
  4250   0015D2  EFED  F00A         	goto	u2311
  4251   0015D6  EFEF  F00A         	goto	u2310
  4252   0015DA                     u2311:
  4253   0015DA  EFF7  F00A         	goto	l2545
  4254   0015DE                     u2310:
  4255   0015DE  0E00               	movlw	0
  4256   0015E0  6E41               	movwf	___fladd@b^0,c
  4257   0015E2  0E00               	movlw	0
  4258   0015E4  6E42               	movwf	(___fladd@b+1)^0,c
  4259   0015E6  0E00               	movlw	0
  4260   0015E8  6E43               	movwf	(___fladd@b+2)^0,c
  4261   0015EA  0E00               	movlw	0
  4262   0015EC  6E44               	movwf	(___fladd@b+3)^0,c
  4263   0015EE                     l2545:
  4264   0015EE  8E43               	bsf	(___fladd@b+2)^0,7,c
  4265   0015F0  0E00               	movlw	0
  4266   0015F2  6E44               	movwf	(___fladd@b+3)^0,c
  4267   0015F4  EF04  F00B         	goto	l2551
  4268   0015F8                     l2549:
  4269   0015F8  0E00               	movlw	0
  4270   0015FA  6E41               	movwf	___fladd@b^0,c
  4271   0015FC  0E00               	movlw	0
  4272   0015FE  6E42               	movwf	(___fladd@b+1)^0,c
  4273   001600  0E00               	movlw	0
  4274   001602  6E43               	movwf	(___fladd@b+2)^0,c
  4275   001604  0E00               	movlw	0
  4276   001606  6E44               	movwf	(___fladd@b+3)^0,c
  4277   001608                     l2551:
  4278   001608  5048               	movf	(___fladd@a+3)^0,w,c
  4279   00160A  0B80               	andlw	128
  4280   00160C  6E4E               	movwf	___fladd@aexp^0,c
  4281   00160E  504D               	movf	___fladd@signs^0,w,c
  4282   001610  184E               	xorwf	___fladd@aexp^0,w,c
  4283   001612  B4D8               	btfsc	status,2,c
  4284   001614  EF0E  F00B         	goto	u2321
  4285   001618  EF10  F00B         	goto	u2320
  4286   00161C                     u2321:
  4287   00161C  EF11  F00B         	goto	l2557
  4288   001620                     u2320:
  4289   001620  8C4D               	bsf	___fladd@signs^0,6,c
  4290   001622                     l2557:
  4291   001622  5048               	movf	(___fladd@a+3)^0,w,c
  4292   001624  2448               	addwf	(___fladd@a+3)^0,w,c
  4293   001626  6E4E               	movwf	___fladd@aexp^0,c
  4294   001628  AE47               	btfss	(___fladd@a+2)^0,7,c
  4295   00162A  EF19  F00B         	goto	u2331
  4296   00162E  EF1B  F00B         	goto	u2330
  4297   001632                     u2331:
  4298   001632  EF1C  F00B         	goto	l2563
  4299   001636                     u2330:
  4300   001636  804E               	bsf	___fladd@aexp^0,0,c
  4301   001638                     l2563:
  4302   001638  504E               	movf	___fladd@aexp^0,w,c
  4303   00163A  B4D8               	btfsc	status,2,c
  4304   00163C  EF22  F00B         	goto	u2341
  4305   001640  EF24  F00B         	goto	u2340
  4306   001644                     u2341:
  4307   001644  EF39  F00B         	goto	l2573
  4308   001648                     u2340:
  4309   001648  284E               	incf	___fladd@aexp^0,w,c
  4310   00164A  A4D8               	btfss	status,2,c
  4311   00164C  EF2A  F00B         	goto	u2351
  4312   001650  EF2C  F00B         	goto	u2350
  4313   001654                     u2351:
  4314   001654  EF34  F00B         	goto	l2569
  4315   001658                     u2350:
  4316   001658  0E00               	movlw	0
  4317   00165A  6E45               	movwf	___fladd@a^0,c
  4318   00165C  0E00               	movlw	0
  4319   00165E  6E46               	movwf	(___fladd@a+1)^0,c
  4320   001660  0E00               	movlw	0
  4321   001662  6E47               	movwf	(___fladd@a+2)^0,c
  4322   001664  0E00               	movlw	0
  4323   001666  6E48               	movwf	(___fladd@a+3)^0,c
  4324   001668                     l2569:
  4325   001668  8E47               	bsf	(___fladd@a+2)^0,7,c
  4326   00166A  0E00               	movlw	0
  4327   00166C  6E48               	movwf	(___fladd@a+3)^0,c
  4328   00166E  EF41  F00B         	goto	l2575
  4329   001672                     l2573:
  4330   001672  0E00               	movlw	0
  4331   001674  6E45               	movwf	___fladd@a^0,c
  4332   001676  0E00               	movlw	0
  4333   001678  6E46               	movwf	(___fladd@a+1)^0,c
  4334   00167A  0E00               	movlw	0
  4335   00167C  6E47               	movwf	(___fladd@a+2)^0,c
  4336   00167E  0E00               	movlw	0
  4337   001680  6E48               	movwf	(___fladd@a+3)^0,c
  4338   001682                     l2575:
  4339   001682  504F               	movf	___fladd@bexp^0,w,c
  4340   001684  5C4E               	subwf	___fladd@aexp^0,w,c
  4341   001686  B0D8               	btfsc	status,0,c
  4342   001688  EF48  F00B         	goto	u2361
  4343   00168C  EF4A  F00B         	goto	u2360
  4344   001690                     u2361:
  4345   001690  EF71  F00B         	goto	l2611
  4346   001694                     u2360:
  4347   001694  AC4D               	btfss	___fladd@signs^0,6,c
  4348   001696  EF4F  F00B         	goto	u2371
  4349   00169A  EF51  F00B         	goto	u2370
  4350   00169E                     u2371:
  4351   00169E  EF53  F00B         	goto	l2581
  4352   0016A2                     u2370:
  4353   0016A2  0E80               	movlw	128
  4354   0016A4  1A4D               	xorwf	___fladd@signs^0,f,c
  4355   0016A6                     l2581:
  4356   0016A6  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  4357   0016AA  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  4358   0016AE  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  4359   0016B2  C041  F050         	movff	___fladd@b,___fladd@grs
  4360   0016B6  C045  F041         	movff	___fladd@a,___fladd@b
  4361   0016BA  C050  F045         	movff	___fladd@grs,___fladd@a
  4362   0016BE  C042  F050         	movff	___fladd@b+1,___fladd@grs
  4363   0016C2  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  4364   0016C6  C050  F046         	movff	___fladd@grs,___fladd@a+1
  4365   0016CA  C043  F050         	movff	___fladd@b+2,___fladd@grs
  4366   0016CE  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  4367   0016D2  C050  F047         	movff	___fladd@grs,___fladd@a+2
  4368   0016D6  C044  F050         	movff	___fladd@b+3,___fladd@grs
  4369   0016DA  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  4370   0016DE  C050  F048         	movff	___fladd@grs,___fladd@a+3
  4371   0016E2                     l2611:
  4372   0016E2  0E00               	movlw	0
  4373   0016E4  6E50               	movwf	___fladd@grs^0,c
  4374   0016E6  504F               	movf	___fladd@bexp^0,w,c
  4375   0016E8  C04E  F049         	movff	___fladd@aexp,??___fladd
  4376   0016EC  6A4A               	clrf	(??___fladd+1)^0,c
  4377   0016EE  5E49               	subwf	??___fladd^0,f,c
  4378   0016F0  0E00               	movlw	0
  4379   0016F2  5A4A               	subwfb	(??___fladd+1)^0,f,c
  4380   0016F4  BE4A               	btfsc	(??___fladd+1)^0,7,c
  4381   0016F6  EF86  F00B         	goto	u2381
  4382   0016FA  504A               	movf	(??___fladd+1)^0,w,c
  4383   0016FC  E109               	bnz	u2380
  4384   0016FE  0E1A               	movlw	26
  4385   001700  5C49               	subwf	??___fladd^0,w,c
  4386   001702  A0D8               	btfss	status,0,c
  4387   001704  EF86  F00B         	goto	u2381
  4388   001708  EF88  F00B         	goto	u2380
  4389   00170C                     u2381:
  4390   00170C  EFBF  F00B         	goto	l758
  4391   001710                     u2380:
  4392   001710  5041               	movf	___fladd@b^0,w,c
  4393   001712  1042               	iorwf	(___fladd@b+1)^0,w,c
  4394   001714  1043               	iorwf	(___fladd@b+2)^0,w,c
  4395   001716  1044               	iorwf	(___fladd@b+3)^0,w,c
  4396   001718  A4D8               	btfss	status,2,c
  4397   00171A  EF91  F00B         	goto	u2391
  4398   00171E  EF94  F00B         	goto	u2390
  4399   001722                     u2391:
  4400   001722  0E01               	movlw	1
  4401   001724  EF95  F00B         	goto	u2400
  4402   001728                     u2390:
  4403   001728  0E00               	movlw	0
  4404   00172A                     u2400:
  4405   00172A  6E50               	movwf	___fladd@grs^0,c
  4406   00172C  0E00               	movlw	0
  4407   00172E  6E41               	movwf	___fladd@b^0,c
  4408   001730  0E00               	movlw	0
  4409   001732  6E42               	movwf	(___fladd@b+1)^0,c
  4410   001734  0E00               	movlw	0
  4411   001736  6E43               	movwf	(___fladd@b+2)^0,c
  4412   001738  0E00               	movlw	0
  4413   00173A  6E44               	movwf	(___fladd@b+3)^0,c
  4414   00173C  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  4415   001740  EFC8  F00B         	goto	l757
  4416   001744                     l759:
  4417   001744  A050               	btfss	___fladd@grs^0,0,c
  4418   001746  EFA7  F00B         	goto	u2411
  4419   00174A  EFA9  F00B         	goto	u2410
  4420   00174E                     u2411:
  4421   00174E  EFAF  F00B         	goto	l2623
  4422   001752                     u2410:
  4423   001752  90D8               	bcf	status,0,c
  4424   001754  3050               	rrcf	___fladd@grs^0,w,c
  4425   001756  0901               	iorlw	1
  4426   001758  6E50               	movwf	___fladd@grs^0,c
  4427   00175A  EFB1  F00B         	goto	l2625
  4428   00175E                     l2623:
  4429   00175E  90D8               	bcf	status,0,c
  4430   001760  3250               	rrcf	___fladd@grs^0,f,c
  4431   001762                     l2625:
  4432   001762  A041               	btfss	___fladd@b^0,0,c
  4433   001764  EFB6  F00B         	goto	u2421
  4434   001768  EFB8  F00B         	goto	u2420
  4435   00176C                     u2421:
  4436   00176C  EFB9  F00B         	goto	l2629
  4437   001770                     u2420:
  4438   001770  8E50               	bsf	___fladd@grs^0,7,c
  4439   001772                     l2629:
  4440   001772  3444               	rlcf	(___fladd@b+3)^0,w,c
  4441   001774  3244               	rrcf	(___fladd@b+3)^0,f,c
  4442   001776  3243               	rrcf	(___fladd@b+2)^0,f,c
  4443   001778  3242               	rrcf	(___fladd@b+1)^0,f,c
  4444   00177A  3241               	rrcf	___fladd@b^0,f,c
  4445   00177C  2A4F               	incf	___fladd@bexp^0,f,c
  4446   00177E                     l758:
  4447   00177E  504E               	movf	___fladd@aexp^0,w,c
  4448   001780  5C4F               	subwf	___fladd@bexp^0,w,c
  4449   001782  A0D8               	btfss	status,0,c
  4450   001784  EFC6  F00B         	goto	u2431
  4451   001788  EFC8  F00B         	goto	u2430
  4452   00178C                     u2431:
  4453   00178C  EFA2  F00B         	goto	l759
  4454   001790                     u2430:
  4455   001790                     l757:
  4456   001790  BC4D               	btfsc	___fladd@signs^0,6,c
  4457   001792  EFCD  F00B         	goto	u2441
  4458   001796  EFCF  F00B         	goto	u2440
  4459   00179A                     u2441:
  4460   00179A  EF0F  F00C         	goto	l2657
  4461   00179E                     u2440:
  4462   00179E  504F               	movf	___fladd@bexp^0,w,c
  4463   0017A0  A4D8               	btfss	status,2,c
  4464   0017A2  EFD5  F00B         	goto	u2451
  4465   0017A6  EFD7  F00B         	goto	u2450
  4466   0017AA                     u2451:
  4467   0017AA  EFE1  F00B         	goto	l2639
  4468   0017AE                     u2450:
  4469   0017AE  0E00               	movlw	0
  4470   0017B0  6E41               	movwf	?___fladd^0,c
  4471   0017B2  0E00               	movlw	0
  4472   0017B4  6E42               	movwf	(?___fladd+1)^0,c
  4473   0017B6  0E00               	movlw	0
  4474   0017B8  6E43               	movwf	(?___fladd+2)^0,c
  4475   0017BA  0E00               	movlw	0
  4476   0017BC  6E44               	movwf	(?___fladd+3)^0,c
  4477   0017BE  EF30  F00D         	goto	l766
  4478   0017C2                     l2639:
  4479   0017C2  5045               	movf	___fladd@a^0,w,c
  4480   0017C4  2641               	addwf	___fladd@b^0,f,c
  4481   0017C6  5046               	movf	(___fladd@a+1)^0,w,c
  4482   0017C8  2242               	addwfc	(___fladd@b+1)^0,f,c
  4483   0017CA  5047               	movf	(___fladd@a+2)^0,w,c
  4484   0017CC  2243               	addwfc	(___fladd@b+2)^0,f,c
  4485   0017CE  5048               	movf	(___fladd@a+3)^0,w,c
  4486   0017D0  2244               	addwfc	(___fladd@b+3)^0,f,c
  4487   0017D2  A044               	btfss	(___fladd@b+3)^0,0,c
  4488   0017D4  EFEE  F00B         	goto	u2461
  4489   0017D8  EFF0  F00B         	goto	u2460
  4490   0017DC                     u2461:
  4491   0017DC  EF9C  F00C         	goto	l2693
  4492   0017E0                     u2460:
  4493   0017E0  A050               	btfss	___fladd@grs^0,0,c
  4494   0017E2  EFF5  F00B         	goto	u2471
  4495   0017E6  EFF7  F00B         	goto	u2470
  4496   0017EA                     u2471:
  4497   0017EA  EFFD  F00B         	goto	l2647
  4498   0017EE                     u2470:
  4499   0017EE  90D8               	bcf	status,0,c
  4500   0017F0  3050               	rrcf	___fladd@grs^0,w,c
  4501   0017F2  0901               	iorlw	1
  4502   0017F4  6E50               	movwf	___fladd@grs^0,c
  4503   0017F6  EFFF  F00B         	goto	l2649
  4504   0017FA                     l2647:
  4505   0017FA  90D8               	bcf	status,0,c
  4506   0017FC  3250               	rrcf	___fladd@grs^0,f,c
  4507   0017FE                     l2649:
  4508   0017FE  A041               	btfss	___fladd@b^0,0,c
  4509   001800  EF04  F00C         	goto	u2481
  4510   001804  EF06  F00C         	goto	u2480
  4511   001808                     u2481:
  4512   001808  EF07  F00C         	goto	l2653
  4513   00180C                     u2480:
  4514   00180C  8E50               	bsf	___fladd@grs^0,7,c
  4515   00180E                     l2653:
  4516   00180E  3444               	rlcf	(___fladd@b+3)^0,w,c
  4517   001810  3244               	rrcf	(___fladd@b+3)^0,f,c
  4518   001812  3243               	rrcf	(___fladd@b+2)^0,f,c
  4519   001814  3242               	rrcf	(___fladd@b+1)^0,f,c
  4520   001816  3241               	rrcf	___fladd@b^0,f,c
  4521   001818  2A4F               	incf	___fladd@bexp^0,f,c
  4522   00181A  EF9C  F00C         	goto	l2693
  4523   00181E                     l2657:
  4524   00181E  5045               	movf	___fladd@a^0,w,c
  4525   001820  5C41               	subwf	___fladd@b^0,w,c
  4526   001822  5046               	movf	(___fladd@a+1)^0,w,c
  4527   001824  5842               	subwfb	(___fladd@b+1)^0,w,c
  4528   001826  5047               	movf	(___fladd@a+2)^0,w,c
  4529   001828  5843               	subwfb	(___fladd@b+2)^0,w,c
  4530   00182A  5044               	movf	(___fladd@b+3)^0,w,c
  4531   00182C  0A80               	xorlw	128
  4532   00182E  6E49               	movwf	??___fladd^0,c
  4533   001830  5048               	movf	(___fladd@a+3)^0,w,c
  4534   001832  0A80               	xorlw	128
  4535   001834  5849               	subwfb	??___fladd^0,w,c
  4536   001836  B0D8               	btfsc	status,0,c
  4537   001838  EF20  F00C         	goto	u2491
  4538   00183C  EF22  F00C         	goto	u2490
  4539   001840                     u2491:
  4540   001840  EF4D  F00C         	goto	l2667
  4541   001844                     u2490:
  4542   001844  5041               	movf	___fladd@b^0,w,c
  4543   001846  5C45               	subwf	___fladd@a^0,w,c
  4544   001848  6E49               	movwf	??___fladd^0,c
  4545   00184A  5042               	movf	(___fladd@b+1)^0,w,c
  4546   00184C  5846               	subwfb	(___fladd@a+1)^0,w,c
  4547   00184E  6E4A               	movwf	(??___fladd+1)^0,c
  4548   001850  5043               	movf	(___fladd@b+2)^0,w,c
  4549   001852  5847               	subwfb	(___fladd@a+2)^0,w,c
  4550   001854  6E4B               	movwf	(??___fladd+2)^0,c
  4551   001856  5044               	movf	(___fladd@b+3)^0,w,c
  4552   001858  5848               	subwfb	(___fladd@a+3)^0,w,c
  4553   00185A  6E4C               	movwf	(??___fladd+3)^0,c
  4554   00185C  0EFF               	movlw	255
  4555   00185E  2449               	addwf	??___fladd^0,w,c
  4556   001860  6E41               	movwf	___fladd@b^0,c
  4557   001862  0EFF               	movlw	255
  4558   001864  204A               	addwfc	(??___fladd+1)^0,w,c
  4559   001866  6E42               	movwf	(___fladd@b+1)^0,c
  4560   001868  0EFF               	movlw	255
  4561   00186A  204B               	addwfc	(??___fladd+2)^0,w,c
  4562   00186C  6E43               	movwf	(___fladd@b+2)^0,c
  4563   00186E  0EFF               	movlw	255
  4564   001870  204C               	addwfc	(??___fladd+3)^0,w,c
  4565   001872  6E44               	movwf	(___fladd@b+3)^0,c
  4566   001874  0E80               	movlw	128
  4567   001876  1A4D               	xorwf	___fladd@signs^0,f,c
  4568   001878  6C50               	negf	___fladd@grs^0,c
  4569   00187A  5050               	movf	___fladd@grs^0,w,c
  4570   00187C  A4D8               	btfss	status,2,c
  4571   00187E  EF43  F00C         	goto	u2501
  4572   001882  EF45  F00C         	goto	u2500
  4573   001886                     u2501:
  4574   001886  EF55  F00C         	goto	l774
  4575   00188A                     u2500:
  4576   00188A  0E01               	movlw	1
  4577   00188C  2641               	addwf	___fladd@b^0,f,c
  4578   00188E  0E00               	movlw	0
  4579   001890  2242               	addwfc	(___fladd@b+1)^0,f,c
  4580   001892  2243               	addwfc	(___fladd@b+2)^0,f,c
  4581   001894  2244               	addwfc	(___fladd@b+3)^0,f,c
  4582   001896  EF55  F00C         	goto	l774
  4583   00189A                     l2667:
  4584   00189A  5045               	movf	___fladd@a^0,w,c
  4585   00189C  5E41               	subwf	___fladd@b^0,f,c
  4586   00189E  5046               	movf	(___fladd@a+1)^0,w,c
  4587   0018A0  5A42               	subwfb	(___fladd@b+1)^0,f,c
  4588   0018A2  5047               	movf	(___fladd@a+2)^0,w,c
  4589   0018A4  5A43               	subwfb	(___fladd@b+2)^0,f,c
  4590   0018A6  5048               	movf	(___fladd@a+3)^0,w,c
  4591   0018A8  5A44               	subwfb	(___fladd@b+3)^0,f,c
  4592   0018AA                     l774:
  4593   0018AA  5041               	movf	___fladd@b^0,w,c
  4594   0018AC  1042               	iorwf	(___fladd@b+1)^0,w,c
  4595   0018AE  1043               	iorwf	(___fladd@b+2)^0,w,c
  4596   0018B0  1044               	iorwf	(___fladd@b+3)^0,w,c
  4597   0018B2  A4D8               	btfss	status,2,c
  4598   0018B4  EF5E  F00C         	goto	u2511
  4599   0018B8  EF60  F00C         	goto	u2510
  4600   0018BC                     u2511:
  4601   0018BC  EF95  F00C         	goto	l2691
  4602   0018C0                     u2510:
  4603   0018C0  5050               	movf	___fladd@grs^0,w,c
  4604   0018C2  A4D8               	btfss	status,2,c
  4605   0018C4  EF66  F00C         	goto	u2521
  4606   0018C8  EF68  F00C         	goto	u2520
  4607   0018CC                     u2521:
  4608   0018CC  EF95  F00C         	goto	l2691
  4609   0018D0                     u2520:
  4610   0018D0  0E00               	movlw	0
  4611   0018D2  6E41               	movwf	?___fladd^0,c
  4612   0018D4  0E00               	movlw	0
  4613   0018D6  6E42               	movwf	(?___fladd+1)^0,c
  4614   0018D8  0E00               	movlw	0
  4615   0018DA  6E43               	movwf	(?___fladd+2)^0,c
  4616   0018DC  0E00               	movlw	0
  4617   0018DE  6E44               	movwf	(?___fladd+3)^0,c
  4618   0018E0  EF30  F00D         	goto	l766
  4619   0018E4                     l2675:
  4620   0018E4  90D8               	bcf	status,0,c
  4621   0018E6  3641               	rlcf	___fladd@b^0,f,c
  4622   0018E8  3642               	rlcf	(___fladd@b+1)^0,f,c
  4623   0018EA  3643               	rlcf	(___fladd@b+2)^0,f,c
  4624   0018EC  3644               	rlcf	(___fladd@b+3)^0,f,c
  4625   0018EE  AE50               	btfss	___fladd@grs^0,7,c
  4626   0018F0  EF7C  F00C         	goto	u2531
  4627   0018F4  EF7E  F00C         	goto	u2530
  4628   0018F8                     u2531:
  4629   0018F8  EF7F  F00C         	goto	l2681
  4630   0018FC                     u2530:
  4631   0018FC  8041               	bsf	___fladd@b^0,0,c
  4632   0018FE                     l2681:
  4633   0018FE  A050               	btfss	___fladd@grs^0,0,c
  4634   001900  EF84  F00C         	goto	u2541
  4635   001904  EF86  F00C         	goto	u2540
  4636   001908                     u2541:
  4637   001908  EF8A  F00C         	goto	l2685
  4638   00190C                     u2540:
  4639   00190C  80D8               	bsf	status,0,c
  4640   00190E  3650               	rlcf	___fladd@grs^0,f,c
  4641   001910  EF8C  F00C         	goto	l2687
  4642   001914                     l2685:
  4643   001914  90D8               	bcf	status,0,c
  4644   001916  3650               	rlcf	___fladd@grs^0,f,c
  4645   001918                     l2687:
  4646   001918  504F               	movf	___fladd@bexp^0,w,c
  4647   00191A  B4D8               	btfsc	status,2,c
  4648   00191C  EF92  F00C         	goto	u2551
  4649   001920  EF94  F00C         	goto	u2550
  4650   001924                     u2551:
  4651   001924  EF95  F00C         	goto	l2691
  4652   001928                     u2550:
  4653   001928  064F               	decf	___fladd@bexp^0,f,c
  4654   00192A                     l2691:
  4655   00192A  AE43               	btfss	(___fladd@b+2)^0,7,c
  4656   00192C  EF9A  F00C         	goto	u2561
  4657   001930  EF9C  F00C         	goto	u2560
  4658   001934                     u2561:
  4659   001934  EF72  F00C         	goto	l2675
  4660   001938                     u2560:
  4661   001938                     l2693:
  4662   001938  0E00               	movlw	0
  4663   00193A  6E4E               	movwf	___fladd@aexp^0,c
  4664   00193C  AE50               	btfss	___fladd@grs^0,7,c
  4665   00193E  EFA3  F00C         	goto	u2571
  4666   001942  EFA5  F00C         	goto	u2570
  4667   001946                     u2571:
  4668   001946  EFBD  F00C         	goto	l783
  4669   00194A                     u2570:
  4670   00194A  C050  F049         	movff	___fladd@grs,??___fladd
  4671   00194E  0E7F               	movlw	127
  4672   001950  1649               	andwf	??___fladd^0,f,c
  4673   001952  B4D8               	btfsc	status,2,c
  4674   001954  EFAE  F00C         	goto	u2581
  4675   001958  EFB0  F00C         	goto	u2580
  4676   00195C                     u2581:
  4677   00195C  EFB4  F00C         	goto	l784
  4678   001960                     u2580:
  4679   001960                     l2699:
  4680   001960  0E01               	movlw	1
  4681   001962  6E4E               	movwf	___fladd@aexp^0,c
  4682   001964  EFBD  F00C         	goto	l783
  4683   001968                     l784:
  4684   001968  A041               	btfss	___fladd@b^0,0,c
  4685   00196A  EFB9  F00C         	goto	u2591
  4686   00196E  EFBB  F00C         	goto	u2590
  4687   001972                     u2591:
  4688   001972  EFBD  F00C         	goto	l783
  4689   001976                     u2590:
  4690   001976  EFB0  F00C         	goto	l2699
  4691   00197A                     l783:
  4692   00197A  504E               	movf	___fladd@aexp^0,w,c
  4693   00197C  B4D8               	btfsc	status,2,c
  4694   00197E  EFC3  F00C         	goto	u2601
  4695   001982  EFC5  F00C         	goto	u2600
  4696   001986                     u2601:
  4697   001986  EFF0  F00C         	goto	l2711
  4698   00198A                     u2600:
  4699   00198A  0E01               	movlw	1
  4700   00198C  2641               	addwf	___fladd@b^0,f,c
  4701   00198E  0E00               	movlw	0
  4702   001990  2242               	addwfc	(___fladd@b+1)^0,f,c
  4703   001992  2243               	addwfc	(___fladd@b+2)^0,f,c
  4704   001994  2244               	addwfc	(___fladd@b+3)^0,f,c
  4705   001996  A044               	btfss	(___fladd@b+3)^0,0,c
  4706   001998  EFD0  F00C         	goto	u2611
  4707   00199C  EFD2  F00C         	goto	u2610
  4708   0019A0                     u2611:
  4709   0019A0  EFF0  F00C         	goto	l2711
  4710   0019A4                     u2610:
  4711   0019A4  C041  F049         	movff	___fladd@b,??___fladd
  4712   0019A8  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  4713   0019AC  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  4714   0019B0  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  4715   0019B4  344C               	rlcf	(??___fladd+3)^0,w,c
  4716   0019B6  324C               	rrcf	(??___fladd+3)^0,f,c
  4717   0019B8  324B               	rrcf	(??___fladd+2)^0,f,c
  4718   0019BA  324A               	rrcf	(??___fladd+1)^0,f,c
  4719   0019BC  3249               	rrcf	??___fladd^0,f,c
  4720   0019BE  C049  F041         	movff	??___fladd,___fladd@b
  4721   0019C2  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  4722   0019C6  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  4723   0019CA  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  4724   0019CE  284F               	incf	___fladd@bexp^0,w,c
  4725   0019D0  B4D8               	btfsc	status,2,c
  4726   0019D2  EFED  F00C         	goto	u2621
  4727   0019D6  EFEF  F00C         	goto	u2620
  4728   0019DA                     u2621:
  4729   0019DA  EFF0  F00C         	goto	l2711
  4730   0019DE                     u2620:
  4731   0019DE  2A4F               	incf	___fladd@bexp^0,f,c
  4732   0019E0                     l2711:
  4733   0019E0  284F               	incf	___fladd@bexp^0,w,c
  4734   0019E2  B4D8               	btfsc	status,2,c
  4735   0019E4  EFF6  F00C         	goto	u2631
  4736   0019E8  EFF8  F00C         	goto	u2630
  4737   0019EC                     u2631:
  4738   0019EC  EF00  F00D         	goto	l2715
  4739   0019F0                     u2630:
  4740   0019F0  504F               	movf	___fladd@bexp^0,w,c
  4741   0019F2  A4D8               	btfss	status,2,c
  4742   0019F4  EFFE  F00C         	goto	u2641
  4743   0019F8  EF00  F00D         	goto	u2640
  4744   0019FC                     u2641:
  4745   0019FC  EF12  F00D         	goto	l2719
  4746   001A00                     u2640:
  4747   001A00                     l2715:
  4748   001A00  0E00               	movlw	0
  4749   001A02  6E41               	movwf	___fladd@b^0,c
  4750   001A04  0E00               	movlw	0
  4751   001A06  6E42               	movwf	(___fladd@b+1)^0,c
  4752   001A08  0E00               	movlw	0
  4753   001A0A  6E43               	movwf	(___fladd@b+2)^0,c
  4754   001A0C  0E00               	movlw	0
  4755   001A0E  6E44               	movwf	(___fladd@b+3)^0,c
  4756   001A10  504F               	movf	___fladd@bexp^0,w,c
  4757   001A12  A4D8               	btfss	status,2,c
  4758   001A14  EF0E  F00D         	goto	u2651
  4759   001A18  EF10  F00D         	goto	u2650
  4760   001A1C                     u2651:
  4761   001A1C  EF12  F00D         	goto	l2719
  4762   001A20                     u2650:
  4763   001A20  0E00               	movlw	0
  4764   001A22  6E4D               	movwf	___fladd@signs^0,c
  4765   001A24                     l2719:
  4766   001A24  A04F               	btfss	___fladd@bexp^0,0,c
  4767   001A26  EF17  F00D         	goto	u2661
  4768   001A2A  EF19  F00D         	goto	u2660
  4769   001A2E                     u2661:
  4770   001A2E  EF1C  F00D         	goto	l2723
  4771   001A32                     u2660:
  4772   001A32  8E43               	bsf	(___fladd@b+2)^0,7,c
  4773   001A34  EF1D  F00D         	goto	l2725
  4774   001A38                     l2723:
  4775   001A38  9E43               	bcf	(___fladd@b+2)^0,7,c
  4776   001A3A                     l2725:
  4777   001A3A  90D8               	bcf	status,0,c
  4778   001A3C  304F               	rrcf	___fladd@bexp^0,w,c
  4779   001A3E  6E44               	movwf	(___fladd@b+3)^0,c
  4780   001A40  AE4D               	btfss	___fladd@signs^0,7,c
  4781   001A42  EF25  F00D         	goto	u2671
  4782   001A46  EF27  F00D         	goto	u2670
  4783   001A4A                     u2671:
  4784   001A4A  EF28  F00D         	goto	l2731
  4785   001A4E                     u2670:
  4786   001A4E  8E44               	bsf	(___fladd@b+3)^0,7,c
  4787   001A50                     l2731:
  4788   001A50  C041  F041         	movff	___fladd@b,?___fladd
  4789   001A54  C042  F042         	movff	___fladd@b+1,?___fladd+1
  4790   001A58  C043  F043         	movff	___fladd@b+2,?___fladd+2
  4791   001A5C  C044  F044         	movff	___fladd@b+3,?___fladd+3
  4792   001A60                     l766:
  4793   001A60  0012               	return		;funcret
  4794   001A62                     __end_of___fladd:
  4795                           	callstack 0
  4796                           
  4797 ;; *************** function _printf *****************
  4798 ;; Defined at:
  4799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  fmt             1   52[COMRAM] PTR const unsigned char 
  4802 ;;		 -> STR_3(5), 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  ret             2    0        int 
  4805 ;;  ap              1   55[COMRAM] PTR void [1]
  4806 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  2   52[COMRAM] int 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4816 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;Total ram usage:        4 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 7
  4823 ;; This function calls:
  4824 ;;		_vfprintf
  4825 ;; This function is called by:
  4826 ;;		_runDAC
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text13
  4831   003E5C                     __ptext13:
  4832                           	callstack 0
  4833   003E5C                     _printf:
  4834                           	callstack 22
  4835   003E5C  0E36               	movlw	low (?_printf+1)
  4836   003E5E  6E38               	movwf	printf@ap^0,c
  4837   003E60  0E00               	movlw	0
  4838   003E62  6E30               	movwf	vfprintf@fp^0,c
  4839   003E64  0E00               	movlw	0
  4840   003E66  6E31               	movwf	(vfprintf@fp+1)^0,c
  4841   003E68  C035  F032         	movff	printf@fmt,vfprintf@fmt
  4842   003E6C  0E38               	movlw	low printf@ap
  4843   003E6E  6E33               	movwf	vfprintf@ap^0,c
  4844   003E70  EC06  F01E         	call	_vfprintf	;wreg free
  4845   003E74  0012               	return		;funcret
  4846   003E76                     __end_of_printf:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function ___fldiv *****************
  4850 ;; Defined at:
  4851 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  b               4   39[COMRAM] int 
  4854 ;;  a               4   43[COMRAM] int 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  grs             4   58[COMRAM] unsigned long 
  4857 ;;  rem             4   51[COMRAM] unsigned long 
  4858 ;;  new_exp         2   56[COMRAM] short 
  4859 ;;  aexp            1   63[COMRAM] unsigned char 
  4860 ;;  bexp            1   62[COMRAM] unsigned char 
  4861 ;;  sign            1   55[COMRAM] unsigned char 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  4   39[COMRAM] unsigned char 
  4864 ;; Registers used:
  4865 ;;		wreg, status,2, status,0
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4871 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;Total ram usage:       25 bytes
  4876 ;; Hardware stack levels used: 1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_runDAC
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text14
  4885   00224E                     __ptext14:
  4886                           	callstack 0
  4887   00224E                     ___fldiv:
  4888                           	callstack 29
  4889   00224E  502B               	movf	(___fldiv@b+3)^0,w,c
  4890   002250  0B80               	andlw	128
  4891   002252  6E38               	movwf	___fldiv@sign^0,c
  4892   002254  502B               	movf	(___fldiv@b+3)^0,w,c
  4893   002256  242B               	addwf	(___fldiv@b+3)^0,w,c
  4894   002258  6E3F               	movwf	___fldiv@bexp^0,c
  4895   00225A  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  4896   00225C  EF32  F011         	goto	u3651
  4897   002260  EF34  F011         	goto	u3650
  4898   002264                     u3651:
  4899   002264  EF35  F011         	goto	l3377
  4900   002268                     u3650:
  4901   002268  803F               	bsf	___fldiv@bexp^0,0,c
  4902   00226A                     l3377:
  4903   00226A  503F               	movf	___fldiv@bexp^0,w,c
  4904   00226C  B4D8               	btfsc	status,2,c
  4905   00226E  EF3B  F011         	goto	u3661
  4906   002272  EF3D  F011         	goto	u3660
  4907   002276                     u3661:
  4908   002276  EF52  F011         	goto	l3387
  4909   00227A                     u3660:
  4910   00227A  283F               	incf	___fldiv@bexp^0,w,c
  4911   00227C  A4D8               	btfss	status,2,c
  4912   00227E  EF43  F011         	goto	u3671
  4913   002282  EF45  F011         	goto	u3670
  4914   002286                     u3671:
  4915   002286  EF4D  F011         	goto	l3383
  4916   00228A                     u3670:
  4917   00228A  0E00               	movlw	0
  4918   00228C  6E28               	movwf	___fldiv@b^0,c
  4919   00228E  0E00               	movlw	0
  4920   002290  6E29               	movwf	(___fldiv@b+1)^0,c
  4921   002292  0E00               	movlw	0
  4922   002294  6E2A               	movwf	(___fldiv@b+2)^0,c
  4923   002296  0E00               	movlw	0
  4924   002298  6E2B               	movwf	(___fldiv@b+3)^0,c
  4925   00229A                     l3383:
  4926   00229A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  4927   00229C  0E00               	movlw	0
  4928   00229E  6E2B               	movwf	(___fldiv@b+3)^0,c
  4929   0022A0  EF5A  F011         	goto	l3389
  4930   0022A4                     l3387:
  4931   0022A4  0E00               	movlw	0
  4932   0022A6  6E28               	movwf	___fldiv@b^0,c
  4933   0022A8  0E00               	movlw	0
  4934   0022AA  6E29               	movwf	(___fldiv@b+1)^0,c
  4935   0022AC  0E00               	movlw	0
  4936   0022AE  6E2A               	movwf	(___fldiv@b+2)^0,c
  4937   0022B0  0E00               	movlw	0
  4938   0022B2  6E2B               	movwf	(___fldiv@b+3)^0,c
  4939   0022B4                     l3389:
  4940   0022B4  502F               	movf	(___fldiv@a+3)^0,w,c
  4941   0022B6  0B80               	andlw	128
  4942   0022B8  1A38               	xorwf	___fldiv@sign^0,f,c
  4943   0022BA  502F               	movf	(___fldiv@a+3)^0,w,c
  4944   0022BC  242F               	addwf	(___fldiv@a+3)^0,w,c
  4945   0022BE  6E40               	movwf	___fldiv@aexp^0,c
  4946   0022C0  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  4947   0022C2  EF65  F011         	goto	u3681
  4948   0022C6  EF67  F011         	goto	u3680
  4949   0022CA                     u3681:
  4950   0022CA  EF68  F011         	goto	l3397
  4951   0022CE                     u3680:
  4952   0022CE  8040               	bsf	___fldiv@aexp^0,0,c
  4953   0022D0                     l3397:
  4954   0022D0  5040               	movf	___fldiv@aexp^0,w,c
  4955   0022D2  B4D8               	btfsc	status,2,c
  4956   0022D4  EF6E  F011         	goto	u3691
  4957   0022D8  EF70  F011         	goto	u3690
  4958   0022DC                     u3691:
  4959   0022DC  EF85  F011         	goto	l3407
  4960   0022E0                     u3690:
  4961   0022E0  2840               	incf	___fldiv@aexp^0,w,c
  4962   0022E2  A4D8               	btfss	status,2,c
  4963   0022E4  EF76  F011         	goto	u3701
  4964   0022E8  EF78  F011         	goto	u3700
  4965   0022EC                     u3701:
  4966   0022EC  EF80  F011         	goto	l3403
  4967   0022F0                     u3700:
  4968   0022F0  0E00               	movlw	0
  4969   0022F2  6E2C               	movwf	___fldiv@a^0,c
  4970   0022F4  0E00               	movlw	0
  4971   0022F6  6E2D               	movwf	(___fldiv@a+1)^0,c
  4972   0022F8  0E00               	movlw	0
  4973   0022FA  6E2E               	movwf	(___fldiv@a+2)^0,c
  4974   0022FC  0E00               	movlw	0
  4975   0022FE  6E2F               	movwf	(___fldiv@a+3)^0,c
  4976   002300                     l3403:
  4977   002300  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  4978   002302  0E00               	movlw	0
  4979   002304  6E2F               	movwf	(___fldiv@a+3)^0,c
  4980   002306  EF8D  F011         	goto	l3409
  4981   00230A                     l3407:
  4982   00230A  0E00               	movlw	0
  4983   00230C  6E2C               	movwf	___fldiv@a^0,c
  4984   00230E  0E00               	movlw	0
  4985   002310  6E2D               	movwf	(___fldiv@a+1)^0,c
  4986   002312  0E00               	movlw	0
  4987   002314  6E2E               	movwf	(___fldiv@a+2)^0,c
  4988   002316  0E00               	movlw	0
  4989   002318  6E2F               	movwf	(___fldiv@a+3)^0,c
  4990   00231A                     l3409:
  4991   00231A  502C               	movf	___fldiv@a^0,w,c
  4992   00231C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  4993   00231E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  4994   002320  102F               	iorwf	(___fldiv@a+3)^0,w,c
  4995   002322  A4D8               	btfss	status,2,c
  4996   002324  EF96  F011         	goto	u3711
  4997   002328  EF98  F011         	goto	u3710
  4998   00232C                     u3711:
  4999   00232C  EFB0  F011         	goto	l3421
  5000   002330                     u3710:
  5001   002330  0E00               	movlw	0
  5002   002332  6E28               	movwf	___fldiv@b^0,c
  5003   002334  0E00               	movlw	0
  5004   002336  6E29               	movwf	(___fldiv@b+1)^0,c
  5005   002338  0E00               	movlw	0
  5006   00233A  6E2A               	movwf	(___fldiv@b+2)^0,c
  5007   00233C  0E00               	movlw	0
  5008   00233E  6E2B               	movwf	(___fldiv@b+3)^0,c
  5009   002340  0E80               	movlw	128
  5010   002342  122A               	iorwf	(___fldiv@b+2)^0,f,c
  5011   002344  0E7F               	movlw	127
  5012   002346  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5013   002348                     l3415:
  5014   002348  5038               	movf	___fldiv@sign^0,w,c
  5015   00234A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  5016   00234C  C028  F028         	movff	___fldiv@b,?___fldiv
  5017   002350  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  5018   002354  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  5019   002358  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  5020   00235C  EFF3  F012         	goto	l811
  5021   002360                     l3421:
  5022   002360  503F               	movf	___fldiv@bexp^0,w,c
  5023   002362  A4D8               	btfss	status,2,c
  5024   002364  EFB6  F011         	goto	u3721
  5025   002368  EFB8  F011         	goto	u3720
  5026   00236C                     u3721:
  5027   00236C  EFC2  F011         	goto	l3429
  5028   002370                     u3720:
  5029   002370  0E00               	movlw	0
  5030   002372  6E28               	movwf	?___fldiv^0,c
  5031   002374  0E00               	movlw	0
  5032   002376  6E29               	movwf	(?___fldiv+1)^0,c
  5033   002378  0E00               	movlw	0
  5034   00237A  6E2A               	movwf	(?___fldiv+2)^0,c
  5035   00237C  0E00               	movlw	0
  5036   00237E  6E2B               	movwf	(?___fldiv+3)^0,c
  5037   002380  EFF3  F012         	goto	l811
  5038   002384                     l3429:
  5039   002384  5040               	movf	___fldiv@aexp^0,w,c
  5040   002386  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  5041   00238A  6A31               	clrf	(??___fldiv+1)^0,c
  5042   00238C  5E30               	subwf	??___fldiv^0,f,c
  5043   00238E  0E00               	movlw	0
  5044   002390  5A31               	subwfb	(??___fldiv+1)^0,f,c
  5045   002392  0E7F               	movlw	127
  5046   002394  2430               	addwf	??___fldiv^0,w,c
  5047   002396  6E39               	movwf	___fldiv@new_exp^0,c
  5048   002398  0E00               	movlw	0
  5049   00239A  2031               	addwfc	(??___fldiv+1)^0,w,c
  5050   00239C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5051   00239E  C028  F034         	movff	___fldiv@b,___fldiv@rem
  5052   0023A2  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  5053   0023A6  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  5054   0023AA  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  5055   0023AE  0E00               	movlw	0
  5056   0023B0  6E28               	movwf	___fldiv@b^0,c
  5057   0023B2  0E00               	movlw	0
  5058   0023B4  6E29               	movwf	(___fldiv@b+1)^0,c
  5059   0023B6  0E00               	movlw	0
  5060   0023B8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5061   0023BA  0E00               	movlw	0
  5062   0023BC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5063   0023BE  0E00               	movlw	0
  5064   0023C0  6E3B               	movwf	___fldiv@grs^0,c
  5065   0023C2  0E00               	movlw	0
  5066   0023C4  6E3C               	movwf	(___fldiv@grs+1)^0,c
  5067   0023C6  0E00               	movlw	0
  5068   0023C8  6E3D               	movwf	(___fldiv@grs+2)^0,c
  5069   0023CA  0E00               	movlw	0
  5070   0023CC  6E3E               	movwf	(___fldiv@grs+3)^0,c
  5071   0023CE  0E00               	movlw	0
  5072   0023D0  6E40               	movwf	___fldiv@aexp^0,c
  5073   0023D2  EF23  F012         	goto	l813
  5074   0023D6                     l3439:
  5075   0023D6  5040               	movf	___fldiv@aexp^0,w,c
  5076   0023D8  B4D8               	btfsc	status,2,c
  5077   0023DA  EFF1  F011         	goto	u3731
  5078   0023DE  EFF3  F011         	goto	u3730
  5079   0023E2                     u3731:
  5080   0023E2  EF0A  F012         	goto	l3447
  5081   0023E6                     u3730:
  5082   0023E6  90D8               	bcf	status,0,c
  5083   0023E8  3634               	rlcf	___fldiv@rem^0,f,c
  5084   0023EA  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  5085   0023EC  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  5086   0023EE  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  5087   0023F0  90D8               	bcf	status,0,c
  5088   0023F2  3628               	rlcf	___fldiv@b^0,f,c
  5089   0023F4  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5090   0023F6  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5091   0023F8  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5092   0023FA  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5093   0023FC  EF02  F012         	goto	u3741
  5094   002400  EF04  F012         	goto	u3740
  5095   002404                     u3741:
  5096   002404  EF05  F012         	goto	l816
  5097   002408                     u3740:
  5098   002408  8028               	bsf	___fldiv@b^0,0,c
  5099   00240A                     l816:
  5100   00240A  90D8               	bcf	status,0,c
  5101   00240C  363B               	rlcf	___fldiv@grs^0,f,c
  5102   00240E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  5103   002410  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  5104   002412  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  5105   002414                     l3447:
  5106   002414  502C               	movf	___fldiv@a^0,w,c
  5107   002416  5C34               	subwf	___fldiv@rem^0,w,c
  5108   002418  502D               	movf	(___fldiv@a+1)^0,w,c
  5109   00241A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  5110   00241C  502E               	movf	(___fldiv@a+2)^0,w,c
  5111   00241E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  5112   002420  502F               	movf	(___fldiv@a+3)^0,w,c
  5113   002422  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  5114   002424  A0D8               	btfss	status,0,c
  5115   002426  EF17  F012         	goto	u3751
  5116   00242A  EF19  F012         	goto	u3750
  5117   00242E                     u3751:
  5118   00242E  EF22  F012         	goto	l3453
  5119   002432                     u3750:
  5120   002432  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  5121   002434  502C               	movf	___fldiv@a^0,w,c
  5122   002436  5E34               	subwf	___fldiv@rem^0,f,c
  5123   002438  502D               	movf	(___fldiv@a+1)^0,w,c
  5124   00243A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  5125   00243C  502E               	movf	(___fldiv@a+2)^0,w,c
  5126   00243E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  5127   002440  502F               	movf	(___fldiv@a+3)^0,w,c
  5128   002442  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  5129   002444                     l3453:
  5130   002444  2A40               	incf	___fldiv@aexp^0,f,c
  5131   002446                     l813:
  5132   002446  0E19               	movlw	25
  5133   002448  6440               	cpfsgt	___fldiv@aexp^0,c
  5134   00244A  EF29  F012         	goto	u3761
  5135   00244E  EF2B  F012         	goto	u3760
  5136   002452                     u3761:
  5137   002452  EFEB  F011         	goto	l3439
  5138   002456                     u3760:
  5139   002456  5034               	movf	___fldiv@rem^0,w,c
  5140   002458  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  5141   00245A  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  5142   00245C  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  5143   00245E  B4D8               	btfsc	status,2,c
  5144   002460  EF34  F012         	goto	u3771
  5145   002464  EF36  F012         	goto	u3770
  5146   002468                     u3771:
  5147   002468  EF4E  F012         	goto	l3465
  5148   00246C                     u3770:
  5149   00246C  803B               	bsf	___fldiv@grs^0,0,c
  5150   00246E  EF4E  F012         	goto	l3465
  5151   002472                     l3459:
  5152   002472  90D8               	bcf	status,0,c
  5153   002474  3628               	rlcf	___fldiv@b^0,f,c
  5154   002476  3629               	rlcf	(___fldiv@b+1)^0,f,c
  5155   002478  362A               	rlcf	(___fldiv@b+2)^0,f,c
  5156   00247A  362B               	rlcf	(___fldiv@b+3)^0,f,c
  5157   00247C  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5158   00247E  EF43  F012         	goto	u3781
  5159   002482  EF45  F012         	goto	u3780
  5160   002486                     u3781:
  5161   002486  EF46  F012         	goto	l822
  5162   00248A                     u3780:
  5163   00248A  8028               	bsf	___fldiv@b^0,0,c
  5164   00248C                     l822:
  5165   00248C  90D8               	bcf	status,0,c
  5166   00248E  363B               	rlcf	___fldiv@grs^0,f,c
  5167   002490  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  5168   002492  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  5169   002494  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  5170   002496  0639               	decf	___fldiv@new_exp^0,f,c
  5171   002498  A0D8               	btfss	status,0,c
  5172   00249A  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  5173   00249C                     l3465:
  5174   00249C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5175   00249E  EF53  F012         	goto	u3791
  5176   0024A2  EF55  F012         	goto	u3790
  5177   0024A6                     u3791:
  5178   0024A6  EF39  F012         	goto	l3459
  5179   0024AA                     u3790:
  5180   0024AA  0E00               	movlw	0
  5181   0024AC  6E40               	movwf	___fldiv@aexp^0,c
  5182   0024AE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  5183   0024B0  EF5C  F012         	goto	u3801
  5184   0024B4  EF5E  F012         	goto	u3800
  5185   0024B8                     u3801:
  5186   0024B8  EF82  F012         	goto	l824
  5187   0024BC                     u3800:
  5188   0024BC  0EFF               	movlw	255
  5189   0024BE  143B               	andwf	___fldiv@grs^0,w,c
  5190   0024C0  6E30               	movwf	??___fldiv^0,c
  5191   0024C2  0EFF               	movlw	255
  5192   0024C4  143C               	andwf	(___fldiv@grs+1)^0,w,c
  5193   0024C6  6E31               	movwf	(??___fldiv+1)^0,c
  5194   0024C8  0EFF               	movlw	255
  5195   0024CA  143D               	andwf	(___fldiv@grs+2)^0,w,c
  5196   0024CC  6E32               	movwf	(??___fldiv+2)^0,c
  5197   0024CE  0E7F               	movlw	127
  5198   0024D0  143E               	andwf	(___fldiv@grs+3)^0,w,c
  5199   0024D2  6E33               	movwf	(??___fldiv+3)^0,c
  5200   0024D4  5030               	movf	??___fldiv^0,w,c
  5201   0024D6  1031               	iorwf	(??___fldiv+1)^0,w,c
  5202   0024D8  1032               	iorwf	(??___fldiv+2)^0,w,c
  5203   0024DA  1033               	iorwf	(??___fldiv+3)^0,w,c
  5204   0024DC  B4D8               	btfsc	status,2,c
  5205   0024DE  EF73  F012         	goto	u3811
  5206   0024E2  EF75  F012         	goto	u3810
  5207   0024E6                     u3811:
  5208   0024E6  EF79  F012         	goto	l825
  5209   0024EA                     u3810:
  5210   0024EA                     l3473:
  5211   0024EA  0E01               	movlw	1
  5212   0024EC  6E40               	movwf	___fldiv@aexp^0,c
  5213   0024EE  EF82  F012         	goto	l824
  5214   0024F2                     l825:
  5215   0024F2  A028               	btfss	___fldiv@b^0,0,c
  5216   0024F4  EF7E  F012         	goto	u3821
  5217   0024F8  EF80  F012         	goto	u3820
  5218   0024FC                     u3821:
  5219   0024FC  EF82  F012         	goto	l824
  5220   002500                     u3820:
  5221   002500  EF75  F012         	goto	l3473
  5222   002504                     l824:
  5223   002504  5040               	movf	___fldiv@aexp^0,w,c
  5224   002506  B4D8               	btfsc	status,2,c
  5225   002508  EF88  F012         	goto	u3831
  5226   00250C  EF8A  F012         	goto	u3830
  5227   002510                     u3831:
  5228   002510  EFAE  F012         	goto	l3485
  5229   002514                     u3830:
  5230   002514  0E01               	movlw	1
  5231   002516  2628               	addwf	___fldiv@b^0,f,c
  5232   002518  0E00               	movlw	0
  5233   00251A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  5234   00251C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  5235   00251E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  5236   002520  A02B               	btfss	(___fldiv@b+3)^0,0,c
  5237   002522  EF95  F012         	goto	u3841
  5238   002526  EF97  F012         	goto	u3840
  5239   00252A                     u3841:
  5240   00252A  EFAE  F012         	goto	l3485
  5241   00252E                     u3840:
  5242   00252E  C028  F030         	movff	___fldiv@b,??___fldiv
  5243   002532  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  5244   002536  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  5245   00253A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  5246   00253E  3433               	rlcf	(??___fldiv+3)^0,w,c
  5247   002540  3233               	rrcf	(??___fldiv+3)^0,f,c
  5248   002542  3232               	rrcf	(??___fldiv+2)^0,f,c
  5249   002544  3231               	rrcf	(??___fldiv+1)^0,f,c
  5250   002546  3230               	rrcf	??___fldiv^0,f,c
  5251   002548  C030  F028         	movff	??___fldiv,___fldiv@b
  5252   00254C  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  5253   002550  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  5254   002554  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  5255   002558  4A39               	infsnz	___fldiv@new_exp^0,f,c
  5256   00255A  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  5257   00255C                     l3485:
  5258   00255C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5259   00255E  EFB9  F012         	goto	u3851
  5260   002562  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  5261   002564  E108               	bnz	u3850
  5262   002566  2839               	incf	___fldiv@new_exp^0,w,c
  5263   002568  A0D8               	btfss	status,0,c
  5264   00256A  EFB9  F012         	goto	u3851
  5265   00256E  EFBB  F012         	goto	u3850
  5266   002572                     u3851:
  5267   002572  EFC6  F012         	goto	l3489
  5268   002576                     u3850:
  5269   002576  0E00               	movlw	0
  5270   002578  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5271   00257A  6839               	setf	___fldiv@new_exp^0,c
  5272   00257C  0E00               	movlw	0
  5273   00257E  6E28               	movwf	___fldiv@b^0,c
  5274   002580  0E00               	movlw	0
  5275   002582  6E29               	movwf	(___fldiv@b+1)^0,c
  5276   002584  0E00               	movlw	0
  5277   002586  6E2A               	movwf	(___fldiv@b+2)^0,c
  5278   002588  0E00               	movlw	0
  5279   00258A  6E2B               	movwf	(___fldiv@b+3)^0,c
  5280   00258C                     l3489:
  5281   00258C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5282   00258E  EFD3  F012         	goto	u3860
  5283   002592  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  5284   002594  E106               	bnz	u3861
  5285   002596  0439               	decf	___fldiv@new_exp^0,w,c
  5286   002598  B0D8               	btfsc	status,0,c
  5287   00259A  EFD1  F012         	goto	u3861
  5288   00259E  EFD3  F012         	goto	u3860
  5289   0025A2                     u3861:
  5290   0025A2  EFE1  F012         	goto	l3493
  5291   0025A6                     u3860:
  5292   0025A6  0E00               	movlw	0
  5293   0025A8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  5294   0025AA  0E00               	movlw	0
  5295   0025AC  6E39               	movwf	___fldiv@new_exp^0,c
  5296   0025AE  0E00               	movlw	0
  5297   0025B0  6E28               	movwf	___fldiv@b^0,c
  5298   0025B2  0E00               	movlw	0
  5299   0025B4  6E29               	movwf	(___fldiv@b+1)^0,c
  5300   0025B6  0E00               	movlw	0
  5301   0025B8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5302   0025BA  0E00               	movlw	0
  5303   0025BC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5304   0025BE  0E00               	movlw	0
  5305   0025C0  6E38               	movwf	___fldiv@sign^0,c
  5306   0025C2                     l3493:
  5307   0025C2  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  5308   0025C6  A03F               	btfss	___fldiv@bexp^0,0,c
  5309   0025C8  EFE8  F012         	goto	u3871
  5310   0025CC  EFEA  F012         	goto	u3870
  5311   0025D0                     u3871:
  5312   0025D0  EFED  F012         	goto	l3499
  5313   0025D4                     u3870:
  5314   0025D4  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  5315   0025D6  EFEE  F012         	goto	l3501
  5316   0025DA                     l3499:
  5317   0025DA  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  5318   0025DC                     l3501:
  5319   0025DC  90D8               	bcf	status,0,c
  5320   0025DE  303F               	rrcf	___fldiv@bexp^0,w,c
  5321   0025E0  6E2B               	movwf	(___fldiv@b+3)^0,c
  5322   0025E2  EFA4  F011         	goto	l3415
  5323   0025E6                     l811:
  5324   0025E6  0012               	return		;funcret
  5325   0025E8                     __end_of___fldiv:
  5326                           	callstack 0
  5327                           
  5328 ;; *************** function _SPI_write *****************
  5329 ;; Defined at:
  5330 ;;		line 93 in file "DAC.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  data            1    wreg     unsigned char 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  data            1    2[COMRAM] unsigned char 
  5335 ;;  LSB             1    1[COMRAM] unsigned char 
  5336 ;;  MSB             1    0[COMRAM] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;Total ram usage:        3 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_runDAC
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text15
  5360   003C8E                     __ptext15:
  5361                           	callstack 0
  5362   003C8E                     _SPI_write:
  5363                           	callstack 29
  5364                           
  5365                           ;incstack = 0
  5366                           ;SPI_write@data stored from wreg
  5367   003C8E  6E03               	movwf	SPI_write@data^0,c
  5368   003C90                     
  5369                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5370   003C90  3803               	swapf	SPI_write@data^0,w,c
  5371   003C92  0B0F               	andlw	15
  5372   003C94  0930               	iorlw	48
  5373   003C96  6E01               	movwf	SPI_write@MSB^0,c
  5374                           
  5375                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5376   003C98  3803               	swapf	SPI_write@data^0,w,c
  5377   003C9A  0BF0               	andlw	240
  5378   003C9C  6E02               	movwf	SPI_write@LSB^0,c
  5379   003C9E                     
  5380                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5381   003C9E  968A               	bcf	138,3,c	;volatile
  5382   003CA0                     
  5383                           ;DAC.c: 101:     SSP1BUF = MSB;
  5384   003CA0  C001  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5385   003CA4                     l192:
  5386   003CA4  A69E               	btfss	3998,3,c	;volatile
  5387   003CA6  EF57  F01E         	goto	u3501
  5388   003CAA  EF59  F01E         	goto	u3500
  5389   003CAE                     u3501:
  5390   003CAE  EF52  F01E         	goto	l192
  5391   003CB2                     u3500:
  5392   003CB2                     
  5393                           ;DAC.c: 103:     SSP1IF = 0;
  5394   003CB2  969E               	bcf	3998,3,c	;volatile
  5395                           
  5396                           ;DAC.c: 105:     SSP1BUF = LSB;
  5397   003CB4  C002  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5398   003CB8                     l195:
  5399   003CB8  A69E               	btfss	3998,3,c	;volatile
  5400   003CBA  EF61  F01E         	goto	u3511
  5401   003CBE  EF63  F01E         	goto	u3510
  5402   003CC2                     u3511:
  5403   003CC2  EF5C  F01E         	goto	l195
  5404   003CC6                     u3510:
  5405   003CC6                     
  5406                           ;DAC.c: 107:     SSP1IF = 0;
  5407   003CC6  969E               	bcf	3998,3,c	;volatile
  5408                           
  5409                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5410   003CC8  868A               	bsf	138,3,c	;volatile
  5411   003CCA  0012               	return		;funcret
  5412   003CCC                     __end_of_SPI_write:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _moveDisplay *****************
  5416 ;; Defined at:
  5417 ;;		line 11 in file "menu.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  menuI           1    wreg     unsigned char 
  5420 ;;  where           1   71[COMRAM] unsigned char 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  menuI           1   42[BANK0 ] unsigned char 
  5423 ;;  menuItem2      17   17[BANK0 ] unsigned char [17]
  5424 ;;  menuItem1      17    0[BANK0 ] unsigned char [17]
  5425 ;;  menuItems       8   34[BANK0 ] PTR unsigned char [8]
  5426 ;;		 -> STR_11(1), STR_10(6), STR_9(5), STR_8(4), 
  5427 ;;		 -> STR_7(4), STR_6(4), STR_5(5), STR_4(5), 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      unsigned char 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5440 ;;      Totals:         3      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;Total ram usage:       46 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 8
  5444 ;; This function calls:
  5445 ;;		_LCD_Clear
  5446 ;;		_LCD_ShowString
  5447 ;;		_sprintf
  5448 ;; This function is called by:
  5449 ;;		_main
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text16
  5454   0035E0                     __ptext16:
  5455                           	callstack 0
  5456   0035E0                     _moveDisplay:
  5457                           	callstack 22
  5458                           
  5459                           ;incstack = 0
  5460                           ;moveDisplay@menuI stored from wreg
  5461   0035E0  0100               	movlb	0	; () banked
  5462   0035E2  6F8A               	movwf	moveDisplay@menuI& (0+255),b
  5463   0035E4                     
  5464                           ;menu.c: 12:     LCD_Clear();
  5465   0035E4  ECB9  F01E         	call	_LCD_Clear	;wreg free
  5466   0035E8                     
  5467                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  5468   0035E8  EE20  F0EE         	lfsr	2,moveDisplay@F6949
  5469   0035EC  EE10  F082         	lfsr	1,moveDisplay@menuItems
  5470   0035F0  0E07               	movlw	7
  5471   0035F2                     u3901:
  5472   0035F2  CFDB FFE3          	movff	plusw2,plusw1
  5473   0035F6  06E8               	decf	wreg,f,c
  5474   0035F8  E2FC               	bc	u3901
  5475                           
  5476                           ;menu.c: 14:     switch (where){
  5477   0035FA  EF17  F01B         	goto	l3539
  5478   0035FE                     l3529:
  5479                           
  5480                           ;menu.c: 18:             if(menuI<6){
  5481   0035FE  0E06               	movlw	6
  5482   003600  0100               	movlb	0	; () banked
  5483   003602  618A               	cpfslt	moveDisplay@menuI& (0+255),b
  5484   003604  EF06  F01B         	goto	u3911
  5485   003608  EF08  F01B         	goto	u3910
  5486   00360C                     u3911:
  5487   00360C  EF26  F01B         	goto	l3541
  5488   003610                     u3910:
  5489   003610                     
  5490                           ; BSR set to: 0
  5491                           ;menu.c: 19:             menuI++;
  5492   003610  2B8A               	incf	moveDisplay@menuI& (0+255),f,b
  5493   003612  EF26  F01B         	goto	l3541
  5494   003616                     l3533:
  5495                           
  5496                           ;menu.c: 23:             if(menuI>0){
  5497   003616  0100               	movlb	0	; () banked
  5498   003618  518A               	movf	moveDisplay@menuI& (0+255),w,b
  5499   00361A  B4D8               	btfsc	status,2,c
  5500   00361C  EF12  F01B         	goto	u3921
  5501   003620  EF14  F01B         	goto	u3920
  5502   003624                     u3921:
  5503   003624  EF26  F01B         	goto	l3541
  5504   003628                     u3920:
  5505   003628                     
  5506                           ; BSR set to: 0
  5507                           ;menu.c: 24:             menuI--;
  5508   003628  078A               	decf	moveDisplay@menuI& (0+255),f,b
  5509   00362A  EF26  F01B         	goto	l3541
  5510   00362E                     l3539:
  5511   00362E  5048               	movf	moveDisplay@where^0,w,c
  5512                           
  5513                           ; Switch size 1, requested type "simple"
  5514                           ; Number of cases is 3, Range of values is 0 to 2
  5515                           ; switch strategies available:
  5516                           ; Name         Instructions Cycles
  5517                           ; simple_byte           10     6 (average)
  5518                           ;	Chosen strategy is simple_byte
  5519   003630  0A00               	xorlw	0	; case 0
  5520   003632  B4D8               	btfsc	status,2,c
  5521   003634  EF26  F01B         	goto	l3541
  5522   003638  0A01               	xorlw	1	; case 1
  5523   00363A  B4D8               	btfsc	status,2,c
  5524   00363C  EFFF  F01A         	goto	l3529
  5525   003640  0A03               	xorlw	3	; case 2
  5526   003642  B4D8               	btfsc	status,2,c
  5527   003644  EF0B  F01B         	goto	l3533
  5528   003648  EF26  F01B         	goto	l3541
  5529   00364C                     l3541:
  5530                           
  5531                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  5532   00364C  0E60               	movlw	low moveDisplay@menuItem1
  5533   00364E  6E35               	movwf	sprintf@s^0,c
  5534   003650  0E70               	movlw	low STR_12
  5535   003652  6E36               	movwf	sprintf@fmt^0,c
  5536   003654  0E00               	movlw	0
  5537   003656  6E38               	movwf	(?_sprintf+3)^0,c
  5538   003658  0E0F               	movlw	15
  5539   00365A  6E37               	movwf	(?_sprintf+2)^0,c
  5540   00365C  0100               	movlb	0	; () banked
  5541   00365E  518A               	movf	moveDisplay@menuI& (0+255),w,b
  5542   003660  0F82               	addlw	low moveDisplay@menuItems
  5543   003662  6ED9               	movwf	fsr2l,c
  5544   003664  6ADA               	clrf	fsr2h,c
  5545   003666  50DF               	movf	indf2,w,c
  5546   003668  6E49               	movwf	??_moveDisplay^0,c
  5547   00366A  C049  F039         	movff	??_moveDisplay,?_sprintf+4
  5548   00366E  5039               	movf	(?_sprintf+4)^0,w,c
  5549   003670  A4D8               	btfss	status,2,c
  5550   003672  0E10               	movlw	high __smallconst
  5551   003674  6E3A               	movwf	(?_sprintf+5)^0,c
  5552   003676  EC9E  F01E         	call	_sprintf	;wreg free
  5553                           
  5554                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  5555   00367A  0E71               	movlw	low moveDisplay@menuItem2
  5556   00367C  6E35               	movwf	sprintf@s^0,c
  5557   00367E  0E71               	movlw	low (STR_12+1)
  5558   003680  6E36               	movwf	sprintf@fmt^0,c
  5559   003682  0E00               	movlw	0
  5560   003684  6E38               	movwf	(?_sprintf+3)^0,c
  5561   003686  0E10               	movlw	16
  5562   003688  6E37               	movwf	(?_sprintf+2)^0,c
  5563   00368A  C08A  F049         	movff	moveDisplay@menuI,??_moveDisplay
  5564   00368E  0E01               	movlw	1
  5565   003690  2649               	addwf	??_moveDisplay^0,f,c
  5566   003692  5049               	movf	??_moveDisplay^0,w,c
  5567   003694  0F82               	addlw	low moveDisplay@menuItems
  5568   003696  6ED9               	movwf	fsr2l,c
  5569   003698  6ADA               	clrf	fsr2h,c
  5570   00369A  50DF               	movf	indf2,w,c
  5571   00369C  6E4A               	movwf	(??_moveDisplay+1)^0,c
  5572   00369E  C04A  F039         	movff	??_moveDisplay+1,?_sprintf+4
  5573   0036A2  5039               	movf	(?_sprintf+4)^0,w,c
  5574   0036A4  A4D8               	btfss	status,2,c
  5575   0036A6  0E10               	movlw	high __smallconst
  5576   0036A8  6E3A               	movwf	(?_sprintf+5)^0,c
  5577   0036AA  EC9E  F01E         	call	_sprintf	;wreg free
  5578   0036AE                     
  5579                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  5580   0036AE  0E60               	movlw	low moveDisplay@menuItem1
  5581   0036B0  6E02               	movwf	LCD_ShowString@textData^0,c
  5582   0036B2  6A03               	clrf	(LCD_ShowString@textData+1)^0,c
  5583   0036B4  0E01               	movlw	1
  5584   0036B6  EC92  F01C         	call	_LCD_ShowString
  5585   0036BA                     
  5586                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  5587   0036BA  0E71               	movlw	low moveDisplay@menuItem2
  5588   0036BC  6E02               	movwf	LCD_ShowString@textData^0,c
  5589   0036BE  6A03               	clrf	(LCD_ShowString@textData+1)^0,c
  5590   0036C0  0E02               	movlw	2
  5591   0036C2  EC92  F01C         	call	_LCD_ShowString
  5592   0036C6                     
  5593                           ;menu.c: 35:     return menuI;
  5594   0036C6  0100               	movlb	0	; () banked
  5595   0036C8  518A               	movf	moveDisplay@menuI& (0+255),w,b
  5596   0036CA                     
  5597                           ; BSR set to: 0
  5598   0036CA  0012               	return		;funcret
  5599   0036CC                     __end_of_moveDisplay:
  5600                           	callstack 0
  5601                           
  5602 ;; *************** function _sprintf *****************
  5603 ;; Defined at:
  5604 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  s               1   52[COMRAM] PTR unsigned char 
  5607 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  5608 ;;  fmt             1   53[COMRAM] PTR const unsigned char 
  5609 ;;		 -> STR_13(5), STR_12(6), 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  f              12   59[COMRAM] struct _IO_FILE
  5612 ;;  ret             2    0        int 
  5613 ;;  ap              1   58[COMRAM] PTR void [1]
  5614 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  2   52[COMRAM] int 
  5617 ;; Registers used:
  5618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5624 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;Total ram usage:       19 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 7
  5631 ;; This function calls:
  5632 ;;		_vfprintf
  5633 ;; This function is called by:
  5634 ;;		_moveDisplay
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text17
  5639   003D3C                     __ptext17:
  5640                           	callstack 0
  5641   003D3C                     _sprintf:
  5642                           	callstack 22
  5643   003D3C  0E37               	movlw	low (?_sprintf+2)
  5644   003D3E  6E3B               	movwf	sprintf@ap^0,c
  5645   003D40  C035  F03C         	movff	sprintf@s,sprintf@f
  5646   003D44  0E00               	movlw	0
  5647   003D46  6E40               	movwf	(sprintf@f+4)^0,c
  5648   003D48  0E00               	movlw	0
  5649   003D4A  6E3F               	movwf	(sprintf@f+3)^0,c
  5650   003D4C  0E00               	movlw	0
  5651   003D4E  6E47               	movwf	(sprintf@f+11)^0,c
  5652   003D50  0E00               	movlw	0
  5653   003D52  6E46               	movwf	(sprintf@f+10)^0,c
  5654   003D54  0E3C               	movlw	low sprintf@f
  5655   003D56  6E30               	movwf	vfprintf@fp^0,c
  5656   003D58  6A31               	clrf	(vfprintf@fp+1)^0,c
  5657   003D5A  C036  F032         	movff	sprintf@fmt,vfprintf@fmt
  5658   003D5E  0E3B               	movlw	low sprintf@ap
  5659   003D60  6E33               	movwf	vfprintf@ap^0,c
  5660   003D62  EC06  F01E         	call	_vfprintf	;wreg free
  5661   003D66  5035               	movf	sprintf@s^0,w,c
  5662   003D68  243F               	addwf	(sprintf@f+3)^0,w,c
  5663   003D6A  6ED9               	movwf	fsr2l,c
  5664   003D6C  6ADA               	clrf	fsr2h,c
  5665   003D6E  6ADF               	clrf	indf2,c
  5666   003D70  0012               	return		;funcret
  5667   003D72                     __end_of_sprintf:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function _vfprintf *****************
  5671 ;; Defined at:
  5672 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  5675 ;;		 -> NULL(0), sprintf@f(12), 
  5676 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  5677 ;;		 -> STR_13(5), STR_12(6), STR_3(5), 
  5678 ;;  ap              1   50[COMRAM] PTR PTR void 
  5679 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  cfmt            1   51[COMRAM] PTR unsigned char 
  5682 ;;		 -> STR_13(5), STR_12(6), STR_3(5), 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  2   47[COMRAM] int 
  5685 ;; Registers used:
  5686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;Total ram usage:        5 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; Hardware stack levels required when called: 6
  5699 ;; This function calls:
  5700 ;;		_vfpfcnvrt
  5701 ;; This function is called by:
  5702 ;;		_sprintf
  5703 ;;		_printf
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text18
  5708   003C0C                     __ptext18:
  5709                           	callstack 0
  5710   003C0C                     _vfprintf:
  5711                           	callstack 22
  5712   003C0C                     
  5713                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5714   003C0C  C032  F034         	movff	vfprintf@fmt,vfprintf@cfmt
  5715                           
  5716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5717   003C10  EF14  F01E         	goto	l3151
  5718   003C14                     l3149:
  5719                           
  5720                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5721   003C14  C030  F025         	movff	vfprintf@fp,vfpfcnvrt@fp
  5722   003C18  C031  F026         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5723   003C1C  0E34               	movlw	low vfprintf@cfmt
  5724   003C1E  6E27               	movwf	vfpfcnvrt@fmt^0,c
  5725   003C20  C033  F028         	movff	vfprintf@ap,vfpfcnvrt@ap
  5726   003C24  ECF4  F012         	call	_vfpfcnvrt	;wreg free
  5727   003C28                     l3151:
  5728                           
  5729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5730   003C28  C034  FFF6         	movff	vfprintf@cfmt,tblptrl
  5731   003C2C                     	if	1	;There is more than 1 active tblptr byte
  5732   003C2C  0E10               	movlw	high __smallconst
  5733   003C2E  6EF7               	movwf	tblptrh,c
  5734   003C30                     	endif
  5735   003C30                     	if	0	;tblptru may be non-zero
  5736   003C30                     	endif
  5737   003C30                     	if	0	;tblptru may be non-zero
  5738   003C30                     	endif
  5739   003C30  0008               	tblrd		*
  5740   003C32  50F5               	movf	tablat,w,c
  5741   003C34  0900               	iorlw	0
  5742   003C36  A4D8               	btfss	status,2,c
  5743   003C38  EF20  F01E         	goto	u3361
  5744   003C3C  EF22  F01E         	goto	u3360
  5745   003C40                     u3361:
  5746   003C40  EF0A  F01E         	goto	l3149
  5747   003C44                     u3360:
  5748   003C44                     
  5749                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5750   003C44  0E00               	movlw	0
  5751   003C46  6E31               	movwf	(?_vfprintf+1)^0,c
  5752   003C48  0E00               	movlw	0
  5753   003C4A  6E30               	movwf	?_vfprintf^0,c
  5754   003C4C  0012               	return		;funcret
  5755   003C4E                     __end_of_vfprintf:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function _vfpfcnvrt *****************
  5759 ;; Defined at:
  5760 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  5763 ;;		 -> NULL(0), sprintf@f(12), 
  5764 ;;  fmt             1   38[COMRAM] PTR PTR unsigned char 
  5765 ;;		 -> vfprintf@cfmt(1), 
  5766 ;;  ap              1   39[COMRAM] PTR PTR void 
  5767 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  convarg         4   41[COMRAM] struct .
  5770 ;;  done            1   46[COMRAM] _Bool 
  5771 ;;  cp              1   45[COMRAM] PTR unsigned char 
  5772 ;;		 -> STR_13(5), STR_12(6), STR_3(5), 
  5773 ;;  c               1    0        unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:       11 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; Hardware stack levels required when called: 5
  5790 ;; This function calls:
  5791 ;;		_dtoa
  5792 ;;		_fputc
  5793 ;;		_read_prec_or_width
  5794 ;;		_stoa
  5795 ;; This function is called by:
  5796 ;;		_vfprintf
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text19
  5801   0025E8                     __ptext19:
  5802                           	callstack 0
  5803   0025E8                     _vfpfcnvrt:
  5804                           	callstack 22
  5805   0025E8                     
  5806                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5807   0025E8  5027               	movf	vfpfcnvrt@fmt^0,w,c
  5808   0025EA  6ED9               	movwf	fsr2l,c
  5809   0025EC  6ADA               	clrf	fsr2h,c
  5810   0025EE  CFDF FFF6          	movff	indf2,tblptrl
  5811   0025F2                     	if	1	;There is more than 1 active tblptr byte
  5812   0025F2  0E10               	movlw	high __smallconst
  5813   0025F4  6EF7               	movwf	tblptrh,c
  5814   0025F6                     	endif
  5815   0025F6                     	if	0	;tblptru may be non-zero
  5816   0025F6                     	endif
  5817   0025F6                     	if	0	;tblptru may be non-zero
  5818   0025F6                     	endif
  5819   0025F6  0008               	tblrd		*
  5820   0025F8  50F5               	movf	tablat,w,c
  5821   0025FA  0A25               	xorlw	37
  5822   0025FC  A4D8               	btfss	status,2,c
  5823   0025FE  EF03  F013         	goto	u3241
  5824   002602  EF05  F013         	goto	u3240
  5825   002606                     u3241:
  5826   002606  EF0D  F014         	goto	l3131
  5827   00260A                     u3240:
  5828   00260A                     
  5829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5830   00260A  5027               	movf	vfpfcnvrt@fmt^0,w,c
  5831   00260C  6ED9               	movwf	fsr2l,c
  5832   00260E  6ADA               	clrf	fsr2h,c
  5833   002610  2ADF               	incf	indf2,f,c
  5834   002612                     
  5835                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5836   002612  0E00               	movlw	0
  5837   002614  0100               	movlb	0	; () banked
  5838   002616  6FCA               	movwf	(_width+1)& (0+255),b
  5839   002618  0E00               	movlw	0
  5840   00261A  6FC9               	movwf	_width& (0+255),b
  5841   00261C  C0C9  F0CD         	movff	_width,_flags
  5842   002620                     
  5843                           ; BSR set to: 0
  5844                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5845   002620  69CB               	setf	_prec& (0+255),b
  5846   002622  69CC               	setf	(_prec+1)& (0+255),b
  5847   002624                     
  5848                           ; BSR set to: 0
  5849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5850   002624  0E00               	movlw	0
  5851   002626  6E2F               	movwf	vfpfcnvrt@done^0,c
  5852                           
  5853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5854   002628  EF31  F013         	goto	l3081
  5855   00262C                     l3071:
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  5858   00262C  0100               	movlb	0	; () banked
  5859   00262E  81CD               	bsf	_flags& (0+255),0,b
  5860   002630                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  5863   002630  5027               	movf	vfpfcnvrt@fmt^0,w,c
  5864   002632  6ED9               	movwf	fsr2l,c
  5865   002634  6ADA               	clrf	fsr2h,c
  5866   002636  2ADF               	incf	indf2,f,c
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  5869   002638  EF31  F013         	goto	l3081
  5870   00263C                     l3075:
  5871                           
  5872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5873   00263C  0E01               	movlw	1
  5874   00263E  6E2F               	movwf	vfpfcnvrt@done^0,c
  5875                           
  5876                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5877   002640  EF31  F013         	goto	l3081
  5878   002644                     l3079:
  5879   002644  5027               	movf	vfpfcnvrt@fmt^0,w,c
  5880   002646  6ED9               	movwf	fsr2l,c
  5881   002648  6ADA               	clrf	fsr2h,c
  5882   00264A  CFDF FFF6          	movff	indf2,tblptrl
  5883   00264E                     	if	1	;There is more than 1 active tblptr byte
  5884   00264E  0E10               	movlw	high __smallconst
  5885   002650  6EF7               	movwf	tblptrh,c
  5886   002652                     	endif
  5887   002652                     	if	0	;tblptru may be non-zero
  5888   002652                     	endif
  5889   002652                     	if	0	;tblptru may be non-zero
  5890   002652                     	endif
  5891   002652  0008               	tblrd		*
  5892   002654  50F5               	movf	tablat,w,c
  5893                           
  5894                           ; Switch size 1, requested type "simple"
  5895                           ; Number of cases is 1, Range of values is 45 to 45
  5896                           ; switch strategies available:
  5897                           ; Name         Instructions Cycles
  5898                           ; simple_byte            4     3 (average)
  5899                           ;	Chosen strategy is simple_byte
  5900   002656  0A2D               	xorlw	45	; case 45
  5901   002658  B4D8               	btfsc	status,2,c
  5902   00265A  EF16  F013         	goto	l3071
  5903   00265E  EF1E  F013         	goto	l3075
  5904   002662                     l3081:
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5907   002662  502F               	movf	vfpfcnvrt@done^0,w,c
  5908   002664  B4D8               	btfsc	status,2,c
  5909   002666  EF37  F013         	goto	u3251
  5910   00266A  EF39  F013         	goto	u3250
  5911   00266E                     u3251:
  5912   00266E  EF22  F013         	goto	l3079
  5913   002672                     u3250:
  5914   002672                     
  5915                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5916   002672  C027  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5917   002676  C028  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5918   00267A  EC43  F01D         	call	_read_prec_or_width	;wreg free
  5919   00267E  C007  F0C9         	movff	?_read_prec_or_width,_width
  5920   002682  C008  F0CA         	movff	?_read_prec_or_width+1,_width+1
  5921   002686                     
  5922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5923   002686  0100               	movlb	0	; () banked
  5924   002688  BFCA               	btfsc	(_width+1)& (0+255),7,b
  5925   00268A  EF4B  F013         	goto	u3260
  5926   00268E  EF49  F013         	goto	u3261
  5927   002692                     u3261:
  5928   002692  EF50  F013         	goto	l3089
  5929   002696                     u3260:
  5930   002696                     
  5931                           ; BSR set to: 0
  5932                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5933   002696  81CD               	bsf	_flags& (0+255),0,b
  5934                           
  5935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5936   002698  6DC9               	negf	_width& (0+255),b
  5937   00269A  1FCA               	comf	(_width+1)& (0+255),f,b
  5938   00269C  B0D8               	btfsc	status,0,c
  5939   00269E  2BCA               	incf	(_width+1)& (0+255),f,b
  5940   0026A0                     l3089:
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5944   0026A0  5027               	movf	vfpfcnvrt@fmt^0,w,c
  5945   0026A2  6ED9               	movwf	fsr2l,c
  5946   0026A4  6ADA               	clrf	fsr2h,c
  5947   0026A6  50DF               	movf	indf2,w,c
  5948   0026A8  6E2E               	movwf	vfpfcnvrt@cp^0,c
  5949   0026AA                     
  5950                           ; BSR set to: 0
  5951                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5952   0026AA  C02E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5953   0026AE                     	if	1	;There is more than 1 active tblptr byte
  5954   0026AE  0E10               	movlw	high __smallconst
  5955   0026B0  6EF7               	movwf	tblptrh,c
  5956   0026B2                     	endif
  5957   0026B2                     	if	0	;tblptru may be non-zero
  5958   0026B2                     	endif
  5959   0026B2                     	if	0	;tblptru may be non-zero
  5960   0026B2                     	endif
  5961   0026B2  0008               	tblrd		*
  5962   0026B4  50F5               	movf	tablat,w,c
  5963   0026B6  0A64               	xorlw	100
  5964   0026B8  B4D8               	btfsc	status,2,c
  5965   0026BA  EF61  F013         	goto	u3271
  5966   0026BE  EF63  F013         	goto	u3270
  5967   0026C2                     u3271:
  5968   0026C2  EF71  F013         	goto	l3095
  5969   0026C6                     u3270:
  5970   0026C6                     
  5971                           ; BSR set to: 0
  5972   0026C6  C02E  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5973   0026CA                     	if	1	;There is more than 1 active tblptr byte
  5974   0026CA  0E10               	movlw	high __smallconst
  5975   0026CC  6EF7               	movwf	tblptrh,c
  5976   0026CE                     	endif
  5977   0026CE                     	if	0	;tblptru may be non-zero
  5978   0026CE                     	endif
  5979   0026CE                     	if	0	;tblptru may be non-zero
  5980   0026CE                     	endif
  5981   0026CE  0008               	tblrd		*
  5982   0026D0  50F5               	movf	tablat,w,c
  5983   0026D2  0A69               	xorlw	105
  5984   0026D4  A4D8               	btfss	status,2,c
  5985   0026D6  EF6F  F013         	goto	u3281
  5986   0026DA  EF71  F013         	goto	u3280
  5987   0026DE                     u3281:
  5988   0026DE  EF8E  F013         	goto	l3103
  5989   0026E2                     u3280:
  5990   0026E2                     l3095:
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5994   0026E2  5028               	movf	vfpfcnvrt@ap^0,w,c
  5995   0026E4  6ED9               	movwf	fsr2l,c
  5996   0026E6  6ADA               	clrf	fsr2h,c
  5997   0026E8  0E02               	movlw	2
  5998   0026EA  26DF               	addwf	indf2,f,c
  5999   0026EC  5CDF               	subwf	indf2,w,c
  6000   0026EE  6ED9               	movwf	fsr2l,c
  6001   0026F0  6ADA               	clrf	fsr2h,c
  6002   0026F2  CFDE F02A          	movff	postinc2,vfpfcnvrt@convarg
  6003   0026F6  CFDE F02B          	movff	postinc2,vfpfcnvrt@convarg+1
  6004   0026FA                     
  6005                           ; BSR set to: 0
  6006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6007   0026FA  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6008   0026FC  6ED9               	movwf	fsr2l,c
  6009   0026FE  6ADA               	clrf	fsr2h,c
  6010   002700  282E               	incf	vfpfcnvrt@cp^0,w,c
  6011   002702  6EDF               	movwf	indf2,c
  6012   002704                     
  6013                           ; BSR set to: 0
  6014                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6015   002704  C025  F019         	movff	vfpfcnvrt@fp,dtoa@fp
  6016   002708  C026  F01A         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6017   00270C  C02A  F01B         	movff	vfpfcnvrt@convarg,dtoa@d
  6018   002710  C02B  F01C         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6019   002714  ECCB  F019         	call	_dtoa	;wreg free
  6020   002718  EF20  F014         	goto	l988
  6021   00271C                     l3103:
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6025   00271C  0E00               	movlw	0
  6026   00271E  6E2F               	movwf	vfpfcnvrt@done^0,c
  6027   002720                     
  6028                           ; BSR set to: 0
  6029                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6030   002720  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6031   002722  6ED9               	movwf	fsr2l,c
  6032   002724  6ADA               	clrf	fsr2h,c
  6033   002726  CFDF FFF6          	movff	indf2,tblptrl
  6034   00272A                     	if	1	;There is more than 1 active tblptr byte
  6035   00272A  0E10               	movlw	high __smallconst
  6036   00272C  6EF7               	movwf	tblptrh,c
  6037   00272E                     	endif
  6038   00272E                     	if	0	;tblptru may be non-zero
  6039   00272E                     	endif
  6040   00272E                     	if	0	;tblptru may be non-zero
  6041   00272E                     	endif
  6042   00272E  0008               	tblrd		*
  6043   002730  50F5               	movf	tablat,w,c
  6044   002732  0A73               	xorlw	115
  6045   002734  A4D8               	btfss	status,2,c
  6046   002736  EF9F  F013         	goto	u3291
  6047   00273A  EFA1  F013         	goto	u3290
  6048   00273E                     u3291:
  6049   00273E  EFA9  F013         	goto	l3111
  6050   002742                     u3290:
  6051   002742                     
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6054   002742  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6055   002744  6ED9               	movwf	fsr2l,c
  6056   002746  6ADA               	clrf	fsr2h,c
  6057   002748  2ADF               	incf	indf2,f,c
  6058   00274A                     l3109:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6062   00274A  0E01               	movlw	1
  6063   00274C  6E2F               	movwf	vfpfcnvrt@done^0,c
  6064                           
  6065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  6066   00274E  EFEB  F013         	goto	l3121
  6067   002752                     l3111:
  6068                           
  6069                           ; BSR set to: 0
  6070   002752  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6071   002754  6ED9               	movwf	fsr2l,c
  6072   002756  6ADA               	clrf	fsr2h,c
  6073   002758  CFDF FFF6          	movff	indf2,tblptrl
  6074   00275C                     	if	1	;There is more than 1 active tblptr byte
  6075   00275C  0E10               	movlw	high __smallconst
  6076   00275E  6EF7               	movwf	tblptrh,c
  6077   002760                     	endif
  6078   002760                     	if	0	;tblptru may be non-zero
  6079   002760                     	endif
  6080   002760                     	if	0	;tblptru may be non-zero
  6081   002760                     	endif
  6082   002760  0008               	tblrd		*
  6083   002762  50F5               	movf	tablat,w,c
  6084   002764  0A6C               	xorlw	108
  6085   002766  A4D8               	btfss	status,2,c
  6086   002768  EFB8  F013         	goto	u3301
  6087   00276C  EFBA  F013         	goto	u3300
  6088   002770                     u3301:
  6089   002770  EFEB  F013         	goto	l3121
  6090   002774                     u3300:
  6091   002774                     
  6092                           ; BSR set to: 0
  6093   002774  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6094   002776  6ED9               	movwf	fsr2l,c
  6095   002778  6ADA               	clrf	fsr2h,c
  6096   00277A  50DF               	movf	indf2,w,c
  6097   00277C  6E29               	movwf	??_vfpfcnvrt^0,c
  6098   00277E  0E01               	movlw	1
  6099   002780  2629               	addwf	??_vfpfcnvrt^0,f,c
  6100   002782  C029  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6101   002786                     	if	1	;There is more than 1 active tblptr byte
  6102   002786  0E10               	movlw	high __smallconst
  6103   002788  6EF7               	movwf	tblptrh,c
  6104   00278A                     	endif
  6105   00278A                     	if	0	;tblptru may be non-zero
  6106   00278A                     	endif
  6107   00278A                     	if	0	;tblptru may be non-zero
  6108   00278A                     	endif
  6109   00278A  0008               	tblrd		*
  6110   00278C  50F5               	movf	tablat,w,c
  6111   00278E  0A6C               	xorlw	108
  6112   002790  A4D8               	btfss	status,2,c
  6113   002792  EFCD  F013         	goto	u3311
  6114   002796  EFCF  F013         	goto	u3310
  6115   00279A                     u3311:
  6116   00279A  EFEB  F013         	goto	l3121
  6117   00279E                     u3310:
  6118   00279E                     
  6119                           ; BSR set to: 0
  6120   00279E  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6121   0027A0  6ED9               	movwf	fsr2l,c
  6122   0027A2  6ADA               	clrf	fsr2h,c
  6123   0027A4  50DF               	movf	indf2,w,c
  6124   0027A6  6E29               	movwf	??_vfpfcnvrt^0,c
  6125   0027A8  0E02               	movlw	2
  6126   0027AA  2629               	addwf	??_vfpfcnvrt^0,f,c
  6127   0027AC  C029  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6128   0027B0                     	if	1	;There is more than 1 active tblptr byte
  6129   0027B0  0E10               	movlw	high __smallconst
  6130   0027B2  6EF7               	movwf	tblptrh,c
  6131   0027B4                     	endif
  6132   0027B4                     	if	0	;tblptru may be non-zero
  6133   0027B4                     	endif
  6134   0027B4                     	if	0	;tblptru may be non-zero
  6135   0027B4                     	endif
  6136   0027B4  0008               	tblrd		*
  6137   0027B6  50F5               	movf	tablat,w,c
  6138   0027B8  0A73               	xorlw	115
  6139   0027BA  A4D8               	btfss	status,2,c
  6140   0027BC  EFE2  F013         	goto	u3321
  6141   0027C0  EFE4  F013         	goto	u3320
  6142   0027C4                     u3321:
  6143   0027C4  EFEB  F013         	goto	l3121
  6144   0027C8                     u3320:
  6145   0027C8                     
  6146                           ; BSR set to: 0
  6147                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  6148   0027C8  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6149   0027CA  6ED9               	movwf	fsr2l,c
  6150   0027CC  6ADA               	clrf	fsr2h,c
  6151   0027CE  0E03               	movlw	3
  6152   0027D0  26DF               	addwf	indf2,f,c
  6153   0027D2  EFA5  F013         	goto	l3109
  6154   0027D6                     l3121:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  6158   0027D6  502F               	movf	vfpfcnvrt@done^0,w,c
  6159   0027D8  B4D8               	btfsc	status,2,c
  6160   0027DA  EFF1  F013         	goto	u3331
  6161   0027DE  EFF3  F013         	goto	u3330
  6162   0027E2                     u3331:
  6163   0027E2  EF07  F014         	goto	l3127
  6164   0027E6                     u3330:
  6165   0027E6                     
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  6168   0027E6  C025  F00B         	movff	vfpfcnvrt@fp,stoa@fp
  6169   0027EA  C026  F00C         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6170   0027EE  5028               	movf	vfpfcnvrt@ap^0,w,c
  6171   0027F0  6ED9               	movwf	fsr2l,c
  6172   0027F2  6ADA               	clrf	fsr2h,c
  6173   0027F4  0E02               	movlw	2
  6174   0027F6  26DF               	addwf	indf2,f,c
  6175   0027F8  5CDF               	subwf	indf2,w,c
  6176   0027FA  6ED9               	movwf	fsr2l,c
  6177   0027FC  6ADA               	clrf	fsr2h,c
  6178   0027FE  CFDE F00D          	movff	postinc2,stoa@s
  6179   002802  CFDE F00E          	movff	postinc2,stoa@s+1
  6180   002806  EC12  F019         	call	_stoa	;wreg free
  6181   00280A  EF20  F014         	goto	l988
  6182   00280E                     l3127:
  6183                           
  6184                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6185   00280E  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6186   002810  6ED9               	movwf	fsr2l,c
  6187   002812  6ADA               	clrf	fsr2h,c
  6188   002814  2ADF               	incf	indf2,f,c
  6189   002816  EF20  F014         	goto	l988
  6190   00281A                     l3131:
  6191                           
  6192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6193   00281A  5027               	movf	vfpfcnvrt@fmt^0,w,c
  6194   00281C  6ED9               	movwf	fsr2l,c
  6195   00281E  6ADA               	clrf	fsr2h,c
  6196   002820  CFDF FFF6          	movff	indf2,tblptrl
  6197   002824                     	if	1	;There is more than 1 active tblptr byte
  6198   002824  0E10               	movlw	high __smallconst
  6199   002826  6EF7               	movwf	tblptrh,c
  6200   002828                     	endif
  6201   002828                     	if	0	;tblptru may be non-zero
  6202   002828                     	endif
  6203   002828                     	if	0	;tblptru may be non-zero
  6204   002828                     	endif
  6205   002828  0008               	tblrd		*
  6206   00282A  50F5               	movf	tablat,w,c
  6207   00282C  6E02               	movwf	fputc@c^0,c
  6208   00282E  6A03               	clrf	(fputc@c+1)^0,c
  6209   002830  C025  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6210   002834  C026  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6211   002838  EC35  F01C         	call	_fputc	;wreg free
  6212   00283C  EF07  F014         	goto	l3127
  6213   002840                     l988:
  6214   002840  0012               	return		;funcret
  6215   002842                     __end_of_vfpfcnvrt:
  6216                           	callstack 0
  6217                           
  6218 ;; *************** function _stoa *****************
  6219 ;; Defined at:
  6220 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  6223 ;;		 -> NULL(0), sprintf@f(12), 
  6224 ;;  s               2   12[COMRAM] PTR unsigned char 
  6225 ;;		 -> ?_printf(2), ?_sprintf(2), STR_11(1), STR_10(6), 
  6226 ;;		 -> STR_9(5), STR_8(4), STR_7(4), STR_6(4), 
  6227 ;;		 -> STR_5(5), STR_4(5), 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  l               2   22[COMRAM] int 
  6230 ;;  cp              2   20[COMRAM] PTR unsigned char 
  6231 ;;		 -> ?_printf(2), STR_14(7), ?_sprintf(2), STR_11(1), 
  6232 ;;		 -> STR_10(6), STR_9(5), STR_8(4), STR_7(4), 
  6233 ;;		 -> STR_6(4), STR_5(5), STR_4(5), 
  6234 ;;  w               2   18[COMRAM] int 
  6235 ;;  p               2   16[COMRAM] int 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;Total ram usage:       14 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 2
  6252 ;; This function calls:
  6253 ;;		_fputc
  6254 ;; This function is called by:
  6255 ;;		_vfpfcnvrt
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text20
  6260   003224                     __ptext20:
  6261                           	callstack 0
  6262   003224                     _stoa:
  6263                           	callstack 24
  6264   003224                     
  6265                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  6266   003224  C00D  F015         	movff	stoa@s,stoa@cp
  6267   003228  C00E  F016         	movff	stoa@s+1,stoa@cp+1
  6268                           
  6269                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  6270   00322C  5015               	movf	stoa@cp^0,w,c
  6271   00322E  1016               	iorwf	(stoa@cp+1)^0,w,c
  6272   003230  A4D8               	btfss	status,2,c
  6273   003232  EF1D  F019         	goto	u2761
  6274   003236  EF1F  F019         	goto	u2760
  6275   00323A                     u2761:
  6276   00323A  EF25  F019         	goto	l2785
  6277   00323E                     u2760:
  6278   00323E                     
  6279                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  6280   00323E  0E63               	movlw	low STR_14
  6281   003240  6E15               	movwf	stoa@cp^0,c
  6282   003242  5015               	movf	stoa@cp^0,w,c
  6283   003244  A4D8               	btfss	status,2,c
  6284   003246  0E10               	movlw	high __smallconst
  6285   003248  6E16               	movwf	(stoa@cp+1)^0,c
  6286   00324A                     l2785:
  6287                           
  6288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  6289   00324A  0E00               	movlw	0
  6290   00324C  6E18               	movwf	(stoa@l+1)^0,c
  6291   00324E  0E00               	movlw	0
  6292   003250  6E17               	movwf	stoa@l^0,c
  6293   003252  EF2D  F019         	goto	l2789
  6294   003256                     l2787:
  6295   003256  4A17               	infsnz	stoa@l^0,f,c
  6296   003258  2A18               	incf	(stoa@l+1)^0,f,c
  6297   00325A                     l2789:
  6298   00325A  5017               	movf	stoa@l^0,w,c
  6299   00325C  2415               	addwf	stoa@cp^0,w,c
  6300   00325E  6E0F               	movwf	??_stoa^0,c
  6301   003260  5018               	movf	(stoa@l+1)^0,w,c
  6302   003262  2016               	addwfc	(stoa@cp+1)^0,w,c
  6303   003264  6E10               	movwf	(??_stoa+1)^0,c
  6304   003266  C00F  FFF6         	movff	??_stoa,tblptrl
  6305   00326A  C010  FFF7         	movff	??_stoa+1,tblptrh
  6306   00326E  0E00               	movlw	low (__smallconst shr (0+16))
  6307   003270  6EF8               	movwf	tblptru,c
  6308   003272  0E0F               	movlw	(high __ramtop+-1)
  6309   003274  64F7               	cpfsgt	tblptrh,c
  6310   003276  D003               	bra	u2777
  6311   003278  0008               	tblrd		*
  6312   00327A  50F5               	movf	tablat,w,c
  6313   00327C  D005               	bra	u2770
  6314   00327E                     u2777:
  6315   00327E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6316   003282  CFF7 FFE2          	movff	tblptrh,fsr1h
  6317   003286  50E7               	movf	indf1,w,c
  6318   003288                     u2770:
  6319   003288  0900               	iorlw	0
  6320   00328A  A4D8               	btfss	status,2,c
  6321   00328C  EF4A  F019         	goto	u2781
  6322   003290  EF4C  F019         	goto	u2780
  6323   003294                     u2781:
  6324   003294  EF2B  F019         	goto	l2787
  6325   003298                     u2780:
  6326   003298                     
  6327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 965:     p = l;
  6328   003298  C017  F011         	movff	stoa@l,stoa@p
  6329   00329C  C018  F012         	movff	stoa@l+1,stoa@p+1
  6330                           
  6331                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  6332   0032A0  C0C9  F013         	movff	_width,stoa@w
  6333   0032A4  C0CA  F014         	movff	_width+1,stoa@w+1
  6334                           
  6335                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  6336   0032A8  0100               	movlb	0	; () banked
  6337   0032AA  B1CD               	btfsc	_flags& (0+255),0,b
  6338   0032AC  EF5A  F019         	goto	u2791
  6339   0032B0  EF5C  F019         	goto	u2790
  6340   0032B4                     u2791:
  6341   0032B4  EF98  F019         	goto	l2803
  6342   0032B8                     u2790:
  6343   0032B8  EF6A  F019         	goto	l2797
  6344   0032BC                     l2793:
  6345                           
  6346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  6347   0032BC  0E00               	movlw	0
  6348   0032BE  6E03               	movwf	(fputc@c+1)^0,c
  6349   0032C0  0E20               	movlw	32
  6350   0032C2  6E02               	movwf	fputc@c^0,c
  6351   0032C4  C00B  F004         	movff	stoa@fp,fputc@fp
  6352   0032C8  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  6353   0032CC  EC35  F01C         	call	_fputc	;wreg free
  6354   0032D0                     
  6355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  6356   0032D0  4A17               	infsnz	stoa@l^0,f,c
  6357   0032D2  2A18               	incf	(stoa@l+1)^0,f,c
  6358   0032D4                     l2797:
  6359                           
  6360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  6361   0032D4  5013               	movf	stoa@w^0,w,c
  6362   0032D6  5C17               	subwf	stoa@l^0,w,c
  6363   0032D8  5018               	movf	(stoa@l+1)^0,w,c
  6364   0032DA  0A80               	xorlw	128
  6365   0032DC  6E0F               	movwf	??_stoa^0,c
  6366   0032DE  5014               	movf	(stoa@w+1)^0,w,c
  6367   0032E0  0A80               	xorlw	128
  6368   0032E2  580F               	subwfb	??_stoa^0,w,c
  6369   0032E4  A0D8               	btfss	status,0,c
  6370   0032E6  EF77  F019         	goto	u2801
  6371   0032EA  EF79  F019         	goto	u2800
  6372   0032EE                     u2801:
  6373   0032EE  EF5E  F019         	goto	l2793
  6374   0032F2                     u2800:
  6375   0032F2  EF98  F019         	goto	l2803
  6376   0032F6                     l2799:
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  6379   0032F6  C015  FFF6         	movff	stoa@cp,tblptrl
  6380   0032FA  C016  FFF7         	movff	stoa@cp+1,tblptrh
  6381   0032FE  0E00               	movlw	low (__smallconst shr (0+16))
  6382   003300  6EF8               	movwf	tblptru,c
  6383   003302  0E0F               	movlw	(high __ramtop+-1)
  6384   003304  64F7               	cpfsgt	tblptrh,c
  6385   003306  D003               	bra	u2817
  6386   003308  0008               	tblrd		*
  6387   00330A  50F5               	movf	tablat,w,c
  6388   00330C  D005               	bra	u2810
  6389   00330E                     u2817:
  6390   00330E  CFF6 FFE1          	movff	tblptrl,fsr1l
  6391   003312  CFF7 FFE2          	movff	tblptrh,fsr1h
  6392   003316  50E7               	movf	indf1,w,c
  6393   003318                     u2810:
  6394   003318  6E0F               	movwf	??_stoa^0,c
  6395   00331A  500F               	movf	??_stoa^0,w,c
  6396   00331C  6E02               	movwf	fputc@c^0,c
  6397   00331E  6A03               	clrf	(fputc@c+1)^0,c
  6398   003320  C00B  F004         	movff	stoa@fp,fputc@fp
  6399   003324  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  6400   003328  EC35  F01C         	call	_fputc	;wreg free
  6401   00332C                     
  6402                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  6403   00332C  4A15               	infsnz	stoa@cp^0,f,c
  6404   00332E  2A16               	incf	(stoa@cp+1)^0,f,c
  6405   003330                     l2803:
  6406                           
  6407                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  6408   003330  0611               	decf	stoa@p^0,f,c
  6409   003332  A0D8               	btfss	status,0,c
  6410   003334  0612               	decf	(stoa@p+1)^0,f,c
  6411   003336  2811               	incf	stoa@p^0,w,c
  6412   003338  E106               	bnz	u2821
  6413   00333A  2812               	incf	(stoa@p+1)^0,w,c
  6414   00333C  A4D8               	btfss	status,2,c
  6415   00333E  EFA3  F019         	goto	u2821
  6416   003342  EFA5  F019         	goto	u2820
  6417   003346                     u2821:
  6418   003346  EF7B  F019         	goto	l2799
  6419   00334A                     u2820:
  6420   00334A                     
  6421                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  6422   00334A  0100               	movlb	0	; () banked
  6423   00334C  A1CD               	btfss	_flags& (0+255),0,b
  6424   00334E  EFAB  F019         	goto	u2831
  6425   003352  EFAD  F019         	goto	u2830
  6426   003356                     u2831:
  6427   003356  EFCA  F019         	goto	l965
  6428   00335A                     u2830:
  6429   00335A  EFBB  F019         	goto	l2811
  6430   00335E                     l2807:
  6431                           
  6432                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  6433   00335E  0E00               	movlw	0
  6434   003360  6E03               	movwf	(fputc@c+1)^0,c
  6435   003362  0E20               	movlw	32
  6436   003364  6E02               	movwf	fputc@c^0,c
  6437   003366  C00B  F004         	movff	stoa@fp,fputc@fp
  6438   00336A  C00C  F005         	movff	stoa@fp+1,fputc@fp+1
  6439   00336E  EC35  F01C         	call	_fputc	;wreg free
  6440   003372                     
  6441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  6442   003372  4A17               	infsnz	stoa@l^0,f,c
  6443   003374  2A18               	incf	(stoa@l+1)^0,f,c
  6444   003376                     l2811:
  6445                           
  6446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  6447   003376  5013               	movf	stoa@w^0,w,c
  6448   003378  5C17               	subwf	stoa@l^0,w,c
  6449   00337A  5018               	movf	(stoa@l+1)^0,w,c
  6450   00337C  0A80               	xorlw	128
  6451   00337E  6E0F               	movwf	??_stoa^0,c
  6452   003380  5014               	movf	(stoa@w+1)^0,w,c
  6453   003382  0A80               	xorlw	128
  6454   003384  580F               	subwfb	??_stoa^0,w,c
  6455   003386  A0D8               	btfss	status,0,c
  6456   003388  EFC8  F019         	goto	u2841
  6457   00338C  EFCA  F019         	goto	u2840
  6458   003390                     u2841:
  6459   003390  EFAF  F019         	goto	l2807
  6460   003394                     u2840:
  6461   003394                     l965:
  6462   003394  0012               	return		;funcret
  6463   003396                     __end_of_stoa:
  6464                           	callstack 0
  6465                           
  6466 ;; *************** function _read_prec_or_width *****************
  6467 ;; Defined at:
  6468 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  6471 ;;		 -> vfprintf@cfmt(1), 
  6472 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  6473 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  c               1    8[COMRAM] unsigned char 
  6476 ;;  n               2    9[COMRAM] int 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  2    6[COMRAM] int 
  6479 ;; Registers used:
  6480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6487 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;Total ram usage:        5 bytes
  6491 ;; Hardware stack levels used: 1
  6492 ;; Hardware stack levels required when called: 1
  6493 ;; This function calls:
  6494 ;;		___wmul
  6495 ;; This function is called by:
  6496 ;;		_vfpfcnvrt
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text21
  6501   003A86                     __ptext21:
  6502                           	callstack 0
  6503   003A86                     _read_prec_or_width:
  6504                           	callstack 25
  6505   003A86                     
  6506                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6507   003A86  0E00               	movlw	0
  6508   003A88  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6509   003A8A  0E00               	movlw	0
  6510   003A8C  6E0A               	movwf	read_prec_or_width@n^0,c
  6511   003A8E                     
  6512                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6513   003A8E  5007               	movf	read_prec_or_width@fmt^0,w,c
  6514   003A90  6ED9               	movwf	fsr2l,c
  6515   003A92  6ADA               	clrf	fsr2h,c
  6516   003A94  CFDF FFF6          	movff	indf2,tblptrl
  6517   003A98                     	if	1	;There is more than 1 active tblptr byte
  6518   003A98  0E10               	movlw	high __smallconst
  6519   003A9A  6EF7               	movwf	tblptrh,c
  6520   003A9C                     	endif
  6521   003A9C                     	if	0	;tblptru may be non-zero
  6522   003A9C                     	endif
  6523   003A9C                     	if	0	;tblptru may be non-zero
  6524   003A9C                     	endif
  6525   003A9C  0008               	tblrd		*
  6526   003A9E  50F5               	movf	tablat,w,c
  6527   003AA0  0A2A               	xorlw	42
  6528   003AA2  A4D8               	btfss	status,2,c
  6529   003AA4  EF56  F01D         	goto	u2851
  6530   003AA8  EF58  F01D         	goto	u2850
  6531   003AAC                     u2851:
  6532   003AAC  EF7E  F01D         	goto	l2825
  6533   003AB0                     u2850:
  6534   003AB0                     
  6535                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6536   003AB0  5007               	movf	read_prec_or_width@fmt^0,w,c
  6537   003AB2  6ED9               	movwf	fsr2l,c
  6538   003AB4  6ADA               	clrf	fsr2h,c
  6539   003AB6  2ADF               	incf	indf2,f,c
  6540   003AB8                     
  6541                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6542   003AB8  5008               	movf	read_prec_or_width@ap^0,w,c
  6543   003ABA  6ED9               	movwf	fsr2l,c
  6544   003ABC  6ADA               	clrf	fsr2h,c
  6545   003ABE  0E02               	movlw	2
  6546   003AC0  26DF               	addwf	indf2,f,c
  6547   003AC2  5CDF               	subwf	indf2,w,c
  6548   003AC4  6ED9               	movwf	fsr2l,c
  6549   003AC6  6ADA               	clrf	fsr2h,c
  6550   003AC8  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  6551   003ACC  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  6552                           
  6553                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6554   003AD0  EF91  F01D         	goto	l969
  6555   003AD4                     l2821:
  6556                           
  6557                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6558   003AD4  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  6559   003AD8  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6560   003ADC  0E00               	movlw	0
  6561   003ADE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6562   003AE0  0E0A               	movlw	10
  6563   003AE2  6E03               	movwf	___wmul@multiplicand^0,c
  6564   003AE4  EC08  F01F         	call	___wmul	;wreg free
  6565   003AE8  5009               	movf	read_prec_or_width@c^0,w,c
  6566   003AEA  2401               	addwf	?___wmul^0,w,c
  6567   003AEC  6E0A               	movwf	read_prec_or_width@n^0,c
  6568   003AEE  0E00               	movlw	0
  6569   003AF0  2002               	addwfc	(?___wmul+1)^0,w,c
  6570   003AF2  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6571   003AF4                     
  6572                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6573   003AF4  5007               	movf	read_prec_or_width@fmt^0,w,c
  6574   003AF6  6ED9               	movwf	fsr2l,c
  6575   003AF8  6ADA               	clrf	fsr2h,c
  6576   003AFA  2ADF               	incf	indf2,f,c
  6577   003AFC                     l2825:
  6578                           
  6579                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6580   003AFC  5007               	movf	read_prec_or_width@fmt^0,w,c
  6581   003AFE  6ED9               	movwf	fsr2l,c
  6582   003B00  6ADA               	clrf	fsr2h,c
  6583   003B02  CFDF FFF6          	movff	indf2,tblptrl
  6584   003B06                     	if	1	;There is more than 1 active tblptr byte
  6585   003B06  0E10               	movlw	high __smallconst
  6586   003B08  6EF7               	movwf	tblptrh,c
  6587   003B0A                     	endif
  6588   003B0A                     	if	0	;tblptru may be non-zero
  6589   003B0A                     	endif
  6590   003B0A                     	if	0	;tblptru may be non-zero
  6591   003B0A                     	endif
  6592   003B0A  0008               	tblrd		*
  6593   003B0C  50F5               	movf	tablat,w,c
  6594   003B0E  0FD0               	addlw	208
  6595   003B10  6E09               	movwf	read_prec_or_width@c^0,c
  6596   003B12  0E09               	movlw	9
  6597   003B14  6409               	cpfsgt	read_prec_or_width@c^0,c
  6598   003B16  EF8F  F01D         	goto	u2861
  6599   003B1A  EF91  F01D         	goto	u2860
  6600   003B1E                     u2861:
  6601   003B1E  EF6A  F01D         	goto	l2821
  6602   003B22                     u2860:
  6603   003B22                     l969:
  6604                           
  6605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6606   003B22  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  6607   003B26  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6608   003B2A  0012               	return		;funcret
  6609   003B2C                     __end_of_read_prec_or_width:
  6610                           	callstack 0
  6611                           
  6612 ;; *************** function ___wmul *****************
  6613 ;; Defined at:
  6614 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  multiplier      2    0[COMRAM] unsigned int 
  6617 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  product         2    4[COMRAM] unsigned int 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  2    0[COMRAM] unsigned int 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, prodl, prodh
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;Total ram usage:        6 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_read_prec_or_width
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           	psect	text22
  6643   003E10                     __ptext22:
  6644                           	callstack 0
  6645   003E10                     ___wmul:
  6646                           	callstack 25
  6647   003E10  5001               	movf	___wmul@multiplier^0,w,c
  6648   003E12  0203               	mulwf	___wmul@multiplicand^0,c
  6649   003E14  CFF3 F005          	movff	prodl,___wmul@product
  6650   003E18  CFF4 F006          	movff	prodh,___wmul@product+1
  6651   003E1C  5001               	movf	___wmul@multiplier^0,w,c
  6652   003E1E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6653   003E20  50F3               	movf	243,w,c
  6654   003E22  2606               	addwf	(___wmul@product+1)^0,f,c
  6655   003E24  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6656   003E26  0203               	mulwf	___wmul@multiplicand^0,c
  6657   003E28  50F3               	movf	243,w,c
  6658   003E2A  2606               	addwf	(___wmul@product+1)^0,f,c
  6659   003E2C  C005  F001         	movff	___wmul@product,?___wmul
  6660   003E30  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6661   003E34  0012               	return		;funcret
  6662   003E36                     __end_of___wmul:
  6663                           	callstack 0
  6664                           
  6665 ;; *************** function _dtoa *****************
  6666 ;; Defined at:
  6667 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  6670 ;;		 -> NULL(0), sprintf@f(12), 
  6671 ;;  d               2   26[COMRAM] int 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  i               2   34[COMRAM] int 
  6674 ;;  w               2   30[COMRAM] int 
  6675 ;;  s               1   33[COMRAM] unsigned char 
  6676 ;;  p               1   32[COMRAM] _Bool 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:       12 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 4
  6693 ;; This function calls:
  6694 ;;		___awdiv
  6695 ;;		___awmod
  6696 ;;		_abs
  6697 ;;		_pad
  6698 ;; This function is called by:
  6699 ;;		_vfpfcnvrt
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text23
  6704   003396                     __ptext23:
  6705                           	callstack 0
  6706   003396                     _dtoa:
  6707                           	callstack 22
  6708   003396                     
  6709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6710   003396  0E01               	movlw	1
  6711   003398  6E21               	movwf	dtoa@p^0,c
  6712   00339A                     
  6713                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6714   00339A  BE1C               	btfsc	(dtoa@d+1)^0,7,c
  6715   00339C  EFD2  F019         	goto	u2681
  6716   0033A0  EFD5  F019         	goto	u2680
  6717   0033A4                     u2681:
  6718   0033A4  0E01               	movlw	1
  6719   0033A6  EFD6  F019         	goto	u2690
  6720   0033AA                     u2680:
  6721   0033AA  0E00               	movlw	0
  6722   0033AC                     u2690:
  6723   0033AC  6E22               	movwf	dtoa@s^0,c
  6724   0033AE                     
  6725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6726   0033AE  C0C9  F01F         	movff	_width,dtoa@w
  6727   0033B2  C0CA  F020         	movff	_width+1,dtoa@w+1
  6728   0033B6                     
  6729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  6730   0033B6  5022               	movf	dtoa@s^0,w,c
  6731   0033B8  B4D8               	btfsc	status,2,c
  6732   0033BA  EFE1  F019         	goto	u2701
  6733   0033BE  EFE3  F019         	goto	u2700
  6734   0033C2                     u2701:
  6735   0033C2  EFFA  F019         	goto	l935
  6736   0033C6                     u2700:
  6737   0033C6                     
  6738                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  6739   0033C6  061F               	decf	dtoa@w^0,f,c
  6740   0033C8  A0D8               	btfss	status,0,c
  6741   0033CA  0620               	decf	(dtoa@w+1)^0,f,c
  6742   0033CC                     
  6743                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6744   0033CC  5022               	movf	dtoa@s^0,w,c
  6745   0033CE  A4D8               	btfss	status,2,c
  6746   0033D0  EFEC  F019         	goto	u2711
  6747   0033D4  EFEE  F019         	goto	u2710
  6748   0033D8                     u2711:
  6749   0033D8  EFF4  F019         	goto	l2749
  6750   0033DC                     u2710:
  6751   0033DC  0E00               	movlw	0
  6752   0033DE  6E1E               	movwf	(_dtoa$2363+1)^0,c
  6753   0033E0  0E2B               	movlw	43
  6754   0033E2  6E1D               	movwf	_dtoa$2363^0,c
  6755   0033E4  EFF8  F019         	goto	l2751
  6756   0033E8                     l2749:
  6757   0033E8  0E00               	movlw	0
  6758   0033EA  6E1E               	movwf	(_dtoa$2363+1)^0,c
  6759   0033EC  0E2D               	movlw	45
  6760   0033EE  6E1D               	movwf	_dtoa$2363^0,c
  6761   0033F0                     l2751:
  6762   0033F0  C01D  F022         	movff	_dtoa$2363,dtoa@s
  6763   0033F4                     l935:
  6764                           
  6765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6766   0033F4  0E00               	movlw	0
  6767   0033F6  6E24               	movwf	(dtoa@i+1)^0,c
  6768   0033F8  0E1F               	movlw	31
  6769   0033FA  6E23               	movwf	dtoa@i^0,c
  6770   0033FC                     
  6771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6772   0033FC  0E00               	movlw	0
  6773   0033FE  0100               	movlb	0	; () banked
  6774   003400  6FED               	movwf	(_dbuf+31)& (0+255),b
  6775                           
  6776                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6777   003402  EF30  F01A         	goto	l2765
  6778   003406                     l2755:
  6779                           
  6780                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  6781   003406  0623               	decf	dtoa@i^0,f,c
  6782   003408  A0D8               	btfss	status,0,c
  6783   00340A  0624               	decf	(dtoa@i+1)^0,f,c
  6784   00340C                     
  6785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6786   00340C  5023               	movf	dtoa@i^0,w,c
  6787   00340E  0FCE               	addlw	low _dbuf
  6788   003410  6ED9               	movwf	fsr2l,c
  6789   003412  6ADA               	clrf	fsr2h,c
  6790   003414  C01B  F001         	movff	dtoa@d,___awmod@dividend
  6791   003418  C01C  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6792   00341C  0E00               	movlw	0
  6793   00341E  6E04               	movwf	(___awmod@divisor+1)^0,c
  6794   003420  0E0A               	movlw	10
  6795   003422  6E03               	movwf	___awmod@divisor^0,c
  6796   003424  ECEB  F01C         	call	___awmod	;wreg free
  6797   003428  C001  F007         	movff	?___awmod,abs@a
  6798   00342C  C002  F008         	movff	?___awmod+1,abs@a+1
  6799   003430  ECEE  F01E         	call	_abs	;wreg free
  6800   003434  5007               	movf	?_abs^0,w,c
  6801   003436  0F30               	addlw	48
  6802   003438  6EDF               	movwf	indf2,c
  6803   00343A                     
  6804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  6805   00343A  0E00               	movlw	0
  6806   00343C  6E21               	movwf	dtoa@p^0,c
  6807   00343E                     
  6808                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  6809   00343E  061F               	decf	dtoa@w^0,f,c
  6810   003440  A0D8               	btfss	status,0,c
  6811   003442  0620               	decf	(dtoa@w+1)^0,f,c
  6812   003444                     
  6813                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6814   003444  C01B  F001         	movff	dtoa@d,___awdiv@dividend
  6815   003448  C01C  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6816   00344C  0E00               	movlw	0
  6817   00344E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6818   003450  0E0A               	movlw	10
  6819   003452  6E03               	movwf	___awdiv@divisor^0,c
  6820   003454  ECD3  F01B         	call	___awdiv	;wreg free
  6821   003458  C001  F01B         	movff	?___awdiv,dtoa@d
  6822   00345C  C002  F01C         	movff	?___awdiv+1,dtoa@d+1
  6823   003460                     l2765:
  6824                           
  6825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6826   003460  BE24               	btfsc	(dtoa@i+1)^0,7,c
  6827   003462  EF3B  F01A         	goto	u2721
  6828   003466  5024               	movf	(dtoa@i+1)^0,w,c
  6829   003468  E108               	bnz	u2720
  6830   00346A  0423               	decf	dtoa@i^0,w,c
  6831   00346C  A0D8               	btfss	status,0,c
  6832   00346E  EF3B  F01A         	goto	u2721
  6833   003472  EF3D  F01A         	goto	u2720
  6834   003476                     u2721:
  6835   003476  EF4E  F01A         	goto	l2771
  6836   00347A                     u2720:
  6837   00347A  501B               	movf	dtoa@d^0,w,c
  6838   00347C  101C               	iorwf	(dtoa@d+1)^0,w,c
  6839   00347E  A4D8               	btfss	status,2,c
  6840   003480  EF44  F01A         	goto	u2731
  6841   003484  EF46  F01A         	goto	u2730
  6842   003488                     u2731:
  6843   003488  EF03  F01A         	goto	l2755
  6844   00348C                     u2730:
  6845   00348C  5021               	movf	dtoa@p^0,w,c
  6846   00348E  A4D8               	btfss	status,2,c
  6847   003490  EF4C  F01A         	goto	u2741
  6848   003494  EF4E  F01A         	goto	u2740
  6849   003498                     u2741:
  6850   003498  EF03  F01A         	goto	l2755
  6851   00349C                     u2740:
  6852   00349C                     l2771:
  6853                           
  6854                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6855   00349C  5022               	movf	dtoa@s^0,w,c
  6856   00349E  B4D8               	btfsc	status,2,c
  6857   0034A0  EF54  F01A         	goto	u2751
  6858   0034A4  EF56  F01A         	goto	u2750
  6859   0034A8                     u2751:
  6860   0034A8  EF5F  F01A         	goto	l2777
  6861   0034AC                     u2750:
  6862   0034AC                     
  6863                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  6864   0034AC  0623               	decf	dtoa@i^0,f,c
  6865   0034AE  A0D8               	btfss	status,0,c
  6866   0034B0  0624               	decf	(dtoa@i+1)^0,f,c
  6867   0034B2                     
  6868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6869   0034B2  5023               	movf	dtoa@i^0,w,c
  6870   0034B4  0FCE               	addlw	low _dbuf
  6871   0034B6  6ED9               	movwf	fsr2l,c
  6872   0034B8  6ADA               	clrf	fsr2h,c
  6873   0034BA  C022  FFDF         	movff	dtoa@s,indf2
  6874   0034BE                     l2777:
  6875                           
  6876                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6877   0034BE  C019  F011         	movff	dtoa@fp,pad@fp
  6878   0034C2  C01A  F012         	movff	dtoa@fp+1,pad@fp+1
  6879   0034C6  5023               	movf	dtoa@i^0,w,c
  6880   0034C8  0FCE               	addlw	low _dbuf
  6881   0034CA  6E13               	movwf	pad@buf^0,c
  6882   0034CC  C01F  F014         	movff	dtoa@w,pad@p
  6883   0034D0  C020  F015         	movff	dtoa@w+1,pad@p+1
  6884   0034D4  EC96  F01D         	call	_pad	;wreg free
  6885   0034D8  0012               	return		;funcret
  6886   0034DA                     __end_of_dtoa:
  6887                           	callstack 0
  6888                           
  6889 ;; *************** function _pad *****************
  6890 ;; Defined at:
  6891 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6894 ;;		 -> NULL(0), sprintf@f(12), 
  6895 ;;  buf             1   18[COMRAM] PTR unsigned char 
  6896 ;;		 -> dbuf(32), 
  6897 ;;  p               2   19[COMRAM] int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  i               2   22[COMRAM] int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6909 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;Total ram usage:        8 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 3
  6916 ;; This function calls:
  6917 ;;		_fputc
  6918 ;;		_fputs
  6919 ;; This function is called by:
  6920 ;;		_dtoa
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text24
  6925   003B2C                     __ptext24:
  6926                           	callstack 0
  6927   003B2C                     _pad:
  6928                           	callstack 22
  6929   003B2C                     
  6930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6931   003B2C  0100               	movlb	0	; () banked
  6932   003B2E  A1CD               	btfss	_flags& (0+255),0,b
  6933   003B30  EF9C  F01D         	goto	u2241
  6934   003B34  EF9E  F01D         	goto	u2240
  6935   003B38                     u2241:
  6936   003B38  EFA6  F01D         	goto	l2517
  6937   003B3C                     u2240:
  6938   003B3C                     
  6939                           ; BSR set to: 0
  6940                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6941   003B3C  C013  F00B         	movff	pad@buf,fputs@s
  6942   003B40  C011  F00C         	movff	pad@fp,fputs@fp
  6943   003B44  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6944   003B48  EC27  F01E         	call	_fputs	;wreg free
  6945   003B4C                     l2517:
  6946                           
  6947                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6948   003B4C  BE15               	btfsc	(pad@p+1)^0,7,c
  6949   003B4E  EFAD  F01D         	goto	u2250
  6950   003B52  EFAB  F01D         	goto	u2251
  6951   003B56                     u2251:
  6952   003B56  EFB1  F01D         	goto	l927
  6953   003B5A                     u2250:
  6954   003B5A                     
  6955                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6956   003B5A  0E00               	movlw	0
  6957   003B5C  6E15               	movwf	(pad@p+1)^0,c
  6958   003B5E  0E00               	movlw	0
  6959   003B60  6E14               	movwf	pad@p^0,c
  6960   003B62                     l927:
  6961                           
  6962                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6963   003B62  0E00               	movlw	0
  6964   003B64  6E18               	movwf	(pad@i+1)^0,c
  6965   003B66  0E00               	movlw	0
  6966   003B68  6E17               	movwf	pad@i^0,c
  6967                           
  6968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6969   003B6A  EFC3  F01D         	goto	l2525
  6970   003B6E                     l2521:
  6971                           
  6972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6973   003B6E  0E00               	movlw	0
  6974   003B70  6E03               	movwf	(fputc@c+1)^0,c
  6975   003B72  0E20               	movlw	32
  6976   003B74  6E02               	movwf	fputc@c^0,c
  6977   003B76  C011  F004         	movff	pad@fp,fputc@fp
  6978   003B7A  C012  F005         	movff	pad@fp+1,fputc@fp+1
  6979   003B7E  EC35  F01C         	call	_fputc	;wreg free
  6980   003B82                     
  6981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6982   003B82  4A17               	infsnz	pad@i^0,f,c
  6983   003B84  2A18               	incf	(pad@i+1)^0,f,c
  6984   003B86                     l2525:
  6985                           
  6986                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6987   003B86  5014               	movf	pad@p^0,w,c
  6988   003B88  5C17               	subwf	pad@i^0,w,c
  6989   003B8A  5018               	movf	(pad@i+1)^0,w,c
  6990   003B8C  0A80               	xorlw	128
  6991   003B8E  6E16               	movwf	??_pad^0,c
  6992   003B90  5015               	movf	(pad@p+1)^0,w,c
  6993   003B92  0A80               	xorlw	128
  6994   003B94  5816               	subwfb	??_pad^0,w,c
  6995   003B96  A0D8               	btfss	status,0,c
  6996   003B98  EFD0  F01D         	goto	u2261
  6997   003B9C  EFD2  F01D         	goto	u2260
  6998   003BA0                     u2261:
  6999   003BA0  EFB7  F01D         	goto	l2521
  7000   003BA4                     u2260:
  7001   003BA4                     
  7002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7003   003BA4  0100               	movlb	0	; () banked
  7004   003BA6  B1CD               	btfsc	_flags& (0+255),0,b
  7005   003BA8  EFD8  F01D         	goto	u2271
  7006   003BAC  EFDA  F01D         	goto	u2270
  7007   003BB0                     u2271:
  7008   003BB0  EFE2  F01D         	goto	l932
  7009   003BB4                     u2270:
  7010   003BB4                     
  7011                           ; BSR set to: 0
  7012                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7013   003BB4  C013  F00B         	movff	pad@buf,fputs@s
  7014   003BB8  C011  F00C         	movff	pad@fp,fputs@fp
  7015   003BBC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7016   003BC0  EC27  F01E         	call	_fputs	;wreg free
  7017   003BC4                     l932:
  7018   003BC4  0012               	return		;funcret
  7019   003BC6                     __end_of_pad:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _fputs *****************
  7023 ;; Defined at:
  7024 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  s               1   10[COMRAM] PTR const unsigned char 
  7027 ;;		 -> dbuf(32), 
  7028 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7029 ;;		 -> NULL(0), sprintf@f(12), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  i               2   14[COMRAM] int 
  7032 ;;  c               1   13[COMRAM] unsigned char 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  2   10[COMRAM] int 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7042 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;Total ram usage:        6 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 2
  7049 ;; This function calls:
  7050 ;;		_fputc
  7051 ;; This function is called by:
  7052 ;;		_pad
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text25
  7057   003C4E                     __ptext25:
  7058                           	callstack 0
  7059   003C4E                     _fputs:
  7060                           	callstack 22
  7061   003C4E  0E00               	movlw	0
  7062   003C50  6E10               	movwf	(fputs@i+1)^0,c
  7063   003C52  0E00               	movlw	0
  7064   003C54  6E0F               	movwf	fputs@i^0,c
  7065   003C56  EF38  F01E         	goto	l2425
  7066   003C5A                     l2421:
  7067   003C5A  C00E  F002         	movff	fputs@c,fputc@c
  7068   003C5E  6A03               	clrf	(fputc@c+1)^0,c
  7069   003C60  C00C  F004         	movff	fputs@fp,fputc@fp
  7070   003C64  C00D  F005         	movff	fputs@fp+1,fputc@fp+1
  7071   003C68  EC35  F01C         	call	_fputc	;wreg free
  7072   003C6C  4A0F               	infsnz	fputs@i^0,f,c
  7073   003C6E  2A10               	incf	(fputs@i+1)^0,f,c
  7074   003C70                     l2425:
  7075   003C70  500B               	movf	fputs@s^0,w,c
  7076   003C72  240F               	addwf	fputs@i^0,w,c
  7077   003C74  6ED9               	movwf	fsr2l,c
  7078   003C76  6ADA               	clrf	fsr2h,c
  7079   003C78  50DF               	movf	indf2,w,c
  7080   003C7A  6E0E               	movwf	fputs@c^0,c
  7081   003C7C  500E               	movf	fputs@c^0,w,c
  7082   003C7E  A4D8               	btfss	status,2,c
  7083   003C80  EF44  F01E         	goto	u2111
  7084   003C84  EF46  F01E         	goto	u2110
  7085   003C88                     u2111:
  7086   003C88  EF2D  F01E         	goto	l2421
  7087   003C8C                     u2110:
  7088   003C8C  0012               	return		;funcret
  7089   003C8E                     __end_of_fputs:
  7090                           	callstack 0
  7091                           
  7092 ;; *************** function _fputc *****************
  7093 ;; Defined at:
  7094 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  7095 ;; Parameters:    Size  Location     Type
  7096 ;;  c               2    1[COMRAM] int 
  7097 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  7098 ;;		 -> NULL(0), sprintf@f(12), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2    1[COMRAM] int 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7114 ;;Total ram usage:        9 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 1
  7117 ;; This function calls:
  7118 ;;		_putch
  7119 ;; This function is called by:
  7120 ;;		_pad
  7121 ;;		_stoa
  7122 ;;		_vfpfcnvrt
  7123 ;;		_fputs
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text26
  7128   00386A                     __ptext26:
  7129                           	callstack 0
  7130   00386A                     _fputc:
  7131                           	callstack 24
  7132   00386A  5004               	movf	fputc@fp^0,w,c
  7133   00386C  1005               	iorwf	(fputc@fp+1)^0,w,c
  7134   00386E  B4D8               	btfsc	status,2,c
  7135   003870  EF3C  F01C         	goto	u2071
  7136   003874  EF3E  F01C         	goto	u2070
  7137   003878                     u2071:
  7138   003878  EF47  F01C         	goto	l2409
  7139   00387C                     u2070:
  7140   00387C  5004               	movf	fputc@fp^0,w,c
  7141   00387E  1005               	iorwf	(fputc@fp+1)^0,w,c
  7142   003880  A4D8               	btfss	status,2,c
  7143   003882  EF45  F01C         	goto	u2081
  7144   003886  EF47  F01C         	goto	u2080
  7145   00388A                     u2081:
  7146   00388A  EF4C  F01C         	goto	l2411
  7147   00388E                     u2080:
  7148   00388E                     l2409:
  7149   00388E  5002               	movf	fputc@c^0,w,c
  7150   003890  EC3B  F01F         	call	_putch
  7151   003894  EF91  F01C         	goto	l1017
  7152   003898                     l2411:
  7153   003898  EE20 F00A          	lfsr	2,10
  7154   00389C  5004               	movf	fputc@fp^0,w,c
  7155   00389E  26D9               	addwf	fsr2l,f,c
  7156   0038A0  5005               	movf	(fputc@fp+1)^0,w,c
  7157   0038A2  22DA               	addwfc	fsr2h,f,c
  7158   0038A4  50DE               	movf	postinc2,w,c
  7159   0038A6  10DE               	iorwf	postinc2,w,c
  7160   0038A8  B4D8               	btfsc	status,2,c
  7161   0038AA  EF59  F01C         	goto	u2091
  7162   0038AE  EF5B  F01C         	goto	u2090
  7163   0038B2                     u2091:
  7164   0038B2  EF76  F01C         	goto	l2415
  7165   0038B6                     u2090:
  7166   0038B6  EE20 F00A          	lfsr	2,10
  7167   0038BA  5004               	movf	fputc@fp^0,w,c
  7168   0038BC  26D9               	addwf	fsr2l,f,c
  7169   0038BE  5005               	movf	(fputc@fp+1)^0,w,c
  7170   0038C0  22DA               	addwfc	fsr2h,f,c
  7171   0038C2  EE10 F003          	lfsr	1,3
  7172   0038C6  5004               	movf	fputc@fp^0,w,c
  7173   0038C8  26E1               	addwf	fsr1l,f,c
  7174   0038CA  5005               	movf	(fputc@fp+1)^0,w,c
  7175   0038CC  22E2               	addwfc	fsr1h,f,c
  7176   0038CE  50DE               	movf	postinc2,w,c
  7177   0038D0  5CE6               	subwf	postinc1,w,c
  7178   0038D2  50E6               	movf	postinc1,w,c
  7179   0038D4  0A80               	xorlw	128
  7180   0038D6  6E0A               	movwf	(??_fputc+4)^0,c
  7181   0038D8  50DE               	movf	postinc2,w,c
  7182   0038DA  0A80               	xorlw	128
  7183   0038DC  580A               	subwfb	(??_fputc+4)^0,w,c
  7184   0038DE  B0D8               	btfsc	status,0,c
  7185   0038E0  EF74  F01C         	goto	u2101
  7186   0038E4  EF76  F01C         	goto	u2100
  7187   0038E8                     u2101:
  7188   0038E8  EF91  F01C         	goto	l1017
  7189   0038EC                     u2100:
  7190   0038EC                     l2415:
  7191   0038EC  EE20 F003          	lfsr	2,3
  7192   0038F0  5004               	movf	fputc@fp^0,w,c
  7193   0038F2  26D9               	addwf	fsr2l,f,c
  7194   0038F4  5005               	movf	(fputc@fp+1)^0,w,c
  7195   0038F6  22DA               	addwfc	fsr2h,f,c
  7196   0038F8  50DF               	movf	indf2,w,c
  7197   0038FA  6E06               	movwf	??_fputc^0,c
  7198   0038FC  C004  FFD9         	movff	fputc@fp,fsr2l
  7199   003900  C005  FFDA         	movff	fputc@fp+1,fsr2h
  7200   003904  50DF               	movf	indf2,w,c
  7201   003906  2406               	addwf	??_fputc^0,w,c
  7202   003908  6ED9               	movwf	fsr2l,c
  7203   00390A  6ADA               	clrf	fsr2h,c
  7204   00390C  C002  FFDF         	movff	fputc@c,indf2
  7205   003910  EE20 F003          	lfsr	2,3
  7206   003914  5004               	movf	fputc@fp^0,w,c
  7207   003916  26D9               	addwf	fsr2l,f,c
  7208   003918  5005               	movf	(fputc@fp+1)^0,w,c
  7209   00391A  22DA               	addwfc	fsr2h,f,c
  7210   00391C  2ADE               	incf	postinc2,f,c
  7211   00391E  0E00               	movlw	0
  7212   003920  22DD               	addwfc	postdec2,f,c
  7213   003922                     l1017:
  7214   003922  0012               	return		;funcret
  7215   003924                     __end_of_fputc:
  7216                           	callstack 0
  7217                           
  7218 ;; *************** function _putch *****************
  7219 ;; Defined at:
  7220 ;;		line 11 in file "putch.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;  data            1    wreg     unsigned char 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  data            1    0[COMRAM] unsigned char 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;Total ram usage:        1 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; This function calls:
  7241 ;;		Nothing
  7242 ;; This function is called by:
  7243 ;;		_fputc
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text27
  7248   003E76                     __ptext27:
  7249                           	callstack 0
  7250   003E76                     _putch:
  7251                           	callstack 24
  7252                           
  7253                           ;incstack = 0
  7254                           ;putch@data stored from wreg
  7255   003E76  6E01               	movwf	putch@data^0,c
  7256   003E78                     l205:
  7257   003E78  A89E               	btfss	3998,4,c	;volatile
  7258   003E7A  EF41  F01F         	goto	u2061
  7259   003E7E  EF43  F01F         	goto	u2060
  7260   003E82                     u2061:
  7261   003E82  EF3C  F01F         	goto	l205
  7262   003E86                     u2060:
  7263   003E86                     
  7264                           ;putch.c: 13:     TXREG1 = data;
  7265   003E86  C001  FFAD         	movff	putch@data,4013	;volatile
  7266   003E8A  0012               	return		;funcret
  7267   003E8C                     __end_of_putch:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _abs *****************
  7271 ;; Defined at:
  7272 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  a               2    6[COMRAM] int 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  2    6[COMRAM] int 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;Total ram usage:        4 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_dtoa
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text28
  7300   003DDC                     __ptext28:
  7301                           	callstack 0
  7302   003DDC                     _abs:
  7303                           	callstack 25
  7304   003DDC  BE08               	btfsc	(abs@a+1)^0,7,c
  7305   003DDE  EFF3  F01E         	goto	u2281
  7306   003DE2  EFF5  F01E         	goto	u2280
  7307   003DE6                     u2281:
  7308   003DE6  EFFB  F01E         	goto	l1002
  7309   003DEA                     u2280:
  7310   003DEA  C007  F007         	movff	abs@a,?_abs
  7311   003DEE  C008  F008         	movff	abs@a+1,?_abs+1
  7312   003DF2  EF07  F01F         	goto	l1005
  7313   003DF6                     l1002:
  7314   003DF6  C007  F009         	movff	abs@a,??_abs
  7315   003DFA  C008  F00A         	movff	abs@a+1,??_abs+1
  7316   003DFE  1E09               	comf	??_abs^0,f,c
  7317   003E00  1E0A               	comf	(??_abs+1)^0,f,c
  7318   003E02  4A09               	infsnz	??_abs^0,f,c
  7319   003E04  2A0A               	incf	(??_abs+1)^0,f,c
  7320   003E06  C009  F007         	movff	??_abs,?_abs
  7321   003E0A  C00A  F008         	movff	??_abs+1,?_abs+1
  7322   003E0E                     l1005:
  7323   003E0E  0012               	return		;funcret
  7324   003E10                     __end_of_abs:
  7325                           	callstack 0
  7326                           
  7327 ;; *************** function ___awmod *****************
  7328 ;; Defined at:
  7329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;  dividend        2    0[COMRAM] int 
  7332 ;;  divisor         2    2[COMRAM] int 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  sign            1    5[COMRAM] unsigned char 
  7335 ;;  counter         1    4[COMRAM] unsigned char 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2    0[COMRAM] int 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;Total ram usage:        6 bytes
  7350 ;; Hardware stack levels used: 1
  7351 ;; This function calls:
  7352 ;;		Nothing
  7353 ;; This function is called by:
  7354 ;;		_dtoa
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357                           
  7358                           	psect	text29
  7359   0039D6                     __ptext29:
  7360                           	callstack 0
  7361   0039D6                     ___awmod:
  7362                           	callstack 25
  7363   0039D6  0E00               	movlw	0
  7364   0039D8  6E06               	movwf	___awmod@sign^0,c
  7365   0039DA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7366   0039DC  EFF4  F01C         	goto	u2180
  7367   0039E0  EFF2  F01C         	goto	u2181
  7368   0039E4                     u2181:
  7369   0039E4  EFFA  F01C         	goto	l2485
  7370   0039E8                     u2180:
  7371   0039E8  6C01               	negf	___awmod@dividend^0,c
  7372   0039EA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7373   0039EC  B0D8               	btfsc	status,0,c
  7374   0039EE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7375   0039F0  0E01               	movlw	1
  7376   0039F2  6E06               	movwf	___awmod@sign^0,c
  7377   0039F4                     l2485:
  7378   0039F4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7379   0039F6  EF01  F01D         	goto	u2190
  7380   0039FA  EFFF  F01C         	goto	u2191
  7381   0039FE                     u2191:
  7382   0039FE  EF05  F01D         	goto	l2489
  7383   003A02                     u2190:
  7384   003A02  6C03               	negf	___awmod@divisor^0,c
  7385   003A04  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7386   003A06  B0D8               	btfsc	status,0,c
  7387   003A08  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7388   003A0A                     l2489:
  7389   003A0A  5003               	movf	___awmod@divisor^0,w,c
  7390   003A0C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7391   003A0E  B4D8               	btfsc	status,2,c
  7392   003A10  EF0C  F01D         	goto	u2201
  7393   003A14  EF0E  F01D         	goto	u2200
  7394   003A18                     u2201:
  7395   003A18  EF32  F01D         	goto	l2505
  7396   003A1C                     u2200:
  7397   003A1C  0E01               	movlw	1
  7398   003A1E  6E05               	movwf	___awmod@counter^0,c
  7399   003A20  EF16  F01D         	goto	l2495
  7400   003A24                     l2493:
  7401   003A24  90D8               	bcf	status,0,c
  7402   003A26  3603               	rlcf	___awmod@divisor^0,f,c
  7403   003A28  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7404   003A2A  2A05               	incf	___awmod@counter^0,f,c
  7405   003A2C                     l2495:
  7406   003A2C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7407   003A2E  EF1B  F01D         	goto	u2211
  7408   003A32  EF1D  F01D         	goto	u2210
  7409   003A36                     u2211:
  7410   003A36  EF12  F01D         	goto	l2493
  7411   003A3A                     u2210:
  7412   003A3A                     l2497:
  7413   003A3A  5003               	movf	___awmod@divisor^0,w,c
  7414   003A3C  5C01               	subwf	___awmod@dividend^0,w,c
  7415   003A3E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7416   003A40  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7417   003A42  A0D8               	btfss	status,0,c
  7418   003A44  EF26  F01D         	goto	u2221
  7419   003A48  EF28  F01D         	goto	u2220
  7420   003A4C                     u2221:
  7421   003A4C  EF2C  F01D         	goto	l2501
  7422   003A50                     u2220:
  7423   003A50  5003               	movf	___awmod@divisor^0,w,c
  7424   003A52  5E01               	subwf	___awmod@dividend^0,f,c
  7425   003A54  5004               	movf	(___awmod@divisor+1)^0,w,c
  7426   003A56  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7427   003A58                     l2501:
  7428   003A58  90D8               	bcf	status,0,c
  7429   003A5A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7430   003A5C  3203               	rrcf	___awmod@divisor^0,f,c
  7431   003A5E  2E05               	decfsz	___awmod@counter^0,f,c
  7432   003A60  EF1D  F01D         	goto	l2497
  7433   003A64                     l2505:
  7434   003A64  5006               	movf	___awmod@sign^0,w,c
  7435   003A66  B4D8               	btfsc	status,2,c
  7436   003A68  EF38  F01D         	goto	u2231
  7437   003A6C  EF3A  F01D         	goto	u2230
  7438   003A70                     u2231:
  7439   003A70  EF3E  F01D         	goto	l2509
  7440   003A74                     u2230:
  7441   003A74  6C01               	negf	___awmod@dividend^0,c
  7442   003A76  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7443   003A78  B0D8               	btfsc	status,0,c
  7444   003A7A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7445   003A7C                     l2509:
  7446   003A7C  C001  F001         	movff	___awmod@dividend,?___awmod
  7447   003A80  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7448   003A84  0012               	return		;funcret
  7449   003A86                     __end_of___awmod:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function ___awdiv *****************
  7453 ;; Defined at:
  7454 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  dividend        2    0[COMRAM] int 
  7457 ;;  divisor         2    2[COMRAM] int 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  quotient        2    6[COMRAM] int 
  7460 ;;  sign            1    5[COMRAM] unsigned char 
  7461 ;;  counter         1    4[COMRAM] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  2    0[COMRAM] int 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7474 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;Total ram usage:        8 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_dtoa
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text30
  7485   0037A6                     __ptext30:
  7486                           	callstack 0
  7487   0037A6                     ___awdiv:
  7488                           	callstack 25
  7489   0037A6  0E00               	movlw	0
  7490   0037A8  6E06               	movwf	___awdiv@sign^0,c
  7491   0037AA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7492   0037AC  EFDC  F01B         	goto	u2120
  7493   0037B0  EFDA  F01B         	goto	u2121
  7494   0037B4                     u2121:
  7495   0037B4  EFE2  F01B         	goto	l2441
  7496   0037B8                     u2120:
  7497   0037B8  6C03               	negf	___awdiv@divisor^0,c
  7498   0037BA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7499   0037BC  B0D8               	btfsc	status,0,c
  7500   0037BE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7501   0037C0  0E01               	movlw	1
  7502   0037C2  6E06               	movwf	___awdiv@sign^0,c
  7503   0037C4                     l2441:
  7504   0037C4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7505   0037C6  EFE9  F01B         	goto	u2130
  7506   0037CA  EFE7  F01B         	goto	u2131
  7507   0037CE                     u2131:
  7508   0037CE  EFEF  F01B         	goto	l2447
  7509   0037D2                     u2130:
  7510   0037D2  6C01               	negf	___awdiv@dividend^0,c
  7511   0037D4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7512   0037D6  B0D8               	btfsc	status,0,c
  7513   0037D8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7514   0037DA  0E01               	movlw	1
  7515   0037DC  1A06               	xorwf	___awdiv@sign^0,f,c
  7516   0037DE                     l2447:
  7517   0037DE  0E00               	movlw	0
  7518   0037E0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7519   0037E2  0E00               	movlw	0
  7520   0037E4  6E07               	movwf	___awdiv@quotient^0,c
  7521   0037E6  5003               	movf	___awdiv@divisor^0,w,c
  7522   0037E8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7523   0037EA  B4D8               	btfsc	status,2,c
  7524   0037EC  EFFA  F01B         	goto	u2141
  7525   0037F0  EFFC  F01B         	goto	u2140
  7526   0037F4                     u2141:
  7527   0037F4  EF24  F01C         	goto	l2469
  7528   0037F8                     u2140:
  7529   0037F8  0E01               	movlw	1
  7530   0037FA  6E05               	movwf	___awdiv@counter^0,c
  7531   0037FC  EF04  F01C         	goto	l2455
  7532   003800                     l2453:
  7533   003800  90D8               	bcf	status,0,c
  7534   003802  3603               	rlcf	___awdiv@divisor^0,f,c
  7535   003804  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7536   003806  2A05               	incf	___awdiv@counter^0,f,c
  7537   003808                     l2455:
  7538   003808  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7539   00380A  EF09  F01C         	goto	u2151
  7540   00380E  EF0B  F01C         	goto	u2150
  7541   003812                     u2151:
  7542   003812  EF00  F01C         	goto	l2453
  7543   003816                     u2150:
  7544   003816                     l2457:
  7545   003816  90D8               	bcf	status,0,c
  7546   003818  3607               	rlcf	___awdiv@quotient^0,f,c
  7547   00381A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7548   00381C  5003               	movf	___awdiv@divisor^0,w,c
  7549   00381E  5C01               	subwf	___awdiv@dividend^0,w,c
  7550   003820  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7551   003822  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7552   003824  A0D8               	btfss	status,0,c
  7553   003826  EF17  F01C         	goto	u2161
  7554   00382A  EF19  F01C         	goto	u2160
  7555   00382E                     u2161:
  7556   00382E  EF1E  F01C         	goto	l2465
  7557   003832                     u2160:
  7558   003832  5003               	movf	___awdiv@divisor^0,w,c
  7559   003834  5E01               	subwf	___awdiv@dividend^0,f,c
  7560   003836  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7561   003838  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7562   00383A  8007               	bsf	___awdiv@quotient^0,0,c
  7563   00383C                     l2465:
  7564   00383C  90D8               	bcf	status,0,c
  7565   00383E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7566   003840  3203               	rrcf	___awdiv@divisor^0,f,c
  7567   003842  2E05               	decfsz	___awdiv@counter^0,f,c
  7568   003844  EF0B  F01C         	goto	l2457
  7569   003848                     l2469:
  7570   003848  5006               	movf	___awdiv@sign^0,w,c
  7571   00384A  B4D8               	btfsc	status,2,c
  7572   00384C  EF2A  F01C         	goto	u2171
  7573   003850  EF2C  F01C         	goto	u2170
  7574   003854                     u2171:
  7575   003854  EF30  F01C         	goto	l2473
  7576   003858                     u2170:
  7577   003858  6C07               	negf	___awdiv@quotient^0,c
  7578   00385A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7579   00385C  B0D8               	btfsc	status,0,c
  7580   00385E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7581   003860                     l2473:
  7582   003860  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7583   003864  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7584   003868  0012               	return		;funcret
  7585   00386A                     __end_of___awdiv:
  7586                           	callstack 0
  7587                           
  7588 ;; *************** function _LCD_ShowString *****************
  7589 ;; Defined at:
  7590 ;;		line 55 in file "lcd.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  lineNum         1    wreg     unsigned char 
  7593 ;;  textData        2    1[COMRAM] PTR unsigned char 
  7594 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_2(17), STR_1(17), 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;  lineNum         1    5[COMRAM] unsigned char 
  7597 ;;  i               1    6[COMRAM] unsigned char 
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;Total ram usage:        6 bytes
  7612 ;; Hardware stack levels used: 1
  7613 ;; Hardware stack levels required when called: 1
  7614 ;; This function calls:
  7615 ;;		_LCD_Send
  7616 ;; This function is called by:
  7617 ;;		_main
  7618 ;;		_moveDisplay
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text31
  7623   003924                     __ptext31:
  7624                           	callstack 0
  7625   003924                     _LCD_ShowString:
  7626                           	callstack 28
  7627                           
  7628                           ;incstack = 0
  7629                           ;LCD_ShowString@lineNum stored from wreg
  7630   003924  6E06               	movwf	LCD_ShowString@lineNum^0,c
  7631   003926                     
  7632                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
  7633   003926  806B               	bsf	107,0,c	;volatile
  7634   003928                     l91:
  7635   003928  B06B               	btfsc	107,0,c	;volatile
  7636   00392A  EF99  F01C         	goto	u3421
  7637   00392E  EF9B  F01C         	goto	u3420
  7638   003932                     u3421:
  7639   003932  EF94  F01C         	goto	l91
  7640   003936                     u3420:
  7641   003936                     
  7642                           ;lcd.c: 62:     SSP2IF = 0;
  7643   003936  9EA4               	bcf	4004,7,c	;volatile
  7644   003938                     
  7645                           ;lcd.c: 64:     LCD_Send(0x7c);
  7646   003938  0E7C               	movlw	124
  7647   00393A  EC1B  F01F         	call	_LCD_Send
  7648                           
  7649                           ;lcd.c: 66:     LCD_Send(0x80);
  7650   00393E  0E80               	movlw	128
  7651   003940  EC1B  F01F         	call	_LCD_Send
  7652   003944                     
  7653                           ;lcd.c: 68:     if(lineNum == 1){
  7654   003944  0406               	decf	LCD_ShowString@lineNum^0,w,c
  7655   003946  A4D8               	btfss	status,2,c
  7656   003948  EFA8  F01C         	goto	u3431
  7657   00394C  EFAA  F01C         	goto	u3430
  7658   003950                     u3431:
  7659   003950  EFAF  F01C         	goto	l3221
  7660   003954                     u3430:
  7661   003954                     
  7662                           ;lcd.c: 69:         LCD_Send(0x80);
  7663   003954  0E80               	movlw	128
  7664   003956  EC1B  F01F         	call	_LCD_Send
  7665                           
  7666                           ;lcd.c: 70:     }
  7667   00395A  EFBB  F01C         	goto	l95
  7668   00395E                     l3221:
  7669   00395E  0E02               	movlw	2
  7670   003960  1806               	xorwf	LCD_ShowString@lineNum^0,w,c
  7671   003962  A4D8               	btfss	status,2,c
  7672   003964  EFB6  F01C         	goto	u3441
  7673   003968  EFB8  F01C         	goto	u3440
  7674   00396C                     u3441:
  7675   00396C  EFBB  F01C         	goto	l95
  7676   003970                     u3440:
  7677   003970                     
  7678                           ;lcd.c: 72:         LCD_Send(0xC0);
  7679   003970  0EC0               	movlw	192
  7680   003972  EC1B  F01F         	call	_LCD_Send
  7681   003976                     l95:
  7682                           
  7683                           ;lcd.c: 75:     LCD_Send(0x40);
  7684   003976  0E40               	movlw	64
  7685   003978  EC1B  F01F         	call	_LCD_Send
  7686   00397C                     
  7687                           ;lcd.c: 77:     for (i = 0; i<16; i++){
  7688   00397C  0E00               	movlw	0
  7689   00397E  6E07               	movwf	LCD_ShowString@i^0,c
  7690   003980                     l3231:
  7691                           
  7692                           ;lcd.c: 78:         LCD_Send(textData[i]);
  7693   003980  5007               	movf	LCD_ShowString@i^0,w,c
  7694   003982  2402               	addwf	LCD_ShowString@textData^0,w,c
  7695   003984  6E04               	movwf	??_LCD_ShowString^0,c
  7696   003986  0E00               	movlw	0
  7697   003988  2003               	addwfc	(LCD_ShowString@textData+1)^0,w,c
  7698   00398A  6E05               	movwf	(??_LCD_ShowString+1)^0,c
  7699   00398C  C004  FFF6         	movff	??_LCD_ShowString,tblptrl
  7700   003990  C005  FFF7         	movff	??_LCD_ShowString+1,tblptrh
  7701   003994  0E00               	movlw	low (__smallconst shr (0+16))
  7702   003996  6EF8               	movwf	tblptru,c
  7703   003998  0E0F               	movlw	(high __ramtop+-1)
  7704   00399A  64F7               	cpfsgt	tblptrh,c
  7705   00399C  D003               	bra	u3457
  7706   00399E  0008               	tblrd		*
  7707   0039A0  50F5               	movf	tablat,w,c
  7708   0039A2  D005               	bra	u3450
  7709   0039A4                     u3457:
  7710   0039A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7711   0039A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7712   0039AC  50E7               	movf	indf1,w,c
  7713   0039AE                     u3450:
  7714   0039AE  EC1B  F01F         	call	_LCD_Send
  7715   0039B2                     
  7716                           ;lcd.c: 79:     }
  7717   0039B2  2A07               	incf	LCD_ShowString@i^0,f,c
  7718   0039B4  0E0F               	movlw	15
  7719   0039B6  6407               	cpfsgt	LCD_ShowString@i^0,c
  7720   0039B8  EFE0  F01C         	goto	u3461
  7721   0039BC  EFE2  F01C         	goto	u3460
  7722   0039C0                     u3461:
  7723   0039C0  EFC0  F01C         	goto	l3231
  7724   0039C4                     u3460:
  7725   0039C4                     
  7726                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
  7727   0039C4  846B               	bsf	107,2,c	;volatile
  7728   0039C6                     l99:
  7729   0039C6  B46B               	btfsc	107,2,c	;volatile
  7730   0039C8  EFE8  F01C         	goto	u3471
  7731   0039CC  EFEA  F01C         	goto	u3470
  7732   0039D0                     u3471:
  7733   0039D0  EFE3  F01C         	goto	l99
  7734   0039D4                     u3470:
  7735   0039D4  0012               	return		;funcret
  7736   0039D6                     __end_of_LCD_ShowString:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function _LCD_Clear *****************
  7740 ;; Defined at:
  7741 ;;		line 94 in file "lcd.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 1
  7762 ;; This function calls:
  7763 ;;		_LCD_Send
  7764 ;; This function is called by:
  7765 ;;		_moveDisplay
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text32
  7770   003D72                     __ptext32:
  7771                           	callstack 0
  7772   003D72                     _LCD_Clear:
  7773                           	callstack 28
  7774   003D72                     
  7775                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
  7776   003D72  806B               	bsf	107,0,c	;volatile
  7777   003D74                     l114:
  7778   003D74  B06B               	btfsc	107,0,c	;volatile
  7779   003D76  EFBF  F01E         	goto	u3481
  7780   003D7A  EFC1  F01E         	goto	u3480
  7781   003D7E                     u3481:
  7782   003D7E  EFBA  F01E         	goto	l114
  7783   003D82                     u3480:
  7784   003D82                     
  7785                           ;lcd.c: 97:     SSP2IF = 0;
  7786   003D82  9EA4               	bcf	4004,7,c	;volatile
  7787   003D84                     
  7788                           ;lcd.c: 99:     LCD_Send(0x7C);
  7789   003D84  0E7C               	movlw	124
  7790   003D86  EC1B  F01F         	call	_LCD_Send
  7791                           
  7792                           ;lcd.c: 100:     LCD_Send(0x80);
  7793   003D8A  0E80               	movlw	128
  7794   003D8C  EC1B  F01F         	call	_LCD_Send
  7795                           
  7796                           ;lcd.c: 101:     LCD_Send(0x01);
  7797   003D90  0E01               	movlw	1
  7798   003D92  EC1B  F01F         	call	_LCD_Send
  7799   003D96                     
  7800                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
  7801   003D96  846B               	bsf	107,2,c	;volatile
  7802   003D98                     l117:
  7803   003D98  B46B               	btfsc	107,2,c	;volatile
  7804   003D9A  EFD1  F01E         	goto	u3491
  7805   003D9E  EFD3  F01E         	goto	u3490
  7806   003DA2                     u3491:
  7807   003DA2  EFCC  F01E         	goto	l117
  7808   003DA6                     u3490:
  7809   003DA6  0012               	return		;funcret
  7810   003DA8                     __end_of_LCD_Clear:
  7811                           	callstack 0
  7812                           
  7813 ;; *************** function _LCD_Init *****************
  7814 ;; Defined at:
  7815 ;;		line 3 in file "lcd.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;		None
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;		None
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7833 ;;Total ram usage:        1 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; Hardware stack levels required when called: 1
  7836 ;; This function calls:
  7837 ;;		_LCD_Send
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text33
  7844   0036CC                     __ptext33:
  7845                           	callstack 0
  7846   0036CC                     _LCD_Init:
  7847                           	callstack 29
  7848   0036CC                     
  7849                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
  7850   0036CC  010F               	movlb	15	; () banked
  7851   0036CE  913B               	bcf	59,0,b	;volatile
  7852                           
  7853                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
  7854   0036D0  933B               	bcf	59,1,b	;volatile
  7855                           
  7856                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
  7857   0036D2  8095               	bsf	149,0,c	;volatile
  7858                           
  7859                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
  7860   0036D4  8295               	bsf	149,1,c	;volatile
  7861                           
  7862                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
  7863   0036D6  9092               	bcf	146,0,c	;volatile
  7864                           
  7865                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
  7866   0036D8  8089               	bsf	137,0,c	;volatile
  7867   0036DA                     
  7868                           ; BSR set to: 15
  7869                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
  7870   0036DA  506C               	movf	108,w,c	;volatile
  7871   0036DC  0BF0               	andlw	-16
  7872   0036DE  0908               	iorlw	8
  7873   0036E0  6E6C               	movwf	108,c	;volatile
  7874                           
  7875                           ;lcd.c: 15:     SSP2ADD = 19;
  7876   0036E2  0E13               	movlw	19
  7877   0036E4  6E6E               	movwf	110,c	;volatile
  7878   0036E6                     
  7879                           ; BSR set to: 15
  7880                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
  7881   0036E6  8A6C               	bsf	108,5,c	;volatile
  7882   0036E8                     
  7883                           ; BSR set to: 15
  7884                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
  7885   0036E8  0E34               	movlw	52
  7886   0036EA  6E02               	movwf	??_LCD_Init^0,c
  7887   0036EC  0EF2               	movlw	242
  7888   0036EE                     u4157:
  7889   0036EE  2EE8               	decfsz	wreg,f,c
  7890   0036F0  D7FE               	bra	u4157
  7891   0036F2  2E02               	decfsz	??_LCD_Init^0,f,c
  7892   0036F4  D7FC               	bra	u4157
  7893   0036F6                     
  7894                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
  7895   0036F6  806B               	bsf	107,0,c	;volatile
  7896   0036F8                     l82:
  7897   0036F8  B06B               	btfsc	107,0,c	;volatile
  7898   0036FA  EF81  F01B         	goto	u3881
  7899   0036FE  EF83  F01B         	goto	u3880
  7900   003702                     u3881:
  7901   003702  EF7C  F01B         	goto	l82
  7902   003706                     u3880:
  7903   003706                     
  7904                           ;lcd.c: 22:     SSP2IF = 0;
  7905   003706  9EA4               	bcf	4004,7,c	;volatile
  7906   003708                     
  7907                           ;lcd.c: 27:     LCD_Send(0x7C);
  7908   003708  0E7C               	movlw	124
  7909   00370A  EC1B  F01F         	call	_LCD_Send
  7910                           
  7911                           ;lcd.c: 28:     LCD_Send(0x80);
  7912   00370E  0E80               	movlw	128
  7913   003710  EC1B  F01F         	call	_LCD_Send
  7914                           
  7915                           ;lcd.c: 29:     LCD_Send(0x38);
  7916   003714  0E38               	movlw	56
  7917   003716  EC1B  F01F         	call	_LCD_Send
  7918                           
  7919                           ;lcd.c: 30:     LCD_Send(0x80);
  7920   00371A  0E80               	movlw	128
  7921   00371C  EC1B  F01F         	call	_LCD_Send
  7922                           
  7923                           ;lcd.c: 31:     LCD_Send(0x39);
  7924   003720  0E39               	movlw	57
  7925   003722  EC1B  F01F         	call	_LCD_Send
  7926                           
  7927                           ;lcd.c: 32:     LCD_Send(0x80);
  7928   003726  0E80               	movlw	128
  7929   003728  EC1B  F01F         	call	_LCD_Send
  7930                           
  7931                           ;lcd.c: 33:     LCD_Send(0x17);
  7932   00372C  0E17               	movlw	23
  7933   00372E  EC1B  F01F         	call	_LCD_Send
  7934                           
  7935                           ;lcd.c: 34:     LCD_Send(0x80);
  7936   003732  0E80               	movlw	128
  7937   003734  EC1B  F01F         	call	_LCD_Send
  7938                           
  7939                           ;lcd.c: 35:     LCD_Send(0x7A);
  7940   003738  0E7A               	movlw	122
  7941   00373A  EC1B  F01F         	call	_LCD_Send
  7942                           
  7943                           ;lcd.c: 36:     LCD_Send(0x80);
  7944   00373E  0E80               	movlw	128
  7945   003740  EC1B  F01F         	call	_LCD_Send
  7946                           
  7947                           ;lcd.c: 37:     LCD_Send(0x5E);
  7948   003744  0E5E               	movlw	94
  7949   003746  EC1B  F01F         	call	_LCD_Send
  7950                           
  7951                           ;lcd.c: 38:     LCD_Send(0x80);
  7952   00374A  0E80               	movlw	128
  7953   00374C  EC1B  F01F         	call	_LCD_Send
  7954                           
  7955                           ;lcd.c: 39:     LCD_Send(0x6B);
  7956   003750  0E6B               	movlw	107
  7957   003752  EC1B  F01F         	call	_LCD_Send
  7958                           
  7959                           ;lcd.c: 40:     LCD_Send(0x80);
  7960   003756  0E80               	movlw	128
  7961   003758  EC1B  F01F         	call	_LCD_Send
  7962                           
  7963                           ;lcd.c: 41:     LCD_Send(0x0C);
  7964   00375C  0E0C               	movlw	12
  7965   00375E  EC1B  F01F         	call	_LCD_Send
  7966                           
  7967                           ;lcd.c: 42:     LCD_Send(0x80);
  7968   003762  0E80               	movlw	128
  7969   003764  EC1B  F01F         	call	_LCD_Send
  7970                           
  7971                           ;lcd.c: 43:     LCD_Send(0x01);
  7972   003768  0E01               	movlw	1
  7973   00376A  EC1B  F01F         	call	_LCD_Send
  7974                           
  7975                           ;lcd.c: 44:     LCD_Send(0x80);
  7976   00376E  0E80               	movlw	128
  7977   003770  EC1B  F01F         	call	_LCD_Send
  7978                           
  7979                           ;lcd.c: 45:     LCD_Send(0x06);
  7980   003774  0E06               	movlw	6
  7981   003776  EC1B  F01F         	call	_LCD_Send
  7982                           
  7983                           ;lcd.c: 46:     LCD_Send(0x80);
  7984   00377A  0E80               	movlw	128
  7985   00377C  EC1B  F01F         	call	_LCD_Send
  7986                           
  7987                           ;lcd.c: 47:     LCD_Send(0x02);
  7988   003780  0E02               	movlw	2
  7989   003782  EC1B  F01F         	call	_LCD_Send
  7990   003786                     
  7991                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
  7992   003786  846B               	bsf	107,2,c	;volatile
  7993   003788                     l85:
  7994   003788  B46B               	btfsc	107,2,c	;volatile
  7995   00378A  EFC9  F01B         	goto	u3891
  7996   00378E  EFCB  F01B         	goto	u3890
  7997   003792                     u3891:
  7998   003792  EFC4  F01B         	goto	l85
  7999   003796                     u3890:
  8000   003796                     
  8001                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
  8002   003796  0E34               	movlw	52
  8003   003798  6E02               	movwf	??_LCD_Init^0,c
  8004   00379A  0EF2               	movlw	242
  8005   00379C                     u4167:
  8006   00379C  2EE8               	decfsz	wreg,f,c
  8007   00379E  D7FE               	bra	u4167
  8008   0037A0  2E02               	decfsz	??_LCD_Init^0,f,c
  8009   0037A2  D7FC               	bra	u4167
  8010   0037A4  0012               	return		;funcret
  8011   0037A6                     __end_of_LCD_Init:
  8012                           	callstack 0
  8013                           
  8014 ;; *************** function _LCD_Send *****************
  8015 ;; Defined at:
  8016 ;;		line 85 in file "lcd.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  data            1    wreg     unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  data            1    0[COMRAM] unsigned char 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;Total ram usage:        1 bytes
  8035 ;; Hardware stack levels used: 1
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_LCD_Init
  8040 ;;		_LCD_ShowString
  8041 ;;		_LCD_Clear
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text34
  8046   003E36                     __ptext34:
  8047                           	callstack 0
  8048   003E36                     _LCD_Send:
  8049                           	callstack 28
  8050                           
  8051                           ;incstack = 0
  8052                           ;LCD_Send@data stored from wreg
  8053   003E36  6E01               	movwf	LCD_Send@data^0,c
  8054   003E38                     
  8055                           ;lcd.c: 87:     SSP2BUF = data;
  8056   003E38  C001  FF6F         	movff	LCD_Send@data,3951	;volatile
  8057   003E3C                     l105:
  8058   003E3C  B06D               	btfsc	109,0,c	;volatile
  8059   003E3E  EF23  F01F         	goto	u3341
  8060   003E42  EF25  F01F         	goto	u3340
  8061   003E46                     u3341:
  8062   003E46  EF1E  F01F         	goto	l105
  8063   003E4A                     u3340:
  8064   003E4A                     l108:
  8065   003E4A  AEA4               	btfss	4004,7,c	;volatile
  8066   003E4C  EF2A  F01F         	goto	u3351
  8067   003E50  EF2C  F01F         	goto	u3350
  8068   003E54                     u3351:
  8069   003E54  EF25  F01F         	goto	l108
  8070   003E58                     u3350:
  8071   003E58                     
  8072                           ;lcd.c: 90:     SSP2IF = 0;
  8073   003E58  9EA4               	bcf	4004,7,c	;volatile
  8074   003E5A  0012               	return		;funcret
  8075   003E5C                     __end_of_LCD_Send:
  8076                           	callstack 0
  8077                           
  8078                           	psect	rparam
  8079   000000                     
  8080                           	psect	config
  8081                           
  8082                           ; Padding undefined space
  8083   300000                     	org	3145728
  8084   300000  FF                 	db	255
  8085                           
  8086                           ;Config register CONFIG1H @ 0x300001
  8087                           ;	Oscillator Selection bits
  8088                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  8089                           ;	4X PLL Enable
  8090                           ;	PLLCFG = ON, Oscillator multiplied by 4
  8091                           ;	Primary clock enable bit
  8092                           ;	PRICLKEN = 0x1, unprogrammed default
  8093                           ;	Fail-Safe Clock Monitor Enable bit
  8094                           ;	FCMEN = 0x0, unprogrammed default
  8095                           ;	Internal/External Oscillator Switchover bit
  8096                           ;	IESO = 0x0, unprogrammed default
  8097   300001                     	org	3145729
  8098   300001  33                 	db	51
  8099                           
  8100                           ;Config register CONFIG2L @ 0x300002
  8101                           ;	unspecified, using default values
  8102                           ;	Power-up Timer Enable bit
  8103                           ;	PWRTEN = 0x1, unprogrammed default
  8104                           ;	Brown-out Reset Enable bits
  8105                           ;	BOREN = 0x3, unprogrammed default
  8106                           ;	Brown Out Reset Voltage bits
  8107                           ;	BORV = 0x3, unprogrammed default
  8108   300002                     	org	3145730
  8109   300002  1F                 	db	31
  8110                           
  8111                           ;Config register CONFIG2H @ 0x300003
  8112                           ;	Watchdog Timer Enable bits
  8113                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8114                           ;	Watchdog Timer Postscale Select bits
  8115                           ;	WDTPS = 0xF, unprogrammed default
  8116   300003                     	org	3145731
  8117   300003  3C                 	db	60
  8118                           tosu	equ	0xFFF
  8119                           tosh	equ	0xFFE
  8120                           tosl	equ	0xFFD
  8121                           stkptr	equ	0xFFC
  8122                           pclatu	equ	0xFFB
  8123                           pclath	equ	0xFFA
  8124                           pcl	equ	0xFF9
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           indf0	equ	0xFEF
  8132                           postinc0	equ	0xFEE
  8133                           postdec0	equ	0xFED
  8134                           preinc0	equ	0xFEC
  8135                           plusw0	equ	0xFEB
  8136                           fsr0h	equ	0xFEA
  8137                           fsr0l	equ	0xFE9
  8138                           wreg	equ	0xFE8
  8139                           indf1	equ	0xFE7
  8140                           postinc1	equ	0xFE6
  8141                           postdec1	equ	0xFE5
  8142                           preinc1	equ	0xFE4
  8143                           plusw1	equ	0xFE3
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           bsr	equ	0xFE0
  8147                           indf2	equ	0xFDF
  8148                           postinc2	equ	0xFDE
  8149                           postdec2	equ	0xFDD
  8150                           preinc2	equ	0xFDC
  8151                           plusw2	equ	0xFDB
  8152                           fsr2h	equ	0xFDA
  8153                           fsr2l	equ	0xFD9
  8154                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    64
    Data        8
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     97     150
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), STR_1(CODE[17]), STR_2(CODE[17]), 

    moveDisplay$2732	PTR unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[6]), STR_11(CODE[1]), STR_4(CODE[5]), STR_5(CODE[5]), 
		 -> STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    moveDisplay@F6949	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[6]), STR_11(CODE[1]), STR_4(CODE[5]), STR_5(CODE[5]), 
		 -> STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(1) Largest target is 6
		 -> STR_10(CODE[6]), STR_11(CODE[1]), STR_4(CODE[5]), STR_5(CODE[5]), 
		 -> STR_6(CODE[4]), STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    S2284$buffer	PTR unsigned char  size(2) Largest target is 0

    S2284$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> moveDisplay@menuItem1(BANK0[17]), moveDisplay@menuItem2(BANK0[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[6]), STR_11(CODE[1]), 
		 -> STR_14(CODE[7]), STR_4(CODE[5]), STR_5(CODE[5]), STR_6(CODE[4]), 
		 -> STR_7(CODE[4]), STR_8(CODE[4]), STR_9(CODE[5]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 6
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_10(CODE[6]), STR_11(CODE[1]), 
		 -> STR_4(CODE[5]), STR_5(CODE[5]), STR_6(CODE[4]), STR_7(CODE[4]), 
		 -> STR_8(CODE[4]), STR_9(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_3(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_runDAC
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf
    ___cosdf->___fladd
    ___flmul->___xxtofl
    ___fladd->___fldiv
    _printf->_vfprintf
    ___fldiv->___flmul
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _main in BANK0

    _main->_runDAC
    _runDAC->_sinf
    _sinf->___rem_pio2f
    ___rem_pio2f->___flneg
    ___flneg->___cosdf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   82334
                                             93 COMRAM     2     2      0
                                             95 BANK0      2     2      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runDAC
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0   70346
                                             92 COMRAM     1     1      0
                                             84 BANK0     11    11      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   47455
                                             58 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   10901
                                             80 COMRAM     4     0      4
                                              0 BANK0     28    28      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   18851
                                             90 COMRAM     2     2      0
                                             28 BANK0     30    25      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     199
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     457
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5929
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     653
                                             24 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   10986
                                             80 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    5088
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    5150
                                             64 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3    9927
                                             52 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         46    45      1   11366
                                             71 COMRAM     3     2      1
                                              0 BANK0     43    43      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   10300
                                             52 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    9793
                                             47 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4    9198
                                             36 COMRAM    11     7      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    1635
                                             10 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     843
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     511
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     8      4    4709
                                             24 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3128
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1561
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1160
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2     461
                                              1 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      22
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      22
                                              1 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runDAC
     _SPI_write
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
         ___fladd
         ___flmul
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
         ___cosdf (ARG)
         ___fladd (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
           ___fladd
           ___flmul (ARG)
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRhhhh       36      0       0      37        0.0%
BITBIGSFRllllhl     2F      0       0      51        0.0%
BITBIGSFRhhllh      10      0       0      42        0.0%
BITBIGSFRllllhh     10      0       0      50        0.0%
BITBIGSFRhll         8      0       0      46        0.0%
BITBIGSFRllhh        7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      44        0.0%
BITBIGSFRllhl        6      0       0      48        0.0%
BITBIGSFRhlh         5      0       0      45        0.0%
BITBIGSFRhhlhhh      1      0       0      39        0.0%
BITBIGSFRhhlllh      1      0       0      43        0.0%
BITBIGSFRhhlhhl      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      49        0.0%
BITBIGSFRlllll       1      0       0      52        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F5      33        0.0%
DATA                 0      0      F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 28 00:26:42 2024

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        _C0 102D                          _C1 1029                          _C2 1025  
                        _C3 1021                          l33 2F64                          l36 3042  
                        l28 2F12                          l38 2FB6                          l82 36F8  
                        l91 3928                          _S1 100D                          l84 3706  
                        _S2 1009                          l85 3788                          l93 3936  
                        _S3 1005                          _S4 1001                          l95 3976  
                        l88 37A4                          l98 39C4                          l99 39C6  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l110 3E58  
                       l102 39D4                         l111 3E5A                         l120 3DA6  
                       l105 3E3C                         l114 3D74                         l108 3E4A  
                       l116 3D82                         l117 3D98                         l205 3E78  
                       l208 3E8A                         l226 36CA                         l229 3E34  
                       l181 29F4                         l503 3D04                         l192 3CA4  
                       l194 3CB2                         l178 29F2                         l195 3CB8  
                       l460 3868                         l197 3CC6                         l189 2A86  
                       l198 3CCA                         l526 35DE                         l473 3A84  
                       l811 25E6                         l813 2446                         l822 248C  
                       l824 2504                         l816 240A                         l825 24F2  
                       l930 3BA4                         l850 1D1C                         l907 3D70  
                       l843 1B26                         l932 3BC4                         l860 1E4C  
                       l852 1D94                         l757 1790                         l853 1D82  
                       l774 18AA                         l766 1A60                         l758 177E  
                       l927 3B62                         l935 33F4                         l783 197A  
                       l759 1744                         l847 1E8A                         l960 334A  
                       l784 1968                         l953 3298                         l946 34D8  
                       l891 315E                         l884 30C6                         l973 3B2A  
                       l965 3394                         l799 3C0A                         l887 3222  
                       l969 3B22                         l898 31BA                         l988 2840  
                       l998 3C4C                         _abs 3DDC                         _pad 3B2C  
              ___awmod@sign 0006                         wreg 0FE8                  _TXSTA1bits 0FAC  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                ___fltol@exp1 005A  
                      l1002 3DF6                        l1005 3E0E                        l1101 20AE  
                      l1102 224C                        l1032 3E74                        l1017 3922  
                      l1025 3C8C                        l1114 2CB8                        l1051 15A0  
                      ?_abs 0007                        l1119 3DDA                        l3011 35CE  
                      l3003 3592                        l1085 2EB6                        l3005 359E  
                      l3021 30D6                        l3111 2752                        l3103 271C  
                      l3007 35AE                        l3031 3114                        l3023 30EC  
                      l3015 3072                        l2401 3E78                        l3113 2774  
                      l3121 27D6                        l3105 2720                        l3009 35BE  
                      l3041 319C                        l3033 3146                        l3017 3082  
                      l3201 2220                        l3211 3926                        l2403 3E86  
                      l2411 3898                        l3123 27E6                        l3115 279E  
                      l3107 2742                        l3131 281A                        l3051 31F2  
                      l3043 31AA                        l3035 3148                        l3027 3100  
                      l3019 3090                        l3203 2238                        l3221 395E  
                      l3213 3926                        l2501 3A58                        l2413 38B6  
                      l2405 386A                        l2421 3C5A                        l3117 27C8  
                      l3109 274A                        l3061 25E8                        l3053 3202  
                      l3045 31C8                        l3037 3154                        l3029 3108  
                      l3141 3DCA                        l3301 1360                        l3231 3980  
                      l3223 3970                        l3215 3938                        l2503 3A5E  
                      l2415 38EC                        l2407 387C                        l2423 3C6C  
                      l3127 280E                        l3071 262C                        l3063 260A  
                      l3151 3C28                        l3055 3210                        l3047 31CA  
                      l3039 3190                        l3145 3E38                        l3241 3D96  
                      l3233 39B2                        l3225 397C                        l3217 3944  
                      l2441 37C4                        l2433 37A6                        l2505 3A64  
                      l2409 388E                        l2425 3C70                        l2521 3B6E  
                      l2513 3B2C                        l3073 2630                        l3081 2662  
                      l3065 2612                        l3153 3C44                        l3401 22F0  
                      l2601 16CE                        l3161 2CBA                        l3057 3212  
                      l3049 31CE                        l3137 3DA8                        l3321 144C  
                      l3235 39B4                        l3219 3954                        l2451 37F8  
                      l2443 37D2                        l2435 37AA                        l2507 3A74  
                      l2531 3DEA                        l2419 3C4E                        l2523 3B82  
                      l2515 3B3C                        l2427 3E10                        l3091 26AA  
                      l3083 2672                        l3075 263C                        l3067 2620  
                      l3147 3C0C                        l3243 3C90                        l3411 2330  
                      l3403 2300                        l2603 16D2                        l2611 16E2  
                      l3139 3DC8                        l3171 1EC4                        l3315 13D0  
                      l3251 10A8                        l3237 3D72                        l2461 3832  
                      l2453 3800                        l2445 37DA                        l2437 37B8  
                      l2509 3A7C                        l2525 3B86                        l2517 3B4C  
                      l2429 3E2C                        l3093 26C6                        l3085 2686  
                      l3069 2624                        l3149 3C14                        l3245 3C9E  
                      l3501 25DC                        l3413 2340                        l3421 2360  
                      l3405 2302                        l2621 1752                        l2613 16E6  
                      l2605 16D6                        l2541 15CE                        l2533 15A2  
                      l3181 1FF0                        l3173 1EE2                        l3165 1E8C  
                      l3157 2A88                        l3341 151E                        l3333 14AE  
                      l3317 13E0                        l3309 1398                        l3325 1474  
                      l3261 1108                        l3253 10BE                        l3511 36DA  
                      l3239 3D84                        l2471 3858                        l2463 383A  
                      l2455 3808                        l2447 37DE                        l2439 37C0  
                      l2527 3BB4                        l2519 3B5A                        l3095 26E2  
                      l3087 2696                        l3079 2644                        l3247 3CA0  
                      l3431 239E                        l3423 2370                        l3415 2348  
                      l3407 230A                        l2703 198A                        l2711 19E0  
                      l2631 177C                        l2623 175E                        l2615 1710  
                      l2607 16DA                        l2551 1608                        l2543 15DE  
                      l2535 15AE                        l3183 2050                        l3175 1F06  
                      l3191 20BA                        l3167 1EAC                        l3335 14D2  
                      l3351 1582                        l3327 148A                        l3319 1418  
                      l3271 117C                        l3255 10C0                        l3521 3786  
                      l3513 36E6                        l2473 3860                        l2465 383C  
                      l2457 3816                        l2449 37E6                        l2481 39E8  
                      l2529 3DDC                        l2801 332C                        l3097 26FA  
                      l3089 26A0                        l3361 3D44                        l3441 23E6  
                      l3433 23AE                        l3425 2370                        l3417 234C  
                      l3409 231A                        l3353 3E5C                        l2721 1A32  
                      l2713 19F0                        l2705 1996                        l2641 17D2  
                      l2633 179E                        l2625 1762                        l2617 172C  
                      l2609 16DE                        l2561 1636                        l2553 160E  
                      l2545 15EE                        l2537 15BC                        l3193 20DE  
                      l3185 2060                        l3177 1F72                        l3169 1EC2  
                      l3345 1546                        l3337 14F6                        l3329 149A  
                      l3281 1220                        l3273 11B0                        l3257 10DE  
                      l3265 1130                        l3249 1098                        l3601 2A1E  
                      l3523 3796                        l3515 36E8                        l2467 3842  
                      l2459 381C                        l2491 3A1C                        l2483 39F0  
                      l2811 3376                        l2803 3330                        l3099 2704  
                      l3363 3D4C                        l3531 3610                        l3451 2434  
                      l3443 23FA                        l3435 23BE                        l3371 224E  
                      l3355 3E60                        l2731 1A50                        l2723 1A38  
                      l2715 1A00                        l2707 19A4                        l2651 180C  
                      l2643 17E0                        l2635 17AE                        l2627 1770  
                      l2619 173C                        l2571 166A                        l2563 1638  
                      l2555 1620                        l2547 15F0                        l2539 15BE  
                      l3195 214A                        l3187 2092                        l3179 1F98  
                      l3291 12EC                        l3267 114E                        l3259 10F4  
                      l3611 2A4C                        l3603 2A24                        l3517 36F6  
                      l3509 36CC                        l2469 3848                        l2493 3A24  
                      l2485 39F4                        l2477 39D6                        l2741 33B6  
                      l2821 3AD4                        l2813 3A86                        l3365 3D54  
                      l3533 3616                        l3541 364C                        l3525 35E4  
                      l3461 247C                        l3453 2444                        l3445 2408  
                      l3437 23CE                        l3429 2384                        l3381 228A  
                      l3373 225A                        l2725 1A3A                        l2717 1A20  
                      l2709 19DE                        l2661 1878                        l2653 180E  
                      l2645 17EE                        l2629 1772                        l2581 16A6  
                      l2565 1648                        l2573 1672                        l2557 1622  
                      l2549 15F8                        l2901 1C76                        l3197 2170  
                      l3269 116C                        l3285 1248                        l3613 2A5A  
                      l3605 2A32                        l3621 2EB8                        l3519 3708  
                      l2495 3A2C                        l2487 3A02                        l2479 39DA  
                      l2751 33F0                        l2743 33C6                        l2735 3396  
                      l2823 3AF4                        l2815 3A8E                        l2807 335E  
                      l3367 3D66                        l3359 3D3C                        l3543 36AE  
                      l3535 3628                        l3527 35E8                        l3471 24BC  
                      l3463 248A                        l3455 2456                        l3447 2414  
                      l3439 23D6                        l3391 22BA                        l3383 229A  
                      l3375 2268                        l2727 1A40                        l2719 1A24  
                      l2671 18D0                        l2663 187A                        l2655 1818  
                      l2647 17FA                        l2639 17C2                        l2591 16BA  
                      l2583 16AA                        l2575 1682                        l2567 1658  
                      l2559 1628                        l2911 1D0C                        l2903 1CA0  
                      l2831 1A7C                        l3199 21C8                        l3287 1258  
                      l3279 11EC                        l3295 1314                        l3615 2A60  
                      l3607 2A38                        l3551 2842                        l3631 2EDE  
                      l3623 2EC6                        l2497 3A3A                        l2489 3A0A  
                      l2761 343E                        l2753 33FC                        l2745 33CC  
                      l2737 339A                        l2817 3AB0                        l2825 3AFC  
                      l2809 3372                        l3545 36BA                        l3529 35FE  
                      l3481 252E                        l3473 24EA                        l3457 246C  
                      l3465 249C                        l3449 2432                        l3393 22C0  
                      l3385 229C                        l3377 226A                        l2729 1A4E  
                      l2681 18FE                        l2665 188A                        l2649 17FE  
                      l2657 181E                        l2593 16BE                        l2585 16AE  
                      l2577 1694                        l2569 1668                        l2921 1D4C  
                      l2913 1D1A                        l2905 1CD6                        l2841 1AB4  
                      l2833 1A7E                        l3297 1332                        l3289 12A4  
                      l3617 2A64                        l3609 2A46                        l3561 2864  
                      l3553 2856                        l3633 2EEC                        l3641 2F30  
                      l3625 2ECA                        l2499 3A50                        l2771 349C  
                      l2763 3444                        l2755 3406                        l2747 33DC  
                      l2739 33AE                        l2819 3AB8                        l3547 36C6  
                      l3539 362E                        l3491 25A6                        l3483 2558  
                      l3467 24AA                        l3459 2472                        l3395 22CE  
                      l3379 227A                        l3387 22A4                        l2683 190C  
                      l2675 18E4                        l2691 192A                        l2659 1844  
                      l2667 189A                        l2595 16C2                        l2587 16B2  
                      l2579 16A2                        l2931 1DBE                        l2923 1D7A  
                      l2915 1D2C                        l2907 1CE4                        l2851 1AE0  
                      l2843 1AC4                        l2835 1A8E                        l2827 1A62  
                      l3299 1350                        l3619 2A74                        l3571 2882  
                      l3563 2866                        l3555 285E                        l3643 2F3E  
                      l3651 2F82                        l3635 2F04                        l3627 2ED0  
                      l2773 34AC                        l2757 340C                        l2765 3460  
                      l2749 33E8                        l2781 3224                        l3493 25C2  
                      l3477 2514                        l3485 255C                        l3469 24AE  
                      l3397 22D0                        l3389 22B4                        l2685 1914  
                      l2677 18EE                        l2669 18C0                        l2693 1938  
                      l2597 16C6                        l2589 16B6                        l2941 1E34  
                      l2933 1DE8                        l2917 1D3A                        l2909 1D02  
                      l2861 1B36                        l2853 1AF0                        l2845 1ACA  
                      l2837 1A9E                        l2829 1A6E                        l3581 28B8  
                      l3573 2884                        l3565 2878                        l3557 2860  
                      l3661 2FEC                        l3653 2F90                        l3645 2F56  
                      l3629 2ED4                        ?_pad 0011                        l2775 34B2  
                      l2767 347A                        l2759 343A                        l2783 323E  
                      l3495 25C6                        l3487 2576                        l3479 2520  
                      l3399 22E0                        l2695 193C                        l2687 1918  
                      l2679 18FC                        l2599 16CA                        l2943 1E50  
                      l2951 1E76                        l2927 1DA4                        l2935 1DEC  
                      l2919 1D3E                        l2871 1B70                        l2863 1B46  
                      l2855 1B00                        l2847 1AD0                        l2839 1AAE  
                      l3591 29C8                        l3583 28CA                        l3575 2886  
                      l3567 287E                        l3559 2862                        l3671 3056  
                      l3663 2FF0                        l3655 2FA8                        l3639 2F20  
                      l2777 34BE                        l2769 348C                        l2793 32BC  
                      l2785 324A                        l3497 25D4                        l3489 258C  
                      l2697 194A                        l2689 1928                        l2953 1E7A  
                      l2945 1E60                        l2937 1E06                        l2929 1DB0  
                      l2881 1BC2                        l2873 1B86                        l2857 1B10  
                      l2849 1ADE                        l3585 28D6                        l3577 28A2  
                      l3569 2880                        l3673 3064                        l3649 2F72  
                      l2795 32D0                        l2787 3256                        l3499 25DA  
                      l2699 1960                        l2947 1E6E                        l2939 1E1A  
                      l2891 1C08                        l2883 1BD0                        l2875 1B92  
                      l2867 1B5A                        l2859 1B16                        l2963 3CCC  
                      l2971 34DA                        l3595 29D4                        l3587 293E  
                      l3579 28B2                        l3659 2FC8                        l3667 2FFA  
                      l2797 32D4                        l2789 325A                        l2949 1E70  
                      l2893 1C22                        l2885 1BDC                        l2877 1BAA  
                      l2869 1B66                        l2965 3CE4                        l2957 3BC6  
                      l2981 3530                        l2973 34F0                        l3597 2A02  
                      l3589 2962                        l3669 3044                        l2799 32F6  
                      l2895 1C32                        l2887 1BEC                        l2879 1BB6  
                      l2967 3CF4                        l2959 3BD6                        l2983 3540  
                      l3599 2A10                        l2897 1C4E                        l2889 1BF8  
                      l2993 356A                        l2985 3544                        l2977 3504  
                      l2899 1C5A                        l2995 3574                        l2987 3552  
                      l2979 352E                        l2997 357E                        STR_1 1041  
                      STR_2 1052                        STR_3 1085                        STR_4 107B  
                      STR_5 1080                        STR_6 1092                        STR_7 108E  
                      STR_8 108A                        STR_9 1076                        u2100 38EC  
                      u2101 38E8                        u2110 3C8C                        u2111 3C88  
                      u2120 37B8                        u2200 3A1C                        u3000 1D90  
                      u2121 37B4                        u2201 3A18                        u3001 1D8C  
                      u2130 37D2                        u2210 3A3A                        u3010 1DA4  
                      u2131 37CE                        u2211 3A36                        u3011 1DA0  
                      u2140 37F8                        u2220 3A50                        u2060 3E86  
                      u2300 15CE                        u3020 1DBE                        u3100 3566  
                      u2141 37F4                        u2221 3A4C                        u2061 3E82  
                      u2301 15CA                        u3021 1DBA                        u3101 3562  
                      u2150 3816                        u2230 3A74                        u2070 387C  
                      u2310 15DE                        u3030 1E06                        u3110 358E  
                      u2151 3812                        u2231 3A70                        u2071 3878  
                      u2311 15DA                        u3031 1E02                        u3111 358A  
                      u2160 3832                        u2080 388E                        u2240 3B3C  
                      u2400 172A                        u2320 1620                        u3040 1E34  
                      u3120 35AE                        u3200 31BA                        u4000 2A86  
                      u2161 382E                        u2081 388A                        u2241 3B38  
                      u2321 161C                        u3041 1E30                        u3121 35AA  
                      u3201 31B6                        u4001 2A82                        u2170 3858  
                      u2090 38B6                        u2250 3B5A                        u2410 1752  
                      u2330 1636                        u3050 1E6E                        u3130 35BE  
                      u3210 31C8                        u4010 2EEC                        u2171 3854  
                      u2091 38B2                        u2251 3B56                        u2411 174E  
                      u2331 1632                        u3051 1E6A                        u3131 35BA  
                      u3211 31C4                        u4011 2EE8                        u2180 39E8  
                      u2260 3BA4                        u3300 2774                        u2500 188A  
                      u2420 1770                        u2340 1648                        u3060 3CE4  
                      u3220 3202                        u3140 3082                        u4100 3056  
                      u4020 2F12                        u2181 39E4                        u2261 3BA0  
                      u3301 2770                        u2501 1886                        u2421 176C  
                      u2341 1644                        u3061 3CE0                        u3221 31FE  
                      u3141 307E                        u4101 3052                        u4021 2F0E  
                      u2190 3A02                        u2270 3BB4                        u3310 279E  
                      u2510 18C0                        u2430 1790                        u2350 1658  
                      u3070 34F0                        u3230 3210                        u3150 3090  
                      u4030 2F20                        u2191 39FE                        u2271 3BB0  
                      u3311 279A                        u2511 18BC                        u2431 178C  
                      u2351 1654                        u3071 34EC                        u3231 320C  
                      u3151 308C                        u4031 2F1C                        u2280 3DEA  
                      u3320 27C8                        u3240 260A                        u2600 198A  
                      u2520 18D0                        u2440 179E                        u2360 1694  
                      u3080 3524                        u3160 30EC                        u3400 2060  
                      u4040 2F3E                        u2281 3DE6                        u3321 27C4  
                      u3241 2606                        u2601 1986                        u2521 18CC  
                      u2441 179A                        u2361 1690                        u3161 30E8  
                      u3401 205C                        u4041 2F3A                        u3330 27E6  
                      u3250 2672                        u2610 19A4                        u2530 18FC  
                      u2450 17AE                        u2370 16A2                        u2290 15BC  
                      u3090 3552                        u3170 3142                        u3410 2248  
                      u4050 2F64                        u3331 27E2                        u3251 266E  
                      u2611 19A0                        u2531 18F8                        u2451 17AA  
                      u2371 169E                        u2291 15B8                        u3091 354E  
                      u3171 313E                        u3411 2244                        u4051 2F60  
                      u3340 3E4A                        u3420 3936                        u2700 33C6  
                      u3260 2696                        u3500 3CB2                        u2620 19DE  
                      u2540 190C                        u2460 17E0                        u2380 1710  
                      u3180 318C                        u4060 2F72                        u3341 3E46  
                      u3421 3932                        u2701 33C2                        u3261 2692  
                      u3501 3CAE                        u2621 19DA                        u2541 1908  
                      u2461 17DC                        u2381 170C                        u3085 351A  
                      u3181 3188                        u4061 2F6E                        u4117 2EF6  
                      u3350 3E58                        u3430 3954                        u2710 33DC  
                      u3270 26C6                        u3510 3CC6                        u2630 19F0  
                      u2550 1928                        u2470 17EE                        u2390 1728  
                      u3190 31AA                        u4070 2F90                        u3351 3E54  
                      u3431 3950                        u2711 33D8                        u3271 26C2  
                      u3511 3CC2                        u2631 19EC                        u2551 1924  
                      u2471 17EA                        u2391 1722                        u3191 31A6  
                      u4071 2F8C                        u4127 2F48                        u3440 3970  
                      u2720 347A                        u2800 32F2                        u3280 26E2  
                      u3360 3C44                        u2640 1A00                        u2560 1938  
                      u2480 180C                        u3600 1332                        u3520 10BA  
                      u4080 2FB6                        u3441 396C                        u2721 3476  
                      u2801 32EE                        u3281 26DE                        u3361 3C40  
                      u2641 19FC                        u2561 1934                        u2481 1808  
                      u3601 132E                        u3521 10B4                        u4081 2FB2  
                      u4137 2F9A                        u3450 39AE                        u2730 348C  
                      u2810 3318                        u3290 2742                        u2650 1A20  
                      u2570 194A                        u2490 1844                        u3370 1EBE  
                      u3610 1350                        u3530 10BC                        u4090 2FC4  
                      u2731 3488                        u3291 273E                        u2651 1A1C  
                      u2571 1946                        u2491 1840                        u3371 1EB8  
                      u3611 134C                        u4147 2A6A                        u4091 2FC0  
                      u3460 39C4                        u2740 349C                        u2820 334A  
                      u3700 22F0                        u2660 1A32                        u2580 1960  
                      u2900 1ADE                        u3380 1EC0                        u3620 1360  
                      u3540 10DE                        u4157 36EE                        u3461 39C0  
                      u2741 3498                        u2821 3346                        u3701 22EC  
                      u2661 1A2E                        u2581 195C                        u2901 1ADA  
                      u3621 135C                        u3541 10DA                        u3470 39D4  
                      u2750 34AC                        u2830 335A                        u3710 2330  
                      u2670 1A4E                        u2590 1976                        u2910 1AF0  
                      u3390 1EE2                        u3630 13E0                        u3550 10F4  
                      u4167 379C                        u3471 39D0                        u2751 34A8  
                      u2831 3356                        u3711 232C                        u2671 1A4A  
                      u2591 1972                        u2911 1AEC                        u3391 1EDE  
                      u3631 13DC                        u3551 10F0                        u3480 3D82  
                      u2680 33AA                        u2840 3394                        u2760 323E  
                      u3800 24BC                        u3720 2370                        u2920 1B00  
                      u3640 148A                        u3560 114E                        u3481 3D7E  
                      u3457 39A4                        u2681 33A4                        u2841 3390  
                      u2817 330E                        u2761 323A                        u3801 24B8  
                      u3721 236C                        u2921 1AFC                        u3641 1486  
                      u3561 114A                        u3490 3DA6                        u2690 33AC  
                      u2850 3AB0                        u2770 3288                        u3810 24EA  
                      u3730 23E6                        u3650 2268                        u2930 1B36  
                      u3570 116C                        u3491 3DA2                        u2851 3AAC  
                      u3811 24E6                        u3731 23E2                        u3651 2264  
                      u2931 1B32                        u3571 1168                        u2860 3B22  
                      u2780 3298                        u3820 2500                        u3740 2408  
                      u3660 227A                        u2940 1B46                        u3580 117C  
                      u2861 3B1E                        u2781 3294                        u3901 35F2  
                      u3821 24FC                        u3741 2404                        u3661 2276  
                      u2941 1B42                        u3581 1178                        u2790 32B8  
                      u3910 3610                        u3830 2514                        u3750 2432  
                      u3670 228A                        u2950 1CC0                        u2870 1A7C  
                      u3590 1258                        u2791 32B4                        u3911 360C  
                      u3831 2510                        u3751 242E                        u3671 2286  
                      u2871 1A78                        u3591 1254                        u3920 3628  
                      u3840 252E                        u3760 2456                        u3680 22CE  
                      u2960 1D1A                        u2880 1A8E                        u2777 327E  
                      u3921 3624                        u3841 252A                        u3761 2452  
                      u3681 22CA                        u2961 1D16                        u2881 1A8A  
                      u3850 2576                        u3770 246C                        u3690 22E0  
                      u2970 1D3A                        u2890 1A9E                        u3930 28B2  
                      u3851 2572                        u3771 2468                        u3691 22DC  
                      u2971 1D36                        u2955 1CB6                        u2891 1A9A  
                      u3931 28AE                        u3860 25A6                        u3780 248A  
                      u2980 1D4C                        u3940 28CA                        u3861 25A2  
                      u3781 2486                        u2981 1D48                        u3941 28C6  
                      u3870 25D4                        u3790 24AA                        u2990 1D7A  
                      u3950 2A02                        u3871 25D0                        u3791 24A6  
                      u2991 1D76                        u3951 29FE                        u3880 3706  
                      u3960 2A1E                        u3881 3702                        u3961 2A1A  
                      u3890 3796                        u3970 2A32                        u3891 3792  
                      u3971 2A2E                        u3980 2A46                        u3981 2A42  
                      u3990 2A5A                        u3991 2A56                        abs@a 0007  
                      _dbuf 00CE                        _half 101D                        _main 2EB8  
                      _dtoa 3396                        _prec 00CB                        _sinf 1098  
                      pad@i 0017                        pad@p 0014                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _stoa 3224  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
           ___fldiv@new_exp 0039                ___param_bank 0000              _LCD_ShowString 3924  
                     ??_abs 0009                       ??_pad 0016            __end_of_LCD_Init 37A6  
          __end_of_LCD_Send 3E5C               ___fltol@sign1 0059             __end_of___fladd 1A62  
                     ?_main 0001                       ?_dtoa 0019             __end_of___fldiv 25E8  
           __end_of___awdiv 386A             __end_of___cosdf 2EB8             __end_of___flneg 3D06  
                     STR_10 106A                       STR_11 1089                       STR_12 1070  
                     STR_13 1071                       STR_14 1063             __end_of___awmod 3A86  
                     ?_sinf 009A             __end_of___flmul 1E8C             __end_of___flsub 3C0C  
           __end_of___fltol 35E0                       ?_stoa 000B             ___awdiv@divisor 0003  
           __end_of___sindf 2CBA                ___sindf$2740 0070                ___sindf$2738 0068  
              ___sindf$2739 006C             ___awdiv@counter 0005                vfpfcnvrt@fmt 0027  
                     _TX1IF 7CF4             __end_of_pio2_1t 1015                       _fabsf 3DA8  
                     _flags 00CD         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 386A                       _fputs 3C4E                       pad@fp 0011  
                     _width 00C9             __end_of_invpio2 101D                       _putch 3E76  
                     dtoa@d 001B                       dtoa@i 0023                       dtoa@p 0021  
                     dtoa@s 0022                       dtoa@w 001F                       tablat 0FF5  
                     sinf@n 00A6                       sinf@x 009A                       sinf@y 00AC  
                     plusw1 0FE3                       plusw2 0FDB                       stoa@l 0017  
                     stoa@p 0011                       stoa@s 000D                       stoa@w 0013  
                     status 0FD8             __end_of_sprintf 3D72             __initialization 3D06  
    __end_of_LCD_ShowString 39D6                __end_of_half 1021                __end_of_main 3070  
              __end_of_dtoa 34DA                __end_of_sinf 15A2                __end_of_stoa 3396  
              LCD_Send@data 0001                      ??_main 005E                      ??_dtoa 001D  
                    ??_sinf 005D                      ??_stoa 000F           __end_of_LCD_Clear 3DA8  
             __activetblptr 0002  __end_of_read_prec_or_width 3B2C                ?_moveDisplay 0048  
                    ?_fabsf 0001                      ?_fputc 0002                      ?_fputs 000B  
                    _ADRESH 0FC4            ___awdiv@dividend 0001                      ?_putch 0001  
                    _GODONE 7E11               ___rem_pio2f@n 0096               ___rem_pio2f@t 0092  
             ___rem_pio2f@x 007C               ___rem_pio2f@y 0080               vfpfcnvrt@done 002F  
                    _SPBRG1 0FAF                      _SSP1IF 7CF3                      _SSP2IF 7D27  
                    _TXREG1 0FAD            __end_of___xxtofl 3224                vfprintf@cfmt 0034  
           ?_LCD_ShowString 0002                      _s1pio2 103D                      _s2pio2 1039  
                    _s3pio2 1035                      _s4pio2 1031                   ??___fladd 0049  
                    ___wmul 3E10                   ??___fldiv 0030                   ??___awdiv 0005  
                 ??___cosdf 0055                   ??___flneg 0055                   ??___awmod 0005  
                 ??___flmul 0017                   ??___flsub 0059                   ??___fltol 0055  
                 ??___sindf 0055                      _pio2_1 1015                      fabsf@u 0005  
                    fabsf@x 0001        read_prec_or_width@ap 0008                      clear_0 3D2C  
          ___awdiv@quotient 0007                      _runDAC 2842             ___awmod@divisor 0003  
                    isa$std 0001             ___awmod@counter 0005                      _printf 3E5C  
                    pad@buf 0013                      dtoa@fp 0019                      fputc@c 0002  
                    fputs@c 000E                      fputs@i 000F                      fputs@s 000B  
              __mediumconst 0000                      sinf@ux 00B0                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 3CCC  
                    stoa@cp 0015                      stoa@fp 000B            __end_of_vfprintf 3C4E  
                 ??_sprintf 003B                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  __accesstop 0060     __end_of__initialization 3D32  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0078  
             ___rparam_used 0001                  ___fltol@f1 0051              __pcstackCOMRAM 0001  
              __pidataBANK0 3E8C               __end_of_fabsf 3DDC               __end_of_fputc 3924  
             __end_of_fputs 3C8E               __end_of_putch 3E8C                  __end_of_C0 1031  
                __end_of_C1 102D                  __end_of_C2 1029                  __end_of_C3 1025  
                __end_of_S1 1011                  __end_of_S2 100D                  __end_of_S3 1009  
                __end_of_S4 1005                     ??_fabsf 0005                     ??_fputc 0006  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 00C1  
                ??_LCD_Init 0002                  ??_LCD_Send 0001                SPI_write@LSB 0002  
              SPI_write@MSB 0001                     ?___wmul 0001               ??___rem_pio2f 005B  
                   ?_runDAC 0001                     ?_printf 0035                   ?___xxtofl 0001  
            ___rem_pio2f@fn 008E              ___rem_pio2f@ty 0081              ___rem_pio2f@ux 008A  
                   _SSP2ADD 0F6E                     _SSP1BUF 0FC9                     _SSP2BUF 0F6F  
           LCD_ShowString@i 0007                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 15A2                     ___fldiv 224E                     ___awdiv 37A6  
                   ___cosdf 2CBA                     ___flneg 3CCC                     ___awmod 39D6  
                   ___flmul 1A62                     ___flsub 3BC6                     ___fltol 34DA  
                   ___sindf 2A88                   ?_vfprintf 0030                __psmallconst 1000  
            main@setUpAgain 00BF                     __pcinit 3D06                     __ramtop 1000  
                   __ptext0 2EB8                     __ptext1 2842                     __ptext2 1098  
                   __ptext3 2A88                     __ptext4 1E8C                     __ptext5 3DA8  
                   __ptext6 3070                     __ptext7 34DA                     __ptext8 3BC6  
                   __ptext9 3CCC                     _pio2_1t 1011       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005         __end_of___rem_pio2f 224E            ___awmod@dividend 0001  
                   _invpio2 1019                   _LCD_Clear 3D72                     _sprintf 3D3C  
          ___rem_pio2f$2737 0085        end_of_initialization 3D32                     fputc@fp 0004  
          ___rem_pio2f@F526 00C5               __Lmediumconst 0000                     fputs@fp 000C  
          ??_LCD_ShowString 0004          _read_prec_or_width 3A86       LCD_ShowString@lineNum 0006  
          ___rem_pio2f@sign 0089           __end_of_vfpfcnvrt 2842                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 002A  
                ??_vfprintf 0034                   _PORTAbits 0F80                   _PORTCbits 0F82  
               ___fladd@grs 0050               ___xxtofl@sign 0009                   _TRISAbits 0F92  
                 _TRISBbits 0F93                   _TRISCbits 0F94                   _TRISDbits 0F95  
                ?_LCD_Clear 0001        ??_read_prec_or_width 0009                 ___fldiv@grs 003B  
               ___fldiv@rem 0034                   _SPI_write 3C8E                 ___flmul@grs 001C  
            __end_of_s1pio2 1041              __end_of_s2pio2 103D              __end_of_s3pio2 1039  
            __end_of_s4pio2 1035                 vfpfcnvrt@ap 0028                 vfpfcnvrt@cp 002E  
               ___rem_pio2f 1E8C                 vfpfcnvrt@fp 0025              __end_of___wmul 3E36  
            __end_of_pio2_1 1019        moveDisplay@menuItem1 0060        moveDisplay@menuItem2 0071  
      moveDisplay@menuItems 0082              __end_of_runDAC 2A88              __end_of_printf 3E76  
       start_initialization 3D06                 __end_of_abs 3E10                 __end_of_pad 3BC6  
                ?_SPI_write 0001                 vfprintf@fmt 0032                    ??___wmul 0005  
               __pdataBANK0 00EE                    ??_runDAC 005D                    ??_printf 0038  
                 ___fladd@a 0045                   ___fladd@b 0041                   ___fldiv@a 002C  
                 ___fldiv@b 0028                   ___cosdf@r 0060                   ___cosdf@w 0070  
                 ___cosdf@x 0051                   ___cosdf@z 0074                   ___flmul@a 0013  
                 ___flmul@b 000F                   ___flsub@a 0055                   ___flsub@b 0051  
             __pcstackBANK0 0060                 ??_LCD_Clear 0002                   ___sindf@r 0060  
                 ___sindf@s 0074                   ___sindf@w 0064                   ___sindf@x 0051  
                 ___sindf@z 0078                   _dtoa$2363 001D               SPI_write@data 0003  
                  ?___fladd 0041                    ?___fldiv 0028                    ?___awdiv 0001  
                  ?___cosdf 0051                    ?___flneg 0078                    ?___awmod 0001  
                  ?___flmul 000F                    ?___flsub 0051                    ?___fltol 0051  
                  ?___sindf 0051                   fabsf@F465 00C1                 __smallconst 1000  
             ??_moveDisplay 0049             runDAC@keepState 00BC                    ?_sprintf 0035  
                 _sinf$2733 00A8                   _sinf$2486 009E                   _sinf$2487 00A2  
               ??_SPI_write 0001              runDAC@DACindex 00BE                    _LCD_Init 36CC  
                  _LCD_Send 3E36              ___wmul@product 0005                    _LATAbits 0F89  
                  _LATBbits 0F8A                   _vfpfcnvrt 25E8                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0001                   main@menuI 00C0  
          moveDisplay@F6949 00EE                   copy_data0 3D1A         __end_of_moveDisplay 36CC  
          moveDisplay@menuI 008A            moveDisplay@where 0048                    __Hrparam 0000  
                vfprintf@ap 0033                    __Lrparam 0000                  vfprintf@fp 0030  
              ?___rem_pio2f 007C                  ?_vfpfcnvrt 0025         runDAC@selectModeDAC 00BD  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELDbits 0F3B  
                sprintf@fmt 0036                    ___xxtofl 3070                    __ptext10 2CBA  
                  __ptext11 1A62                    __ptext20 3224                    __ptext12 15A2  
                  __ptext21 3A86                    __ptext13 3E5C                    __ptext30 37A6  
                  __ptext22 3E10                    __ptext14 224E                    __ptext31 3924  
                  __ptext23 3396                    __ptext15 3C8E                    __ptext32 3D72  
                  __ptext24 3B2C                    __ptext16 35E0                    __ptext33 36CC  
                  __ptext25 3C4E                    __ptext17 3D3C                    __ptext34 3E36  
                  __ptext26 386A                    __ptext18 3C0C                    __ptext27 3E76  
                  __ptext19 25E8                    __ptext28 3DDC                    __ptext29 39D6  
              _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C                _SSP2CON2bits 0F6B  
                  isa$xinst 0000                 _runDAC$2730 00B4                 _runDAC$2731 00B8  
                  _vfprintf 3C0C                   printf@fmt 0035                _SSP1STATbits 0FC7  
              _SSP2STATbits 0F6D                   putch@data 0001                 _moveDisplay 35E0  
                 sprintf@ap 003B                  _RCSTA1bits 0FAB                    sinf@sign 00A7  
                  printf@ap 0038                 ??_vfpfcnvrt 0029      LCD_ShowString@textData 0002  
                  sprintf@f 003C                    sprintf@s 0035               ___fladd@signs 004D  
              ___fladd@aexp 004E                ___fladd@bexp 004F                ___cosdf$2734 0064  
              ___cosdf$2735 0068                ___cosdf$2736 006C  
