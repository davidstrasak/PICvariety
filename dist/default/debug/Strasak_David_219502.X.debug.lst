

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 21:33:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 12/10/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F46K22 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataBANK1
   120   00518C                     __pidataBANK1:
   121                           	callstack 0
   122                           
   123                           ;initializer for moveDisplay@F6965
   124   00518C  DC                 	db	low STR_17
   125   00518D  FF                 	db	high STR_17
   126   00518E  E1                 	db	low STR_18
   127   00518F  FF                 	db	high STR_18
   128   005190  FB                 	db	low STR_19
   129   005191  FF                 	db	high STR_19
   130   005192  F7                 	db	low STR_20
   131   005193  FF                 	db	high STR_20
   132   005194  F3                 	db	low STR_21
   133   005195  FF                 	db	high STR_21
   134   005196  D7                 	db	low STR_22
   135   005197  FF                 	db	high STR_22
   136   005198  C6                 	db	low STR_23
   137   005199  FF                 	db	high STR_23
   138   00519A  D6                 	db	low (STR_28+4)
   139   00519B  FF                 	db	high (STR_28+4)
   140                           
   141                           ;initializer for runGPIO@F6993
   142   00519C  20                 	db	32
   143   00519D  30                 	db	48
   144   00519E  18                 	db	24
   145   00519F  0C                 	db	12
   146   0051A0  06                 	db	6
   147   0051A1  03                 	db	3
   148   0051A2  01                 	db	1
   149   0051A3  03                 	db	3
   150   0051A4  06                 	db	6
   151   0051A5  0C                 	db	12
   152   0051A6  18                 	db	24
   153   0051A7  30                 	db	48
   154                           
   155                           ;initializer for runGPIO@F6975
   156   0051A8  6E                 	db	low _LED1_Control
   157   0051A9  52                 	db	high _LED1_Control
   158   0051AA  60                 	db	low _LED2_Control
   159   0051AB  52                 	db	high _LED2_Control
   160   0051AC  52                 	db	low _LED3_Control
   161   0051AD  52                 	db	high _LED3_Control
   162   0051AE  44                 	db	low _LED4_Control
   163   0051AF  52                 	db	high _LED4_Control
   164   0051B0  36                 	db	low _LED5_Control
   165   0051B1  52                 	db	high _LED5_Control
   166   0051B2  7C                 	db	low _LED6_Control
   167   0051B3  52                 	db	high _LED6_Control
   168                           
   169                           	psect	mediumconst
   170   00FE7A                     __pmediumconst:
   171                           	callstack 0
   172   00FE7A  00                 	db	0
   173   00FE7B  6C3C               	dw	27708
   174   00FE7D  3636               	dw	13878
   175   00FE7F                     __end_of_S4:
   176                           	callstack 0
   177   00FE7F  07CF               	dw	1999
   178   00FE81  B950               	dw	47440
   179   00FE83                     __end_of_S3:
   180                           	callstack 0
   181   00FE83  8884               	dw	34948
   182   00FE85  3C08               	dw	15368
   183   00FE87                     __end_of_S2:
   184                           	callstack 0
   185   00FE87  AAAB               	dw	43691
   186   00FE89  BE2A               	dw	48682
   187   00FE8B                     __end_of_S1:
   188                           	callstack 0
   189   00FE8B  85A3               	dw	34211
   190   00FE8D  3288               	dw	12936
   191   00FE8F                     __end_of_pio2_1t:
   192                           	callstack 0
   193   00FE8F  0FDA               	dw	4058
   194   00FE91  3FC9               	dw	16329
   195   00FE93                     __end_of_pio2_1:
   196                           	callstack 0
   197   00FE93  F983               	dw	63875
   198   00FE95  3F22               	dw	16162
   199   00FE97                     __end_of_invpio2:
   200                           	callstack 0
   201   00FE97  0000               	dw	0
   202   00FE99  3F00               	dw	16128
   203   00FE9B                     __end_of_half:
   204                           	callstack 0
   205   00FE9B  9A17               	dw	39447
   206   00FE9D  37CC               	dw	14284
   207   00FE9F                     __end_of_C3:
   208                           	callstack 0
   209   00FE9F  043F               	dw	1087
   210   00FEA1  BAB6               	dw	47798
   211   00FEA3                     __end_of_C2:
   212                           	callstack 0
   213   00FEA3  AA9F               	dw	43679
   214   00FEA5  3D2A               	dw	15658
   215   00FEA7                     __end_of_C1:
   216                           	callstack 0
   217   00FEA7  0000               	dw	0
   218   00FEA9  BF00               	dw	48896
   219   00FEAB                     __end_of_C0:
   220                           	callstack 0
   221   00FEAB  0FDB               	dw	4059
   222   00FEAD  40C9               	dw	16585
   223   00FEAF                     __end_of_s4pio2:
   224                           	callstack 0
   225   00FEAF  CBE4               	dw	52196
   226   00FEB1  4096               	dw	16534
   227   00FEB3                     __end_of_s3pio2:
   228                           	callstack 0
   229   00FEB3  0FDB               	dw	4059
   230   00FEB5  4049               	dw	16457
   231   00FEB7                     __end_of_s2pio2:
   232                           	callstack 0
   233   00FEB7  0FDB               	dw	4059
   234   00FEB9  3FC9               	dw	16329
   235   00FEBB                     __end_of_s1pio2:
   236                           	callstack 0
   237   000000                     _ADRESL	set	4035
   238   000000                     _RCREG1	set	4014
   239   000000                     _ANSELCbits	set	3898
   240   000000                     _TXREG1	set	4013
   241   000000                     _ADRESH	set	4036
   242   000000                     _LATBbits	set	3978
   243   000000                     _TXSTA1bits	set	4012
   244   000000                     _ANSELBbits	set	3897
   245   000000                     _TRISBbits	set	3987
   246   000000                     _SSP2STATbits	set	3949
   247   000000                     _SSP2ADD	set	3950
   248   000000                     _ANSELDbits	set	3899
   249   000000                     _PORTAbits	set	3968
   250   000000                     _PORTCbits	set	3970
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _ANSELAbits	set	3896
   254   000000                     _TRISAbits	set	3986
   255   000000                     _TRISCbits	set	3988
   256   000000                     _TMR2IE	set	31977
   257   000000                     _TMR2IF	set	31985
   258   000000                     _RC1IF	set	31989
   259   000000                     _RC1IE	set	31981
   260   000000                     _TMR1ON	set	32360
   261   000000                     _TMR1IF	set	31984
   262   000000                     _GIE	set	32663
   263   000000                     _TX1IF	set	31988
   264   000000                     _GODONE	set	32273
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TMR1IE	set	31976
   267   000000                     _SSP1IF	set	31987
   268   000000                     _SSP2IF	set	32039
   269   000000                     _LATAbits	set	3977
   270   000000                     _CCPTMRS0bits	set	3913
   271   000000                     _ANSELEbits	set	3900
   272   000000                     _SSP2CON2bits	set	3947
   273   000000                     _SSP2CON1bits	set	3948
   274   000000                     _SSP2BUF	set	3951
   275   000000                     _RCSTA1bits	set	4011
   276   000000                     _SPBRG1	set	4015
   277   000000                     _ADCON2bits	set	4032
   278   000000                     _SSP1CON1bits	set	4038
   279   000000                     _SSP1BUF	set	4041
   280   000000                     _SSP1STATbits	set	4039
   281   000000                     _ADCON0bits	set	4034
   282   000000                     _PR2	set	4027
   283   000000                     _TMR2ON	set	32210
   284   000000                     _T1CONbits	set	4045
   285   000000                     _TMR1	set	4046
   286   000000                     _PEIE	set	32662
   287   000000                     _CCP1CONbits	set	4029
   288   000000                     _CCPR1L	set	4030
   289   00FEBB                     STR_29:
   290   00FEBB  25                 	db	37
   291   00FEBC  75                 	db	117	;'u'
   292   00FEBD  20                 	db	32
   293   00FEBE  20                 	db	32
   294   00FEBF  20                 	db	32
   295   00FEC0  20                 	db	32
   296   00FEC1  20                 	db	32
   297   00FEC2  20                 	db	32
   298   00FEC3  20                 	db	32
   299   00FEC4  20                 	db	32
   300   00FEC5  20                 	db	32
   301   00FEC6  20                 	db	32
   302   00FEC7  20                 	db	32
   303   00FEC8  20                 	db	32
   304   00FEC9  20                 	db	32
   305   00FECA  20                 	db	32
   306   00FECB  20                 	db	32
   307   00FECC  20                 	db	32
   308   00FECD  00                 	db	0
   309   00FECE                     STR_27:
   310   00FECE  50                 	db	80	;'P'
   311   00FECF  4F                 	db	79	;'O'
   312   00FED0  54                 	db	84	;'T'
   313   00FED1  31                 	db	49	;'1'
   314   00FED2  3A                 	db	58	;':'
   315   00FED3  25                 	db	37
   316   00FED4  2E                 	db	46
   317   00FED5  31                 	db	49	;'1'
   318   00FED6  66                 	db	102	;'f'
   319   00FED7  50                 	db	80	;'P'
   320   00FED8  4F                 	db	79	;'O'
   321   00FED9  54                 	db	84	;'T'
   322   00FEDA  32                 	db	50	;'2'
   323   00FEDB  3A                 	db	58	;':'
   324   00FEDC  25                 	db	37
   325   00FEDD  2E                 	db	46
   326   00FEDE  31                 	db	49	;'1'
   327   00FEDF  66                 	db	102	;'f'
   328   00FEE0  00                 	db	0
   329   00FEE1                     STR_32:
   330   00FEE1  53                 	db	83	;'S'
   331   00FEE2  6B                 	db	107	;'k'
   332   00FEE3  6F                 	db	111	;'o'
   333   00FEE4  72                 	db	114	;'r'
   334   00FEE5  65                 	db	101	;'e'
   335   00FEE6  3A                 	db	58	;':'
   336   00FEE7  20                 	db	32
   337   00FEE8  25                 	db	37
   338   00FEE9  75                 	db	117	;'u'
   339   00FEEA  20                 	db	32
   340   00FEEB  20                 	db	32
   341   00FEEC  20                 	db	32
   342   00FEED  20                 	db	32
   343   00FEEE  20                 	db	32
   344   00FEEF  20                 	db	32
   345   00FEF0  20                 	db	32
   346   00FEF1  20                 	db	32
   347   00FEF2  00                 	db	0
   348   00FEF3                     STR_30:
   349   00FEF3  25                 	db	37
   350   00FEF4  68                 	db	104	;'h'
   351   00FEF5  75                 	db	117	;'u'
   352   00FEF6  20                 	db	32
   353   00FEF7  20                 	db	32
   354   00FEF8  20                 	db	32
   355   00FEF9  20                 	db	32
   356   00FEFA  20                 	db	32
   357   00FEFB  20                 	db	32
   358   00FEFC  20                 	db	32
   359   00FEFD  20                 	db	32
   360   00FEFE  20                 	db	32
   361   00FEFF  20                 	db	32
   362   00FF00  20                 	db	32
   363   00FF01  20                 	db	32
   364   00FF02  20                 	db	32
   365   00FF03  00                 	db	0
   366   00FF04                     STR_33:
   367   00FF04  47                 	db	71	;'G'
   368   00FF05  41                 	db	65	;'A'
   369   00FF06  4D                 	db	77	;'M'
   370   00FF07  45                 	db	69	;'E'
   371   00FF08  20                 	db	32
   372   00FF09  4F                 	db	79	;'O'
   373   00FF0A  56                 	db	86	;'V'
   374   00FF0B  45                 	db	69	;'E'
   375   00FF0C  52                 	db	82	;'R'
   376   00FF0D  20                 	db	32
   377   00FF0E  20                 	db	32
   378   00FF0F  20                 	db	32
   379   00FF10  20                 	db	32
   380   00FF11  20                 	db	32
   381   00FF12  20                 	db	32
   382   00FF13  20                 	db	32
   383   00FF14  00                 	db	0
   384   00FF15                     STR_3:
   385   00FF15  42                 	db	66	;'B'
   386   00FF16  52                 	db	82	;'R'
   387   00FF17  3A                 	db	58	;':'
   388   00FF18  20                 	db	32
   389   00FF19  31                 	db	49	;'1'
   390   00FF1A  39                 	db	57	;'9'
   391   00FF1B  32                 	db	50	;'2'
   392   00FF1C  30                 	db	48	;'0'
   393   00FF1D  30                 	db	48	;'0'
   394   00FF1E  20                 	db	32
   395   00FF1F  20                 	db	32
   396   00FF20  20                 	db	32
   397   00FF21  20                 	db	32
   398   00FF22  20                 	db	32
   399   00FF23  20                 	db	32
   400   00FF24  20                 	db	32
   401   00FF25  00                 	db	0
   402   00FF26                     STR_12:
   403   00FF26  50                 	db	80	;'P'
   404   00FF27  72                 	db	114	;'r'
   405   00FF28  69                 	db	105	;'i'
   406   00FF29  70                 	db	112	;'p'
   407   00FF2A  72                 	db	114	;'r'
   408   00FF2B  61                 	db	97	;'a'
   409   00FF2C  76                 	db	118	;'v'
   410   00FF2D  69                 	db	105	;'i'
   411   00FF2E  74                 	db	116	;'t'
   412   00FF2F  20                 	db	32
   413   00FF30  20                 	db	32
   414   00FF31  20                 	db	32
   415   00FF32  20                 	db	32
   416   00FF33  20                 	db	32
   417   00FF34  20                 	db	32
   418   00FF35  20                 	db	32
   419   00FF36  00                 	db	0
   420   00FF37                     STR_1:
   421   00FF37  50                 	db	80	;'P'
   422   00FF38  6F                 	db	111	;'o'
   423   00FF39  7A                 	db	122	;'z'
   424   00FF3A  6F                 	db	111	;'o'
   425   00FF3B  72                 	db	114	;'r'
   426   00FF3C  21                 	db	33
   427   00FF3D  20                 	db	32
   428   00FF3E  48                 	db	72	;'H'
   429   00FF3F  61                 	db	97	;'a'
   430   00FF40  64                 	db	100	;'d'
   431   00FF41  21                 	db	33
   432   00FF42  21                 	db	33
   433   00FF43  21                 	db	33
   434   00FF44  20                 	db	32
   435   00FF45  20                 	db	32
   436   00FF46  20                 	db	32
   437   00FF47  00                 	db	0
   438   00FF48                     STR_10:
   439   00FF48  4C                 	db	76	;'L'
   440   00FF49  61                 	db	97	;'a'
   441   00FF4A  64                 	db	100	;'d'
   442   00FF4B  65                 	db	101	;'e'
   443   00FF4C  6E                 	db	110	;'n'
   444   00FF4D  69                 	db	105	;'i'
   445   00FF4E  20                 	db	32
   446   00FF4F  70                 	db	112	;'p'
   447   00FF50  6F                 	db	111	;'o'
   448   00FF51  74                 	db	116	;'t'
   449   00FF52  61                 	db	97	;'a'
   450   00FF53  6B                 	db	107	;'k'
   451   00FF54  75                 	db	117	;'u'
   452   00FF55  20                 	db	32
   453   00FF56  20                 	db	32
   454   00FF57  20                 	db	32
   455   00FF58  00                 	db	0
   456   00FF59                     STR_5:
   457   00FF59  5A                 	db	90	;'Z'
   458   00FF5A  6D                 	db	109	;'m'
   459   00FF5B  61                 	db	97	;'a'
   460   00FF5C  63                 	db	99	;'c'
   461   00FF5D  6B                 	db	107	;'k'
   462   00FF5E  6E                 	db	110	;'n'
   463   00FF5F  65                 	db	101	;'e'
   464   00FF60  74                 	db	116	;'t'
   465   00FF61  65                 	db	101	;'e'
   466   00FF62  20                 	db	32
   467   00FF63  42                 	db	66	;'B'
   468   00FF64  54                 	db	84	;'T'
   469   00FF65  4E                 	db	78	;'N'
   470   00FF66  32                 	db	50	;'2'
   471   00FF67  20                 	db	32
   472   00FF68  20                 	db	32
   473   00FF69  00                 	db	0
   474   00FF6A                     STR_8:
   475   00FF6A  52                 	db	82	;'R'
   476   00FF6B  42                 	db	66	;'B'
   477   00FF6C  30                 	db	48	;'0'
   478   00FF6D  2D                 	db	45
   479   00FF6E  41                 	db	65	;'A'
   480   00FF6F  32                 	db	50	;'2'
   481   00FF70  2C                 	db	44
   482   00FF71  20                 	db	32
   483   00FF72  42                 	db	66	;'B'
   484   00FF73  52                 	db	82	;'R'
   485   00FF74  3A                 	db	58	;':'
   486   00FF75  31                 	db	49	;'1'
   487   00FF76  39                 	db	57	;'9'
   488   00FF77  32                 	db	50	;'2'
   489   00FF78  30                 	db	48	;'0'
   490   00FF79  30                 	db	48	;'0'
   491   00FF7A  00                 	db	0
   492   00FF7B                     STR_7:
   493   00FF7B  56                 	db	86	;'V'
   494   00FF7C  6F                 	db	111	;'o'
   495   00FF7D  6C                 	db	108	;'l'
   496   00FF7E  74                 	db	116	;'t'
   497   00FF7F  79                 	db	121	;'y'
   498   00FF80  20                 	db	32
   499   00FF81  6E                 	db	110	;'n'
   500   00FF82  61                 	db	97	;'a'
   501   00FF83  20                 	db	32
   502   00FF84  50                 	db	80	;'P'
   503   00FF85  4F                 	db	79	;'O'
   504   00FF86  54                 	db	84	;'T'
   505   00FF87  65                 	db	101	;'e'
   506   00FF88  63                 	db	99	;'c'
   507   00FF89  68                 	db	104	;'h'
   508   00FF8A  3A                 	db	58	;':'
   509   00FF8B  00                 	db	0
   510   00FF8C                     STR_4:
   511   00FF8C  4B                 	db	75	;'K'
   512   00FF8D  6F                 	db	111	;'o'
   513   00FF8E  6E                 	db	110	;'n'
   514   00FF8F  65                 	db	101	;'e'
   515   00FF90  63                 	db	99	;'c'
   516   00FF91  20                 	db	32
   517   00FF92  2D                 	db	45
   518   00FF93  20                 	db	32
   519   00FF94  6E                 	db	110	;'n'
   520   00FF95  65                 	db	101	;'e'
   521   00FF96  77                 	db	119	;'w'
   522   00FF97  20                 	db	32
   523   00FF98  6C                 	db	108	;'l'
   524   00FF99  69                 	db	105	;'i'
   525   00FF9A  6E                 	db	110	;'n'
   526   00FF9B  65                 	db	101	;'e'
   527   00FF9C  00                 	db	0
   528   00FF9D                     STR_9:
   529   00FF9D  31                 	db	49	;'1'
   530   00FF9E  3A                 	db	58	;':'
   531   00FF9F  74                 	db	116	;'t'
   532   00FFA0  72                 	db	114	;'r'
   533   00FFA1  2C                 	db	44
   534   00FFA2  32                 	db	50	;'2'
   535   00FFA3  3A                 	db	58	;':'
   536   00FFA4  73                 	db	115	;'s'
   537   00FFA5  69                 	db	105	;'i'
   538   00FFA6  6E                 	db	110	;'n'
   539   00FFA7  2C                 	db	44
   540   00FFA8  33                 	db	51	;'3'
   541   00FFA9  3A                 	db	58	;':'
   542   00FFAA  70                 	db	112	;'p'
   543   00FFAB  69                 	db	105	;'i'
   544   00FFAC  6C                 	db	108	;'l'
   545   00FFAD  00                 	db	0
   546   00FFAE                     STR_13:
   547   00FFAE  20                 	db	32
   548   00FFAF  20                 	db	32
   549   00FFB0  20                 	db	32
   550   00FFB1  20                 	db	32
   551   00FFB2  20                 	db	32
   552   00FFB3  20                 	db	32
   553   00FFB4  20                 	db	32
   554   00FFB5  20                 	db	32
   555   00FFB6  20                 	db	32
   556   00FFB7  20                 	db	32
   557   00FFB8  20                 	db	32
   558   00FFB9  50                 	db	80	;'P'
   559   00FFBA  6F                 	db	111	;'o'
   560   00FFBB  7A                 	db	122	;'z'
   561   00FFBC  6F                 	db	111	;'o'
   562   00FFBD  72                 	db	114	;'r'
   563   00FFBE  00                 	db	0
   564   00FFBF                     STR_40:
   565   00FFBF  28                 	db	40
   566   00FFC0  6E                 	db	110	;'n'
   567   00FFC1  75                 	db	117	;'u'
   568   00FFC2  6C                 	db	108	;'l'
   569   00FFC3  6C                 	db	108	;'l'
   570   00FFC4  29                 	db	41
   571   00FFC5  00                 	db	0
   572   00FFC6                     STR_23:
   573   00FFC6  4D                 	db	77	;'M'
   574   00FFC7  55                 	db	85	;'U'
   575   00FFC8  53                 	db	83	;'S'
   576   00FFC9  49                 	db	73	;'I'
   577   00FFCA  43                 	db	67	;'C'
   578   00FFCB  00                 	db	0
   579   00FFCC                     STR_25:
   580   00FFCC  3E                 	db	62	;'>'
   581   00FFCD  25                 	db	37
   582   00FFCE  2D                 	db	45
   583   00FFCF  2A                 	db	42
   584   00FFD0  73                 	db	115	;'s'
   585   00FFD1  00                 	db	0
   586   00FFD2                     STR_28:
   587   00FFD2  25                 	db	37
   588   00FFD3  73                 	db	115	;'s'
   589   00FFD4  20                 	db	32
   590   00FFD5  0A                 	db	10
   591   00FFD6  00                 	db	0
   592   00FFD7                     STR_22:
   593   00FFD7  47                 	db	71	;'G'
   594   00FFD8  41                 	db	65	;'A'
   595   00FFD9  4D                 	db	77	;'M'
   596   00FFDA  45                 	db	69	;'E'
   597   00FFDB  00                 	db	0
   598   00FFDC                     STR_17:
   599   00FFDC  47                 	db	71	;'G'
   600   00FFDD  50                 	db	80	;'P'
   601   00FFDE  49                 	db	73	;'I'
   602   00FFDF  4F                 	db	79	;'O'
   603   00FFE0  00                 	db	0
   604   00FFE1                     STR_18:
   605   00FFE1  55                 	db	85	;'U'
   606   00FFE2  41                 	db	65	;'A'
   607   00FFE3  52                 	db	82	;'R'
   608   00FFE4  54                 	db	84	;'T'
   609   00FFE5  00                 	db	0
   610   00FFE6                     STR_16:
   611   00FFE6  25                 	db	37
   612   00FFE7  64                 	db	100	;'d'
   613   00FFE8  20                 	db	32
   614   00FFE9  0D                 	db	13
   615   00FFEA  00                 	db	0
   616   00FFEB                     STR_34:
   617   00FFEB  69                 	db	105	;'i'
   618   00FFEC  6E                 	db	110	;'n'
   619   00FFED  66                 	db	102	;'f'
   620   00FFEE  00                 	db	0
   621   00FFEF                     STR_37:
   622   00FFEF  6E                 	db	110	;'n'
   623   00FFF0  61                 	db	97	;'a'
   624   00FFF1  6E                 	db	110	;'n'
   625   00FFF2  00                 	db	0
   626   00FFF3                     STR_21:
   627   00FFF3  44                 	db	68	;'D'
   628   00FFF4  41                 	db	65	;'A'
   629   00FFF5  43                 	db	67	;'C'
   630   00FFF6  00                 	db	0
   631   00FFF7                     STR_20:
   632   00FFF7  41                 	db	65	;'A'
   633   00FFF8  44                 	db	68	;'D'
   634   00FFF9  43                 	db	67	;'C'
   635   00FFFA  00                 	db	0
   636   00FFFB                     STR_19:
   637   00FFFB  50                 	db	80	;'P'
   638   00FFFC  57                 	db	87	;'W'
   639   00FFFD  4D                 	db	77	;'M'
   640   00FFFE  00                 	db	0
   641   00FFFF  00                 	db	0	; dummy byte at the end
   642   000000                     
   643                           ; #config settings
   644                           
   645                           	psect	cinit
   646   004E48                     __pcinit:
   647                           	callstack 0
   648   004E48                     start_initialization:
   649                           	callstack 0
   650   004E48                     __initialization:
   651                           	callstack 0
   652                           
   653                           ; Initialize objects allocated to BANK1 (40 bytes)
   654                           ; load TBLPTR registers with __pidataBANK1
   655   004E48  0E8C               	movlw	low __pidataBANK1
   656   004E4A  6EF6               	movwf	tblptrl,c
   657   004E4C  0E51               	movlw	high __pidataBANK1
   658   004E4E  6EF7               	movwf	tblptrh,c
   659   004E50  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   660   004E52  6EF8               	movwf	tblptru,c
   661   004E54  EE01  F0CE         	lfsr	0,__pdataBANK1
   662   004E58  EE10 F028          	lfsr	1,40
   663   004E5C                     copy_data0:
   664   004E5C  0009               	tblrd		*+
   665   004E5E  CFF5 FFEE          	movff	tablat,postinc0
   666   004E62  50E5               	movf	postdec1,w,c
   667   004E64  50E1               	movf	fsr1l,w,c
   668   004E66  E1FA               	bnz	copy_data0
   669                           
   670                           ; Clear objects allocated to BANK2 (34 bytes)
   671   004E68  EE02  F000         	lfsr	0,__pbssBANK2
   672   004E6C  0E22               	movlw	34
   673   004E6E                     clear_0:
   674   004E6E  6AEE               	clrf	postinc0,c
   675   004E70  06E8               	decf	wreg,f,c
   676   004E72  E1FD               	bnz	clear_0
   677                           
   678                           ; Clear objects allocated to BANK1 (155 bytes)
   679   004E74  EE01  F000         	lfsr	0,__pbssBANK1
   680   004E78  0E9B               	movlw	155
   681   004E7A                     clear_1:
   682   004E7A  6AEE               	clrf	postinc0,c
   683   004E7C  06E8               	decf	wreg,f,c
   684   004E7E  E1FD               	bnz	clear_1
   685                           
   686                           ; Clear objects allocated to BANK0 (1 bytes)
   687   004E80  0100               	movlb	0
   688   004E82  6BFE               	clrf	__pbssBANK0& (0+255),b
   689                           
   690                           ; Clear objects allocated to COMRAM (5 bytes)
   691   004E84  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   692   004E86  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   693   004E88  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   694   004E8A  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   695   004E8C  6A55               	clrf	__pbssCOMRAM& (0+255),c
   696   004E8E                     end_of_initialization:
   697                           	callstack 0
   698   004E8E                     __end_of__initialization:
   699                           	callstack 0
   700   004E8E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   701   004E90  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   702   004E92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   703   004E94  6EF8               	movwf	tblptru,c
   704   004E96  0100               	movlb	0
   705   004E98  EFF1  F014         	goto	_main	;jump to C main() function
   706                           
   707                           	psect	bssCOMRAM
   708   000055                     __pbssCOMRAM:
   709                           	callstack 0
   710   000055                     _width:
   711                           	callstack 0
   712   000055                     	ds	2
   713   000057                     _prec:
   714                           	callstack 0
   715   000057                     	ds	2
   716   000059                     _flags:
   717                           	callstack 0
   718   000059                     	ds	1
   719                           
   720                           	psect	bssBANK0
   721   0000FE                     __pbssBANK0:
   722                           	callstack 0
   723   0000FE                     _keepStateGPIO:
   724                           	callstack 0
   725   0000FE                     	ds	1
   726                           
   727                           	psect	bssBANK1
   728   000100                     __pbssBANK1:
   729                           	callstack 0
   730   000100                     	ds	17
   731   000111                     fabsf@F465:
   732                           	callstack 0
   733   000111                     	ds	4
   734   000115                     ___rem_pio2f@F526:
   735                           	callstack 0
   736   000115                     	ds	4
   737   000119                     floorf@F521:
   738                           	callstack 0
   739   000119                     	ds	4
   740   00011D                     ___fpclassifyf@F465:
   741                           	callstack 0
   742   00011D                     	ds	4
   743   000121                     ISR@i:
   744                           	callstack 0
   745   000121                     	ds	2
   746   000123                     _GAMEtime:
   747                           	callstack 0
   748   000123                     	ds	1
   749   000124                     _GAMEIE:
   750                           	callstack 0
   751   000124                     	ds	1
   752   000125                     _UARTIE:
   753                           	callstack 0
   754   000125                     	ds	1
   755   000126                     _GPIOIE:
   756                           	callstack 0
   757   000126                     	ds	1
   758   000127                     _dbuf:
   759                           	callstack 0
   760   000127                     	ds	80
   761   000177                     _gmail:
   762                           	callstack 0
   763   000177                     	ds	32
   764   000197                     _seed:
   765                           	callstack 0
   766   000197                     	ds	4
   767                           
   768                           	psect	dataBANK1
   769   0001CE                     __pdataBANK1:
   770                           	callstack 0
   771   0001CE                     moveDisplay@F6965:
   772                           	callstack 0
   773   0001CE                     	ds	16
   774   0001DE                     runGPIO@F6993:
   775                           	callstack 0
   776   0001DE                     	ds	12
   777   0001EA                     runGPIO@F6975:
   778                           	callstack 0
   779   0001EA                     	ds	12
   780                           
   781                           	psect	bssBANK2
   782   000200                     __pbssBANK2:
   783                           	callstack 0
   784   000200                     	ds	17
   785   000211                     	ds	17
   786                           
   787                           	psect	cstackBANK1
   788   00019B                     __pcstackBANK1:
   789                           	callstack 0
   790   00019B                     moveDisplay@menuItem1:
   791                           	callstack 0
   792   00019B                     runADC@text:
   793                           	callstack 0
   794   00019B                     runGAME@text:
   795                           	callstack 0
   796                           
   797                           ; 17 bytes @ 0x0
   798   00019B                     	ds	17
   799   0001AC                     runADC@voltage1:
   800                           	callstack 0
   801   0001AC                     moveDisplay@menuItem2:
   802                           	callstack 0
   803   0001AC                     runGAME@approxText:
   804                           	callstack 0
   805                           
   806                           ; 17 bytes @ 0x11
   807   0001AC                     	ds	4
   808   0001B0                     runADC@voltage2:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x15
   812   0001B0                     	ds	4
   813   0001B4                     runADC@pot1:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x19
   817   0001B4                     	ds	2
   818   0001B6                     runADC@pot2:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x1B
   822   0001B6                     	ds	2
   823   0001B8                     runADC@keepState:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x1D
   827   0001B8                     	ds	5
   828   0001BD                     runGAME@GAMEpart:
   829                           	callstack 0
   830   0001BD                     moveDisplay@menuItems:
   831                           	callstack 0
   832                           
   833                           ; 16 bytes @ 0x22
   834   0001BD                     	ds	1
   835   0001BE                     runGAME@keepStateGAME:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x23
   839   0001BE                     	ds	1
   840   0001BF                     runGAME@GAMEround:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x24
   844   0001BF                     	ds	1
   845   0001C0                     runGAME@GAMEdivider:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x25
   849   0001C0                     	ds	1
   850   0001C1                     runGAME@pot1:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x26
   854   0001C1                     	ds	2
   855   0001C3                     runGAME@randomNumber:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x28
   859   0001C3                     	ds	10
   860   0001CD                     moveDisplay@menuI:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x32
   864   0001CD                     	ds	1
   865                           
   866                           	psect	cstackBANK0
   867   000060                     __pcstackBANK0:
   868                           	callstack 0
   869   000060                     ___fladd@signs:
   870                           	callstack 0
   871   000060                     floorf@m:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x0
   875   000060                     	ds	1
   876   000061                     ___fladd@aexp:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x1
   880   000061                     	ds	1
   881   000062                     ___fladd@bexp:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x2
   885   000062                     	ds	1
   886   000063                     ___fladd@grs:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x3
   890   000063                     	ds	1
   891   000064                     ?___flsub:
   892                           	callstack 0
   893   000064                     ?___sindf:
   894                           	callstack 0
   895   000064                     ?___cosdf:
   896                           	callstack 0
   897   000064                     ?___fltol:
   898                           	callstack 0
   899   000064                     floorf@e:
   900                           	callstack 0
   901   000064                     ___fltol@f1:
   902                           	callstack 0
   903   000064                     ___flsub@b:
   904                           	callstack 0
   905   000064                     ___cosdf@x:
   906                           	callstack 0
   907   000064                     ___sindf@x:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x4
   911   000064                     	ds	2
   912   000066                     floorf@u:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x6
   916   000066                     	ds	2
   917   000068                     ??___fltol:
   918   000068                     ___flsub@a:
   919                           	callstack 0
   920   000068                     ___cosdf@r:
   921                           	callstack 0
   922   000068                     ___sindf@r:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x8
   926   000068                     	ds	4
   927   00006C                     ___sindf@w:
   928                           	callstack 0
   929   00006C                     ___cosdf$4528:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0xC
   933   00006C                     	ds	4
   934   000070                     ___cosdf$4529:
   935                           	callstack 0
   936   000070                     ___sindf$4532:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x10
   940   000070                     	ds	4
   941   000074                     ___cosdf$4530:
   942                           	callstack 0
   943   000074                     ___sindf$4533:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x14
   947   000074                     	ds	4
   948   000078                     ___cosdf@w:
   949                           	callstack 0
   950   000078                     ___sindf$4534:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x18
   954   000078                     	ds	4
   955   00007C                     ___cosdf@z:
   956                           	callstack 0
   957   00007C                     ___sindf@s:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x1C
   961   00007C                     	ds	4
   962   000080                     ?___flneg:
   963                           	callstack 0
   964   000080                     ___flneg@f1:
   965                           	callstack 0
   966   000080                     ___sindf@z:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x20
   970   000080                     	ds	4
   971   000084                     ?___rem_pio2f:
   972                           	callstack 0
   973   000084                     efgtoa@fp:
   974                           	callstack 0
   975   000084                     ___rem_pio2f@x:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x24
   979   000084                     	ds	2
   980   000086                     efgtoa@f:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x26
   984   000086                     	ds	2
   985   000088                     ___rem_pio2f@y:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x28
   989   000088                     	ds	1
   990   000089                     ??___rem_pio2f:
   991                           
   992                           ; 1 bytes @ 0x29
   993   000089                     	ds	1
   994   00008A                     efgtoa@c:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x2A
   998   00008A                     	ds	1
   999   00008B                     ??_efgtoa:
  1000   00008B                     ___rem_pio2f@ty:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x2B
  1004   00008B                     	ds	2
  1005   00008D                     efgtoa@ne:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x2D
  1009   00008D                     	ds	2
  1010   00008F                     efgtoa@p:
  1011                           	callstack 0
  1012   00008F                     ___rem_pio2f$4531:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x2F
  1016   00008F                     	ds	2
  1017   000091                     efgtoa@t:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x31
  1021   000091                     	ds	2
  1022   000093                     ___rem_pio2f@sign:
  1023                           	callstack 0
  1024   000093                     _efgtoa$4068:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x33
  1028   000093                     	ds	1
  1029   000094                     ___rem_pio2f@ux:
  1030                           	callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x34
  1033   000094                     	ds	1
  1034   000095                     efgtoa@pp:
  1035                           	callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x35
  1038   000095                     	ds	1
  1039   000096                     efgtoa@mode:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x36
  1043   000096                     	ds	1
  1044   000097                     efgtoa@nmode:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x37
  1048   000097                     	ds	1
  1049   000098                     efgtoa@d:
  1050                           	callstack 0
  1051   000098                     ___rem_pio2f@fn:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x38
  1055   000098                     	ds	2
  1056   00009A                     efgtoa@m:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x3A
  1060   00009A                     	ds	2
  1061   00009C                     efgtoa@e:
  1062                           	callstack 0
  1063   00009C                     ___rem_pio2f@t:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x3C
  1067   00009C                     	ds	2
  1068   00009E                     efgtoa@w:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x3E
  1072   00009E                     	ds	2
  1073   0000A0                     efgtoa@ou:
  1074                           	callstack 0
  1075   0000A0                     ___rem_pio2f@n:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x40
  1079   0000A0                     	ds	4
  1080   0000A4                     ?_sinf:
  1081                           	callstack 0
  1082   0000A4                     efgtoa@i:
  1083                           	callstack 0
  1084   0000A4                     sinf@x:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x44
  1088   0000A4                     	ds	2
  1089   0000A6                     efgtoa@h:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x46
  1093   0000A6                     	ds	2
  1094   0000A8                     _sinf$4243:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x48
  1098   0000A8                     	ds	2
  1099   0000AA                     efgtoa@l:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x4A
  1103   0000AA                     	ds	2
  1104   0000AC                     _sinf$4244:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x4C
  1108   0000AC                     	ds	2
  1109   0000AE                     efgtoa@sign:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x4E
  1113   0000AE                     	ds	1
  1114   0000AF                     efgtoa@g:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x4F
  1118   0000AF                     	ds	1
  1119   0000B0                     sinf@n:
  1120                           	callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x50
  1123   0000B0                     	ds	1
  1124   0000B1                     sinf@sign:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x51
  1128   0000B1                     	ds	1
  1129   0000B2                     _sinf$4527:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x52
  1133   0000B2                     	ds	1
  1134   0000B3                     efgtoa@n:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x53
  1138   0000B3                     	ds	2
  1139   0000B5                     efgtoa@u:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x55
  1143   0000B5                     	ds	1
  1144   0000B6                     sinf@y:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x56
  1148   0000B6                     	ds	3
  1149   0000B9                     vfpfcnvrt@fp:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x59
  1153   0000B9                     	ds	1
  1154   0000BA                     sinf@ux:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x5A
  1158   0000BA                     	ds	1
  1159   0000BB                     vfpfcnvrt@fmt:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x5B
  1163   0000BB                     	ds	1
  1164   0000BC                     vfpfcnvrt@ap:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x5C
  1168   0000BC                     	ds	1
  1169   0000BD                     ??_vfpfcnvrt:
  1170                           
  1171                           ; 1 bytes @ 0x5D
  1172   0000BD                     	ds	2
  1173   0000BF                     vfpfcnvrt@done:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x5F
  1177   0000BF                     	ds	1
  1178   0000C0                     vfpfcnvrt@convarg:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x60
  1182   0000C0                     	ds	4
  1183   0000C4                     vfpfcnvrt@c:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x64
  1187   0000C4                     	ds	1
  1188   0000C5                     vfpfcnvrt@cp:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x65
  1192   0000C5                     	ds	2
  1193   0000C7                     ?_vfprintf:
  1194                           	callstack 0
  1195   0000C7                     vfprintf@fp:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x67
  1199   0000C7                     	ds	2
  1200   0000C9                     vfprintf@fmt:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x69
  1204   0000C9                     	ds	2
  1205   0000CB                     vfprintf@ap:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x6B
  1209   0000CB                     	ds	1
  1210   0000CC                     vfprintf@cfmt:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x6C
  1214   0000CC                     	ds	2
  1215   0000CE                     ?_printf:
  1216                           	callstack 0
  1217   0000CE                     ?_sprintf:
  1218                           	callstack 0
  1219   0000CE                     sprintf@s:
  1220                           	callstack 0
  1221   0000CE                     printf@fmt:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x6E
  1225   0000CE                     	ds	2
  1226   0000D0                     sprintf@fmt:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x70
  1230   0000D0                     	ds	2
  1231   0000D2                     ??_runUART:
  1232   0000D2                     ??_runDAC:
  1233                           
  1234                           ; 1 bytes @ 0x72
  1235   0000D2                     	ds	1
  1236   0000D3                     _runDAC$4524:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x73
  1240   0000D3                     	ds	1
  1241   0000D4                     runUART@reversed:
  1242                           	callstack 0
  1243                           
  1244                           ; 31 bytes @ 0x74
  1245   0000D4                     	ds	3
  1246   0000D7                     _runDAC$4525:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x77
  1250   0000D7                     	ds	3
  1251   0000DA                     sprintf@ap:
  1252                           	callstack 0
  1253                           
  1254                           ; 1 bytes @ 0x7A
  1255   0000DA                     	ds	1
  1256   0000DB                     runDAC@keepState:
  1257                           	callstack 0
  1258   0000DB                     sprintf@f:
  1259                           	callstack 0
  1260                           
  1261                           ; 12 bytes @ 0x7B
  1262   0000DB                     	ds	1
  1263   0000DC                     runDAC@selectModeDAC:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x7C
  1267   0000DC                     	ds	1
  1268   0000DD                     runDAC@DACindex:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x7D
  1272   0000DD                     	ds	10
  1273   0000E7                     ??_runADC:
  1274   0000E7                     ??_runGAME:
  1275   0000E7                     moveDisplay@where:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x87
  1279   0000E7                     	ds	1
  1280   0000E8                     ??_moveDisplay:
  1281                           
  1282                           ; 1 bytes @ 0x88
  1283   0000E8                     	ds	11
  1284   0000F3                     runUART@keepState:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x93
  1288   0000F3                     	ds	1
  1289   0000F4                     runUART@len:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x94
  1293   0000F4                     	ds	2
  1294   0000F6                     runUART@i:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x96
  1298   0000F6                     	ds	2
  1299   0000F8                     runUART@p:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x98
  1303   0000F8                     	ds	2
  1304   0000FA                     ??_main:
  1305                           
  1306                           ; 1 bytes @ 0x9A
  1307   0000FA                     	ds	2
  1308   0000FC                     main@setUpAgain:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x9C
  1312   0000FC                     	ds	1
  1313   0000FD                     main@menuI:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x9D
  1317   0000FD                     	ds	1
  1318                           
  1319                           	psect	cstackCOMRAM
  1320   000001                     __pcstackCOMRAM:
  1321                           	callstack 0
  1322   000001                     ??_ISR:
  1323                           
  1324                           ; 1 bytes @ 0x0
  1325   000001                     	ds	4
  1326   000005                     ISR@temp:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x4
  1330   000005                     	ds	1
  1331   000006                     ?_strlen:
  1332                           	callstack 0
  1333   000006                     ?___fpclassifyf:
  1334                           	callstack 0
  1335   000006                     ?___wmul:
  1336                           	callstack 0
  1337   000006                     ?___awmod:
  1338                           	callstack 0
  1339   000006                     ?___lwdiv:
  1340                           	callstack 0
  1341   000006                     ?___lwmod:
  1342                           	callstack 0
  1343   000006                     ?_labs:
  1344                           	callstack 0
  1345   000006                     ?_fabsf:
  1346                           	callstack 0
  1347   000006                     ?___lmul:
  1348                           	callstack 0
  1349   000006                     ?___xxtofl:
  1350                           	callstack 0
  1351   000006                     LCD_Send@data:
  1352                           	callstack 0
  1353   000006                     SPI_write@MSB:
  1354                           	callstack 0
  1355   000006                     putch@data:
  1356                           	callstack 0
  1357   000006                     LED1_Control@state:
  1358                           	callstack 0
  1359   000006                     LED2_Control@state:
  1360                           	callstack 0
  1361   000006                     LED3_Control@state:
  1362                           	callstack 0
  1363   000006                     LED4_Control@state:
  1364                           	callstack 0
  1365   000006                     LED5_Control@state:
  1366                           	callstack 0
  1367   000006                     LED6_Control@state:
  1368                           	callstack 0
  1369   000006                     ___lbdiv@divisor:
  1370                           	callstack 0
  1371   000006                     ___wmul@multiplier:
  1372                           	callstack 0
  1373   000006                     ___awmod@dividend:
  1374                           	callstack 0
  1375   000006                     ___lwdiv@dividend:
  1376                           	callstack 0
  1377   000006                     ___lwmod@dividend:
  1378                           	callstack 0
  1379   000006                     memcpy@d1:
  1380                           	callstack 0
  1381   000006                     strcpy@dest:
  1382                           	callstack 0
  1383   000006                     strlen@s:
  1384                           	callstack 0
  1385   000006                     ___lmul@multiplier:
  1386                           	callstack 0
  1387   000006                     ___fleq@ff1:
  1388                           	callstack 0
  1389   000006                     ___xxtofl@val:
  1390                           	callstack 0
  1391   000006                     ___fpclassifyf@x:
  1392                           	callstack 0
  1393   000006                     labs@a:
  1394                           	callstack 0
  1395   000006                     fabsf@x:
  1396                           	callstack 0
  1397                           
  1398                           ; 4 bytes @ 0x5
  1399   000006                     	ds	1
  1400   000007                     ??_LCD_Init:
  1401   000007                     ??_runGPIO:
  1402   000007                     SPI_write@LSB:
  1403                           	callstack 0
  1404   000007                     ___lbdiv@dividend:
  1405                           	callstack 0
  1406   000007                     LCD_ShowString@textData:
  1407                           	callstack 0
  1408   000007                     fputc@c:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x6
  1412   000007                     	ds	1
  1413   000008                     SPI_write@data:
  1414                           	callstack 0
  1415   000008                     ___lbdiv@counter:
  1416                           	callstack 0
  1417   000008                     ___wmul@multiplicand:
  1418                           	callstack 0
  1419   000008                     ___awmod@divisor:
  1420                           	callstack 0
  1421   000008                     ___lwdiv@divisor:
  1422                           	callstack 0
  1423   000008                     ___lwmod@divisor:
  1424                           	callstack 0
  1425   000008                     memcpy@s1:
  1426                           	callstack 0
  1427   000008                     strcpy@src:
  1428                           	callstack 0
  1429   000008                     strlen@a:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x7
  1433   000008                     	ds	1
  1434   000009                     ??_LCD_ShowString:
  1435   000009                     ___lbdiv@quotient:
  1436                           	callstack 0
  1437   000009                     fputc@fp:
  1438                           	callstack 0
  1439   000009                     runGPIO@states:
  1440                           	callstack 0
  1441                           
  1442                           ; 12 bytes @ 0x8
  1443   000009                     	ds	1
  1444   00000A                     ??___fpclassifyf:
  1445   00000A                     ??_labs:
  1446   00000A                     ??___xxtofl:
  1447   00000A                     ___awmod@counter:
  1448                           	callstack 0
  1449   00000A                     ___lwdiv@counter:
  1450                           	callstack 0
  1451   00000A                     ___lwmod@counter:
  1452                           	callstack 0
  1453   00000A                     ___wmul@product:
  1454                           	callstack 0
  1455   00000A                     memcpy@n:
  1456                           	callstack 0
  1457   00000A                     strcpy@d:
  1458                           	callstack 0
  1459   00000A                     ___lmul@multiplicand:
  1460                           	callstack 0
  1461   00000A                     ___fleq@ff2:
  1462                           	callstack 0
  1463   00000A                     fabsf@u:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x9
  1467   00000A                     	ds	1
  1468   00000B                     ??_fputc:
  1469   00000B                     LCD_ShowString@lineNum:
  1470                           	callstack 0
  1471   00000B                     ___awmod@sign:
  1472                           	callstack 0
  1473   00000B                     ___lwdiv@quotient:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0xA
  1477   00000B                     	ds	1
  1478   00000C                     ?_abs:
  1479                           	callstack 0
  1480   00000C                     ?_read_prec_or_width:
  1481                           	callstack 0
  1482   00000C                     LCD_ShowString@i:
  1483                           	callstack 0
  1484   00000C                     read_prec_or_width@fmt:
  1485                           	callstack 0
  1486   00000C                     memcpy@tmp:
  1487                           	callstack 0
  1488   00000C                     abs@a:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0xB
  1492   00000C                     	ds	1
  1493   00000D                     read_prec_or_width@ap:
  1494                           	callstack 0
  1495   00000D                     memcpy@d:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0xC
  1499   00000D                     	ds	1
  1500   00000E                     ??_abs:
  1501   00000E                     ??___fleq:
  1502   00000E                     ___xxtofl@sign:
  1503                           	callstack 0
  1504   00000E                     read_prec_or_width@c:
  1505                           	callstack 0
  1506   00000E                     ___fpclassifyf@e:
  1507                           	callstack 0
  1508   00000E                     ___lmul@product:
  1509                           	callstack 0
  1510                           
  1511                           ; 4 bytes @ 0xD
  1512   00000E                     	ds	1
  1513   00000F                     ___xxtofl@exp:
  1514                           	callstack 0
  1515   00000F                     read_prec_or_width@n:
  1516                           	callstack 0
  1517   00000F                     memcpy@s:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0xE
  1521   00000F                     	ds	1
  1522   000010                     stoa@fp:
  1523                           	callstack 0
  1524   000010                     fputs@s:
  1525                           	callstack 0
  1526   000010                     ___xxtofl@arg:
  1527                           	callstack 0
  1528   000010                     ___fpclassifyf@u:
  1529                           	callstack 0
  1530                           
  1531                           ; 4 bytes @ 0xF
  1532   000010                     	ds	2
  1533   000012                     ?_rand:
  1534                           	callstack 0
  1535   000012                     stoa@s:
  1536                           	callstack 0
  1537   000012                     fputs@fp:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x11
  1541   000012                     	ds	2
  1542   000014                     ??_rand:
  1543   000014                     ??_stoa:
  1544   000014                     ?___flmul:
  1545                           	callstack 0
  1546   000014                     fputs@c:
  1547                           	callstack 0
  1548   000014                     ___flmul@b:
  1549                           	callstack 0
  1550                           
  1551                           ; 4 bytes @ 0x13
  1552   000014                     	ds	1
  1553   000015                     fputs@i:
  1554                           	callstack 0
  1555   000015                     runGPIO@LEDControl:
  1556                           	callstack 0
  1557                           
  1558                           ; 12 bytes @ 0x14
  1559   000015                     	ds	1
  1560   000016                     stoa@p:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x15
  1564   000016                     	ds	1
  1565   000017                     pad@fp:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x16
  1569   000017                     	ds	1
  1570   000018                     ?___awdiv:
  1571                           	callstack 0
  1572   000018                     ___awdiv@dividend:
  1573                           	callstack 0
  1574   000018                     stoa@w:
  1575                           	callstack 0
  1576   000018                     ___flmul@a:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x17
  1580   000018                     	ds	1
  1581   000019                     pad@buf:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x18
  1585   000019                     	ds	1
  1586   00001A                     ___awdiv@divisor:
  1587                           	callstack 0
  1588   00001A                     stoa@cp:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x19
  1592   00001A                     	ds	1
  1593   00001B                     pad@p:
  1594                           	callstack 0
  1595                           
  1596                           ; 2 bytes @ 0x1A
  1597   00001B                     	ds	1
  1598   00001C                     ??___flmul:
  1599   00001C                     ___awdiv@counter:
  1600                           	callstack 0
  1601   00001C                     stoa@l:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x1B
  1605   00001C                     	ds	1
  1606   00001D                     ??_pad:
  1607   00001D                     ___awdiv@sign:
  1608                           	callstack 0
  1609                           
  1610                           ; 1 bytes @ 0x1C
  1611   00001D                     	ds	1
  1612   00001E                     ___awdiv@quotient:
  1613                           	callstack 0
  1614   00001E                     pad@i:
  1615                           	callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x1D
  1618   00001E                     	ds	2
  1619   000020                     ??_runPWM:
  1620   000020                     ___flmul@sign:
  1621                           	callstack 0
  1622   000020                     dtoa@fp:
  1623                           	callstack 0
  1624   000020                     utoa@fp:
  1625                           	callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x1F
  1628   000020                     	ds	1
  1629   000021                     ___flmul@aexp:
  1630                           	callstack 0
  1631   000021                     runGPIO@numberOfStates:
  1632                           	callstack 0
  1633                           
  1634                           ; 2 bytes @ 0x20
  1635   000021                     	ds	1
  1636   000022                     runPWM@keepState:
  1637                           	callstack 0
  1638   000022                     dtoa@d:
  1639                           	callstack 0
  1640   000022                     utoa@d:
  1641                           	callstack 0
  1642   000022                     ___flmul@grs:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x21
  1646   000022                     	ds	1
  1647   000023                     runGPIO@GPIOi:
  1648                           	callstack 0
  1649   000023                     runPWM@multiplier:
  1650                           	callstack 0
  1651                           
  1652                           ; 1 bytes @ 0x22
  1653   000023                     	ds	1
  1654   000024                     runGPIO@j:
  1655                           	callstack 0
  1656   000024                     _dtoa$4037:
  1657                           	callstack 0
  1658   000024                     utoa@w:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x23
  1662   000024                     	ds	2
  1663   000026                     ___flmul@bexp:
  1664                           	callstack 0
  1665   000026                     dtoa@w:
  1666                           	callstack 0
  1667   000026                     utoa@p:
  1668                           	callstack 0
  1669                           
  1670                           ; 2 bytes @ 0x25
  1671   000026                     	ds	1
  1672   000027                     ___flmul@prod:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x26
  1676   000027                     	ds	1
  1677   000028                     dtoa@p:
  1678                           	callstack 0
  1679   000028                     utoa@i:
  1680                           	callstack 0
  1681                           
  1682                           ; 2 bytes @ 0x27
  1683   000028                     	ds	2
  1684   00002A                     dtoa@s:
  1685                           	callstack 0
  1686                           
  1687                           ; 1 bytes @ 0x29
  1688   00002A                     	ds	1
  1689   00002B                     ___flmul@temp:
  1690                           	callstack 0
  1691   00002B                     dtoa@i:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x2A
  1695   00002B                     	ds	2
  1696   00002D                     ?___fldiv:
  1697                           	callstack 0
  1698   00002D                     ___flge@ff1:
  1699                           	callstack 0
  1700   00002D                     ___fldiv@b:
  1701                           	callstack 0
  1702                           
  1703                           ; 4 bytes @ 0x2C
  1704   00002D                     	ds	4
  1705   000031                     ___flge@ff2:
  1706                           	callstack 0
  1707   000031                     ___fldiv@a:
  1708                           	callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x30
  1711   000031                     	ds	4
  1712   000035                     ??___fldiv:
  1713   000035                     ??___flge:
  1714                           
  1715                           ; 1 bytes @ 0x34
  1716   000035                     	ds	4
  1717   000039                     ___fldiv@rem:
  1718                           	callstack 0
  1719                           
  1720                           ; 4 bytes @ 0x38
  1721   000039                     	ds	4
  1722   00003D                     ___fldiv@sign:
  1723                           	callstack 0
  1724                           
  1725                           ; 1 bytes @ 0x3C
  1726   00003D                     	ds	1
  1727   00003E                     ___fldiv@new_exp:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x3D
  1731   00003E                     	ds	2
  1732   000040                     ___fldiv@grs:
  1733                           	callstack 0
  1734                           
  1735                           ; 4 bytes @ 0x3F
  1736   000040                     	ds	4
  1737   000044                     ___fldiv@bexp:
  1738                           	callstack 0
  1739                           
  1740                           ; 1 bytes @ 0x43
  1741   000044                     	ds	1
  1742   000045                     ___fldiv@aexp:
  1743                           	callstack 0
  1744                           
  1745                           ; 1 bytes @ 0x44
  1746   000045                     	ds	1
  1747   000046                     ?___fladd:
  1748                           	callstack 0
  1749   000046                     ?_floorf:
  1750                           	callstack 0
  1751   000046                     ___fladd@b:
  1752                           	callstack 0
  1753   000046                     floorf@x:
  1754                           	callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x45
  1757   000046                     	ds	4
  1758   00004A                     ??_floorf:
  1759   00004A                     ___fladd@a:
  1760                           	callstack 0
  1761                           
  1762                           ; 4 bytes @ 0x49
  1763   00004A                     	ds	4
  1764   00004E                     ??___fladd:
  1765                           
  1766                           ; 1 bytes @ 0x4D
  1767   00004E                     	ds	4
  1768   000052                     ___fltol@sign1:
  1769                           	callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x51
  1772   000052                     	ds	1
  1773   000053                     ___fltol@exp1:
  1774                           	callstack 0
  1775                           
  1776                           ; 1 bytes @ 0x52
  1777   000053                     	ds	1
  1778   000054                     printf@ap:
  1779                           	callstack 0
  1780                           
  1781                           ; 1 bytes @ 0x53
  1782   000054                     	ds	1
  1783                           
  1784 ;;
  1785 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1786 ;;
  1787 ;; *************** function _main *****************
  1788 ;; Defined at:
  1789 ;;		line 10 in file "main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  menuI           1  157[BANK0 ] unsigned char 
  1794 ;;  setUpAgain      1  156[BANK0 ] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;Total ram usage:        4 bytes
  1809 ;; Hardware stack levels required when called: 10
  1810 ;; This function calls:
  1811 ;;		_LCD_Init
  1812 ;;		_LCD_ShowString
  1813 ;;		_moveDisplay
  1814 ;;		_runADC
  1815 ;;		_runDAC
  1816 ;;		_runGAME
  1817 ;;		_runGPIO
  1818 ;;		_runMUSIC
  1819 ;;		_runPWM
  1820 ;;		_runUART
  1821 ;; This function is called by:
  1822 ;;		Startup code after reset
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text0
  1827   0029E2                     __ptext0:
  1828                           	callstack 0
  1829   0029E2                     _main:
  1830                           	callstack 21
  1831   0029E2                     
  1832                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1833   0029E2  0E05               	movlw	5
  1834   0029E4  0100               	movlb	0	; () banked
  1835   0029E6  6FFB               	movwf	(??_main+1)& (0+255),b
  1836   0029E8  0E0F               	movlw	15
  1837   0029EA  6FFA               	movwf	??_main& (0+255),b
  1838   0029EC  0EF1               	movlw	241
  1839   0029EE                     u10357:
  1840   0029EE  2EE8               	decfsz	wreg,f,c
  1841   0029F0  D7FE               	bra	u10357
  1842   0029F2  2FFA               	decfsz	??_main& (0+255),f,b
  1843   0029F4  D7FC               	bra	u10357
  1844   0029F6  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1845   0029F8  D7FA               	bra	u10357
  1846   0029FA                     
  1847                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1848   0029FA  8094               	bsf	148,0,c	;volatile
  1849   0029FC                     
  1850                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1851   0029FC  8892               	bsf	146,4,c	;volatile
  1852   0029FE                     
  1853                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1854   0029FE  8692               	bsf	146,3,c	;volatile
  1855   002A00                     
  1856                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1857   002A00  8492               	bsf	146,2,c	;volatile
  1858   002A02                     
  1859                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1860   002A02  010F               	movlb	15	; () banked
  1861   002A04  9738               	bcf	56,3,b	;volatile
  1862   002A06                     
  1863                           ; BSR set to: 15
  1864                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1865   002A06  9538               	bcf	56,2,b	;volatile
  1866   002A08                     
  1867                           ; BSR set to: 15
  1868                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1869   002A08  9495               	bcf	149,2,c	;volatile
  1870   002A0A                     
  1871                           ; BSR set to: 15
  1872                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1873   002A0A  9695               	bcf	149,3,c	;volatile
  1874   002A0C                     
  1875                           ; BSR set to: 15
  1876                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1877   002A0C  9894               	bcf	148,4,c	;volatile
  1878   002A0E                     
  1879                           ; BSR set to: 15
  1880                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1881   002A0E  9895               	bcf	149,4,c	;volatile
  1882   002A10                     
  1883                           ; BSR set to: 15
  1884                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1885   002A10  9A95               	bcf	149,5,c	;volatile
  1886   002A12                     
  1887                           ; BSR set to: 15
  1888                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1889   002A12  9C95               	bcf	149,6,c	;volatile
  1890   002A14                     
  1891                           ; BSR set to: 15
  1892                           ;main.c: 27:     LATDbits.LD2 = 1;
  1893   002A14  848C               	bsf	140,2,c	;volatile
  1894   002A16                     
  1895                           ; BSR set to: 15
  1896                           ;main.c: 28:     LATDbits.LD3 = 1;
  1897   002A16  868C               	bsf	140,3,c	;volatile
  1898   002A18                     
  1899                           ; BSR set to: 15
  1900                           ;main.c: 29:     LATCbits.LC4 = 1;
  1901   002A18  888B               	bsf	139,4,c	;volatile
  1902   002A1A                     
  1903                           ; BSR set to: 15
  1904                           ;main.c: 30:     LATDbits.LD4 = 1;
  1905   002A1A  888C               	bsf	140,4,c	;volatile
  1906   002A1C                     
  1907                           ; BSR set to: 15
  1908                           ;main.c: 31:     LATDbits.LD5 = 1;
  1909   002A1C  8A8C               	bsf	140,5,c	;volatile
  1910   002A1E                     
  1911                           ; BSR set to: 15
  1912                           ;main.c: 32:     LATDbits.LD6 = 1;
  1913   002A1E  8C8C               	bsf	140,6,c	;volatile
  1914   002A20                     
  1915                           ; BSR set to: 15
  1916                           ;main.c: 35:     LCD_Init();
  1917   002A20  EC13  F023         	call	_LCD_Init	;wreg free
  1918   002A24                     
  1919                           ;main.c: 36:     uint8_t menuI = 0;
  1920   002A24  0E00               	movlw	0
  1921   002A26  0100               	movlb	0	; () banked
  1922   002A28  6FFD               	movwf	main@menuI& (0+255),b
  1923   002A2A                     
  1924                           ; BSR set to: 0
  1925                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1926   002A2A  0E00               	movlw	0
  1927   002A2C  6FFC               	movwf	main@setUpAgain& (0+255),b
  1928   002A2E                     
  1929                           ; BSR set to: 0
  1930                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1931   002A2E  0E00               	movlw	0
  1932   002A30  6FE7               	movwf	moveDisplay@where& (0+255),b
  1933   002A32  51FD               	movf	main@menuI& (0+255),w,b
  1934   002A34  EC8D  F020         	call	_moveDisplay
  1935   002A38  0100               	movlb	0	; () banked
  1936   002A3A  6FFD               	movwf	main@menuI& (0+255),b
  1937   002A3C                     l8382:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;main.c: 47:         if(PORTCbits.RC0){
  1941   002A3C  A082               	btfss	130,0,c	;volatile
  1942   002A3E  EF23  F015         	goto	u10251
  1943   002A42  EF25  F015         	goto	u10250
  1944   002A46                     u10251:
  1945   002A46  EF47  F015         	goto	l56
  1946   002A4A                     u10250:
  1947   002A4A                     
  1948                           ; BSR set to: 0
  1949                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1950   002A4A  0E03               	movlw	3
  1951   002A4C  0100               	movlb	0	; () banked
  1952   002A4E  6FFB               	movwf	(??_main+1)& (0+255),b
  1953   002A50  0E08               	movlw	8
  1954   002A52  6FFA               	movwf	??_main& (0+255),b
  1955   002A54  0E77               	movlw	119
  1956   002A56                     u10367:
  1957   002A56  2EE8               	decfsz	wreg,f,c
  1958   002A58  D7FE               	bra	u10367
  1959   002A5A  2FFA               	decfsz	??_main& (0+255),f,b
  1960   002A5C  D7FC               	bra	u10367
  1961   002A5E  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  1962   002A60  D7FA               	bra	u10367
  1963   002A62                     
  1964                           ;main.c: 49:             if(PORTCbits.RC0){
  1965   002A62  A082               	btfss	130,0,c	;volatile
  1966   002A64  EF36  F015         	goto	u10261
  1967   002A68  EF38  F015         	goto	u10260
  1968   002A6C                     u10261:
  1969   002A6C  EF47  F015         	goto	l56
  1970   002A70                     u10260:
  1971   002A70                     
  1972                           ;main.c: 50:                 menuI = moveDisplay(menuI,2);
  1973   002A70  0E02               	movlw	2
  1974   002A72  0100               	movlb	0	; () banked
  1975   002A74  6FE7               	movwf	moveDisplay@where& (0+255),b
  1976   002A76  51FD               	movf	main@menuI& (0+255),w,b
  1977   002A78  EC8D  F020         	call	_moveDisplay
  1978   002A7C  0100               	movlb	0	; () banked
  1979   002A7E  6FFD               	movwf	main@menuI& (0+255),b
  1980   002A80                     l58:
  1981   002A80  B082               	btfsc	130,0,c	;volatile
  1982   002A82  EF45  F015         	goto	u10271
  1983   002A86  EF47  F015         	goto	u10270
  1984   002A8A                     u10271:
  1985   002A8A  EF40  F015         	goto	l58
  1986   002A8E                     u10270:
  1987   002A8E                     l56:
  1988                           
  1989                           ;main.c: 54:         if(PORTAbits.RA4){
  1990   002A8E  A880               	btfss	128,4,c	;volatile
  1991   002A90  EF4C  F015         	goto	u10281
  1992   002A94  EF4E  F015         	goto	u10280
  1993   002A98                     u10281:
  1994   002A98  EF70  F015         	goto	l61
  1995   002A9C                     u10280:
  1996   002A9C                     
  1997                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1998   002A9C  0E03               	movlw	3
  1999   002A9E  0100               	movlb	0	; () banked
  2000   002AA0  6FFB               	movwf	(??_main+1)& (0+255),b
  2001   002AA2  0E08               	movlw	8
  2002   002AA4  6FFA               	movwf	??_main& (0+255),b
  2003   002AA6  0E77               	movlw	119
  2004   002AA8                     u10377:
  2005   002AA8  2EE8               	decfsz	wreg,f,c
  2006   002AAA  D7FE               	bra	u10377
  2007   002AAC  2FFA               	decfsz	??_main& (0+255),f,b
  2008   002AAE  D7FC               	bra	u10377
  2009   002AB0  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2010   002AB2  D7FA               	bra	u10377
  2011   002AB4                     
  2012                           ;main.c: 56:             if(PORTAbits.RA4){
  2013   002AB4  A880               	btfss	128,4,c	;volatile
  2014   002AB6  EF5F  F015         	goto	u10291
  2015   002ABA  EF61  F015         	goto	u10290
  2016   002ABE                     u10291:
  2017   002ABE  EF70  F015         	goto	l61
  2018   002AC2                     u10290:
  2019   002AC2                     
  2020                           ;main.c: 57:                 menuI = moveDisplay(menuI,1);
  2021   002AC2  0E01               	movlw	1
  2022   002AC4  0100               	movlb	0	; () banked
  2023   002AC6  6FE7               	movwf	moveDisplay@where& (0+255),b
  2024   002AC8  51FD               	movf	main@menuI& (0+255),w,b
  2025   002ACA  EC8D  F020         	call	_moveDisplay
  2026   002ACE  0100               	movlb	0	; () banked
  2027   002AD0  6FFD               	movwf	main@menuI& (0+255),b
  2028   002AD2                     l63:
  2029   002AD2  B880               	btfsc	128,4,c	;volatile
  2030   002AD4  EF6E  F015         	goto	u10301
  2031   002AD8  EF70  F015         	goto	u10300
  2032   002ADC                     u10301:
  2033   002ADC  EF69  F015         	goto	l63
  2034   002AE0                     u10300:
  2035   002AE0                     l61:
  2036                           
  2037                           ;main.c: 61:         if(PORTAbits.RA3){
  2038   002AE0  A680               	btfss	128,3,c	;volatile
  2039   002AE2  EF75  F015         	goto	u10311
  2040   002AE6  EF77  F015         	goto	u10310
  2041   002AEA                     u10311:
  2042   002AEA  EF60  F016         	goto	l66
  2043   002AEE                     u10310:
  2044   002AEE                     
  2045                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2046   002AEE  0E03               	movlw	3
  2047   002AF0  0100               	movlb	0	; () banked
  2048   002AF2  6FFB               	movwf	(??_main+1)& (0+255),b
  2049   002AF4  0E08               	movlw	8
  2050   002AF6  6FFA               	movwf	??_main& (0+255),b
  2051   002AF8  0E77               	movlw	119
  2052   002AFA                     u10387:
  2053   002AFA  2EE8               	decfsz	wreg,f,c
  2054   002AFC  D7FE               	bra	u10387
  2055   002AFE  2FFA               	decfsz	??_main& (0+255),f,b
  2056   002B00  D7FC               	bra	u10387
  2057   002B02  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2058   002B04  D7FA               	bra	u10387
  2059   002B06                     
  2060                           ;main.c: 63:             if(PORTAbits.RA3){
  2061   002B06  A680               	btfss	128,3,c	;volatile
  2062   002B08  EF88  F015         	goto	u10321
  2063   002B0C  EF8A  F015         	goto	u10320
  2064   002B10                     u10321:
  2065   002B10  EF60  F016         	goto	l66
  2066   002B14                     u10320:
  2067   002B14                     l68:
  2068   002B14  B680               	btfsc	128,3,c	;volatile
  2069   002B16  EF8F  F015         	goto	u10331
  2070   002B1A  EF91  F015         	goto	u10330
  2071   002B1E                     u10331:
  2072   002B1E  EF8A  F015         	goto	l68
  2073   002B22                     u10330:
  2074   002B22  EF40  F016         	goto	l8454
  2075   002B26                     l8402:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  2079   002B26  0E37               	movlw	low STR_1
  2080   002B28  6E07               	movwf	LCD_ShowString@textData^0,c
  2081   002B2A  0EFF               	movlw	high STR_1
  2082   002B2C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2083   002B2E  0E01               	movlw	1
  2084   002B30  EC47  F024         	call	_LCD_ShowString
  2085                           
  2086                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  2087   002B34  0EBD               	movlw	low (STR_29+2)
  2088   002B36  6E07               	movwf	LCD_ShowString@textData^0,c
  2089   002B38  0EFE               	movlw	high (STR_29+2)
  2090   002B3A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2091   002B3C  0E02               	movlw	2
  2092   002B3E  EC47  F024         	call	_LCD_ShowString
  2093   002B42                     
  2094                           ;main.c: 69:                         runGPIO();
  2095   002B42  EC34  F01F         	call	_runGPIO	;wreg free
  2096   002B46                     l8406:
  2097                           
  2098                           ;main.c: 70:                         setUpAgain = 1;
  2099   002B46  0E01               	movlw	1
  2100   002B48  0100               	movlb	0	; () banked
  2101   002B4A  6FFC               	movwf	main@setUpAgain& (0+255),b
  2102                           
  2103                           ;main.c: 71:                         break;
  2104   002B4C  EF60  F016         	goto	l66
  2105   002B50                     l8408:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  2109   002B50  0E15               	movlw	low STR_3
  2110   002B52  6E07               	movwf	LCD_ShowString@textData^0,c
  2111   002B54  0EFF               	movlw	high STR_3
  2112   002B56  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2113   002B58  0E01               	movlw	1
  2114   002B5A  EC47  F024         	call	_LCD_ShowString
  2115                           
  2116                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  2117   002B5E  0E8C               	movlw	low STR_4
  2118   002B60  6E07               	movwf	LCD_ShowString@textData^0,c
  2119   002B62  0EFF               	movlw	high STR_4
  2120   002B64  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2121   002B66  0E02               	movlw	2
  2122   002B68  EC47  F024         	call	_LCD_ShowString
  2123   002B6C                     
  2124                           ;main.c: 75:                         runUART();
  2125   002B6C  EC7E  F01E         	call	_runUART	;wreg free
  2126   002B70  EFA3  F015         	goto	l8406
  2127   002B74                     l8414:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  2131   002B74  0E59               	movlw	low STR_5
  2132   002B76  6E07               	movwf	LCD_ShowString@textData^0,c
  2133   002B78  0EFF               	movlw	high STR_5
  2134   002B7A  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2135   002B7C  0E01               	movlw	1
  2136   002B7E  EC47  F024         	call	_LCD_ShowString
  2137                           
  2138                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  2139   002B82  0EBD               	movlw	low (STR_29+2)
  2140   002B84  6E07               	movwf	LCD_ShowString@textData^0,c
  2141   002B86  0EFE               	movlw	high (STR_29+2)
  2142   002B88  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2143   002B8A  0E02               	movlw	2
  2144   002B8C  EC47  F024         	call	_LCD_ShowString
  2145   002B90                     
  2146                           ;main.c: 81:                         runPWM();
  2147   002B90  ECEA  F01F         	call	_runPWM	;wreg free
  2148   002B94  EFA3  F015         	goto	l8406
  2149   002B98                     l8420:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  2153   002B98  0E7B               	movlw	low STR_7
  2154   002B9A  6E07               	movwf	LCD_ShowString@textData^0,c
  2155   002B9C  0EFF               	movlw	high STR_7
  2156   002B9E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2157   002BA0  0E01               	movlw	1
  2158   002BA2  EC47  F024         	call	_LCD_ShowString
  2159   002BA6                     
  2160                           ;main.c: 86:                         runADC();
  2161   002BA6  EC0F  F01A         	call	_runADC	;wreg free
  2162   002BAA  EFA3  F015         	goto	l8406
  2163   002BAE                     l8426:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  2167   002BAE  0E6A               	movlw	low STR_8
  2168   002BB0  6E07               	movwf	LCD_ShowString@textData^0,c
  2169   002BB2  0EFF               	movlw	high STR_8
  2170   002BB4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2171   002BB6  0E01               	movlw	1
  2172   002BB8  EC47  F024         	call	_LCD_ShowString
  2173                           
  2174                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  2175   002BBC  0E9D               	movlw	low STR_9
  2176   002BBE  6E07               	movwf	LCD_ShowString@textData^0,c
  2177   002BC0  0EFF               	movlw	high STR_9
  2178   002BC2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2179   002BC4  0E02               	movlw	2
  2180   002BC6  EC47  F024         	call	_LCD_ShowString
  2181   002BCA                     
  2182                           ;main.c: 92:                         runDAC();
  2183   002BCA  EC77  F016         	call	_runDAC	;wreg free
  2184   002BCE  EFA3  F015         	goto	l8406
  2185   002BD2                     l8432:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;main.c: 96:                         LCD_ShowString((char)1, "Ladeni potaku   ");
  2189   002BD2  0E48               	movlw	low STR_10
  2190   002BD4  6E07               	movwf	LCD_ShowString@textData^0,c
  2191   002BD6  0EFF               	movlw	high STR_10
  2192   002BD8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2193   002BDA  0E01               	movlw	1
  2194   002BDC  EC47  F024         	call	_LCD_ShowString
  2195                           
  2196                           ;main.c: 97:                         LCD_ShowString((char)2, "                ");
  2197   002BE0  0EBD               	movlw	low (STR_29+2)
  2198   002BE2  6E07               	movwf	LCD_ShowString@textData^0,c
  2199   002BE4  0EFE               	movlw	high (STR_29+2)
  2200   002BE6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2201   002BE8  0E02               	movlw	2
  2202   002BEA  EC47  F024         	call	_LCD_ShowString
  2203   002BEE                     
  2204                           ;main.c: 98:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2205   002BEE  0E29               	movlw	41
  2206   002BF0  0100               	movlb	0	; () banked
  2207   002BF2  6FFB               	movwf	(??_main+1)& (0+255),b
  2208   002BF4  0E96               	movlw	150
  2209   002BF6  6FFA               	movwf	??_main& (0+255),b
  2210   002BF8  0E7F               	movlw	127
  2211   002BFA                     u10397:
  2212   002BFA  2EE8               	decfsz	wreg,f,c
  2213   002BFC  D7FE               	bra	u10397
  2214   002BFE  2FFA               	decfsz	??_main& (0+255),f,b
  2215   002C00  D7FC               	bra	u10397
  2216   002C02  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2217   002C04  D7FA               	bra	u10397
  2218   002C06                     
  2219                           ;main.c: 99:                         LCD_ShowString((char)1, "Pripravit       ");
  2220   002C06  0E26               	movlw	low STR_12
  2221   002C08  6E07               	movwf	LCD_ShowString@textData^0,c
  2222   002C0A  0EFF               	movlw	high STR_12
  2223   002C0C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2224   002C0E  0E01               	movlw	1
  2225   002C10  EC47  F024         	call	_LCD_ShowString
  2226                           
  2227                           ;main.c: 100:                         _delay((unsigned long)((1000)*(32E6/4000.0)));
  2228   002C14  0E29               	movlw	41
  2229   002C16  0100               	movlb	0	; () banked
  2230   002C18  6FFB               	movwf	(??_main+1)& (0+255),b
  2231   002C1A  0E96               	movlw	150
  2232   002C1C  6FFA               	movwf	??_main& (0+255),b
  2233   002C1E  0E7F               	movlw	127
  2234   002C20                     u10407:
  2235   002C20  2EE8               	decfsz	wreg,f,c
  2236   002C22  D7FE               	bra	u10407
  2237   002C24  2FFA               	decfsz	??_main& (0+255),f,b
  2238   002C26  D7FC               	bra	u10407
  2239   002C28  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2240   002C2A  D7FA               	bra	u10407
  2241   002C2C                     
  2242                           ;main.c: 101:                         LCD_ShowString((char)2, "           Pozor");
  2243   002C2C  0EAE               	movlw	low STR_13
  2244   002C2E  6E07               	movwf	LCD_ShowString@textData^0,c
  2245   002C30  0EFF               	movlw	high STR_13
  2246   002C32  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2247   002C34  0E02               	movlw	2
  2248   002C36  EC47  F024         	call	_LCD_ShowString
  2249   002C3A                     
  2250                           ;main.c: 102:                         _delay((unsigned long)((2000)*(32E6/4000.0)));
  2251   002C3A  0E52               	movlw	82
  2252   002C3C  0100               	movlb	0	; () banked
  2253   002C3E  6FFB               	movwf	(??_main+1)& (0+255),b
  2254   002C40  0E2B               	movlw	43
  2255   002C42  6FFA               	movwf	??_main& (0+255),b
  2256   002C44  0E00               	movlw	0
  2257   002C46                     u10417:
  2258   002C46  2EE8               	decfsz	wreg,f,c
  2259   002C48  D7FE               	bra	u10417
  2260   002C4A  2FFA               	decfsz	??_main& (0+255),f,b
  2261   002C4C  D7FC               	bra	u10417
  2262   002C4E  2FFB               	decfsz	(??_main+1)& (0+255),f,b
  2263   002C50  D7FA               	bra	u10417
  2264   002C52  0000               	nop	
  2265   002C54                     
  2266                           ;main.c: 103:                         runGAME();
  2267   002C54  EC4F  F00F         	call	_runGAME	;wreg free
  2268   002C58  EFA3  F015         	goto	l8406
  2269   002C5C                     l8446:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 107:                         LCD_ShowString((char)1, "                ");
  2273   002C5C  0EBD               	movlw	low (STR_29+2)
  2274   002C5E  6E07               	movwf	LCD_ShowString@textData^0,c
  2275   002C60  0EFE               	movlw	high (STR_29+2)
  2276   002C62  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2277   002C64  0E01               	movlw	1
  2278   002C66  EC47  F024         	call	_LCD_ShowString
  2279                           
  2280                           ;main.c: 108:                         LCD_ShowString((char)2, "                ");
  2281   002C6A  0EBD               	movlw	low (STR_29+2)
  2282   002C6C  6E07               	movwf	LCD_ShowString@textData^0,c
  2283   002C6E  0EFE               	movlw	high (STR_29+2)
  2284   002C70  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  2285   002C72  0E02               	movlw	2
  2286   002C74  EC47  F024         	call	_LCD_ShowString
  2287   002C78                     
  2288                           ;main.c: 109:                         runMUSIC();
  2289   002C78  EC45  F029         	call	_runMUSIC	;wreg free
  2290   002C7C  EFA3  F015         	goto	l8406
  2291   002C80                     l8454:
  2292   002C80  0100               	movlb	0	; () banked
  2293   002C82  51FD               	movf	main@menuI& (0+255),w,b
  2294                           
  2295                           ; Switch size 1, requested type "simple"
  2296                           ; Number of cases is 7, Range of values is 0 to 6
  2297                           ; switch strategies available:
  2298                           ; Name         Instructions Cycles
  2299                           ; simple_byte           22    12 (average)
  2300                           ;	Chosen strategy is simple_byte
  2301   002C84  0A00               	xorlw	0	; case 0
  2302   002C86  B4D8               	btfsc	status,2,c
  2303   002C88  EF93  F015         	goto	l8402
  2304   002C8C  0A01               	xorlw	1	; case 1
  2305   002C8E  B4D8               	btfsc	status,2,c
  2306   002C90  EFA8  F015         	goto	l8408
  2307   002C94  0A03               	xorlw	3	; case 2
  2308   002C96  B4D8               	btfsc	status,2,c
  2309   002C98  EFBA  F015         	goto	l8414
  2310   002C9C  0A01               	xorlw	1	; case 3
  2311   002C9E  B4D8               	btfsc	status,2,c
  2312   002CA0  EFCC  F015         	goto	l8420
  2313   002CA4  0A07               	xorlw	7	; case 4
  2314   002CA6  B4D8               	btfsc	status,2,c
  2315   002CA8  EFD7  F015         	goto	l8426
  2316   002CAC  0A01               	xorlw	1	; case 5
  2317   002CAE  B4D8               	btfsc	status,2,c
  2318   002CB0  EFE9  F015         	goto	l8432
  2319   002CB4  0A03               	xorlw	3	; case 6
  2320   002CB6  B4D8               	btfsc	status,2,c
  2321   002CB8  EF2E  F016         	goto	l8446
  2322   002CBC  EF60  F016         	goto	l66
  2323   002CC0                     l66:
  2324                           
  2325                           ;main.c: 116:         if(PORTAbits.RA2){
  2326   002CC0  5080               	movf	128,w,c	;volatile
  2327   002CC2                     
  2328                           ;main.c: 120:         if(setUpAgain){
  2329   002CC2  0100               	movlb	0	; () banked
  2330   002CC4  51FC               	movf	main@setUpAgain& (0+255),w,b
  2331   002CC6  B4D8               	btfsc	status,2,c
  2332   002CC8  EF68  F016         	goto	u10341
  2333   002CCC  EF6A  F016         	goto	u10340
  2334   002CD0                     u10341:
  2335   002CD0  EF1E  F015         	goto	l8382
  2336   002CD4                     u10340:
  2337   002CD4                     
  2338                           ; BSR set to: 0
  2339                           ;main.c: 121:         menuI = moveDisplay(menuI,0);
  2340   002CD4  0E00               	movlw	0
  2341   002CD6  6FE7               	movwf	moveDisplay@where& (0+255),b
  2342   002CD8  51FD               	movf	main@menuI& (0+255),w,b
  2343   002CDA  EC8D  F020         	call	_moveDisplay
  2344   002CDE  0100               	movlb	0	; () banked
  2345   002CE0  6FFD               	movwf	main@menuI& (0+255),b
  2346   002CE2                     
  2347                           ; BSR set to: 0
  2348                           ;main.c: 122:         setUpAgain = 0;
  2349   002CE2  0E00               	movlw	0
  2350   002CE4  6FFC               	movwf	main@setUpAgain& (0+255),b
  2351   002CE6  EF1E  F015         	goto	l8382
  2352   002CEA  EFA7  F000         	goto	start
  2353   002CEE                     __end_of_main:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _runUART *****************
  2357 ;; Defined at:
  2358 ;;		line 4 in file "UART.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  p               2  152[BANK0 ] int 
  2363 ;;  i               2  150[BANK0 ] unsigned int 
  2364 ;;  reversed       31  116[BANK0 ] unsigned char [31]
  2365 ;;  len             2  148[BANK0 ] unsigned int 
  2366 ;;  keepState       1  147[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;Total ram usage:       40 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 9
  2383 ;; This function calls:
  2384 ;;		_printf
  2385 ;;		_strlen
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text1
  2392   003CFC                     __ptext1:
  2393                           	callstack 0
  2394   003CFC                     _runUART:
  2395                           	callstack 21
  2396   003CFC                     
  2397                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2398   003CFC  8492               	bsf	146,2,c	;volatile
  2399                           
  2400                           ;UART.c: 8:     ANSELCbits.ANSC6 = 0;
  2401   003CFE  010F               	movlb	15	; () banked
  2402   003D00  9D3A               	bcf	58,6,b	;volatile
  2403                           
  2404                           ;UART.c: 9:     ANSELCbits.ANSC7 = 0;
  2405   003D02  9F3A               	bcf	58,7,b	;volatile
  2406                           
  2407                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2408   003D04  8C94               	bsf	148,6,c	;volatile
  2409                           
  2410                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2411   003D06  8E94               	bsf	148,7,c	;volatile
  2412   003D08                     
  2413                           ; BSR set to: 15
  2414                           ;UART.c: 14:     SPBRG1 = 25;
  2415   003D08  0E19               	movlw	25
  2416   003D0A  6EAF               	movwf	175,c	;volatile
  2417   003D0C                     
  2418                           ; BSR set to: 15
  2419                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2420   003D0C  98AC               	bcf	172,4,c	;volatile
  2421   003D0E                     
  2422                           ; BSR set to: 15
  2423                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2424   003D0E  8EAB               	bsf	171,7,c	;volatile
  2425   003D10                     
  2426                           ; BSR set to: 15
  2427                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2428   003D10  8AAC               	bsf	172,5,c	;volatile
  2429   003D12                     
  2430                           ; BSR set to: 15
  2431                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2432   003D12  88AB               	bsf	171,4,c	;volatile
  2433                           
  2434                           ;UART.c: 21:     UARTIE = 1;
  2435   003D14  0E01               	movlw	1
  2436   003D16  0101               	movlb	1	; () banked
  2437   003D18  6F25               	movwf	_UARTIE& (0+255),b
  2438   003D1A                     
  2439                           ; BSR set to: 1
  2440                           ;UART.c: 22:     RC1IE = 1;
  2441   003D1A  8A9D               	bsf	3997,5,c	;volatile
  2442   003D1C                     
  2443                           ; BSR set to: 1
  2444                           ;UART.c: 23:     PEIE = 1;
  2445   003D1C  8CF2               	bsf	4082,6,c	;volatile
  2446   003D1E                     
  2447                           ; BSR set to: 1
  2448                           ;UART.c: 24:     GIE = 1;
  2449   003D1E  8EF2               	bsf	4082,7,c	;volatile
  2450                           
  2451                           ;UART.c: 26:     uint8_t keepState = 1;
  2452   003D20  0E01               	movlw	1
  2453   003D22  0100               	movlb	0	; () banked
  2454   003D24  6FF3               	movwf	runUART@keepState& (0+255),b
  2455                           
  2456                           ;UART.c: 28:     while(keepState){
  2457   003D26  EF21  F01F         	goto	l579
  2458   003D2A                     l8022:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;UART.c: 29:         if(gmail.full){
  2462   003D2A  0101               	movlb	1	; () banked
  2463   003D2C  5196               	movf	(_gmail+31)& (0+255),w,b	;volatile
  2464   003D2E  B4D8               	btfsc	status,2,c
  2465   003D30  EF9C  F01E         	goto	u9841
  2466   003D34  EF9E  F01E         	goto	u9840
  2467   003D38                     u9841:
  2468   003D38  EFFD  F01E         	goto	l581
  2469   003D3C                     u9840:
  2470   003D3C                     
  2471                           ; BSR set to: 1
  2472                           ;UART.c: 30:             char reversed[31];;UART.c: 31:             size_t len = strlen(
      +                          (const char*)gmail.data);
  2473   003D3C  0E77               	movlw	low _gmail
  2474   003D3E  6E06               	movwf	strlen@s^0,c
  2475   003D40  0E01               	movlw	high _gmail
  2476   003D42  6E07               	movwf	(strlen@s+1)^0,c
  2477   003D44  EC5C  F028         	call	_strlen	;wreg free
  2478   003D48  C006  F0F4         	movff	?_strlen,runUART@len
  2479   003D4C  C007  F0F5         	movff	?_strlen+1,runUART@len+1
  2480   003D50                     
  2481                           ;UART.c: 33:             for(size_t i = 0; i < len; i++) {
  2482   003D50  0E00               	movlw	0
  2483   003D52  0100               	movlb	0	; () banked
  2484   003D54  6FF7               	movwf	(runUART@i+1)& (0+255),b
  2485   003D56  0E00               	movlw	0
  2486   003D58  6FF6               	movwf	runUART@i& (0+255),b
  2487   003D5A  EFC5  F01E         	goto	l8032
  2488   003D5E                     l8028:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;UART.c: 34:                 reversed[i] = gmail.data[len - 1 - i];
  2492   003D5E  0E76               	movlw	low (_gmail+65535)
  2493   003D60  6FD2               	movwf	??_runUART& (0+255),b
  2494   003D62  0E01               	movlw	high (_gmail+65535)
  2495   003D64  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2496   003D66  51F6               	movf	runUART@i& (0+255),w,b
  2497   003D68  5FD2               	subwf	??_runUART& (0+255),f,b
  2498   003D6A  51F7               	movf	(runUART@i+1)& (0+255),w,b
  2499   003D6C  5BD3               	subwfb	(??_runUART+1)& (0+255),f,b
  2500   003D6E  51F4               	movf	runUART@len& (0+255),w,b
  2501   003D70  25D2               	addwf	??_runUART& (0+255),w,b
  2502   003D72  6ED9               	movwf	fsr2l,c
  2503   003D74  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2504   003D76  21D3               	addwfc	(??_runUART+1)& (0+255),w,b
  2505   003D78  6EDA               	movwf	fsr2h,c
  2506   003D7A  51F6               	movf	runUART@i& (0+255),w,b
  2507   003D7C  0FD4               	addlw	low runUART@reversed
  2508   003D7E  6EE1               	movwf	fsr1l,c
  2509   003D80  6AE2               	clrf	fsr1h,c
  2510   003D82  CFDF FFE7          	movff	indf2,indf1
  2511   003D86                     
  2512                           ; BSR set to: 0
  2513                           ;UART.c: 35:             }
  2514   003D86  4BF6               	infsnz	runUART@i& (0+255),f,b
  2515   003D88  2BF7               	incf	(runUART@i+1)& (0+255),f,b
  2516   003D8A                     l8032:
  2517                           
  2518                           ; BSR set to: 0
  2519   003D8A  51F4               	movf	runUART@len& (0+255),w,b
  2520   003D8C  5DF6               	subwf	runUART@i& (0+255),w,b
  2521   003D8E  51F5               	movf	(runUART@len+1)& (0+255),w,b
  2522   003D90  59F7               	subwfb	(runUART@i+1)& (0+255),w,b
  2523   003D92  A0D8               	btfss	status,0,c
  2524   003D94  EFCE  F01E         	goto	u9851
  2525   003D98  EFD0  F01E         	goto	u9850
  2526   003D9C                     u9851:
  2527   003D9C  EFAF  F01E         	goto	l8028
  2528   003DA0                     u9850:
  2529   003DA0                     
  2530                           ; BSR set to: 0
  2531                           ;UART.c: 36:             reversed[len] = '\0';
  2532   003DA0  51F4               	movf	runUART@len& (0+255),w,b
  2533   003DA2  0FD4               	addlw	low runUART@reversed
  2534   003DA4  6ED9               	movwf	fsr2l,c
  2535   003DA6  6ADA               	clrf	fsr2h,c
  2536   003DA8  6ADF               	clrf	indf2,c
  2537   003DAA                     
  2538                           ; BSR set to: 0
  2539                           ;UART.c: 37:             printf("%s \n", reversed);
  2540   003DAA  0ED2               	movlw	low STR_28
  2541   003DAC  6FCE               	movwf	printf@fmt& (0+255),b
  2542   003DAE  0EFF               	movlw	high STR_28
  2543   003DB0  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2544   003DB2  0ED4               	movlw	low runUART@reversed
  2545   003DB4  6FD0               	movwf	(?_printf+2)& (0+255),b
  2546   003DB6  6BD1               	clrf	(?_printf+3)& (0+255),b
  2547   003DB8  EC00  F029         	call	_printf	;wreg free
  2548   003DBC                     
  2549                           ;UART.c: 39:             gmail.full = 0;
  2550   003DBC  0E00               	movlw	0
  2551   003DBE  0101               	movlb	1	; () banked
  2552   003DC0  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
  2553   003DC2                     
  2554                           ; BSR set to: 1
  2555                           ;UART.c: 41:             for(int p = 0; p < 31; p++) {
  2556   003DC2  0E00               	movlw	0
  2557   003DC4  0100               	movlb	0	; () banked
  2558   003DC6  6FF9               	movwf	(runUART@p+1)& (0+255),b
  2559   003DC8  0E00               	movlw	0
  2560   003DCA  6FF8               	movwf	runUART@p& (0+255),b
  2561   003DCC                     l8046:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;UART.c: 42:                 gmail.data[p] = '\0';
  2565   003DCC  0E77               	movlw	low _gmail
  2566   003DCE  25F8               	addwf	runUART@p& (0+255),w,b
  2567   003DD0  6ED9               	movwf	fsr2l,c
  2568   003DD2  0E01               	movlw	high _gmail
  2569   003DD4  21F9               	addwfc	(runUART@p+1)& (0+255),w,b
  2570   003DD6  6EDA               	movwf	fsr2h,c
  2571   003DD8  6ADF               	clrf	indf2,c
  2572   003DDA                     
  2573                           ; BSR set to: 0
  2574                           ;UART.c: 43:             }
  2575   003DDA  4BF8               	infsnz	runUART@p& (0+255),f,b
  2576   003DDC  2BF9               	incf	(runUART@p+1)& (0+255),f,b
  2577   003DDE                     
  2578                           ; BSR set to: 0
  2579   003DDE  BFF9               	btfsc	(runUART@p+1)& (0+255),7,b
  2580   003DE0  EFFB  F01E         	goto	u9861
  2581   003DE4  51F9               	movf	(runUART@p+1)& (0+255),w,b
  2582   003DE6  E109               	bnz	u9860
  2583   003DE8  0E1F               	movlw	31
  2584   003DEA  5DF8               	subwf	runUART@p& (0+255),w,b
  2585   003DEC  A0D8               	btfss	status,0,c
  2586   003DEE  EFFB  F01E         	goto	u9861
  2587   003DF2  EFFD  F01E         	goto	u9860
  2588   003DF6                     u9861:
  2589   003DF6  EFE6  F01E         	goto	l8046
  2590   003DFA                     u9860:
  2591   003DFA                     l581:
  2592                           
  2593                           ;UART.c: 47:         if(PORTAbits.RA2){
  2594   003DFA  A480               	btfss	128,2,c	;volatile
  2595   003DFC  EF02  F01F         	goto	u9871
  2596   003E00  EF04  F01F         	goto	u9870
  2597   003E04                     u9871:
  2598   003E04  EF21  F01F         	goto	l579
  2599   003E08                     u9870:
  2600   003E08                     
  2601                           ;UART.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2602   003E08  0E03               	movlw	3
  2603   003E0A  0100               	movlb	0	; () banked
  2604   003E0C  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2605   003E0E  0E08               	movlw	8
  2606   003E10  6FD2               	movwf	??_runUART& (0+255),b
  2607   003E12  0E77               	movlw	119
  2608   003E14                     u10427:
  2609   003E14  2EE8               	decfsz	wreg,f,c
  2610   003E16  D7FE               	bra	u10427
  2611   003E18  2FD2               	decfsz	??_runUART& (0+255),f,b
  2612   003E1A  D7FC               	bra	u10427
  2613   003E1C  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2614   003E1E  D7FA               	bra	u10427
  2615   003E20                     
  2616                           ;UART.c: 49:             if(PORTAbits.RA2){
  2617   003E20  A480               	btfss	128,2,c	;volatile
  2618   003E22  EF15  F01F         	goto	u9881
  2619   003E26  EF17  F01F         	goto	u9880
  2620   003E2A                     u9881:
  2621   003E2A  EF21  F01F         	goto	l579
  2622   003E2E                     u9880:
  2623   003E2E                     l589:
  2624   003E2E  B480               	btfsc	128,2,c	;volatile
  2625   003E30  EF1C  F01F         	goto	u9891
  2626   003E34  EF1E  F01F         	goto	u9890
  2627   003E38                     u9891:
  2628   003E38  EF17  F01F         	goto	l589
  2629   003E3C                     u9890:
  2630   003E3C                     
  2631                           ;UART.c: 51:                 keepState = 0;
  2632   003E3C  0E00               	movlw	0
  2633   003E3E  0100               	movlb	0	; () banked
  2634   003E40  6FF3               	movwf	runUART@keepState& (0+255),b
  2635   003E42                     l579:
  2636                           
  2637                           ;UART.c: 28:     while(keepState){
  2638   003E42  0100               	movlb	0	; () banked
  2639   003E44  51F3               	movf	runUART@keepState& (0+255),w,b
  2640   003E46  A4D8               	btfss	status,2,c
  2641   003E48  EF28  F01F         	goto	u9901
  2642   003E4C  EF2A  F01F         	goto	u9900
  2643   003E50                     u9901:
  2644   003E50  EF95  F01E         	goto	l8022
  2645   003E54                     u9900:
  2646   003E54                     
  2647                           ; BSR set to: 0
  2648                           ;UART.c: 58:     RCSTA1bits.SPEN = 0;
  2649   003E54  9EAB               	bcf	171,7,c	;volatile
  2650                           
  2651                           ;UART.c: 59:     TXSTA1bits.TXEN = 0;
  2652   003E56  9AAC               	bcf	172,5,c	;volatile
  2653                           
  2654                           ;UART.c: 60:     RCSTA1bits.CREN = 0;
  2655   003E58  98AB               	bcf	171,4,c	;volatile
  2656   003E5A                     
  2657                           ; BSR set to: 0
  2658                           ;UART.c: 61:     UARTIE = 0;
  2659   003E5A  0E00               	movlw	0
  2660   003E5C  0101               	movlb	1	; () banked
  2661   003E5E  6F25               	movwf	_UARTIE& (0+255),b
  2662   003E60                     
  2663                           ; BSR set to: 1
  2664                           ;UART.c: 62:     RC1IE = 0;
  2665   003E60  9A9D               	bcf	3997,5,c	;volatile
  2666   003E62                     
  2667                           ; BSR set to: 1
  2668                           ;UART.c: 63:     PEIE = 0;
  2669   003E62  9CF2               	bcf	4082,6,c	;volatile
  2670   003E64                     
  2671                           ; BSR set to: 1
  2672                           ;UART.c: 64:     GIE = 0;
  2673   003E64  9EF2               	bcf	4082,7,c	;volatile
  2674   003E66                     
  2675                           ; BSR set to: 1
  2676   003E66  0012               	return		;funcret
  2677   003E68                     __end_of_runUART:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _strlen *****************
  2681 ;; Defined at:
  2682 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strlen.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  s               2    5[COMRAM] PTR const unsigned char 
  2685 ;;		 -> gmail$data(31), gmail(32), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  a               2    7[COMRAM] PTR const unsigned char 
  2688 ;;		 -> gmail$data(31), gmail(32), 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2    5[COMRAM] unsigned int 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:        4 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_runUART
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text2
  2713   0050B8                     __ptext2:
  2714                           	callstack 0
  2715   0050B8                     _strlen:
  2716                           	callstack 28
  2717   0050B8  C006  F008         	movff	strlen@s,strlen@a
  2718   0050BC  C007  F009         	movff	strlen@s+1,strlen@a+1
  2719   0050C0  EF64  F028         	goto	l7884
  2720   0050C4                     l7882:
  2721   0050C4  4A06               	infsnz	strlen@s^0,f,c
  2722   0050C6  2A07               	incf	(strlen@s+1)^0,f,c
  2723   0050C8                     l7884:
  2724   0050C8  C006  FFD9         	movff	strlen@s,fsr2l
  2725   0050CC  C007  FFDA         	movff	strlen@s+1,fsr2h
  2726   0050D0  50DF               	movf	indf2,w,c
  2727   0050D2  A4D8               	btfss	status,2,c
  2728   0050D4  EF6E  F028         	goto	u9651
  2729   0050D8  EF70  F028         	goto	u9650
  2730   0050DC                     u9651:
  2731   0050DC  EF62  F028         	goto	l7882
  2732   0050E0                     u9650:
  2733   0050E0  5008               	movf	strlen@a^0,w,c
  2734   0050E2  5C06               	subwf	strlen@s^0,w,c
  2735   0050E4  6E06               	movwf	?_strlen^0,c
  2736   0050E6  5009               	movf	(strlen@a+1)^0,w,c
  2737   0050E8  5807               	subwfb	(strlen@s+1)^0,w,c
  2738   0050EA  6E07               	movwf	(?_strlen+1)^0,c
  2739   0050EC  0012               	return		;funcret
  2740   0050EE                     __end_of_strlen:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _runPWM *****************
  2744 ;; Defined at:
  2745 ;;		line 11 in file "PWM.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  multiplier      1   34[COMRAM] unsigned char 
  2750 ;;  keepState       1   33[COMRAM] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        4 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 2
  2767 ;; This function calls:
  2768 ;;		___awdiv
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text3
  2775   003FD4                     __ptext3:
  2776                           	callstack 0
  2777   003FD4                     _runPWM:
  2778                           	callstack 28
  2779   003FD4                     
  2780                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2781   003FD4  8494               	bsf	148,2,c	;volatile
  2782   003FD6                     
  2783                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2784   003FD6  0EFC               	movlw	-4
  2785   003FD8  010F               	movlb	15	; () banked
  2786   003FDA  1749               	andwf	73,f,b	;volatile
  2787                           
  2788                           ;PWM.c: 15:     PR2 = 199;
  2789   003FDC  0EC7               	movlw	199
  2790   003FDE  6EBB               	movwf	187,c	;volatile
  2791                           
  2792                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2793   003FE0  0E0C               	movlw	12
  2794   003FE2  12BD               	iorwf	189,f,c	;volatile
  2795                           
  2796                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2797   003FE4  50BD               	movf	189,w,c	;volatile
  2798   003FE6  0B3F               	andlw	-193
  2799   003FE8  0980               	iorlw	128
  2800   003FEA  6EBD               	movwf	189,c	;volatile
  2801                           
  2802                           ;PWM.c: 18:     CCPR1L = 0;
  2803   003FEC  0E00               	movlw	0
  2804   003FEE  6EBE               	movwf	190,c	;volatile
  2805   003FF0                     
  2806                           ; BSR set to: 15
  2807                           ;PWM.c: 19:     TMR2IF = 0;
  2808   003FF0  929E               	bcf	3998,1,c	;volatile
  2809   003FF2                     
  2810                           ; BSR set to: 15
  2811                           ;PWM.c: 20:     TMR2ON = 1;
  2812   003FF2  84BA               	bsf	4026,2,c	;volatile
  2813   003FF4                     l519:
  2814   003FF4  A29E               	btfss	3998,1,c	;volatile
  2815   003FF6  EFFF  F01F         	goto	u9911
  2816   003FFA  EF01  F020         	goto	u9910
  2817   003FFE                     u9911:
  2818   003FFE  EFFA  F01F         	goto	l519
  2819   004002                     u9910:
  2820   004002                     
  2821                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2822   004002  8494               	bsf	148,2,c	;volatile
  2823                           
  2824                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2825   004004  8892               	bsf	146,4,c	;volatile
  2826                           
  2827                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2828   004006  8492               	bsf	146,2,c	;volatile
  2829                           
  2830                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2831   004008  9495               	bcf	149,2,c	;volatile
  2832                           
  2833                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2834   00400A  9695               	bcf	149,3,c	;volatile
  2835                           
  2836                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2837   00400C  9894               	bcf	148,4,c	;volatile
  2838                           
  2839                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2840   00400E  9895               	bcf	149,4,c	;volatile
  2841                           
  2842                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2843   004010  9A95               	bcf	149,5,c	;volatile
  2844                           
  2845                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2846   004012  9C95               	bcf	149,6,c	;volatile
  2847                           
  2848                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2849   004014  848C               	bsf	140,2,c	;volatile
  2850                           
  2851                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2852   004016  868C               	bsf	140,3,c	;volatile
  2853                           
  2854                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2855   004018  888B               	bsf	139,4,c	;volatile
  2856                           
  2857                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2858   00401A  888C               	bsf	140,4,c	;volatile
  2859                           
  2860                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2861   00401C  8A8C               	bsf	140,5,c	;volatile
  2862                           
  2863                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2864   00401E  8C8C               	bsf	140,6,c	;volatile
  2865   004020                     
  2866                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2867   004020  0E01               	movlw	1
  2868   004022  6E22               	movwf	runPWM@keepState^0,c
  2869                           
  2870                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2871   004024  0E00               	movlw	0
  2872   004026  6E23               	movwf	runPWM@multiplier^0,c
  2873                           
  2874                           ;PWM.c: 47:     while(keepState){
  2875   004028  EF80  F020         	goto	l522
  2876   00402C                     l8080:
  2877                           
  2878                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2879   00402C  5023               	movf	runPWM@multiplier^0,w,c
  2880   00402E  0DC7               	mullw	199
  2881   004030  CFF3 F018          	movff	prodl,___awdiv@dividend
  2882   004034  CFF4 F019          	movff	prodh,___awdiv@dividend+1
  2883   004038  0E00               	movlw	0
  2884   00403A  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  2885   00403C  0E05               	movlw	5
  2886   00403E  6E1A               	movwf	___awdiv@divisor^0,c
  2887   004040  ECE5  F023         	call	___awdiv	;wreg free
  2888   004044  5018               	movf	?___awdiv^0,w,c
  2889   004046  6EBE               	movwf	190,c	;volatile
  2890   004048                     
  2891                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2892   004048  A880               	btfss	128,4,c	;volatile
  2893   00404A  EF29  F020         	goto	u9921
  2894   00404E  EF2B  F020         	goto	u9920
  2895   004052                     u9921:
  2896   004052  EF5D  F020         	goto	l8098
  2897   004056                     u9920:
  2898   004056                     
  2899                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2900   004056  0E03               	movlw	3
  2901   004058  6E21               	movwf	(??_runPWM+1)^0,c
  2902   00405A  0E08               	movlw	8
  2903   00405C  6E20               	movwf	??_runPWM^0,c
  2904   00405E  0E77               	movlw	119
  2905   004060                     u10437:
  2906   004060  2EE8               	decfsz	wreg,f,c
  2907   004062  D7FE               	bra	u10437
  2908   004064  2E20               	decfsz	??_runPWM^0,f,c
  2909   004066  D7FC               	bra	u10437
  2910   004068  2E21               	decfsz	(??_runPWM+1)^0,f,c
  2911   00406A  D7FA               	bra	u10437
  2912   00406C  0000               	nop	
  2913   00406E                     
  2914                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2915   00406E  A880               	btfss	128,4,c	;volatile
  2916   004070  EF3C  F020         	goto	u9931
  2917   004074  EF3E  F020         	goto	u9930
  2918   004078                     u9931:
  2919   004078  EF5D  F020         	goto	l8098
  2920   00407C                     u9930:
  2921   00407C                     l526:
  2922   00407C  B880               	btfsc	128,4,c	;volatile
  2923   00407E  EF43  F020         	goto	u9941
  2924   004082  EF45  F020         	goto	u9940
  2925   004086                     u9941:
  2926   004086  EF3E  F020         	goto	l526
  2927   00408A                     u9940:
  2928   00408A                     
  2929                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2930   00408A  0E05               	movlw	5
  2931   00408C  1823               	xorwf	runPWM@multiplier^0,w,c
  2932   00408E  A4D8               	btfss	status,2,c
  2933   004090  EF4C  F020         	goto	u9951
  2934   004094  EF4E  F020         	goto	u9950
  2935   004098                     u9951:
  2936   004098  EF52  F020         	goto	l8094
  2937   00409C                     u9950:
  2938   00409C                     
  2939                           ;PWM.c: 56:                     multiplier = 0;
  2940   00409C  0E00               	movlw	0
  2941   00409E  6E23               	movwf	runPWM@multiplier^0,c
  2942                           
  2943                           ;PWM.c: 57:                 } else if(multiplier <5){
  2944   0040A0  EF5D  F020         	goto	l8098
  2945   0040A4                     l8094:
  2946   0040A4  0E05               	movlw	5
  2947   0040A6  6023               	cpfslt	runPWM@multiplier^0,c
  2948   0040A8  EF58  F020         	goto	u9961
  2949   0040AC  EF5A  F020         	goto	u9960
  2950   0040B0                     u9961:
  2951   0040B0  EF5D  F020         	goto	l525
  2952   0040B4                     u9960:
  2953   0040B4                     
  2954                           ;PWM.c: 58:                     multiplier++;
  2955   0040B4  2A23               	incf	runPWM@multiplier^0,f,c
  2956   0040B6  EF5D  F020         	goto	l8098
  2957   0040BA                     l525:
  2958   0040BA                     l8098:
  2959                           
  2960                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2961   0040BA  A480               	btfss	128,2,c	;volatile
  2962   0040BC  EF62  F020         	goto	u9971
  2963   0040C0  EF64  F020         	goto	u9970
  2964   0040C4                     u9971:
  2965   0040C4  EF80  F020         	goto	l522
  2966   0040C8                     u9970:
  2967   0040C8                     
  2968                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2969   0040C8  0E03               	movlw	3
  2970   0040CA  6E21               	movwf	(??_runPWM+1)^0,c
  2971   0040CC  0E08               	movlw	8
  2972   0040CE  6E20               	movwf	??_runPWM^0,c
  2973   0040D0  0E77               	movlw	119
  2974   0040D2                     u10447:
  2975   0040D2  2EE8               	decfsz	wreg,f,c
  2976   0040D4  D7FE               	bra	u10447
  2977   0040D6  2E20               	decfsz	??_runPWM^0,f,c
  2978   0040D8  D7FC               	bra	u10447
  2979   0040DA  2E21               	decfsz	(??_runPWM+1)^0,f,c
  2980   0040DC  D7FA               	bra	u10447
  2981   0040DE  0000               	nop	
  2982   0040E0                     
  2983                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2984   0040E0  A480               	btfss	128,2,c	;volatile
  2985   0040E2  EF75  F020         	goto	u9981
  2986   0040E6  EF77  F020         	goto	u9980
  2987   0040EA                     u9981:
  2988   0040EA  EF80  F020         	goto	l522
  2989   0040EE                     u9980:
  2990   0040EE                     l534:
  2991   0040EE  B480               	btfsc	128,2,c	;volatile
  2992   0040F0  EF7C  F020         	goto	u9991
  2993   0040F4  EF7E  F020         	goto	u9990
  2994   0040F8                     u9991:
  2995   0040F8  EF77  F020         	goto	l534
  2996   0040FC                     u9990:
  2997   0040FC                     
  2998                           ;PWM.c: 67:             keepState = 0;
  2999   0040FC  0E00               	movlw	0
  3000   0040FE  6E22               	movwf	runPWM@keepState^0,c
  3001   004100                     l522:
  3002                           
  3003                           ;PWM.c: 47:     while(keepState){
  3004   004100  5022               	movf	runPWM@keepState^0,w,c
  3005   004102  A4D8               	btfss	status,2,c
  3006   004104  EF86  F020         	goto	u10001
  3007   004108  EF88  F020         	goto	u10000
  3008   00410C                     u10001:
  3009   00410C  EF16  F020         	goto	l8080
  3010   004110                     u10000:
  3011   004110                     
  3012                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  3013   004110  0EF0               	movlw	-16
  3014   004112  16BD               	andwf	189,f,c	;volatile
  3015   004114                     
  3016                           ;PWM.c: 75:     TMR2ON = 0;
  3017   004114  94BA               	bcf	4026,2,c	;volatile
  3018   004116                     
  3019                           ;PWM.c: 76:     TMR2IE = 0;
  3020   004116  929D               	bcf	3997,1,c	;volatile
  3021   004118  0012               	return		;funcret
  3022   00411A                     __end_of_runPWM:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _runMUSIC *****************
  3026 ;; Defined at:
  3027 ;;		line 10 in file "MUSIC.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		None
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 1
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text4
  3056   00528A                     __ptext4:
  3057                           	callstack 0
  3058   00528A                     _runMUSIC:
  3059                           	callstack 29
  3060   00528A  0012               	return		;funcret
  3061   00528C                     __end_of_runMUSIC:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _runGPIO *****************
  3065 ;; Defined at:
  3066 ;;		line 19 in file "GPIO.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  j               2   35[COMRAM] int 
  3071 ;;  states         12    8[COMRAM] unsigned char [12]
  3072 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  3073 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  3074 ;;		 -> LED2_Control(1), LED1_Control(1), 
  3075 ;;  numberOfStat    2   32[COMRAM] int 
  3076 ;;  GPIOi           1   34[COMRAM] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Locals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;Total ram usage:       31 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 2
  3093 ;; This function calls:
  3094 ;;		_LED1_Control
  3095 ;;		_LED2_Control
  3096 ;;		_LED3_Control
  3097 ;;		_LED4_Control
  3098 ;;		_LED5_Control
  3099 ;;		_LED6_Control
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text5
  3106   003E68                     __ptext5:
  3107                           	callstack 0
  3108   003E68                     _runGPIO:
  3109                           	callstack 28
  3110   003E68                     
  3111                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  3112   003E68  9495               	bcf	149,2,c	;volatile
  3113                           
  3114                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  3115   003E6A  9695               	bcf	149,3,c	;volatile
  3116                           
  3117                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  3118   003E6C  9894               	bcf	148,4,c	;volatile
  3119                           
  3120                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  3121   003E6E  9895               	bcf	149,4,c	;volatile
  3122                           
  3123                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  3124   003E70  9A95               	bcf	149,5,c	;volatile
  3125                           
  3126                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  3127   003E72  9C95               	bcf	149,6,c	;volatile
  3128                           
  3129                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  3130   003E74  010F               	movlb	15	; () banked
  3131   003E76  953B               	bcf	59,2,b	;volatile
  3132                           
  3133                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  3134   003E78  973B               	bcf	59,3,b	;volatile
  3135                           
  3136                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  3137   003E7A  993A               	bcf	58,4,b	;volatile
  3138                           
  3139                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  3140   003E7C  993B               	bcf	59,4,b	;volatile
  3141                           
  3142                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  3143   003E7E  9B3B               	bcf	59,5,b	;volatile
  3144                           
  3145                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  3146   003E80  9D3B               	bcf	59,6,b	;volatile
  3147                           
  3148                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  3149   003E82  848C               	bsf	140,2,c	;volatile
  3150                           
  3151                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  3152   003E84  868C               	bsf	140,3,c	;volatile
  3153                           
  3154                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  3155   003E86  888B               	bsf	139,4,c	;volatile
  3156                           
  3157                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  3158   003E88  888C               	bsf	140,4,c	;volatile
  3159                           
  3160                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  3161   003E8A  8A8C               	bsf	140,5,c	;volatile
  3162                           
  3163                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  3164   003E8C  8C8C               	bsf	140,6,c	;volatile
  3165                           
  3166                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  3167   003E8E  8492               	bsf	146,2,c	;volatile
  3168                           
  3169                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  3170   003E90  9538               	bcf	56,2,b	;volatile
  3171   003E92                     
  3172                           ; BSR set to: 15
  3173                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  3174   003E92  0E3F               	movlw	-193
  3175   003E94  16CD               	andwf	205,f,c	;volatile
  3176                           
  3177                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  3178   003E96  0E30               	movlw	48
  3179   003E98  12CD               	iorwf	205,f,c	;volatile
  3180   003E9A                     
  3181                           ; BSR set to: 15
  3182                           ;GPIO.c: 49:     TMR1IE = 1;
  3183   003E9A  809D               	bsf	3997,0,c	;volatile
  3184   003E9C                     
  3185                           ; BSR set to: 15
  3186                           ;GPIO.c: 50:     PEIE = 1;
  3187   003E9C  8CF2               	bsf	4082,6,c	;volatile
  3188   003E9E                     
  3189                           ; BSR set to: 15
  3190                           ;GPIO.c: 51:     GIE = 1;
  3191   003E9E  8EF2               	bsf	4082,7,c	;volatile
  3192                           
  3193                           ;GPIO.c: 52:     GPIOIE = 1;
  3194   003EA0  0E01               	movlw	1
  3195   003EA2  0101               	movlb	1	; () banked
  3196   003EA4  6F26               	movwf	_GPIOIE& (0+255),b
  3197   003EA6                     
  3198                           ; BSR set to: 1
  3199                           ;GPIO.c: 53:     TMR1IF = 1;
  3200   003EA6  809E               	bsf	3998,0,c	;volatile
  3201                           
  3202                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  3203   003EA8  0E9E               	movlw	158
  3204   003EAA  6ECF               	movwf	207,c	;volatile
  3205   003EAC  0E58               	movlw	88
  3206   003EAE  6ECE               	movwf	206,c	;volatile
  3207   003EB0                     
  3208                           ; BSR set to: 1
  3209                           ;GPIO.c: 55:     TMR1ON = 1;
  3210   003EB0  80CD               	bsf	4045,0,c	;volatile
  3211                           
  3212                           ;GPIO.c: 58:     keepStateGPIO = 1;
  3213   003EB2  0E01               	movlw	1
  3214   003EB4  0100               	movlb	0	; () banked
  3215   003EB6  6FFE               	movwf	_keepStateGPIO& (0+255),b
  3216   003EB8                     
  3217                           ; BSR set to: 0
  3218                           ;GPIO.c: 60:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  3219   003EB8  EE21  F0EA         	lfsr	2,runGPIO@F6975
  3220   003EBC  EE10  F015         	lfsr	1,runGPIO@LEDControl
  3221   003EC0  0E0B               	movlw	11
  3222   003EC2                     u9751:
  3223   003EC2  CFDB FFE3          	movff	plusw2,plusw1
  3224   003EC6  06E8               	decf	wreg,f,c
  3225   003EC8  E2FC               	bc	u9751
  3226   003ECA                     
  3227                           ; BSR set to: 0
  3228                           ;GPIO.c: 61:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  3229   003ECA  EE21  F0DE         	lfsr	2,runGPIO@F6993
  3230   003ECE  EE10  F009         	lfsr	1,runGPIO@states
  3231   003ED2  0E0B               	movlw	11
  3232   003ED4                     u9761:
  3233   003ED4  CFDB FFE3          	movff	plusw2,plusw1
  3234   003ED8  06E8               	decf	wreg,f,c
  3235   003EDA  E2FC               	bc	u9761
  3236                           
  3237                           ;GPIO.c: 62:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  3238   003EDC  0E00               	movlw	0
  3239   003EDE  6E22               	movwf	(runGPIO@numberOfStates+1)^0,c
  3240   003EE0  0E0C               	movlw	12
  3241   003EE2  6E21               	movwf	runGPIO@numberOfStates^0,c
  3242                           
  3243                           ;GPIO.c: 63:     uint8_t GPIOi;;GPIO.c: 64:     GPIOi = 0;
  3244   003EE4  0E00               	movlw	0
  3245   003EE6  6E23               	movwf	runGPIO@GPIOi^0,c
  3246                           
  3247                           ;GPIO.c: 66:     while(keepStateGPIO){
  3248   003EE8  EFD5  F01F         	goto	l372
  3249   003EEC                     l7982:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;GPIO.c: 68:         for(int j = 0; j < 6; j++) {
  3253   003EEC  0E00               	movlw	0
  3254   003EEE  6E25               	movwf	(runGPIO@j+1)^0,c
  3255   003EF0  0E00               	movlw	0
  3256   003EF2  6E24               	movwf	runGPIO@j^0,c
  3257   003EF4                     l7988:
  3258                           
  3259                           ;GPIO.c: 69:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  3260   003EF4  5024               	movf	runGPIO@j^0,w,c
  3261   003EF6  0D02               	mullw	2
  3262   003EF8  50F3               	movf	243,w,c
  3263   003EFA  0F15               	addlw	low runGPIO@LEDControl
  3264   003EFC  6ED9               	movwf	fsr2l,c
  3265   003EFE  6ADA               	clrf	fsr2h,c
  3266   003F00  D802               	call	u9778
  3267   003F02  EFA7  F01F         	goto	u9779
  3268   003F06                     u9778:
  3269   003F06  0005               	push	
  3270   003F08  6EFA               	movwf	pclath,c
  3271   003F0A  50DE               	movf	postinc2,w,c
  3272   003F0C  6EFD               	movwf	tosl,c
  3273   003F0E  50DE               	movf	postinc2,w,c
  3274   003F10  6EFE               	movwf	tosh,c
  3275   003F12  50F8               	movf	tblptru,w,c
  3276   003F14  6EFF               	movwf	tosu,c
  3277   003F16  50FA               	movf	pclath,w,c
  3278   003F18  5024               	movf	runGPIO@j^0,w,c
  3279   003F1A  0805               	sublw	5
  3280   003F1C  6E07               	movwf	??_runGPIO^0,c
  3281   003F1E  5023               	movf	runGPIO@GPIOi^0,w,c
  3282   003F20  0F09               	addlw	low runGPIO@states
  3283   003F22  6ED9               	movwf	fsr2l,c
  3284   003F24  6ADA               	clrf	fsr2h,c
  3285   003F26  50DF               	movf	indf2,w,c
  3286   003F28  6E08               	movwf	(??_runGPIO+1)^0,c
  3287   003F2A  2A07               	incf	??_runGPIO^0,f,c
  3288   003F2C  EF9A  F01F         	goto	u9784
  3289   003F30                     u9785:
  3290   003F30  90D8               	bcf	status,0,c
  3291   003F32  3208               	rrcf	(??_runGPIO+1)^0,f,c
  3292   003F34                     u9784:
  3293   003F34  2E07               	decfsz	??_runGPIO^0,f,c
  3294   003F36  EF98  F01F         	goto	u9785
  3295   003F3A  A008               	btfss	(??_runGPIO+1)^0,0,c
  3296   003F3C  EFA2  F01F         	goto	u9791
  3297   003F40  EFA5  F01F         	goto	u9790
  3298   003F44                     u9791:
  3299   003F44  0E01               	movlw	1
  3300   003F46  EFA6  F01F         	goto	u9800
  3301   003F4A                     u9790:
  3302   003F4A  0E00               	movlw	0
  3303   003F4C                     u9800:
  3304   003F4C  0012               	return		;indir
  3305   003F4E                     u9779:
  3306   003F4E                     
  3307                           ;GPIO.c: 70:         }
  3308   003F4E  4A24               	infsnz	runGPIO@j^0,f,c
  3309   003F50  2A25               	incf	(runGPIO@j+1)^0,f,c
  3310   003F52  BE25               	btfsc	(runGPIO@j+1)^0,7,c
  3311   003F54  EFB5  F01F         	goto	u9811
  3312   003F58  5025               	movf	(runGPIO@j+1)^0,w,c
  3313   003F5A  E109               	bnz	u9810
  3314   003F5C  0E06               	movlw	6
  3315   003F5E  5C24               	subwf	runGPIO@j^0,w,c
  3316   003F60  A0D8               	btfss	status,0,c
  3317   003F62  EFB5  F01F         	goto	u9811
  3318   003F66  EFB7  F01F         	goto	u9810
  3319   003F6A                     u9811:
  3320   003F6A  EF7A  F01F         	goto	l7988
  3321   003F6E                     u9810:
  3322   003F6E                     
  3323                           ;GPIO.c: 71:         _delay((unsigned long)((400)*(32E6/4000.0)));
  3324   003F6E  0E11               	movlw	17
  3325   003F70  6E08               	movwf	(??_runGPIO+1)^0,c
  3326   003F72  0E3C               	movlw	60
  3327   003F74  6E07               	movwf	??_runGPIO^0,c
  3328   003F76  0ECB               	movlw	203
  3329   003F78                     u10457:
  3330   003F78  2EE8               	decfsz	wreg,f,c
  3331   003F7A  D7FE               	bra	u10457
  3332   003F7C  2E07               	decfsz	??_runGPIO^0,f,c
  3333   003F7E  D7FC               	bra	u10457
  3334   003F80  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  3335   003F82  D7FA               	bra	u10457
  3336   003F84  0000               	nop	
  3337   003F86                     
  3338                           ;GPIO.c: 72:         GPIOi++;
  3339   003F86  2A23               	incf	runGPIO@GPIOi^0,f,c
  3340                           
  3341                           ;GPIO.c: 73:         if(GPIOi == numberOfStates){
  3342   003F88  5023               	movf	runGPIO@GPIOi^0,w,c
  3343   003F8A  6E07               	movwf	??_runGPIO^0,c
  3344   003F8C  6A08               	clrf	(??_runGPIO+1)^0,c
  3345   003F8E  5021               	movf	runGPIO@numberOfStates^0,w,c
  3346   003F90  1807               	xorwf	??_runGPIO^0,w,c
  3347   003F92  E107               	bnz	u9821
  3348   003F94  5022               	movf	(runGPIO@numberOfStates+1)^0,w,c
  3349   003F96  1808               	xorwf	(??_runGPIO+1)^0,w,c
  3350   003F98  A4D8               	btfss	status,2,c
  3351   003F9A  EFD1  F01F         	goto	u9821
  3352   003F9E  EFD3  F01F         	goto	u9820
  3353   003FA2                     u9821:
  3354   003FA2  EFD5  F01F         	goto	l372
  3355   003FA6                     u9820:
  3356   003FA6                     
  3357                           ;GPIO.c: 74:             GPIOi = 0;
  3358   003FA6  0E00               	movlw	0
  3359   003FA8  6E23               	movwf	runGPIO@GPIOi^0,c
  3360   003FAA                     l372:
  3361                           
  3362                           ;GPIO.c: 66:     while(keepStateGPIO){
  3363   003FAA  0100               	movlb	0	; () banked
  3364   003FAC  51FE               	movf	_keepStateGPIO& (0+255),w,b
  3365   003FAE  A4D8               	btfss	status,2,c
  3366   003FB0  EFDC  F01F         	goto	u9831
  3367   003FB4  EFDE  F01F         	goto	u9830
  3368   003FB8                     u9831:
  3369   003FB8  EF76  F01F         	goto	l7982
  3370   003FBC                     u9830:
  3371   003FBC                     
  3372                           ; BSR set to: 0
  3373                           ;GPIO.c: 79:     LATDbits.LD2 = 1;
  3374   003FBC  848C               	bsf	140,2,c	;volatile
  3375                           
  3376                           ;GPIO.c: 80:     LATDbits.LD3 = 1;
  3377   003FBE  868C               	bsf	140,3,c	;volatile
  3378                           
  3379                           ;GPIO.c: 81:     LATCbits.LC4 = 1;
  3380   003FC0  888B               	bsf	139,4,c	;volatile
  3381                           
  3382                           ;GPIO.c: 82:     LATDbits.LD4 = 1;
  3383   003FC2  888C               	bsf	140,4,c	;volatile
  3384                           
  3385                           ;GPIO.c: 83:     LATDbits.LD5 = 1;
  3386   003FC4  8A8C               	bsf	140,5,c	;volatile
  3387                           
  3388                           ;GPIO.c: 84:     LATDbits.LD6 = 1;
  3389   003FC6  8C8C               	bsf	140,6,c	;volatile
  3390                           
  3391                           ;GPIO.c: 85:     TMR1ON = 0;
  3392   003FC8  90CD               	bcf	4045,0,c	;volatile
  3393                           
  3394                           ;GPIO.c: 86:     TMR1IE = 0;
  3395   003FCA  909D               	bcf	3997,0,c	;volatile
  3396   003FCC                     
  3397                           ; BSR set to: 0
  3398                           ;GPIO.c: 87:     GPIOIE = 0;
  3399   003FCC  0E00               	movlw	0
  3400   003FCE  0101               	movlb	1	; () banked
  3401   003FD0  6F26               	movwf	_GPIOIE& (0+255),b
  3402   003FD2                     
  3403                           ; BSR set to: 1
  3404   003FD2  0012               	return		;funcret
  3405   003FD4                     __end_of_runGPIO:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _LED5_Control *****************
  3409 ;; Defined at:
  3410 ;;		line 14 in file "GPIO.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  state           1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  state           1    5[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_runGPIO
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text6
  3439   005236                     __ptext6:
  3440                           	callstack 0
  3441   005236                     _LED5_Control:
  3442                           	callstack 28
  3443                           
  3444                           ; BSR set to: 1
  3445                           ;incstack = 0
  3446                           ;LED5_Control@state stored from wreg
  3447   005236  6E06               	movwf	LED5_Control@state^0,c
  3448   005238  B006               	btfsc	LED5_Control@state^0,0,c
  3449   00523A  D002               	bra	u9635
  3450   00523C  9A8C               	bcf	140,5,c	;volatile
  3451   00523E  D001               	bra	u9636
  3452   005240                     u9635:
  3453   005240  8A8C               	bsf	140,5,c	;volatile
  3454   005242                     u9636:
  3455   005242  0012               	return		;funcret
  3456   005244                     __end_of_LED5_Control:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _LED4_Control *****************
  3460 ;; Defined at:
  3461 ;;		line 13 in file "GPIO.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  state           1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  state           1    5[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        1 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_runGPIO
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text7
  3490   005244                     __ptext7:
  3491                           	callstack 0
  3492   005244                     _LED4_Control:
  3493                           	callstack 28
  3494                           
  3495                           ;incstack = 0
  3496                           ;LED4_Control@state stored from wreg
  3497   005244  6E06               	movwf	LED4_Control@state^0,c
  3498   005246  B006               	btfsc	LED4_Control@state^0,0,c
  3499   005248  D002               	bra	u9625
  3500   00524A  988C               	bcf	140,4,c	;volatile
  3501   00524C  D001               	bra	u9626
  3502   00524E                     u9625:
  3503   00524E  888C               	bsf	140,4,c	;volatile
  3504   005250                     u9626:
  3505   005250  0012               	return		;funcret
  3506   005252                     __end_of_LED4_Control:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _LED3_Control *****************
  3510 ;; Defined at:
  3511 ;;		line 12 in file "GPIO.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  state           1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  state           1    5[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_runGPIO
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text8
  3540   005252                     __ptext8:
  3541                           	callstack 0
  3542   005252                     _LED3_Control:
  3543                           	callstack 28
  3544                           
  3545                           ;incstack = 0
  3546                           ;LED3_Control@state stored from wreg
  3547   005252  6E06               	movwf	LED3_Control@state^0,c
  3548   005254  B006               	btfsc	LED3_Control@state^0,0,c
  3549   005256  D002               	bra	u9615
  3550   005258  988B               	bcf	139,4,c	;volatile
  3551   00525A  D001               	bra	u9616
  3552   00525C                     u9615:
  3553   00525C  888B               	bsf	139,4,c	;volatile
  3554   00525E                     u9616:
  3555   00525E  0012               	return		;funcret
  3556   005260                     __end_of_LED3_Control:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _LED2_Control *****************
  3560 ;; Defined at:
  3561 ;;		line 11 in file "GPIO.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  state           1    wreg     unsigned char 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  state           1    5[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;Total ram usage:        1 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_runGPIO
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text9
  3590   005260                     __ptext9:
  3591                           	callstack 0
  3592   005260                     _LED2_Control:
  3593                           	callstack 28
  3594                           
  3595                           ;incstack = 0
  3596                           ;LED2_Control@state stored from wreg
  3597   005260  6E06               	movwf	LED2_Control@state^0,c
  3598   005262  B006               	btfsc	LED2_Control@state^0,0,c
  3599   005264  D002               	bra	u9605
  3600   005266  968C               	bcf	140,3,c	;volatile
  3601   005268  D001               	bra	u9606
  3602   00526A                     u9605:
  3603   00526A  868C               	bsf	140,3,c	;volatile
  3604   00526C                     u9606:
  3605   00526C  0012               	return		;funcret
  3606   00526E                     __end_of_LED2_Control:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _LED1_Control *****************
  3610 ;; Defined at:
  3611 ;;		line 10 in file "GPIO.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  state           1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  state           1    5[COMRAM] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:        1 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_runGPIO
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text10
  3640   00526E                     __ptext10:
  3641                           	callstack 0
  3642   00526E                     _LED1_Control:
  3643                           	callstack 28
  3644                           
  3645                           ;incstack = 0
  3646                           ;LED1_Control@state stored from wreg
  3647   00526E  6E06               	movwf	LED1_Control@state^0,c
  3648   005270  B006               	btfsc	LED1_Control@state^0,0,c
  3649   005272  D002               	bra	u9595
  3650   005274  948C               	bcf	140,2,c	;volatile
  3651   005276  D001               	bra	u9596
  3652   005278                     u9595:
  3653   005278  848C               	bsf	140,2,c	;volatile
  3654   00527A                     u9596:
  3655   00527A  0012               	return		;funcret
  3656   00527C                     __end_of_LED1_Control:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _LED6_Control *****************
  3660 ;; Defined at:
  3661 ;;		line 15 in file "GPIO.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  state           1    wreg     unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  state           1    5[COMRAM] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        1 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 1
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_runGPIO
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text11
  3690   00527C                     __ptext11:
  3691                           	callstack 0
  3692   00527C                     _LED6_Control:
  3693                           	callstack 28
  3694                           
  3695                           ;incstack = 0
  3696                           ;LED6_Control@state stored from wreg
  3697   00527C  6E06               	movwf	LED6_Control@state^0,c
  3698   00527E  B006               	btfsc	LED6_Control@state^0,0,c
  3699   005280  D002               	bra	u9645
  3700   005282  9C8C               	bcf	140,6,c	;volatile
  3701   005284  D001               	bra	u9646
  3702   005286                     u9645:
  3703   005286  8C8C               	bsf	140,6,c	;volatile
  3704   005288                     u9646:
  3705   005288  0012               	return		;funcret
  3706   00528A                     __end_of_LED6_Control:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _runGAME *****************
  3710 ;; Defined at:
  3711 ;;		line 10 in file "GAME.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  approxText     17   17[BANK1 ] unsigned char [17]
  3716 ;;  text           17    0[BANK1 ] unsigned char [17]
  3717 ;;  randomNumber    2   40[BANK1 ] unsigned short 
  3718 ;;  pot1            2   38[BANK1 ] unsigned short 
  3719 ;;  GAMEdivider     1   37[BANK1 ] unsigned char 
  3720 ;;  GAMEround       1   36[BANK1 ] unsigned char 
  3721 ;;  keepStateGAM    1   35[BANK1 ] unsigned char 
  3722 ;;  GAMEpart        1   34[BANK1 ] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Locals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Totals:         0       2      42       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;Total ram usage:       44 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; Hardware stack levels required when called: 9
  3739 ;; This function calls:
  3740 ;;		_LCD_ShowString
  3741 ;;		___awdiv
  3742 ;;		___lbdiv
  3743 ;;		_rand
  3744 ;;		_sprintf
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text12
  3751   001E9E                     __ptext12:
  3752                           	callstack 0
  3753   001E9E                     _runGAME:
  3754                           	callstack 21
  3755   001E9E                     
  3756                           ;GAME.c: 12:     TRISDbits.RD2 = 0;
  3757   001E9E  9495               	bcf	149,2,c	;volatile
  3758                           
  3759                           ;GAME.c: 13:     TRISDbits.RD3 = 0;
  3760   001EA0  9695               	bcf	149,3,c	;volatile
  3761                           
  3762                           ;GAME.c: 14:     TRISCbits.RC4 = 0;
  3763   001EA2  9894               	bcf	148,4,c	;volatile
  3764                           
  3765                           ;GAME.c: 15:     TRISDbits.RD4 = 0;
  3766   001EA4  9895               	bcf	149,4,c	;volatile
  3767                           
  3768                           ;GAME.c: 16:     TRISDbits.RD5 = 0;
  3769   001EA6  9A95               	bcf	149,5,c	;volatile
  3770                           
  3771                           ;GAME.c: 17:     TRISDbits.RD6 = 0;
  3772   001EA8  9C95               	bcf	149,6,c	;volatile
  3773                           
  3774                           ;GAME.c: 18:     ANSELDbits.ANSD2 = 0;
  3775   001EAA  010F               	movlb	15	; () banked
  3776   001EAC  953B               	bcf	59,2,b	;volatile
  3777                           
  3778                           ;GAME.c: 19:     ANSELDbits.ANSD3 = 0;
  3779   001EAE  973B               	bcf	59,3,b	;volatile
  3780                           
  3781                           ;GAME.c: 20:     ANSELCbits.ANSC4 = 0;
  3782   001EB0  993A               	bcf	58,4,b	;volatile
  3783                           
  3784                           ;GAME.c: 21:     ANSELDbits.ANSD4 = 0;
  3785   001EB2  993B               	bcf	59,4,b	;volatile
  3786                           
  3787                           ;GAME.c: 22:     ANSELDbits.ANSD5 = 0;
  3788   001EB4  9B3B               	bcf	59,5,b	;volatile
  3789                           
  3790                           ;GAME.c: 23:     ANSELDbits.ANSD6 = 0;
  3791   001EB6  9D3B               	bcf	59,6,b	;volatile
  3792                           
  3793                           ;GAME.c: 24:     LATDbits.LD2 = 1;
  3794   001EB8  848C               	bsf	140,2,c	;volatile
  3795                           
  3796                           ;GAME.c: 25:     LATDbits.LD3 = 1;
  3797   001EBA  868C               	bsf	140,3,c	;volatile
  3798                           
  3799                           ;GAME.c: 26:     LATCbits.LC4 = 1;
  3800   001EBC  888B               	bsf	139,4,c	;volatile
  3801                           
  3802                           ;GAME.c: 27:     LATDbits.LD4 = 1;
  3803   001EBE  888C               	bsf	140,4,c	;volatile
  3804                           
  3805                           ;GAME.c: 28:     LATDbits.LD5 = 1;
  3806   001EC0  8A8C               	bsf	140,5,c	;volatile
  3807                           
  3808                           ;GAME.c: 29:     LATDbits.LD6 = 1;
  3809   001EC2  8C8C               	bsf	140,6,c	;volatile
  3810                           
  3811                           ;GAME.c: 32:     TRISAbits.RA2 = 1;
  3812   001EC4  8492               	bsf	146,2,c	;volatile
  3813                           
  3814                           ;GAME.c: 33:     ANSELAbits.ANSA2 = 0;
  3815   001EC6  9538               	bcf	56,2,b	;volatile
  3816                           
  3817                           ;GAME.c: 36:     ANSELAbits.ANSA5 = 1;
  3818   001EC8  8B38               	bsf	56,5,b	;volatile
  3819                           
  3820                           ;GAME.c: 37:     ADCON2bits.ADFM = 1;
  3821   001ECA  8EC0               	bsf	192,7,c	;volatile
  3822   001ECC                     
  3823                           ; BSR set to: 15
  3824                           ;GAME.c: 38:     ADCON2bits.ADCS = 0b110;
  3825   001ECC  50C0               	movf	192,w,c	;volatile
  3826   001ECE  0BF8               	andlw	-8
  3827   001ED0  0906               	iorlw	6
  3828   001ED2  6EC0               	movwf	192,c	;volatile
  3829                           
  3830                           ;GAME.c: 39:     ADCON2bits.ACQT = 0b110;
  3831   001ED4  50C0               	movf	192,w,c	;volatile
  3832   001ED6  0BC7               	andlw	-57
  3833   001ED8  0930               	iorlw	48
  3834   001EDA  6EC0               	movwf	192,c	;volatile
  3835   001EDC                     
  3836                           ; BSR set to: 15
  3837                           ;GAME.c: 40:     ADCON0bits.ADON = 1;
  3838   001EDC  80C2               	bsf	194,0,c	;volatile
  3839   001EDE                     
  3840                           ; BSR set to: 15
  3841                           ;GAME.c: 42:     uint16_t pot1;;GAME.c: 43:     char text[17] = "";
  3842   001EDE  EE21  F09B         	lfsr	2,runGAME@text
  3843   001EE2  0E10               	movlw	16
  3844   001EE4                     u10161:
  3845   001EE4  6ADE               	clrf	postinc2,c
  3846   001EE6  06E8               	decf	wreg,f,c
  3847   001EE8  E2FD               	bc	u10161
  3848   001EEA                     
  3849                           ; BSR set to: 15
  3850                           ;GAME.c: 44:     uint8_t keepStateGAME;;GAME.c: 45:     keepStateGAME = 1;
  3851   001EEA  0E01               	movlw	1
  3852   001EEC  0101               	movlb	1	; () banked
  3853   001EEE  6FBE               	movwf	runGAME@keepStateGAME& (0+255),b
  3854   001EF0                     
  3855                           ; BSR set to: 1
  3856                           ;GAME.c: 49:     T1CONbits.TMR1CS = 0b00;
  3857   001EF0  0E3F               	movlw	-193
  3858   001EF2  16CD               	andwf	205,f,c	;volatile
  3859   001EF4                     
  3860                           ; BSR set to: 1
  3861                           ;GAME.c: 50:     T1CONbits.T1CKPS = 0b11;
  3862   001EF4  0E30               	movlw	48
  3863   001EF6  12CD               	iorwf	205,f,c	;volatile
  3864   001EF8                     
  3865                           ; BSR set to: 1
  3866                           ;GAME.c: 51:     TMR1IE = 1;
  3867   001EF8  809D               	bsf	3997,0,c	;volatile
  3868   001EFA                     
  3869                           ; BSR set to: 1
  3870                           ;GAME.c: 52:     PEIE = 1;
  3871   001EFA  8CF2               	bsf	4082,6,c	;volatile
  3872   001EFC                     
  3873                           ; BSR set to: 1
  3874                           ;GAME.c: 53:     GIE = 1;
  3875   001EFC  8EF2               	bsf	4082,7,c	;volatile
  3876   001EFE                     
  3877                           ; BSR set to: 1
  3878                           ;GAME.c: 54:     GAMEIE = 1;
  3879   001EFE  0E01               	movlw	1
  3880   001F00  6F24               	movwf	_GAMEIE& (0+255),b
  3881   001F02                     
  3882                           ; BSR set to: 1
  3883                           ;GAME.c: 55:     TMR1IF = 1;
  3884   001F02  809E               	bsf	3998,0,c	;volatile
  3885   001F04                     
  3886                           ; BSR set to: 1
  3887                           ;GAME.c: 56:     TMR1 = 0xFFFF - (62500 - 1);
  3888   001F04  0E0B               	movlw	11
  3889   001F06  6ECF               	movwf	207,c	;volatile
  3890   001F08  0EDC               	movlw	220
  3891   001F0A  6ECE               	movwf	206,c	;volatile
  3892   001F0C                     
  3893                           ; BSR set to: 1
  3894                           ;GAME.c: 57:     TMR1ON = 1;
  3895   001F0C  80CD               	bsf	4045,0,c	;volatile
  3896   001F0E                     
  3897                           ; BSR set to: 1
  3898                           ;GAME.c: 59:     GAMEtime = 0;
  3899   001F0E  0E00               	movlw	0
  3900   001F10  6F23               	movwf	_GAMEtime& (0+255),b
  3901   001F12                     
  3902                           ; BSR set to: 1
  3903                           ;GAME.c: 60:     uint8_t GAMEround = 1;
  3904   001F12  0E01               	movlw	1
  3905   001F14  6FBF               	movwf	runGAME@GAMEround& (0+255),b
  3906   001F16                     
  3907                           ; BSR set to: 1
  3908                           ;GAME.c: 63:     char approxText[17] = "";
  3909   001F16  EE21  F0AC         	lfsr	2,runGAME@approxText
  3910   001F1A  0E10               	movlw	16
  3911   001F1C                     u10171:
  3912   001F1C  6ADE               	clrf	postinc2,c
  3913   001F1E  06E8               	decf	wreg,f,c
  3914   001F20  E2FD               	bc	u10171
  3915   001F22                     
  3916                           ; BSR set to: 1
  3917                           ;GAME.c: 66:     uint16_t randomNumber;;GAME.c: 67:     randomNumber = (uint16_t)(2 + ra
      +                          nd() / ((0x7fff) / (1023 - 2 + 1) + 1));
  3918   001F22  EC2D  F026         	call	_rand
  3919   001F26  C012  F018         	movff	?_rand,___awdiv@dividend
  3920   001F2A  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  3921   001F2E  0E00               	movlw	0
  3922   001F30  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  3923   001F32  0E21               	movlw	33
  3924   001F34  6E1A               	movwf	___awdiv@divisor^0,c
  3925   001F36  ECE5  F023         	call	___awdiv	;wreg free
  3926   001F3A  0E02               	movlw	2
  3927   001F3C  2418               	addwf	?___awdiv^0,w,c
  3928   001F3E  0101               	movlb	1	; () banked
  3929   001F40  6FC3               	movwf	runGAME@randomNumber& (0+255),b
  3930   001F42  0E00               	movlw	0
  3931   001F44  2019               	addwfc	(?___awdiv+1)^0,w,c
  3932   001F46  6FC4               	movwf	(runGAME@randomNumber+1)& (0+255),b
  3933   001F48                     
  3934                           ; BSR set to: 1
  3935                           ;GAME.c: 68:     sprintf(approxText, "%u                ", randomNumber);
  3936   001F48  0EAC               	movlw	low runGAME@approxText
  3937   001F4A  0100               	movlb	0	; () banked
  3938   001F4C  6FCE               	movwf	sprintf@s& (0+255),b
  3939   001F4E  0E01               	movlw	high runGAME@approxText
  3940   001F50  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  3941   001F52  0EBB               	movlw	low STR_29
  3942   001F54  6FD0               	movwf	sprintf@fmt& (0+255),b
  3943   001F56  0EFE               	movlw	high STR_29
  3944   001F58  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  3945   001F5A  C1C3  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  3946   001F5E  C1C4  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  3947   001F62  ECBF  F027         	call	_sprintf	;wreg free
  3948   001F66                     
  3949                           ;GAME.c: 69:     LCD_ShowString((char)1, approxText);
  3950   001F66  0EAC               	movlw	low runGAME@approxText
  3951   001F68  6E07               	movwf	LCD_ShowString@textData^0,c
  3952   001F6A  0E01               	movlw	high runGAME@approxText
  3953   001F6C  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  3954   001F6E  0E01               	movlw	1
  3955   001F70  EC47  F024         	call	_LCD_ShowString
  3956                           
  3957                           ;GAME.c: 72:     while(keepStateGAME){
  3958   001F74  EF2F  F011         	goto	l662
  3959   001F78                     l8268:
  3960                           
  3961                           ; BSR set to: 1
  3962                           ;GAME.c: 74:         ADCON0bits.CHS = 5;
  3963   001F78  50C2               	movf	194,w,c	;volatile
  3964   001F7A  0B83               	andlw	-125
  3965   001F7C  0914               	iorlw	20
  3966   001F7E  6EC2               	movwf	194,c	;volatile
  3967   001F80                     
  3968                           ; BSR set to: 1
  3969                           ;GAME.c: 75:         GODONE = 1;
  3970   001F80  82C2               	bsf	4034,1,c	;volatile
  3971   001F82                     l664:
  3972   001F82  B2C2               	btfsc	4034,1,c	;volatile
  3973   001F84  EFC6  F00F         	goto	u10181
  3974   001F88  EFC8  F00F         	goto	u10180
  3975   001F8C                     u10181:
  3976   001F8C  EFC1  F00F         	goto	l664
  3977   001F90                     u10180:
  3978   001F90                     
  3979                           ;GAME.c: 77:         pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  3980   001F90  50C3               	movf	195,w,c	;volatile
  3981   001F92  CFC4 F0E7          	movff	4036,??_runGAME	;volatile
  3982   001F96  0100               	movlb	0	; () banked
  3983   001F98  6BE8               	clrf	(??_runGAME+1)& (0+255),b
  3984   001F9A  C0E7  F0E8         	movff	??_runGAME,??_runGAME+1
  3985   001F9E  6BE7               	clrf	??_runGAME& (0+255),b
  3986   001FA0  11E7               	iorwf	??_runGAME& (0+255),w,b
  3987   001FA2  0101               	movlb	1	; () banked
  3988   001FA4  6FC1               	movwf	runGAME@pot1& (0+255),b
  3989   001FA6  0100               	movlb	0	; () banked
  3990   001FA8  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  3991   001FAA  0101               	movlb	1	; () banked
  3992   001FAC  6FC2               	movwf	(runGAME@pot1+1)& (0+255),b
  3993   001FAE                     
  3994                           ; BSR set to: 1
  3995                           ;GAME.c: 79:         sprintf(text, "%hu             ", pot1);
  3996   001FAE  0E9B               	movlw	low runGAME@text
  3997   001FB0  0100               	movlb	0	; () banked
  3998   001FB2  6FCE               	movwf	sprintf@s& (0+255),b
  3999   001FB4  0E01               	movlw	high runGAME@text
  4000   001FB6  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4001   001FB8  0EF3               	movlw	low STR_30
  4002   001FBA  6FD0               	movwf	sprintf@fmt& (0+255),b
  4003   001FBC  0EFE               	movlw	high STR_30
  4004   001FBE  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4005   001FC0  C1C1  F0D2         	movff	runGAME@pot1,?_sprintf+4
  4006   001FC4  C1C2  F0D3         	movff	runGAME@pot1+1,?_sprintf+5
  4007   001FC8  ECBF  F027         	call	_sprintf	;wreg free
  4008   001FCC                     
  4009                           ;GAME.c: 80:         LCD_ShowString((char)2, text);
  4010   001FCC  0E9B               	movlw	low runGAME@text
  4011   001FCE  6E07               	movwf	LCD_ShowString@textData^0,c
  4012   001FD0  0E01               	movlw	high runGAME@text
  4013   001FD2  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4014   001FD4  0E02               	movlw	2
  4015   001FD6  EC47  F024         	call	_LCD_ShowString
  4016                           
  4017                           ;GAME.c: 82:         switch(GAMEround){
  4018   001FDA  EF03  F010         	goto	l8290
  4019   001FDE                     l8278:
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;GAME.c: 84:                 GAMEdivider = 33;
  4023   001FDE  0E21               	movlw	33
  4024   001FE0  6FC0               	movwf	runGAME@GAMEdivider& (0+255),b
  4025                           
  4026                           ;GAME.c: 85:                 break;
  4027   001FE2  EF17  F010         	goto	l8292
  4028   001FE6                     l8280:
  4029                           
  4030                           ; BSR set to: 1
  4031                           ;GAME.c: 87:                 GAMEdivider = 24;
  4032   001FE6  0E18               	movlw	24
  4033   001FE8  6FC0               	movwf	runGAME@GAMEdivider& (0+255),b
  4034                           
  4035                           ;GAME.c: 88:                 break;
  4036   001FEA  EF17  F010         	goto	l8292
  4037   001FEE                     l8282:
  4038                           
  4039                           ; BSR set to: 1
  4040                           ;GAME.c: 90:                 GAMEdivider = 18;
  4041   001FEE  0E12               	movlw	18
  4042   001FF0  6FC0               	movwf	runGAME@GAMEdivider& (0+255),b
  4043                           
  4044                           ;GAME.c: 91:                 break;
  4045   001FF2  EF17  F010         	goto	l8292
  4046   001FF6                     l8284:
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;GAME.c: 93:                 GAMEdivider = 16;
  4050   001FF6  0E10               	movlw	16
  4051   001FF8  6FC0               	movwf	runGAME@GAMEdivider& (0+255),b
  4052                           
  4053                           ;GAME.c: 94:                 break;
  4054   001FFA  EF17  F010         	goto	l8292
  4055   001FFE                     l8286:
  4056                           
  4057                           ; BSR set to: 1
  4058                           ;GAME.c: 96:                 GAMEdivider = 15;
  4059   001FFE  0E0F               	movlw	15
  4060   002000  6FC0               	movwf	runGAME@GAMEdivider& (0+255),b
  4061                           
  4062                           ;GAME.c: 97:                 break;
  4063   002002  EF17  F010         	goto	l8292
  4064   002006                     l8290:
  4065   002006  0101               	movlb	1	; () banked
  4066   002008  51BF               	movf	runGAME@GAMEround& (0+255),w,b
  4067                           
  4068                           ; Switch size 1, requested type "simple"
  4069                           ; Number of cases is 4, Range of values is 1 to 4
  4070                           ; switch strategies available:
  4071                           ; Name         Instructions Cycles
  4072                           ; simple_byte           13     7 (average)
  4073                           ;	Chosen strategy is simple_byte
  4074   00200A  0A01               	xorlw	1	; case 1
  4075   00200C  B4D8               	btfsc	status,2,c
  4076   00200E  EFEF  F00F         	goto	l8278
  4077   002012  0A03               	xorlw	3	; case 2
  4078   002014  B4D8               	btfsc	status,2,c
  4079   002016  EFF3  F00F         	goto	l8280
  4080   00201A  0A01               	xorlw	1	; case 3
  4081   00201C  B4D8               	btfsc	status,2,c
  4082   00201E  EFF7  F00F         	goto	l8282
  4083   002022  0A07               	xorlw	7	; case 4
  4084   002024  B4D8               	btfsc	status,2,c
  4085   002026  EFFB  F00F         	goto	l8284
  4086   00202A  EFFF  F00F         	goto	l8286
  4087   00202E                     l8292:
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;GAME.c: 100:         GAMEpart = GAMEtime/GAMEdivider;
  4091   00202E  C1C0  F006         	movff	runGAME@GAMEdivider,___lbdiv@divisor
  4092   002032  5123               	movf	_GAMEtime& (0+255),w,b
  4093   002034  ECCB  F026         	call	___lbdiv
  4094   002038  0101               	movlb	1	; () banked
  4095   00203A  6FBD               	movwf	runGAME@GAMEpart& (0+255),b
  4096                           
  4097                           ;GAME.c: 101:         switch(GAMEpart){
  4098   00203C  EFE8  F010         	goto	l8322
  4099   002040                     l675:
  4100                           
  4101                           ; BSR set to: 1
  4102                           ;GAME.c: 103:                 LATDbits.LD2 = 1;
  4103   002040  848C               	bsf	140,2,c	;volatile
  4104                           
  4105                           ;GAME.c: 104:                 LATDbits.LD3 = 1;
  4106   002042  868C               	bsf	140,3,c	;volatile
  4107                           
  4108                           ;GAME.c: 105:                 LATCbits.LC4 = 1;
  4109   002044  888B               	bsf	139,4,c	;volatile
  4110                           
  4111                           ;GAME.c: 106:                 LATDbits.LD4 = 1;
  4112   002046  888C               	bsf	140,4,c	;volatile
  4113                           
  4114                           ;GAME.c: 107:                 LATDbits.LD5 = 1;
  4115   002048  8A8C               	bsf	140,5,c	;volatile
  4116                           
  4117                           ;GAME.c: 108:                 LATDbits.LD6 = 1;
  4118   00204A  8C8C               	bsf	140,6,c	;volatile
  4119                           
  4120                           ;GAME.c: 109:                 break;
  4121   00204C  EF0B  F011         	goto	l676
  4122   002050                     l677:
  4123                           
  4124                           ; BSR set to: 1
  4125                           ;GAME.c: 111:                 LATDbits.LD2 = 0;
  4126   002050  948C               	bcf	140,2,c	;volatile
  4127                           
  4128                           ;GAME.c: 112:                 LATDbits.LD3 = 1;
  4129   002052  868C               	bsf	140,3,c	;volatile
  4130                           
  4131                           ;GAME.c: 113:                 LATCbits.LC4 = 1;
  4132   002054  888B               	bsf	139,4,c	;volatile
  4133                           
  4134                           ;GAME.c: 114:                 LATDbits.LD4 = 1;
  4135   002056  888C               	bsf	140,4,c	;volatile
  4136                           
  4137                           ;GAME.c: 115:                 LATDbits.LD5 = 1;
  4138   002058  8A8C               	bsf	140,5,c	;volatile
  4139                           
  4140                           ;GAME.c: 116:                 LATDbits.LD6 = 1;
  4141   00205A  8C8C               	bsf	140,6,c	;volatile
  4142                           
  4143                           ;GAME.c: 117:                 break;
  4144   00205C  EF0B  F011         	goto	l676
  4145   002060                     l678:
  4146                           
  4147                           ; BSR set to: 1
  4148                           ;GAME.c: 119:                 LATDbits.LD2 = 0;
  4149   002060  948C               	bcf	140,2,c	;volatile
  4150                           
  4151                           ;GAME.c: 120:                 LATDbits.LD3 = 0;
  4152   002062  968C               	bcf	140,3,c	;volatile
  4153                           
  4154                           ;GAME.c: 121:                 LATCbits.LC4 = 1;
  4155   002064  888B               	bsf	139,4,c	;volatile
  4156                           
  4157                           ;GAME.c: 122:                 LATDbits.LD4 = 1;
  4158   002066  888C               	bsf	140,4,c	;volatile
  4159                           
  4160                           ;GAME.c: 123:                 LATDbits.LD5 = 1;
  4161   002068  8A8C               	bsf	140,5,c	;volatile
  4162                           
  4163                           ;GAME.c: 124:                 LATDbits.LD6 = 1;
  4164   00206A  8C8C               	bsf	140,6,c	;volatile
  4165                           
  4166                           ;GAME.c: 125:                 break;
  4167   00206C  EF0B  F011         	goto	l676
  4168   002070                     l679:
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;GAME.c: 127:                 LATDbits.LD2 = 0;
  4172   002070  948C               	bcf	140,2,c	;volatile
  4173                           
  4174                           ;GAME.c: 128:                 LATDbits.LD3 = 0;
  4175   002072  968C               	bcf	140,3,c	;volatile
  4176                           
  4177                           ;GAME.c: 129:                 LATCbits.LC4 = 0;
  4178   002074  988B               	bcf	139,4,c	;volatile
  4179                           
  4180                           ;GAME.c: 130:                 LATDbits.LD4 = 1;
  4181   002076  888C               	bsf	140,4,c	;volatile
  4182                           
  4183                           ;GAME.c: 131:                 LATDbits.LD5 = 1;
  4184   002078  8A8C               	bsf	140,5,c	;volatile
  4185                           
  4186                           ;GAME.c: 132:                 LATDbits.LD6 = 1;
  4187   00207A  8C8C               	bsf	140,6,c	;volatile
  4188                           
  4189                           ;GAME.c: 133:                 break;
  4190   00207C  EF0B  F011         	goto	l676
  4191   002080                     l680:
  4192                           
  4193                           ; BSR set to: 1
  4194                           ;GAME.c: 135:                 LATDbits.LD2 = 0;
  4195   002080  948C               	bcf	140,2,c	;volatile
  4196                           
  4197                           ;GAME.c: 136:                 LATDbits.LD3 = 0;
  4198   002082  968C               	bcf	140,3,c	;volatile
  4199                           
  4200                           ;GAME.c: 137:                 LATCbits.LC4 = 0;
  4201   002084  988B               	bcf	139,4,c	;volatile
  4202                           
  4203                           ;GAME.c: 138:                 LATDbits.LD4 = 0;
  4204   002086  988C               	bcf	140,4,c	;volatile
  4205                           
  4206                           ;GAME.c: 139:                 LATDbits.LD5 = 1;
  4207   002088  8A8C               	bsf	140,5,c	;volatile
  4208                           
  4209                           ;GAME.c: 140:                 LATDbits.LD6 = 1;
  4210   00208A  8C8C               	bsf	140,6,c	;volatile
  4211                           
  4212                           ;GAME.c: 141:                 break;
  4213   00208C  EF0B  F011         	goto	l676
  4214   002090                     l681:
  4215                           
  4216                           ; BSR set to: 1
  4217                           ;GAME.c: 143:                 LATDbits.LD2 = 0;
  4218   002090  948C               	bcf	140,2,c	;volatile
  4219                           
  4220                           ;GAME.c: 144:                 LATDbits.LD3 = 0;
  4221   002092  968C               	bcf	140,3,c	;volatile
  4222                           
  4223                           ;GAME.c: 145:                 LATCbits.LC4 = 0;
  4224   002094  988B               	bcf	139,4,c	;volatile
  4225                           
  4226                           ;GAME.c: 146:                 LATDbits.LD4 = 0;
  4227   002096  988C               	bcf	140,4,c	;volatile
  4228                           
  4229                           ;GAME.c: 147:                 LATDbits.LD5 = 0;
  4230   002098  9A8C               	bcf	140,5,c	;volatile
  4231                           
  4232                           ;GAME.c: 148:                 LATDbits.LD6 = 1;
  4233   00209A  8C8C               	bsf	140,6,c	;volatile
  4234                           
  4235                           ;GAME.c: 149:                 break;
  4236   00209C  EF0B  F011         	goto	l676
  4237   0020A0                     l682:
  4238                           
  4239                           ; BSR set to: 1
  4240                           ;GAME.c: 151:                 LATDbits.LD2 = 0;
  4241   0020A0  948C               	bcf	140,2,c	;volatile
  4242                           
  4243                           ;GAME.c: 152:                 LATDbits.LD3 = 0;
  4244   0020A2  968C               	bcf	140,3,c	;volatile
  4245                           
  4246                           ;GAME.c: 153:                 LATCbits.LC4 = 0;
  4247   0020A4  988B               	bcf	139,4,c	;volatile
  4248                           
  4249                           ;GAME.c: 154:                 LATDbits.LD4 = 0;
  4250   0020A6  988C               	bcf	140,4,c	;volatile
  4251                           
  4252                           ;GAME.c: 155:                 LATDbits.LD5 = 0;
  4253   0020A8  9A8C               	bcf	140,5,c	;volatile
  4254                           
  4255                           ;GAME.c: 156:                 LATDbits.LD6 = 0;
  4256   0020AA  9C8C               	bcf	140,6,c	;volatile
  4257                           
  4258                           ;GAME.c: 157:                 break;
  4259   0020AC  EF0B  F011         	goto	l676
  4260   0020B0                     l8294:
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;GAME.c: 159:                 GAMEtime = 0;
  4264   0020B0  0E00               	movlw	0
  4265   0020B2  6F23               	movwf	_GAMEtime& (0+255),b
  4266   0020B4                     
  4267                           ; BSR set to: 1
  4268                           ;GAME.c: 160:                 if(pot1 >= randomNumber - 2 && pot1 <= randomNumber + 2){
  4269   0020B4  0EFE               	movlw	254
  4270   0020B6  25C3               	addwf	runGAME@randomNumber& (0+255),w,b
  4271   0020B8  0100               	movlb	0	; () banked
  4272   0020BA  6FE7               	movwf	??_runGAME& (0+255),b
  4273   0020BC  0EFF               	movlw	255
  4274   0020BE  0101               	movlb	1	; () banked
  4275   0020C0  21C4               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4276   0020C2  0100               	movlb	0	; () banked
  4277   0020C4  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4278   0020C6  51E7               	movf	??_runGAME& (0+255),w,b
  4279   0020C8  0101               	movlb	1	; () banked
  4280   0020CA  5DC1               	subwf	runGAME@pot1& (0+255),w,b
  4281   0020CC  0100               	movlb	0	; () banked
  4282   0020CE  51E8               	movf	(??_runGAME+1)& (0+255),w,b
  4283   0020D0  0101               	movlb	1	; () banked
  4284   0020D2  59C2               	subwfb	(runGAME@pot1+1)& (0+255),w,b
  4285   0020D4  A0D8               	btfss	status,0,c
  4286   0020D6  EF6F  F010         	goto	u10191
  4287   0020DA  EF71  F010         	goto	u10190
  4288   0020DE                     u10191:
  4289   0020DE  EFB9  F010         	goto	l684
  4290   0020E2                     u10190:
  4291   0020E2                     
  4292                           ; BSR set to: 1
  4293   0020E2  0E02               	movlw	2
  4294   0020E4  25C3               	addwf	runGAME@randomNumber& (0+255),w,b
  4295   0020E6  0100               	movlb	0	; () banked
  4296   0020E8  6FE7               	movwf	??_runGAME& (0+255),b
  4297   0020EA  0E00               	movlw	0
  4298   0020EC  0101               	movlb	1	; () banked
  4299   0020EE  21C4               	addwfc	(runGAME@randomNumber+1)& (0+255),w,b
  4300   0020F0  0100               	movlb	0	; () banked
  4301   0020F2  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4302   0020F4  0101               	movlb	1	; () banked
  4303   0020F6  51C1               	movf	runGAME@pot1& (0+255),w,b
  4304   0020F8  0100               	movlb	0	; () banked
  4305   0020FA  5DE7               	subwf	??_runGAME& (0+255),w,b
  4306   0020FC  0101               	movlb	1	; () banked
  4307   0020FE  51C2               	movf	(runGAME@pot1+1)& (0+255),w,b
  4308   002100  0100               	movlb	0	; () banked
  4309   002102  59E8               	subwfb	(??_runGAME+1)& (0+255),w,b
  4310   002104  A0D8               	btfss	status,0,c
  4311   002106  EF87  F010         	goto	u10201
  4312   00210A  EF89  F010         	goto	u10200
  4313   00210E                     u10201:
  4314   00210E  EFB9  F010         	goto	l684
  4315   002112                     u10200:
  4316   002112                     
  4317                           ; BSR set to: 0
  4318                           ;GAME.c: 161:                     GAMEround += 1;
  4319   002112  0101               	movlb	1	; () banked
  4320   002114  2BBF               	incf	runGAME@GAMEround& (0+255),f,b
  4321   002116                     
  4322                           ; BSR set to: 1
  4323                           ;GAME.c: 162:                     randomNumber = (uint16_t)(2 + rand() / ((0x7fff) / (10
      +                          23 - 2 + 1) + 1));
  4324   002116  EC2D  F026         	call	_rand	;wreg free
  4325   00211A  C012  F018         	movff	?_rand,___awdiv@dividend
  4326   00211E  C013  F019         	movff	?_rand+1,___awdiv@dividend+1
  4327   002122  0E00               	movlw	0
  4328   002124  6E1B               	movwf	(___awdiv@divisor+1)^0,c
  4329   002126  0E21               	movlw	33
  4330   002128  6E1A               	movwf	___awdiv@divisor^0,c
  4331   00212A  ECE5  F023         	call	___awdiv	;wreg free
  4332   00212E  0E02               	movlw	2
  4333   002130  2418               	addwf	?___awdiv^0,w,c
  4334   002132  0101               	movlb	1	; () banked
  4335   002134  6FC3               	movwf	runGAME@randomNumber& (0+255),b
  4336   002136  0E00               	movlw	0
  4337   002138  2019               	addwfc	(?___awdiv+1)^0,w,c
  4338   00213A  6FC4               	movwf	(runGAME@randomNumber+1)& (0+255),b
  4339   00213C                     
  4340                           ; BSR set to: 1
  4341                           ;GAME.c: 163:                     sprintf(approxText, "%u                ", randomNumber
      +                          );
  4342   00213C  0EAC               	movlw	low runGAME@approxText
  4343   00213E  0100               	movlb	0	; () banked
  4344   002140  6FCE               	movwf	sprintf@s& (0+255),b
  4345   002142  0E01               	movlw	high runGAME@approxText
  4346   002144  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4347   002146  0EBB               	movlw	low STR_29
  4348   002148  6FD0               	movwf	sprintf@fmt& (0+255),b
  4349   00214A  0EFE               	movlw	high STR_29
  4350   00214C  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4351   00214E  C1C3  F0D2         	movff	runGAME@randomNumber,?_sprintf+4
  4352   002152  C1C4  F0D3         	movff	runGAME@randomNumber+1,?_sprintf+5
  4353   002156  ECBF  F027         	call	_sprintf	;wreg free
  4354   00215A                     
  4355                           ;GAME.c: 164:                     keepStateGAME = 1;
  4356   00215A  0E01               	movlw	1
  4357   00215C  0101               	movlb	1	; () banked
  4358   00215E  6FBE               	movwf	runGAME@keepStateGAME& (0+255),b
  4359   002160                     
  4360                           ; BSR set to: 1
  4361                           ;GAME.c: 165:                     LCD_ShowString((char)1, approxText);
  4362   002160  0EAC               	movlw	low runGAME@approxText
  4363   002162  6E07               	movwf	LCD_ShowString@textData^0,c
  4364   002164  0E01               	movlw	high runGAME@approxText
  4365   002166  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4366   002168  0E01               	movlw	1
  4367   00216A  EC47  F024         	call	_LCD_ShowString
  4368                           
  4369                           ;GAME.c: 166:                 } else {
  4370   00216E  EF0B  F011         	goto	l676
  4371   002172                     l684:
  4372                           
  4373                           ;GAME.c: 167:                     ADCON0bits.ADON = 0;
  4374   002172  90C2               	bcf	194,0,c	;volatile
  4375   002174                     
  4376                           ;GAME.c: 168:                     sprintf(approxText, "Skore: %u        ", GAMEround);
  4377   002174  0EAC               	movlw	low runGAME@approxText
  4378   002176  0100               	movlb	0	; () banked
  4379   002178  6FCE               	movwf	sprintf@s& (0+255),b
  4380   00217A  0E01               	movlw	high runGAME@approxText
  4381   00217C  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  4382   00217E  0EE1               	movlw	low STR_32
  4383   002180  6FD0               	movwf	sprintf@fmt& (0+255),b
  4384   002182  0EFE               	movlw	high STR_32
  4385   002184  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  4386   002186  C1BF  F0D2         	movff	runGAME@GAMEround,?_sprintf+4
  4387   00218A  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  4388   00218C  ECBF  F027         	call	_sprintf	;wreg free
  4389   002190                     
  4390                           ;GAME.c: 169:                     LCD_ShowString((char)1, "GAME OVER       ");
  4391   002190  0E04               	movlw	low STR_33
  4392   002192  6E07               	movwf	LCD_ShowString@textData^0,c
  4393   002194  0EFF               	movlw	high STR_33
  4394   002196  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4395   002198  0E01               	movlw	1
  4396   00219A  EC47  F024         	call	_LCD_ShowString
  4397   00219E                     
  4398                           ;GAME.c: 170:                     LCD_ShowString((char)2, approxText);
  4399   00219E  0EAC               	movlw	low runGAME@approxText
  4400   0021A0  6E07               	movwf	LCD_ShowString@textData^0,c
  4401   0021A2  0E01               	movlw	high runGAME@approxText
  4402   0021A4  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  4403   0021A6  0E02               	movlw	2
  4404   0021A8  EC47  F024         	call	_LCD_ShowString
  4405   0021AC                     
  4406                           ;GAME.c: 171:                     keepStateGAME = 0;
  4407   0021AC  0E00               	movlw	0
  4408   0021AE  0101               	movlb	1	; () banked
  4409   0021B0  6FBE               	movwf	runGAME@keepStateGAME& (0+255),b
  4410   0021B2                     
  4411                           ; BSR set to: 1
  4412                           ;GAME.c: 172:                     _delay((unsigned long)((2000)*(32E6/4000.0)));
  4413   0021B2  0E52               	movlw	82
  4414   0021B4  0100               	movlb	0	; () banked
  4415   0021B6  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4416   0021B8  0E2B               	movlw	43
  4417   0021BA  6FE7               	movwf	??_runGAME& (0+255),b
  4418   0021BC  0E00               	movlw	0
  4419   0021BE                     u10467:
  4420   0021BE  2EE8               	decfsz	wreg,f,c
  4421   0021C0  D7FE               	bra	u10467
  4422   0021C2  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4423   0021C4  D7FC               	bra	u10467
  4424   0021C6  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4425   0021C8  D7FA               	bra	u10467
  4426   0021CA  0000               	nop	
  4427   0021CC  EF0B  F011         	goto	l676
  4428   0021D0                     l8322:
  4429                           
  4430                           ; BSR set to: 1
  4431   0021D0  51BD               	movf	runGAME@GAMEpart& (0+255),w,b
  4432                           
  4433                           ; Switch size 1, requested type "simple"
  4434                           ; Number of cases is 8, Range of values is 0 to 7
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte           25    13 (average)
  4438                           ;	Chosen strategy is simple_byte
  4439   0021D2  0A00               	xorlw	0	; case 0
  4440   0021D4  B4D8               	btfsc	status,2,c
  4441   0021D6  EF20  F010         	goto	l675
  4442   0021DA  0A01               	xorlw	1	; case 1
  4443   0021DC  B4D8               	btfsc	status,2,c
  4444   0021DE  EF28  F010         	goto	l677
  4445   0021E2  0A03               	xorlw	3	; case 2
  4446   0021E4  B4D8               	btfsc	status,2,c
  4447   0021E6  EF30  F010         	goto	l678
  4448   0021EA  0A01               	xorlw	1	; case 3
  4449   0021EC  B4D8               	btfsc	status,2,c
  4450   0021EE  EF38  F010         	goto	l679
  4451   0021F2  0A07               	xorlw	7	; case 4
  4452   0021F4  B4D8               	btfsc	status,2,c
  4453   0021F6  EF40  F010         	goto	l680
  4454   0021FA  0A01               	xorlw	1	; case 5
  4455   0021FC  B4D8               	btfsc	status,2,c
  4456   0021FE  EF48  F010         	goto	l681
  4457   002202  0A03               	xorlw	3	; case 6
  4458   002204  B4D8               	btfsc	status,2,c
  4459   002206  EF50  F010         	goto	l682
  4460   00220A  0A01               	xorlw	1	; case 7
  4461   00220C  B4D8               	btfsc	status,2,c
  4462   00220E  EF58  F010         	goto	l8294
  4463   002212  EF0B  F011         	goto	l676
  4464   002216                     l676:
  4465                           
  4466                           ;GAME.c: 177:         if(PORTAbits.RA2){
  4467   002216  A480               	btfss	128,2,c	;volatile
  4468   002218  EF10  F011         	goto	u10211
  4469   00221C  EF12  F011         	goto	u10210
  4470   002220                     u10211:
  4471   002220  EF2F  F011         	goto	l662
  4472   002224                     u10210:
  4473   002224                     
  4474                           ;GAME.c: 178:             _delay((unsigned long)((50)*(32E6/4000.0)));
  4475   002224  0E03               	movlw	3
  4476   002226  0100               	movlb	0	; () banked
  4477   002228  6FE8               	movwf	(??_runGAME+1)& (0+255),b
  4478   00222A  0E08               	movlw	8
  4479   00222C  6FE7               	movwf	??_runGAME& (0+255),b
  4480   00222E  0E77               	movlw	119
  4481   002230                     u10477:
  4482   002230  2EE8               	decfsz	wreg,f,c
  4483   002232  D7FE               	bra	u10477
  4484   002234  2FE7               	decfsz	??_runGAME& (0+255),f,b
  4485   002236  D7FC               	bra	u10477
  4486   002238  2FE8               	decfsz	(??_runGAME+1)& (0+255),f,b
  4487   00223A  D7FA               	bra	u10477
  4488   00223C                     
  4489                           ;GAME.c: 179:             if(PORTAbits.RA2){
  4490   00223C  A480               	btfss	128,2,c	;volatile
  4491   00223E  EF23  F011         	goto	u10221
  4492   002242  EF25  F011         	goto	u10220
  4493   002246                     u10221:
  4494   002246  EF2F  F011         	goto	l662
  4495   00224A                     u10220:
  4496   00224A                     l688:
  4497   00224A  B480               	btfsc	128,2,c	;volatile
  4498   00224C  EF2A  F011         	goto	u10231
  4499   002250  EF2C  F011         	goto	u10230
  4500   002254                     u10231:
  4501   002254  EF25  F011         	goto	l688
  4502   002258                     u10230:
  4503   002258                     
  4504                           ;GAME.c: 181:                 keepStateGAME = 0;
  4505   002258  0E00               	movlw	0
  4506   00225A  0101               	movlb	1	; () banked
  4507   00225C  6FBE               	movwf	runGAME@keepStateGAME& (0+255),b
  4508   00225E                     l662:
  4509                           
  4510                           ;GAME.c: 72:     while(keepStateGAME){
  4511   00225E  0101               	movlb	1	; () banked
  4512   002260  51BE               	movf	runGAME@keepStateGAME& (0+255),w,b
  4513   002262  A4D8               	btfss	status,2,c
  4514   002264  EF36  F011         	goto	u10241
  4515   002268  EF38  F011         	goto	u10240
  4516   00226C                     u10241:
  4517   00226C  EFBC  F00F         	goto	l8268
  4518   002270                     u10240:
  4519   002270                     
  4520                           ; BSR set to: 1
  4521                           ;GAME.c: 187:     LATDbits.LD2 = 1;
  4522   002270  848C               	bsf	140,2,c	;volatile
  4523                           
  4524                           ;GAME.c: 188:     LATDbits.LD3 = 1;
  4525   002272  868C               	bsf	140,3,c	;volatile
  4526                           
  4527                           ;GAME.c: 189:     LATCbits.LC4 = 1;
  4528   002274  888B               	bsf	139,4,c	;volatile
  4529                           
  4530                           ;GAME.c: 190:     LATDbits.LD4 = 1;
  4531   002276  888C               	bsf	140,4,c	;volatile
  4532                           
  4533                           ;GAME.c: 191:     LATDbits.LD5 = 1;
  4534   002278  8A8C               	bsf	140,5,c	;volatile
  4535                           
  4536                           ;GAME.c: 192:     LATDbits.LD6 = 1;
  4537   00227A  8C8C               	bsf	140,6,c	;volatile
  4538                           
  4539                           ;GAME.c: 193:     TMR1ON = 0;
  4540   00227C  90CD               	bcf	4045,0,c	;volatile
  4541                           
  4542                           ;GAME.c: 194:     TMR1IE = 0;
  4543   00227E  909D               	bcf	3997,0,c	;volatile
  4544   002280                     
  4545                           ; BSR set to: 1
  4546                           ;GAME.c: 195:     GAMEIE = 0;
  4547   002280  0E00               	movlw	0
  4548   002282  6F24               	movwf	_GAMEIE& (0+255),b
  4549   002284                     
  4550                           ; BSR set to: 1
  4551   002284  0012               	return		;funcret
  4552   002286                     __end_of_runGAME:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function _rand *****************
  4556 ;; Defined at:
  4557 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\rand.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2   17[COMRAM] int 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        6 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 2
  4578 ;; This function calls:
  4579 ;;		___lmul
  4580 ;; This function is called by:
  4581 ;;		_runGAME
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text13
  4586   004C5A                     __ptext13:
  4587                           	callstack 0
  4588   004C5A                     _rand:
  4589                           	callstack 27
  4590   004C5A  C197  F006         	movff	_seed,___lmul@multiplier
  4591   004C5E  C198  F007         	movff	_seed+1,___lmul@multiplier+1
  4592   004C62  C199  F008         	movff	_seed+2,___lmul@multiplier+2
  4593   004C66  C19A  F009         	movff	_seed+3,___lmul@multiplier+3
  4594   004C6A  0E2D               	movlw	45
  4595   004C6C  6E0A               	movwf	___lmul@multiplicand^0,c
  4596   004C6E  0E7F               	movlw	127
  4597   004C70  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
  4598   004C72  0E95               	movlw	149
  4599   004C74  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
  4600   004C76  0E4C               	movlw	76
  4601   004C78  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
  4602   004C7A  EC64  F026         	call	___lmul	;wreg free
  4603   004C7E  0E01               	movlw	1
  4604   004C80  2406               	addwf	?___lmul^0,w,c
  4605   004C82  0101               	movlb	1	; () banked
  4606   004C84  6F97               	movwf	_seed& (0+255),b
  4607   004C86  0E00               	movlw	0
  4608   004C88  2007               	addwfc	(?___lmul+1)^0,w,c
  4609   004C8A  6F98               	movwf	(_seed+1)& (0+255),b
  4610   004C8C  0E00               	movlw	0
  4611   004C8E  2008               	addwfc	(?___lmul+2)^0,w,c
  4612   004C90  6F99               	movwf	(_seed+2)& (0+255),b
  4613   004C92  0E00               	movlw	0
  4614   004C94  2009               	addwfc	(?___lmul+3)^0,w,c
  4615   004C96  6F9A               	movwf	(_seed+3)& (0+255),b
  4616   004C98                     
  4617                           ; BSR set to: 1
  4618   004C98  C197  F014         	movff	_seed,??_rand
  4619   004C9C  C198  F015         	movff	_seed+1,??_rand+1
  4620   004CA0  C199  F016         	movff	_seed+2,??_rand+2
  4621   004CA4  C19A  F017         	movff	_seed+3,??_rand+3
  4622   004CA8  0E12               	movlw	18
  4623   004CAA  EF5C  F026         	goto	u9660
  4624   004CAE                     u9665:
  4625   004CAE  90D8               	bcf	status,0,c
  4626   004CB0  3217               	rrcf	(??_rand+3)^0,f,c
  4627   004CB2  3216               	rrcf	(??_rand+2)^0,f,c
  4628   004CB4  3215               	rrcf	(??_rand+1)^0,f,c
  4629   004CB6  3214               	rrcf	??_rand^0,f,c
  4630   004CB8                     u9660:
  4631   004CB8  2EE8               	decfsz	wreg,f,c
  4632   004CBA  EF57  F026         	goto	u9665
  4633   004CBE  C014  F012         	movff	??_rand,?_rand
  4634   004CC2  C015  F013         	movff	??_rand+1,?_rand+1
  4635   004CC6                     
  4636                           ; BSR set to: 1
  4637   004CC6  0012               	return		;funcret
  4638   004CC8                     __end_of_rand:
  4639                           	callstack 0
  4640                           
  4641 ;; *************** function ___lmul *****************
  4642 ;; Defined at:
  4643 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul32.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  multiplier      4    5[COMRAM] unsigned long 
  4646 ;;  multiplicand    4    9[COMRAM] unsigned long 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  product         4   13[COMRAM] unsigned long 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  4    5[COMRAM] unsigned long 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:       12 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 1
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_rand
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text14
  4673   004CC8                     __ptext14:
  4674                           	callstack 0
  4675   004CC8                     ___lmul:
  4676                           	callstack 27
  4677   004CC8  0E00               	movlw	0
  4678   004CCA  6E0E               	movwf	___lmul@product^0,c
  4679   004CCC  0E00               	movlw	0
  4680   004CCE  6E0F               	movwf	(___lmul@product+1)^0,c
  4681   004CD0  0E00               	movlw	0
  4682   004CD2  6E10               	movwf	(___lmul@product+2)^0,c
  4683   004CD4  0E00               	movlw	0
  4684   004CD6  6E11               	movwf	(___lmul@product+3)^0,c
  4685   004CD8                     l7636:
  4686   004CD8  A006               	btfss	___lmul@multiplier^0,0,c
  4687   004CDA  EF71  F026         	goto	u9281
  4688   004CDE  EF73  F026         	goto	u9280
  4689   004CE2                     u9281:
  4690   004CE2  EF7B  F026         	goto	l7640
  4691   004CE6                     u9280:
  4692   004CE6  500A               	movf	___lmul@multiplicand^0,w,c
  4693   004CE8  260E               	addwf	___lmul@product^0,f,c
  4694   004CEA  500B               	movf	(___lmul@multiplicand+1)^0,w,c
  4695   004CEC  220F               	addwfc	(___lmul@product+1)^0,f,c
  4696   004CEE  500C               	movf	(___lmul@multiplicand+2)^0,w,c
  4697   004CF0  2210               	addwfc	(___lmul@product+2)^0,f,c
  4698   004CF2  500D               	movf	(___lmul@multiplicand+3)^0,w,c
  4699   004CF4  2211               	addwfc	(___lmul@product+3)^0,f,c
  4700   004CF6                     l7640:
  4701   004CF6  90D8               	bcf	status,0,c
  4702   004CF8  360A               	rlcf	___lmul@multiplicand^0,f,c
  4703   004CFA  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4704   004CFC  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4705   004CFE  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4706   004D00  90D8               	bcf	status,0,c
  4707   004D02  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
  4708   004D04  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
  4709   004D06  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
  4710   004D08  3206               	rrcf	___lmul@multiplier^0,f,c
  4711   004D0A  5006               	movf	___lmul@multiplier^0,w,c
  4712   004D0C  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
  4713   004D0E  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
  4714   004D10  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
  4715   004D12  A4D8               	btfss	status,2,c
  4716   004D14  EF8E  F026         	goto	u9291
  4717   004D18  EF90  F026         	goto	u9290
  4718   004D1C                     u9291:
  4719   004D1C  EF6C  F026         	goto	l7636
  4720   004D20                     u9290:
  4721   004D20  C00E  F006         	movff	___lmul@product,?___lmul
  4722   004D24  C00F  F007         	movff	___lmul@product+1,?___lmul+1
  4723   004D28  C010  F008         	movff	___lmul@product+2,?___lmul+2
  4724   004D2C  C011  F009         	movff	___lmul@product+3,?___lmul+3
  4725   004D30  0012               	return		;funcret
  4726   004D32                     __end_of___lmul:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function ___lbdiv *****************
  4730 ;; Defined at:
  4731 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lbdiv.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  dividend        1    wreg     unsigned char 
  4734 ;;  divisor         1    5[COMRAM] unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  dividend        1    6[COMRAM] unsigned char 
  4737 ;;  quotient        1    8[COMRAM] unsigned char 
  4738 ;;  counter         1    7[COMRAM] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      unsigned char 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4748 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;Total ram usage:        4 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_runGAME
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text15
  4763   004D96                     __ptext15:
  4764                           	callstack 0
  4765   004D96                     ___lbdiv:
  4766                           	callstack 28
  4767                           
  4768                           ;incstack = 0
  4769                           ;___lbdiv@dividend stored from wreg
  4770   004D96  6E07               	movwf	___lbdiv@dividend^0,c
  4771   004D98  0E00               	movlw	0
  4772   004D9A  6E09               	movwf	___lbdiv@quotient^0,c
  4773   004D9C  5006               	movf	___lbdiv@divisor^0,w,c
  4774   004D9E  B4D8               	btfsc	status,2,c
  4775   004DA0  EFD4  F026         	goto	u9671
  4776   004DA4  EFD6  F026         	goto	u9670
  4777   004DA8                     u9671:
  4778   004DA8  EFF7  F026         	goto	l7918
  4779   004DAC                     u9670:
  4780   004DAC  0E01               	movlw	1
  4781   004DAE  6E08               	movwf	___lbdiv@counter^0,c
  4782   004DB0  EFDD  F026         	goto	l7906
  4783   004DB4                     l7902:
  4784   004DB4  90D8               	bcf	status,0,c
  4785   004DB6  3606               	rlcf	___lbdiv@divisor^0,f,c
  4786   004DB8  2A08               	incf	___lbdiv@counter^0,f,c
  4787   004DBA                     l7906:
  4788   004DBA  AE06               	btfss	___lbdiv@divisor^0,7,c
  4789   004DBC  EFE2  F026         	goto	u9681
  4790   004DC0  EFE4  F026         	goto	u9680
  4791   004DC4                     u9681:
  4792   004DC4  EFDA  F026         	goto	l7902
  4793   004DC8                     u9680:
  4794   004DC8                     l7908:
  4795   004DC8  90D8               	bcf	status,0,c
  4796   004DCA  3609               	rlcf	___lbdiv@quotient^0,f,c
  4797   004DCC  5006               	movf	___lbdiv@divisor^0,w,c
  4798   004DCE  5C07               	subwf	___lbdiv@dividend^0,w,c
  4799   004DD0  A0D8               	btfss	status,0,c
  4800   004DD2  EFED  F026         	goto	u9691
  4801   004DD6  EFEF  F026         	goto	u9690
  4802   004DDA                     u9691:
  4803   004DDA  EFF2  F026         	goto	l7914
  4804   004DDE                     u9690:
  4805   004DDE  5006               	movf	___lbdiv@divisor^0,w,c
  4806   004DE0  5E07               	subwf	___lbdiv@dividend^0,f,c
  4807   004DE2  8009               	bsf	___lbdiv@quotient^0,0,c
  4808   004DE4                     l7914:
  4809   004DE4  90D8               	bcf	status,0,c
  4810   004DE6  3206               	rrcf	___lbdiv@divisor^0,f,c
  4811   004DE8  2E08               	decfsz	___lbdiv@counter^0,f,c
  4812   004DEA  EFE4  F026         	goto	l7908
  4813   004DEE                     l7918:
  4814   004DEE  5009               	movf	___lbdiv@quotient^0,w,c
  4815   004DF0  0012               	return		;funcret
  4816   004DF2                     __end_of___lbdiv:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _runDAC *****************
  4820 ;; Defined at:
  4821 ;;		line 10 in file "DAC.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  DACindex        1  125[BANK0 ] unsigned char 
  4826 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  4827 ;;  keepState       1  123[BANK0 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:       12 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 9
  4844 ;; This function calls:
  4845 ;;		_SPI_write
  4846 ;;		___fladd
  4847 ;;		___fldiv
  4848 ;;		___flmul
  4849 ;;		___fltol
  4850 ;;		___xxtofl
  4851 ;;		_printf
  4852 ;;		_sinf
  4853 ;; This function is called by:
  4854 ;;		_main
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text16
  4859   002CEE                     __ptext16:
  4860                           	callstack 0
  4861   002CEE                     _runDAC:
  4862                           	callstack 21
  4863   002CEE                     
  4864                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  4865   002CEE  8094               	bsf	148,0,c	;volatile
  4866                           
  4867                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  4868   002CF0  8892               	bsf	146,4,c	;volatile
  4869                           
  4870                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  4871   002CF2  8692               	bsf	146,3,c	;volatile
  4872                           
  4873                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  4874   002CF4  8492               	bsf	146,2,c	;volatile
  4875                           
  4876                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  4877   002CF6  010F               	movlb	15	; () banked
  4878   002CF8  9738               	bcf	56,3,b	;volatile
  4879                           
  4880                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  4881   002CFA  9538               	bcf	56,2,b	;volatile
  4882                           
  4883                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  4884   002CFC  9693               	bcf	147,3,c	;volatile
  4885                           
  4886                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  4887   002CFE  9694               	bcf	148,3,c	;volatile
  4888                           
  4889                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  4890   002D00  9A94               	bcf	148,5,c	;volatile
  4891   002D02                     
  4892                           ; BSR set to: 15
  4893                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  4894   002D02  50C6               	movf	198,w,c	;volatile
  4895   002D04  0BF0               	andlw	-16
  4896   002D06  0902               	iorlw	2
  4897   002D08  6EC6               	movwf	198,c	;volatile
  4898   002D0A                     
  4899                           ; BSR set to: 15
  4900                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  4901   002D0A  98C6               	bcf	198,4,c	;volatile
  4902   002D0C                     
  4903                           ; BSR set to: 15
  4904                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  4905   002D0C  8CC7               	bsf	199,6,c	;volatile
  4906   002D0E                     
  4907                           ; BSR set to: 15
  4908                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  4909   002D0E  8AC6               	bsf	198,5,c	;volatile
  4910   002D10                     
  4911                           ; BSR set to: 15
  4912                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  4913   002D10  8139               	bsf	57,0,b	;volatile
  4914   002D12                     
  4915                           ; BSR set to: 15
  4916                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  4917   002D12  9EC0               	bcf	192,7,c	;volatile
  4918                           
  4919                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  4920   002D14  50C0               	movf	192,w,c	;volatile
  4921   002D16  0BF8               	andlw	-8
  4922   002D18  0906               	iorlw	6
  4923   002D1A  6EC0               	movwf	192,c	;volatile
  4924                           
  4925                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  4926   002D1C  50C0               	movf	192,w,c	;volatile
  4927   002D1E  0BC7               	andlw	-57
  4928   002D20  0930               	iorlw	48
  4929   002D22  6EC0               	movwf	192,c	;volatile
  4930   002D24                     
  4931                           ; BSR set to: 15
  4932                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  4933   002D24  80C2               	bsf	194,0,c	;volatile
  4934                           
  4935                           ;DAC.c: 38:     SPBRG1 = 25;
  4936   002D26  0E19               	movlw	25
  4937   002D28  6EAF               	movwf	175,c	;volatile
  4938   002D2A                     
  4939                           ; BSR set to: 15
  4940                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  4941   002D2A  8EAB               	bsf	171,7,c	;volatile
  4942   002D2C                     
  4943                           ; BSR set to: 15
  4944                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  4945   002D2C  98AC               	bcf	172,4,c	;volatile
  4946   002D2E                     
  4947                           ; BSR set to: 15
  4948                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  4949   002D2E  8AAC               	bsf	172,5,c	;volatile
  4950   002D30                     
  4951                           ; BSR set to: 15
  4952                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  4953   002D30  88AB               	bsf	171,4,c	;volatile
  4954   002D32                     
  4955                           ; BSR set to: 15
  4956                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  4957   002D32  868A               	bsf	138,3,c	;volatile
  4958                           
  4959                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  4960   002D34  50C2               	movf	194,w,c	;volatile
  4961   002D36  0B83               	andlw	-125
  4962   002D38  0930               	iorlw	48
  4963   002D3A  6EC2               	movwf	194,c	;volatile
  4964                           
  4965                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  4966   002D3C  0E01               	movlw	1
  4967   002D3E  0100               	movlb	0	; () banked
  4968   002D40  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  4969                           
  4970                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  4971   002D42  0E01               	movlw	1
  4972   002D44  6FDB               	movwf	runDAC@keepState& (0+255),b
  4973                           
  4974                           ;DAC.c: 52:     uint8_t DACindex = 0;
  4975   002D46  0E00               	movlw	0
  4976   002D48  6FDD               	movwf	runDAC@DACindex& (0+255),b
  4977                           
  4978                           ;DAC.c: 54:     while(keepState){
  4979   002D4A  EFE1  F017         	goto	l8224
  4980   002D4E                     l8182:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;DAC.c: 57:                 if(DACindex<255/2){
  4984   002D4E  0E7F               	movlw	127
  4985   002D50  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  4986   002D52  EFAD  F016         	goto	u10081
  4987   002D56  EFAF  F016         	goto	u10080
  4988   002D5A                     u10081:
  4989   002D5A  EFD7  F016         	goto	l8186
  4990   002D5E                     u10080:
  4991   002D5E                     
  4992                           ; BSR set to: 0
  4993                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  4994   002D5E  0E33               	movlw	51
  4995   002D60  6E18               	movwf	___flmul@a^0,c
  4996   002D62  0E33               	movlw	51
  4997   002D64  6E19               	movwf	(___flmul@a+1)^0,c
  4998   002D66  0EF3               	movlw	243
  4999   002D68  6E1A               	movwf	(___flmul@a+2)^0,c
  5000   002D6A  0E3F               	movlw	63
  5001   002D6C  6E1B               	movwf	(___flmul@a+3)^0,c
  5002   002D6E  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5003   002D70  6E06               	movwf	___xxtofl@val^0,c
  5004   002D72  6A07               	clrf	(___xxtofl@val+1)^0,c
  5005   002D74  6A08               	clrf	(___xxtofl@val+2)^0,c
  5006   002D76  6A09               	clrf	(___xxtofl@val+3)^0,c
  5007   002D78  0E01               	movlw	1
  5008   002D7A  EC17  F01C         	call	___xxtofl
  5009   002D7E  C006  F014         	movff	?___xxtofl,___flmul@b
  5010   002D82  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5011   002D86  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5012   002D8A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5013   002D8E  EC3A  F00D         	call	___flmul	;wreg free
  5014   002D92  C014  F064         	movff	?___flmul,___fltol@f1
  5015   002D96  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5016   002D9A  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5017   002D9E  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5018   002DA2  EC16  F021         	call	___fltol	;wreg free
  5019   002DA6  0100               	movlb	0	; () banked
  5020   002DA8  5164               	movf	?___fltol& (0+255),w,b
  5021   002DAA  EC04  F028         	call	_SPI_write
  5022   002DAE                     l8186:
  5023                           
  5024                           ;DAC.c: 60:                 if(DACindex>=255/2){
  5025   002DAE  0E7E               	movlw	126
  5026   002DB0  0100               	movlb	0	; () banked
  5027   002DB2  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  5028   002DB4  EFDE  F016         	goto	u10091
  5029   002DB8  EFE0  F016         	goto	u10090
  5030   002DBC                     u10091:
  5031   002DBC  EF9C  F017         	goto	l231
  5032   002DC0                     u10090:
  5033   002DC0                     
  5034                           ; BSR set to: 0
  5035                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  5036   002DC0  0E33               	movlw	51
  5037   002DC2  6E18               	movwf	___flmul@a^0,c
  5038   002DC4  0E33               	movlw	51
  5039   002DC6  6E19               	movwf	(___flmul@a+1)^0,c
  5040   002DC8  0EF3               	movlw	243
  5041   002DCA  6E1A               	movwf	(___flmul@a+2)^0,c
  5042   002DCC  0E3F               	movlw	63
  5043   002DCE  6E1B               	movwf	(___flmul@a+3)^0,c
  5044   002DD0  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5045   002DD2  0AFF               	xorlw	255
  5046   002DD4  6FD2               	movwf	??_runDAC& (0+255),b
  5047   002DD6  51D2               	movf	??_runDAC& (0+255),w,b
  5048   002DD8  6E06               	movwf	___xxtofl@val^0,c
  5049   002DDA  6A07               	clrf	(___xxtofl@val+1)^0,c
  5050   002DDC  6A08               	clrf	(___xxtofl@val+2)^0,c
  5051   002DDE  6A09               	clrf	(___xxtofl@val+3)^0,c
  5052   002DE0  0E01               	movlw	1
  5053   002DE2  EC17  F01C         	call	___xxtofl
  5054   002DE6  C006  F014         	movff	?___xxtofl,___flmul@b
  5055   002DEA  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5056   002DEE  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5057   002DF2  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5058   002DF6  EC3A  F00D         	call	___flmul	;wreg free
  5059   002DFA  C014  F064         	movff	?___flmul,___fltol@f1
  5060   002DFE  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  5061   002E02  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  5062   002E06  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  5063   002E0A  EC16  F021         	call	___fltol	;wreg free
  5064   002E0E  0100               	movlb	0	; () banked
  5065   002E10  5164               	movf	?___fltol& (0+255),w,b
  5066   002E12  EC04  F028         	call	_SPI_write
  5067   002E16  EF9C  F017         	goto	l231
  5068   002E1A                     l8190:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5072   002E1A  0E00               	movlw	0
  5073   002E1C  6E31               	movwf	___fldiv@a^0,c
  5074   002E1E  0E00               	movlw	0
  5075   002E20  6E32               	movwf	(___fldiv@a+1)^0,c
  5076   002E22  0E7F               	movlw	127
  5077   002E24  6E33               	movwf	(___fldiv@a+2)^0,c
  5078   002E26  0E43               	movlw	67
  5079   002E28  6E34               	movwf	(___fldiv@a+3)^0,c
  5080   002E2A  0EC3               	movlw	195
  5081   002E2C  6E18               	movwf	___flmul@a^0,c
  5082   002E2E  0EF5               	movlw	245
  5083   002E30  6E19               	movwf	(___flmul@a+1)^0,c
  5084   002E32  0EC8               	movlw	200
  5085   002E34  6E1A               	movwf	(___flmul@a+2)^0,c
  5086   002E36  0E40               	movlw	64
  5087   002E38  6E1B               	movwf	(___flmul@a+3)^0,c
  5088   002E3A  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5089   002E3C  6E06               	movwf	___xxtofl@val^0,c
  5090   002E3E  6A07               	clrf	(___xxtofl@val+1)^0,c
  5091   002E40  6A08               	clrf	(___xxtofl@val+2)^0,c
  5092   002E42  6A09               	clrf	(___xxtofl@val+3)^0,c
  5093   002E44  0E01               	movlw	1
  5094   002E46  EC17  F01C         	call	___xxtofl
  5095   002E4A  C006  F014         	movff	?___xxtofl,___flmul@b
  5096   002E4E  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  5097   002E52  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  5098   002E56  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  5099   002E5A  EC3A  F00D         	call	___flmul	;wreg free
  5100   002E5E  C014  F02D         	movff	?___flmul,___fldiv@b
  5101   002E62  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  5102   002E66  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  5103   002E6A  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  5104   002E6E  EC24  F013         	call	___fldiv	;wreg free
  5105   002E72  C02D  F0D3         	movff	?___fldiv,_runDAC$4524
  5106   002E76  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4524+1
  5107   002E7A  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4524+2
  5108   002E7E  C030  F0D6         	movff	?___fldiv+3,_runDAC$4524+3
  5109   002E82                     
  5110                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5111   002E82  C0D3  F0A4         	movff	_runDAC$4524,sinf@x
  5112   002E86  C0D4  F0A5         	movff	_runDAC$4524+1,sinf@x+1
  5113   002E8A  C0D5  F0A6         	movff	_runDAC$4524+2,sinf@x+2
  5114   002E8E  C0D6  F0A7         	movff	_runDAC$4524+3,sinf@x+3
  5115   002E92  EC54  F008         	call	_sinf	;wreg free
  5116   002E96  C0A4  F0D7         	movff	?_sinf,_runDAC$4525
  5117   002E9A  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4525+1
  5118   002E9E  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4525+2
  5119   002EA2  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4525+3
  5120   002EA6                     
  5121                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  5122   002EA6  0E00               	movlw	0
  5123   002EA8  6E4A               	movwf	___fladd@a^0,c
  5124   002EAA  0E00               	movlw	0
  5125   002EAC  6E4B               	movwf	(___fladd@a+1)^0,c
  5126   002EAE  0EFE               	movlw	254
  5127   002EB0  6E4C               	movwf	(___fladd@a+2)^0,c
  5128   002EB2  0E42               	movlw	66
  5129   002EB4  6E4D               	movwf	(___fladd@a+3)^0,c
  5130   002EB6  0E00               	movlw	0
  5131   002EB8  6E18               	movwf	___flmul@a^0,c
  5132   002EBA  0E00               	movlw	0
  5133   002EBC  6E19               	movwf	(___flmul@a+1)^0,c
  5134   002EBE  0EFE               	movlw	254
  5135   002EC0  6E1A               	movwf	(___flmul@a+2)^0,c
  5136   002EC2  0E42               	movlw	66
  5137   002EC4  6E1B               	movwf	(___flmul@a+3)^0,c
  5138   002EC6  C0D7  F014         	movff	_runDAC$4525,___flmul@b
  5139   002ECA  C0D8  F015         	movff	_runDAC$4525+1,___flmul@b+1
  5140   002ECE  C0D9  F016         	movff	_runDAC$4525+2,___flmul@b+2
  5141   002ED2  C0DA  F017         	movff	_runDAC$4525+3,___flmul@b+3
  5142   002ED6  EC3A  F00D         	call	___flmul	;wreg free
  5143   002EDA  C014  F046         	movff	?___flmul,___fladd@b
  5144   002EDE  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5145   002EE2  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5146   002EE6  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5147   002EEA  ECD9  F00A         	call	___fladd	;wreg free
  5148   002EEE  C046  F064         	movff	?___fladd,___fltol@f1
  5149   002EF2  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  5150   002EF6  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  5151   002EFA  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  5152   002EFE  EC16  F021         	call	___fltol	;wreg free
  5153   002F02  0100               	movlb	0	; () banked
  5154   002F04  5164               	movf	?___fltol& (0+255),w,b
  5155   002F06  EC04  F028         	call	_SPI_write
  5156                           
  5157                           ;DAC.c: 66:                 break;
  5158   002F0A  EF9C  F017         	goto	l231
  5159   002F0E                     l8196:
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  5163   002F0E  51DD               	movf	runDAC@DACindex& (0+255),w,b
  5164   002F10  0AFF               	xorlw	255
  5165   002F12  EC04  F028         	call	_SPI_write
  5166                           
  5167                           ;DAC.c: 69:                 break;
  5168   002F16  EF9C  F017         	goto	l231
  5169   002F1A                     l8200:
  5170                           
  5171                           ; BSR set to: 0
  5172   002F1A  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  5173                           
  5174                           ; Switch size 1, requested type "simple"
  5175                           ; Number of cases is 3, Range of values is 1 to 3
  5176                           ; switch strategies available:
  5177                           ; Name         Instructions Cycles
  5178                           ; simple_byte           10     6 (average)
  5179                           ;	Chosen strategy is simple_byte
  5180   002F1C  0A01               	xorlw	1	; case 1
  5181   002F1E  B4D8               	btfsc	status,2,c
  5182   002F20  EFA7  F016         	goto	l8182
  5183   002F24  0A03               	xorlw	3	; case 2
  5184   002F26  B4D8               	btfsc	status,2,c
  5185   002F28  EF0D  F017         	goto	l8190
  5186   002F2C  0A01               	xorlw	1	; case 3
  5187   002F2E  B4D8               	btfsc	status,2,c
  5188   002F30  EF87  F017         	goto	l8196
  5189   002F34  EF9C  F017         	goto	l231
  5190   002F38                     l231:
  5191                           
  5192                           ;DAC.c: 71:         GODONE = 1;
  5193   002F38  82C2               	bsf	4034,1,c	;volatile
  5194   002F3A                     l234:
  5195   002F3A  B2C2               	btfsc	4034,1,c	;volatile
  5196   002F3C  EFA2  F017         	goto	u10101
  5197   002F40  EFA4  F017         	goto	u10100
  5198   002F44                     u10101:
  5199   002F44  EF9D  F017         	goto	l234
  5200   002F48                     u10100:
  5201   002F48                     
  5202                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  5203   002F48  0EE6               	movlw	low STR_16
  5204   002F4A  0100               	movlb	0	; () banked
  5205   002F4C  6FCE               	movwf	printf@fmt& (0+255),b
  5206   002F4E  0EFF               	movlw	high STR_16
  5207   002F50  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  5208   002F52  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  5209   002F56  6BD1               	clrf	(?_printf+3)& (0+255),b
  5210   002F58  EC00  F029         	call	_printf	;wreg free
  5211   002F5C                     
  5212                           ;DAC.c: 75:         if(PORTCbits.RC0){
  5213   002F5C  A082               	btfss	130,0,c	;volatile
  5214   002F5E  EFB3  F017         	goto	u10111
  5215   002F62  EFB5  F017         	goto	u10110
  5216   002F66                     u10111:
  5217   002F66  EFB8  F017         	goto	l8208
  5218   002F6A                     u10110:
  5219   002F6A                     
  5220                           ;DAC.c: 76:             selectModeDAC = 1;
  5221   002F6A  0E01               	movlw	1
  5222   002F6C  0100               	movlb	0	; () banked
  5223   002F6E  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5224   002F70                     l8208:
  5225                           
  5226                           ;DAC.c: 78:         if(PORTAbits.RA4){
  5227   002F70  A880               	btfss	128,4,c	;volatile
  5228   002F72  EFBD  F017         	goto	u10121
  5229   002F76  EFBF  F017         	goto	u10120
  5230   002F7A                     u10121:
  5231   002F7A  EFC2  F017         	goto	l8212
  5232   002F7E                     u10120:
  5233   002F7E                     
  5234                           ;DAC.c: 79:             selectModeDAC = 2;
  5235   002F7E  0E02               	movlw	2
  5236   002F80  0100               	movlb	0	; () banked
  5237   002F82  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5238   002F84                     l8212:
  5239                           
  5240                           ;DAC.c: 81:         if(PORTAbits.RA3){
  5241   002F84  A680               	btfss	128,3,c	;volatile
  5242   002F86  EFC7  F017         	goto	u10131
  5243   002F8A  EFC9  F017         	goto	u10130
  5244   002F8E                     u10131:
  5245   002F8E  EFCC  F017         	goto	l8216
  5246   002F92                     u10130:
  5247   002F92                     
  5248                           ;DAC.c: 82:             selectModeDAC = 3;
  5249   002F92  0E03               	movlw	3
  5250   002F94  0100               	movlb	0	; () banked
  5251   002F96  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  5252   002F98                     l8216:
  5253                           
  5254                           ;DAC.c: 84:         if(PORTAbits.RA2){
  5255   002F98  A480               	btfss	128,2,c	;volatile
  5256   002F9A  EFD1  F017         	goto	u10141
  5257   002F9E  EFD3  F017         	goto	u10140
  5258   002FA2                     u10141:
  5259   002FA2  EFD6  F017         	goto	l8220
  5260   002FA6                     u10140:
  5261   002FA6                     
  5262                           ;DAC.c: 85:             keepState = 0;
  5263   002FA6  0E00               	movlw	0
  5264   002FA8  0100               	movlb	0	; () banked
  5265   002FAA  6FDB               	movwf	runDAC@keepState& (0+255),b
  5266   002FAC                     l8220:
  5267                           
  5268                           ;DAC.c: 87:         DACindex++;
  5269   002FAC  0100               	movlb	0	; () banked
  5270   002FAE  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  5271   002FB0                     
  5272                           ; BSR set to: 0
  5273                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  5274   002FB0  0E68               	movlw	104
  5275   002FB2  0100               	movlb	0	; () banked
  5276   002FB4  6FD2               	movwf	??_runDAC& (0+255),b
  5277   002FB6  0EE4               	movlw	228
  5278   002FB8                     u10487:
  5279   002FB8  2EE8               	decfsz	wreg,f,c
  5280   002FBA  D7FE               	bra	u10487
  5281   002FBC  2FD2               	decfsz	??_runDAC& (0+255),f,b
  5282   002FBE  D7FC               	bra	u10487
  5283   002FC0  0000               	nop	
  5284   002FC2                     l8224:
  5285                           
  5286                           ;DAC.c: 54:     while(keepState){
  5287   002FC2  0100               	movlb	0	; () banked
  5288   002FC4  51DB               	movf	runDAC@keepState& (0+255),w,b
  5289   002FC6  A4D8               	btfss	status,2,c
  5290   002FC8  EFE8  F017         	goto	u10151
  5291   002FCC  EFEA  F017         	goto	u10150
  5292   002FD0                     u10151:
  5293   002FD0  EF8D  F017         	goto	l8200
  5294   002FD4                     u10150:
  5295   002FD4                     
  5296                           ; BSR set to: 0
  5297   002FD4  0012               	return		;funcret
  5298   002FD6                     __end_of_runDAC:
  5299                           	callstack 0
  5300                           
  5301 ;; *************** function _sinf *****************
  5302 ;; Defined at:
  5303 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  x               4   68[BANK0 ] float 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  ux              4   90[BANK0 ] struct .
  5308 ;;  y               4   86[BANK0 ] struct .
  5309 ;;  sign            1   81[BANK0 ] _Bool 
  5310 ;;  n               1   80[BANK0 ] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  4   68[BANK0 ] float 
  5313 ;; Registers used:
  5314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;Total ram usage:       26 bytes
  5325 ;; Hardware stack levels used: 1
  5326 ;; Hardware stack levels required when called: 4
  5327 ;; This function calls:
  5328 ;;		___cosdf
  5329 ;;		___fladd
  5330 ;;		___flneg
  5331 ;;		___rem_pio2f
  5332 ;;		___sindf
  5333 ;; This function is called by:
  5334 ;;		_runDAC
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text17
  5339   0010A8                     __ptext17:
  5340                           	callstack 0
  5341   0010A8                     _sinf:
  5342                           	callstack 25
  5343   0010A8  C0A4  F0BA         	movff	sinf@x,sinf@ux
  5344   0010AC  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  5345   0010B0  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  5346   0010B4  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  5347   0010B8  0100               	movlb	0	; () banked
  5348   0010BA  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  5349   0010BC  EF62  F008         	goto	u9461
  5350   0010C0  EF65  F008         	goto	u9460
  5351   0010C4                     u9461:
  5352   0010C4  0E01               	movlw	1
  5353   0010C6  EF66  F008         	goto	u9470
  5354   0010CA                     u9460:
  5355   0010CA  0E00               	movlw	0
  5356   0010CC                     u9470:
  5357   0010CC  6FB1               	movwf	sinf@sign& (0+255),b
  5358   0010CE                     
  5359                           ; BSR set to: 0
  5360   0010CE  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  5361   0010D0                     
  5362                           ; BSR set to: 0
  5363   0010D0  0EDB               	movlw	219
  5364   0010D2  5DBA               	subwf	sinf@ux& (0+255),w,b
  5365   0010D4  0E0F               	movlw	15
  5366   0010D6  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5367   0010D8  0E49               	movlw	73
  5368   0010DA  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5369   0010DC  0E3F               	movlw	63
  5370   0010DE  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5371   0010E0  B0D8               	btfsc	status,0,c
  5372   0010E2  EF75  F008         	goto	u9481
  5373   0010E6  EF77  F008         	goto	u9480
  5374   0010EA                     u9481:
  5375   0010EA  EFA0  F008         	goto	l7762
  5376   0010EE                     u9480:
  5377   0010EE                     
  5378                           ; BSR set to: 0
  5379   0010EE  0E80               	movlw	128
  5380   0010F0  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5381   0010F2  0E39               	movlw	57
  5382   0010F4  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5383   0010F6  B0D8               	btfsc	status,0,c
  5384   0010F8  EF80  F008         	goto	u9491
  5385   0010FC  EF82  F008         	goto	u9490
  5386   001100                     u9491:
  5387   001100  EF8C  F008         	goto	l7758
  5388   001104                     u9490:
  5389   001104                     
  5390                           ; BSR set to: 0
  5391   001104  C0A4  F0A4         	movff	sinf@x,?_sinf
  5392   001108  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  5393   00110C  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  5394   001110  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  5395   001114  EFD8  F00A         	goto	l1694
  5396   001118                     l7758:
  5397                           
  5398                           ; BSR set to: 0
  5399   001118  C0A4  F064         	movff	sinf@x,___sindf@x
  5400   00111C  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  5401   001120  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  5402   001124  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  5403   001128  ECEB  F017         	call	___sindf	;wreg free
  5404   00112C  C064  F0A4         	movff	?___sindf,?_sinf
  5405   001130  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5406   001134  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5407   001138  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5408   00113C  EFD8  F00A         	goto	l1694
  5409   001140                     l7762:
  5410                           
  5411                           ; BSR set to: 0
  5412   001140  0ED2               	movlw	210
  5413   001142  5DBA               	subwf	sinf@ux& (0+255),w,b
  5414   001144  0E53               	movlw	83
  5415   001146  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5416   001148  0E7B               	movlw	123
  5417   00114A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5418   00114C  0E40               	movlw	64
  5419   00114E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5420   001150  B0D8               	btfsc	status,0,c
  5421   001152  EFAD  F008         	goto	u9501
  5422   001156  EFAF  F008         	goto	u9500
  5423   00115A                     u9501:
  5424   00115A  EF92  F009         	goto	l7792
  5425   00115E                     u9500:
  5426   00115E                     
  5427                           ; BSR set to: 0
  5428   00115E  0EE4               	movlw	228
  5429   001160  5DBA               	subwf	sinf@ux& (0+255),w,b
  5430   001162  0ECB               	movlw	203
  5431   001164  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5432   001166  0E16               	movlw	22
  5433   001168  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5434   00116A  0E40               	movlw	64
  5435   00116C  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5436   00116E  B0D8               	btfsc	status,0,c
  5437   001170  EFBC  F008         	goto	u9511
  5438   001174  EFBE  F008         	goto	u9510
  5439   001178                     u9511:
  5440   001178  EF2C  F009         	goto	l7782
  5441   00117C                     u9510:
  5442   00117C                     
  5443                           ; BSR set to: 0
  5444   00117C  51B1               	movf	sinf@sign& (0+255),w,b
  5445   00117E  B4D8               	btfsc	status,2,c
  5446   001180  EFC4  F008         	goto	u9521
  5447   001184  EFC6  F008         	goto	u9520
  5448   001188                     u9521:
  5449   001188  EFFE  F008         	goto	l7776
  5450   00118C                     u9520:
  5451   00118C                     
  5452                           ; BSR set to: 0
  5453   00118C  0EDB               	movlw	219
  5454   00118E  6E4A               	movwf	___fladd@a^0,c
  5455   001190  0E0F               	movlw	15
  5456   001192  6E4B               	movwf	(___fladd@a+1)^0,c
  5457   001194  0EC9               	movlw	201
  5458   001196  6E4C               	movwf	(___fladd@a+2)^0,c
  5459   001198  0E3F               	movlw	63
  5460   00119A  6E4D               	movwf	(___fladd@a+3)^0,c
  5461   00119C  C0A4  F046         	movff	sinf@x,___fladd@b
  5462   0011A0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5463   0011A4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5464   0011A8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5465   0011AC  ECD9  F00A         	call	___fladd	;wreg free
  5466   0011B0  C046  F0B2         	movff	?___fladd,_sinf$4527
  5467   0011B4  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5468   0011B8  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5469   0011BC  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5470   0011C0                     l7770:
  5471   0011C0  C0B2  F064         	movff	_sinf$4527,___cosdf@x
  5472   0011C4  C0B3  F065         	movff	_sinf$4527+1,___cosdf@x+1
  5473   0011C8  C0B4  F066         	movff	_sinf$4527+2,___cosdf@x+2
  5474   0011CC  C0B5  F067         	movff	_sinf$4527+3,___cosdf@x+3
  5475   0011D0  EC18  F01B         	call	___cosdf	;wreg free
  5476   0011D4  C064  F080         	movff	?___cosdf,___flneg@f1
  5477   0011D8  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5478   0011DC  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5479   0011E0  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5480   0011E4  EC23  F028         	call	___flneg	;wreg free
  5481   0011E8  C080  F0A4         	movff	?___flneg,?_sinf
  5482   0011EC  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5483   0011F0  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5484   0011F4  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5485   0011F8  EFD8  F00A         	goto	l1694
  5486   0011FC                     l7776:
  5487                           
  5488                           ; BSR set to: 0
  5489   0011FC  C0A4  F046         	movff	sinf@x,___fladd@b
  5490   001200  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5491   001204  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5492   001208  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5493   00120C  0EDB               	movlw	219
  5494   00120E  6E4A               	movwf	___fladd@a^0,c
  5495   001210  0E0F               	movlw	15
  5496   001212  6E4B               	movwf	(___fladd@a+1)^0,c
  5497   001214  0EC9               	movlw	201
  5498   001216  6E4C               	movwf	(___fladd@a+2)^0,c
  5499   001218  0EBF               	movlw	191
  5500   00121A  6E4D               	movwf	(___fladd@a+3)^0,c
  5501   00121C  ECD9  F00A         	call	___fladd	;wreg free
  5502   001220  C046  F0B2         	movff	?___fladd,_sinf$4527
  5503   001224  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5504   001228  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5505   00122C  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5506   001230                     l7778:
  5507   001230  C0B2  F064         	movff	_sinf$4527,___cosdf@x
  5508   001234  C0B3  F065         	movff	_sinf$4527+1,___cosdf@x+1
  5509   001238  C0B4  F066         	movff	_sinf$4527+2,___cosdf@x+2
  5510   00123C  C0B5  F067         	movff	_sinf$4527+3,___cosdf@x+3
  5511   001240  EC18  F01B         	call	___cosdf	;wreg free
  5512   001244  C064  F0A4         	movff	?___cosdf,?_sinf
  5513   001248  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5514   00124C  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5515   001250  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5516   001254  EFD8  F00A         	goto	l1694
  5517   001258                     l7782:
  5518                           
  5519                           ; BSR set to: 0
  5520   001258  51B1               	movf	sinf@sign& (0+255),w,b
  5521   00125A  A4D8               	btfss	status,2,c
  5522   00125C  EF32  F009         	goto	u9531
  5523   001260  EF34  F009         	goto	u9530
  5524   001264                     u9531:
  5525   001264  EF5A  F009         	goto	l7786
  5526   001268                     u9530:
  5527   001268                     
  5528                           ; BSR set to: 0
  5529   001268  0EDB               	movlw	219
  5530   00126A  6E4A               	movwf	___fladd@a^0,c
  5531   00126C  0E0F               	movlw	15
  5532   00126E  6E4B               	movwf	(___fladd@a+1)^0,c
  5533   001270  0E49               	movlw	73
  5534   001272  6E4C               	movwf	(___fladd@a+2)^0,c
  5535   001274  0EC0               	movlw	192
  5536   001276  6E4D               	movwf	(___fladd@a+3)^0,c
  5537   001278  C0A4  F046         	movff	sinf@x,___fladd@b
  5538   00127C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5539   001280  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5540   001284  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5541   001288  ECD9  F00A         	call	___fladd	;wreg free
  5542   00128C  C046  F080         	movff	?___fladd,___flneg@f1
  5543   001290  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5544   001294  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5545   001298  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5546   00129C  EC23  F028         	call	___flneg	;wreg free
  5547   0012A0  C080  F0A8         	movff	?___flneg,_sinf$4243
  5548   0012A4  C081  F0A9         	movff	?___flneg+1,_sinf$4243+1
  5549   0012A8  C082  F0AA         	movff	?___flneg+2,_sinf$4243+2
  5550   0012AC  C083  F0AB         	movff	?___flneg+3,_sinf$4243+3
  5551   0012B0  EF7E  F009         	goto	l7788
  5552   0012B4                     l7786:
  5553                           
  5554                           ; BSR set to: 0
  5555   0012B4  0EDB               	movlw	219
  5556   0012B6  6E4A               	movwf	___fladd@a^0,c
  5557   0012B8  0E0F               	movlw	15
  5558   0012BA  6E4B               	movwf	(___fladd@a+1)^0,c
  5559   0012BC  0E49               	movlw	73
  5560   0012BE  6E4C               	movwf	(___fladd@a+2)^0,c
  5561   0012C0  0E40               	movlw	64
  5562   0012C2  6E4D               	movwf	(___fladd@a+3)^0,c
  5563   0012C4  C0A4  F046         	movff	sinf@x,___fladd@b
  5564   0012C8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5565   0012CC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5566   0012D0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5567   0012D4  ECD9  F00A         	call	___fladd	;wreg free
  5568   0012D8  C046  F080         	movff	?___fladd,___flneg@f1
  5569   0012DC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  5570   0012E0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  5571   0012E4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  5572   0012E8  EC23  F028         	call	___flneg	;wreg free
  5573   0012EC  C080  F0A8         	movff	?___flneg,_sinf$4243
  5574   0012F0  C081  F0A9         	movff	?___flneg+1,_sinf$4243+1
  5575   0012F4  C082  F0AA         	movff	?___flneg+2,_sinf$4243+2
  5576   0012F8  C083  F0AB         	movff	?___flneg+3,_sinf$4243+3
  5577   0012FC                     l7788:
  5578   0012FC  C0A8  F064         	movff	_sinf$4243,___sindf@x
  5579   001300  C0A9  F065         	movff	_sinf$4243+1,___sindf@x+1
  5580   001304  C0AA  F066         	movff	_sinf$4243+2,___sindf@x+2
  5581   001308  C0AB  F067         	movff	_sinf$4243+3,___sindf@x+3
  5582   00130C  ECEB  F017         	call	___sindf	;wreg free
  5583   001310  C064  F0A4         	movff	?___sindf,?_sinf
  5584   001314  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5585   001318  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5586   00131C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5587   001320  EFD8  F00A         	goto	l1694
  5588   001324                     l7792:
  5589                           
  5590                           ; BSR set to: 0
  5591   001324  0ED6               	movlw	214
  5592   001326  5DBA               	subwf	sinf@ux& (0+255),w,b
  5593   001328  0E31               	movlw	49
  5594   00132A  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5595   00132C  0EE2               	movlw	226
  5596   00132E  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5597   001330  0E40               	movlw	64
  5598   001332  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5599   001334  B0D8               	btfsc	status,0,c
  5600   001336  EF9F  F009         	goto	u9541
  5601   00133A  EFA1  F009         	goto	u9540
  5602   00133E                     u9541:
  5603   00133E  EF42  F00A         	goto	l7822
  5604   001342                     u9540:
  5605   001342                     
  5606                           ; BSR set to: 0
  5607   001342  0EE0               	movlw	224
  5608   001344  5DBA               	subwf	sinf@ux& (0+255),w,b
  5609   001346  0EED               	movlw	237
  5610   001348  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  5611   00134A  0EAF               	movlw	175
  5612   00134C  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  5613   00134E  0E40               	movlw	64
  5614   001350  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5615   001352  B0D8               	btfsc	status,0,c
  5616   001354  EFAE  F009         	goto	u9551
  5617   001358  EFB0  F009         	goto	u9550
  5618   00135C                     u9551:
  5619   00135C  EFF0  F009         	goto	l7812
  5620   001360                     u9550:
  5621   001360                     
  5622                           ; BSR set to: 0
  5623   001360  51B1               	movf	sinf@sign& (0+255),w,b
  5624   001362  B4D8               	btfsc	status,2,c
  5625   001364  EFB6  F009         	goto	u9561
  5626   001368  EFB8  F009         	goto	u9560
  5627   00136C                     u9561:
  5628   00136C  EFD4  F009         	goto	l7806
  5629   001370                     u9560:
  5630   001370                     
  5631                           ; BSR set to: 0
  5632   001370  C0A4  F046         	movff	sinf@x,___fladd@b
  5633   001374  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5634   001378  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5635   00137C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5636   001380  0EE4               	movlw	228
  5637   001382  6E4A               	movwf	___fladd@a^0,c
  5638   001384  0ECB               	movlw	203
  5639   001386  6E4B               	movwf	(___fladd@a+1)^0,c
  5640   001388  0E96               	movlw	150
  5641   00138A  6E4C               	movwf	(___fladd@a+2)^0,c
  5642   00138C  0E40               	movlw	64
  5643   00138E  6E4D               	movwf	(___fladd@a+3)^0,c
  5644   001390  ECD9  F00A         	call	___fladd	;wreg free
  5645   001394  C046  F0B2         	movff	?___fladd,_sinf$4527
  5646   001398  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5647   00139C  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5648   0013A0  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5649   0013A4  EF18  F009         	goto	l7778
  5650   0013A8                     l7806:
  5651                           
  5652                           ; BSR set to: 0
  5653   0013A8  0EE4               	movlw	228
  5654   0013AA  6E4A               	movwf	___fladd@a^0,c
  5655   0013AC  0ECB               	movlw	203
  5656   0013AE  6E4B               	movwf	(___fladd@a+1)^0,c
  5657   0013B0  0E96               	movlw	150
  5658   0013B2  6E4C               	movwf	(___fladd@a+2)^0,c
  5659   0013B4  0EC0               	movlw	192
  5660   0013B6  6E4D               	movwf	(___fladd@a+3)^0,c
  5661   0013B8  C0A4  F046         	movff	sinf@x,___fladd@b
  5662   0013BC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5663   0013C0  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5664   0013C4  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5665   0013C8  ECD9  F00A         	call	___fladd	;wreg free
  5666   0013CC  C046  F0B2         	movff	?___fladd,_sinf$4527
  5667   0013D0  C047  F0B3         	movff	?___fladd+1,_sinf$4527+1
  5668   0013D4  C048  F0B4         	movff	?___fladd+2,_sinf$4527+2
  5669   0013D8  C049  F0B5         	movff	?___fladd+3,_sinf$4527+3
  5670   0013DC  EFE0  F008         	goto	l7770
  5671   0013E0                     l7812:
  5672                           
  5673                           ; BSR set to: 0
  5674   0013E0  51B1               	movf	sinf@sign& (0+255),w,b
  5675   0013E2  A4D8               	btfss	status,2,c
  5676   0013E4  EFF6  F009         	goto	u9571
  5677   0013E8  EFF8  F009         	goto	u9570
  5678   0013EC                     u9571:
  5679   0013EC  EF14  F00A         	goto	l7816
  5680   0013F0                     u9570:
  5681   0013F0                     
  5682                           ; BSR set to: 0
  5683   0013F0  C0A4  F046         	movff	sinf@x,___fladd@b
  5684   0013F4  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5685   0013F8  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5686   0013FC  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5687   001400  0EDB               	movlw	219
  5688   001402  6E4A               	movwf	___fladd@a^0,c
  5689   001404  0E0F               	movlw	15
  5690   001406  6E4B               	movwf	(___fladd@a+1)^0,c
  5691   001408  0EC9               	movlw	201
  5692   00140A  6E4C               	movwf	(___fladd@a+2)^0,c
  5693   00140C  0EC0               	movlw	192
  5694   00140E  6E4D               	movwf	(___fladd@a+3)^0,c
  5695   001410  ECD9  F00A         	call	___fladd	;wreg free
  5696   001414  C046  F0AC         	movff	?___fladd,_sinf$4244
  5697   001418  C047  F0AD         	movff	?___fladd+1,_sinf$4244+1
  5698   00141C  C048  F0AE         	movff	?___fladd+2,_sinf$4244+2
  5699   001420  C049  F0AF         	movff	?___fladd+3,_sinf$4244+3
  5700   001424  EF2E  F00A         	goto	l7818
  5701   001428                     l7816:
  5702                           
  5703                           ; BSR set to: 0
  5704   001428  C0A4  F046         	movff	sinf@x,___fladd@b
  5705   00142C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  5706   001430  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  5707   001434  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  5708   001438  0EDB               	movlw	219
  5709   00143A  6E4A               	movwf	___fladd@a^0,c
  5710   00143C  0E0F               	movlw	15
  5711   00143E  6E4B               	movwf	(___fladd@a+1)^0,c
  5712   001440  0EC9               	movlw	201
  5713   001442  6E4C               	movwf	(___fladd@a+2)^0,c
  5714   001444  0E40               	movlw	64
  5715   001446  6E4D               	movwf	(___fladd@a+3)^0,c
  5716   001448  ECD9  F00A         	call	___fladd	;wreg free
  5717   00144C  C046  F0AC         	movff	?___fladd,_sinf$4244
  5718   001450  C047  F0AD         	movff	?___fladd+1,_sinf$4244+1
  5719   001454  C048  F0AE         	movff	?___fladd+2,_sinf$4244+2
  5720   001458  C049  F0AF         	movff	?___fladd+3,_sinf$4244+3
  5721   00145C                     l7818:
  5722   00145C  C0AC  F064         	movff	_sinf$4244,___sindf@x
  5723   001460  C0AD  F065         	movff	_sinf$4244+1,___sindf@x+1
  5724   001464  C0AE  F066         	movff	_sinf$4244+2,___sindf@x+2
  5725   001468  C0AF  F067         	movff	_sinf$4244+3,___sindf@x+3
  5726   00146C  ECEB  F017         	call	___sindf	;wreg free
  5727   001470  C064  F0A4         	movff	?___sindf,?_sinf
  5728   001474  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5729   001478  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5730   00147C  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5731   001480  EFD8  F00A         	goto	l1694
  5732   001484                     l7822:
  5733                           
  5734                           ; BSR set to: 0
  5735   001484  0E80               	movlw	128
  5736   001486  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  5737   001488  0E7F               	movlw	127
  5738   00148A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  5739   00148C  A0D8               	btfss	status,0,c
  5740   00148E  EF4B  F00A         	goto	u9581
  5741   001492  EF4D  F00A         	goto	u9580
  5742   001496                     u9581:
  5743   001496  EF5F  F00A         	goto	l7830
  5744   00149A                     u9580:
  5745   00149A                     
  5746                           ; BSR set to: 0
  5747   00149A  0EFF               	movlw	255
  5748   00149C  13BA               	iorwf	sinf@ux& (0+255),f,b
  5749   00149E  0EFF               	movlw	255
  5750   0014A0  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  5751   0014A2  0EFF               	movlw	255
  5752   0014A4  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  5753   0014A6  0E00               	movlw	0
  5754   0014A8  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  5755   0014AA                     
  5756                           ; BSR set to: 0
  5757   0014AA  C0BA  F0A4         	movff	sinf@ux,?_sinf
  5758   0014AE  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  5759   0014B2  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  5760   0014B6  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  5761   0014BA  EFD8  F00A         	goto	l1694
  5762   0014BE                     l7830:
  5763                           
  5764                           ; BSR set to: 0
  5765   0014BE  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  5766   0014C2  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  5767   0014C6  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  5768   0014CA  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  5769   0014CE  0EB6               	movlw	low sinf@y
  5770   0014D0  6F88               	movwf	___rem_pio2f@y& (0+255),b
  5771   0014D2  EC43  F011         	call	___rem_pio2f	;wreg free
  5772   0014D6  0100               	movlb	0	; () banked
  5773   0014D8  5184               	movf	?___rem_pio2f& (0+255),w,b
  5774   0014DA  0B03               	andlw	3
  5775   0014DC  6FB0               	movwf	sinf@n& (0+255),b
  5776   0014DE  EFC9  F00A         	goto	l7848
  5777   0014E2                     l7832:
  5778                           
  5779                           ; BSR set to: 0
  5780   0014E2  C0B6  F080         	movff	sinf@y,___flneg@f1
  5781   0014E6  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  5782   0014EA  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  5783   0014EE  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  5784   0014F2  EC23  F028         	call	___flneg	;wreg free
  5785   0014F6  C080  F0B6         	movff	?___flneg,sinf@y
  5786   0014FA  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  5787   0014FE  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  5788   001502  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  5789   001506                     l7834:
  5790   001506  C0B6  F064         	movff	sinf@y,___sindf@x
  5791   00150A  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  5792   00150E  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  5793   001512  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  5794   001516  ECEB  F017         	call	___sindf	;wreg free
  5795   00151A  C064  F0A4         	movff	?___sindf,?_sinf
  5796   00151E  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  5797   001522  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  5798   001526  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  5799   00152A  EFD8  F00A         	goto	l1694
  5800   00152E                     l7838:
  5801                           
  5802                           ; BSR set to: 0
  5803   00152E  C0B6  F064         	movff	sinf@y,___cosdf@x
  5804   001532  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5805   001536  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5806   00153A  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5807   00153E  EC18  F01B         	call	___cosdf	;wreg free
  5808   001542  C064  F0A4         	movff	?___cosdf,?_sinf
  5809   001546  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  5810   00154A  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  5811   00154E  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  5812   001552  EFD8  F00A         	goto	l1694
  5813   001556                     l7842:
  5814                           
  5815                           ; BSR set to: 0
  5816   001556  C0B6  F064         	movff	sinf@y,___cosdf@x
  5817   00155A  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  5818   00155E  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  5819   001562  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  5820   001566  EC18  F01B         	call	___cosdf	;wreg free
  5821   00156A  C064  F080         	movff	?___cosdf,___flneg@f1
  5822   00156E  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  5823   001572  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  5824   001576  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  5825   00157A  EC23  F028         	call	___flneg	;wreg free
  5826   00157E  C080  F0A4         	movff	?___flneg,?_sinf
  5827   001582  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  5828   001586  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  5829   00158A  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  5830   00158E  EFD8  F00A         	goto	l1694
  5831   001592                     l7848:
  5832                           
  5833                           ; BSR set to: 0
  5834   001592  51B0               	movf	sinf@n& (0+255),w,b
  5835                           
  5836                           ; Switch size 1, requested type "simple"
  5837                           ; Number of cases is 3, Range of values is 0 to 2
  5838                           ; switch strategies available:
  5839                           ; Name         Instructions Cycles
  5840                           ; simple_byte           10     6 (average)
  5841                           ;	Chosen strategy is simple_byte
  5842   001594  0A00               	xorlw	0	; case 0
  5843   001596  B4D8               	btfsc	status,2,c
  5844   001598  EF83  F00A         	goto	l7834
  5845   00159C  0A01               	xorlw	1	; case 1
  5846   00159E  B4D8               	btfsc	status,2,c
  5847   0015A0  EF97  F00A         	goto	l7838
  5848   0015A4  0A03               	xorlw	3	; case 2
  5849   0015A6  B4D8               	btfsc	status,2,c
  5850   0015A8  EF71  F00A         	goto	l7832
  5851   0015AC  EFAB  F00A         	goto	l7842
  5852   0015B0                     l1694:
  5853   0015B0  0012               	return		;funcret
  5854   0015B2                     __end_of_sinf:
  5855                           	callstack 0
  5856                           
  5857 ;; *************** function ___sindf *****************
  5858 ;; Defined at:
  5859 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  x               4    4[BANK0 ] float 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  z               4   32[BANK0 ] float 
  5864 ;;  s               4   28[BANK0 ] float 
  5865 ;;  w               4   12[BANK0 ] float 
  5866 ;;  r               4    8[BANK0 ] float 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  4    4[BANK0 ] float 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;Total ram usage:       32 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 2
  5883 ;; This function calls:
  5884 ;;		___fladd
  5885 ;;		___flmul
  5886 ;; This function is called by:
  5887 ;;		_sinf
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text18
  5892   002FD6                     __ptext18:
  5893                           	callstack 0
  5894   002FD6                     ___sindf:
  5895                           	callstack 26
  5896   002FD6  C064  F014         	movff	___sindf@x,___flmul@b
  5897   002FDA  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  5898   002FDE  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  5899   002FE2  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  5900   002FE6  C064  F018         	movff	___sindf@x,___flmul@a
  5901   002FEA  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  5902   002FEE  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  5903   002FF2  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  5904   002FF6  EC3A  F00D         	call	___flmul	;wreg free
  5905   002FFA  C014  F080         	movff	?___flmul,___sindf@z
  5906   002FFE  C015  F081         	movff	?___flmul+1,___sindf@z+1
  5907   003002  C016  F082         	movff	?___flmul+2,___sindf@z+2
  5908   003006  C017  F083         	movff	?___flmul+3,___sindf@z+3
  5909   00300A  C080  F014         	movff	___sindf@z,___flmul@b
  5910   00300E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5911   003012  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5912   003016  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5913   00301A  C080  F018         	movff	___sindf@z,___flmul@a
  5914   00301E  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  5915   003022  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  5916   003026  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  5917   00302A  EC3A  F00D         	call	___flmul	;wreg free
  5918   00302E  C014  F06C         	movff	?___flmul,___sindf@w
  5919   003032  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  5920   003036  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  5921   00303A  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  5922   00303E  0E3C               	movlw	60
  5923   003040  6E18               	movwf	___flmul@a^0,c
  5924   003042  0E6C               	movlw	108
  5925   003044  6E19               	movwf	(___flmul@a+1)^0,c
  5926   003046  0E36               	movlw	54
  5927   003048  6E1A               	movwf	(___flmul@a+2)^0,c
  5928   00304A  0E36               	movlw	54
  5929   00304C  6E1B               	movwf	(___flmul@a+3)^0,c
  5930   00304E  C080  F014         	movff	___sindf@z,___flmul@b
  5931   003052  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5932   003056  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5933   00305A  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5934   00305E  EC3A  F00D         	call	___flmul	;wreg free
  5935   003062  C014  F046         	movff	?___flmul,___fladd@b
  5936   003066  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5937   00306A  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5938   00306E  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5939   003072  0ECF               	movlw	207
  5940   003074  6E4A               	movwf	___fladd@a^0,c
  5941   003076  0E07               	movlw	7
  5942   003078  6E4B               	movwf	(___fladd@a+1)^0,c
  5943   00307A  0E50               	movlw	80
  5944   00307C  6E4C               	movwf	(___fladd@a+2)^0,c
  5945   00307E  0EB9               	movlw	185
  5946   003080  6E4D               	movwf	(___fladd@a+3)^0,c
  5947   003082  ECD9  F00A         	call	___fladd	;wreg free
  5948   003086  C046  F068         	movff	?___fladd,___sindf@r
  5949   00308A  C047  F069         	movff	?___fladd+1,___sindf@r+1
  5950   00308E  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  5951   003092  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  5952   003096  C080  F014         	movff	___sindf@z,___flmul@b
  5953   00309A  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5954   00309E  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5955   0030A2  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5956   0030A6  C064  F018         	movff	___sindf@x,___flmul@a
  5957   0030AA  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  5958   0030AE  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  5959   0030B2  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  5960   0030B6  EC3A  F00D         	call	___flmul	;wreg free
  5961   0030BA  C014  F07C         	movff	?___flmul,___sindf@s
  5962   0030BE  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  5963   0030C2  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  5964   0030C6  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  5965   0030CA  0EAB               	movlw	171
  5966   0030CC  6E4A               	movwf	___fladd@a^0,c
  5967   0030CE  0EAA               	movlw	170
  5968   0030D0  6E4B               	movwf	(___fladd@a+1)^0,c
  5969   0030D2  0E2A               	movlw	42
  5970   0030D4  6E4C               	movwf	(___fladd@a+2)^0,c
  5971   0030D6  0EBE               	movlw	190
  5972   0030D8  6E4D               	movwf	(___fladd@a+3)^0,c
  5973   0030DA  0E84               	movlw	132
  5974   0030DC  6E18               	movwf	___flmul@a^0,c
  5975   0030DE  0E88               	movlw	136
  5976   0030E0  6E19               	movwf	(___flmul@a+1)^0,c
  5977   0030E2  0E08               	movlw	8
  5978   0030E4  6E1A               	movwf	(___flmul@a+2)^0,c
  5979   0030E6  0E3C               	movlw	60
  5980   0030E8  6E1B               	movwf	(___flmul@a+3)^0,c
  5981   0030EA  C080  F014         	movff	___sindf@z,___flmul@b
  5982   0030EE  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  5983   0030F2  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  5984   0030F6  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  5985   0030FA  EC3A  F00D         	call	___flmul	;wreg free
  5986   0030FE  C014  F046         	movff	?___flmul,___fladd@b
  5987   003102  C015  F047         	movff	?___flmul+1,___fladd@b+1
  5988   003106  C016  F048         	movff	?___flmul+2,___fladd@b+2
  5989   00310A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  5990   00310E  ECD9  F00A         	call	___fladd	;wreg free
  5991   003112  C046  F070         	movff	?___fladd,___sindf$4532
  5992   003116  C047  F071         	movff	?___fladd+1,___sindf$4532+1
  5993   00311A  C048  F072         	movff	?___fladd+2,___sindf$4532+2
  5994   00311E  C049  F073         	movff	?___fladd+3,___sindf$4532+3
  5995   003122  C06C  F018         	movff	___sindf@w,___flmul@a
  5996   003126  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  5997   00312A  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  5998   00312E  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  5999   003132  C07C  F014         	movff	___sindf@s,___flmul@b
  6000   003136  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  6001   00313A  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  6002   00313E  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  6003   003142  EC3A  F00D         	call	___flmul	;wreg free
  6004   003146  C014  F074         	movff	?___flmul,___sindf$4533
  6005   00314A  C015  F075         	movff	?___flmul+1,___sindf$4533+1
  6006   00314E  C016  F076         	movff	?___flmul+2,___sindf$4533+2
  6007   003152  C017  F077         	movff	?___flmul+3,___sindf$4533+3
  6008   003156  C064  F04A         	movff	___sindf@x,___fladd@a
  6009   00315A  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  6010   00315E  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  6011   003162  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  6012   003166  C07C  F018         	movff	___sindf@s,___flmul@a
  6013   00316A  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  6014   00316E  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  6015   003172  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  6016   003176  C070  F014         	movff	___sindf$4532,___flmul@b
  6017   00317A  C071  F015         	movff	___sindf$4532+1,___flmul@b+1
  6018   00317E  C072  F016         	movff	___sindf$4532+2,___flmul@b+2
  6019   003182  C073  F017         	movff	___sindf$4532+3,___flmul@b+3
  6020   003186  EC3A  F00D         	call	___flmul	;wreg free
  6021   00318A  C014  F046         	movff	?___flmul,___fladd@b
  6022   00318E  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6023   003192  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6024   003196  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6025   00319A  ECD9  F00A         	call	___fladd	;wreg free
  6026   00319E  C046  F078         	movff	?___fladd,___sindf$4534
  6027   0031A2  C047  F079         	movff	?___fladd+1,___sindf$4534+1
  6028   0031A6  C048  F07A         	movff	?___fladd+2,___sindf$4534+2
  6029   0031AA  C049  F07B         	movff	?___fladd+3,___sindf$4534+3
  6030   0031AE  C078  F046         	movff	___sindf$4534,___fladd@b
  6031   0031B2  C079  F047         	movff	___sindf$4534+1,___fladd@b+1
  6032   0031B6  C07A  F048         	movff	___sindf$4534+2,___fladd@b+2
  6033   0031BA  C07B  F049         	movff	___sindf$4534+3,___fladd@b+3
  6034   0031BE  C068  F018         	movff	___sindf@r,___flmul@a
  6035   0031C2  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  6036   0031C6  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  6037   0031CA  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  6038   0031CE  C074  F014         	movff	___sindf$4533,___flmul@b
  6039   0031D2  C075  F015         	movff	___sindf$4533+1,___flmul@b+1
  6040   0031D6  C076  F016         	movff	___sindf$4533+2,___flmul@b+2
  6041   0031DA  C077  F017         	movff	___sindf$4533+3,___flmul@b+3
  6042   0031DE  EC3A  F00D         	call	___flmul	;wreg free
  6043   0031E2  C014  F04A         	movff	?___flmul,___fladd@a
  6044   0031E6  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6045   0031EA  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6046   0031EE  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6047   0031F2  ECD9  F00A         	call	___fladd	;wreg free
  6048   0031F6  C046  F064         	movff	?___fladd,?___sindf
  6049   0031FA  C047  F065         	movff	?___fladd+1,?___sindf+1
  6050   0031FE  C048  F066         	movff	?___fladd+2,?___sindf+2
  6051   003202  C049  F067         	movff	?___fladd+3,?___sindf+3
  6052   003206  0012               	return		;funcret
  6053   003208                     __end_of___sindf:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function ___rem_pio2f *****************
  6057 ;; Defined at:
  6058 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  x               4   36[BANK0 ] float 
  6061 ;;  y               1   40[BANK0 ] PTR 
  6062 ;;		 -> sinf@y(4), 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  n               4   64[BANK0 ] long 
  6065 ;;  t               4   60[BANK0 ] float 
  6066 ;;  fn              4   56[BANK0 ] float 
  6067 ;;  ux              4   52[BANK0 ] struct .
  6068 ;;  ty              4   43[BANK0 ] [1]
  6069 ;;  sign            1   51[BANK0 ] _Bool 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  2   36[BANK0 ] int 
  6072 ;; Registers used:
  6073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6079 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;Total ram usage:       32 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 3
  6086 ;; This function calls:
  6087 ;;		___fladd
  6088 ;;		___flmul
  6089 ;;		___flneg
  6090 ;;		___flsub
  6091 ;;		___fltol
  6092 ;;		___xxtofl
  6093 ;;		_fabsf
  6094 ;; This function is called by:
  6095 ;;		_sinf
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text19
  6100   002286                     __ptext19:
  6101                           	callstack 0
  6102   002286                     ___rem_pio2f:
  6103                           	callstack 25
  6104   002286  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  6105   00228A  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  6106   00228E  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  6107   002292  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  6108   002296  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  6109   00229A  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  6110   00229E  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  6111   0022A2  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  6112   0022A6  0100               	movlb	0	; () banked
  6113   0022A8  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  6114   0022AA  EF59  F011         	goto	u9311
  6115   0022AE  EF5C  F011         	goto	u9310
  6116   0022B2                     u9311:
  6117   0022B2  0E01               	movlw	1
  6118   0022B4  EF5D  F011         	goto	u9320
  6119   0022B8                     u9310:
  6120   0022B8  0E00               	movlw	0
  6121   0022BA                     u9320:
  6122   0022BA  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  6123   0022BC                     
  6124                           ; BSR set to: 0
  6125   0022BC  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  6126   0022BE                     
  6127                           ; BSR set to: 0
  6128   0022BE  0EDB               	movlw	219
  6129   0022C0  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  6130   0022C2  0E0F               	movlw	15
  6131   0022C4  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  6132   0022C6  0EC9               	movlw	201
  6133   0022C8  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  6134   0022CA  0E4D               	movlw	77
  6135   0022CC  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  6136   0022CE  B0D8               	btfsc	status,0,c
  6137   0022D0  EF6C  F011         	goto	u9331
  6138   0022D4  EF6E  F011         	goto	u9330
  6139   0022D8                     u9331:
  6140   0022D8  EF5A  F012         	goto	l7688
  6141   0022DC                     u9330:
  6142   0022DC                     
  6143                           ; BSR set to: 0
  6144   0022DC  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6145   0022E0  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6146   0022E4  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6147   0022E8  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6148   0022EC  EC92  F028         	call	_fabsf	;wreg free
  6149   0022F0  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6150   0022F4  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6151   0022F8  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6152   0022FC  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6153   002300  0E00               	movlw	0
  6154   002302  6E4A               	movwf	___fladd@a^0,c
  6155   002304  0E00               	movlw	0
  6156   002306  6E4B               	movwf	(___fladd@a+1)^0,c
  6157   002308  0E00               	movlw	0
  6158   00230A  6E4C               	movwf	(___fladd@a+2)^0,c
  6159   00230C  0E3F               	movlw	63
  6160   00230E  6E4D               	movwf	(___fladd@a+3)^0,c
  6161   002310  0E83               	movlw	131
  6162   002312  6E18               	movwf	___flmul@a^0,c
  6163   002314  0EF9               	movlw	249
  6164   002316  6E19               	movwf	(___flmul@a+1)^0,c
  6165   002318  0E22               	movlw	34
  6166   00231A  6E1A               	movwf	(___flmul@a+2)^0,c
  6167   00231C  0E3F               	movlw	63
  6168   00231E  6E1B               	movwf	(___flmul@a+3)^0,c
  6169   002320  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6170   002324  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6171   002328  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6172   00232C  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6173   002330  EC3A  F00D         	call	___flmul	;wreg free
  6174   002334  C014  F046         	movff	?___flmul,___fladd@b
  6175   002338  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6176   00233C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6177   002340  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6178   002344  ECD9  F00A         	call	___fladd	;wreg free
  6179   002348  C046  F064         	movff	?___fladd,___fltol@f1
  6180   00234C  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6181   002350  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6182   002354  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6183   002358  EC16  F021         	call	___fltol	;wreg free
  6184   00235C  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6185   002360  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6186   002364  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6187   002368  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6188   00236C  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6189   002370  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6190   002374  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6191   002378  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6192   00237C  0E01               	movlw	1
  6193   00237E  EC17  F01C         	call	___xxtofl
  6194   002382  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6195   002386  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6196   00238A  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6197   00238E  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6198   002392  0EDA               	movlw	218
  6199   002394  6E18               	movwf	___flmul@a^0,c
  6200   002396  0E0F               	movlw	15
  6201   002398  6E19               	movwf	(___flmul@a+1)^0,c
  6202   00239A  0EC9               	movlw	201
  6203   00239C  6E1A               	movwf	(___flmul@a+2)^0,c
  6204   00239E  0E3F               	movlw	63
  6205   0023A0  6E1B               	movwf	(___flmul@a+3)^0,c
  6206   0023A2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6207   0023A6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6208   0023AA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6209   0023AE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6210   0023B2  EC3A  F00D         	call	___flmul	;wreg free
  6211   0023B6  C014  F068         	movff	?___flmul,___flsub@a
  6212   0023BA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6213   0023BE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6214   0023C2  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6215   0023C6  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6216   0023CA  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6217   0023CE  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6218   0023D2  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6219   0023D6  EC9B  F027         	call	___flsub	;wreg free
  6220   0023DA  C064  F08F         	movff	?___flsub,___rem_pio2f$4531
  6221   0023DE  C065  F090         	movff	?___flsub+1,___rem_pio2f$4531+1
  6222   0023E2  C066  F091         	movff	?___flsub+2,___rem_pio2f$4531+2
  6223   0023E6  C067  F092         	movff	?___flsub+3,___rem_pio2f$4531+3
  6224   0023EA  C08F  F064         	movff	___rem_pio2f$4531,___flsub@b
  6225   0023EE  C090  F065         	movff	___rem_pio2f$4531+1,___flsub@b+1
  6226   0023F2  C091  F066         	movff	___rem_pio2f$4531+2,___flsub@b+2
  6227   0023F6  C092  F067         	movff	___rem_pio2f$4531+3,___flsub@b+3
  6228   0023FA  0EA3               	movlw	163
  6229   0023FC  6E18               	movwf	___flmul@a^0,c
  6230   0023FE  0E85               	movlw	133
  6231   002400  6E19               	movwf	(___flmul@a+1)^0,c
  6232   002402  0E88               	movlw	136
  6233   002404  6E1A               	movwf	(___flmul@a+2)^0,c
  6234   002406  0E32               	movlw	50
  6235   002408  6E1B               	movwf	(___flmul@a+3)^0,c
  6236   00240A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6237   00240E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6238   002412  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6239   002416  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6240   00241A  EC3A  F00D         	call	___flmul	;wreg free
  6241   00241E  C014  F068         	movff	?___flmul,___flsub@a
  6242   002422  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6243   002426  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6244   00242A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6245   00242E  EC9B  F027         	call	___flsub	;wreg free
  6246   002432  0100               	movlb	0	; () banked
  6247   002434  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6248   002436  6ED9               	movwf	fsr2l,c
  6249   002438  6ADA               	clrf	fsr2h,c
  6250   00243A  C064  FFDE         	movff	?___flsub,postinc2
  6251   00243E  C065  FFDE         	movff	?___flsub+1,postinc2
  6252   002442  C066  FFDE         	movff	?___flsub+2,postinc2
  6253   002446  C067  FFDE         	movff	?___flsub+3,postinc2
  6254   00244A                     
  6255                           ; BSR set to: 0
  6256   00244A  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6257   00244C  B4D8               	btfsc	status,2,c
  6258   00244E  EF2B  F012         	goto	u9341
  6259   002452  EF2D  F012         	goto	u9340
  6260   002456                     u9341:
  6261   002456  EF54  F012         	goto	l1744
  6262   00245A                     u9340:
  6263   00245A                     l7682:
  6264                           
  6265                           ; BSR set to: 0
  6266   00245A  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6267   00245C  6ED9               	movwf	fsr2l,c
  6268   00245E  6ADA               	clrf	fsr2h,c
  6269   002460  CFDE F080          	movff	postinc2,___flneg@f1
  6270   002464  CFDE F081          	movff	postinc2,___flneg@f1+1
  6271   002468  CFDE F082          	movff	postinc2,___flneg@f1+2
  6272   00246C  CFDE F083          	movff	postinc2,___flneg@f1+3
  6273   002470  EC23  F028         	call	___flneg	;wreg free
  6274   002474  0100               	movlb	0	; () banked
  6275   002476  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6276   002478  6ED9               	movwf	fsr2l,c
  6277   00247A  6ADA               	clrf	fsr2h,c
  6278   00247C  C080  FFDE         	movff	?___flneg,postinc2
  6279   002480  C081  FFDE         	movff	?___flneg+1,postinc2
  6280   002484  C082  FFDE         	movff	?___flneg+2,postinc2
  6281   002488  C083  FFDE         	movff	?___flneg+3,postinc2
  6282   00248C                     
  6283                           ; BSR set to: 0
  6284   00248C  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  6285   002490  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  6286   002494  1F89               	comf	??___rem_pio2f& (0+255),f,b
  6287   002496  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  6288   002498  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  6289   00249A  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  6290   00249C  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  6291   0024A0  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  6292   0024A4  EF23  F013         	goto	l1745
  6293   0024A8                     l1744:
  6294                           
  6295                           ; BSR set to: 0
  6296   0024A8  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  6297   0024AC  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  6298   0024B0  EF23  F013         	goto	l1745
  6299   0024B4                     l7688:
  6300                           
  6301                           ; BSR set to: 0
  6302   0024B4  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  6303   0024B8  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  6304   0024BC  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  6305   0024C0  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  6306   0024C4  EC92  F028         	call	_fabsf	;wreg free
  6307   0024C8  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  6308   0024CC  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  6309   0024D0  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  6310   0024D4  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  6311   0024D8  0E00               	movlw	0
  6312   0024DA  6E4A               	movwf	___fladd@a^0,c
  6313   0024DC  0E00               	movlw	0
  6314   0024DE  6E4B               	movwf	(___fladd@a+1)^0,c
  6315   0024E0  0E00               	movlw	0
  6316   0024E2  6E4C               	movwf	(___fladd@a+2)^0,c
  6317   0024E4  0E3F               	movlw	63
  6318   0024E6  6E4D               	movwf	(___fladd@a+3)^0,c
  6319   0024E8  0E83               	movlw	131
  6320   0024EA  6E18               	movwf	___flmul@a^0,c
  6321   0024EC  0EF9               	movlw	249
  6322   0024EE  6E19               	movwf	(___flmul@a+1)^0,c
  6323   0024F0  0E22               	movlw	34
  6324   0024F2  6E1A               	movwf	(___flmul@a+2)^0,c
  6325   0024F4  0E3F               	movlw	63
  6326   0024F6  6E1B               	movwf	(___flmul@a+3)^0,c
  6327   0024F8  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  6328   0024FC  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  6329   002500  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  6330   002504  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  6331   002508  EC3A  F00D         	call	___flmul	;wreg free
  6332   00250C  C014  F046         	movff	?___flmul,___fladd@b
  6333   002510  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6334   002514  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6335   002518  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6336   00251C  ECD9  F00A         	call	___fladd	;wreg free
  6337   002520  C046  F064         	movff	?___fladd,___fltol@f1
  6338   002524  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  6339   002528  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  6340   00252C  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  6341   002530  EC16  F021         	call	___fltol	;wreg free
  6342   002534  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  6343   002538  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  6344   00253C  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  6345   002540  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  6346   002544  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  6347   002548  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  6348   00254C  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  6349   002550  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  6350   002554  0E01               	movlw	1
  6351   002556  EC17  F01C         	call	___xxtofl
  6352   00255A  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  6353   00255E  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  6354   002562  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  6355   002566  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  6356   00256A  0EDA               	movlw	218
  6357   00256C  6E18               	movwf	___flmul@a^0,c
  6358   00256E  0E0F               	movlw	15
  6359   002570  6E19               	movwf	(___flmul@a+1)^0,c
  6360   002572  0EC9               	movlw	201
  6361   002574  6E1A               	movwf	(___flmul@a+2)^0,c
  6362   002576  0E3F               	movlw	63
  6363   002578  6E1B               	movwf	(___flmul@a+3)^0,c
  6364   00257A  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6365   00257E  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6366   002582  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6367   002586  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6368   00258A  EC3A  F00D         	call	___flmul	;wreg free
  6369   00258E  C014  F068         	movff	?___flmul,___flsub@a
  6370   002592  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6371   002596  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6372   00259A  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6373   00259E  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  6374   0025A2  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  6375   0025A6  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  6376   0025AA  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  6377   0025AE  EC9B  F027         	call	___flsub	;wreg free
  6378   0025B2  C064  F08F         	movff	?___flsub,___rem_pio2f$4531
  6379   0025B6  C065  F090         	movff	?___flsub+1,___rem_pio2f$4531+1
  6380   0025BA  C066  F091         	movff	?___flsub+2,___rem_pio2f$4531+2
  6381   0025BE  C067  F092         	movff	?___flsub+3,___rem_pio2f$4531+3
  6382   0025C2  C08F  F064         	movff	___rem_pio2f$4531,___flsub@b
  6383   0025C6  C090  F065         	movff	___rem_pio2f$4531+1,___flsub@b+1
  6384   0025CA  C091  F066         	movff	___rem_pio2f$4531+2,___flsub@b+2
  6385   0025CE  C092  F067         	movff	___rem_pio2f$4531+3,___flsub@b+3
  6386   0025D2  0EA3               	movlw	163
  6387   0025D4  6E18               	movwf	___flmul@a^0,c
  6388   0025D6  0E85               	movlw	133
  6389   0025D8  6E19               	movwf	(___flmul@a+1)^0,c
  6390   0025DA  0E88               	movlw	136
  6391   0025DC  6E1A               	movwf	(___flmul@a+2)^0,c
  6392   0025DE  0E32               	movlw	50
  6393   0025E0  6E1B               	movwf	(___flmul@a+3)^0,c
  6394   0025E2  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  6395   0025E6  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  6396   0025EA  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  6397   0025EE  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  6398   0025F2  EC3A  F00D         	call	___flmul	;wreg free
  6399   0025F6  C014  F068         	movff	?___flmul,___flsub@a
  6400   0025FA  C015  F069         	movff	?___flmul+1,___flsub@a+1
  6401   0025FE  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  6402   002602  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  6403   002606  EC9B  F027         	call	___flsub	;wreg free
  6404   00260A  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  6405   00260E  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  6406   002612  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  6407   002616  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  6408   00261A  0100               	movlb	0	; () banked
  6409   00261C  5188               	movf	___rem_pio2f@y& (0+255),w,b
  6410   00261E  6ED9               	movwf	fsr2l,c
  6411   002620  6ADA               	clrf	fsr2h,c
  6412   002622  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  6413   002626  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  6414   00262A  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  6415   00262E  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  6416   002632                     
  6417                           ; BSR set to: 0
  6418   002632  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  6419   002634  B4D8               	btfsc	status,2,c
  6420   002636  EF1F  F013         	goto	u9351
  6421   00263A  EF21  F013         	goto	u9350
  6422   00263E                     u9351:
  6423   00263E  EF54  F012         	goto	l1744
  6424   002642                     u9350:
  6425   002642  EF2D  F012         	goto	l7682
  6426   002646                     l1745:
  6427                           
  6428                           ; BSR set to: 0
  6429   002646  0012               	return		;funcret
  6430   002648                     __end_of___rem_pio2f:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _fabsf *****************
  6434 ;; Defined at:
  6435 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  x               4    5[COMRAM] float 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  u               4    9[COMRAM] struct .
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  4    5[COMRAM] float 
  6442 ;; Registers used:
  6443 ;;		status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        8 bytes
  6454 ;; Hardware stack levels used: 1
  6455 ;; Hardware stack levels required when called: 1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		___rem_pio2f
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text20
  6464   005124                     __ptext20:
  6465                           	callstack 0
  6466   005124                     _fabsf:
  6467                           	callstack 26
  6468   005124  C111  F00A         	movff	fabsf@F465,fabsf@u
  6469   005128  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  6470   00512C  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  6471   005130  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  6472   005134  C006  F00A         	movff	fabsf@x,fabsf@u
  6473   005138  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  6474   00513C  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  6475   005140  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  6476   005144  9E0D               	bcf	(fabsf@u+3)^0,7,c
  6477   005146  C00A  F006         	movff	fabsf@u,?_fabsf
  6478   00514A  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  6479   00514E  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  6480   005152  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  6481   005156  0012               	return		;funcret
  6482   005158                     __end_of_fabsf:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function ___cosdf *****************
  6486 ;; Defined at:
  6487 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  x               4    4[BANK0 ] float 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  z               4   28[BANK0 ] float 
  6492 ;;  w               4   24[BANK0 ] float 
  6493 ;;  r               4    8[BANK0 ] float 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  4    4[BANK0 ] float 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:       28 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 2
  6510 ;; This function calls:
  6511 ;;		___fladd
  6512 ;;		___flmul
  6513 ;; This function is called by:
  6514 ;;		_sinf
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text21
  6519   003630                     __ptext21:
  6520                           	callstack 0
  6521   003630                     ___cosdf:
  6522                           	callstack 26
  6523   003630  C064  F014         	movff	___cosdf@x,___flmul@b
  6524   003634  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  6525   003638  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  6526   00363C  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  6527   003640  C064  F018         	movff	___cosdf@x,___flmul@a
  6528   003644  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  6529   003648  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  6530   00364C  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  6531   003650  EC3A  F00D         	call	___flmul	;wreg free
  6532   003654  C014  F07C         	movff	?___flmul,___cosdf@z
  6533   003658  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  6534   00365C  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  6535   003660  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  6536   003664  C07C  F014         	movff	___cosdf@z,___flmul@b
  6537   003668  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6538   00366C  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6539   003670  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6540   003674  C07C  F018         	movff	___cosdf@z,___flmul@a
  6541   003678  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6542   00367C  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6543   003680  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6544   003684  EC3A  F00D         	call	___flmul	;wreg free
  6545   003688  C014  F078         	movff	?___flmul,___cosdf@w
  6546   00368C  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  6547   003690  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  6548   003694  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  6549   003698  0E17               	movlw	23
  6550   00369A  6E18               	movwf	___flmul@a^0,c
  6551   00369C  0E9A               	movlw	154
  6552   00369E  6E19               	movwf	(___flmul@a+1)^0,c
  6553   0036A0  0ECC               	movlw	204
  6554   0036A2  6E1A               	movwf	(___flmul@a+2)^0,c
  6555   0036A4  0E37               	movlw	55
  6556   0036A6  6E1B               	movwf	(___flmul@a+3)^0,c
  6557   0036A8  C07C  F014         	movff	___cosdf@z,___flmul@b
  6558   0036AC  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6559   0036B0  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6560   0036B4  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6561   0036B8  EC3A  F00D         	call	___flmul	;wreg free
  6562   0036BC  C014  F046         	movff	?___flmul,___fladd@b
  6563   0036C0  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6564   0036C4  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6565   0036C8  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6566   0036CC  0E3F               	movlw	63
  6567   0036CE  6E4A               	movwf	___fladd@a^0,c
  6568   0036D0  0E04               	movlw	4
  6569   0036D2  6E4B               	movwf	(___fladd@a+1)^0,c
  6570   0036D4  0EB6               	movlw	182
  6571   0036D6  6E4C               	movwf	(___fladd@a+2)^0,c
  6572   0036D8  0EBA               	movlw	186
  6573   0036DA  6E4D               	movwf	(___fladd@a+3)^0,c
  6574   0036DC  ECD9  F00A         	call	___fladd	;wreg free
  6575   0036E0  C046  F068         	movff	?___fladd,___cosdf@r
  6576   0036E4  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  6577   0036E8  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  6578   0036EC  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  6579   0036F0  0E00               	movlw	0
  6580   0036F2  6E4A               	movwf	___fladd@a^0,c
  6581   0036F4  0E00               	movlw	0
  6582   0036F6  6E4B               	movwf	(___fladd@a+1)^0,c
  6583   0036F8  0E80               	movlw	128
  6584   0036FA  6E4C               	movwf	(___fladd@a+2)^0,c
  6585   0036FC  0E3F               	movlw	63
  6586   0036FE  6E4D               	movwf	(___fladd@a+3)^0,c
  6587   003700  0E00               	movlw	0
  6588   003702  6E18               	movwf	___flmul@a^0,c
  6589   003704  0E00               	movlw	0
  6590   003706  6E19               	movwf	(___flmul@a+1)^0,c
  6591   003708  0E00               	movlw	0
  6592   00370A  6E1A               	movwf	(___flmul@a+2)^0,c
  6593   00370C  0EBF               	movlw	191
  6594   00370E  6E1B               	movwf	(___flmul@a+3)^0,c
  6595   003710  C07C  F014         	movff	___cosdf@z,___flmul@b
  6596   003714  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  6597   003718  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  6598   00371C  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  6599   003720  EC3A  F00D         	call	___flmul	;wreg free
  6600   003724  C014  F046         	movff	?___flmul,___fladd@b
  6601   003728  C015  F047         	movff	?___flmul+1,___fladd@b+1
  6602   00372C  C016  F048         	movff	?___flmul+2,___fladd@b+2
  6603   003730  C017  F049         	movff	?___flmul+3,___fladd@b+3
  6604   003734  ECD9  F00A         	call	___fladd	;wreg free
  6605   003738  C046  F06C         	movff	?___fladd,___cosdf$4528
  6606   00373C  C047  F06D         	movff	?___fladd+1,___cosdf$4528+1
  6607   003740  C048  F06E         	movff	?___fladd+2,___cosdf$4528+2
  6608   003744  C049  F06F         	movff	?___fladd+3,___cosdf$4528+3
  6609   003748  C07C  F018         	movff	___cosdf@z,___flmul@a
  6610   00374C  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  6611   003750  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  6612   003754  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  6613   003758  C078  F014         	movff	___cosdf@w,___flmul@b
  6614   00375C  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6615   003760  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6616   003764  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6617   003768  EC3A  F00D         	call	___flmul	;wreg free
  6618   00376C  C014  F070         	movff	?___flmul,___cosdf$4529
  6619   003770  C015  F071         	movff	?___flmul+1,___cosdf$4529+1
  6620   003774  C016  F072         	movff	?___flmul+2,___cosdf$4529+2
  6621   003778  C017  F073         	movff	?___flmul+3,___cosdf$4529+3
  6622   00377C  0E9F               	movlw	159
  6623   00377E  6E18               	movwf	___flmul@a^0,c
  6624   003780  0EAA               	movlw	170
  6625   003782  6E19               	movwf	(___flmul@a+1)^0,c
  6626   003784  0E2A               	movlw	42
  6627   003786  6E1A               	movwf	(___flmul@a+2)^0,c
  6628   003788  0E3D               	movlw	61
  6629   00378A  6E1B               	movwf	(___flmul@a+3)^0,c
  6630   00378C  C078  F014         	movff	___cosdf@w,___flmul@b
  6631   003790  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  6632   003794  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  6633   003798  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  6634   00379C  EC3A  F00D         	call	___flmul	;wreg free
  6635   0037A0  C014  F04A         	movff	?___flmul,___fladd@a
  6636   0037A4  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6637   0037A8  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6638   0037AC  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6639   0037B0  C06C  F046         	movff	___cosdf$4528,___fladd@b
  6640   0037B4  C06D  F047         	movff	___cosdf$4528+1,___fladd@b+1
  6641   0037B8  C06E  F048         	movff	___cosdf$4528+2,___fladd@b+2
  6642   0037BC  C06F  F049         	movff	___cosdf$4528+3,___fladd@b+3
  6643   0037C0  ECD9  F00A         	call	___fladd	;wreg free
  6644   0037C4  C046  F074         	movff	?___fladd,___cosdf$4530
  6645   0037C8  C047  F075         	movff	?___fladd+1,___cosdf$4530+1
  6646   0037CC  C048  F076         	movff	?___fladd+2,___cosdf$4530+2
  6647   0037D0  C049  F077         	movff	?___fladd+3,___cosdf$4530+3
  6648   0037D4  C074  F046         	movff	___cosdf$4530,___fladd@b
  6649   0037D8  C075  F047         	movff	___cosdf$4530+1,___fladd@b+1
  6650   0037DC  C076  F048         	movff	___cosdf$4530+2,___fladd@b+2
  6651   0037E0  C077  F049         	movff	___cosdf$4530+3,___fladd@b+3
  6652   0037E4  C068  F018         	movff	___cosdf@r,___flmul@a
  6653   0037E8  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  6654   0037EC  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  6655   0037F0  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  6656   0037F4  C070  F014         	movff	___cosdf$4529,___flmul@b
  6657   0037F8  C071  F015         	movff	___cosdf$4529+1,___flmul@b+1
  6658   0037FC  C072  F016         	movff	___cosdf$4529+2,___flmul@b+2
  6659   003800  C073  F017         	movff	___cosdf$4529+3,___flmul@b+3
  6660   003804  EC3A  F00D         	call	___flmul	;wreg free
  6661   003808  C014  F04A         	movff	?___flmul,___fladd@a
  6662   00380C  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  6663   003810  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  6664   003814  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  6665   003818  ECD9  F00A         	call	___fladd	;wreg free
  6666   00381C  C046  F064         	movff	?___fladd,?___cosdf
  6667   003820  C047  F065         	movff	?___fladd+1,?___cosdf+1
  6668   003824  C048  F066         	movff	?___fladd+2,?___cosdf+2
  6669   003828  C049  F067         	movff	?___fladd+3,?___cosdf+3
  6670   00382C  0012               	return		;funcret
  6671   00382E                     __end_of___cosdf:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function _printf *****************
  6675 ;; Defined at:
  6676 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  6679 ;;		 -> STR_28(5), STR_16(5), 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  ret             2    0        int 
  6682 ;;  ap              1   83[COMRAM] PTR void [1]
  6683 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2  110[BANK0 ] int 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6693 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;Total ram usage:        5 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; Hardware stack levels required when called: 8
  6700 ;; This function calls:
  6701 ;;		_vfprintf
  6702 ;; This function is called by:
  6703 ;;		_runDAC
  6704 ;;		_runUART
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text22
  6709   005200                     __ptext22:
  6710                           	callstack 0
  6711   005200                     _printf:
  6712                           	callstack 21
  6713   005200  0ED0               	movlw	low (?_printf+2)
  6714   005202  6E54               	movwf	printf@ap^0,c
  6715   005204  0E00               	movlw	0
  6716   005206  0100               	movlb	0	; () banked
  6717   005208  6FC7               	movwf	vfprintf@fp& (0+255),b
  6718   00520A  0E00               	movlw	0
  6719   00520C  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6720   00520E  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  6721   005212  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  6722   005216  0E54               	movlw	low printf@ap
  6723   005218  6FCB               	movwf	vfprintf@ap& (0+255),b
  6724   00521A  EC76  F027         	call	_vfprintf	;wreg free
  6725   00521E  0012               	return		;funcret
  6726   005220                     __end_of_printf:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _SPI_write *****************
  6730 ;; Defined at:
  6731 ;;		line 93 in file "DAC.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  data            1    wreg     unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  data            1    7[COMRAM] unsigned char 
  6736 ;;  LSB             1    6[COMRAM] unsigned char 
  6737 ;;  MSB             1    5[COMRAM] unsigned char 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6751 ;;Total ram usage:        3 bytes
  6752 ;; Hardware stack levels used: 1
  6753 ;; Hardware stack levels required when called: 1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_runDAC
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text23
  6762   005008                     __ptext23:
  6763                           	callstack 0
  6764   005008                     _SPI_write:
  6765                           	callstack 28
  6766                           
  6767                           ;incstack = 0
  6768                           ;SPI_write@data stored from wreg
  6769   005008  6E08               	movwf	SPI_write@data^0,c
  6770   00500A                     
  6771                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  6772   00500A  3808               	swapf	SPI_write@data^0,w,c
  6773   00500C  0B0F               	andlw	15
  6774   00500E  0930               	iorlw	48
  6775   005010  6E06               	movwf	SPI_write@MSB^0,c
  6776                           
  6777                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  6778   005012  3808               	swapf	SPI_write@data^0,w,c
  6779   005014  0BF0               	andlw	240
  6780   005016  6E07               	movwf	SPI_write@LSB^0,c
  6781   005018                     
  6782                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  6783   005018  968A               	bcf	138,3,c	;volatile
  6784   00501A                     
  6785                           ;DAC.c: 101:     SSP1BUF = MSB;
  6786   00501A  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  6787   00501E                     l245:
  6788   00501E  A69E               	btfss	3998,3,c	;volatile
  6789   005020  EF14  F028         	goto	u9441
  6790   005024  EF16  F028         	goto	u9440
  6791   005028                     u9441:
  6792   005028  EF0F  F028         	goto	l245
  6793   00502C                     u9440:
  6794   00502C                     
  6795                           ;DAC.c: 103:     SSP1IF = 0;
  6796   00502C  969E               	bcf	3998,3,c	;volatile
  6797                           
  6798                           ;DAC.c: 105:     SSP1BUF = LSB;
  6799   00502E  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  6800   005032                     l248:
  6801   005032  A69E               	btfss	3998,3,c	;volatile
  6802   005034  EF1E  F028         	goto	u9451
  6803   005038  EF20  F028         	goto	u9450
  6804   00503C                     u9451:
  6805   00503C  EF19  F028         	goto	l248
  6806   005040                     u9450:
  6807   005040                     
  6808                           ;DAC.c: 107:     SSP1IF = 0;
  6809   005040  969E               	bcf	3998,3,c	;volatile
  6810                           
  6811                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  6812   005042  868A               	bsf	138,3,c	;volatile
  6813   005044  0012               	return		;funcret
  6814   005046                     __end_of_SPI_write:
  6815                           	callstack 0
  6816                           
  6817 ;; *************** function _runADC *****************
  6818 ;; Defined at:
  6819 ;;		line 13 in file "ADC.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  text           17    0[BANK1 ] unsigned char [17]
  6824 ;;  voltage2        4   21[BANK1 ] float 
  6825 ;;  voltage1        4   17[BANK1 ] float 
  6826 ;;  pot2            2   27[BANK1 ] unsigned short 
  6827 ;;  pot1            2   25[BANK1 ] unsigned short 
  6828 ;;  keepState       1   29[BANK1 ] unsigned char 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      void 
  6831 ;; Registers used:
  6832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;Total ram usage:       32 bytes
  6843 ;; Hardware stack levels used: 1
  6844 ;; Hardware stack levels required when called: 9
  6845 ;; This function calls:
  6846 ;;		_LCD_ShowString
  6847 ;;		___fldiv
  6848 ;;		___flmul
  6849 ;;		___xxtofl
  6850 ;;		_sprintf
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text24
  6857   00341E                     __ptext24:
  6858                           	callstack 0
  6859   00341E                     _runADC:
  6860                           	callstack 21
  6861   00341E                     
  6862                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  6863   00341E  010F               	movlb	15	; () banked
  6864   003420  8B38               	bsf	56,5,b	;volatile
  6865                           
  6866                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  6867   003422  813C               	bsf	60,0,b	;volatile
  6868                           
  6869                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  6870   003424  8EC0               	bsf	192,7,c	;volatile
  6871   003426                     
  6872                           ; BSR set to: 15
  6873                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  6874   003426  50C0               	movf	192,w,c	;volatile
  6875   003428  0BF8               	andlw	-8
  6876   00342A  0906               	iorlw	6
  6877   00342C  6EC0               	movwf	192,c	;volatile
  6878                           
  6879                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  6880   00342E  50C0               	movf	192,w,c	;volatile
  6881   003430  0BC7               	andlw	-57
  6882   003432  0930               	iorlw	48
  6883   003434  6EC0               	movwf	192,c	;volatile
  6884   003436                     
  6885                           ; BSR set to: 15
  6886                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  6887   003436  80C2               	bsf	194,0,c	;volatile
  6888   003438                     
  6889                           ; BSR set to: 15
  6890                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  6891   003438  EE21  F09B         	lfsr	2,runADC@text
  6892   00343C  0E10               	movlw	16
  6893   00343E                     u10011:
  6894   00343E  6ADE               	clrf	postinc2,c
  6895   003440  06E8               	decf	wreg,f,c
  6896   003442  E2FD               	bc	u10011
  6897   003444                     
  6898                           ; BSR set to: 15
  6899                           ;ADC.c: 28: uint8_t keepState = 1;
  6900   003444  0E01               	movlw	1
  6901   003446  0101               	movlb	1	; () banked
  6902   003448  6FB8               	movwf	runADC@keepState& (0+255),b
  6903                           
  6904                           ;ADC.c: 30: while(keepState){
  6905   00344A  EF0D  F01B         	goto	l462
  6906   00344E                     l8126:
  6907                           
  6908                           ; BSR set to: 1
  6909                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  6910   00344E  50C2               	movf	194,w,c	;volatile
  6911   003450  0B83               	andlw	-125
  6912   003452  0914               	iorlw	20
  6913   003454  6EC2               	movwf	194,c	;volatile
  6914   003456                     
  6915                           ; BSR set to: 1
  6916                           ;ADC.c: 33:     GODONE = 1;
  6917   003456  82C2               	bsf	4034,1,c	;volatile
  6918   003458                     l464:
  6919   003458  B2C2               	btfsc	4034,1,c	;volatile
  6920   00345A  EF31  F01A         	goto	u10021
  6921   00345E  EF33  F01A         	goto	u10020
  6922   003462                     u10021:
  6923   003462  EF2C  F01A         	goto	l464
  6924   003466                     u10020:
  6925   003466                     
  6926                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  6927   003466  50C3               	movf	195,w,c	;volatile
  6928   003468  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  6929   00346C  0100               	movlb	0	; () banked
  6930   00346E  6BE8               	clrf	(??_runADC+1)& (0+255),b
  6931   003470  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  6932   003474  6BE7               	clrf	??_runADC& (0+255),b
  6933   003476  11E7               	iorwf	??_runADC& (0+255),w,b
  6934   003478  0101               	movlb	1	; () banked
  6935   00347A  6FB4               	movwf	runADC@pot1& (0+255),b
  6936   00347C  0100               	movlb	0	; () banked
  6937   00347E  51E8               	movf	(??_runADC+1)& (0+255),w,b
  6938   003480  0101               	movlb	1	; () banked
  6939   003482  6FB5               	movwf	(runADC@pot1+1)& (0+255),b
  6940   003484                     
  6941                           ; BSR set to: 1
  6942                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  6943   003484  0E00               	movlw	0
  6944   003486  6E31               	movwf	___fldiv@a^0,c
  6945   003488  0EC0               	movlw	192
  6946   00348A  6E32               	movwf	(___fldiv@a+1)^0,c
  6947   00348C  0E7F               	movlw	127
  6948   00348E  6E33               	movwf	(___fldiv@a+2)^0,c
  6949   003490  0E44               	movlw	68
  6950   003492  6E34               	movwf	(___fldiv@a+3)^0,c
  6951   003494  C1B4  F006         	movff	runADC@pot1,___xxtofl@val
  6952   003498  C1B5  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  6953   00349C  6A08               	clrf	(___xxtofl@val+2)^0,c
  6954   00349E  6A09               	clrf	(___xxtofl@val+3)^0,c
  6955   0034A0  0E00               	movlw	0
  6956   0034A2  EC17  F01C         	call	___xxtofl
  6957   0034A6  C006  F02D         	movff	?___xxtofl,___fldiv@b
  6958   0034AA  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  6959   0034AE  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  6960   0034B2  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  6961   0034B6  EC24  F013         	call	___fldiv	;wreg free
  6962   0034BA  C02D  F014         	movff	?___fldiv,___flmul@b
  6963   0034BE  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  6964   0034C2  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  6965   0034C6  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  6966   0034CA  0E33               	movlw	51
  6967   0034CC  6E18               	movwf	___flmul@a^0,c
  6968   0034CE  0E33               	movlw	51
  6969   0034D0  6E19               	movwf	(___flmul@a+1)^0,c
  6970   0034D2  0E53               	movlw	83
  6971   0034D4  6E1A               	movwf	(___flmul@a+2)^0,c
  6972   0034D6  0E40               	movlw	64
  6973   0034D8  6E1B               	movwf	(___flmul@a+3)^0,c
  6974   0034DA  EC3A  F00D         	call	___flmul	;wreg free
  6975   0034DE  C014  F1AC         	movff	?___flmul,runADC@voltage1
  6976   0034E2  C015  F1AD         	movff	?___flmul+1,runADC@voltage1+1
  6977   0034E6  C016  F1AE         	movff	?___flmul+2,runADC@voltage1+2
  6978   0034EA  C017  F1AF         	movff	?___flmul+3,runADC@voltage1+3
  6979   0034EE                     
  6980                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  6981   0034EE  50C2               	movf	194,w,c	;volatile
  6982   0034F0  0B83               	andlw	-125
  6983   0034F2  0910               	iorlw	16
  6984   0034F4  6EC2               	movwf	194,c	;volatile
  6985   0034F6                     
  6986                           ;ADC.c: 40:     GODONE = 1;
  6987   0034F6  82C2               	bsf	4034,1,c	;volatile
  6988   0034F8                     l467:
  6989   0034F8  B2C2               	btfsc	4034,1,c	;volatile
  6990   0034FA  EF81  F01A         	goto	u10031
  6991   0034FE  EF83  F01A         	goto	u10030
  6992   003502                     u10031:
  6993   003502  EF7C  F01A         	goto	l467
  6994   003506                     u10030:
  6995   003506                     
  6996                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  6997   003506  50C3               	movf	195,w,c	;volatile
  6998   003508  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  6999   00350C  0100               	movlb	0	; () banked
  7000   00350E  6BE8               	clrf	(??_runADC+1)& (0+255),b
  7001   003510  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  7002   003514  6BE7               	clrf	??_runADC& (0+255),b
  7003   003516  11E7               	iorwf	??_runADC& (0+255),w,b
  7004   003518  0101               	movlb	1	; () banked
  7005   00351A  6FB6               	movwf	runADC@pot2& (0+255),b
  7006   00351C  0100               	movlb	0	; () banked
  7007   00351E  51E8               	movf	(??_runADC+1)& (0+255),w,b
  7008   003520  0101               	movlb	1	; () banked
  7009   003522  6FB7               	movwf	(runADC@pot2+1)& (0+255),b
  7010   003524                     
  7011                           ; BSR set to: 1
  7012                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  7013   003524  0E00               	movlw	0
  7014   003526  6E31               	movwf	___fldiv@a^0,c
  7015   003528  0EC0               	movlw	192
  7016   00352A  6E32               	movwf	(___fldiv@a+1)^0,c
  7017   00352C  0E7F               	movlw	127
  7018   00352E  6E33               	movwf	(___fldiv@a+2)^0,c
  7019   003530  0E44               	movlw	68
  7020   003532  6E34               	movwf	(___fldiv@a+3)^0,c
  7021   003534  C1B6  F006         	movff	runADC@pot2,___xxtofl@val
  7022   003538  C1B7  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  7023   00353C  6A08               	clrf	(___xxtofl@val+2)^0,c
  7024   00353E  6A09               	clrf	(___xxtofl@val+3)^0,c
  7025   003540  0E00               	movlw	0
  7026   003542  EC17  F01C         	call	___xxtofl
  7027   003546  C006  F02D         	movff	?___xxtofl,___fldiv@b
  7028   00354A  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  7029   00354E  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  7030   003552  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  7031   003556  EC24  F013         	call	___fldiv	;wreg free
  7032   00355A  C02D  F014         	movff	?___fldiv,___flmul@b
  7033   00355E  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  7034   003562  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  7035   003566  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  7036   00356A  0E33               	movlw	51
  7037   00356C  6E18               	movwf	___flmul@a^0,c
  7038   00356E  0E33               	movlw	51
  7039   003570  6E19               	movwf	(___flmul@a+1)^0,c
  7040   003572  0E53               	movlw	83
  7041   003574  6E1A               	movwf	(___flmul@a+2)^0,c
  7042   003576  0E40               	movlw	64
  7043   003578  6E1B               	movwf	(___flmul@a+3)^0,c
  7044   00357A  EC3A  F00D         	call	___flmul	;wreg free
  7045   00357E  C014  F1B0         	movff	?___flmul,runADC@voltage2
  7046   003582  C015  F1B1         	movff	?___flmul+1,runADC@voltage2+1
  7047   003586  C016  F1B2         	movff	?___flmul+2,runADC@voltage2+2
  7048   00358A  C017  F1B3         	movff	?___flmul+3,runADC@voltage2+3
  7049   00358E                     
  7050                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  7051   00358E  0E9B               	movlw	low runADC@text
  7052   003590  0100               	movlb	0	; () banked
  7053   003592  6FCE               	movwf	sprintf@s& (0+255),b
  7054   003594  0E01               	movlw	high runADC@text
  7055   003596  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7056   003598  0ECE               	movlw	low STR_27
  7057   00359A  6FD0               	movwf	sprintf@fmt& (0+255),b
  7058   00359C  0EFE               	movlw	high STR_27
  7059   00359E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7060   0035A0  C1AC  F0D2         	movff	runADC@voltage1,?_sprintf+4
  7061   0035A4  C1AD  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  7062   0035A8  C1AE  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  7063   0035AC  C1AF  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  7064   0035B0  C1B0  F0D6         	movff	runADC@voltage2,?_sprintf+8
  7065   0035B4  C1B1  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  7066   0035B8  C1B2  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  7067   0035BC  C1B3  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  7068   0035C0  ECBF  F027         	call	_sprintf	;wreg free
  7069   0035C4                     
  7070                           ;ADC.c: 46:     LCD_ShowString(2, text);
  7071   0035C4  0E9B               	movlw	low runADC@text
  7072   0035C6  6E07               	movwf	LCD_ShowString@textData^0,c
  7073   0035C8  0E01               	movlw	high runADC@text
  7074   0035CA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7075   0035CC  0E02               	movlw	2
  7076   0035CE  EC47  F024         	call	_LCD_ShowString
  7077   0035D2                     
  7078                           ;ADC.c: 48:     if(PORTAbits.RA2){
  7079   0035D2  A480               	btfss	128,2,c	;volatile
  7080   0035D4  EFEE  F01A         	goto	u10041
  7081   0035D8  EFF0  F01A         	goto	u10040
  7082   0035DC                     u10041:
  7083   0035DC  EF0D  F01B         	goto	l462
  7084   0035E0                     u10040:
  7085   0035E0                     
  7086                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  7087   0035E0  0E03               	movlw	3
  7088   0035E2  0100               	movlb	0	; () banked
  7089   0035E4  6FE8               	movwf	(??_runADC+1)& (0+255),b
  7090   0035E6  0E08               	movlw	8
  7091   0035E8  6FE7               	movwf	??_runADC& (0+255),b
  7092   0035EA  0E77               	movlw	119
  7093   0035EC                     u10497:
  7094   0035EC  2EE8               	decfsz	wreg,f,c
  7095   0035EE  D7FE               	bra	u10497
  7096   0035F0  2FE7               	decfsz	??_runADC& (0+255),f,b
  7097   0035F2  D7FC               	bra	u10497
  7098   0035F4  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  7099   0035F6  D7FA               	bra	u10497
  7100   0035F8                     
  7101                           ;ADC.c: 50:         if(PORTAbits.RA2){
  7102   0035F8  A480               	btfss	128,2,c	;volatile
  7103   0035FA  EF01  F01B         	goto	u10051
  7104   0035FE  EF03  F01B         	goto	u10050
  7105   003602                     u10051:
  7106   003602  EF0D  F01B         	goto	l462
  7107   003606                     u10050:
  7108   003606                     l472:
  7109   003606  B480               	btfsc	128,2,c	;volatile
  7110   003608  EF08  F01B         	goto	u10061
  7111   00360C  EF0A  F01B         	goto	u10060
  7112   003610                     u10061:
  7113   003610  EF03  F01B         	goto	l472
  7114   003614                     u10060:
  7115   003614                     
  7116                           ;ADC.c: 52:             keepState = 0;
  7117   003614  0E00               	movlw	0
  7118   003616  0101               	movlb	1	; () banked
  7119   003618  6FB8               	movwf	runADC@keepState& (0+255),b
  7120   00361A                     l462:
  7121                           
  7122                           ;ADC.c: 30: while(keepState){
  7123   00361A  0101               	movlb	1	; () banked
  7124   00361C  51B8               	movf	runADC@keepState& (0+255),w,b
  7125   00361E  A4D8               	btfss	status,2,c
  7126   003620  EF14  F01B         	goto	u10071
  7127   003624  EF16  F01B         	goto	u10070
  7128   003628                     u10071:
  7129   003628  EF27  F01A         	goto	l8126
  7130   00362C                     u10070:
  7131   00362C                     
  7132                           ; BSR set to: 1
  7133                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  7134   00362C  90C2               	bcf	194,0,c	;volatile
  7135   00362E                     
  7136                           ; BSR set to: 1
  7137   00362E  0012               	return		;funcret
  7138   003630                     __end_of_runADC:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function ___xxtofl *****************
  7142 ;; Defined at:
  7143 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  sign            1    wreg     unsigned char 
  7146 ;;  val             4    5[COMRAM] long 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  sign            1   13[COMRAM] unsigned char 
  7149 ;;  arg             4   15[COMRAM] unsigned long 
  7150 ;;  exp             1   14[COMRAM] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  4    5[COMRAM] unsigned char 
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;Total ram usage:       14 bytes
  7165 ;; Hardware stack levels used: 1
  7166 ;; Hardware stack levels required when called: 1
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_runDAC
  7171 ;;		_runADC
  7172 ;;		___rem_pio2f
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text25
  7177   00382E                     __ptext25:
  7178                           	callstack 0
  7179   00382E                     ___xxtofl:
  7180                           	callstack 26
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;incstack = 0
  7184                           ;___xxtofl@sign stored from wreg
  7185   00382E  6E0E               	movwf	___xxtofl@sign^0,c
  7186   003830  500E               	movf	___xxtofl@sign^0,w,c
  7187   003832  B4D8               	btfsc	status,2,c
  7188   003834  EF1E  F01C         	goto	u9031
  7189   003838  EF20  F01C         	goto	u9030
  7190   00383C                     u9031:
  7191   00383C  EF42  F01C         	goto	l1365
  7192   003840                     u9030:
  7193   003840  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7194   003842  EF27  F01C         	goto	u9040
  7195   003846  EF25  F01C         	goto	u9041
  7196   00384A                     u9041:
  7197   00384A  EF42  F01C         	goto	l1365
  7198   00384E                     u9040:
  7199   00384E  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  7200   003852  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  7201   003856  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  7202   00385A  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  7203   00385E  1E0A               	comf	??___xxtofl^0,f,c
  7204   003860  1E0B               	comf	(??___xxtofl+1)^0,f,c
  7205   003862  1E0C               	comf	(??___xxtofl+2)^0,f,c
  7206   003864  1E0D               	comf	(??___xxtofl+3)^0,f,c
  7207   003866  2A0A               	incf	??___xxtofl^0,f,c
  7208   003868  0E00               	movlw	0
  7209   00386A  220B               	addwfc	(??___xxtofl+1)^0,f,c
  7210   00386C  220C               	addwfc	(??___xxtofl+2)^0,f,c
  7211   00386E  220D               	addwfc	(??___xxtofl+3)^0,f,c
  7212   003870  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  7213   003874  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  7214   003878  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  7215   00387C  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  7216   003880  EF4A  F01C         	goto	l7430
  7217   003884                     l1365:
  7218   003884  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  7219   003888  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7220   00388C  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7221   003890  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7222   003894                     l7430:
  7223   003894  5006               	movf	___xxtofl@val^0,w,c
  7224   003896  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  7225   003898  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  7226   00389A  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  7227   00389C  A4D8               	btfss	status,2,c
  7228   00389E  EF53  F01C         	goto	u9051
  7229   0038A2  EF55  F01C         	goto	u9050
  7230   0038A6                     u9051:
  7231   0038A6  EF5F  F01C         	goto	l7436
  7232   0038AA                     u9050:
  7233   0038AA  0E00               	movlw	0
  7234   0038AC  6E06               	movwf	?___xxtofl^0,c
  7235   0038AE  0E00               	movlw	0
  7236   0038B0  6E07               	movwf	(?___xxtofl+1)^0,c
  7237   0038B2  0E00               	movlw	0
  7238   0038B4  6E08               	movwf	(?___xxtofl+2)^0,c
  7239   0038B6  0E00               	movlw	0
  7240   0038B8  6E09               	movwf	(?___xxtofl+3)^0,c
  7241   0038BA  EFF0  F01C         	goto	l1368
  7242   0038BE                     l7436:
  7243   0038BE  0E96               	movlw	150
  7244   0038C0  6E0F               	movwf	___xxtofl@exp^0,c
  7245   0038C2  EF69  F01C         	goto	l7440
  7246   0038C6                     l7438:
  7247   0038C6  2A0F               	incf	___xxtofl@exp^0,f,c
  7248   0038C8  90D8               	bcf	status,0,c
  7249   0038CA  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7250   0038CC  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7251   0038CE  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7252   0038D0  3210               	rrcf	___xxtofl@arg^0,f,c
  7253   0038D2                     l7440:
  7254   0038D2  0E00               	movlw	0
  7255   0038D4  1410               	andwf	___xxtofl@arg^0,w,c
  7256   0038D6  6E0A               	movwf	??___xxtofl^0,c
  7257   0038D8  0E00               	movlw	0
  7258   0038DA  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7259   0038DC  6E0B               	movwf	(??___xxtofl+1)^0,c
  7260   0038DE  0E00               	movlw	0
  7261   0038E0  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7262   0038E2  6E0C               	movwf	(??___xxtofl+2)^0,c
  7263   0038E4  0EFE               	movlw	254
  7264   0038E6  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7265   0038E8  6E0D               	movwf	(??___xxtofl+3)^0,c
  7266   0038EA  500A               	movf	??___xxtofl^0,w,c
  7267   0038EC  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7268   0038EE  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7269   0038F0  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7270   0038F2  A4D8               	btfss	status,2,c
  7271   0038F4  EF7E  F01C         	goto	u9061
  7272   0038F8  EF80  F01C         	goto	u9060
  7273   0038FC                     u9061:
  7274   0038FC  EF63  F01C         	goto	l7438
  7275   003900                     u9060:
  7276   003900  EF8E  F01C         	goto	l1372
  7277   003904                     l7442:
  7278   003904  2A0F               	incf	___xxtofl@exp^0,f,c
  7279   003906  0E01               	movlw	1
  7280   003908  2610               	addwf	___xxtofl@arg^0,f,c
  7281   00390A  0E00               	movlw	0
  7282   00390C  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  7283   00390E  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  7284   003910  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  7285   003912  90D8               	bcf	status,0,c
  7286   003914  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  7287   003916  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  7288   003918  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  7289   00391A  3210               	rrcf	___xxtofl@arg^0,f,c
  7290   00391C                     l1372:
  7291   00391C  0E00               	movlw	0
  7292   00391E  1410               	andwf	___xxtofl@arg^0,w,c
  7293   003920  6E0A               	movwf	??___xxtofl^0,c
  7294   003922  0E00               	movlw	0
  7295   003924  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  7296   003926  6E0B               	movwf	(??___xxtofl+1)^0,c
  7297   003928  0E00               	movlw	0
  7298   00392A  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  7299   00392C  6E0C               	movwf	(??___xxtofl+2)^0,c
  7300   00392E  0EFF               	movlw	255
  7301   003930  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  7302   003932  6E0D               	movwf	(??___xxtofl+3)^0,c
  7303   003934  500A               	movf	??___xxtofl^0,w,c
  7304   003936  100B               	iorwf	(??___xxtofl+1)^0,w,c
  7305   003938  100C               	iorwf	(??___xxtofl+2)^0,w,c
  7306   00393A  100D               	iorwf	(??___xxtofl+3)^0,w,c
  7307   00393C  A4D8               	btfss	status,2,c
  7308   00393E  EFA3  F01C         	goto	u9071
  7309   003942  EFA5  F01C         	goto	u9070
  7310   003946                     u9071:
  7311   003946  EF82  F01C         	goto	l7442
  7312   00394A                     u9070:
  7313   00394A  EFAD  F01C         	goto	l7450
  7314   00394E                     l7448:
  7315   00394E  060F               	decf	___xxtofl@exp^0,f,c
  7316   003950  90D8               	bcf	status,0,c
  7317   003952  3610               	rlcf	___xxtofl@arg^0,f,c
  7318   003954  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  7319   003956  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  7320   003958  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  7321   00395A                     l7450:
  7322   00395A  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  7323   00395C  EFB2  F01C         	goto	u9081
  7324   003960  EFB4  F01C         	goto	u9080
  7325   003964                     u9081:
  7326   003964  EFBC  F01C         	goto	l1379
  7327   003968                     u9080:
  7328   003968  0E02               	movlw	2
  7329   00396A  600F               	cpfslt	___xxtofl@exp^0,c
  7330   00396C  EFBA  F01C         	goto	u9091
  7331   003970  EFBC  F01C         	goto	u9090
  7332   003974                     u9091:
  7333   003974  EFA7  F01C         	goto	l7448
  7334   003978                     u9090:
  7335   003978                     l1379:
  7336   003978  B00F               	btfsc	___xxtofl@exp^0,0,c
  7337   00397A  EFC1  F01C         	goto	u9101
  7338   00397E  EFC3  F01C         	goto	u9100
  7339   003982                     u9101:
  7340   003982  EFC4  F01C         	goto	l7456
  7341   003986                     u9100:
  7342   003986  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  7343   003988                     l7456:
  7344   003988  90D8               	bcf	status,0,c
  7345   00398A  320F               	rrcf	___xxtofl@exp^0,f,c
  7346   00398C  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  7347   003990  6A0B               	clrf	(??___xxtofl+1)^0,c
  7348   003992  6A0C               	clrf	(??___xxtofl+2)^0,c
  7349   003994  6A0D               	clrf	(??___xxtofl+3)^0,c
  7350   003996  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  7351   00399A  6A0C               	clrf	(??___xxtofl+2)^0,c
  7352   00399C  6A0B               	clrf	(??___xxtofl+1)^0,c
  7353   00399E  6A0A               	clrf	??___xxtofl^0,c
  7354   0039A0  500A               	movf	??___xxtofl^0,w,c
  7355   0039A2  1210               	iorwf	___xxtofl@arg^0,f,c
  7356   0039A4  500B               	movf	(??___xxtofl+1)^0,w,c
  7357   0039A6  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  7358   0039A8  500C               	movf	(??___xxtofl+2)^0,w,c
  7359   0039AA  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  7360   0039AC  500D               	movf	(??___xxtofl+3)^0,w,c
  7361   0039AE  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  7362   0039B0  500E               	movf	___xxtofl@sign^0,w,c
  7363   0039B2  B4D8               	btfsc	status,2,c
  7364   0039B4  EFDE  F01C         	goto	u9111
  7365   0039B8  EFE0  F01C         	goto	u9110
  7366   0039BC                     u9111:
  7367   0039BC  EFE8  F01C         	goto	l7466
  7368   0039C0                     u9110:
  7369   0039C0  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  7370   0039C2  EFE7  F01C         	goto	u9120
  7371   0039C6  EFE5  F01C         	goto	u9121
  7372   0039CA                     u9121:
  7373   0039CA  EFE8  F01C         	goto	l7466
  7374   0039CE                     u9120:
  7375   0039CE  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  7376   0039D0                     l7466:
  7377   0039D0  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  7378   0039D4  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  7379   0039D8  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  7380   0039DC  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  7381   0039E0                     l1368:
  7382   0039E0  0012               	return		;funcret
  7383   0039E2                     __end_of___xxtofl:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _moveDisplay *****************
  7387 ;; Defined at:
  7388 ;;		line 11 in file "menu.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  menuI           1    wreg     unsigned char 
  7391 ;;  where           1  135[BANK0 ] unsigned char 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  menuI           1   50[BANK1 ] unsigned char 
  7394 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  7395 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  7396 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  7397 ;;		 -> STR_24(1), STR_23(6), STR_22(5), STR_21(4), 
  7398 ;;		 -> STR_20(4), STR_19(4), STR_18(5), STR_17(5), 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      unsigned char 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7408 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;Total ram usage:       54 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 9
  7415 ;; This function calls:
  7416 ;;		_LCD_Clear
  7417 ;;		_LCD_ShowString
  7418 ;;		_sprintf
  7419 ;; This function is called by:
  7420 ;;		_main
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text26
  7425   00411A                     __ptext26:
  7426                           	callstack 0
  7427   00411A                     _moveDisplay:
  7428                           	callstack 21
  7429                           
  7430                           ;incstack = 0
  7431                           ;moveDisplay@menuI stored from wreg
  7432   00411A  0101               	movlb	1	; () banked
  7433   00411C  6FCD               	movwf	moveDisplay@menuI& (0+255),b
  7434   00411E                     
  7435                           ;menu.c: 12:     LCD_Clear();
  7436   00411E  EC77  F028         	call	_LCD_Clear	;wreg free
  7437   004122                     
  7438                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  7439   004122  EE21  F0CE         	lfsr	2,moveDisplay@F6965
  7440   004126  EE11  F0BD         	lfsr	1,moveDisplay@menuItems
  7441   00412A  0E0F               	movlw	15
  7442   00412C                     u9721:
  7443   00412C  CFDB FFE3          	movff	plusw2,plusw1
  7444   004130  06E8               	decf	wreg,f,c
  7445   004132  E2FC               	bc	u9721
  7446                           
  7447                           ;menu.c: 14:     switch (where){
  7448   004134  EFB4  F020         	goto	l7952
  7449   004138                     l7942:
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;menu.c: 18:             if(menuI<6){
  7453   004138  0E06               	movlw	6
  7454   00413A  0101               	movlb	1	; () banked
  7455   00413C  61CD               	cpfslt	moveDisplay@menuI& (0+255),b
  7456   00413E  EFA3  F020         	goto	u9731
  7457   004142  EFA5  F020         	goto	u9730
  7458   004146                     u9731:
  7459   004146  EFC4  F020         	goto	l7954
  7460   00414A                     u9730:
  7461   00414A                     
  7462                           ; BSR set to: 1
  7463                           ;menu.c: 19:             menuI++;
  7464   00414A  2BCD               	incf	moveDisplay@menuI& (0+255),f,b
  7465   00414C  EFC4  F020         	goto	l7954
  7466   004150                     l7946:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;menu.c: 23:             if(menuI>0){
  7470   004150  0101               	movlb	1	; () banked
  7471   004152  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7472   004154  B4D8               	btfsc	status,2,c
  7473   004156  EFAF  F020         	goto	u9741
  7474   00415A  EFB1  F020         	goto	u9740
  7475   00415E                     u9741:
  7476   00415E  EFC4  F020         	goto	l7954
  7477   004162                     u9740:
  7478   004162                     
  7479                           ; BSR set to: 1
  7480                           ;menu.c: 24:             menuI--;
  7481   004162  07CD               	decf	moveDisplay@menuI& (0+255),f,b
  7482   004164  EFC4  F020         	goto	l7954
  7483   004168                     l7952:
  7484   004168  0100               	movlb	0	; () banked
  7485   00416A  51E7               	movf	moveDisplay@where& (0+255),w,b
  7486                           
  7487                           ; Switch size 1, requested type "simple"
  7488                           ; Number of cases is 3, Range of values is 0 to 2
  7489                           ; switch strategies available:
  7490                           ; Name         Instructions Cycles
  7491                           ; simple_byte           10     6 (average)
  7492                           ;	Chosen strategy is simple_byte
  7493   00416C  0A00               	xorlw	0	; case 0
  7494   00416E  B4D8               	btfsc	status,2,c
  7495   004170  EFC4  F020         	goto	l7954
  7496   004174  0A01               	xorlw	1	; case 1
  7497   004176  B4D8               	btfsc	status,2,c
  7498   004178  EF9C  F020         	goto	l7942
  7499   00417C  0A03               	xorlw	3	; case 2
  7500   00417E  B4D8               	btfsc	status,2,c
  7501   004180  EFA8  F020         	goto	l7946
  7502   004184  EFC4  F020         	goto	l7954
  7503   004188                     l7954:
  7504                           
  7505                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  7506   004188  0E9B               	movlw	low moveDisplay@menuItem1
  7507   00418A  0100               	movlb	0	; () banked
  7508   00418C  6FCE               	movwf	sprintf@s& (0+255),b
  7509   00418E  0E01               	movlw	high moveDisplay@menuItem1
  7510   004190  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7511   004192  0ECC               	movlw	low STR_25
  7512   004194  6FD0               	movwf	sprintf@fmt& (0+255),b
  7513   004196  0EFF               	movlw	high STR_25
  7514   004198  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7515   00419A  0E00               	movlw	0
  7516   00419C  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7517   00419E  0E0F               	movlw	15
  7518   0041A0  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7519   0041A2  0101               	movlb	1	; () banked
  7520   0041A4  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7521   0041A6  0D02               	mullw	2
  7522   0041A8  0EBD               	movlw	low moveDisplay@menuItems
  7523   0041AA  24F3               	addwf	243,w,c
  7524   0041AC  6ED9               	movwf	fsr2l,c
  7525   0041AE  0E01               	movlw	high moveDisplay@menuItems
  7526   0041B0  20F4               	addwfc	prodh,w,c
  7527   0041B2  6EDA               	movwf	fsr2h,c
  7528   0041B4  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7529   0041B8  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7530   0041BC  ECBF  F027         	call	_sprintf	;wreg free
  7531                           
  7532                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  7533   0041C0  0EAC               	movlw	low moveDisplay@menuItem2
  7534   0041C2  0100               	movlb	0	; () banked
  7535   0041C4  6FCE               	movwf	sprintf@s& (0+255),b
  7536   0041C6  0E01               	movlw	high moveDisplay@menuItem2
  7537   0041C8  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  7538   0041CA  0ECD               	movlw	low (STR_25+1)
  7539   0041CC  6FD0               	movwf	sprintf@fmt& (0+255),b
  7540   0041CE  0EFF               	movlw	high (STR_25+1)
  7541   0041D0  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  7542   0041D2  0E00               	movlw	0
  7543   0041D4  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  7544   0041D6  0E10               	movlw	16
  7545   0041D8  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  7546   0041DA  0101               	movlb	1	; () banked
  7547   0041DC  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7548   0041DE  0100               	movlb	0	; () banked
  7549   0041E0  6FE8               	movwf	??_moveDisplay& (0+255),b
  7550   0041E2  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  7551   0041E4  90D8               	bcf	status,0,c
  7552   0041E6  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  7553   0041E8  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  7554   0041EA  0E02               	movlw	2
  7555   0041EC  27E8               	addwf	??_moveDisplay& (0+255),f,b
  7556   0041EE  0E00               	movlw	0
  7557   0041F0  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  7558   0041F2  0EBD               	movlw	low moveDisplay@menuItems
  7559   0041F4  25E8               	addwf	??_moveDisplay& (0+255),w,b
  7560   0041F6  6ED9               	movwf	fsr2l,c
  7561   0041F8  0E01               	movlw	high moveDisplay@menuItems
  7562   0041FA  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  7563   0041FC  6EDA               	movwf	fsr2h,c
  7564   0041FE  CFDE F0D4          	movff	postinc2,?_sprintf+6
  7565   004202  CFDD F0D5          	movff	postdec2,?_sprintf+7
  7566   004206  ECBF  F027         	call	_sprintf	;wreg free
  7567   00420A                     
  7568                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  7569   00420A  0E9B               	movlw	low moveDisplay@menuItem1
  7570   00420C  6E07               	movwf	LCD_ShowString@textData^0,c
  7571   00420E  0E01               	movlw	high moveDisplay@menuItem1
  7572   004210  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7573   004212  0E01               	movlw	1
  7574   004214  EC47  F024         	call	_LCD_ShowString
  7575   004218                     
  7576                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  7577   004218  0EAC               	movlw	low moveDisplay@menuItem2
  7578   00421A  6E07               	movwf	LCD_ShowString@textData^0,c
  7579   00421C  0E01               	movlw	high moveDisplay@menuItem2
  7580   00421E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  7581   004220  0E02               	movlw	2
  7582   004222  EC47  F024         	call	_LCD_ShowString
  7583   004226                     
  7584                           ;menu.c: 35:     return menuI;
  7585   004226  0101               	movlb	1	; () banked
  7586   004228  51CD               	movf	moveDisplay@menuI& (0+255),w,b
  7587   00422A                     
  7588                           ; BSR set to: 1
  7589   00422A  0012               	return		;funcret
  7590   00422C                     __end_of_moveDisplay:
  7591                           	callstack 0
  7592                           
  7593 ;; *************** function _sprintf *****************
  7594 ;; Defined at:
  7595 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  s               2  110[BANK0 ] PTR unsigned char 
  7598 ;;		 -> runGAME@approxText(17), runGAME@text(17), runADC@text(17), moveDisplay@menuItem2(17), 
  7599 ;;		 -> moveDisplay@menuItem1(17), 
  7600 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  7601 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7602 ;;		 -> STR_27(19), STR_26(5), STR_25(6), 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  f              12  123[BANK0 ] struct _IO_FILE
  7605 ;;  ret             2    0        int 
  7606 ;;  ap              1  122[BANK0 ] PTR void [1]
  7607 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2  110[BANK0 ] int 
  7610 ;; Registers used:
  7611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7617 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;Total ram usage:       25 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; Hardware stack levels required when called: 8
  7624 ;; This function calls:
  7625 ;;		_vfprintf
  7626 ;; This function is called by:
  7627 ;;		_moveDisplay
  7628 ;;		_runADC
  7629 ;;		_runGAME
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text27
  7634   004F7E                     __ptext27:
  7635                           	callstack 0
  7636   004F7E                     _sprintf:
  7637                           	callstack 21
  7638   004F7E  0ED2               	movlw	low (?_sprintf+4)
  7639   004F80  0100               	movlb	0	; () banked
  7640   004F82  6FDA               	movwf	sprintf@ap& (0+255),b
  7641   004F84  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  7642   004F88  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7643   004F8C                     
  7644                           ; BSR set to: 0
  7645   004F8C  0E00               	movlw	0
  7646   004F8E  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7647   004F90  0E00               	movlw	0
  7648   004F92  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7649   004F94                     
  7650                           ; BSR set to: 0
  7651   004F94  0E00               	movlw	0
  7652   004F96  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  7653   004F98  0E00               	movlw	0
  7654   004F9A  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7655   004F9C                     
  7656                           ; BSR set to: 0
  7657   004F9C  0EDB               	movlw	low sprintf@f
  7658   004F9E  6FC7               	movwf	vfprintf@fp& (0+255),b
  7659   004FA0  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  7660   004FA2  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7661   004FA6  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7662   004FAA  0EDA               	movlw	low sprintf@ap
  7663   004FAC  6FCB               	movwf	vfprintf@ap& (0+255),b
  7664   004FAE  EC76  F027         	call	_vfprintf	;wreg free
  7665   004FB2  0100               	movlb	0	; () banked
  7666   004FB4  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7667   004FB6  25CE               	addwf	sprintf@s& (0+255),w,b
  7668   004FB8  6ED9               	movwf	fsr2l,c
  7669   004FBA  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  7670   004FBC  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  7671   004FBE  6EDA               	movwf	fsr2h,c
  7672   004FC0  6ADF               	clrf	indf2,c
  7673   004FC2                     
  7674                           ; BSR set to: 0
  7675   004FC2  0012               	return		;funcret
  7676   004FC4                     __end_of_sprintf:
  7677                           	callstack 0
  7678                           
  7679 ;; *************** function _vfprintf *****************
  7680 ;; Defined at:
  7681 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7684 ;;		 -> NULL(0), sprintf@f(12), 
  7685 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7686 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7687 ;;		 -> STR_28(5), STR_27(19), STR_26(5), STR_25(6), 
  7688 ;;		 -> STR_16(5), 
  7689 ;;  ap              1  107[BANK0 ] PTR PTR void 
  7690 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  7693 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7694 ;;		 -> STR_28(5), STR_27(19), STR_26(5), STR_25(6), 
  7695 ;;		 -> STR_16(5), 
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  2  103[BANK0 ] int 
  7698 ;; Registers used:
  7699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7705 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;Total ram usage:        7 bytes
  7710 ;; Hardware stack levels used: 1
  7711 ;; Hardware stack levels required when called: 7
  7712 ;; This function calls:
  7713 ;;		_vfpfcnvrt
  7714 ;; This function is called by:
  7715 ;;		_sprintf
  7716 ;;		_printf
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text28
  7721   004EEC                     __ptext28:
  7722                           	callstack 0
  7723   004EEC                     _vfprintf:
  7724                           	callstack 21
  7725   004EEC                     
  7726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7727   004EEC  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  7728   004EF0  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7729                           
  7730                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7731   004EF4  EF87  F027         	goto	l7648
  7732   004EF8                     l7646:
  7733                           
  7734                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  7735   004EF8  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  7736   004EFC  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7737   004F00  0ECC               	movlw	low vfprintf@cfmt
  7738   004F02  0100               	movlb	0	; () banked
  7739   004F04  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  7740   004F06  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  7741   004F0A  ECA6  F005         	call	_vfpfcnvrt	;wreg free
  7742   004F0E                     l7648:
  7743                           
  7744                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  7745   004F0E  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  7746   004F12  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7747   004F16                     	if	0	;tblptru may be non-zero
  7748   004F16                     	endif
  7749   004F16                     	if	0	;tblptru may be non-zero
  7750   004F16                     	endif
  7751   004F16  0008               	tblrd		*
  7752   004F18  50F5               	movf	tablat,w,c
  7753   004F1A  0900               	iorlw	0
  7754   004F1C  A4D8               	btfss	status,2,c
  7755   004F1E  EF93  F027         	goto	u9301
  7756   004F22  EF95  F027         	goto	u9300
  7757   004F26                     u9301:
  7758   004F26  EF7C  F027         	goto	l7646
  7759   004F2A                     u9300:
  7760   004F2A                     
  7761                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7762   004F2A  0E00               	movlw	0
  7763   004F2C  0100               	movlb	0	; () banked
  7764   004F2E  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  7765   004F30  0E00               	movlw	0
  7766   004F32  6FC7               	movwf	?_vfprintf& (0+255),b
  7767   004F34                     
  7768                           ; BSR set to: 0
  7769   004F34  0012               	return		;funcret
  7770   004F36                     __end_of_vfprintf:
  7771                           	callstack 0
  7772                           
  7773 ;; *************** function _vfpfcnvrt *****************
  7774 ;; Defined at:
  7775 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  7778 ;;		 -> NULL(0), sprintf@f(12), 
  7779 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  7780 ;;		 -> vfprintf@cfmt(2), 
  7781 ;;  ap              1   92[BANK0 ] PTR PTR void 
  7782 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;  convarg         4   96[BANK0 ] struct .
  7785 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  7786 ;;		 -> STR_32(18), STR_31(19), STR_30(17), STR_29(19), 
  7787 ;;		 -> STR_28(5), STR_27(19), STR_26(5), STR_25(6), 
  7788 ;;		 -> STR_16(5), 
  7789 ;;  c               1  100[BANK0 ] unsigned char 
  7790 ;;  done            1   95[BANK0 ] _Bool 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  1    wreg      void 
  7793 ;; Registers used:
  7794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7800 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;Total ram usage:       14 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; Hardware stack levels required when called: 6
  7807 ;; This function calls:
  7808 ;;		_dtoa
  7809 ;;		_efgtoa
  7810 ;;		_fputc
  7811 ;;		_read_prec_or_width
  7812 ;;		_stoa
  7813 ;;		_utoa
  7814 ;; This function is called by:
  7815 ;;		_vfprintf
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text29
  7820   000B4C                     __ptext29:
  7821                           	callstack 0
  7822   000B4C                     _vfpfcnvrt:
  7823                           	callstack 21
  7824   000B4C                     
  7825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  7826   000B4C  0100               	movlb	0	; () banked
  7827   000B4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7828   000B50  6ED9               	movwf	fsr2l,c
  7829   000B52  6ADA               	clrf	fsr2h,c
  7830   000B54  CFDE FFF6          	movff	postinc2,tblptrl
  7831   000B58  CFDD FFF7          	movff	postdec2,tblptrh
  7832   000B5C                     	if	0	;tblptru may be non-zero
  7833   000B5C                     	endif
  7834   000B5C                     	if	0	;tblptru may be non-zero
  7835   000B5C                     	endif
  7836   000B5C  0008               	tblrd		*
  7837   000B5E  50F5               	movf	tablat,w,c
  7838   000B60  0A25               	xorlw	37
  7839   000B62  A4D8               	btfss	status,2,c
  7840   000B64  EFB6  F005         	goto	u9131
  7841   000B68  EFB8  F005         	goto	u9130
  7842   000B6C                     u9131:
  7843   000B6C  EF40  F008         	goto	l7618
  7844   000B70                     u9130:
  7845   000B70                     
  7846                           ; BSR set to: 0
  7847                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  7848   000B70  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7849   000B72  6ED9               	movwf	fsr2l,c
  7850   000B74  6ADA               	clrf	fsr2h,c
  7851   000B76  2ADE               	incf	postinc2,f,c
  7852   000B78  0E00               	movlw	0
  7853   000B7A  22DD               	addwfc	postdec2,f,c
  7854   000B7C                     
  7855                           ; BSR set to: 0
  7856                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  7857   000B7C  0E00               	movlw	0
  7858   000B7E  6E56               	movwf	(_width+1)^0,c
  7859   000B80  0E00               	movlw	0
  7860   000B82  6E55               	movwf	_width^0,c
  7861   000B84  C055  F059         	movff	_width,_flags
  7862   000B88                     
  7863                           ; BSR set to: 0
  7864                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  7865   000B88  6857               	setf	_prec^0,c
  7866   000B8A  6858               	setf	(_prec+1)^0,c
  7867   000B8C                     
  7868                           ; BSR set to: 0
  7869                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  7870   000B8C  0E00               	movlw	0
  7871   000B8E  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7872                           
  7873                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7874   000B90  EFE6  F005         	goto	l7490
  7875   000B94                     l7480:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  7879   000B94  8059               	bsf	_flags^0,0,c
  7880   000B96                     
  7881                           ; BSR set to: 0
  7882                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  7883   000B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7884   000B98  6ED9               	movwf	fsr2l,c
  7885   000B9A  6ADA               	clrf	fsr2h,c
  7886   000B9C  2ADE               	incf	postinc2,f,c
  7887   000B9E  0E00               	movlw	0
  7888   000BA0  22DD               	addwfc	postdec2,f,c
  7889                           
  7890                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  7891   000BA2  EFE6  F005         	goto	l7490
  7892   000BA6                     l7484:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  7896   000BA6  0E01               	movlw	1
  7897   000BA8  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  7898                           
  7899                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  7900   000BAA  EFE6  F005         	goto	l7490
  7901   000BAE                     l7488:
  7902                           
  7903                           ; BSR set to: 0
  7904   000BAE  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7905   000BB0  6ED9               	movwf	fsr2l,c
  7906   000BB2  6ADA               	clrf	fsr2h,c
  7907   000BB4  CFDE FFF6          	movff	postinc2,tblptrl
  7908   000BB8  CFDD FFF7          	movff	postdec2,tblptrh
  7909   000BBC                     	if	0	;tblptru may be non-zero
  7910   000BBC                     	endif
  7911   000BBC                     	if	0	;tblptru may be non-zero
  7912   000BBC                     	endif
  7913   000BBC  0008               	tblrd		*
  7914   000BBE  50F5               	movf	tablat,w,c
  7915                           
  7916                           ; Switch size 1, requested type "simple"
  7917                           ; Number of cases is 1, Range of values is 45 to 45
  7918                           ; switch strategies available:
  7919                           ; Name         Instructions Cycles
  7920                           ; simple_byte            4     3 (average)
  7921                           ;	Chosen strategy is simple_byte
  7922   000BC0  0A2D               	xorlw	45	; case 45
  7923   000BC2  B4D8               	btfsc	status,2,c
  7924   000BC4  EFCA  F005         	goto	l7480
  7925   000BC8  EFD3  F005         	goto	l7484
  7926   000BCC                     l7490:
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  7930   000BCC  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  7931   000BCE  B4D8               	btfsc	status,2,c
  7932   000BD0  EFEC  F005         	goto	u9141
  7933   000BD4  EFEE  F005         	goto	u9140
  7934   000BD8                     u9141:
  7935   000BD8  EFD7  F005         	goto	l7488
  7936   000BDC                     u9140:
  7937   000BDC                     
  7938                           ; BSR set to: 0
  7939                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  7940   000BDC  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7941   000BE0  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7942   000BE4  ECF8  F024         	call	_read_prec_or_width	;wreg free
  7943   000BE8  C00C  F055         	movff	?_read_prec_or_width,_width
  7944   000BEC  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  7945   000BF0                     
  7946                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  7947   000BF0  BE56               	btfsc	(_width+1)^0,7,c
  7948   000BF2  EFFF  F005         	goto	u9150
  7949   000BF6  EFFD  F005         	goto	u9151
  7950   000BFA                     u9151:
  7951   000BFA  EF04  F006         	goto	l7498
  7952   000BFE                     u9150:
  7953   000BFE                     
  7954                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  7955   000BFE  8059               	bsf	_flags^0,0,c
  7956                           
  7957                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  7958   000C00  6C55               	negf	_width^0,c
  7959   000C02  1E56               	comf	(_width+1)^0,f,c
  7960   000C04  B0D8               	btfsc	status,0,c
  7961   000C06  2A56               	incf	(_width+1)^0,f,c
  7962   000C08                     l7498:
  7963                           
  7964                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  7965   000C08  0100               	movlb	0	; () banked
  7966   000C0A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7967   000C0C  6ED9               	movwf	fsr2l,c
  7968   000C0E  6ADA               	clrf	fsr2h,c
  7969   000C10  CFDE FFF6          	movff	postinc2,tblptrl
  7970   000C14  CFDD FFF7          	movff	postdec2,tblptrh
  7971   000C18                     	if	0	;tblptru may be non-zero
  7972   000C18                     	endif
  7973   000C18                     	if	0	;tblptru may be non-zero
  7974   000C18                     	endif
  7975   000C18  0008               	tblrd		*
  7976   000C1A  50F5               	movf	tablat,w,c
  7977   000C1C  0A2E               	xorlw	46
  7978   000C1E  A4D8               	btfss	status,2,c
  7979   000C20  EF14  F006         	goto	u9161
  7980   000C24  EF16  F006         	goto	u9160
  7981   000C28                     u9161:
  7982   000C28  EF26  F006         	goto	l7504
  7983   000C2C                     u9160:
  7984   000C2C                     
  7985                           ; BSR set to: 0
  7986                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  7987   000C2C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7988   000C2E  6ED9               	movwf	fsr2l,c
  7989   000C30  6ADA               	clrf	fsr2h,c
  7990   000C32  2ADE               	incf	postinc2,f,c
  7991   000C34  0E00               	movlw	0
  7992   000C36  22DD               	addwfc	postdec2,f,c
  7993   000C38                     
  7994                           ; BSR set to: 0
  7995                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  7996   000C38  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7997   000C3C  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7998   000C40  ECF8  F024         	call	_read_prec_or_width	;wreg free
  7999   000C44  C00C  F057         	movff	?_read_prec_or_width,_prec
  8000   000C48  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  8001   000C4C                     l7504:
  8002                           
  8003                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  8004   000C4C  0100               	movlb	0	; () banked
  8005   000C4E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8006   000C50  6ED9               	movwf	fsr2l,c
  8007   000C52  6ADA               	clrf	fsr2h,c
  8008   000C54  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8009   000C58  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8010   000C5C                     
  8011                           ; BSR set to: 0
  8012                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  8013   000C5C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8014   000C60  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8015   000C64                     	if	0	;tblptru may be non-zero
  8016   000C64                     	endif
  8017   000C64                     	if	0	;tblptru may be non-zero
  8018   000C64                     	endif
  8019   000C64  0008               	tblrd		*
  8020   000C66  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8021                           
  8022                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1294:   switch(c) {
  8023   000C6A  EF43  F006         	goto	l7516
  8024   000C6E                     l7508:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  8028   000C6E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8029   000C70  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8030                           
  8031                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1305:     break;
  8032   000C72  EF56  F006         	goto	l7518
  8033   000C76                     l7510:
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1350:     c = 'i';
  8037   000C76  0E69               	movlw	105
  8038   000C78  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8039                           
  8040                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1351:     break;
  8041   000C7A  EF56  F006         	goto	l7518
  8042   000C7E                     l7512:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  8046   000C7E  0E00               	movlw	0
  8047   000C80  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8048                           
  8049                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1354:     break;
  8050   000C82  EF56  F006         	goto	l7518
  8051   000C86                     l7516:
  8052                           
  8053                           ; BSR set to: 0
  8054   000C86  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8055                           
  8056                           ; Switch size 1, requested type "simple"
  8057                           ; Number of cases is 4, Range of values is 100 to 117
  8058                           ; switch strategies available:
  8059                           ; Name         Instructions Cycles
  8060                           ; simple_byte           13     7 (average)
  8061                           ;	Chosen strategy is simple_byte
  8062   000C88  0A64               	xorlw	100	; case 100
  8063   000C8A  B4D8               	btfsc	status,2,c
  8064   000C8C  EF3B  F006         	goto	l7510
  8065   000C90  0A0C               	xorlw	12	; case 104
  8066   000C92  B4D8               	btfsc	status,2,c
  8067   000C94  EF37  F006         	goto	l7508
  8068   000C98  0A01               	xorlw	1	; case 105
  8069   000C9A  B4D8               	btfsc	status,2,c
  8070   000C9C  EF3B  F006         	goto	l7510
  8071   000CA0  0A1C               	xorlw	28	; case 117
  8072   000CA2  B4D8               	btfsc	status,2,c
  8073   000CA4  EF3B  F006         	goto	l7510
  8074   000CA8  EF3F  F006         	goto	l7512
  8075   000CAC                     l7518:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  8079   000CAC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8080   000CB0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8081   000CB4                     	if	0	;tblptru may be non-zero
  8082   000CB4                     	endif
  8083   000CB4                     	if	0	;tblptru may be non-zero
  8084   000CB4                     	endif
  8085   000CB4  0008               	tblrd		*
  8086   000CB6  50F5               	movf	tablat,w,c
  8087   000CB8  0A64               	xorlw	100
  8088   000CBA  B4D8               	btfsc	status,2,c
  8089   000CBC  EF62  F006         	goto	u9171
  8090   000CC0  EF64  F006         	goto	u9170
  8091   000CC4                     u9171:
  8092   000CC4  EF90  F006         	goto	l7528
  8093   000CC8                     u9170:
  8094   000CC8                     
  8095                           ; BSR set to: 0
  8096   000CC8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8097   000CCC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8098   000CD0                     	if	0	;tblptru may be non-zero
  8099   000CD0                     	endif
  8100   000CD0                     	if	0	;tblptru may be non-zero
  8101   000CD0                     	endif
  8102   000CD0  0008               	tblrd		*
  8103   000CD2  50F5               	movf	tablat,w,c
  8104   000CD4  0A69               	xorlw	105
  8105   000CD6  A4D8               	btfss	status,2,c
  8106   000CD8  EF70  F006         	goto	u9181
  8107   000CDC  EF72  F006         	goto	u9180
  8108   000CE0                     u9181:
  8109   000CE0  EFB4  F006         	goto	l7536
  8110   000CE4                     u9180:
  8111   000CE4  EF90  F006         	goto	l7528
  8112   000CE8                     l7522:
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1365:      convarg.sint = (vfpf_sin
      +                          t_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  8116   000CE8  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8117   000CEA  6ED9               	movwf	fsr2l,c
  8118   000CEC  6ADA               	clrf	fsr2h,c
  8119   000CEE  0E02               	movlw	2
  8120   000CF0  26DF               	addwf	indf2,f,c
  8121   000CF2  5CDF               	subwf	indf2,w,c
  8122   000CF4  6ED9               	movwf	fsr2l,c
  8123   000CF6  6ADA               	clrf	fsr2h,c
  8124   000CF8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8125   000CFC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8126                           
  8127                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1366:      break;
  8128   000D00  EF9B  F006         	goto	l7530
  8129   000D04                     l7524:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1369:      convarg.sint = (vfpf_sin
      +                          t_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8133   000D04  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8134   000D06  6ED9               	movwf	fsr2l,c
  8135   000D08  6ADA               	clrf	fsr2h,c
  8136   000D0A  0E02               	movlw	2
  8137   000D0C  26DF               	addwf	indf2,f,c
  8138   000D0E  5CDF               	subwf	indf2,w,c
  8139   000D10  6ED9               	movwf	fsr2l,c
  8140   000D12  6ADA               	clrf	fsr2h,c
  8141   000D14  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8142   000D18  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8143                           
  8144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1370:      break;
  8145   000D1C  EF9B  F006         	goto	l7530
  8146   000D20                     l7528:
  8147                           
  8148                           ; BSR set to: 0
  8149   000D20  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8150                           
  8151                           ; Switch size 1, requested type "simple"
  8152                           ; Number of cases is 2, Range of values is 104 to 105
  8153                           ; switch strategies available:
  8154                           ; Name         Instructions Cycles
  8155                           ; simple_byte            7     4 (average)
  8156                           ;	Chosen strategy is simple_byte
  8157   000D22  0A68               	xorlw	104	; case 104
  8158   000D24  B4D8               	btfsc	status,2,c
  8159   000D26  EF82  F006         	goto	l7524
  8160   000D2A  0A01               	xorlw	1	; case 105
  8161   000D2C  B4D8               	btfsc	status,2,c
  8162   000D2E  EF74  F006         	goto	l7522
  8163   000D32  EF9B  F006         	goto	l7530
  8164   000D36                     l7530:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  8168   000D36  0E01               	movlw	1
  8169   000D38  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8170   000D3A  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8171   000D3C  0E00               	movlw	0
  8172   000D3E  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8173   000D40  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8174   000D42  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8175   000D44  6ED9               	movwf	fsr2l,c
  8176   000D46  6ADA               	clrf	fsr2h,c
  8177   000D48  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8178   000D4C  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8179   000D50                     
  8180                           ; BSR set to: 0
  8181                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  8182   000D50  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  8183   000D54  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8184   000D58  C0C0  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  8185   000D5C  C0C1  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8186   000D60  ECC0  F01D         	call	_dtoa	;wreg free
  8187   000D64  EF53  F008         	goto	l1560
  8188   000D68                     l7536:
  8189                           
  8190                           ; BSR set to: 0
  8191   000D68  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8192   000D6C  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8193   000D70                     	if	0	;tblptru may be non-zero
  8194   000D70                     	endif
  8195   000D70                     	if	0	;tblptru may be non-zero
  8196   000D70                     	endif
  8197   000D70  0008               	tblrd		*
  8198   000D72  50F5               	movf	tablat,w,c
  8199   000D74  0A75               	xorlw	117
  8200   000D76  A4D8               	btfss	status,2,c
  8201   000D78  EFC0  F006         	goto	u9191
  8202   000D7C  EFC2  F006         	goto	u9190
  8203   000D80                     u9191:
  8204   000D80  EF12  F007         	goto	l7556
  8205   000D84                     u9190:
  8206   000D84  EFE0  F006         	goto	l7544
  8207   000D88                     l7538:
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1456:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8211   000D88  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8212   000D8A  6ED9               	movwf	fsr2l,c
  8213   000D8C  6ADA               	clrf	fsr2h,c
  8214   000D8E  0E02               	movlw	2
  8215   000D90  26DF               	addwf	indf2,f,c
  8216   000D92  5CDF               	subwf	indf2,w,c
  8217   000D94  6ED9               	movwf	fsr2l,c
  8218   000D96  6ADA               	clrf	fsr2h,c
  8219   000D98  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8220   000D9C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8221                           
  8222                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1457:      break;
  8223   000DA0  EFEB  F006         	goto	l7546
  8224   000DA4                     l7540:
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1460:      convarg.uint = (vfpf_uin
      +                          t_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8228   000DA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8229   000DA6  6ED9               	movwf	fsr2l,c
  8230   000DA8  6ADA               	clrf	fsr2h,c
  8231   000DAA  0E02               	movlw	2
  8232   000DAC  26DF               	addwf	indf2,f,c
  8233   000DAE  5CDF               	subwf	indf2,w,c
  8234   000DB0  6ED9               	movwf	fsr2l,c
  8235   000DB2  6ADA               	clrf	fsr2h,c
  8236   000DB4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8237   000DB8  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8238                           
  8239                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1461:      break;
  8240   000DBC  EFEB  F006         	goto	l7546
  8241   000DC0                     l7544:
  8242                           
  8243                           ; BSR set to: 0
  8244   000DC0  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8245                           
  8246                           ; Switch size 1, requested type "simple"
  8247                           ; Number of cases is 2, Range of values is 104 to 105
  8248                           ; switch strategies available:
  8249                           ; Name         Instructions Cycles
  8250                           ; simple_byte            7     4 (average)
  8251                           ;	Chosen strategy is simple_byte
  8252   000DC2  0A68               	xorlw	104	; case 104
  8253   000DC4  B4D8               	btfsc	status,2,c
  8254   000DC6  EFD2  F006         	goto	l7540
  8255   000DCA  0A01               	xorlw	1	; case 105
  8256   000DCC  B4D8               	btfsc	status,2,c
  8257   000DCE  EFC4  F006         	goto	l7538
  8258   000DD2  EFEB  F006         	goto	l7546
  8259   000DD6                     l7546:
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+1;
  8263   000DD6  0E01               	movlw	1
  8264   000DD8  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8265   000DDA  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8266   000DDC  0E00               	movlw	0
  8267   000DDE  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8268   000DE0  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8269   000DE2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8270   000DE4  6ED9               	movwf	fsr2l,c
  8271   000DE6  6ADA               	clrf	fsr2h,c
  8272   000DE8  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8273   000DEC  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8274                           
  8275                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1498:    switch (*cp) {
  8276   000DF0  EF06  F007         	goto	l7554
  8277   000DF4                     l7548:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1542:      return (void) utoa(fp, c
      +                          onvarg.uint);;	Return value of _vfpfcnvrt is never used
  8281   000DF4  C0B9  F020         	movff	vfpfcnvrt@fp,utoa@fp
  8282   000DF8  C0BA  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8283   000DFC  C0C0  F022         	movff	vfpfcnvrt@convarg,utoa@d
  8284   000E00  C0C1  F023         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8285   000E04  EC9B  F022         	call	_utoa	;wreg free
  8286   000E08  EF53  F008         	goto	l1560
  8287   000E0C                     l7554:
  8288                           
  8289                           ; BSR set to: 0
  8290   000E0C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8291   000E10  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8292   000E14                     	if	0	;tblptru may be non-zero
  8293   000E14                     	endif
  8294   000E14                     	if	0	;tblptru may be non-zero
  8295   000E14                     	endif
  8296   000E14  0008               	tblrd		*
  8297   000E16  50F5               	movf	tablat,w,c
  8298                           
  8299                           ; Switch size 1, requested type "simple"
  8300                           ; Number of cases is 1, Range of values is 117 to 117
  8301                           ; switch strategies available:
  8302                           ; Name         Instructions Cycles
  8303                           ; simple_byte            4     3 (average)
  8304                           ;	Chosen strategy is simple_byte
  8305   000E18  0A75               	xorlw	117	; case 117
  8306   000E1A  B4D8               	btfsc	status,2,c
  8307   000E1C  EFFA  F006         	goto	l7548
  8308   000E20  EF12  F007         	goto	l7556
  8309   000E24                     l7556:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  8313   000E24  0E00               	movlw	0
  8314   000E26  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8315   000E28                     
  8316                           ; BSR set to: 0
  8317                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  8318   000E28  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8319   000E2A  6ED9               	movwf	fsr2l,c
  8320   000E2C  6ADA               	clrf	fsr2h,c
  8321   000E2E  CFDE FFF6          	movff	postinc2,tblptrl
  8322   000E32  CFDD FFF7          	movff	postdec2,tblptrh
  8323   000E36                     	if	0	;tblptru may be non-zero
  8324   000E36                     	endif
  8325   000E36                     	if	0	;tblptru may be non-zero
  8326   000E36                     	endif
  8327   000E36  0008               	tblrd		*
  8328   000E38  50F5               	movf	tablat,w,c
  8329   000E3A  0A73               	xorlw	115
  8330   000E3C  A4D8               	btfss	status,2,c
  8331   000E3E  EF23  F007         	goto	u9201
  8332   000E42  EF25  F007         	goto	u9200
  8333   000E46                     u9201:
  8334   000E46  EF2F  F007         	goto	l7564
  8335   000E4A                     u9200:
  8336   000E4A                     
  8337                           ; BSR set to: 0
  8338                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  8339   000E4A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8340   000E4C  6ED9               	movwf	fsr2l,c
  8341   000E4E  6ADA               	clrf	fsr2h,c
  8342   000E50  2ADE               	incf	postinc2,f,c
  8343   000E52  0E00               	movlw	0
  8344   000E54  22DD               	addwfc	postdec2,f,c
  8345   000E56                     l7562:
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  8349   000E56  0E01               	movlw	1
  8350   000E58  6FBF               	movwf	vfpfcnvrt@done& (0+255),b
  8351                           
  8352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  8353   000E5A  EF7B  F007         	goto	l7574
  8354   000E5E                     l7564:
  8355                           
  8356                           ; BSR set to: 0
  8357   000E5E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8358   000E60  6ED9               	movwf	fsr2l,c
  8359   000E62  6ADA               	clrf	fsr2h,c
  8360   000E64  CFDE FFF6          	movff	postinc2,tblptrl
  8361   000E68  CFDD FFF7          	movff	postdec2,tblptrh
  8362   000E6C                     	if	0	;tblptru may be non-zero
  8363   000E6C                     	endif
  8364   000E6C                     	if	0	;tblptru may be non-zero
  8365   000E6C                     	endif
  8366   000E6C  0008               	tblrd		*
  8367   000E6E  50F5               	movf	tablat,w,c
  8368   000E70  0A6C               	xorlw	108
  8369   000E72  A4D8               	btfss	status,2,c
  8370   000E74  EF3E  F007         	goto	u9211
  8371   000E78  EF40  F007         	goto	u9210
  8372   000E7C                     u9211:
  8373   000E7C  EF7B  F007         	goto	l7574
  8374   000E80                     u9210:
  8375   000E80                     
  8376                           ; BSR set to: 0
  8377   000E80  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8378   000E82  6ED9               	movwf	fsr2l,c
  8379   000E84  6ADA               	clrf	fsr2h,c
  8380   000E86  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8381   000E8A  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8382   000E8E  0E01               	movlw	1
  8383   000E90  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8384   000E92  0E00               	movlw	0
  8385   000E94  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8386   000E96  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8387   000E9A  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8388   000E9E                     	if	0	;tblptru may be non-zero
  8389   000E9E                     	endif
  8390   000E9E                     	if	0	;tblptru may be non-zero
  8391   000E9E                     	endif
  8392   000E9E  0008               	tblrd		*
  8393   000EA0  50F5               	movf	tablat,w,c
  8394   000EA2  0A6C               	xorlw	108
  8395   000EA4  A4D8               	btfss	status,2,c
  8396   000EA6  EF57  F007         	goto	u9221
  8397   000EAA  EF59  F007         	goto	u9220
  8398   000EAE                     u9221:
  8399   000EAE  EF7B  F007         	goto	l7574
  8400   000EB2                     u9220:
  8401   000EB2                     
  8402                           ; BSR set to: 0
  8403   000EB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8404   000EB4  6ED9               	movwf	fsr2l,c
  8405   000EB6  6ADA               	clrf	fsr2h,c
  8406   000EB8  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  8407   000EBC  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  8408   000EC0  0E02               	movlw	2
  8409   000EC2  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  8410   000EC4  0E00               	movlw	0
  8411   000EC6  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  8412   000EC8  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  8413   000ECC  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  8414   000ED0                     	if	0	;tblptru may be non-zero
  8415   000ED0                     	endif
  8416   000ED0                     	if	0	;tblptru may be non-zero
  8417   000ED0                     	endif
  8418   000ED0  0008               	tblrd		*
  8419   000ED2  50F5               	movf	tablat,w,c
  8420   000ED4  0A73               	xorlw	115
  8421   000ED6  A4D8               	btfss	status,2,c
  8422   000ED8  EF70  F007         	goto	u9231
  8423   000EDC  EF72  F007         	goto	u9230
  8424   000EE0                     u9231:
  8425   000EE0  EF7B  F007         	goto	l7574
  8426   000EE4                     u9230:
  8427   000EE4                     
  8428                           ; BSR set to: 0
  8429                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  8430   000EE4  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8431   000EE6  6ED9               	movwf	fsr2l,c
  8432   000EE8  6ADA               	clrf	fsr2h,c
  8433   000EEA  0E03               	movlw	3
  8434   000EEC  26DE               	addwf	postinc2,f,c
  8435   000EEE  0E00               	movlw	0
  8436   000EF0  22DD               	addwfc	postdec2,f,c
  8437   000EF2  EF2B  F007         	goto	l7562
  8438   000EF6                     l7574:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  8442   000EF6  51BF               	movf	vfpfcnvrt@done& (0+255),w,b
  8443   000EF8  B4D8               	btfsc	status,2,c
  8444   000EFA  EF81  F007         	goto	u9241
  8445   000EFE  EF83  F007         	goto	u9240
  8446   000F02                     u9241:
  8447   000F02  EF97  F007         	goto	l7580
  8448   000F06                     u9240:
  8449   000F06                     
  8450                           ; BSR set to: 0
  8451                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  8452   000F06  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  8453   000F0A  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8454   000F0E  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8455   000F10  6ED9               	movwf	fsr2l,c
  8456   000F12  6ADA               	clrf	fsr2h,c
  8457   000F14  0E02               	movlw	2
  8458   000F16  26DF               	addwf	indf2,f,c
  8459   000F18  5CDF               	subwf	indf2,w,c
  8460   000F1A  6ED9               	movwf	fsr2l,c
  8461   000F1C  6ADA               	clrf	fsr2h,c
  8462   000F1E  CFDE F012          	movff	postinc2,stoa@s
  8463   000F22  CFDE F013          	movff	postinc2,stoa@s+1
  8464   000F26  ECF1  F01C         	call	_stoa	;wreg free
  8465   000F2A  EF53  F008         	goto	l1560
  8466   000F2E                     l7580:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  8470   000F2E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8471   000F30  6ED9               	movwf	fsr2l,c
  8472   000F32  6ADA               	clrf	fsr2h,c
  8473   000F34  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  8474   000F38  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  8475   000F3C                     
  8476                           ; BSR set to: 0
  8477                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  8478   000F3C  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8479   000F40  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8480   000F44                     	if	0	;tblptru may be non-zero
  8481   000F44                     	endif
  8482   000F44                     	if	0	;tblptru may be non-zero
  8483   000F44                     	endif
  8484   000F44  0008               	tblrd		*
  8485   000F46  CFF5 F0C4          	movff	tablat,vfpfcnvrt@c
  8486                           
  8487                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  8488   000F4A  EFB3  F007         	goto	l7592
  8489   000F4E                     l7584:
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  8493   000F4E  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  8494   000F50  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  8495                           
  8496                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  8497   000F52  EFC2  F007         	goto	l7594
  8498   000F56                     l7586:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  8502   000F56  0E6C               	movlw	108
  8503   000F58  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8504                           
  8505                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  8506   000F5A  EFC2  F007         	goto	l7594
  8507   000F5E                     l7588:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  8511   000F5E  0E00               	movlw	0
  8512   000F60  6FC4               	movwf	vfpfcnvrt@c& (0+255),b
  8513                           
  8514                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  8515   000F62  EFC2  F007         	goto	l7594
  8516   000F66                     l7592:
  8517                           
  8518                           ; BSR set to: 0
  8519   000F66  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8520                           
  8521                           ; Switch size 1, requested type "simple"
  8522                           ; Number of cases is 3, Range of values is 76 to 108
  8523                           ; switch strategies available:
  8524                           ; Name         Instructions Cycles
  8525                           ; simple_byte           10     6 (average)
  8526                           ;	Chosen strategy is simple_byte
  8527   000F68  0A4C               	xorlw	76	; case 76
  8528   000F6A  B4D8               	btfsc	status,2,c
  8529   000F6C  EFA7  F007         	goto	l7584
  8530   000F70  0A2A               	xorlw	42	; case 102
  8531   000F72  B4D8               	btfsc	status,2,c
  8532   000F74  EFAB  F007         	goto	l7586
  8533   000F78  0A0A               	xorlw	10	; case 108
  8534   000F7A  B4D8               	btfsc	status,2,c
  8535   000F7C  EFA7  F007         	goto	l7584
  8536   000F80  EFAF  F007         	goto	l7588
  8537   000F84                     l7594:
  8538                           
  8539                           ; BSR set to: 0
  8540   000F84  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8541   000F88  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8542   000F8C                     	if	0	;tblptru may be non-zero
  8543   000F8C                     	endif
  8544   000F8C                     	if	0	;tblptru may be non-zero
  8545   000F8C                     	endif
  8546   000F8C  0008               	tblrd		*
  8547   000F8E  50F5               	movf	tablat,w,c
  8548   000F90  0A66               	xorlw	102
  8549   000F92  A4D8               	btfss	status,2,c
  8550   000F94  EFCE  F007         	goto	u9251
  8551   000F98  EFD0  F007         	goto	u9250
  8552   000F9C                     u9251:
  8553   000F9C  EF37  F008         	goto	l7614
  8554   000FA0                     u9250:
  8555   000FA0  EFFA  F007         	goto	l7602
  8556   000FA4                     l7596:
  8557                           
  8558                           ; BSR set to: 0
  8559                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  8560   000FA4  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8561   000FA6  6ED9               	movwf	fsr2l,c
  8562   000FA8  6ADA               	clrf	fsr2h,c
  8563   000FAA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8564   000FAE  0E04               	movlw	4
  8565   000FB0  26DF               	addwf	indf2,f,c
  8566   000FB2  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8567   000FB4  6ED9               	movwf	fsr2l,c
  8568   000FB6  6ADA               	clrf	fsr2h,c
  8569   000FB8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8570   000FBC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8571   000FC0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8572   000FC4  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8573                           
  8574                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  8575   000FC8  EF05  F008         	goto	l7604
  8576   000FCC                     l7598:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8580   000FCC  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  8581   000FCE  6ED9               	movwf	fsr2l,c
  8582   000FD0  6ADA               	clrf	fsr2h,c
  8583   000FD2  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  8584   000FD6  0E04               	movlw	4
  8585   000FD8  26DF               	addwf	indf2,f,c
  8586   000FDA  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  8587   000FDC  6ED9               	movwf	fsr2l,c
  8588   000FDE  6ADA               	clrf	fsr2h,c
  8589   000FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
  8590   000FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
  8591   000FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
  8592   000FEC  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
  8593                           
  8594                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  8595   000FF0  EF05  F008         	goto	l7604
  8596   000FF4                     l7602:
  8597                           
  8598                           ; BSR set to: 0
  8599   000FF4  51C4               	movf	vfpfcnvrt@c& (0+255),w,b
  8600                           
  8601                           ; Switch size 1, requested type "simple"
  8602                           ; Number of cases is 2, Range of values is 76 to 108
  8603                           ; switch strategies available:
  8604                           ; Name         Instructions Cycles
  8605                           ; simple_byte            7     4 (average)
  8606                           ;	Chosen strategy is simple_byte
  8607   000FF6  0A4C               	xorlw	76	; case 76
  8608   000FF8  B4D8               	btfsc	status,2,c
  8609   000FFA  EFE6  F007         	goto	l7598
  8610   000FFE  0A20               	xorlw	32	; case 108
  8611   001000  B4D8               	btfsc	status,2,c
  8612   001002  EFD2  F007         	goto	l7596
  8613   001006  EF05  F008         	goto	l7604
  8614   00100A                     l7604:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  8618   00100A  0E01               	movlw	1
  8619   00100C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8620   00100E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  8621   001010  0E00               	movlw	0
  8622   001012  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8623   001014  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8624   001016  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8625   001018  6ED9               	movwf	fsr2l,c
  8626   00101A  6ADA               	clrf	fsr2h,c
  8627   00101C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  8628   001020  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8629                           
  8630                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  8631   001024  EF2B  F008         	goto	l7612
  8632   001028                     l7606:
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8636   001028  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  8637   00102C  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8638   001030  C0C0  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  8639   001034  C0C1  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8640   001038  C0C2  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8641   00103C  C0C3  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8642   001040  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8643   001044  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8644   001048                     	if	0	;tblptru may be non-zero
  8645   001048                     	endif
  8646   001048                     	if	0	;tblptru may be non-zero
  8647   001048                     	endif
  8648   001048  0008               	tblrd		*
  8649   00104A  CFF5 F08A          	movff	tablat,efgtoa@c
  8650   00104E  ECA9  F000         	call	_efgtoa	;wreg free
  8651   001052  EF53  F008         	goto	l1560
  8652   001056                     l7612:
  8653                           
  8654                           ; BSR set to: 0
  8655   001056  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8656   00105A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8657   00105E                     	if	0	;tblptru may be non-zero
  8658   00105E                     	endif
  8659   00105E                     	if	0	;tblptru may be non-zero
  8660   00105E                     	endif
  8661   00105E  0008               	tblrd		*
  8662   001060  50F5               	movf	tablat,w,c
  8663                           
  8664                           ; Switch size 1, requested type "simple"
  8665                           ; Number of cases is 1, Range of values is 102 to 102
  8666                           ; switch strategies available:
  8667                           ; Name         Instructions Cycles
  8668                           ; simple_byte            4     3 (average)
  8669                           ;	Chosen strategy is simple_byte
  8670   001062  0A66               	xorlw	102	; case 102
  8671   001064  B4D8               	btfsc	status,2,c
  8672   001066  EF14  F008         	goto	l7606
  8673   00106A  EF37  F008         	goto	l7614
  8674   00106E                     l7614:
  8675                           
  8676                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  8677   00106E  0100               	movlb	0	; () banked
  8678   001070  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8679   001072  6ED9               	movwf	fsr2l,c
  8680   001074  6ADA               	clrf	fsr2h,c
  8681   001076  2ADE               	incf	postinc2,f,c
  8682   001078  0E00               	movlw	0
  8683   00107A  22DD               	addwfc	postdec2,f,c
  8684   00107C  EF53  F008         	goto	l1560
  8685   001080                     l7618:
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  8689   001080  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8690   001082  6ED9               	movwf	fsr2l,c
  8691   001084  6ADA               	clrf	fsr2h,c
  8692   001086  CFDE FFF6          	movff	postinc2,tblptrl
  8693   00108A  CFDD FFF7          	movff	postdec2,tblptrh
  8694   00108E                     	if	0	;tblptru may be non-zero
  8695   00108E                     	endif
  8696   00108E                     	if	0	;tblptru may be non-zero
  8697   00108E                     	endif
  8698   00108E  0008               	tblrd		*
  8699   001090  50F5               	movf	tablat,w,c
  8700   001092  6E07               	movwf	fputc@c^0,c
  8701   001094  6A08               	clrf	(fputc@c+1)^0,c
  8702   001096  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  8703   00109A  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8704   00109E  EC80  F023         	call	_fputc	;wreg free
  8705   0010A2  EF37  F008         	goto	l7614
  8706   0010A6                     l1560:
  8707   0010A6  0012               	return		;funcret
  8708   0010A8                     __end_of_vfpfcnvrt:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function _utoa *****************
  8712 ;; Defined at:
  8713 ;;		line 1001 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  8716 ;;		 -> NULL(0), sprintf@f(12), 
  8717 ;;  d               2   33[COMRAM] unsigned int 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  i               2   39[COMRAM] int 
  8720 ;;  p               2   37[COMRAM] int 
  8721 ;;  w               2   35[COMRAM] int 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;Total ram usage:       10 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 5
  8738 ;; This function calls:
  8739 ;;		___lwdiv
  8740 ;;		___lwmod
  8741 ;;		_pad
  8742 ;; This function is called by:
  8743 ;;		_vfpfcnvrt
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text30
  8748   004536                     __ptext30:
  8749                           	callstack 0
  8750   004536                     _utoa:
  8751                           	callstack 21
  8752   004536                     
  8753                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1001: static void utoa(FILE *fp, vf
      +                          pf_uint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1002: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 1003:     int i, w;;D:\MPLABX\Compiler\pic\sources\
      +                          c99\common\doprnt.c: 1005:  int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1
      +                          017:     p = (0 <= prec) ? prec : 1;
  8754   004536  BE58               	btfsc	(_prec+1)^0,7,c
  8755   004538  EFA2  F022         	goto	u8970
  8756   00453C  EFA0  F022         	goto	u8971
  8757   004540                     u8971:
  8758   004540  EFA8  F022         	goto	l1517
  8759   004544                     u8970:
  8760   004544  0E00               	movlw	0
  8761   004546  6E27               	movwf	(utoa@p+1)^0,c
  8762   004548  0E01               	movlw	1
  8763   00454A  6E26               	movwf	utoa@p^0,c
  8764   00454C  EFAC  F022         	goto	l1519
  8765   004550                     l1517:
  8766   004550  C057  F026         	movff	_prec,utoa@p
  8767   004554  C058  F027         	movff	_prec+1,utoa@p+1
  8768   004558                     l1519:
  8769                           
  8770                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1019:     w = width;
  8771   004558  C055  F024         	movff	_width,utoa@w
  8772   00455C  C056  F025         	movff	_width+1,utoa@w+1
  8773   004560                     
  8774                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1022:     i = sizeof(dbuf) - 1;
  8775   004560  0E00               	movlw	0
  8776   004562  6E29               	movwf	(utoa@i+1)^0,c
  8777   004564  0E4F               	movlw	79
  8778   004566  6E28               	movwf	utoa@i^0,c
  8779   004568                     
  8780                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i] = '\0';
  8781   004568  0E00               	movlw	0
  8782   00456A  0101               	movlb	1	; () banked
  8783   00456C  6F76               	movwf	(_dbuf+79)& (0+255),b
  8784                           
  8785                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8786   00456E  EFE3  F022         	goto	l7400
  8787   004572                     l7390:
  8788                           
  8789                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1033:     )) {;D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 1034:         --i;
  8790   004572  0628               	decf	utoa@i^0,f,c
  8791   004574  A0D8               	btfss	status,0,c
  8792   004576  0629               	decf	(utoa@i+1)^0,f,c
  8793   004578                     
  8794                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1035:         dbuf[i] = '0' + (d % 
      +                          10);
  8795   004578  0E27               	movlw	low _dbuf
  8796   00457A  2428               	addwf	utoa@i^0,w,c
  8797   00457C  6ED9               	movwf	fsr2l,c
  8798   00457E  0E01               	movlw	high _dbuf
  8799   004580  2029               	addwfc	(utoa@i+1)^0,w,c
  8800   004582  6EDA               	movwf	fsr2h,c
  8801   004584  C022  F006         	movff	utoa@d,___lwmod@dividend
  8802   004588  C023  F007         	movff	utoa@d+1,___lwmod@dividend+1
  8803   00458C  0E00               	movlw	0
  8804   00458E  6E09               	movwf	(___lwmod@divisor+1)^0,c
  8805   004590  0E0A               	movlw	10
  8806   004592  6E08               	movwf	___lwmod@divisor^0,c
  8807   004594  EC99  F026         	call	___lwmod	;wreg free
  8808   004598  5006               	movf	?___lwmod^0,w,c
  8809   00459A  0F30               	addlw	48
  8810   00459C  6EDF               	movwf	indf2,c
  8811   00459E                     
  8812                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1037:         --p;
  8813   00459E  0626               	decf	utoa@p^0,f,c
  8814   0045A0  A0D8               	btfss	status,0,c
  8815   0045A2  0627               	decf	(utoa@p+1)^0,f,c
  8816   0045A4                     
  8817                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1041:         --w;
  8818   0045A4  0624               	decf	utoa@w^0,f,c
  8819   0045A6  A0D8               	btfss	status,0,c
  8820   0045A8  0625               	decf	(utoa@w+1)^0,f,c
  8821   0045AA                     
  8822                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1042:         d = d / 10;
  8823   0045AA  C022  F006         	movff	utoa@d,___lwdiv@dividend
  8824   0045AE  C023  F007         	movff	utoa@d+1,___lwdiv@dividend+1
  8825   0045B2  0E00               	movlw	0
  8826   0045B4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  8827   0045B6  0E0A               	movlw	10
  8828   0045B8  6E08               	movwf	___lwdiv@divisor^0,c
  8829   0045BA  ECF3  F025         	call	___lwdiv	;wreg free
  8830   0045BE  C006  F022         	movff	?___lwdiv,utoa@d
  8831   0045C2  C007  F023         	movff	?___lwdiv+1,utoa@d+1
  8832   0045C6                     l7400:
  8833                           
  8834                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1024:     while (i && (d != 0
  8835   0045C6  5028               	movf	utoa@i^0,w,c
  8836   0045C8  1029               	iorwf	(utoa@i+1)^0,w,c
  8837   0045CA  B4D8               	btfsc	status,2,c
  8838   0045CC  EFEA  F022         	goto	u8981
  8839   0045D0  EFEC  F022         	goto	u8980
  8840   0045D4                     u8981:
  8841   0045D4  EF02  F023         	goto	l7406
  8842   0045D8                     u8980:
  8843   0045D8  5022               	movf	utoa@d^0,w,c
  8844   0045DA  1023               	iorwf	(utoa@d+1)^0,w,c
  8845   0045DC  A4D8               	btfss	status,2,c
  8846   0045DE  EFF3  F022         	goto	u8991
  8847   0045E2  EFF5  F022         	goto	u8990
  8848   0045E6                     u8991:
  8849   0045E6  EFB9  F022         	goto	l7390
  8850   0045EA                     u8990:
  8851   0045EA  BE27               	btfsc	(utoa@p+1)^0,7,c
  8852   0045EC  EF02  F023         	goto	u9000
  8853   0045F0  5027               	movf	(utoa@p+1)^0,w,c
  8854   0045F2  E106               	bnz	u9001
  8855   0045F4  0426               	decf	utoa@p^0,w,c
  8856   0045F6  B0D8               	btfsc	status,0,c
  8857   0045F8  EF00  F023         	goto	u9001
  8858   0045FC  EF02  F023         	goto	u9000
  8859   004600                     u9001:
  8860   004600  EFB9  F022         	goto	l7390
  8861   004604                     u9000:
  8862   004604                     l7406:
  8863                           
  8864                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1046:     return (void) pad(fp, &db
      +                          uf[i], w);
  8865   004604  C020  F017         	movff	utoa@fp,pad@fp
  8866   004608  C021  F018         	movff	utoa@fp+1,pad@fp+1
  8867   00460C  0E27               	movlw	low _dbuf
  8868   00460E  2428               	addwf	utoa@i^0,w,c
  8869   004610  6E19               	movwf	pad@buf^0,c
  8870   004612  0E01               	movlw	high _dbuf
  8871   004614  2029               	addwfc	(utoa@i+1)^0,w,c
  8872   004616  6E1A               	movwf	(pad@buf+1)^0,c
  8873   004618  C024  F01B         	movff	utoa@w,pad@p
  8874   00461C  C025  F01C         	movff	utoa@w+1,pad@p+1
  8875   004620  ECA4  F025         	call	_pad	;wreg free
  8876   004624  0012               	return		;funcret
  8877   004626                     __end_of_utoa:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function ___lwmod *****************
  8881 ;; Defined at:
  8882 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwmod.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  dividend        2    5[COMRAM] unsigned int 
  8885 ;;  divisor         2    7[COMRAM] unsigned int 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  counter         1    9[COMRAM] unsigned char 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  2    5[COMRAM] unsigned int 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;Total ram usage:        5 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 1
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_utoa
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911                           	psect	text31
  8912   004D32                     __ptext31:
  8913                           	callstack 0
  8914   004D32                     ___lwmod:
  8915                           	callstack 24
  8916   004D32  5008               	movf	___lwmod@divisor^0,w,c
  8917   004D34  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
  8918   004D36  B4D8               	btfsc	status,2,c
  8919   004D38  EFA0  F026         	goto	u8171
  8920   004D3C  EFA2  F026         	goto	u8170
  8921   004D40                     u8171:
  8922   004D40  EFC6  F026         	goto	l1211
  8923   004D44                     u8170:
  8924   004D44  0E01               	movlw	1
  8925   004D46  6E0A               	movwf	___lwmod@counter^0,c
  8926   004D48  EFAA  F026         	goto	l6974
  8927   004D4C                     l6972:
  8928   004D4C  90D8               	bcf	status,0,c
  8929   004D4E  3608               	rlcf	___lwmod@divisor^0,f,c
  8930   004D50  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
  8931   004D52  2A0A               	incf	___lwmod@counter^0,f,c
  8932   004D54                     l6974:
  8933   004D54  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
  8934   004D56  EFAF  F026         	goto	u8181
  8935   004D5A  EFB1  F026         	goto	u8180
  8936   004D5E                     u8181:
  8937   004D5E  EFA6  F026         	goto	l6972
  8938   004D62                     u8180:
  8939   004D62                     l6976:
  8940   004D62  5008               	movf	___lwmod@divisor^0,w,c
  8941   004D64  5C06               	subwf	___lwmod@dividend^0,w,c
  8942   004D66  5009               	movf	(___lwmod@divisor+1)^0,w,c
  8943   004D68  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
  8944   004D6A  A0D8               	btfss	status,0,c
  8945   004D6C  EFBA  F026         	goto	u8191
  8946   004D70  EFBC  F026         	goto	u8190
  8947   004D74                     u8191:
  8948   004D74  EFC0  F026         	goto	l6980
  8949   004D78                     u8190:
  8950   004D78  5008               	movf	___lwmod@divisor^0,w,c
  8951   004D7A  5E06               	subwf	___lwmod@dividend^0,f,c
  8952   004D7C  5009               	movf	(___lwmod@divisor+1)^0,w,c
  8953   004D7E  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
  8954   004D80                     l6980:
  8955   004D80  90D8               	bcf	status,0,c
  8956   004D82  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
  8957   004D84  3208               	rrcf	___lwmod@divisor^0,f,c
  8958   004D86  2E0A               	decfsz	___lwmod@counter^0,f,c
  8959   004D88  EFB1  F026         	goto	l6976
  8960   004D8C                     l1211:
  8961   004D8C  C006  F006         	movff	___lwmod@dividend,?___lwmod
  8962   004D90  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
  8963   004D94  0012               	return		;funcret
  8964   004D96                     __end_of___lwmod:
  8965                           	callstack 0
  8966                           
  8967 ;; *************** function ___lwdiv *****************
  8968 ;; Defined at:
  8969 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\lwdiv.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;  dividend        2    5[COMRAM] unsigned int 
  8972 ;;  divisor         2    7[COMRAM] unsigned int 
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;  quotient        2   10[COMRAM] unsigned int 
  8975 ;;  counter         1    9[COMRAM] unsigned char 
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  2    5[COMRAM] unsigned int 
  8978 ;; Registers used:
  8979 ;;		wreg, status,2, status,0
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;Total ram usage:        7 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 1
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_utoa
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text32
  9000   004BE6                     __ptext32:
  9001                           	callstack 0
  9002   004BE6                     ___lwdiv:
  9003                           	callstack 24
  9004   004BE6  0E00               	movlw	0
  9005   004BE8  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9006   004BEA  0E00               	movlw	0
  9007   004BEC  6E0B               	movwf	___lwdiv@quotient^0,c
  9008   004BEE  5008               	movf	___lwdiv@divisor^0,w,c
  9009   004BF0  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9010   004BF2  B4D8               	btfsc	status,2,c
  9011   004BF4  EFFE  F025         	goto	u8141
  9012   004BF8  EF00  F026         	goto	u8140
  9013   004BFC                     u8141:
  9014   004BFC  EF28  F026         	goto	l1201
  9015   004C00                     u8140:
  9016   004C00  0E01               	movlw	1
  9017   004C02  6E0A               	movwf	___lwdiv@counter^0,c
  9018   004C04  EF08  F026         	goto	l6954
  9019   004C08                     l6952:
  9020   004C08  90D8               	bcf	status,0,c
  9021   004C0A  3608               	rlcf	___lwdiv@divisor^0,f,c
  9022   004C0C  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9023   004C0E  2A0A               	incf	___lwdiv@counter^0,f,c
  9024   004C10                     l6954:
  9025   004C10  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  9026   004C12  EF0D  F026         	goto	u8151
  9027   004C16  EF0F  F026         	goto	u8150
  9028   004C1A                     u8151:
  9029   004C1A  EF04  F026         	goto	l6952
  9030   004C1E                     u8150:
  9031   004C1E                     l6956:
  9032   004C1E  90D8               	bcf	status,0,c
  9033   004C20  360B               	rlcf	___lwdiv@quotient^0,f,c
  9034   004C22  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9035   004C24  5008               	movf	___lwdiv@divisor^0,w,c
  9036   004C26  5C06               	subwf	___lwdiv@dividend^0,w,c
  9037   004C28  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9038   004C2A  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9039   004C2C  A0D8               	btfss	status,0,c
  9040   004C2E  EF1B  F026         	goto	u8161
  9041   004C32  EF1D  F026         	goto	u8160
  9042   004C36                     u8161:
  9043   004C36  EF22  F026         	goto	l6964
  9044   004C3A                     u8160:
  9045   004C3A  5008               	movf	___lwdiv@divisor^0,w,c
  9046   004C3C  5E06               	subwf	___lwdiv@dividend^0,f,c
  9047   004C3E  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  9048   004C40  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9049   004C42  800B               	bsf	___lwdiv@quotient^0,0,c
  9050   004C44                     l6964:
  9051   004C44  90D8               	bcf	status,0,c
  9052   004C46  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9053   004C48  3208               	rrcf	___lwdiv@divisor^0,f,c
  9054   004C4A  2E0A               	decfsz	___lwdiv@counter^0,f,c
  9055   004C4C  EF0F  F026         	goto	l6956
  9056   004C50                     l1201:
  9057   004C50  C00B  F006         	movff	___lwdiv@quotient,?___lwdiv
  9058   004C54  C00C  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9059   004C58  0012               	return		;funcret
  9060   004C5A                     __end_of___lwdiv:
  9061                           	callstack 0
  9062                           
  9063 ;; *************** function _stoa *****************
  9064 ;; Defined at:
  9065 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9068 ;;		 -> NULL(0), sprintf@f(12), 
  9069 ;;  s               2   17[COMRAM] PTR unsigned char 
  9070 ;;		 -> ?_printf(2), ?_sprintf(2), runUART@reversed(31), STR_24(1), 
  9071 ;;		 -> STR_23(6), STR_22(5), STR_21(4), STR_20(4), 
  9072 ;;		 -> STR_19(4), STR_18(5), STR_17(5), 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  l               2   27[COMRAM] int 
  9075 ;;  cp              2   25[COMRAM] PTR unsigned char 
  9076 ;;		 -> ?_printf(2), STR_40(7), ?_sprintf(2), runUART@reversed(31), 
  9077 ;;		 -> STR_24(1), STR_23(6), STR_22(5), STR_21(4), 
  9078 ;;		 -> STR_20(4), STR_19(4), STR_18(5), STR_17(5), 
  9079 ;;  w               2   23[COMRAM] int 
  9080 ;;  p               2   21[COMRAM] int 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;Total ram usage:       14 bytes
  9095 ;; Hardware stack levels used: 1
  9096 ;; Hardware stack levels required when called: 3
  9097 ;; This function calls:
  9098 ;;		_fputc
  9099 ;; This function is called by:
  9100 ;;		_vfpfcnvrt
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text33
  9105   0039E2                     __ptext33:
  9106                           	callstack 0
  9107   0039E2                     _stoa:
  9108                           	callstack 23
  9109   0039E2                     
  9110                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  9111   0039E2  C012  F01A         	movff	stoa@s,stoa@cp
  9112   0039E6  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  9113                           
  9114                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  9115   0039EA  501A               	movf	stoa@cp^0,w,c
  9116   0039EC  101B               	iorwf	(stoa@cp+1)^0,w,c
  9117   0039EE  A4D8               	btfss	status,2,c
  9118   0039F0  EFFC  F01C         	goto	u8861
  9119   0039F4  EFFE  F01C         	goto	u8860
  9120   0039F8                     u8861:
  9121   0039F8  EF02  F01D         	goto	l7348
  9122   0039FC                     u8860:
  9123   0039FC                     
  9124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  9125   0039FC  0EBF               	movlw	low STR_40
  9126   0039FE  6E1A               	movwf	stoa@cp^0,c
  9127   003A00  0EFF               	movlw	high STR_40
  9128   003A02  6E1B               	movwf	(stoa@cp+1)^0,c
  9129   003A04                     l7348:
  9130                           
  9131                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  9132   003A04  0E00               	movlw	0
  9133   003A06  6E1D               	movwf	(stoa@l+1)^0,c
  9134   003A08  0E00               	movlw	0
  9135   003A0A  6E1C               	movwf	stoa@l^0,c
  9136   003A0C  EF0A  F01D         	goto	l7352
  9137   003A10                     l7350:
  9138   003A10  4A1C               	infsnz	stoa@l^0,f,c
  9139   003A12  2A1D               	incf	(stoa@l+1)^0,f,c
  9140   003A14                     l7352:
  9141   003A14  501C               	movf	stoa@l^0,w,c
  9142   003A16  241A               	addwf	stoa@cp^0,w,c
  9143   003A18  6E14               	movwf	??_stoa^0,c
  9144   003A1A  501D               	movf	(stoa@l+1)^0,w,c
  9145   003A1C  201B               	addwfc	(stoa@cp+1)^0,w,c
  9146   003A1E  6E15               	movwf	(??_stoa+1)^0,c
  9147   003A20  C014  FFF6         	movff	??_stoa,tblptrl
  9148   003A24  C015  FFF7         	movff	??_stoa+1,tblptrh
  9149   003A28  0E00               	movlw	low (__mediumconst shr (0+16))
  9150   003A2A  6EF8               	movwf	tblptru,c
  9151   003A2C  0E0F               	movlw	(high __ramtop+-1)
  9152   003A2E  64F7               	cpfsgt	tblptrh,c
  9153   003A30  D003               	bra	u8877
  9154   003A32  0008               	tblrd		*
  9155   003A34  50F5               	movf	tablat,w,c
  9156   003A36  D005               	bra	u8870
  9157   003A38                     u8877:
  9158   003A38  CFF6 FFE1          	movff	tblptrl,fsr1l
  9159   003A3C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9160   003A40  50E7               	movf	indf1,w,c
  9161   003A42                     u8870:
  9162   003A42  0900               	iorlw	0
  9163   003A44  A4D8               	btfss	status,2,c
  9164   003A46  EF27  F01D         	goto	u8881
  9165   003A4A  EF29  F01D         	goto	u8880
  9166   003A4E                     u8881:
  9167   003A4E  EF08  F01D         	goto	l7350
  9168   003A52                     u8880:
  9169   003A52                     
  9170                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  9171   003A52  BE58               	btfsc	(_prec+1)^0,7,c
  9172   003A54  EF2E  F01D         	goto	u8891
  9173   003A58  EF30  F01D         	goto	u8890
  9174   003A5C                     u8891:
  9175   003A5C  EF43  F01D         	goto	l1501
  9176   003A60                     u8890:
  9177   003A60  501C               	movf	stoa@l^0,w,c
  9178   003A62  5C57               	subwf	_prec^0,w,c
  9179   003A64  5058               	movf	(_prec+1)^0,w,c
  9180   003A66  0A80               	xorlw	128
  9181   003A68  6E14               	movwf	??_stoa^0,c
  9182   003A6A  501D               	movf	(stoa@l+1)^0,w,c
  9183   003A6C  0A80               	xorlw	128
  9184   003A6E  5814               	subwfb	??_stoa^0,w,c
  9185   003A70  B0D8               	btfsc	status,0,c
  9186   003A72  EF3D  F01D         	goto	u8901
  9187   003A76  EF3F  F01D         	goto	u8900
  9188   003A7A                     u8901:
  9189   003A7A  EF43  F01D         	goto	l1501
  9190   003A7E                     u8900:
  9191   003A7E                     
  9192                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  9193   003A7E  C057  F01C         	movff	_prec,stoa@l
  9194   003A82  C058  F01D         	movff	_prec+1,stoa@l+1
  9195   003A86                     l1501:
  9196                           
  9197                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  9198   003A86  C01C  F016         	movff	stoa@l,stoa@p
  9199   003A8A  C01D  F017         	movff	stoa@l+1,stoa@p+1
  9200                           
  9201                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  9202   003A8E  C055  F018         	movff	_width,stoa@w
  9203   003A92  C056  F019         	movff	_width+1,stoa@w+1
  9204                           
  9205                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  9206   003A96  B059               	btfsc	_flags^0,0,c
  9207   003A98  EF50  F01D         	goto	u8911
  9208   003A9C  EF52  F01D         	goto	u8910
  9209   003AA0                     u8911:
  9210   003AA0  EF8E  F01D         	goto	l7372
  9211   003AA4                     u8910:
  9212   003AA4  EF60  F01D         	goto	l7366
  9213   003AA8                     l7362:
  9214                           
  9215                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  9216   003AA8  0E00               	movlw	0
  9217   003AAA  6E08               	movwf	(fputc@c+1)^0,c
  9218   003AAC  0E20               	movlw	32
  9219   003AAE  6E07               	movwf	fputc@c^0,c
  9220   003AB0  C010  F009         	movff	stoa@fp,fputc@fp
  9221   003AB4  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9222   003AB8  EC80  F023         	call	_fputc	;wreg free
  9223   003ABC                     
  9224                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  9225   003ABC  4A1C               	infsnz	stoa@l^0,f,c
  9226   003ABE  2A1D               	incf	(stoa@l+1)^0,f,c
  9227   003AC0                     l7366:
  9228                           
  9229                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  9230   003AC0  5018               	movf	stoa@w^0,w,c
  9231   003AC2  5C1C               	subwf	stoa@l^0,w,c
  9232   003AC4  501D               	movf	(stoa@l+1)^0,w,c
  9233   003AC6  0A80               	xorlw	128
  9234   003AC8  6E14               	movwf	??_stoa^0,c
  9235   003ACA  5019               	movf	(stoa@w+1)^0,w,c
  9236   003ACC  0A80               	xorlw	128
  9237   003ACE  5814               	subwfb	??_stoa^0,w,c
  9238   003AD0  A0D8               	btfss	status,0,c
  9239   003AD2  EF6D  F01D         	goto	u8921
  9240   003AD6  EF6F  F01D         	goto	u8920
  9241   003ADA                     u8921:
  9242   003ADA  EF54  F01D         	goto	l7362
  9243   003ADE                     u8920:
  9244   003ADE  EF8E  F01D         	goto	l7372
  9245   003AE2                     l7368:
  9246                           
  9247                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  9248   003AE2  C01A  FFF6         	movff	stoa@cp,tblptrl
  9249   003AE6  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  9250   003AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  9251   003AEC  6EF8               	movwf	tblptru,c
  9252   003AEE  0E0F               	movlw	(high __ramtop+-1)
  9253   003AF0  64F7               	cpfsgt	tblptrh,c
  9254   003AF2  D003               	bra	u8937
  9255   003AF4  0008               	tblrd		*
  9256   003AF6  50F5               	movf	tablat,w,c
  9257   003AF8  D005               	bra	u8930
  9258   003AFA                     u8937:
  9259   003AFA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9260   003AFE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9261   003B02  50E7               	movf	indf1,w,c
  9262   003B04                     u8930:
  9263   003B04  6E14               	movwf	??_stoa^0,c
  9264   003B06  5014               	movf	??_stoa^0,w,c
  9265   003B08  6E07               	movwf	fputc@c^0,c
  9266   003B0A  6A08               	clrf	(fputc@c+1)^0,c
  9267   003B0C  C010  F009         	movff	stoa@fp,fputc@fp
  9268   003B10  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9269   003B14  EC80  F023         	call	_fputc	;wreg free
  9270   003B18                     
  9271                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  9272   003B18  4A1A               	infsnz	stoa@cp^0,f,c
  9273   003B1A  2A1B               	incf	(stoa@cp+1)^0,f,c
  9274   003B1C                     l7372:
  9275                           
  9276                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  9277   003B1C  0616               	decf	stoa@p^0,f,c
  9278   003B1E  A0D8               	btfss	status,0,c
  9279   003B20  0617               	decf	(stoa@p+1)^0,f,c
  9280   003B22  2816               	incf	stoa@p^0,w,c
  9281   003B24  E106               	bnz	u8941
  9282   003B26  2817               	incf	(stoa@p+1)^0,w,c
  9283   003B28  A4D8               	btfss	status,2,c
  9284   003B2A  EF99  F01D         	goto	u8941
  9285   003B2E  EF9B  F01D         	goto	u8940
  9286   003B32                     u8941:
  9287   003B32  EF71  F01D         	goto	l7368
  9288   003B36                     u8940:
  9289   003B36                     
  9290                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  9291   003B36  A059               	btfss	_flags^0,0,c
  9292   003B38  EFA0  F01D         	goto	u8951
  9293   003B3C  EFA2  F01D         	goto	u8950
  9294   003B40                     u8951:
  9295   003B40  EFBF  F01D         	goto	l1513
  9296   003B44                     u8950:
  9297   003B44  EFB0  F01D         	goto	l7380
  9298   003B48                     l7376:
  9299                           
  9300                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  9301   003B48  0E00               	movlw	0
  9302   003B4A  6E08               	movwf	(fputc@c+1)^0,c
  9303   003B4C  0E20               	movlw	32
  9304   003B4E  6E07               	movwf	fputc@c^0,c
  9305   003B50  C010  F009         	movff	stoa@fp,fputc@fp
  9306   003B54  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  9307   003B58  EC80  F023         	call	_fputc	;wreg free
  9308   003B5C                     
  9309                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  9310   003B5C  4A1C               	infsnz	stoa@l^0,f,c
  9311   003B5E  2A1D               	incf	(stoa@l+1)^0,f,c
  9312   003B60                     l7380:
  9313                           
  9314                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  9315   003B60  5018               	movf	stoa@w^0,w,c
  9316   003B62  5C1C               	subwf	stoa@l^0,w,c
  9317   003B64  501D               	movf	(stoa@l+1)^0,w,c
  9318   003B66  0A80               	xorlw	128
  9319   003B68  6E14               	movwf	??_stoa^0,c
  9320   003B6A  5019               	movf	(stoa@w+1)^0,w,c
  9321   003B6C  0A80               	xorlw	128
  9322   003B6E  5814               	subwfb	??_stoa^0,w,c
  9323   003B70  A0D8               	btfss	status,0,c
  9324   003B72  EFBD  F01D         	goto	u8961
  9325   003B76  EFBF  F01D         	goto	u8960
  9326   003B7A                     u8961:
  9327   003B7A  EFA4  F01D         	goto	l7376
  9328   003B7E                     u8960:
  9329   003B7E                     l1513:
  9330   003B7E  0012               	return		;funcret
  9331   003B80                     __end_of_stoa:
  9332                           	callstack 0
  9333                           
  9334 ;; *************** function _read_prec_or_width *****************
  9335 ;; Defined at:
  9336 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  9339 ;;		 -> vfprintf@cfmt(2), 
  9340 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  9341 ;;		 -> printf@ap(1), sprintf@ap(1), 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;  c               1   13[COMRAM] unsigned char 
  9344 ;;  n               2   14[COMRAM] int 
  9345 ;; Return value:  Size  Location     Type
  9346 ;;                  2   11[COMRAM] int 
  9347 ;; Registers used:
  9348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9349 ;; Tracked objects:
  9350 ;;		On entry : 0/0
  9351 ;;		On exit  : 0/0
  9352 ;;		Unchanged: 0/0
  9353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;Total ram usage:        5 bytes
  9359 ;; Hardware stack levels used: 1
  9360 ;; Hardware stack levels required when called: 2
  9361 ;; This function calls:
  9362 ;;		___wmul
  9363 ;; This function is called by:
  9364 ;;		_vfpfcnvrt
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text34
  9369   0049F0                     __ptext34:
  9370                           	callstack 0
  9371   0049F0                     _read_prec_or_width:
  9372                           	callstack 24
  9373   0049F0                     
  9374                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  9375   0049F0  0E00               	movlw	0
  9376   0049F2  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9377   0049F4  0E00               	movlw	0
  9378   0049F6  6E0F               	movwf	read_prec_or_width@n^0,c
  9379   0049F8                     
  9380                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  9381   0049F8  500C               	movf	read_prec_or_width@fmt^0,w,c
  9382   0049FA  6ED9               	movwf	fsr2l,c
  9383   0049FC  6ADA               	clrf	fsr2h,c
  9384   0049FE  CFDE FFF6          	movff	postinc2,tblptrl
  9385   004A02  CFDD FFF7          	movff	postdec2,tblptrh
  9386   004A06                     	if	0	;tblptru may be non-zero
  9387   004A06                     	endif
  9388   004A06                     	if	0	;tblptru may be non-zero
  9389   004A06                     	endif
  9390   004A06  0008               	tblrd		*
  9391   004A08  50F5               	movf	tablat,w,c
  9392   004A0A  0A2A               	xorlw	42
  9393   004A0C  A4D8               	btfss	status,2,c
  9394   004A0E  EF0B  F025         	goto	u9011
  9395   004A12  EF0D  F025         	goto	u9010
  9396   004A16                     u9011:
  9397   004A16  EF37  F025         	goto	l7422
  9398   004A1A                     u9010:
  9399   004A1A                     
  9400                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  9401   004A1A  500C               	movf	read_prec_or_width@fmt^0,w,c
  9402   004A1C  6ED9               	movwf	fsr2l,c
  9403   004A1E  6ADA               	clrf	fsr2h,c
  9404   004A20  2ADE               	incf	postinc2,f,c
  9405   004A22  0E00               	movlw	0
  9406   004A24  22DD               	addwfc	postdec2,f,c
  9407   004A26                     
  9408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  9409   004A26  500D               	movf	read_prec_or_width@ap^0,w,c
  9410   004A28  6ED9               	movwf	fsr2l,c
  9411   004A2A  6ADA               	clrf	fsr2h,c
  9412   004A2C  0E02               	movlw	2
  9413   004A2E  26DF               	addwf	indf2,f,c
  9414   004A30  5CDF               	subwf	indf2,w,c
  9415   004A32  6ED9               	movwf	fsr2l,c
  9416   004A34  6ADA               	clrf	fsr2h,c
  9417   004A36  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  9418   004A3A  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  9419                           
  9420                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  9421   004A3E  EF4A  F025         	goto	l1529
  9422   004A42                     l7418:
  9423                           
  9424                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  9425   004A42  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  9426   004A46  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  9427   004A4A  0E00               	movlw	0
  9428   004A4C  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  9429   004A4E  0E0A               	movlw	10
  9430   004A50  6E08               	movwf	___wmul@multiplicand^0,c
  9431   004A52  ECDA  F028         	call	___wmul	;wreg free
  9432   004A56  500E               	movf	read_prec_or_width@c^0,w,c
  9433   004A58  2406               	addwf	?___wmul^0,w,c
  9434   004A5A  6E0F               	movwf	read_prec_or_width@n^0,c
  9435   004A5C  0E00               	movlw	0
  9436   004A5E  2007               	addwfc	(?___wmul+1)^0,w,c
  9437   004A60  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  9438   004A62                     
  9439                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  9440   004A62  500C               	movf	read_prec_or_width@fmt^0,w,c
  9441   004A64  6ED9               	movwf	fsr2l,c
  9442   004A66  6ADA               	clrf	fsr2h,c
  9443   004A68  2ADE               	incf	postinc2,f,c
  9444   004A6A  0E00               	movlw	0
  9445   004A6C  22DD               	addwfc	postdec2,f,c
  9446   004A6E                     l7422:
  9447                           
  9448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  9449   004A6E  500C               	movf	read_prec_or_width@fmt^0,w,c
  9450   004A70  6ED9               	movwf	fsr2l,c
  9451   004A72  6ADA               	clrf	fsr2h,c
  9452   004A74  CFDE FFF6          	movff	postinc2,tblptrl
  9453   004A78  CFDD FFF7          	movff	postdec2,tblptrh
  9454   004A7C                     	if	0	;tblptru may be non-zero
  9455   004A7C                     	endif
  9456   004A7C                     	if	0	;tblptru may be non-zero
  9457   004A7C                     	endif
  9458   004A7C  0008               	tblrd		*
  9459   004A7E  50F5               	movf	tablat,w,c
  9460   004A80  0FD0               	addlw	208
  9461   004A82  6E0E               	movwf	read_prec_or_width@c^0,c
  9462   004A84  0E09               	movlw	9
  9463   004A86  640E               	cpfsgt	read_prec_or_width@c^0,c
  9464   004A88  EF48  F025         	goto	u9021
  9465   004A8C  EF4A  F025         	goto	u9020
  9466   004A90                     u9021:
  9467   004A90  EF21  F025         	goto	l7418
  9468   004A94                     u9020:
  9469   004A94                     l1529:
  9470                           
  9471                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  9472   004A94  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  9473   004A98  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  9474   004A9C  0012               	return		;funcret
  9475   004A9E                     __end_of_read_prec_or_width:
  9476                           	callstack 0
  9477                           
  9478 ;; *************** function ___wmul *****************
  9479 ;; Defined at:
  9480 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  multiplier      2    5[COMRAM] unsigned int 
  9483 ;;  multiplicand    2    7[COMRAM] unsigned int 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  product         2    9[COMRAM] unsigned int 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  2    5[COMRAM] unsigned int 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0, prodl, prodh
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;Total ram usage:        6 bytes
  9500 ;; Hardware stack levels used: 1
  9501 ;; Hardware stack levels required when called: 1
  9502 ;; This function calls:
  9503 ;;		Nothing
  9504 ;; This function is called by:
  9505 ;;		_read_prec_or_width
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text35
  9510   0051B4                     __ptext35:
  9511                           	callstack 0
  9512   0051B4                     ___wmul:
  9513                           	callstack 24
  9514   0051B4  5006               	movf	___wmul@multiplier^0,w,c
  9515   0051B6  0208               	mulwf	___wmul@multiplicand^0,c
  9516   0051B8  CFF3 F00A          	movff	prodl,___wmul@product
  9517   0051BC  CFF4 F00B          	movff	prodh,___wmul@product+1
  9518   0051C0  5006               	movf	___wmul@multiplier^0,w,c
  9519   0051C2  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  9520   0051C4  50F3               	movf	243,w,c
  9521   0051C6  260B               	addwf	(___wmul@product+1)^0,f,c
  9522   0051C8  5007               	movf	(___wmul@multiplier+1)^0,w,c
  9523   0051CA  0208               	mulwf	___wmul@multiplicand^0,c
  9524   0051CC  50F3               	movf	243,w,c
  9525   0051CE  260B               	addwf	(___wmul@product+1)^0,f,c
  9526   0051D0  C00A  F006         	movff	___wmul@product,?___wmul
  9527   0051D4  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  9528   0051D8  0012               	return		;funcret
  9529   0051DA                     __end_of___wmul:
  9530                           	callstack 0
  9531                           
  9532 ;; *************** function _efgtoa *****************
  9533 ;; Defined at:
  9534 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  9537 ;;		 -> NULL(0), sprintf@f(12), 
  9538 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  9539 ;;  c               1   42[BANK0 ] unsigned char 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;  u               4   85[BANK0 ] struct flui
  9542 ;;  g               4   79[BANK0 ] struct flui
  9543 ;;  l               4   74[BANK0 ] struct flui
  9544 ;;  h               4   70[BANK0 ] struct flui
  9545 ;;  ou              4   64[BANK0 ] struct flui
  9546 ;;  n               2   83[BANK0 ] int 
  9547 ;;  i               2   68[BANK0 ] int 
  9548 ;;  w               2   62[BANK0 ] int 
  9549 ;;  e               2   60[BANK0 ] int 
  9550 ;;  m               2   58[BANK0 ] int 
  9551 ;;  d               2   56[BANK0 ] int 
  9552 ;;  t               2   49[BANK0 ] int 
  9553 ;;  p               2   47[BANK0 ] int 
  9554 ;;  ne              2   45[BANK0 ] int 
  9555 ;;  sign            1   78[BANK0 ] unsigned char 
  9556 ;;  nmode           1   55[BANK0 ] unsigned char 
  9557 ;;  mode            1   54[BANK0 ] unsigned char 
  9558 ;;  pp              1   53[BANK0 ] unsigned char 
  9559 ;;  esign           1    0        unsigned char 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      void 
  9562 ;; Registers used:
  9563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9569 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9570 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;Total ram usage:       53 bytes
  9574 ;; Hardware stack levels used: 1
  9575 ;; Hardware stack levels required when called: 5
  9576 ;; This function calls:
  9577 ;;		___fladd
  9578 ;;		___fldiv
  9579 ;;		___fleq
  9580 ;;		___flge
  9581 ;;		___flmul
  9582 ;;		___flneg
  9583 ;;		___flsub
  9584 ;;		___fltol
  9585 ;;		___fpclassifyf
  9586 ;;		_floorf
  9587 ;;		_labs
  9588 ;;		_memcpy
  9589 ;;		_pad
  9590 ;;		_strcpy
  9591 ;; This function is called by:
  9592 ;;		_vfpfcnvrt
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text36
  9597   000152                     __ptext36:
  9598                           	callstack 0
  9599   000152                     _efgtoa:
  9600                           	callstack 21
  9601   000152                     
  9602                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  9603   000152  0E00               	movlw	0
  9604   000154  0100               	movlb	0	; () banked
  9605   000156  6FAE               	movwf	efgtoa@sign& (0+255),b
  9606   000158                     
  9607                           ; BSR set to: 0
  9608                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  9609   000158  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  9610   00015C  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  9611   000160  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  9612   000164  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  9613   000168                     
  9614                           ; BSR set to: 0
  9615                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  9616   000168  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  9617   00016A  EFBB  F000         	goto	u8540
  9618   00016E  EFB9  F000         	goto	u8541
  9619   000172                     u8541:
  9620   000172  EFCF  F000         	goto	l7132
  9621   000176                     u8540:
  9622   000176                     
  9623                           ; BSR set to: 0
  9624                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  9625   000176  0E01               	movlw	1
  9626   000178  6FAE               	movwf	efgtoa@sign& (0+255),b
  9627   00017A                     
  9628                           ; BSR set to: 0
  9629                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  9630   00017A  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  9631   00017E  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  9632   000182  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  9633   000186  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  9634   00018A  EC23  F028         	call	___flneg	;wreg free
  9635   00018E  C080  F0AF         	movff	?___flneg,efgtoa@g
  9636   000192  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  9637   000196  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  9638   00019A  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  9639   00019E                     l7132:
  9640                           
  9641                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  9642   00019E  0E00               	movlw	0
  9643   0001A0  0100               	movlb	0	; () banked
  9644   0001A2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9645   0001A4  0E00               	movlw	0
  9646   0001A6  6FB3               	movwf	efgtoa@n& (0+255),b
  9647   0001A8                     
  9648                           ; BSR set to: 0
  9649                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  9650   0001A8  C055  F09E         	movff	_width,efgtoa@w
  9651   0001AC  C056  F09F         	movff	_width+1,efgtoa@w+1
  9652   0001B0                     
  9653                           ; BSR set to: 0
  9654                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  9655   0001B0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9656   0001B2  B4D8               	btfsc	status,2,c
  9657   0001B4  EFDE  F000         	goto	u8551
  9658   0001B8  EFE0  F000         	goto	u8550
  9659   0001BC                     u8551:
  9660   0001BC  EFF4  F000         	goto	l7146
  9661   0001C0                     u8550:
  9662   0001C0                     
  9663                           ; BSR set to: 0
  9664                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  9665   0001C0  51AE               	movf	efgtoa@sign& (0+255),w,b
  9666   0001C2  A4D8               	btfss	status,2,c
  9667   0001C4  EFE6  F000         	goto	u8561
  9668   0001C8  EFE8  F000         	goto	u8560
  9669   0001CC                     u8561:
  9670   0001CC  EFEE  F000         	goto	l7142
  9671   0001D0                     u8560:
  9672   0001D0                     
  9673                           ; BSR set to: 0
  9674   0001D0  0E00               	movlw	0
  9675   0001D2  6F94               	movwf	(_efgtoa$4068+1)& (0+255),b
  9676   0001D4  0E2B               	movlw	43
  9677   0001D6  6F93               	movwf	_efgtoa$4068& (0+255),b
  9678   0001D8  EFF2  F000         	goto	l7144
  9679   0001DC                     l7142:
  9680                           
  9681                           ; BSR set to: 0
  9682   0001DC  0E00               	movlw	0
  9683   0001DE  6F94               	movwf	(_efgtoa$4068+1)& (0+255),b
  9684   0001E0  0E2D               	movlw	45
  9685   0001E2  6F93               	movwf	_efgtoa$4068& (0+255),b
  9686   0001E4                     l7144:
  9687                           
  9688                           ; BSR set to: 0
  9689   0001E4  C093  F0AE         	movff	_efgtoa$4068,efgtoa@sign
  9690   0001E8                     l7146:
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  9694   0001E8  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9695   0001EC  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9696   0001F0  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9697   0001F4  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9698   0001F8  EC1C  F022         	call	___fpclassifyf	;wreg free
  9699   0001FC  0406               	decf	?___fpclassifyf^0,w,c
  9700   0001FE  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9701   000200  A4D8               	btfss	status,2,c
  9702   000202  EF05  F001         	goto	u8571
  9703   000206  EF07  F001         	goto	u8570
  9704   00020A                     u8571:
  9705   00020A  EF3A  F001         	goto	l7164
  9706   00020E                     u8570:
  9707   00020E                     
  9708                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  9709   00020E  0100               	movlb	0	; () banked
  9710   000210  51AE               	movf	efgtoa@sign& (0+255),w,b
  9711   000212  B4D8               	btfsc	status,2,c
  9712   000214  EF0E  F001         	goto	u8581
  9713   000218  EF10  F001         	goto	u8580
  9714   00021C                     u8581:
  9715   00021C  EF19  F001         	goto	l7156
  9716   000220                     u8580:
  9717   000220                     
  9718                           ; BSR set to: 0
  9719                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  9720   000220  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9721   000224                     
  9722                           ; BSR set to: 0
  9723                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  9724   000224  079E               	decf	efgtoa@w& (0+255),f,b
  9725   000226  A0D8               	btfss	status,0,c
  9726   000228  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9727   00022A                     
  9728                           ; BSR set to: 0
  9729                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  9730   00022A  0E00               	movlw	0
  9731   00022C  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9732   00022E  0E01               	movlw	1
  9733   000230  6FB3               	movwf	efgtoa@n& (0+255),b
  9734   000232                     l7156:
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  9738   000232  0E27               	movlw	low _dbuf
  9739   000234  25B3               	addwf	efgtoa@n& (0+255),w,b
  9740   000236  6E06               	movwf	strcpy@dest^0,c
  9741   000238  0E01               	movlw	high _dbuf
  9742   00023A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9743   00023C  6E07               	movwf	(strcpy@dest+1)^0,c
  9744   00023E  0EEB               	movlw	low STR_34
  9745   000240  6E08               	movwf	strcpy@src^0,c
  9746   000242  0EFF               	movlw	high STR_34
  9747   000244  6E09               	movwf	(strcpy@src+1)^0,c
  9748   000246  EC40  F028         	call	_strcpy	;wreg free
  9749   00024A                     l7158:
  9750                           
  9751                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9752   00024A  0100               	movlb	0	; () banked
  9753   00024C  0EFD               	movlw	253
  9754   00024E  279E               	addwf	efgtoa@w& (0+255),f,b
  9755   000250  0EFF               	movlw	255
  9756   000252  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9757   000254                     
  9758                           ; BSR set to: 0
  9759                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  9760   000254  C084  F017         	movff	efgtoa@fp,pad@fp
  9761   000258  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  9762   00025C  0E27               	movlw	low _dbuf
  9763   00025E  6E19               	movwf	pad@buf^0,c
  9764   000260  0E01               	movlw	high _dbuf
  9765   000262  6E1A               	movwf	(pad@buf+1)^0,c
  9766   000264  C09E  F01B         	movff	efgtoa@w,pad@p
  9767   000268  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  9768   00026C  ECA4  F025         	call	_pad	;wreg free
  9769   000270  EFA5  F005         	goto	l1452
  9770   000274                     l7164:
  9771                           
  9772                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  9773   000274  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  9774   000278  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9775   00027C  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9776   000280  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9777   000284  EC1C  F022         	call	___fpclassifyf	;wreg free
  9778   000288  5006               	movf	?___fpclassifyf^0,w,c
  9779   00028A  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  9780   00028C  A4D8               	btfss	status,2,c
  9781   00028E  EF4B  F001         	goto	u8591
  9782   000292  EF4D  F001         	goto	u8590
  9783   000296                     u8591:
  9784   000296  EF6D  F001         	goto	l7182
  9785   00029A                     u8590:
  9786   00029A                     
  9787                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  9788   00029A  0100               	movlb	0	; () banked
  9789   00029C  51AE               	movf	efgtoa@sign& (0+255),w,b
  9790   00029E  B4D8               	btfsc	status,2,c
  9791   0002A0  EF54  F001         	goto	u8601
  9792   0002A4  EF56  F001         	goto	u8600
  9793   0002A8                     u8601:
  9794   0002A8  EF5F  F001         	goto	l7174
  9795   0002AC                     u8600:
  9796   0002AC                     
  9797                           ; BSR set to: 0
  9798                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  9799   0002AC  C0AE  F127         	movff	efgtoa@sign,_dbuf
  9800   0002B0                     
  9801                           ; BSR set to: 0
  9802                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  9803   0002B0  079E               	decf	efgtoa@w& (0+255),f,b
  9804   0002B2  A0D8               	btfss	status,0,c
  9805   0002B4  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  9806   0002B6                     
  9807                           ; BSR set to: 0
  9808                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  9809   0002B6  0E00               	movlw	0
  9810   0002B8  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  9811   0002BA  0E01               	movlw	1
  9812   0002BC  6FB3               	movwf	efgtoa@n& (0+255),b
  9813   0002BE                     l7174:
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  9817   0002BE  0E27               	movlw	low _dbuf
  9818   0002C0  25B3               	addwf	efgtoa@n& (0+255),w,b
  9819   0002C2  6E06               	movwf	strcpy@dest^0,c
  9820   0002C4  0E01               	movlw	high _dbuf
  9821   0002C6  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9822   0002C8  6E07               	movwf	(strcpy@dest+1)^0,c
  9823   0002CA  0EEF               	movlw	low STR_37
  9824   0002CC  6E08               	movwf	strcpy@src^0,c
  9825   0002CE  0EFF               	movlw	high STR_37
  9826   0002D0  6E09               	movwf	(strcpy@src+1)^0,c
  9827   0002D2  EC40  F028         	call	_strcpy	;wreg free
  9828   0002D6  EF25  F001         	goto	l7158
  9829   0002DA                     l7182:
  9830                           
  9831                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9832   0002DA  0E00               	movlw	0
  9833   0002DC  0100               	movlb	0	; () banked
  9834   0002DE  6FB5               	movwf	efgtoa@u& (0+255),b
  9835   0002E0  0E00               	movlw	0
  9836   0002E2  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  9837   0002E4  0E80               	movlw	128
  9838   0002E6  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  9839   0002E8  0E3F               	movlw	63
  9840   0002EA  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  9841                           
  9842                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9843   0002EC  0E00               	movlw	0
  9844   0002EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  9845   0002F0  0E00               	movlw	0
  9846   0002F2  6F9C               	movwf	efgtoa@e& (0+255),b
  9847   0002F4                     
  9848                           ; BSR set to: 0
  9849                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  9850   0002F4  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  9851   0002F8  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  9852   0002FC  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  9853   000300  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  9854   000304  0E00               	movlw	0
  9855   000306  6E0A               	movwf	___fleq@ff2^0,c
  9856   000308  0E00               	movlw	0
  9857   00030A  6E0B               	movwf	(___fleq@ff2+1)^0,c
  9858   00030C  0E00               	movlw	0
  9859   00030E  6E0C               	movwf	(___fleq@ff2+2)^0,c
  9860   000310  0E00               	movlw	0
  9861   000312  6E0D               	movwf	(___fleq@ff2+3)^0,c
  9862   000314  EC4F  F025         	call	___fleq	;wreg free
  9863   000318  B0D8               	btfsc	status,0,c
  9864   00031A  EF91  F001         	goto	u8611
  9865   00031E  EF93  F001         	goto	u8610
  9866   000322                     u8611:
  9867   000322  EF72  F002         	goto	l1455
  9868   000326                     u8610:
  9869   000326  EFA0  F001         	goto	l7190
  9870   00032A                     l1457:
  9871                           
  9872                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9873   00032A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  9874   00032E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  9875   000332  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  9876   000336  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  9877   00033A                     
  9878                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9879   00033A  0100               	movlb	0	; () banked
  9880   00033C  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  9881   00033E  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  9882   000340                     l7190:
  9883                           
  9884                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9885   000340  C0B5  F014         	movff	efgtoa@u,___flmul@b
  9886   000344  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  9887   000348  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  9888   00034C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  9889   000350  0E00               	movlw	0
  9890   000352  6E18               	movwf	___flmul@a^0,c
  9891   000354  0E00               	movlw	0
  9892   000356  6E19               	movwf	(___flmul@a+1)^0,c
  9893   000358  0E20               	movlw	32
  9894   00035A  6E1A               	movwf	(___flmul@a+2)^0,c
  9895   00035C  0E41               	movlw	65
  9896   00035E  6E1B               	movwf	(___flmul@a+3)^0,c
  9897   000360  EC3A  F00D         	call	___flmul	;wreg free
  9898   000364  C014  F0A0         	movff	?___flmul,efgtoa@ou
  9899   000368  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  9900   00036C  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  9901   000370  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  9902   000374  0100               	movlb	0	; () banked
  9903   000376  51A0               	movf	efgtoa@ou& (0+255),w,b
  9904   000378  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9905   00037A  6E06               	movwf	labs@a^0,c
  9906   00037C  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  9907   00037E  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9908   000380  6E07               	movwf	(labs@a+1)^0,c
  9909   000382  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  9910   000384  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9911   000386  6E08               	movwf	(labs@a+2)^0,c
  9912   000388  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  9913   00038A  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9914   00038C  6E09               	movwf	(labs@a+3)^0,c
  9915   00038E  ECF9  F026         	call	_labs	;wreg free
  9916   000392  BE09               	btfsc	(?_labs+3)^0,7,c
  9917   000394  EFD7  F001         	goto	u8621
  9918   000398  5009               	movf	(?_labs+3)^0,w,c
  9919   00039A  1008               	iorwf	(?_labs+2)^0,w,c
  9920   00039C  1007               	iorwf	(?_labs+1)^0,w,c
  9921   00039E  E109               	bnz	u8620
  9922   0003A0  0E02               	movlw	2
  9923   0003A2  5C06               	subwf	?_labs^0,w,c
  9924   0003A4  A0D8               	btfss	status,0,c
  9925   0003A6  EFD7  F001         	goto	u8621
  9926   0003AA  EFD9  F001         	goto	u8620
  9927   0003AE                     u8621:
  9928   0003AE  EF95  F001         	goto	l1457
  9929   0003B2                     u8620:
  9930   0003B2  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  9931   0003B6  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  9932   0003BA  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  9933   0003BE  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  9934   0003C2  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  9935   0003C6  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  9936   0003CA  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  9937   0003CE  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  9938   0003D2  EC9A  F021         	call	___flge	;wreg free
  9939   0003D6  A0D8               	btfss	status,0,c
  9940   0003D8  EFF0  F001         	goto	u8631
  9941   0003DC  EFF2  F001         	goto	u8630
  9942   0003E0                     u8631:
  9943   0003E0  EF95  F001         	goto	l1457
  9944   0003E4                     u8630:
  9945   0003E4                     
  9946                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  9947   0003E4  0100               	movlb	0	; () banked
  9948   0003E6  51B5               	movf	efgtoa@u& (0+255),w,b
  9949   0003E8  5DAF               	subwf	efgtoa@g& (0+255),w,b
  9950   0003EA  6E06               	movwf	labs@a^0,c
  9951   0003EC  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  9952   0003EE  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  9953   0003F0  6E07               	movwf	(labs@a+1)^0,c
  9954   0003F2  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  9955   0003F4  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  9956   0003F6  6E08               	movwf	(labs@a+2)^0,c
  9957   0003F8  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  9958   0003FA  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  9959   0003FC  6E09               	movwf	(labs@a+3)^0,c
  9960   0003FE  ECF9  F026         	call	_labs	;wreg free
  9961   000402  BE09               	btfsc	(?_labs+3)^0,7,c
  9962   000404  EF11  F002         	goto	u8640
  9963   000408  5009               	movf	(?_labs+3)^0,w,c
  9964   00040A  1008               	iorwf	(?_labs+2)^0,w,c
  9965   00040C  1007               	iorwf	(?_labs+1)^0,w,c
  9966   00040E  E107               	bnz	u8641
  9967   000410  0E02               	movlw	2
  9968   000412  5C06               	subwf	?_labs^0,w,c
  9969   000414  B0D8               	btfsc	status,0,c
  9970   000416  EF0F  F002         	goto	u8641
  9971   00041A  EF11  F002         	goto	u8640
  9972   00041E                     u8641:
  9973   00041E  EF59  F002         	goto	l7208
  9974   000422                     u8640:
  9975   000422                     l7198:
  9976                           
  9977                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9978   000422  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  9979   000426  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  9980   00042A  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  9981   00042E  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  9982                           
  9983                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  9984   000432  EF72  F002         	goto	l1455
  9985   000436                     l7200:
  9986                           
  9987                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  9988   000436  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  9989   00043A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  9990   00043E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  9991   000442  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  9992   000446  0E00               	movlw	0
  9993   000448  6E31               	movwf	___fldiv@a^0,c
  9994   00044A  0E00               	movlw	0
  9995   00044C  6E32               	movwf	(___fldiv@a+1)^0,c
  9996   00044E  0E20               	movlw	32
  9997   000450  6E33               	movwf	(___fldiv@a+2)^0,c
  9998   000452  0E41               	movlw	65
  9999   000454  6E34               	movwf	(___fldiv@a+3)^0,c
 10000   000456  EC24  F013         	call	___fldiv	;wreg free
 10001   00045A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10002   00045E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10003   000462  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10004   000466  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10005   00046A                     
 10006                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
 10007   00046A  0100               	movlb	0	; () banked
 10008   00046C  079C               	decf	efgtoa@e& (0+255),f,b
 10009   00046E  A0D8               	btfss	status,0,c
 10010   000470  079D               	decf	(efgtoa@e+1)& (0+255),f,b
 10011   000472                     
 10012                           ; BSR set to: 0
 10013                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
 10014   000472  51B5               	movf	efgtoa@u& (0+255),w,b
 10015   000474  5DAF               	subwf	efgtoa@g& (0+255),w,b
 10016   000476  6E06               	movwf	labs@a^0,c
 10017   000478  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
 10018   00047A  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
 10019   00047C  6E07               	movwf	(labs@a+1)^0,c
 10020   00047E  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
 10021   000480  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
 10022   000482  6E08               	movwf	(labs@a+2)^0,c
 10023   000484  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
 10024   000486  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
 10025   000488  6E09               	movwf	(labs@a+3)^0,c
 10026   00048A  ECF9  F026         	call	_labs	;wreg free
 10027   00048E  BE09               	btfsc	(?_labs+3)^0,7,c
 10028   000490  EF57  F002         	goto	u8650
 10029   000494  5009               	movf	(?_labs+3)^0,w,c
 10030   000496  1008               	iorwf	(?_labs+2)^0,w,c
 10031   000498  1007               	iorwf	(?_labs+1)^0,w,c
 10032   00049A  E107               	bnz	u8651
 10033   00049C  0E02               	movlw	2
 10034   00049E  5C06               	subwf	?_labs^0,w,c
 10035   0004A0  B0D8               	btfsc	status,0,c
 10036   0004A2  EF55  F002         	goto	u8651
 10037   0004A6  EF57  F002         	goto	u8650
 10038   0004AA                     u8651:
 10039   0004AA  EF59  F002         	goto	l7208
 10040   0004AE                     u8650:
 10041   0004AE  EF11  F002         	goto	l7198
 10042   0004B2                     l7208:
 10043                           
 10044                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
 10045   0004B2  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
 10046   0004B6  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
 10047   0004BA  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
 10048   0004BE  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
 10049   0004C2  C0B5  F031         	movff	efgtoa@u,___flge@ff2
 10050   0004C6  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
 10051   0004CA  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
 10052   0004CE  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
 10053   0004D2  EC9A  F021         	call	___flge	;wreg free
 10054   0004D6  A0D8               	btfss	status,0,c
 10055   0004D8  EF70  F002         	goto	u8661
 10056   0004DC  EF72  F002         	goto	u8660
 10057   0004E0                     u8661:
 10058   0004E0  EF1B  F002         	goto	l7200
 10059   0004E4                     u8660:
 10060   0004E4                     l1455:
 10061                           
 10062                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10063   0004E4  C08A  F096         	movff	efgtoa@c,efgtoa@mode
 10064                           
 10065                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10066   0004E8  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
 10067   0004EC                     
 10068                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10069   0004EC  BE58               	btfsc	(_prec+1)^0,7,c
 10070   0004EE  EF7B  F002         	goto	u8671
 10071   0004F2  EF7D  F002         	goto	u8670
 10072   0004F6                     u8671:
 10073   0004F6  EF83  F002         	goto	l7214
 10074   0004FA                     u8670:
 10075   0004FA  C057  F08F         	movff	_prec,efgtoa@p
 10076   0004FE  C058  F090         	movff	_prec+1,efgtoa@p+1
 10077   000502  EF88  F002         	goto	l7216
 10078   000506                     l7214:
 10079   000506  0E00               	movlw	0
 10080   000508  0100               	movlb	0	; () banked
 10081   00050A  6F90               	movwf	(efgtoa@p+1)& (0+255),b
 10082   00050C  0E06               	movlw	6
 10083   00050E  6F8F               	movwf	efgtoa@p& (0+255),b
 10084   000510                     l7216:
 10085                           
 10086                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
 10087   000510  C08F  F09A         	movff	efgtoa@p,efgtoa@m
 10088   000514  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
 10089   000518                     
 10090                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
 10091   000518  0100               	movlb	0	; () banked
 10092   00051A  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10093   00051C  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10094   00051E                     
 10095                           ; BSR set to: 0
 10096                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10097   00051E  0E66               	movlw	102
 10098   000520  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10099   000522  A4D8               	btfss	status,2,c
 10100   000524  EF96  F002         	goto	u8681
 10101   000528  EF98  F002         	goto	u8680
 10102   00052C                     u8681:
 10103   00052C  EFB8  F002         	goto	l7230
 10104   000530                     u8680:
 10105   000530                     
 10106                           ; BSR set to: 0
 10107                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
 10108   000530  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10109   000532  EF9F  F002         	goto	u8690
 10110   000536  EF9D  F002         	goto	u8691
 10111   00053A                     u8691:
 10112   00053A  EFAB  F002         	goto	l7226
 10113   00053E                     u8690:
 10114   00053E                     
 10115                           ; BSR set to: 0
 10116                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
 10117   00053E  0E00               	movlw	0
 10118   000540  6FB5               	movwf	efgtoa@u& (0+255),b
 10119   000542  0E00               	movlw	0
 10120   000544  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
 10121   000546  0E80               	movlw	128
 10122   000548  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
 10123   00054A  0E3F               	movlw	63
 10124   00054C  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
 10125                           
 10126                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10127   00054E  0E00               	movlw	0
 10128   000550  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
 10129   000552  0E00               	movlw	0
 10130   000554  6F9C               	movwf	efgtoa@e& (0+255),b
 10131   000556                     l7226:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
 10135   000556  0E67               	movlw	103
 10136   000558  1996               	xorwf	efgtoa@mode& (0+255),w,b
 10137   00055A  B4D8               	btfsc	status,2,c
 10138   00055C  EFB2  F002         	goto	u8701
 10139   000560  EFB4  F002         	goto	u8700
 10140   000564                     u8701:
 10141   000564  EFB8  F002         	goto	l7230
 10142   000568                     u8700:
 10143   000568                     
 10144                           ; BSR set to: 0
 10145                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
 10146   000568  519C               	movf	efgtoa@e& (0+255),w,b
 10147   00056A  279A               	addwf	efgtoa@m& (0+255),f,b
 10148   00056C  519D               	movf	(efgtoa@e+1)& (0+255),w,b
 10149   00056E  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
 10150   000570                     l7230:
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10154   000570  0E00               	movlw	0
 10155   000572  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10156   000574  0E00               	movlw	0
 10157   000576  6FA4               	movwf	efgtoa@i& (0+255),b
 10158   000578                     
 10159                           ; BSR set to: 0
 10160                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10161   000578  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
 10162   00057C  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
 10163   000580  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
 10164   000584  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
 10165   000588                     
 10166                           ; BSR set to: 0
 10167                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10168   000588  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
 10169   00058C  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
 10170   000590  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
 10171   000594  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
 10172                           
 10173                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10174   000598  EF49  F003         	goto	l7244
 10175   00059C                     l7236:
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
 10179   00059C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10180   0005A0  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10181   0005A4  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10182   0005A8  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10183   0005AC  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10184   0005B0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10185   0005B4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10186   0005B8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10187   0005BC  EC24  F013         	call	___fldiv	;wreg free
 10188   0005C0  C02D  F046         	movff	?___fldiv,floorf@x
 10189   0005C4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10190   0005C8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10191   0005CC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10192   0005D0  EC04  F019         	call	_floorf	;wreg free
 10193   0005D4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10194   0005D8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10195   0005DC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10196   0005E0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10197                           
 10198                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
 10199   0005E4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10200   0005E8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10201   0005EC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10202   0005F0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10203   0005F4  EC16  F021         	call	___fltol	;wreg free
 10204   0005F8  C064  F098         	movff	?___fltol,efgtoa@d
 10205   0005FC  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10206   000600                     
 10207                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
 10208   000600  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10209   000604  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10210   000608  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10211   00060C  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10212   000610  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10213   000614  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10214   000618  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10215   00061C  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10216   000620  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10217   000624  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10218   000628  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10219   00062C  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10220   000630  EC3A  F00D         	call	___flmul	;wreg free
 10221   000634  C014  F068         	movff	?___flmul,___flsub@a
 10222   000638  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10223   00063C  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10224   000640  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10225   000644  EC9B  F027         	call	___flsub	;wreg free
 10226   000648  C064  F0A6         	movff	?___flsub,efgtoa@h
 10227   00064C  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10228   000650  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10229   000654  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10230   000658                     
 10231                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
 10232   000658  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10233   00065C  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10234   000660  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10235   000664  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10236   000668  0E00               	movlw	0
 10237   00066A  6E31               	movwf	___fldiv@a^0,c
 10238   00066C  0E00               	movlw	0
 10239   00066E  6E32               	movwf	(___fldiv@a+1)^0,c
 10240   000670  0E20               	movlw	32
 10241   000672  6E33               	movwf	(___fldiv@a+2)^0,c
 10242   000674  0E41               	movlw	65
 10243   000676  6E34               	movwf	(___fldiv@a+3)^0,c
 10244   000678  EC24  F013         	call	___fldiv	;wreg free
 10245   00067C  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10246   000680  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10247   000684  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10248   000688  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10249   00068C                     
 10250                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10251   00068C  0100               	movlb	0	; () banked
 10252   00068E  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10253   000690  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10254   000692                     l7244:
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
 10258   000692  519A               	movf	efgtoa@m& (0+255),w,b
 10259   000694  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10260   000696  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10261   000698  0A80               	xorlw	128
 10262   00069A  6F8B               	movwf	??_efgtoa& (0+255),b
 10263   00069C  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10264   00069E  0A80               	xorlw	128
 10265   0006A0  598B               	subwfb	??_efgtoa& (0+255),w,b
 10266   0006A2  A0D8               	btfss	status,0,c
 10267   0006A4  EF56  F003         	goto	u8711
 10268   0006A8  EF58  F003         	goto	u8710
 10269   0006AC                     u8711:
 10270   0006AC  EFCE  F002         	goto	l7236
 10271   0006B0                     u8710:
 10272   0006B0                     
 10273                           ; BSR set to: 0
 10274                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10275   0006B0  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10276   0006B4  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10277   0006B8  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10278   0006BC  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10279   0006C0  0E00               	movlw	0
 10280   0006C2  6E18               	movwf	___flmul@a^0,c
 10281   0006C4  0E00               	movlw	0
 10282   0006C6  6E19               	movwf	(___flmul@a+1)^0,c
 10283   0006C8  0EA0               	movlw	160
 10284   0006CA  6E1A               	movwf	(___flmul@a+2)^0,c
 10285   0006CC  0E40               	movlw	64
 10286   0006CE  6E1B               	movwf	(___flmul@a+3)^0,c
 10287   0006D0  EC3A  F00D         	call	___flmul	;wreg free
 10288   0006D4  C014  F0AA         	movff	?___flmul,efgtoa@l
 10289   0006D8  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
 10290   0006DC  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
 10291   0006E0  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
 10292   0006E4                     
 10293                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10294   0006E4  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10295   0006E8  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10296   0006EC  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10297   0006F0  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10298   0006F4  C0AA  F031         	movff	efgtoa@l,___flge@ff2
 10299   0006F8  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
 10300   0006FC  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
 10301   000700  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
 10302   000704  EC9A  F021         	call	___flge	;wreg free
 10303   000708  B0D8               	btfsc	status,0,c
 10304   00070A  EF89  F003         	goto	u8721
 10305   00070E  EF8B  F003         	goto	u8720
 10306   000712                     u8721:
 10307   000712  EF96  F003         	goto	l7252
 10308   000716                     u8720:
 10309   000716                     
 10310                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10311   000716  0E00               	movlw	0
 10312   000718  0100               	movlb	0	; () banked
 10313   00071A  6FAA               	movwf	efgtoa@l& (0+255),b
 10314   00071C  0E00               	movlw	0
 10315   00071E  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10316   000720  0E00               	movlw	0
 10317   000722  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10318   000724  0E00               	movlw	0
 10319   000726  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10320                           
 10321                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
 10322   000728  EFBF  F003         	goto	l7258
 10323   00072C                     l7252:
 10324                           
 10325                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
 10326   00072C  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
 10327   000730  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
 10328   000734  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
 10329   000738  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
 10330   00073C  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
 10331   000740  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
 10332   000744  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
 10333   000748  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
 10334   00074C  EC4F  F025         	call	___fleq	;wreg free
 10335   000750  A0D8               	btfss	status,0,c
 10336   000752  EFAD  F003         	goto	u8731
 10337   000756  EFAF  F003         	goto	u8730
 10338   00075A                     u8731:
 10339   00075A  EFBF  F003         	goto	l7258
 10340   00075E                     u8730:
 10341   00075E  0100               	movlb	0	; () banked
 10342   000760  B198               	btfsc	efgtoa@d& (0+255),0,b
 10343   000762  EFB5  F003         	goto	u8741
 10344   000766  EFB7  F003         	goto	u8740
 10345   00076A                     u8741:
 10346   00076A  EFBF  F003         	goto	l7258
 10347   00076E                     u8740:
 10348   00076E                     
 10349                           ; BSR set to: 0
 10350                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
 10351   00076E  0E00               	movlw	0
 10352   000770  6FAA               	movwf	efgtoa@l& (0+255),b
 10353   000772  0E00               	movlw	0
 10354   000774  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
 10355   000776  0E00               	movlw	0
 10356   000778  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
 10357   00077A  0E00               	movlw	0
 10358   00077C  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
 10359   00077E                     l7258:
 10360                           
 10361                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10362   00077E  C0AF  F046         	movff	efgtoa@g,___fladd@b
 10363   000782  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
 10364   000786  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
 10365   00078A  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
 10366   00078E  C0AA  F04A         	movff	efgtoa@l,___fladd@a
 10367   000792  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
 10368   000796  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
 10369   00079A  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
 10370   00079E  ECD9  F00A         	call	___fladd	;wreg free
 10371   0007A2  C046  F0A6         	movff	?___fladd,efgtoa@h
 10372   0007A6  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
 10373   0007AA  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
 10374   0007AE  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
 10375   0007B2                     
 10376                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
 10377   0007B2  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
 10378   0007B6  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
 10379   0007BA  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
 10380   0007BE  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
 10381   0007C2  0E00               	movlw	0
 10382   0007C4  6E18               	movwf	___flmul@a^0,c
 10383   0007C6  0E00               	movlw	0
 10384   0007C8  6E19               	movwf	(___flmul@a+1)^0,c
 10385   0007CA  0E20               	movlw	32
 10386   0007CC  6E1A               	movwf	(___flmul@a+2)^0,c
 10387   0007CE  0E41               	movlw	65
 10388   0007D0  6E1B               	movwf	(___flmul@a+3)^0,c
 10389   0007D2  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10390   0007D6  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10391   0007DA  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10392   0007DE  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10393   0007E2  EC3A  F00D         	call	___flmul	;wreg free
 10394   0007E6  C014  F031         	movff	?___flmul,___flge@ff2
 10395   0007EA  C015  F032         	movff	?___flmul+1,___flge@ff2+1
 10396   0007EE  C016  F033         	movff	?___flmul+2,___flge@ff2+2
 10397   0007F2  C017  F034         	movff	?___flmul+3,___flge@ff2+3
 10398   0007F6  EC9A  F021         	call	___flge	;wreg free
 10399   0007FA  A0D8               	btfss	status,0,c
 10400   0007FC  EF02  F004         	goto	u8751
 10401   000800  EF04  F004         	goto	u8750
 10402   000804                     u8751:
 10403   000804  EF2D  F004         	goto	l7270
 10404   000808                     u8750:
 10405   000808                     
 10406                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
 10407   000808  0100               	movlb	0	; () banked
 10408   00080A  4B9C               	infsnz	efgtoa@e& (0+255),f,b
 10409   00080C  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
 10410   00080E                     
 10411                           ; BSR set to: 0
 10412                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10413   00080E  C0A0  F014         	movff	efgtoa@ou,___flmul@b
 10414   000812  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
 10415   000816  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
 10416   00081A  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
 10417   00081E  0E00               	movlw	0
 10418   000820  6E18               	movwf	___flmul@a^0,c
 10419   000822  0E00               	movlw	0
 10420   000824  6E19               	movwf	(___flmul@a+1)^0,c
 10421   000826  0E20               	movlw	32
 10422   000828  6E1A               	movwf	(___flmul@a+2)^0,c
 10423   00082A  0E41               	movlw	65
 10424   00082C  6E1B               	movwf	(___flmul@a+3)^0,c
 10425   00082E  EC3A  F00D         	call	___flmul	;wreg free
 10426   000832  C014  F0A0         	movff	?___flmul,efgtoa@ou
 10427   000836  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
 10428   00083A  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
 10429   00083E  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
 10430   000842                     
 10431                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
 10432   000842  0E66               	movlw	102
 10433   000844  0100               	movlb	0	; () banked
 10434   000846  1997               	xorwf	efgtoa@nmode& (0+255),w,b
 10435   000848  A4D8               	btfss	status,2,c
 10436   00084A  EF29  F004         	goto	u8761
 10437   00084E  EF2B  F004         	goto	u8760
 10438   000852                     u8761:
 10439   000852  EF2D  F004         	goto	l7270
 10440   000856                     u8760:
 10441   000856                     
 10442                           ; BSR set to: 0
 10443                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
 10444   000856  4B9A               	infsnz	efgtoa@m& (0+255),f,b
 10445   000858  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
 10446   00085A                     l7270:
 10447                           
 10448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10449   00085A  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
 10450   00085E  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
 10451   000862  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
 10452   000866  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
 10453   00086A                     
 10454                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10455   00086A  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
 10456   00086E  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
 10457   000872                     
 10458                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10459   000872  0E00               	movlw	0
 10460   000874  0100               	movlb	0	; () banked
 10461   000876  6F95               	movwf	efgtoa@pp& (0+255),b
 10462   000878                     
 10463                           ; BSR set to: 0
 10464                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10465   000878  0E00               	movlw	0
 10466   00087A  6F92               	movwf	(efgtoa@t+1)& (0+255),b
 10467   00087C  0E00               	movlw	0
 10468   00087E  6F91               	movwf	efgtoa@t& (0+255),b
 10469   000880                     
 10470                           ; BSR set to: 0
 10471                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10472   000880  0E00               	movlw	0
 10473   000882  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10474   000884  0E00               	movlw	0
 10475   000886  6FA4               	movwf	efgtoa@i& (0+255),b
 10476                           
 10477                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10478   000888  EF2B  F005         	goto	l7320
 10479   00088C                     l7280:
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
 10483   00088C  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
 10484   000890  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
 10485   000894  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
 10486   000898  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
 10487   00089C  C0B5  F031         	movff	efgtoa@u,___fldiv@a
 10488   0008A0  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
 10489   0008A4  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
 10490   0008A8  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
 10491   0008AC  EC24  F013         	call	___fldiv	;wreg free
 10492   0008B0  C02D  F046         	movff	?___fldiv,floorf@x
 10493   0008B4  C02E  F047         	movff	?___fldiv+1,floorf@x+1
 10494   0008B8  C02F  F048         	movff	?___fldiv+2,floorf@x+2
 10495   0008BC  C030  F049         	movff	?___fldiv+3,floorf@x+3
 10496   0008C0  EC04  F019         	call	_floorf	;wreg free
 10497   0008C4  C046  F0AA         	movff	?_floorf,efgtoa@l
 10498   0008C8  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
 10499   0008CC  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
 10500   0008D0  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
 10501                           
 10502                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
 10503   0008D4  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10504   0008D8  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10505   0008DC  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10506   0008E0  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10507   0008E4  EC16  F021         	call	___fltol	;wreg free
 10508   0008E8  0100               	movlb	0	; () banked
 10509   0008EA  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
 10510   0008EC  EF83  F004         	goto	u8770
 10511   0008F0  5165               	movf	(?___fltol+1)& (0+255),w,b
 10512   0008F2  E107               	bnz	u8771
 10513   0008F4  0E0A               	movlw	10
 10514   0008F6  5D64               	subwf	?___fltol& (0+255),w,b
 10515   0008F8  B0D8               	btfsc	status,0,c
 10516   0008FA  EF81  F004         	goto	u8771
 10517   0008FE  EF83  F004         	goto	u8770
 10518   000902                     u8771:
 10519   000902  EF93  F004         	goto	l7284
 10520   000906                     u8770:
 10521   000906                     
 10522                           ; BSR set to: 0
 10523   000906  C0AA  F064         	movff	efgtoa@l,___fltol@f1
 10524   00090A  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
 10525   00090E  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
 10526   000912  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
 10527   000916  EC16  F021         	call	___fltol	;wreg free
 10528   00091A  C064  F098         	movff	?___fltol,efgtoa@d
 10529   00091E  C065  F099         	movff	?___fltol+1,efgtoa@d+1
 10530   000922  EF97  F004         	goto	l1485
 10531   000926                     l7284:
 10532                           
 10533                           ; BSR set to: 0
 10534   000926  0E00               	movlw	0
 10535   000928  6F99               	movwf	(efgtoa@d+1)& (0+255),b
 10536   00092A  0E09               	movlw	9
 10537   00092C  6F98               	movwf	efgtoa@d& (0+255),b
 10538   00092E                     l1485:
 10539                           
 10540                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
 10541   00092E  0100               	movlb	0	; () banked
 10542   000930  5195               	movf	efgtoa@pp& (0+255),w,b
 10543   000932  A4D8               	btfss	status,2,c
 10544   000934  EF9E  F004         	goto	u8781
 10545   000938  EFA0  F004         	goto	u8780
 10546   00093C                     u8781:
 10547   00093C  EFC8  F004         	goto	l7304
 10548   000940                     u8780:
 10549   000940                     
 10550                           ; BSR set to: 0
 10551   000940  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 10552   000942  EFA7  F004         	goto	u8790
 10553   000946  EFA5  F004         	goto	u8791
 10554   00094A                     u8791:
 10555   00094A  EFC8  F004         	goto	l7304
 10556   00094E                     u8790:
 10557   00094E                     
 10558                           ; BSR set to: 0
 10559                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
 10560   00094E  0E27               	movlw	low _dbuf
 10561   000950  25B3               	addwf	efgtoa@n& (0+255),w,b
 10562   000952  6ED9               	movwf	fsr2l,c
 10563   000954  0E01               	movlw	high _dbuf
 10564   000956  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10565   000958  6EDA               	movwf	fsr2h,c
 10566   00095A  0E2E               	movlw	46
 10567   00095C  6EDF               	movwf	indf2,c
 10568   00095E                     
 10569                           ; BSR set to: 0
 10570   00095E  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10571   000960  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10572   000962                     
 10573                           ; BSR set to: 0
 10574                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
 10575   000962  079E               	decf	efgtoa@w& (0+255),f,b
 10576   000964  A0D8               	btfss	status,0,c
 10577   000966  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10578   000968                     
 10579                           ; BSR set to: 0
 10580                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
 10581   000968  0E01               	movlw	1
 10582   00096A  6F95               	movwf	efgtoa@pp& (0+255),b
 10583   00096C  EFC8  F004         	goto	l7304
 10584   000970                     l7296:
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
 10588   000970  0E27               	movlw	low _dbuf
 10589   000972  25B3               	addwf	efgtoa@n& (0+255),w,b
 10590   000974  6ED9               	movwf	fsr2l,c
 10591   000976  0E01               	movlw	high _dbuf
 10592   000978  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10593   00097A  6EDA               	movwf	fsr2h,c
 10594   00097C  0E30               	movlw	48
 10595   00097E  6EDF               	movwf	indf2,c
 10596   000980                     
 10597                           ; BSR set to: 0
 10598   000980  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10599   000982  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10600   000984                     
 10601                           ; BSR set to: 0
 10602                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
 10603   000984  079E               	decf	efgtoa@w& (0+255),f,b
 10604   000986  A0D8               	btfss	status,0,c
 10605   000988  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10606   00098A                     
 10607                           ; BSR set to: 0
 10608                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
 10609   00098A  0791               	decf	efgtoa@t& (0+255),f,b
 10610   00098C  A0D8               	btfss	status,0,c
 10611   00098E  0792               	decf	(efgtoa@t+1)& (0+255),f,b
 10612   000990                     l7304:
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
 10616   000990  5191               	movf	efgtoa@t& (0+255),w,b
 10617   000992  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
 10618   000994  A4D8               	btfss	status,2,c
 10619   000996  EFCF  F004         	goto	u8801
 10620   00099A  EFD1  F004         	goto	u8800
 10621   00099E                     u8801:
 10622   00099E  EFB8  F004         	goto	l7296
 10623   0009A2                     u8800:
 10624   0009A2                     
 10625                           ; BSR set to: 0
 10626                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
 10627   0009A2  0E27               	movlw	low _dbuf
 10628   0009A4  25B3               	addwf	efgtoa@n& (0+255),w,b
 10629   0009A6  6ED9               	movwf	fsr2l,c
 10630   0009A8  0E01               	movlw	high _dbuf
 10631   0009AA  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10632   0009AC  6EDA               	movwf	fsr2h,c
 10633   0009AE  5198               	movf	efgtoa@d& (0+255),w,b
 10634   0009B0  0F30               	addlw	48
 10635   0009B2  6EDF               	movwf	indf2,c
 10636   0009B4                     
 10637                           ; BSR set to: 0
 10638   0009B4  4BB3               	infsnz	efgtoa@n& (0+255),f,b
 10639   0009B6  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
 10640   0009B8                     
 10641                           ; BSR set to: 0
 10642                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
 10643   0009B8  079E               	decf	efgtoa@w& (0+255),f,b
 10644   0009BA  A0D8               	btfss	status,0,c
 10645   0009BC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 10646   0009BE                     
 10647                           ; BSR set to: 0
 10648                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 10649   0009BE  C0A6  F064         	movff	efgtoa@h,___flsub@b
 10650   0009C2  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
 10651   0009C6  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
 10652   0009CA  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
 10653   0009CE  C0AA  F018         	movff	efgtoa@l,___flmul@a
 10654   0009D2  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
 10655   0009D6  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
 10656   0009DA  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
 10657   0009DE  C0B5  F014         	movff	efgtoa@u,___flmul@b
 10658   0009E2  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
 10659   0009E6  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
 10660   0009EA  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
 10661   0009EE  EC3A  F00D         	call	___flmul	;wreg free
 10662   0009F2  C014  F068         	movff	?___flmul,___flsub@a
 10663   0009F6  C015  F069         	movff	?___flmul+1,___flsub@a+1
 10664   0009FA  C016  F06A         	movff	?___flmul+2,___flsub@a+2
 10665   0009FE  C017  F06B         	movff	?___flmul+3,___flsub@a+3
 10666   000A02  EC9B  F027         	call	___flsub	;wreg free
 10667   000A06  C064  F0A6         	movff	?___flsub,efgtoa@h
 10668   000A0A  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
 10669   000A0E  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
 10670   000A12  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
 10671   000A16                     
 10672                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
 10673   000A16  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
 10674   000A1A  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
 10675   000A1E  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
 10676   000A22  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
 10677   000A26  0E00               	movlw	0
 10678   000A28  6E31               	movwf	___fldiv@a^0,c
 10679   000A2A  0E00               	movlw	0
 10680   000A2C  6E32               	movwf	(___fldiv@a+1)^0,c
 10681   000A2E  0E20               	movlw	32
 10682   000A30  6E33               	movwf	(___fldiv@a+2)^0,c
 10683   000A32  0E41               	movlw	65
 10684   000A34  6E34               	movwf	(___fldiv@a+3)^0,c
 10685   000A36  EC24  F013         	call	___fldiv	;wreg free
 10686   000A3A  C02D  F0B5         	movff	?___fldiv,efgtoa@u
 10687   000A3E  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
 10688   000A42  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
 10689   000A46  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
 10690   000A4A                     
 10691                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
 10692   000A4A  0100               	movlb	0	; () banked
 10693   000A4C  078D               	decf	efgtoa@ne& (0+255),f,b
 10694   000A4E  A0D8               	btfss	status,0,c
 10695   000A50  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
 10696   000A52                     
 10697                           ; BSR set to: 0
 10698                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
 10699   000A52  4BA4               	infsnz	efgtoa@i& (0+255),f,b
 10700   000A54  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
 10701   000A56                     l7320:
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
 10705   000A56  519A               	movf	efgtoa@m& (0+255),w,b
 10706   000A58  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10707   000A5A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10708   000A5C  0A80               	xorlw	128
 10709   000A5E  6F8B               	movwf	??_efgtoa& (0+255),b
 10710   000A60  519B               	movf	(efgtoa@m+1)& (0+255),w,b
 10711   000A62  0A80               	xorlw	128
 10712   000A64  598B               	subwfb	??_efgtoa& (0+255),w,b
 10713   000A66  B0D8               	btfsc	status,0,c
 10714   000A68  EF38  F005         	goto	u8811
 10715   000A6C  EF3A  F005         	goto	u8810
 10716   000A70                     u8811:
 10717   000A70  EF48  F005         	goto	l7324
 10718   000A74                     u8810:
 10719   000A74                     
 10720                           ; BSR set to: 0
 10721   000A74  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10722   000A76  EF46  F005         	goto	u8821
 10723   000A7A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10724   000A7C  E109               	bnz	u8820
 10725   000A7E  0E4B               	movlw	75
 10726   000A80  5DB3               	subwf	efgtoa@n& (0+255),w,b
 10727   000A82  A0D8               	btfss	status,0,c
 10728   000A84  EF46  F005         	goto	u8821
 10729   000A88  EF48  F005         	goto	u8820
 10730   000A8C                     u8821:
 10731   000A8C  EF46  F004         	goto	l7280
 10732   000A90                     u8820:
 10733   000A90                     l7324:
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
 10737   000A90  0E00               	movlw	0
 10738   000A92  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
 10739   000A94  0E4F               	movlw	79
 10740   000A96  6FA4               	movwf	efgtoa@i& (0+255),b
 10741   000A98                     
 10742                           ; BSR set to: 0
 10743                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
 10744   000A98  0E27               	movlw	low _dbuf
 10745   000A9A  25A4               	addwf	efgtoa@i& (0+255),w,b
 10746   000A9C  6ED9               	movwf	fsr2l,c
 10747   000A9E  0E01               	movlw	high _dbuf
 10748   000AA0  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10749   000AA2  6EDA               	movwf	fsr2h,c
 10750   000AA4  6ADF               	clrf	indf2,c
 10751   000AA6                     
 10752                           ; BSR set to: 0
 10753                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
 10754   000AA6  0E27               	movlw	low _dbuf
 10755   000AA8  6F8B               	movwf	??_efgtoa& (0+255),b
 10756   000AAA  0E01               	movlw	high _dbuf
 10757   000AAC  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
 10758   000AAE  51B3               	movf	efgtoa@n& (0+255),w,b
 10759   000AB0  5F8B               	subwf	??_efgtoa& (0+255),f,b
 10760   000AB2  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10761   000AB4  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
 10762   000AB6  51A4               	movf	efgtoa@i& (0+255),w,b
 10763   000AB8  258B               	addwf	??_efgtoa& (0+255),w,b
 10764   000ABA  6E06               	movwf	memcpy@d1^0,c
 10765   000ABC  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10766   000ABE  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
 10767   000AC0  6E07               	movwf	(memcpy@d1+1)^0,c
 10768   000AC2  0E27               	movlw	low _dbuf
 10769   000AC4  6E08               	movwf	memcpy@s1^0,c
 10770   000AC6  0E01               	movlw	high _dbuf
 10771   000AC8  6E09               	movwf	(memcpy@s1+1)^0,c
 10772   000ACA  C0B3  F00A         	movff	efgtoa@n,memcpy@n
 10773   000ACE  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
 10774   000AD2  EC4E  F027         	call	_memcpy	;wreg free
 10775   000AD6                     
 10776                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10777   000AD6  0100               	movlb	0	; () banked
 10778   000AD8  51B3               	movf	efgtoa@n& (0+255),w,b
 10779   000ADA  5DA4               	subwf	efgtoa@i& (0+255),w,b
 10780   000ADC  6FB3               	movwf	efgtoa@n& (0+255),b
 10781   000ADE  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
 10782   000AE0  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
 10783   000AE2  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
 10784   000AE4                     
 10785                           ; BSR set to: 0
 10786                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
 10787   000AE4  51AE               	movf	efgtoa@sign& (0+255),w,b
 10788   000AE6  A4D8               	btfss	status,2,c
 10789   000AE8  EF78  F005         	goto	u8831
 10790   000AEC  EF7B  F005         	goto	u8830
 10791   000AF0                     u8831:
 10792   000AF0  0E01               	movlw	1
 10793   000AF2  EF7C  F005         	goto	u8840
 10794   000AF6                     u8830:
 10795   000AF6  0E00               	movlw	0
 10796   000AF8                     u8840:
 10797   000AF8  6FA4               	movwf	efgtoa@i& (0+255),b
 10798   000AFA  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
 10799   000AFC                     
 10800                           ; BSR set to: 0
 10801                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10802   000AFC  51AE               	movf	efgtoa@sign& (0+255),w,b
 10803   000AFE  B4D8               	btfsc	status,2,c
 10804   000B00  EF84  F005         	goto	u8851
 10805   000B04  EF86  F005         	goto	u8850
 10806   000B08                     u8851:
 10807   000B08  EF91  F005         	goto	l7338
 10808   000B0C                     u8850:
 10809   000B0C                     
 10810                           ; BSR set to: 0
 10811                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
 10812   000B0C  07B3               	decf	efgtoa@n& (0+255),f,b
 10813   000B0E  A0D8               	btfss	status,0,c
 10814   000B10  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
 10815   000B12  0E27               	movlw	low _dbuf
 10816   000B14  25B3               	addwf	efgtoa@n& (0+255),w,b
 10817   000B16  6ED9               	movwf	fsr2l,c
 10818   000B18  0E01               	movlw	high _dbuf
 10819   000B1A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10820   000B1C  6EDA               	movwf	fsr2h,c
 10821   000B1E  C0AE  FFDF         	movff	efgtoa@sign,indf2
 10822   000B22                     l7338:
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10826   000B22  51A4               	movf	efgtoa@i& (0+255),w,b
 10827   000B24  5F9E               	subwf	efgtoa@w& (0+255),f,b
 10828   000B26  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
 10829   000B28  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 10830   000B2A                     
 10831                           ; BSR set to: 0
 10832                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
 10833   000B2A  C084  F017         	movff	efgtoa@fp,pad@fp
 10834   000B2E  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
 10835   000B32  0E27               	movlw	low _dbuf
 10836   000B34  25B3               	addwf	efgtoa@n& (0+255),w,b
 10837   000B36  6E19               	movwf	pad@buf^0,c
 10838   000B38  0E01               	movlw	high _dbuf
 10839   000B3A  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10840   000B3C  6E1A               	movwf	(pad@buf+1)^0,c
 10841   000B3E  C09E  F01B         	movff	efgtoa@w,pad@p
 10842   000B42  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
 10843   000B46  ECA4  F025         	call	_pad	;wreg free
 10844   000B4A                     l1452:
 10845   000B4A  0012               	return		;funcret
 10846   000B4C                     __end_of_efgtoa:
 10847                           	callstack 0
 10848                           
 10849 ;; *************** function _strcpy *****************
 10850 ;; Defined at:
 10851 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  dest            2    5[COMRAM] PTR unsigned char 
 10854 ;;		 -> dbuf(80), 
 10855 ;;  src             2    7[COMRAM] PTR const unsigned char 
 10856 ;;		 -> STR_37(4), STR_34(4), 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  d               2    9[COMRAM] PTR unsigned char 
 10859 ;;		 -> dbuf(80), 
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  2    5[COMRAM] PTR unsigned char 
 10862 ;; Registers used:
 10863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10864 ;; Tracked objects:
 10865 ;;		On entry : 0/0
 10866 ;;		On exit  : 0/0
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10873 ;;Total ram usage:        6 bytes
 10874 ;; Hardware stack levels used: 1
 10875 ;; Hardware stack levels required when called: 1
 10876 ;; This function calls:
 10877 ;;		Nothing
 10878 ;; This function is called by:
 10879 ;;		_efgtoa
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           	psect	text37
 10884   005080                     __ptext37:
 10885                           	callstack 0
 10886   005080                     _strcpy:
 10887                           	callstack 24
 10888   005080  C006  F00A         	movff	strcpy@dest,strcpy@d
 10889   005084  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
 10890   005088                     l7028:
 10891   005088  C008  FFF6         	movff	strcpy@src,tblptrl
 10892   00508C  C009  FFF7         	movff	strcpy@src+1,tblptrh
 10893   005090  4A08               	infsnz	strcpy@src^0,f,c
 10894   005092  2A09               	incf	(strcpy@src+1)^0,f,c
 10895   005094                     	if	0	;tblptru may be non-zero
 10896   005094                     	endif
 10897   005094                     	if	0	;tblptru may be non-zero
 10898   005094                     	endif
 10899   005094  C00A  FFD9         	movff	strcpy@d,fsr2l
 10900   005098  C00B  FFDA         	movff	strcpy@d+1,fsr2h
 10901   00509C  4A0A               	infsnz	strcpy@d^0,f,c
 10902   00509E  2A0B               	incf	(strcpy@d+1)^0,f,c
 10903   0050A0  0008               	tblrd		*
 10904   0050A2  CFF5 FFDF          	movff	tablat,indf2
 10905   0050A6  50DF               	movf	indf2,w,c
 10906   0050A8  A4D8               	btfss	status,2,c
 10907   0050AA  EF59  F028         	goto	u8321
 10908   0050AE  EF5B  F028         	goto	u8320
 10909   0050B2                     u8321:
 10910   0050B2  EF44  F028         	goto	l7028
 10911   0050B6                     u8320:
 10912   0050B6  0012               	return		;funcret
 10913   0050B8                     __end_of_strcpy:
 10914                           	callstack 0
 10915                           
 10916 ;; *************** function _memcpy *****************
 10917 ;; Defined at:
 10918 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;  d1              2    5[COMRAM] PTR void 
 10921 ;;		 -> dbuf(80), 
 10922 ;;  s1              2    7[COMRAM] PTR const void 
 10923 ;;		 -> dbuf(80), 
 10924 ;;  n               2    9[COMRAM] unsigned int 
 10925 ;; Auto vars:     Size  Location     Type
 10926 ;;  s               2   14[COMRAM] PTR const unsigned char 
 10927 ;;		 -> dbuf(80), 
 10928 ;;  d               2   12[COMRAM] PTR unsigned char 
 10929 ;;		 -> dbuf(80), 
 10930 ;;  tmp             1   11[COMRAM] unsigned char 
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  2    5[COMRAM] PTR void 
 10933 ;; Registers used:
 10934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10940 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10941 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;Total ram usage:       11 bytes
 10945 ;; Hardware stack levels used: 1
 10946 ;; Hardware stack levels required when called: 1
 10947 ;; This function calls:
 10948 ;;		Nothing
 10949 ;; This function is called by:
 10950 ;;		_efgtoa
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           	psect	text38
 10955   004E9C                     __ptext38:
 10956                           	callstack 0
 10957   004E9C                     _memcpy:
 10958                           	callstack 24
 10959   004E9C  C008  F00F         	movff	memcpy@s1,memcpy@s
 10960   004EA0  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
 10961   004EA4  C006  F00D         	movff	memcpy@d1,memcpy@d
 10962   004EA8  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
 10963   004EAC  EF68  F027         	goto	l7076
 10964   004EB0                     l7068:
 10965   004EB0  C00F  FFD9         	movff	memcpy@s,fsr2l
 10966   004EB4  C010  FFDA         	movff	memcpy@s+1,fsr2h
 10967   004EB8  50DF               	movf	indf2,w,c
 10968   004EBA  6E0C               	movwf	memcpy@tmp^0,c
 10969   004EBC  4A0F               	infsnz	memcpy@s^0,f,c
 10970   004EBE  2A10               	incf	(memcpy@s+1)^0,f,c
 10971   004EC0  C00D  FFD9         	movff	memcpy@d,fsr2l
 10972   004EC4  C00E  FFDA         	movff	memcpy@d+1,fsr2h
 10973   004EC8  C00C  FFDF         	movff	memcpy@tmp,indf2
 10974   004ECC  4A0D               	infsnz	memcpy@d^0,f,c
 10975   004ECE  2A0E               	incf	(memcpy@d+1)^0,f,c
 10976   004ED0                     l7076:
 10977   004ED0  060A               	decf	memcpy@n^0,f,c
 10978   004ED2  A0D8               	btfss	status,0,c
 10979   004ED4  060B               	decf	(memcpy@n+1)^0,f,c
 10980   004ED6  280A               	incf	memcpy@n^0,w,c
 10981   004ED8  E106               	bnz	u8441
 10982   004EDA  280B               	incf	(memcpy@n+1)^0,w,c
 10983   004EDC  A4D8               	btfss	status,2,c
 10984   004EDE  EF73  F027         	goto	u8441
 10985   004EE2  EF75  F027         	goto	u8440
 10986   004EE6                     u8441:
 10987   004EE6  EF58  F027         	goto	l7068
 10988   004EEA                     u8440:
 10989   004EEA  0012               	return		;funcret
 10990   004EEC                     __end_of_memcpy:
 10991                           	callstack 0
 10992                           
 10993 ;; *************** function _labs *****************
 10994 ;; Defined at:
 10995 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
 10996 ;; Parameters:    Size  Location     Type
 10997 ;;  a               4    5[COMRAM] long 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;		None
 11000 ;; Return value:  Size  Location     Type
 11001 ;;                  4    5[COMRAM] long 
 11002 ;; Registers used:
 11003 ;;		wreg, status,2, status,0
 11004 ;; Tracked objects:
 11005 ;;		On entry : 0/0
 11006 ;;		On exit  : 0/0
 11007 ;;		Unchanged: 0/0
 11008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11013 ;;Total ram usage:        8 bytes
 11014 ;; Hardware stack levels used: 1
 11015 ;; Hardware stack levels required when called: 1
 11016 ;; This function calls:
 11017 ;;		Nothing
 11018 ;; This function is called by:
 11019 ;;		_efgtoa
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text39
 11024   004DF2                     __ptext39:
 11025                           	callstack 0
 11026   004DF2                     _labs:
 11027                           	callstack 24
 11028   004DF2  BE09               	btfsc	(labs@a+3)^0,7,c
 11029   004DF4  EFFE  F026         	goto	u8331
 11030   004DF8  EF00  F027         	goto	u8330
 11031   004DFC                     u8331:
 11032   004DFC  EF0A  F027         	goto	l7034
 11033   004E00                     u8330:
 11034   004E00  C006  F006         	movff	labs@a,?_labs
 11035   004E04  C007  F007         	movff	labs@a+1,?_labs+1
 11036   004E08  C008  F008         	movff	labs@a+2,?_labs+2
 11037   004E0C  C009  F009         	movff	labs@a+3,?_labs+3
 11038   004E10  EF23  F027         	goto	l1634
 11039   004E14                     l7034:
 11040   004E14  C006  F00A         	movff	labs@a,??_labs
 11041   004E18  C007  F00B         	movff	labs@a+1,??_labs+1
 11042   004E1C  C008  F00C         	movff	labs@a+2,??_labs+2
 11043   004E20  C009  F00D         	movff	labs@a+3,??_labs+3
 11044   004E24  1E0A               	comf	??_labs^0,f,c
 11045   004E26  1E0B               	comf	(??_labs+1)^0,f,c
 11046   004E28  1E0C               	comf	(??_labs+2)^0,f,c
 11047   004E2A  1E0D               	comf	(??_labs+3)^0,f,c
 11048   004E2C  2A0A               	incf	??_labs^0,f,c
 11049   004E2E  0E00               	movlw	0
 11050   004E30  220B               	addwfc	(??_labs+1)^0,f,c
 11051   004E32  220C               	addwfc	(??_labs+2)^0,f,c
 11052   004E34  220D               	addwfc	(??_labs+3)^0,f,c
 11053   004E36  C00A  F006         	movff	??_labs,?_labs
 11054   004E3A  C00B  F007         	movff	??_labs+1,?_labs+1
 11055   004E3E  C00C  F008         	movff	??_labs+2,?_labs+2
 11056   004E42  C00D  F009         	movff	??_labs+3,?_labs+3
 11057   004E46                     l1634:
 11058   004E46  0012               	return		;funcret
 11059   004E48                     __end_of_labs:
 11060                           	callstack 0
 11061                           
 11062 ;; *************** function _floorf *****************
 11063 ;; Defined at:
 11064 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  x               4   69[COMRAM] float 
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;  u               4    6[BANK0 ] struct .
 11069 ;;  m               4    0[BANK0 ] unsigned long 
 11070 ;;  e               2    4[BANK0 ] int 
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  4   69[COMRAM] float 
 11073 ;; Registers used:
 11074 ;;		wreg, status,2, status,0
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;Total ram usage:       20 bytes
 11085 ;; Hardware stack levels used: 1
 11086 ;; Hardware stack levels required when called: 1
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		_efgtoa
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text40
 11095   003208                     __ptext40:
 11096                           	callstack 0
 11097   003208                     _floorf:
 11098                           	callstack 24
 11099   003208  C119  F066         	movff	floorf@F521,floorf@u
 11100   00320C  C11A  F067         	movff	floorf@F521+1,floorf@u+1
 11101   003210  C11B  F068         	movff	floorf@F521+2,floorf@u+2
 11102   003214  C11C  F069         	movff	floorf@F521+3,floorf@u+3
 11103   003218  C046  F066         	movff	floorf@x,floorf@u
 11104   00321C  C047  F067         	movff	floorf@x+1,floorf@u+1
 11105   003220  C048  F068         	movff	floorf@x+2,floorf@u+2
 11106   003224  C049  F069         	movff	floorf@x+3,floorf@u+3
 11107   003228  0E81               	movlw	129
 11108   00322A  6E4A               	movwf	??_floorf^0,c
 11109   00322C  0EFF               	movlw	255
 11110   00322E  6E4B               	movwf	(??_floorf+1)^0,c
 11111   003230  C066  F04C         	movff	floorf@u,??_floorf+2
 11112   003234  C067  F04D         	movff	floorf@u+1,??_floorf+3
 11113   003238  C068  F04E         	movff	floorf@u+2,??_floorf+4
 11114   00323C  C069  F04F         	movff	floorf@u+3,??_floorf+5
 11115   003240  0E18               	movlw	24
 11116   003242  EF28  F019         	goto	u8340
 11117   003246                     u8345:
 11118   003246  90D8               	bcf	status,0,c
 11119   003248  324F               	rrcf	(??_floorf+5)^0,f,c
 11120   00324A  324E               	rrcf	(??_floorf+4)^0,f,c
 11121   00324C  324D               	rrcf	(??_floorf+3)^0,f,c
 11122   00324E  324C               	rrcf	(??_floorf+2)^0,f,c
 11123   003250                     u8340:
 11124   003250  2EE8               	decfsz	wreg,f,c
 11125   003252  EF23  F019         	goto	u8345
 11126   003256  504C               	movf	(??_floorf+2)^0,w,c
 11127   003258  244A               	addwf	??_floorf^0,w,c
 11128   00325A  0100               	movlb	0	; () banked
 11129   00325C  6F64               	movwf	floorf@e& (0+255),b
 11130   00325E  0E00               	movlw	0
 11131   003260  204B               	addwfc	(??_floorf+1)^0,w,c
 11132   003262  6F65               	movwf	(floorf@e+1)& (0+255),b
 11133   003264  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11134   003266  EF3E  F019         	goto	u8351
 11135   00326A  5165               	movf	(floorf@e+1)& (0+255),w,b
 11136   00326C  E109               	bnz	u8350
 11137   00326E  0E17               	movlw	23
 11138   003270  5D64               	subwf	floorf@e& (0+255),w,b
 11139   003272  A0D8               	btfss	status,0,c
 11140   003274  EF3E  F019         	goto	u8351
 11141   003278  EF40  F019         	goto	u8350
 11142   00327C                     u8351:
 11143   00327C  EF4A  F019         	goto	l7044
 11144   003280                     u8350:
 11145   003280                     l7042:
 11146                           
 11147                           ; BSR set to: 0
 11148   003280  C046  F046         	movff	floorf@x,?_floorf
 11149   003284  C047  F047         	movff	floorf@x+1,?_floorf+1
 11150   003288  C048  F048         	movff	floorf@x+2,?_floorf+2
 11151   00328C  C049  F049         	movff	floorf@x+3,?_floorf+3
 11152   003290  EF0E  F01A         	goto	l1620
 11153   003294                     l7044:
 11154                           
 11155                           ; BSR set to: 0
 11156   003294  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 11157   003296  EF4F  F019         	goto	u8361
 11158   00329A  EF51  F019         	goto	u8360
 11159   00329E                     u8361:
 11160   00329E  EFC2  F019         	goto	l7054
 11161   0032A2                     u8360:
 11162   0032A2                     
 11163                           ; BSR set to: 0
 11164   0032A2  C064  F04A         	movff	floorf@e,??_floorf
 11165   0032A6  0EFF               	movlw	255
 11166   0032A8  6E4B               	movwf	(??_floorf+1)^0,c
 11167   0032AA  0EFF               	movlw	255
 11168   0032AC  6E4C               	movwf	(??_floorf+2)^0,c
 11169   0032AE  0E7F               	movlw	127
 11170   0032B0  6E4D               	movwf	(??_floorf+3)^0,c
 11171   0032B2  0E00               	movlw	0
 11172   0032B4  6E4E               	movwf	(??_floorf+4)^0,c
 11173   0032B6                     u8375:
 11174   0032B6  664A               	tstfsz	??_floorf^0,c
 11175   0032B8  EF60  F019         	goto	u8376
 11176   0032BC  EF68  F019         	goto	u8377
 11177   0032C0                     u8376:
 11178   0032C0  344E               	rlcf	(??_floorf+4)^0,w,c
 11179   0032C2  324E               	rrcf	(??_floorf+4)^0,f,c
 11180   0032C4  324D               	rrcf	(??_floorf+3)^0,f,c
 11181   0032C6  324C               	rrcf	(??_floorf+2)^0,f,c
 11182   0032C8  324B               	rrcf	(??_floorf+1)^0,f,c
 11183   0032CA  2E4A               	decfsz	??_floorf^0,f,c
 11184   0032CC  EF5B  F019         	goto	u8375
 11185   0032D0                     u8377:
 11186   0032D0  C04B  F060         	movff	??_floorf+1,floorf@m
 11187   0032D4  C04C  F061         	movff	??_floorf+2,floorf@m+1
 11188   0032D8  C04D  F062         	movff	??_floorf+3,floorf@m+2
 11189   0032DC  C04E  F063         	movff	??_floorf+4,floorf@m+3
 11190   0032E0  0100               	movlb	0	; () banked
 11191   0032E2  5160               	movf	floorf@m& (0+255),w,b
 11192   0032E4  1566               	andwf	floorf@u& (0+255),w,b
 11193   0032E6  6E4A               	movwf	??_floorf^0,c
 11194   0032E8  5161               	movf	(floorf@m+1)& (0+255),w,b
 11195   0032EA  1567               	andwf	(floorf@u+1)& (0+255),w,b
 11196   0032EC  6E4B               	movwf	(??_floorf+1)^0,c
 11197   0032EE  5162               	movf	(floorf@m+2)& (0+255),w,b
 11198   0032F0  1568               	andwf	(floorf@u+2)& (0+255),w,b
 11199   0032F2  6E4C               	movwf	(??_floorf+2)^0,c
 11200   0032F4  5163               	movf	(floorf@m+3)& (0+255),w,b
 11201   0032F6  1569               	andwf	(floorf@u+3)& (0+255),w,b
 11202   0032F8  6E4D               	movwf	(??_floorf+3)^0,c
 11203   0032FA  504A               	movf	??_floorf^0,w,c
 11204   0032FC  104B               	iorwf	(??_floorf+1)^0,w,c
 11205   0032FE  104C               	iorwf	(??_floorf+2)^0,w,c
 11206   003300  104D               	iorwf	(??_floorf+3)^0,w,c
 11207   003302  A4D8               	btfss	status,2,c
 11208   003304  EF86  F019         	goto	u8381
 11209   003308  EF88  F019         	goto	u8380
 11210   00330C                     u8381:
 11211   00330C  EF8A  F019         	goto	l7050
 11212   003310                     u8380:
 11213   003310  EF40  F019         	goto	l7042
 11214   003314                     l7050:
 11215                           
 11216                           ; BSR set to: 0
 11217   003314  C066  F04A         	movff	floorf@u,??_floorf
 11218   003318  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11219   00331C  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11220   003320  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11221   003324  0E20               	movlw	32
 11222   003326  EF9A  F019         	goto	u8390
 11223   00332A                     u8395:
 11224   00332A  90D8               	bcf	status,0,c
 11225   00332C  324D               	rrcf	(??_floorf+3)^0,f,c
 11226   00332E  324C               	rrcf	(??_floorf+2)^0,f,c
 11227   003330  324B               	rrcf	(??_floorf+1)^0,f,c
 11228   003332  324A               	rrcf	??_floorf^0,f,c
 11229   003334                     u8390:
 11230   003334  2EE8               	decfsz	wreg,f,c
 11231   003336  EF95  F019         	goto	u8395
 11232   00333A  504A               	movf	??_floorf^0,w,c
 11233   00333C  104B               	iorwf	(??_floorf+1)^0,w,c
 11234   00333E  104C               	iorwf	(??_floorf+2)^0,w,c
 11235   003340  104D               	iorwf	(??_floorf+3)^0,w,c
 11236   003342  B4D8               	btfsc	status,2,c
 11237   003344  EFA6  F019         	goto	u8401
 11238   003348  EFA8  F019         	goto	u8400
 11239   00334C                     u8401:
 11240   00334C  EFB0  F019         	goto	l1623
 11241   003350                     u8400:
 11242   003350                     
 11243                           ; BSR set to: 0
 11244   003350  5160               	movf	floorf@m& (0+255),w,b
 11245   003352  2766               	addwf	floorf@u& (0+255),f,b
 11246   003354  5161               	movf	(floorf@m+1)& (0+255),w,b
 11247   003356  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 11248   003358  5162               	movf	(floorf@m+2)& (0+255),w,b
 11249   00335A  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 11250   00335C  5163               	movf	(floorf@m+3)& (0+255),w,b
 11251   00335E  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 11252   003360                     l1623:
 11253                           
 11254                           ; BSR set to: 0
 11255   003360  1D60               	comf	floorf@m& (0+255),w,b
 11256   003362  6E4A               	movwf	??_floorf^0,c
 11257   003364  1D61               	comf	(floorf@m+1)& (0+255),w,b
 11258   003366  6E4B               	movwf	(??_floorf+1)^0,c
 11259   003368  1D62               	comf	(floorf@m+2)& (0+255),w,b
 11260   00336A  6E4C               	movwf	(??_floorf+2)^0,c
 11261   00336C  1D63               	comf	(floorf@m+3)& (0+255),w,b
 11262   00336E  6E4D               	movwf	(??_floorf+3)^0,c
 11263   003370  504A               	movf	??_floorf^0,w,c
 11264   003372  1766               	andwf	floorf@u& (0+255),f,b
 11265   003374  504B               	movf	(??_floorf+1)^0,w,c
 11266   003376  1767               	andwf	(floorf@u+1)& (0+255),f,b
 11267   003378  504C               	movf	(??_floorf+2)^0,w,c
 11268   00337A  1768               	andwf	(floorf@u+2)& (0+255),f,b
 11269   00337C  504D               	movf	(??_floorf+3)^0,w,c
 11270   00337E  1769               	andwf	(floorf@u+3)& (0+255),f,b
 11271   003380  EF06  F01A         	goto	l7062
 11272   003384                     l7054:
 11273                           
 11274                           ; BSR set to: 0
 11275   003384  C066  F04A         	movff	floorf@u,??_floorf
 11276   003388  C067  F04B         	movff	floorf@u+1,??_floorf+1
 11277   00338C  C068  F04C         	movff	floorf@u+2,??_floorf+2
 11278   003390  C069  F04D         	movff	floorf@u+3,??_floorf+3
 11279   003394  0E20               	movlw	32
 11280   003396  EFD2  F019         	goto	u8410
 11281   00339A                     u8415:
 11282   00339A  90D8               	bcf	status,0,c
 11283   00339C  324D               	rrcf	(??_floorf+3)^0,f,c
 11284   00339E  324C               	rrcf	(??_floorf+2)^0,f,c
 11285   0033A0  324B               	rrcf	(??_floorf+1)^0,f,c
 11286   0033A2  324A               	rrcf	??_floorf^0,f,c
 11287   0033A4                     u8410:
 11288   0033A4  2EE8               	decfsz	wreg,f,c
 11289   0033A6  EFCD  F019         	goto	u8415
 11290   0033AA  504A               	movf	??_floorf^0,w,c
 11291   0033AC  104B               	iorwf	(??_floorf+1)^0,w,c
 11292   0033AE  104C               	iorwf	(??_floorf+2)^0,w,c
 11293   0033B0  104D               	iorwf	(??_floorf+3)^0,w,c
 11294   0033B2  A4D8               	btfss	status,2,c
 11295   0033B4  EFDE  F019         	goto	u8421
 11296   0033B8  EFE0  F019         	goto	u8420
 11297   0033BC                     u8421:
 11298   0033BC  EFEA  F019         	goto	l7058
 11299   0033C0                     u8420:
 11300   0033C0                     
 11301                           ; BSR set to: 0
 11302   0033C0  0E00               	movlw	0
 11303   0033C2  6F66               	movwf	floorf@u& (0+255),b
 11304   0033C4  0E00               	movlw	0
 11305   0033C6  6F67               	movwf	(floorf@u+1)& (0+255),b
 11306   0033C8  0E00               	movlw	0
 11307   0033CA  6F68               	movwf	(floorf@u+2)& (0+255),b
 11308   0033CC  0E00               	movlw	0
 11309   0033CE  6F69               	movwf	(floorf@u+3)& (0+255),b
 11310   0033D0  EF06  F01A         	goto	l7062
 11311   0033D4                     l7058:
 11312                           
 11313                           ; BSR set to: 0
 11314   0033D4  90D8               	bcf	status,0,c
 11315   0033D6  3566               	rlcf	floorf@u& (0+255),w,b
 11316   0033D8  6E4A               	movwf	??_floorf^0,c
 11317   0033DA  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 11318   0033DC  6E4B               	movwf	(??_floorf+1)^0,c
 11319   0033DE  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 11320   0033E0  6E4C               	movwf	(??_floorf+2)^0,c
 11321   0033E2  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 11322   0033E4  6E4D               	movwf	(??_floorf+3)^0,c
 11323   0033E6  504A               	movf	??_floorf^0,w,c
 11324   0033E8  104B               	iorwf	(??_floorf+1)^0,w,c
 11325   0033EA  104C               	iorwf	(??_floorf+2)^0,w,c
 11326   0033EC  104D               	iorwf	(??_floorf+3)^0,w,c
 11327   0033EE  B4D8               	btfsc	status,2,c
 11328   0033F0  EFFC  F019         	goto	u8431
 11329   0033F4  EFFE  F019         	goto	u8430
 11330   0033F8                     u8431:
 11331   0033F8  EF06  F01A         	goto	l7062
 11332   0033FC                     u8430:
 11333   0033FC                     
 11334                           ; BSR set to: 0
 11335   0033FC  0E00               	movlw	0
 11336   0033FE  6F66               	movwf	floorf@u& (0+255),b
 11337   003400  0E00               	movlw	0
 11338   003402  6F67               	movwf	(floorf@u+1)& (0+255),b
 11339   003404  0E80               	movlw	128
 11340   003406  6F68               	movwf	(floorf@u+2)& (0+255),b
 11341   003408  0EBF               	movlw	191
 11342   00340A  6F69               	movwf	(floorf@u+3)& (0+255),b
 11343   00340C                     l7062:
 11344                           
 11345                           ; BSR set to: 0
 11346   00340C  C066  F046         	movff	floorf@u,?_floorf
 11347   003410  C067  F047         	movff	floorf@u+1,?_floorf+1
 11348   003414  C068  F048         	movff	floorf@u+2,?_floorf+2
 11349   003418  C069  F049         	movff	floorf@u+3,?_floorf+3
 11350   00341C                     l1620:
 11351                           
 11352                           ; BSR set to: 0
 11353   00341C  0012               	return		;funcret
 11354   00341E                     __end_of_floorf:
 11355                           	callstack 0
 11356                           
 11357 ;; *************** function ___fpclassifyf *****************
 11358 ;; Defined at:
 11359 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  x               4    5[COMRAM] float 
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;  u               4   15[COMRAM] struct .
 11364 ;;  e               2   13[COMRAM] int 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  2    5[COMRAM] int 
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;Total ram usage:       14 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 1
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_efgtoa
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           	psect	text41
 11389   004438                     __ptext41:
 11390                           	callstack 0
 11391   004438                     ___fpclassifyf:
 11392                           	callstack 24
 11393   004438  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
 11394   00443C  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 11395   004440  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 11396   004444  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 11397   004448  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
 11398   00444C  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11399   004450  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11400   004454  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11401   004458  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11402   00445C  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11403   004460  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11404   004464  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11405   004468  0E18               	movlw	24
 11406   00446A  EF3C  F022         	goto	u8250
 11407   00446E                     u8255:
 11408   00446E  90D8               	bcf	status,0,c
 11409   004470  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
 11410   004472  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
 11411   004474  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
 11412   004476  320A               	rrcf	??___fpclassifyf^0,f,c
 11413   004478                     u8250:
 11414   004478  2EE8               	decfsz	wreg,f,c
 11415   00447A  EF37  F022         	goto	u8255
 11416   00447E  500A               	movf	??___fpclassifyf^0,w,c
 11417   004480  6E0E               	movwf	___fpclassifyf@e^0,c
 11418   004482  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
 11419   004484  500E               	movf	___fpclassifyf@e^0,w,c
 11420   004486  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11421   004488  A4D8               	btfss	status,2,c
 11422   00448A  EF49  F022         	goto	u8261
 11423   00448E  EF4B  F022         	goto	u8260
 11424   004492                     u8261:
 11425   004492  EF6B  F022         	goto	l7016
 11426   004496                     u8260:
 11427   004496  90D8               	bcf	status,0,c
 11428   004498  3410               	rlcf	___fpclassifyf@u^0,w,c
 11429   00449A  6E0A               	movwf	??___fpclassifyf^0,c
 11430   00449C  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
 11431   00449E  6E0B               	movwf	(??___fpclassifyf+1)^0,c
 11432   0044A0  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
 11433   0044A2  6E0C               	movwf	(??___fpclassifyf+2)^0,c
 11434   0044A4  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
 11435   0044A6  6E0D               	movwf	(??___fpclassifyf+3)^0,c
 11436   0044A8  500A               	movf	??___fpclassifyf^0,w,c
 11437   0044AA  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11438   0044AC  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11439   0044AE  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11440   0044B0  A4D8               	btfss	status,2,c
 11441   0044B2  EF5D  F022         	goto	u8271
 11442   0044B6  EF5F  F022         	goto	u8270
 11443   0044BA                     u8271:
 11444   0044BA  EF65  F022         	goto	l7012
 11445   0044BE                     u8270:
 11446   0044BE  0E00               	movlw	0
 11447   0044C0  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11448   0044C2  0E02               	movlw	2
 11449   0044C4  6E06               	movwf	?___fpclassifyf^0,c
 11450   0044C6  EF9A  F022         	goto	l1606
 11451   0044CA                     l7012:
 11452   0044CA  0E00               	movlw	0
 11453   0044CC  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11454   0044CE  0E03               	movlw	3
 11455   0044D0  6E06               	movwf	?___fpclassifyf^0,c
 11456   0044D2  EF9A  F022         	goto	l1606
 11457   0044D6                     l7016:
 11458   0044D6  280E               	incf	___fpclassifyf@e^0,w,c
 11459   0044D8  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
 11460   0044DA  A4D8               	btfss	status,2,c
 11461   0044DC  EF72  F022         	goto	u8281
 11462   0044E0  EF74  F022         	goto	u8280
 11463   0044E4                     u8281:
 11464   0044E4  EF96  F022         	goto	l7022
 11465   0044E8                     u8280:
 11466   0044E8  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
 11467   0044EC  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11468   0044F0  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11469   0044F4  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11470   0044F8  0E09               	movlw	9
 11471   0044FA                     u8295:
 11472   0044FA  90D8               	bcf	status,0,c
 11473   0044FC  360A               	rlcf	??___fpclassifyf^0,f,c
 11474   0044FE  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
 11475   004500  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
 11476   004502  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
 11477   004504  2EE8               	decfsz	wreg,f,c
 11478   004506  EF7D  F022         	goto	u8295
 11479   00450A  500A               	movf	??___fpclassifyf^0,w,c
 11480   00450C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
 11481   00450E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
 11482   004510  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
 11483   004512  B4D8               	btfsc	status,2,c
 11484   004514  EF8E  F022         	goto	u8301
 11485   004518  EF91  F022         	goto	u8300
 11486   00451C                     u8301:
 11487   00451C  0E01               	movlw	1
 11488   00451E  EF92  F022         	goto	u8310
 11489   004522                     u8300:
 11490   004522  0E00               	movlw	0
 11491   004524                     u8310:
 11492   004524  6E06               	movwf	?___fpclassifyf^0,c
 11493   004526  6A07               	clrf	(?___fpclassifyf+1)^0,c
 11494   004528  EF9A  F022         	goto	l1606
 11495   00452C                     l7022:
 11496   00452C  0E00               	movlw	0
 11497   00452E  6E07               	movwf	(?___fpclassifyf+1)^0,c
 11498   004530  0E04               	movlw	4
 11499   004532  6E06               	movwf	?___fpclassifyf^0,c
 11500   004534                     l1606:
 11501   004534  0012               	return		;funcret
 11502   004536                     __end_of___fpclassifyf:
 11503                           	callstack 0
 11504                           
 11505 ;; *************** function ___fltol *****************
 11506 ;; Defined at:
 11507 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  f1              4    4[BANK0 ] int 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;  exp1            1   82[COMRAM] unsigned char 
 11512 ;;  sign1           1   81[COMRAM] unsigned char 
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  4    4[BANK0 ] long 
 11515 ;; Registers used:
 11516 ;;		wreg, status,2, status,0
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11524 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11525 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;Total ram usage:       10 bytes
 11527 ;; Hardware stack levels used: 1
 11528 ;; Hardware stack levels required when called: 1
 11529 ;; This function calls:
 11530 ;;		Nothing
 11531 ;; This function is called by:
 11532 ;;		_runDAC
 11533 ;;		_efgtoa
 11534 ;;		___rem_pio2f
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           	psect	text42
 11539   00422C                     __ptext42:
 11540                           	callstack 0
 11541   00422C                     ___fltol:
 11542                           	callstack 24
 11543   00422C  0100               	movlb	0	; () banked
 11544   00422E  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11545   004230  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11546   004232  6E53               	movwf	___fltol@exp1^0,c
 11547   004234  5053               	movf	___fltol@exp1^0,w,c
 11548   004236  A4D8               	btfss	status,2,c
 11549   004238  EF20  F021         	goto	u8071
 11550   00423C  EF22  F021         	goto	u8070
 11551   004240                     u8071:
 11552   004240  EF2C  F021         	goto	l6908
 11553   004244                     u8070:
 11554   004244                     l6904:
 11555                           
 11556                           ; BSR set to: 0
 11557   004244  0E00               	movlw	0
 11558   004246  6F64               	movwf	?___fltol& (0+255),b
 11559   004248  0E00               	movlw	0
 11560   00424A  6F65               	movwf	(?___fltol+1)& (0+255),b
 11561   00424C  0E00               	movlw	0
 11562   00424E  6F66               	movwf	(?___fltol+2)& (0+255),b
 11563   004250  0E00               	movlw	0
 11564   004252  6F67               	movwf	(?___fltol+3)& (0+255),b
 11565   004254  EF99  F021         	goto	l1007
 11566   004258                     l6908:
 11567                           
 11568                           ; BSR set to: 0
 11569   004258  C064  F068         	movff	___fltol@f1,??___fltol
 11570   00425C  C065  F069         	movff	___fltol@f1+1,??___fltol+1
 11571   004260  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
 11572   004264  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
 11573   004268  0E20               	movlw	32
 11574   00426A  EF3C  F021         	goto	u8080
 11575   00426E                     u8085:
 11576   00426E  90D8               	bcf	status,0,c
 11577   004270  336B               	rrcf	(??___fltol+3)& (0+255),f,b
 11578   004272  336A               	rrcf	(??___fltol+2)& (0+255),f,b
 11579   004274  3369               	rrcf	(??___fltol+1)& (0+255),f,b
 11580   004276  3368               	rrcf	??___fltol& (0+255),f,b
 11581   004278                     u8080:
 11582   004278  2EE8               	decfsz	wreg,f,c
 11583   00427A  EF37  F021         	goto	u8085
 11584   00427E  5168               	movf	??___fltol& (0+255),w,b
 11585   004280  6E52               	movwf	___fltol@sign1^0,c
 11586   004282                     
 11587                           ; BSR set to: 0
 11588   004282  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
 11589   004284                     
 11590                           ; BSR set to: 0
 11591   004284  0EFF               	movlw	255
 11592   004286  1764               	andwf	___fltol@f1& (0+255),f,b
 11593   004288  0EFF               	movlw	255
 11594   00428A  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
 11595   00428C  0EFF               	movlw	255
 11596   00428E  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
 11597   004290  0E00               	movlw	0
 11598   004292  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
 11599   004294                     
 11600                           ; BSR set to: 0
 11601   004294  0E96               	movlw	150
 11602   004296  5E53               	subwf	___fltol@exp1^0,f,c
 11603   004298                     
 11604                           ; BSR set to: 0
 11605   004298  BE53               	btfsc	___fltol@exp1^0,7,c
 11606   00429A  EF53  F021         	goto	u8090
 11607   00429E  EF51  F021         	goto	u8091
 11608   0042A2                     u8091:
 11609   0042A2  EF69  F021         	goto	l6928
 11610   0042A6                     u8090:
 11611   0042A6                     
 11612                           ; BSR set to: 0
 11613   0042A6  5053               	movf	___fltol@exp1^0,w,c
 11614   0042A8  0A80               	xorlw	128
 11615   0042AA  0F97               	addlw	151
 11616   0042AC  B0D8               	btfsc	status,0,c
 11617   0042AE  EF5B  F021         	goto	u8101
 11618   0042B2  EF5D  F021         	goto	u8100
 11619   0042B6                     u8101:
 11620   0042B6  EF5F  F021         	goto	l6924
 11621   0042BA                     u8100:
 11622   0042BA  EF22  F021         	goto	l6904
 11623   0042BE                     l6924:
 11624                           
 11625                           ; BSR set to: 0
 11626   0042BE  90D8               	bcf	status,0,c
 11627   0042C0  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11628   0042C2  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11629   0042C4  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11630   0042C6  3364               	rrcf	___fltol@f1& (0+255),f,b
 11631   0042C8                     
 11632                           ; BSR set to: 0
 11633   0042C8  3E53               	incfsz	___fltol@exp1^0,f,c
 11634   0042CA  EF5F  F021         	goto	l6924
 11635   0042CE  EF81  F021         	goto	l6938
 11636   0042D2                     l6928:
 11637                           
 11638                           ; BSR set to: 0
 11639   0042D2  0E1F               	movlw	31
 11640   0042D4  6453               	cpfsgt	___fltol@exp1^0,c
 11641   0042D6  EF6F  F021         	goto	u8111
 11642   0042DA  EF71  F021         	goto	u8110
 11643   0042DE                     u8111:
 11644   0042DE  EF79  F021         	goto	l6936
 11645   0042E2                     u8110:
 11646   0042E2  EF22  F021         	goto	l6904
 11647   0042E6                     l6934:
 11648                           
 11649                           ; BSR set to: 0
 11650   0042E6  90D8               	bcf	status,0,c
 11651   0042E8  3764               	rlcf	___fltol@f1& (0+255),f,b
 11652   0042EA  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11653   0042EC  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11654   0042EE  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11655   0042F0  0653               	decf	___fltol@exp1^0,f,c
 11656   0042F2                     l6936:
 11657                           
 11658                           ; BSR set to: 0
 11659   0042F2  5053               	movf	___fltol@exp1^0,w,c
 11660   0042F4  A4D8               	btfss	status,2,c
 11661   0042F6  EF7F  F021         	goto	u8121
 11662   0042FA  EF81  F021         	goto	u8120
 11663   0042FE                     u8121:
 11664   0042FE  EF73  F021         	goto	l6934
 11665   004302                     u8120:
 11666   004302                     l6938:
 11667                           
 11668                           ; BSR set to: 0
 11669   004302  5052               	movf	___fltol@sign1^0,w,c
 11670   004304  B4D8               	btfsc	status,2,c
 11671   004306  EF87  F021         	goto	u8131
 11672   00430A  EF89  F021         	goto	u8130
 11673   00430E                     u8131:
 11674   00430E  EF91  F021         	goto	l6942
 11675   004312                     u8130:
 11676   004312                     
 11677                           ; BSR set to: 0
 11678   004312  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
 11679   004314  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
 11680   004316  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
 11681   004318  6D64               	negf	___fltol@f1& (0+255),b
 11682   00431A  0E00               	movlw	0
 11683   00431C  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11684   00431E  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11685   004320  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11686   004322                     l6942:
 11687                           
 11688                           ; BSR set to: 0
 11689   004322  C064  F064         	movff	___fltol@f1,?___fltol
 11690   004326  C065  F065         	movff	___fltol@f1+1,?___fltol+1
 11691   00432A  C066  F066         	movff	___fltol@f1+2,?___fltol+2
 11692   00432E  C067  F067         	movff	___fltol@f1+3,?___fltol+3
 11693   004332                     l1007:
 11694                           
 11695                           ; BSR set to: 0
 11696   004332  0012               	return		;funcret
 11697   004334                     __end_of___fltol:
 11698                           	callstack 0
 11699                           
 11700 ;; *************** function ___flsub *****************
 11701 ;; Defined at:
 11702 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11703 ;; Parameters:    Size  Location     Type
 11704 ;;  b               4    4[BANK0 ] long 
 11705 ;;  a               4    8[BANK0 ] long 
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;		None
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  4    4[BANK0 ] long 
 11710 ;; Registers used:
 11711 ;;		wreg, status,2, status,0, cstack
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11717 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;Total ram usage:        8 bytes
 11722 ;; Hardware stack levels used: 1
 11723 ;; Hardware stack levels required when called: 2
 11724 ;; This function calls:
 11725 ;;		___fladd
 11726 ;; This function is called by:
 11727 ;;		_efgtoa
 11728 ;;		___rem_pio2f
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text43
 11733   004F36                     __ptext43:
 11734                           	callstack 0
 11735   004F36                     ___flsub:
 11736                           	callstack 23
 11737   004F36  0E00               	movlw	0
 11738   004F38  0100               	movlb	0	; () banked
 11739   004F3A  1B68               	xorwf	___flsub@a& (0+255),f,b
 11740   004F3C  0E00               	movlw	0
 11741   004F3E  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
 11742   004F40  0E00               	movlw	0
 11743   004F42  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
 11744   004F44  0E80               	movlw	128
 11745   004F46  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
 11746   004F48                     
 11747                           ; BSR set to: 0
 11748   004F48  C064  F046         	movff	___flsub@b,___fladd@b
 11749   004F4C  C065  F047         	movff	___flsub@b+1,___fladd@b+1
 11750   004F50  C066  F048         	movff	___flsub@b+2,___fladd@b+2
 11751   004F54  C067  F049         	movff	___flsub@b+3,___fladd@b+3
 11752   004F58  C068  F04A         	movff	___flsub@a,___fladd@a
 11753   004F5C  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
 11754   004F60  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
 11755   004F64  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
 11756   004F68  ECD9  F00A         	call	___fladd	;wreg free
 11757   004F6C  C046  F064         	movff	?___fladd,?___flsub
 11758   004F70  C047  F065         	movff	?___fladd+1,?___flsub+1
 11759   004F74  C048  F066         	movff	?___fladd+2,?___flsub+2
 11760   004F78  C049  F067         	movff	?___fladd+3,?___flsub+3
 11761   004F7C  0012               	return		;funcret
 11762   004F7E                     __end_of___flsub:
 11763                           	callstack 0
 11764                           
 11765 ;; *************** function ___fladd *****************
 11766 ;; Defined at:
 11767 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;  b               4   69[COMRAM] long 
 11770 ;;  a               4   73[COMRAM] long 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;  grs             1    3[BANK0 ] unsigned char 
 11773 ;;  bexp            1    2[BANK0 ] unsigned char 
 11774 ;;  aexp            1    1[BANK0 ] unsigned char 
 11775 ;;  signs           1    0[BANK0 ] unsigned char 
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  4   69[COMRAM] unsigned char 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;Total ram usage:       16 bytes
 11790 ;; Hardware stack levels used: 1
 11791 ;; Hardware stack levels required when called: 1
 11792 ;; This function calls:
 11793 ;;		Nothing
 11794 ;; This function is called by:
 11795 ;;		_runDAC
 11796 ;;		___flsub
 11797 ;;		_efgtoa
 11798 ;;		_sinf
 11799 ;;		___cosdf
 11800 ;;		___rem_pio2f
 11801 ;;		___sindf
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text44
 11806   0015B2                     __ptext44:
 11807                           	callstack 0
 11808   0015B2                     ___fladd:
 11809                           	callstack 23
 11810   0015B2  5049               	movf	(___fladd@b+3)^0,w,c
 11811   0015B4  0B80               	andlw	128
 11812   0015B6  0100               	movlb	0	; () banked
 11813   0015B8  6F60               	movwf	___fladd@signs& (0+255),b
 11814   0015BA  5049               	movf	(___fladd@b+3)^0,w,c
 11815   0015BC  2449               	addwf	(___fladd@b+3)^0,w,c
 11816   0015BE  6F62               	movwf	___fladd@bexp& (0+255),b
 11817   0015C0                     
 11818                           ; BSR set to: 0
 11819   0015C0  AE48               	btfss	(___fladd@b+2)^0,7,c
 11820   0015C2  EFE5  F00A         	goto	u7041
 11821   0015C6  EFE7  F00A         	goto	u7040
 11822   0015CA                     u7041:
 11823   0015CA  EFE8  F00A         	goto	l6292
 11824   0015CE                     u7040:
 11825   0015CE                     
 11826                           ; BSR set to: 0
 11827   0015CE  8162               	bsf	___fladd@bexp& (0+255),0,b
 11828   0015D0                     l6292:
 11829                           
 11830                           ; BSR set to: 0
 11831   0015D0  5162               	movf	___fladd@bexp& (0+255),w,b
 11832   0015D2  B4D8               	btfsc	status,2,c
 11833   0015D4  EFEE  F00A         	goto	u7051
 11834   0015D8  EFF0  F00A         	goto	u7050
 11835   0015DC                     u7051:
 11836   0015DC  EF05  F00B         	goto	l6302
 11837   0015E0                     u7050:
 11838   0015E0                     
 11839                           ; BSR set to: 0
 11840   0015E0  2962               	incf	___fladd@bexp& (0+255),w,b
 11841   0015E2  A4D8               	btfss	status,2,c
 11842   0015E4  EFF6  F00A         	goto	u7061
 11843   0015E8  EFF8  F00A         	goto	u7060
 11844   0015EC                     u7061:
 11845   0015EC  EF00  F00B         	goto	l6298
 11846   0015F0                     u7060:
 11847   0015F0                     
 11848                           ; BSR set to: 0
 11849   0015F0  0E00               	movlw	0
 11850   0015F2  6E46               	movwf	___fladd@b^0,c
 11851   0015F4  0E00               	movlw	0
 11852   0015F6  6E47               	movwf	(___fladd@b+1)^0,c
 11853   0015F8  0E00               	movlw	0
 11854   0015FA  6E48               	movwf	(___fladd@b+2)^0,c
 11855   0015FC  0E00               	movlw	0
 11856   0015FE  6E49               	movwf	(___fladd@b+3)^0,c
 11857   001600                     l6298:
 11858                           
 11859                           ; BSR set to: 0
 11860   001600  8E48               	bsf	(___fladd@b+2)^0,7,c
 11861   001602                     
 11862                           ; BSR set to: 0
 11863   001602  0E00               	movlw	0
 11864   001604  6E49               	movwf	(___fladd@b+3)^0,c
 11865   001606  EF0D  F00B         	goto	l6304
 11866   00160A                     l6302:
 11867                           
 11868                           ; BSR set to: 0
 11869   00160A  0E00               	movlw	0
 11870   00160C  6E46               	movwf	___fladd@b^0,c
 11871   00160E  0E00               	movlw	0
 11872   001610  6E47               	movwf	(___fladd@b+1)^0,c
 11873   001612  0E00               	movlw	0
 11874   001614  6E48               	movwf	(___fladd@b+2)^0,c
 11875   001616  0E00               	movlw	0
 11876   001618  6E49               	movwf	(___fladd@b+3)^0,c
 11877   00161A                     l6304:
 11878                           
 11879                           ; BSR set to: 0
 11880   00161A  504D               	movf	(___fladd@a+3)^0,w,c
 11881   00161C  0B80               	andlw	128
 11882   00161E  6F61               	movwf	___fladd@aexp& (0+255),b
 11883   001620                     
 11884                           ; BSR set to: 0
 11885   001620  5160               	movf	___fladd@signs& (0+255),w,b
 11886   001622  1961               	xorwf	___fladd@aexp& (0+255),w,b
 11887   001624  B4D8               	btfsc	status,2,c
 11888   001626  EF17  F00B         	goto	u7071
 11889   00162A  EF19  F00B         	goto	u7070
 11890   00162E                     u7071:
 11891   00162E  EF1A  F00B         	goto	l6310
 11892   001632                     u7070:
 11893   001632                     
 11894                           ; BSR set to: 0
 11895   001632  8D60               	bsf	___fladd@signs& (0+255),6,b
 11896   001634                     l6310:
 11897                           
 11898                           ; BSR set to: 0
 11899   001634  504D               	movf	(___fladd@a+3)^0,w,c
 11900   001636  244D               	addwf	(___fladd@a+3)^0,w,c
 11901   001638  6F61               	movwf	___fladd@aexp& (0+255),b
 11902   00163A                     
 11903                           ; BSR set to: 0
 11904   00163A  AE4C               	btfss	(___fladd@a+2)^0,7,c
 11905   00163C  EF22  F00B         	goto	u7081
 11906   001640  EF24  F00B         	goto	u7080
 11907   001644                     u7081:
 11908   001644  EF25  F00B         	goto	l6316
 11909   001648                     u7080:
 11910   001648                     
 11911                           ; BSR set to: 0
 11912   001648  8161               	bsf	___fladd@aexp& (0+255),0,b
 11913   00164A                     l6316:
 11914                           
 11915                           ; BSR set to: 0
 11916   00164A  5161               	movf	___fladd@aexp& (0+255),w,b
 11917   00164C  B4D8               	btfsc	status,2,c
 11918   00164E  EF2B  F00B         	goto	u7091
 11919   001652  EF2D  F00B         	goto	u7090
 11920   001656                     u7091:
 11921   001656  EF42  F00B         	goto	l6326
 11922   00165A                     u7090:
 11923   00165A                     
 11924                           ; BSR set to: 0
 11925   00165A  2961               	incf	___fladd@aexp& (0+255),w,b
 11926   00165C  A4D8               	btfss	status,2,c
 11927   00165E  EF33  F00B         	goto	u7101
 11928   001662  EF35  F00B         	goto	u7100
 11929   001666                     u7101:
 11930   001666  EF3D  F00B         	goto	l6322
 11931   00166A                     u7100:
 11932   00166A                     
 11933                           ; BSR set to: 0
 11934   00166A  0E00               	movlw	0
 11935   00166C  6E4A               	movwf	___fladd@a^0,c
 11936   00166E  0E00               	movlw	0
 11937   001670  6E4B               	movwf	(___fladd@a+1)^0,c
 11938   001672  0E00               	movlw	0
 11939   001674  6E4C               	movwf	(___fladd@a+2)^0,c
 11940   001676  0E00               	movlw	0
 11941   001678  6E4D               	movwf	(___fladd@a+3)^0,c
 11942   00167A                     l6322:
 11943                           
 11944                           ; BSR set to: 0
 11945   00167A  8E4C               	bsf	(___fladd@a+2)^0,7,c
 11946   00167C                     
 11947                           ; BSR set to: 0
 11948   00167C  0E00               	movlw	0
 11949   00167E  6E4D               	movwf	(___fladd@a+3)^0,c
 11950   001680  EF4A  F00B         	goto	l6328
 11951   001684                     l6326:
 11952                           
 11953                           ; BSR set to: 0
 11954   001684  0E00               	movlw	0
 11955   001686  6E4A               	movwf	___fladd@a^0,c
 11956   001688  0E00               	movlw	0
 11957   00168A  6E4B               	movwf	(___fladd@a+1)^0,c
 11958   00168C  0E00               	movlw	0
 11959   00168E  6E4C               	movwf	(___fladd@a+2)^0,c
 11960   001690  0E00               	movlw	0
 11961   001692  6E4D               	movwf	(___fladd@a+3)^0,c
 11962   001694                     l6328:
 11963                           
 11964                           ; BSR set to: 0
 11965   001694  5162               	movf	___fladd@bexp& (0+255),w,b
 11966   001696  5D61               	subwf	___fladd@aexp& (0+255),w,b
 11967   001698  B0D8               	btfsc	status,0,c
 11968   00169A  EF51  F00B         	goto	u7111
 11969   00169E  EF53  F00B         	goto	u7110
 11970   0016A2                     u7111:
 11971   0016A2  EF7A  F00B         	goto	l6364
 11972   0016A6                     u7110:
 11973   0016A6                     
 11974                           ; BSR set to: 0
 11975   0016A6  AD60               	btfss	___fladd@signs& (0+255),6,b
 11976   0016A8  EF58  F00B         	goto	u7121
 11977   0016AC  EF5A  F00B         	goto	u7120
 11978   0016B0                     u7121:
 11979   0016B0  EF5C  F00B         	goto	l6334
 11980   0016B4                     u7120:
 11981   0016B4                     
 11982                           ; BSR set to: 0
 11983   0016B4  0E80               	movlw	128
 11984   0016B6  1B60               	xorwf	___fladd@signs& (0+255),f,b
 11985   0016B8                     l6334:
 11986                           
 11987                           ; BSR set to: 0
 11988   0016B8  C062  F063         	movff	___fladd@bexp,___fladd@grs
 11989   0016BC                     
 11990                           ; BSR set to: 0
 11991   0016BC  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 11992   0016C0                     
 11993                           ; BSR set to: 0
 11994   0016C0  C063  F061         	movff	___fladd@grs,___fladd@aexp
 11995   0016C4                     
 11996                           ; BSR set to: 0
 11997   0016C4  C046  F063         	movff	___fladd@b,___fladd@grs
 11998   0016C8                     
 11999                           ; BSR set to: 0
 12000   0016C8  C04A  F046         	movff	___fladd@a,___fladd@b
 12001   0016CC                     
 12002                           ; BSR set to: 0
 12003   0016CC  C063  F04A         	movff	___fladd@grs,___fladd@a
 12004   0016D0                     
 12005                           ; BSR set to: 0
 12006   0016D0  C047  F063         	movff	___fladd@b+1,___fladd@grs
 12007   0016D4                     
 12008                           ; BSR set to: 0
 12009   0016D4  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
 12010   0016D8                     
 12011                           ; BSR set to: 0
 12012   0016D8  C063  F04B         	movff	___fladd@grs,___fladd@a+1
 12013   0016DC                     
 12014                           ; BSR set to: 0
 12015   0016DC  C048  F063         	movff	___fladd@b+2,___fladd@grs
 12016   0016E0                     
 12017                           ; BSR set to: 0
 12018   0016E0  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
 12019   0016E4                     
 12020                           ; BSR set to: 0
 12021   0016E4  C063  F04C         	movff	___fladd@grs,___fladd@a+2
 12022   0016E8                     
 12023                           ; BSR set to: 0
 12024   0016E8  C049  F063         	movff	___fladd@b+3,___fladd@grs
 12025   0016EC                     
 12026                           ; BSR set to: 0
 12027   0016EC  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
 12028   0016F0                     
 12029                           ; BSR set to: 0
 12030   0016F0  C063  F04D         	movff	___fladd@grs,___fladd@a+3
 12031   0016F4                     l6364:
 12032                           
 12033                           ; BSR set to: 0
 12034   0016F4  0E00               	movlw	0
 12035   0016F6  6F63               	movwf	___fladd@grs& (0+255),b
 12036   0016F8                     
 12037                           ; BSR set to: 0
 12038   0016F8  5162               	movf	___fladd@bexp& (0+255),w,b
 12039   0016FA  C061  F04E         	movff	___fladd@aexp,??___fladd
 12040   0016FE  6A4F               	clrf	(??___fladd+1)^0,c
 12041   001700  5E4E               	subwf	??___fladd^0,f,c
 12042   001702  0E00               	movlw	0
 12043   001704  5A4F               	subwfb	(??___fladd+1)^0,f,c
 12044   001706  BE4F               	btfsc	(??___fladd+1)^0,7,c
 12045   001708  EF8F  F00B         	goto	u7131
 12046   00170C  504F               	movf	(??___fladd+1)^0,w,c
 12047   00170E  E109               	bnz	u7130
 12048   001710  0E1A               	movlw	26
 12049   001712  5C4E               	subwf	??___fladd^0,w,c
 12050   001714  A0D8               	btfss	status,0,c
 12051   001716  EF8F  F00B         	goto	u7131
 12052   00171A  EF91  F00B         	goto	u7130
 12053   00171E                     u7131:
 12054   00171E  EFC8  F00B         	goto	l1239
 12055   001722                     u7130:
 12056   001722                     
 12057                           ; BSR set to: 0
 12058   001722  5046               	movf	___fladd@b^0,w,c
 12059   001724  1047               	iorwf	(___fladd@b+1)^0,w,c
 12060   001726  1048               	iorwf	(___fladd@b+2)^0,w,c
 12061   001728  1049               	iorwf	(___fladd@b+3)^0,w,c
 12062   00172A  A4D8               	btfss	status,2,c
 12063   00172C  EF9A  F00B         	goto	u7141
 12064   001730  EF9D  F00B         	goto	u7140
 12065   001734                     u7141:
 12066   001734  0E01               	movlw	1
 12067   001736  EF9E  F00B         	goto	u7150
 12068   00173A                     u7140:
 12069   00173A  0E00               	movlw	0
 12070   00173C                     u7150:
 12071   00173C  6F63               	movwf	___fladd@grs& (0+255),b
 12072   00173E                     
 12073                           ; BSR set to: 0
 12074   00173E  0E00               	movlw	0
 12075   001740  6E46               	movwf	___fladd@b^0,c
 12076   001742  0E00               	movlw	0
 12077   001744  6E47               	movwf	(___fladd@b+1)^0,c
 12078   001746  0E00               	movlw	0
 12079   001748  6E48               	movwf	(___fladd@b+2)^0,c
 12080   00174A  0E00               	movlw	0
 12081   00174C  6E49               	movwf	(___fladd@b+3)^0,c
 12082   00174E                     
 12083                           ; BSR set to: 0
 12084   00174E  C061  F062         	movff	___fladd@aexp,___fladd@bexp
 12085   001752  EFD1  F00B         	goto	l1238
 12086   001756                     l1240:
 12087                           
 12088                           ; BSR set to: 0
 12089   001756  A163               	btfss	___fladd@grs& (0+255),0,b
 12090   001758  EFB0  F00B         	goto	u7161
 12091   00175C  EFB2  F00B         	goto	u7160
 12092   001760                     u7161:
 12093   001760  EFB8  F00B         	goto	l6376
 12094   001764                     u7160:
 12095   001764                     
 12096                           ; BSR set to: 0
 12097   001764  90D8               	bcf	status,0,c
 12098   001766  3163               	rrcf	___fladd@grs& (0+255),w,b
 12099   001768  0901               	iorlw	1
 12100   00176A  6F63               	movwf	___fladd@grs& (0+255),b
 12101   00176C  EFBA  F00B         	goto	l6378
 12102   001770                     l6376:
 12103                           
 12104                           ; BSR set to: 0
 12105   001770  90D8               	bcf	status,0,c
 12106   001772  3363               	rrcf	___fladd@grs& (0+255),f,b
 12107   001774                     l6378:
 12108                           
 12109                           ; BSR set to: 0
 12110   001774  A046               	btfss	___fladd@b^0,0,c
 12111   001776  EFBF  F00B         	goto	u7171
 12112   00177A  EFC1  F00B         	goto	u7170
 12113   00177E                     u7171:
 12114   00177E  EFC2  F00B         	goto	l6382
 12115   001782                     u7170:
 12116   001782                     
 12117                           ; BSR set to: 0
 12118   001782  8F63               	bsf	___fladd@grs& (0+255),7,b
 12119   001784                     l6382:
 12120                           
 12121                           ; BSR set to: 0
 12122   001784  3449               	rlcf	(___fladd@b+3)^0,w,c
 12123   001786  3249               	rrcf	(___fladd@b+3)^0,f,c
 12124   001788  3248               	rrcf	(___fladd@b+2)^0,f,c
 12125   00178A  3247               	rrcf	(___fladd@b+1)^0,f,c
 12126   00178C  3246               	rrcf	___fladd@b^0,f,c
 12127   00178E                     
 12128                           ; BSR set to: 0
 12129   00178E  2B62               	incf	___fladd@bexp& (0+255),f,b
 12130   001790                     l1239:
 12131                           
 12132                           ; BSR set to: 0
 12133   001790  5161               	movf	___fladd@aexp& (0+255),w,b
 12134   001792  5D62               	subwf	___fladd@bexp& (0+255),w,b
 12135   001794  A0D8               	btfss	status,0,c
 12136   001796  EFCF  F00B         	goto	u7181
 12137   00179A  EFD1  F00B         	goto	u7180
 12138   00179E                     u7181:
 12139   00179E  EFAB  F00B         	goto	l1240
 12140   0017A2                     u7180:
 12141   0017A2                     l1238:
 12142                           
 12143                           ; BSR set to: 0
 12144   0017A2  BD60               	btfsc	___fladd@signs& (0+255),6,b
 12145   0017A4  EFD6  F00B         	goto	u7191
 12146   0017A8  EFD8  F00B         	goto	u7190
 12147   0017AC                     u7191:
 12148   0017AC  EF18  F00C         	goto	l6410
 12149   0017B0                     u7190:
 12150   0017B0                     
 12151                           ; BSR set to: 0
 12152   0017B0  5162               	movf	___fladd@bexp& (0+255),w,b
 12153   0017B2  A4D8               	btfss	status,2,c
 12154   0017B4  EFDE  F00B         	goto	u7201
 12155   0017B8  EFE0  F00B         	goto	u7200
 12156   0017BC                     u7201:
 12157   0017BC  EFEA  F00B         	goto	l6392
 12158   0017C0                     u7200:
 12159   0017C0                     
 12160                           ; BSR set to: 0
 12161   0017C0  0E00               	movlw	0
 12162   0017C2  6E46               	movwf	?___fladd^0,c
 12163   0017C4  0E00               	movlw	0
 12164   0017C6  6E47               	movwf	(?___fladd+1)^0,c
 12165   0017C8  0E00               	movlw	0
 12166   0017CA  6E48               	movwf	(?___fladd+2)^0,c
 12167   0017CC  0E00               	movlw	0
 12168   0017CE  6E49               	movwf	(?___fladd+3)^0,c
 12169   0017D0  EF39  F00D         	goto	l1247
 12170   0017D4                     l6392:
 12171                           
 12172                           ; BSR set to: 0
 12173   0017D4  504A               	movf	___fladd@a^0,w,c
 12174   0017D6  2646               	addwf	___fladd@b^0,f,c
 12175   0017D8  504B               	movf	(___fladd@a+1)^0,w,c
 12176   0017DA  2247               	addwfc	(___fladd@b+1)^0,f,c
 12177   0017DC  504C               	movf	(___fladd@a+2)^0,w,c
 12178   0017DE  2248               	addwfc	(___fladd@b+2)^0,f,c
 12179   0017E0  504D               	movf	(___fladd@a+3)^0,w,c
 12180   0017E2  2249               	addwfc	(___fladd@b+3)^0,f,c
 12181   0017E4                     
 12182                           ; BSR set to: 0
 12183   0017E4  A049               	btfss	(___fladd@b+3)^0,0,c
 12184   0017E6  EFF7  F00B         	goto	u7211
 12185   0017EA  EFF9  F00B         	goto	u7210
 12186   0017EE                     u7211:
 12187   0017EE  EFA5  F00C         	goto	l6446
 12188   0017F2                     u7210:
 12189   0017F2                     
 12190                           ; BSR set to: 0
 12191   0017F2  A163               	btfss	___fladd@grs& (0+255),0,b
 12192   0017F4  EFFE  F00B         	goto	u7221
 12193   0017F8  EF00  F00C         	goto	u7220
 12194   0017FC                     u7221:
 12195   0017FC  EF06  F00C         	goto	l6400
 12196   001800                     u7220:
 12197   001800                     
 12198                           ; BSR set to: 0
 12199   001800  90D8               	bcf	status,0,c
 12200   001802  3163               	rrcf	___fladd@grs& (0+255),w,b
 12201   001804  0901               	iorlw	1
 12202   001806  6F63               	movwf	___fladd@grs& (0+255),b
 12203   001808  EF08  F00C         	goto	l6402
 12204   00180C                     l6400:
 12205                           
 12206                           ; BSR set to: 0
 12207   00180C  90D8               	bcf	status,0,c
 12208   00180E  3363               	rrcf	___fladd@grs& (0+255),f,b
 12209   001810                     l6402:
 12210                           
 12211                           ; BSR set to: 0
 12212   001810  A046               	btfss	___fladd@b^0,0,c
 12213   001812  EF0D  F00C         	goto	u7231
 12214   001816  EF0F  F00C         	goto	u7230
 12215   00181A                     u7231:
 12216   00181A  EF10  F00C         	goto	l6406
 12217   00181E                     u7230:
 12218   00181E                     
 12219                           ; BSR set to: 0
 12220   00181E  8F63               	bsf	___fladd@grs& (0+255),7,b
 12221   001820                     l6406:
 12222                           
 12223                           ; BSR set to: 0
 12224   001820  3449               	rlcf	(___fladd@b+3)^0,w,c
 12225   001822  3249               	rrcf	(___fladd@b+3)^0,f,c
 12226   001824  3248               	rrcf	(___fladd@b+2)^0,f,c
 12227   001826  3247               	rrcf	(___fladd@b+1)^0,f,c
 12228   001828  3246               	rrcf	___fladd@b^0,f,c
 12229   00182A                     
 12230                           ; BSR set to: 0
 12231   00182A  2B62               	incf	___fladd@bexp& (0+255),f,b
 12232   00182C  EFA5  F00C         	goto	l6446
 12233   001830                     l6410:
 12234                           
 12235                           ; BSR set to: 0
 12236   001830  504A               	movf	___fladd@a^0,w,c
 12237   001832  5C46               	subwf	___fladd@b^0,w,c
 12238   001834  504B               	movf	(___fladd@a+1)^0,w,c
 12239   001836  5847               	subwfb	(___fladd@b+1)^0,w,c
 12240   001838  504C               	movf	(___fladd@a+2)^0,w,c
 12241   00183A  5848               	subwfb	(___fladd@b+2)^0,w,c
 12242   00183C  5049               	movf	(___fladd@b+3)^0,w,c
 12243   00183E  0A80               	xorlw	128
 12244   001840  6E4E               	movwf	??___fladd^0,c
 12245   001842  504D               	movf	(___fladd@a+3)^0,w,c
 12246   001844  0A80               	xorlw	128
 12247   001846  584E               	subwfb	??___fladd^0,w,c
 12248   001848  B0D8               	btfsc	status,0,c
 12249   00184A  EF29  F00C         	goto	u7241
 12250   00184E  EF2B  F00C         	goto	u7240
 12251   001852                     u7241:
 12252   001852  EF56  F00C         	goto	l6420
 12253   001856                     u7240:
 12254   001856                     
 12255                           ; BSR set to: 0
 12256   001856  5046               	movf	___fladd@b^0,w,c
 12257   001858  5C4A               	subwf	___fladd@a^0,w,c
 12258   00185A  6E4E               	movwf	??___fladd^0,c
 12259   00185C  5047               	movf	(___fladd@b+1)^0,w,c
 12260   00185E  584B               	subwfb	(___fladd@a+1)^0,w,c
 12261   001860  6E4F               	movwf	(??___fladd+1)^0,c
 12262   001862  5048               	movf	(___fladd@b+2)^0,w,c
 12263   001864  584C               	subwfb	(___fladd@a+2)^0,w,c
 12264   001866  6E50               	movwf	(??___fladd+2)^0,c
 12265   001868  5049               	movf	(___fladd@b+3)^0,w,c
 12266   00186A  584D               	subwfb	(___fladd@a+3)^0,w,c
 12267   00186C  6E51               	movwf	(??___fladd+3)^0,c
 12268   00186E  0EFF               	movlw	255
 12269   001870  244E               	addwf	??___fladd^0,w,c
 12270   001872  6E46               	movwf	___fladd@b^0,c
 12271   001874  0EFF               	movlw	255
 12272   001876  204F               	addwfc	(??___fladd+1)^0,w,c
 12273   001878  6E47               	movwf	(___fladd@b+1)^0,c
 12274   00187A  0EFF               	movlw	255
 12275   00187C  2050               	addwfc	(??___fladd+2)^0,w,c
 12276   00187E  6E48               	movwf	(___fladd@b+2)^0,c
 12277   001880  0EFF               	movlw	255
 12278   001882  2051               	addwfc	(??___fladd+3)^0,w,c
 12279   001884  6E49               	movwf	(___fladd@b+3)^0,c
 12280   001886  0E80               	movlw	128
 12281   001888  1B60               	xorwf	___fladd@signs& (0+255),f,b
 12282   00188A                     
 12283                           ; BSR set to: 0
 12284   00188A  6D63               	negf	___fladd@grs& (0+255),b
 12285   00188C                     
 12286                           ; BSR set to: 0
 12287   00188C  5163               	movf	___fladd@grs& (0+255),w,b
 12288   00188E  A4D8               	btfss	status,2,c
 12289   001890  EF4C  F00C         	goto	u7251
 12290   001894  EF4E  F00C         	goto	u7250
 12291   001898                     u7251:
 12292   001898  EF5E  F00C         	goto	l1255
 12293   00189C                     u7250:
 12294   00189C                     
 12295                           ; BSR set to: 0
 12296   00189C  0E01               	movlw	1
 12297   00189E  2646               	addwf	___fladd@b^0,f,c
 12298   0018A0  0E00               	movlw	0
 12299   0018A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12300   0018A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12301   0018A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12302   0018A8  EF5E  F00C         	goto	l1255
 12303   0018AC                     l6420:
 12304                           
 12305                           ; BSR set to: 0
 12306   0018AC  504A               	movf	___fladd@a^0,w,c
 12307   0018AE  5E46               	subwf	___fladd@b^0,f,c
 12308   0018B0  504B               	movf	(___fladd@a+1)^0,w,c
 12309   0018B2  5A47               	subwfb	(___fladd@b+1)^0,f,c
 12310   0018B4  504C               	movf	(___fladd@a+2)^0,w,c
 12311   0018B6  5A48               	subwfb	(___fladd@b+2)^0,f,c
 12312   0018B8  504D               	movf	(___fladd@a+3)^0,w,c
 12313   0018BA  5A49               	subwfb	(___fladd@b+3)^0,f,c
 12314   0018BC                     l1255:
 12315                           
 12316                           ; BSR set to: 0
 12317   0018BC  5046               	movf	___fladd@b^0,w,c
 12318   0018BE  1047               	iorwf	(___fladd@b+1)^0,w,c
 12319   0018C0  1048               	iorwf	(___fladd@b+2)^0,w,c
 12320   0018C2  1049               	iorwf	(___fladd@b+3)^0,w,c
 12321   0018C4  A4D8               	btfss	status,2,c
 12322   0018C6  EF67  F00C         	goto	u7261
 12323   0018CA  EF69  F00C         	goto	u7260
 12324   0018CE                     u7261:
 12325   0018CE  EF9E  F00C         	goto	l6444
 12326   0018D2                     u7260:
 12327   0018D2                     
 12328                           ; BSR set to: 0
 12329   0018D2  5163               	movf	___fladd@grs& (0+255),w,b
 12330   0018D4  A4D8               	btfss	status,2,c
 12331   0018D6  EF6F  F00C         	goto	u7271
 12332   0018DA  EF71  F00C         	goto	u7270
 12333   0018DE                     u7271:
 12334   0018DE  EF9E  F00C         	goto	l6444
 12335   0018E2                     u7270:
 12336   0018E2                     
 12337                           ; BSR set to: 0
 12338   0018E2  0E00               	movlw	0
 12339   0018E4  6E46               	movwf	?___fladd^0,c
 12340   0018E6  0E00               	movlw	0
 12341   0018E8  6E47               	movwf	(?___fladd+1)^0,c
 12342   0018EA  0E00               	movlw	0
 12343   0018EC  6E48               	movwf	(?___fladd+2)^0,c
 12344   0018EE  0E00               	movlw	0
 12345   0018F0  6E49               	movwf	(?___fladd+3)^0,c
 12346   0018F2  EF39  F00D         	goto	l1247
 12347   0018F6                     l6428:
 12348                           
 12349                           ; BSR set to: 0
 12350   0018F6  90D8               	bcf	status,0,c
 12351   0018F8  3646               	rlcf	___fladd@b^0,f,c
 12352   0018FA  3647               	rlcf	(___fladd@b+1)^0,f,c
 12353   0018FC  3648               	rlcf	(___fladd@b+2)^0,f,c
 12354   0018FE  3649               	rlcf	(___fladd@b+3)^0,f,c
 12355   001900                     
 12356                           ; BSR set to: 0
 12357   001900  AF63               	btfss	___fladd@grs& (0+255),7,b
 12358   001902  EF85  F00C         	goto	u7281
 12359   001906  EF87  F00C         	goto	u7280
 12360   00190A                     u7281:
 12361   00190A  EF88  F00C         	goto	l6434
 12362   00190E                     u7280:
 12363   00190E                     
 12364                           ; BSR set to: 0
 12365   00190E  8046               	bsf	___fladd@b^0,0,c
 12366   001910                     l6434:
 12367                           
 12368                           ; BSR set to: 0
 12369   001910  A163               	btfss	___fladd@grs& (0+255),0,b
 12370   001912  EF8D  F00C         	goto	u7291
 12371   001916  EF8F  F00C         	goto	u7290
 12372   00191A                     u7291:
 12373   00191A  EF93  F00C         	goto	l6438
 12374   00191E                     u7290:
 12375   00191E                     
 12376                           ; BSR set to: 0
 12377   00191E  80D8               	bsf	status,0,c
 12378   001920  3763               	rlcf	___fladd@grs& (0+255),f,b
 12379   001922  EF95  F00C         	goto	l6440
 12380   001926                     l6438:
 12381                           
 12382                           ; BSR set to: 0
 12383   001926  90D8               	bcf	status,0,c
 12384   001928  3763               	rlcf	___fladd@grs& (0+255),f,b
 12385   00192A                     l6440:
 12386                           
 12387                           ; BSR set to: 0
 12388   00192A  5162               	movf	___fladd@bexp& (0+255),w,b
 12389   00192C  B4D8               	btfsc	status,2,c
 12390   00192E  EF9B  F00C         	goto	u7301
 12391   001932  EF9D  F00C         	goto	u7300
 12392   001936                     u7301:
 12393   001936  EF9E  F00C         	goto	l6444
 12394   00193A                     u7300:
 12395   00193A                     
 12396                           ; BSR set to: 0
 12397   00193A  0762               	decf	___fladd@bexp& (0+255),f,b
 12398   00193C                     l6444:
 12399                           
 12400                           ; BSR set to: 0
 12401   00193C  AE48               	btfss	(___fladd@b+2)^0,7,c
 12402   00193E  EFA3  F00C         	goto	u7311
 12403   001942  EFA5  F00C         	goto	u7310
 12404   001946                     u7311:
 12405   001946  EF7B  F00C         	goto	l6428
 12406   00194A                     u7310:
 12407   00194A                     l6446:
 12408                           
 12409                           ; BSR set to: 0
 12410   00194A  0E00               	movlw	0
 12411   00194C  6F61               	movwf	___fladd@aexp& (0+255),b
 12412   00194E                     
 12413                           ; BSR set to: 0
 12414   00194E  AF63               	btfss	___fladd@grs& (0+255),7,b
 12415   001950  EFAC  F00C         	goto	u7321
 12416   001954  EFAE  F00C         	goto	u7320
 12417   001958                     u7321:
 12418   001958  EFC6  F00C         	goto	l1264
 12419   00195C                     u7320:
 12420   00195C                     
 12421                           ; BSR set to: 0
 12422   00195C  C063  F04E         	movff	___fladd@grs,??___fladd
 12423   001960  0E7F               	movlw	127
 12424   001962  164E               	andwf	??___fladd^0,f,c
 12425   001964  B4D8               	btfsc	status,2,c
 12426   001966  EFB7  F00C         	goto	u7331
 12427   00196A  EFB9  F00C         	goto	u7330
 12428   00196E                     u7331:
 12429   00196E  EFBD  F00C         	goto	l1265
 12430   001972                     u7330:
 12431   001972                     l6452:
 12432                           
 12433                           ; BSR set to: 0
 12434   001972  0E01               	movlw	1
 12435   001974  6F61               	movwf	___fladd@aexp& (0+255),b
 12436   001976  EFC6  F00C         	goto	l1264
 12437   00197A                     l1265:
 12438                           
 12439                           ; BSR set to: 0
 12440   00197A  A046               	btfss	___fladd@b^0,0,c
 12441   00197C  EFC2  F00C         	goto	u7341
 12442   001980  EFC4  F00C         	goto	u7340
 12443   001984                     u7341:
 12444   001984  EFC6  F00C         	goto	l1264
 12445   001988                     u7340:
 12446   001988  EFB9  F00C         	goto	l6452
 12447   00198C                     l1264:
 12448                           
 12449                           ; BSR set to: 0
 12450   00198C  5161               	movf	___fladd@aexp& (0+255),w,b
 12451   00198E  B4D8               	btfsc	status,2,c
 12452   001990  EFCC  F00C         	goto	u7351
 12453   001994  EFCE  F00C         	goto	u7350
 12454   001998                     u7351:
 12455   001998  EFF9  F00C         	goto	l6464
 12456   00199C                     u7350:
 12457   00199C                     
 12458                           ; BSR set to: 0
 12459   00199C  0E01               	movlw	1
 12460   00199E  2646               	addwf	___fladd@b^0,f,c
 12461   0019A0  0E00               	movlw	0
 12462   0019A2  2247               	addwfc	(___fladd@b+1)^0,f,c
 12463   0019A4  2248               	addwfc	(___fladd@b+2)^0,f,c
 12464   0019A6  2249               	addwfc	(___fladd@b+3)^0,f,c
 12465   0019A8                     
 12466                           ; BSR set to: 0
 12467   0019A8  A049               	btfss	(___fladd@b+3)^0,0,c
 12468   0019AA  EFD9  F00C         	goto	u7361
 12469   0019AE  EFDB  F00C         	goto	u7360
 12470   0019B2                     u7361:
 12471   0019B2  EFF9  F00C         	goto	l6464
 12472   0019B6                     u7360:
 12473   0019B6                     
 12474                           ; BSR set to: 0
 12475   0019B6  C046  F04E         	movff	___fladd@b,??___fladd
 12476   0019BA  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 12477   0019BE  C048  F050         	movff	___fladd@b+2,??___fladd+2
 12478   0019C2  C049  F051         	movff	___fladd@b+3,??___fladd+3
 12479   0019C6  3451               	rlcf	(??___fladd+3)^0,w,c
 12480   0019C8  3251               	rrcf	(??___fladd+3)^0,f,c
 12481   0019CA  3250               	rrcf	(??___fladd+2)^0,f,c
 12482   0019CC  324F               	rrcf	(??___fladd+1)^0,f,c
 12483   0019CE  324E               	rrcf	??___fladd^0,f,c
 12484   0019D0  C04E  F046         	movff	??___fladd,___fladd@b
 12485   0019D4  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 12486   0019D8  C050  F048         	movff	??___fladd+2,___fladd@b+2
 12487   0019DC  C051  F049         	movff	??___fladd+3,___fladd@b+3
 12488   0019E0  2962               	incf	___fladd@bexp& (0+255),w,b
 12489   0019E2  B4D8               	btfsc	status,2,c
 12490   0019E4  EFF6  F00C         	goto	u7371
 12491   0019E8  EFF8  F00C         	goto	u7370
 12492   0019EC                     u7371:
 12493   0019EC  EFF9  F00C         	goto	l6464
 12494   0019F0                     u7370:
 12495   0019F0                     
 12496                           ; BSR set to: 0
 12497   0019F0  2B62               	incf	___fladd@bexp& (0+255),f,b
 12498   0019F2                     l6464:
 12499                           
 12500                           ; BSR set to: 0
 12501   0019F2  2962               	incf	___fladd@bexp& (0+255),w,b
 12502   0019F4  B4D8               	btfsc	status,2,c
 12503   0019F6  EFFF  F00C         	goto	u7381
 12504   0019FA  EF01  F00D         	goto	u7380
 12505   0019FE                     u7381:
 12506   0019FE  EF09  F00D         	goto	l6468
 12507   001A02                     u7380:
 12508   001A02                     
 12509                           ; BSR set to: 0
 12510   001A02  5162               	movf	___fladd@bexp& (0+255),w,b
 12511   001A04  A4D8               	btfss	status,2,c
 12512   001A06  EF07  F00D         	goto	u7391
 12513   001A0A  EF09  F00D         	goto	u7390
 12514   001A0E                     u7391:
 12515   001A0E  EF1B  F00D         	goto	l6472
 12516   001A12                     u7390:
 12517   001A12                     l6468:
 12518                           
 12519                           ; BSR set to: 0
 12520   001A12  0E00               	movlw	0
 12521   001A14  6E46               	movwf	___fladd@b^0,c
 12522   001A16  0E00               	movlw	0
 12523   001A18  6E47               	movwf	(___fladd@b+1)^0,c
 12524   001A1A  0E00               	movlw	0
 12525   001A1C  6E48               	movwf	(___fladd@b+2)^0,c
 12526   001A1E  0E00               	movlw	0
 12527   001A20  6E49               	movwf	(___fladd@b+3)^0,c
 12528   001A22  5162               	movf	___fladd@bexp& (0+255),w,b
 12529   001A24  A4D8               	btfss	status,2,c
 12530   001A26  EF17  F00D         	goto	u7401
 12531   001A2A  EF19  F00D         	goto	u7400
 12532   001A2E                     u7401:
 12533   001A2E  EF1B  F00D         	goto	l6472
 12534   001A32                     u7400:
 12535   001A32                     
 12536                           ; BSR set to: 0
 12537   001A32  0E00               	movlw	0
 12538   001A34  6F60               	movwf	___fladd@signs& (0+255),b
 12539   001A36                     l6472:
 12540                           
 12541                           ; BSR set to: 0
 12542   001A36  A162               	btfss	___fladd@bexp& (0+255),0,b
 12543   001A38  EF20  F00D         	goto	u7411
 12544   001A3C  EF22  F00D         	goto	u7410
 12545   001A40                     u7411:
 12546   001A40  EF25  F00D         	goto	l6476
 12547   001A44                     u7410:
 12548   001A44                     
 12549                           ; BSR set to: 0
 12550   001A44  8E48               	bsf	(___fladd@b+2)^0,7,c
 12551   001A46  EF26  F00D         	goto	l6478
 12552   001A4A                     l6476:
 12553                           
 12554                           ; BSR set to: 0
 12555   001A4A  9E48               	bcf	(___fladd@b+2)^0,7,c
 12556   001A4C                     l6478:
 12557                           
 12558                           ; BSR set to: 0
 12559   001A4C  90D8               	bcf	status,0,c
 12560   001A4E  3162               	rrcf	___fladd@bexp& (0+255),w,b
 12561   001A50  6E49               	movwf	(___fladd@b+3)^0,c
 12562   001A52                     
 12563                           ; BSR set to: 0
 12564   001A52  AF60               	btfss	___fladd@signs& (0+255),7,b
 12565   001A54  EF2E  F00D         	goto	u7421
 12566   001A58  EF30  F00D         	goto	u7420
 12567   001A5C                     u7421:
 12568   001A5C  EF31  F00D         	goto	l6484
 12569   001A60                     u7420:
 12570   001A60                     
 12571                           ; BSR set to: 0
 12572   001A60  8E49               	bsf	(___fladd@b+3)^0,7,c
 12573   001A62                     l6484:
 12574                           
 12575                           ; BSR set to: 0
 12576   001A62  C046  F046         	movff	___fladd@b,?___fladd
 12577   001A66  C047  F047         	movff	___fladd@b+1,?___fladd+1
 12578   001A6A  C048  F048         	movff	___fladd@b+2,?___fladd+2
 12579   001A6E  C049  F049         	movff	___fladd@b+3,?___fladd+3
 12580   001A72                     l1247:
 12581                           
 12582                           ; BSR set to: 0
 12583   001A72  0012               	return		;funcret
 12584   001A74                     __end_of___fladd:
 12585                           	callstack 0
 12586                           
 12587 ;; *************** function ___flneg *****************
 12588 ;; Defined at:
 12589 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;  f1              4   32[BANK0 ] unsigned char 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;		None
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  4   32[BANK0 ] unsigned char 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12603 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12606 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12607 ;;Total ram usage:        4 bytes
 12608 ;; Hardware stack levels used: 1
 12609 ;; Hardware stack levels required when called: 1
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_efgtoa
 12614 ;;		_sinf
 12615 ;;		___rem_pio2f
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text45
 12620   005046                     __ptext45:
 12621                           	callstack 0
 12622   005046                     ___flneg:
 12623                           	callstack 24
 12624   005046  0100               	movlb	0	; () banked
 12625   005048  5180               	movf	___flneg@f1& (0+255),w,b
 12626   00504A  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12627   00504C  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12628   00504E  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12629   005050  B4D8               	btfsc	status,2,c
 12630   005052  EF2D  F028         	goto	u8061
 12631   005056  EF2F  F028         	goto	u8060
 12632   00505A                     u8061:
 12633   00505A  EF37  F028         	goto	l6898
 12634   00505E                     u8060:
 12635   00505E                     
 12636                           ; BSR set to: 0
 12637   00505E  0E00               	movlw	0
 12638   005060  1B80               	xorwf	___flneg@f1& (0+255),f,b
 12639   005062  0E00               	movlw	0
 12640   005064  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12641   005066  0E00               	movlw	0
 12642   005068  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12643   00506A  0E80               	movlw	128
 12644   00506C  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12645   00506E                     l6898:
 12646                           
 12647                           ; BSR set to: 0
 12648   00506E  C080  F080         	movff	___flneg@f1,?___flneg
 12649   005072  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 12650   005076  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 12651   00507A  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 12652   00507E                     
 12653                           ; BSR set to: 0
 12654   00507E  0012               	return		;funcret
 12655   005080                     __end_of___flneg:
 12656                           	callstack 0
 12657                           
 12658 ;; *************** function ___flmul *****************
 12659 ;; Defined at:
 12660 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;  b               4   19[COMRAM] unsigned char 
 12663 ;;  a               4   23[COMRAM] unsigned char 
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;  prod            4   38[COMRAM] struct .
 12666 ;;  grs             4   33[COMRAM] unsigned long 
 12667 ;;  temp            2   42[COMRAM] struct .
 12668 ;;  bexp            1   37[COMRAM] unsigned char 
 12669 ;;  aexp            1   32[COMRAM] unsigned char 
 12670 ;;  sign            1   31[COMRAM] unsigned char 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  4   19[COMRAM] unsigned char 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2, status,0, prodl, prodh
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12680 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12681 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12683 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12684 ;;Total ram usage:       25 bytes
 12685 ;; Hardware stack levels used: 1
 12686 ;; Hardware stack levels required when called: 1
 12687 ;; This function calls:
 12688 ;;		Nothing
 12689 ;; This function is called by:
 12690 ;;		_runDAC
 12691 ;;		_runADC
 12692 ;;		_efgtoa
 12693 ;;		___cosdf
 12694 ;;		___rem_pio2f
 12695 ;;		___sindf
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text46
 12700   001A74                     __ptext46:
 12701                           	callstack 0
 12702   001A74                     ___flmul:
 12703                           	callstack 24
 12704   001A74  5017               	movf	(___flmul@b+3)^0,w,c
 12705   001A76  0B80               	andlw	128
 12706   001A78  6E20               	movwf	___flmul@sign^0,c
 12707   001A7A  5017               	movf	(___flmul@b+3)^0,w,c
 12708   001A7C  2417               	addwf	(___flmul@b+3)^0,w,c
 12709   001A7E  6E26               	movwf	___flmul@bexp^0,c
 12710   001A80  AE16               	btfss	(___flmul@b+2)^0,7,c
 12711   001A82  EF45  F00D         	goto	u7671
 12712   001A86  EF47  F00D         	goto	u7670
 12713   001A8A                     u7671:
 12714   001A8A  EF48  F00D         	goto	l6646
 12715   001A8E                     u7670:
 12716   001A8E  8026               	bsf	___flmul@bexp^0,0,c
 12717   001A90                     l6646:
 12718   001A90  5026               	movf	___flmul@bexp^0,w,c
 12719   001A92  B4D8               	btfsc	status,2,c
 12720   001A94  EF4E  F00D         	goto	u7681
 12721   001A98  EF50  F00D         	goto	u7680
 12722   001A9C                     u7681:
 12723   001A9C  EF63  F00D         	goto	l6654
 12724   001AA0                     u7680:
 12725   001AA0  2826               	incf	___flmul@bexp^0,w,c
 12726   001AA2  A4D8               	btfss	status,2,c
 12727   001AA4  EF56  F00D         	goto	u7691
 12728   001AA8  EF58  F00D         	goto	u7690
 12729   001AAC                     u7691:
 12730   001AAC  EF60  F00D         	goto	l6652
 12731   001AB0                     u7690:
 12732   001AB0  0E00               	movlw	0
 12733   001AB2  6E14               	movwf	___flmul@b^0,c
 12734   001AB4  0E00               	movlw	0
 12735   001AB6  6E15               	movwf	(___flmul@b+1)^0,c
 12736   001AB8  0E00               	movlw	0
 12737   001ABA  6E16               	movwf	(___flmul@b+2)^0,c
 12738   001ABC  0E00               	movlw	0
 12739   001ABE  6E17               	movwf	(___flmul@b+3)^0,c
 12740   001AC0                     l6652:
 12741   001AC0  8E16               	bsf	(___flmul@b+2)^0,7,c
 12742   001AC2  EF6B  F00D         	goto	l6656
 12743   001AC6                     l6654:
 12744   001AC6  0E00               	movlw	0
 12745   001AC8  6E14               	movwf	___flmul@b^0,c
 12746   001ACA  0E00               	movlw	0
 12747   001ACC  6E15               	movwf	(___flmul@b+1)^0,c
 12748   001ACE  0E00               	movlw	0
 12749   001AD0  6E16               	movwf	(___flmul@b+2)^0,c
 12750   001AD2  0E00               	movlw	0
 12751   001AD4  6E17               	movwf	(___flmul@b+3)^0,c
 12752   001AD6                     l6656:
 12753   001AD6  501B               	movf	(___flmul@a+3)^0,w,c
 12754   001AD8  0B80               	andlw	128
 12755   001ADA  1A20               	xorwf	___flmul@sign^0,f,c
 12756   001ADC  501B               	movf	(___flmul@a+3)^0,w,c
 12757   001ADE  241B               	addwf	(___flmul@a+3)^0,w,c
 12758   001AE0  6E21               	movwf	___flmul@aexp^0,c
 12759   001AE2  AE1A               	btfss	(___flmul@a+2)^0,7,c
 12760   001AE4  EF76  F00D         	goto	u7701
 12761   001AE8  EF78  F00D         	goto	u7700
 12762   001AEC                     u7701:
 12763   001AEC  EF79  F00D         	goto	l6664
 12764   001AF0                     u7700:
 12765   001AF0  8021               	bsf	___flmul@aexp^0,0,c
 12766   001AF2                     l6664:
 12767   001AF2  5021               	movf	___flmul@aexp^0,w,c
 12768   001AF4  B4D8               	btfsc	status,2,c
 12769   001AF6  EF7F  F00D         	goto	u7711
 12770   001AFA  EF81  F00D         	goto	u7710
 12771   001AFE                     u7711:
 12772   001AFE  EF94  F00D         	goto	l6672
 12773   001B02                     u7710:
 12774   001B02  2821               	incf	___flmul@aexp^0,w,c
 12775   001B04  A4D8               	btfss	status,2,c
 12776   001B06  EF87  F00D         	goto	u7721
 12777   001B0A  EF89  F00D         	goto	u7720
 12778   001B0E                     u7721:
 12779   001B0E  EF91  F00D         	goto	l6670
 12780   001B12                     u7720:
 12781   001B12  0E00               	movlw	0
 12782   001B14  6E18               	movwf	___flmul@a^0,c
 12783   001B16  0E00               	movlw	0
 12784   001B18  6E19               	movwf	(___flmul@a+1)^0,c
 12785   001B1A  0E00               	movlw	0
 12786   001B1C  6E1A               	movwf	(___flmul@a+2)^0,c
 12787   001B1E  0E00               	movlw	0
 12788   001B20  6E1B               	movwf	(___flmul@a+3)^0,c
 12789   001B22                     l6670:
 12790   001B22  8E1A               	bsf	(___flmul@a+2)^0,7,c
 12791   001B24  EF9C  F00D         	goto	l1324
 12792   001B28                     l6672:
 12793   001B28  0E00               	movlw	0
 12794   001B2A  6E18               	movwf	___flmul@a^0,c
 12795   001B2C  0E00               	movlw	0
 12796   001B2E  6E19               	movwf	(___flmul@a+1)^0,c
 12797   001B30  0E00               	movlw	0
 12798   001B32  6E1A               	movwf	(___flmul@a+2)^0,c
 12799   001B34  0E00               	movlw	0
 12800   001B36  6E1B               	movwf	(___flmul@a+3)^0,c
 12801   001B38                     l1324:
 12802   001B38  5021               	movf	___flmul@aexp^0,w,c
 12803   001B3A  B4D8               	btfsc	status,2,c
 12804   001B3C  EFA2  F00D         	goto	u7731
 12805   001B40  EFA4  F00D         	goto	u7730
 12806   001B44                     u7731:
 12807   001B44  EFAC  F00D         	goto	l6676
 12808   001B48                     u7730:
 12809   001B48  5026               	movf	___flmul@bexp^0,w,c
 12810   001B4A  A4D8               	btfss	status,2,c
 12811   001B4C  EFAA  F00D         	goto	u7741
 12812   001B50  EFAC  F00D         	goto	u7740
 12813   001B54                     u7741:
 12814   001B54  EFB6  F00D         	goto	l6680
 12815   001B58                     u7740:
 12816   001B58                     l6676:
 12817   001B58  0E00               	movlw	0
 12818   001B5A  6E14               	movwf	?___flmul^0,c
 12819   001B5C  0E00               	movlw	0
 12820   001B5E  6E15               	movwf	(?___flmul+1)^0,c
 12821   001B60  0E00               	movlw	0
 12822   001B62  6E16               	movwf	(?___flmul+2)^0,c
 12823   001B64  0E00               	movlw	0
 12824   001B66  6E17               	movwf	(?___flmul+3)^0,c
 12825   001B68  EF4E  F00F         	goto	l1328
 12826   001B6C                     l6680:
 12827   001B6C  501A               	movf	(___flmul@a+2)^0,w,c
 12828   001B6E  0214               	mulwf	___flmul@b^0,c
 12829   001B70  CFF3 F02B          	movff	prodl,___flmul@temp
 12830   001B74  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12831   001B78  502B               	movf	___flmul@temp^0,w,c
 12832   001B7A  6E22               	movwf	___flmul@grs^0,c
 12833   001B7C  6A23               	clrf	(___flmul@grs+1)^0,c
 12834   001B7E  6A24               	clrf	(___flmul@grs+2)^0,c
 12835   001B80  6A25               	clrf	(___flmul@grs+3)^0,c
 12836   001B82  502C               	movf	(___flmul@temp+1)^0,w,c
 12837   001B84  6E27               	movwf	___flmul@prod^0,c
 12838   001B86  6A28               	clrf	(___flmul@prod+1)^0,c
 12839   001B88  6A29               	clrf	(___flmul@prod+2)^0,c
 12840   001B8A  6A2A               	clrf	(___flmul@prod+3)^0,c
 12841   001B8C  5019               	movf	(___flmul@a+1)^0,w,c
 12842   001B8E  0215               	mulwf	(___flmul@b+1)^0,c
 12843   001B90  CFF3 F02B          	movff	prodl,___flmul@temp
 12844   001B94  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12845   001B98  502B               	movf	___flmul@temp^0,w,c
 12846   001B9A  2622               	addwf	___flmul@grs^0,f,c
 12847   001B9C  0E00               	movlw	0
 12848   001B9E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12849   001BA0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12850   001BA2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12851   001BA4  502C               	movf	(___flmul@temp+1)^0,w,c
 12852   001BA6  2627               	addwf	___flmul@prod^0,f,c
 12853   001BA8  0E00               	movlw	0
 12854   001BAA  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12855   001BAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12856   001BAE  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12857   001BB0  5018               	movf	___flmul@a^0,w,c
 12858   001BB2  0216               	mulwf	(___flmul@b+2)^0,c
 12859   001BB4  CFF3 F02B          	movff	prodl,___flmul@temp
 12860   001BB8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12861   001BBC  502B               	movf	___flmul@temp^0,w,c
 12862   001BBE  2622               	addwf	___flmul@grs^0,f,c
 12863   001BC0  0E00               	movlw	0
 12864   001BC2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12865   001BC4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12866   001BC6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12867   001BC8  502C               	movf	(___flmul@temp+1)^0,w,c
 12868   001BCA  2627               	addwf	___flmul@prod^0,f,c
 12869   001BCC  0E00               	movlw	0
 12870   001BCE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12871   001BD0  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12872   001BD2  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12873   001BD4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12874   001BD8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12875   001BDC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12876   001BE0  6A22               	clrf	___flmul@grs^0,c
 12877   001BE2  5018               	movf	___flmul@a^0,w,c
 12878   001BE4  0215               	mulwf	(___flmul@b+1)^0,c
 12879   001BE6  CFF3 F02B          	movff	prodl,___flmul@temp
 12880   001BEA  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12881   001BEE  502B               	movf	___flmul@temp^0,w,c
 12882   001BF0  2622               	addwf	___flmul@grs^0,f,c
 12883   001BF2  502C               	movf	(___flmul@temp+1)^0,w,c
 12884   001BF4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12885   001BF6  0E00               	movlw	0
 12886   001BF8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12887   001BFA  0E00               	movlw	0
 12888   001BFC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12889   001BFE  5019               	movf	(___flmul@a+1)^0,w,c
 12890   001C00  0214               	mulwf	___flmul@b^0,c
 12891   001C02  CFF3 F02B          	movff	prodl,___flmul@temp
 12892   001C06  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12893   001C0A  502B               	movf	___flmul@temp^0,w,c
 12894   001C0C  2622               	addwf	___flmul@grs^0,f,c
 12895   001C0E  502C               	movf	(___flmul@temp+1)^0,w,c
 12896   001C10  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12897   001C12  0E00               	movlw	0
 12898   001C14  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12899   001C16  0E00               	movlw	0
 12900   001C18  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12901   001C1A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12902   001C1E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12903   001C22  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12904   001C26  6A22               	clrf	___flmul@grs^0,c
 12905   001C28  5018               	movf	___flmul@a^0,w,c
 12906   001C2A  0214               	mulwf	___flmul@b^0,c
 12907   001C2C  CFF3 F02B          	movff	prodl,___flmul@temp
 12908   001C30  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12909   001C34  502B               	movf	___flmul@temp^0,w,c
 12910   001C36  2622               	addwf	___flmul@grs^0,f,c
 12911   001C38  502C               	movf	(___flmul@temp+1)^0,w,c
 12912   001C3A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12913   001C3C  0E00               	movlw	0
 12914   001C3E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12915   001C40  0E00               	movlw	0
 12916   001C42  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12917   001C44  501A               	movf	(___flmul@a+2)^0,w,c
 12918   001C46  0215               	mulwf	(___flmul@b+1)^0,c
 12919   001C48  CFF3 F02B          	movff	prodl,___flmul@temp
 12920   001C4C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12921   001C50  502B               	movf	___flmul@temp^0,w,c
 12922   001C52  2627               	addwf	___flmul@prod^0,f,c
 12923   001C54  502C               	movf	(___flmul@temp+1)^0,w,c
 12924   001C56  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12925   001C58  0E00               	movlw	0
 12926   001C5A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12927   001C5C  0E00               	movlw	0
 12928   001C5E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12929   001C60  5019               	movf	(___flmul@a+1)^0,w,c
 12930   001C62  0216               	mulwf	(___flmul@b+2)^0,c
 12931   001C64  CFF3 F02B          	movff	prodl,___flmul@temp
 12932   001C68  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12933   001C6C  502B               	movf	___flmul@temp^0,w,c
 12934   001C6E  2627               	addwf	___flmul@prod^0,f,c
 12935   001C70  502C               	movf	(___flmul@temp+1)^0,w,c
 12936   001C72  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12937   001C74  0E00               	movlw	0
 12938   001C76  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12939   001C78  0E00               	movlw	0
 12940   001C7A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12941   001C7C  501A               	movf	(___flmul@a+2)^0,w,c
 12942   001C7E  0216               	mulwf	(___flmul@b+2)^0,c
 12943   001C80  CFF3 F02B          	movff	prodl,___flmul@temp
 12944   001C84  CFF4 F02C          	movff	prodh,___flmul@temp+1
 12945   001C88  502B               	movf	___flmul@temp^0,w,c
 12946   001C8A  6E1C               	movwf	??___flmul^0,c
 12947   001C8C  502C               	movf	(___flmul@temp+1)^0,w,c
 12948   001C8E  6E1D               	movwf	(??___flmul+1)^0,c
 12949   001C90  6A1E               	clrf	(??___flmul+2)^0,c
 12950   001C92  6A1F               	clrf	(??___flmul+3)^0,c
 12951   001C94  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 12952   001C98  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 12953   001C9C  C01C  F01D         	movff	??___flmul,??___flmul+1
 12954   001CA0  6A1C               	clrf	??___flmul^0,c
 12955   001CA2  501C               	movf	??___flmul^0,w,c
 12956   001CA4  2627               	addwf	___flmul@prod^0,f,c
 12957   001CA6  501D               	movf	(??___flmul+1)^0,w,c
 12958   001CA8  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12959   001CAA  501E               	movf	(??___flmul+2)^0,w,c
 12960   001CAC  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12961   001CAE  501F               	movf	(??___flmul+3)^0,w,c
 12962   001CB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12963   001CB2  C022  F01C         	movff	___flmul@grs,??___flmul
 12964   001CB6  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 12965   001CBA  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 12966   001CBE  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 12967   001CC2  0E19               	movlw	25
 12968   001CC4  EF69  F00E         	goto	u7750
 12969   001CC8                     u7755:
 12970   001CC8  90D8               	bcf	status,0,c
 12971   001CCA  321F               	rrcf	(??___flmul+3)^0,f,c
 12972   001CCC  321E               	rrcf	(??___flmul+2)^0,f,c
 12973   001CCE  321D               	rrcf	(??___flmul+1)^0,f,c
 12974   001CD0  321C               	rrcf	??___flmul^0,f,c
 12975   001CD2                     u7750:
 12976   001CD2  2EE8               	decfsz	wreg,f,c
 12977   001CD4  EF64  F00E         	goto	u7755
 12978   001CD8  501C               	movf	??___flmul^0,w,c
 12979   001CDA  2627               	addwf	___flmul@prod^0,f,c
 12980   001CDC  501D               	movf	(??___flmul+1)^0,w,c
 12981   001CDE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 12982   001CE0  501E               	movf	(??___flmul+2)^0,w,c
 12983   001CE2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 12984   001CE4  501F               	movf	(??___flmul+3)^0,w,c
 12985   001CE6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 12986   001CE8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12987   001CEC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12988   001CF0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12989   001CF4  6A22               	clrf	___flmul@grs^0,c
 12990   001CF6  5021               	movf	___flmul@aexp^0,w,c
 12991   001CF8  C026  F01C         	movff	___flmul@bexp,??___flmul
 12992   001CFC  6A1D               	clrf	(??___flmul+1)^0,c
 12993   001CFE  261C               	addwf	??___flmul^0,f,c
 12994   001D00  0E00               	movlw	0
 12995   001D02  221D               	addwfc	(??___flmul+1)^0,f,c
 12996   001D04  0E82               	movlw	130
 12997   001D06  241C               	addwf	??___flmul^0,w,c
 12998   001D08  6E2B               	movwf	___flmul@temp^0,c
 12999   001D0A  0EFF               	movlw	255
 13000   001D0C  201D               	addwfc	(??___flmul+1)^0,w,c
 13001   001D0E  6E2C               	movwf	(___flmul@temp+1)^0,c
 13002   001D10  EF9F  F00E         	goto	l6728
 13003   001D14                     l6722:
 13004   001D14  90D8               	bcf	status,0,c
 13005   001D16  3627               	rlcf	___flmul@prod^0,f,c
 13006   001D18  3628               	rlcf	(___flmul@prod+1)^0,f,c
 13007   001D1A  3629               	rlcf	(___flmul@prod+2)^0,f,c
 13008   001D1C  362A               	rlcf	(___flmul@prod+3)^0,f,c
 13009   001D1E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13010   001D20  EF94  F00E         	goto	u7761
 13011   001D24  EF96  F00E         	goto	u7760
 13012   001D28                     u7761:
 13013   001D28  EF97  F00E         	goto	l1331
 13014   001D2C                     u7760:
 13015   001D2C  8027               	bsf	___flmul@prod^0,0,c
 13016   001D2E                     l1331:
 13017   001D2E  90D8               	bcf	status,0,c
 13018   001D30  3622               	rlcf	___flmul@grs^0,f,c
 13019   001D32  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13020   001D34  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13021   001D36  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13022   001D38  062B               	decf	___flmul@temp^0,f,c
 13023   001D3A  A0D8               	btfss	status,0,c
 13024   001D3C  062C               	decf	(___flmul@temp+1)^0,f,c
 13025   001D3E                     l6728:
 13026   001D3E  AE29               	btfss	(___flmul@prod+2)^0,7,c
 13027   001D40  EFA4  F00E         	goto	u7771
 13028   001D44  EFA6  F00E         	goto	u7770
 13029   001D48                     u7771:
 13030   001D48  EF8A  F00E         	goto	l6722
 13031   001D4C                     u7770:
 13032   001D4C  0E00               	movlw	0
 13033   001D4E  6E21               	movwf	___flmul@aexp^0,c
 13034   001D50  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13035   001D52  EFAD  F00E         	goto	u7781
 13036   001D56  EFAF  F00E         	goto	u7780
 13037   001D5A                     u7781:
 13038   001D5A  EFD3  F00E         	goto	l1333
 13039   001D5E                     u7780:
 13040   001D5E  0EFF               	movlw	255
 13041   001D60  1422               	andwf	___flmul@grs^0,w,c
 13042   001D62  6E1C               	movwf	??___flmul^0,c
 13043   001D64  0EFF               	movlw	255
 13044   001D66  1423               	andwf	(___flmul@grs+1)^0,w,c
 13045   001D68  6E1D               	movwf	(??___flmul+1)^0,c
 13046   001D6A  0EFF               	movlw	255
 13047   001D6C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13048   001D6E  6E1E               	movwf	(??___flmul+2)^0,c
 13049   001D70  0E7F               	movlw	127
 13050   001D72  1425               	andwf	(___flmul@grs+3)^0,w,c
 13051   001D74  6E1F               	movwf	(??___flmul+3)^0,c
 13052   001D76  501C               	movf	??___flmul^0,w,c
 13053   001D78  101D               	iorwf	(??___flmul+1)^0,w,c
 13054   001D7A  101E               	iorwf	(??___flmul+2)^0,w,c
 13055   001D7C  101F               	iorwf	(??___flmul+3)^0,w,c
 13056   001D7E  B4D8               	btfsc	status,2,c
 13057   001D80  EFC4  F00E         	goto	u7791
 13058   001D84  EFC6  F00E         	goto	u7790
 13059   001D88                     u7791:
 13060   001D88  EFCA  F00E         	goto	l1334
 13061   001D8C                     u7790:
 13062   001D8C                     l6736:
 13063   001D8C  0E01               	movlw	1
 13064   001D8E  6E21               	movwf	___flmul@aexp^0,c
 13065   001D90  EFD3  F00E         	goto	l1333
 13066   001D94                     l1334:
 13067   001D94  A027               	btfss	___flmul@prod^0,0,c
 13068   001D96  EFCF  F00E         	goto	u7801
 13069   001D9A  EFD1  F00E         	goto	u7800
 13070   001D9E                     u7801:
 13071   001D9E  EFD3  F00E         	goto	l1333
 13072   001DA2                     u7800:
 13073   001DA2  EFC6  F00E         	goto	l6736
 13074   001DA6                     l1333:
 13075   001DA6  5021               	movf	___flmul@aexp^0,w,c
 13076   001DA8  B4D8               	btfsc	status,2,c
 13077   001DAA  EFD9  F00E         	goto	u7811
 13078   001DAE  EFDB  F00E         	goto	u7810
 13079   001DB2                     u7811:
 13080   001DB2  EFFF  F00E         	goto	l6748
 13081   001DB6                     u7810:
 13082   001DB6  0E01               	movlw	1
 13083   001DB8  2627               	addwf	___flmul@prod^0,f,c
 13084   001DBA  0E00               	movlw	0
 13085   001DBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
 13086   001DBE  2229               	addwfc	(___flmul@prod+2)^0,f,c
 13087   001DC0  222A               	addwfc	(___flmul@prod+3)^0,f,c
 13088   001DC2  A02A               	btfss	(___flmul@prod+3)^0,0,c
 13089   001DC4  EFE6  F00E         	goto	u7821
 13090   001DC8  EFE8  F00E         	goto	u7820
 13091   001DCC                     u7821:
 13092   001DCC  EFFF  F00E         	goto	l6748
 13093   001DD0                     u7820:
 13094   001DD0  C027  F01C         	movff	___flmul@prod,??___flmul
 13095   001DD4  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 13096   001DD8  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 13097   001DDC  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 13098   001DE0  341F               	rlcf	(??___flmul+3)^0,w,c
 13099   001DE2  321F               	rrcf	(??___flmul+3)^0,f,c
 13100   001DE4  321E               	rrcf	(??___flmul+2)^0,f,c
 13101   001DE6  321D               	rrcf	(??___flmul+1)^0,f,c
 13102   001DE8  321C               	rrcf	??___flmul^0,f,c
 13103   001DEA  C01C  F027         	movff	??___flmul,___flmul@prod
 13104   001DEE  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 13105   001DF2  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 13106   001DF6  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 13107   001DFA  4A2B               	infsnz	___flmul@temp^0,f,c
 13108   001DFC  2A2C               	incf	(___flmul@temp+1)^0,f,c
 13109   001DFE                     l6748:
 13110   001DFE  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13111   001E00  EF0A  F00F         	goto	u7831
 13112   001E04  502C               	movf	(___flmul@temp+1)^0,w,c
 13113   001E06  E108               	bnz	u7830
 13114   001E08  282B               	incf	___flmul@temp^0,w,c
 13115   001E0A  A0D8               	btfss	status,0,c
 13116   001E0C  EF0A  F00F         	goto	u7831
 13117   001E10  EF0C  F00F         	goto	u7830
 13118   001E14                     u7831:
 13119   001E14  EF16  F00F         	goto	l6752
 13120   001E18                     u7830:
 13121   001E18  0E00               	movlw	0
 13122   001E1A  6E27               	movwf	___flmul@prod^0,c
 13123   001E1C  0E00               	movlw	0
 13124   001E1E  6E28               	movwf	(___flmul@prod+1)^0,c
 13125   001E20  0E80               	movlw	128
 13126   001E22  6E29               	movwf	(___flmul@prod+2)^0,c
 13127   001E24  0E7F               	movlw	127
 13128   001E26  6E2A               	movwf	(___flmul@prod+3)^0,c
 13129   001E28  EF44  F00F         	goto	l6764
 13130   001E2C                     l6752:
 13131   001E2C  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 13132   001E2E  EF23  F00F         	goto	u7840
 13133   001E32  502C               	movf	(___flmul@temp+1)^0,w,c
 13134   001E34  E106               	bnz	u7841
 13135   001E36  042B               	decf	___flmul@temp^0,w,c
 13136   001E38  B0D8               	btfsc	status,0,c
 13137   001E3A  EF21  F00F         	goto	u7841
 13138   001E3E  EF23  F00F         	goto	u7840
 13139   001E42                     u7841:
 13140   001E42  EF2F  F00F         	goto	l1341
 13141   001E46                     u7840:
 13142   001E46  0E00               	movlw	0
 13143   001E48  6E27               	movwf	___flmul@prod^0,c
 13144   001E4A  0E00               	movlw	0
 13145   001E4C  6E28               	movwf	(___flmul@prod+1)^0,c
 13146   001E4E  0E00               	movlw	0
 13147   001E50  6E29               	movwf	(___flmul@prod+2)^0,c
 13148   001E52  0E00               	movlw	0
 13149   001E54  6E2A               	movwf	(___flmul@prod+3)^0,c
 13150   001E56  0E00               	movlw	0
 13151   001E58  6E20               	movwf	___flmul@sign^0,c
 13152   001E5A  EF44  F00F         	goto	l6764
 13153   001E5E                     l1341:
 13154   001E5E  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 13155   001E62  0EFF               	movlw	255
 13156   001E64  1627               	andwf	___flmul@prod^0,f,c
 13157   001E66  0EFF               	movlw	255
 13158   001E68  1628               	andwf	(___flmul@prod+1)^0,f,c
 13159   001E6A  0E7F               	movlw	127
 13160   001E6C  1629               	andwf	(___flmul@prod+2)^0,f,c
 13161   001E6E  0E00               	movlw	0
 13162   001E70  162A               	andwf	(___flmul@prod+3)^0,f,c
 13163   001E72  A026               	btfss	___flmul@bexp^0,0,c
 13164   001E74  EF3E  F00F         	goto	u7851
 13165   001E78  EF40  F00F         	goto	u7850
 13166   001E7C                     u7851:
 13167   001E7C  EF41  F00F         	goto	l6762
 13168   001E80                     u7850:
 13169   001E80  8E29               	bsf	(___flmul@prod+2)^0,7,c
 13170   001E82                     l6762:
 13171   001E82  90D8               	bcf	status,0,c
 13172   001E84  3026               	rrcf	___flmul@bexp^0,w,c
 13173   001E86  6E2A               	movwf	(___flmul@prod+3)^0,c
 13174   001E88                     l6764:
 13175   001E88  5020               	movf	___flmul@sign^0,w,c
 13176   001E8A  122A               	iorwf	(___flmul@prod+3)^0,f,c
 13177   001E8C  C027  F014         	movff	___flmul@prod,?___flmul
 13178   001E90  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 13179   001E94  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 13180   001E98  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 13181   001E9C                     l1328:
 13182   001E9C  0012               	return		;funcret
 13183   001E9E                     __end_of___flmul:
 13184                           	callstack 0
 13185                           
 13186 ;; *************** function ___flge *****************
 13187 ;; Defined at:
 13188 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;  ff1             4   44[COMRAM] unsigned char 
 13191 ;;  ff2             4   48[COMRAM] unsigned char 
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;		None               void
 13196 ;; Registers used:
 13197 ;;		wreg, status,2, status,0
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13203 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;Total ram usage:       12 bytes
 13208 ;; Hardware stack levels used: 1
 13209 ;; Hardware stack levels required when called: 1
 13210 ;; This function calls:
 13211 ;;		Nothing
 13212 ;; This function is called by:
 13213 ;;		_efgtoa
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text47
 13218   004334                     __ptext47:
 13219                           	callstack 0
 13220   004334                     ___flge:
 13221                           	callstack 24
 13222   004334  0E00               	movlw	0
 13223   004336  142D               	andwf	___flge@ff1^0,w,c
 13224   004338  6E35               	movwf	??___flge^0,c
 13225   00433A  0E00               	movlw	0
 13226   00433C  142E               	andwf	(___flge@ff1+1)^0,w,c
 13227   00433E  6E36               	movwf	(??___flge+1)^0,c
 13228   004340  0E80               	movlw	128
 13229   004342  142F               	andwf	(___flge@ff1+2)^0,w,c
 13230   004344  6E37               	movwf	(??___flge+2)^0,c
 13231   004346  0E7F               	movlw	127
 13232   004348  1430               	andwf	(___flge@ff1+3)^0,w,c
 13233   00434A  6E38               	movwf	(??___flge+3)^0,c
 13234   00434C  5035               	movf	??___flge^0,w,c
 13235   00434E  1036               	iorwf	(??___flge+1)^0,w,c
 13236   004350  1037               	iorwf	(??___flge+2)^0,w,c
 13237   004352  1038               	iorwf	(??___flge+3)^0,w,c
 13238   004354  A4D8               	btfss	status,2,c
 13239   004356  EFAF  F021         	goto	u8011
 13240   00435A  EFB1  F021         	goto	u8010
 13241   00435E                     u8011:
 13242   00435E  EFB9  F021         	goto	l6876
 13243   004362                     u8010:
 13244   004362  0E00               	movlw	0
 13245   004364  6E2D               	movwf	___flge@ff1^0,c
 13246   004366  0E00               	movlw	0
 13247   004368  6E2E               	movwf	(___flge@ff1+1)^0,c
 13248   00436A  0E00               	movlw	0
 13249   00436C  6E2F               	movwf	(___flge@ff1+2)^0,c
 13250   00436E  0E00               	movlw	0
 13251   004370  6E30               	movwf	(___flge@ff1+3)^0,c
 13252   004372                     l6876:
 13253   004372  0E00               	movlw	0
 13254   004374  1431               	andwf	___flge@ff2^0,w,c
 13255   004376  6E35               	movwf	??___flge^0,c
 13256   004378  0E00               	movlw	0
 13257   00437A  1432               	andwf	(___flge@ff2+1)^0,w,c
 13258   00437C  6E36               	movwf	(??___flge+1)^0,c
 13259   00437E  0E80               	movlw	128
 13260   004380  1433               	andwf	(___flge@ff2+2)^0,w,c
 13261   004382  6E37               	movwf	(??___flge+2)^0,c
 13262   004384  0E7F               	movlw	127
 13263   004386  1434               	andwf	(___flge@ff2+3)^0,w,c
 13264   004388  6E38               	movwf	(??___flge+3)^0,c
 13265   00438A  5035               	movf	??___flge^0,w,c
 13266   00438C  1036               	iorwf	(??___flge+1)^0,w,c
 13267   00438E  1037               	iorwf	(??___flge+2)^0,w,c
 13268   004390  1038               	iorwf	(??___flge+3)^0,w,c
 13269   004392  A4D8               	btfss	status,2,c
 13270   004394  EFCE  F021         	goto	u8021
 13271   004398  EFD0  F021         	goto	u8020
 13272   00439C                     u8021:
 13273   00439C  EFD8  F021         	goto	l6880
 13274   0043A0                     u8020:
 13275   0043A0  0E00               	movlw	0
 13276   0043A2  6E31               	movwf	___flge@ff2^0,c
 13277   0043A4  0E00               	movlw	0
 13278   0043A6  6E32               	movwf	(___flge@ff2+1)^0,c
 13279   0043A8  0E00               	movlw	0
 13280   0043AA  6E33               	movwf	(___flge@ff2+2)^0,c
 13281   0043AC  0E00               	movlw	0
 13282   0043AE  6E34               	movwf	(___flge@ff2+3)^0,c
 13283   0043B0                     l6880:
 13284   0043B0  AE30               	btfss	(___flge@ff1+3)^0,7,c
 13285   0043B2  EFDD  F021         	goto	u8031
 13286   0043B6  EFDF  F021         	goto	u8030
 13287   0043BA                     u8031:
 13288   0043BA  EFE8  F021         	goto	l6884
 13289   0043BE                     u8030:
 13290   0043BE  6C2D               	negf	___flge@ff1^0,c
 13291   0043C0  1E2E               	comf	(___flge@ff1+1)^0,f,c
 13292   0043C2  B0D8               	btfsc	status,0,c
 13293   0043C4  2A2E               	incf	(___flge@ff1+1)^0,f,c
 13294   0043C6  1E2F               	comf	(___flge@ff1+2)^0,f,c
 13295   0043C8  B0D8               	btfsc	status,0,c
 13296   0043CA  2A2F               	incf	(___flge@ff1+2)^0,f,c
 13297   0043CC  0E80               	movlw	128
 13298   0043CE  5630               	subfwb	(___flge@ff1+3)^0,f,c
 13299   0043D0                     l6884:
 13300   0043D0  AE34               	btfss	(___flge@ff2+3)^0,7,c
 13301   0043D2  EFED  F021         	goto	u8041
 13302   0043D6  EFEF  F021         	goto	u8040
 13303   0043DA                     u8041:
 13304   0043DA  EFF8  F021         	goto	l975
 13305   0043DE                     u8040:
 13306   0043DE  6C31               	negf	___flge@ff2^0,c
 13307   0043E0  1E32               	comf	(___flge@ff2+1)^0,f,c
 13308   0043E2  B0D8               	btfsc	status,0,c
 13309   0043E4  2A32               	incf	(___flge@ff2+1)^0,f,c
 13310   0043E6  1E33               	comf	(___flge@ff2+2)^0,f,c
 13311   0043E8  B0D8               	btfsc	status,0,c
 13312   0043EA  2A33               	incf	(___flge@ff2+2)^0,f,c
 13313   0043EC  0E80               	movlw	128
 13314   0043EE  5634               	subfwb	(___flge@ff2+3)^0,f,c
 13315   0043F0                     l975:
 13316   0043F0  0E00               	movlw	0
 13317   0043F2  1A2D               	xorwf	___flge@ff1^0,f,c
 13318   0043F4  0E00               	movlw	0
 13319   0043F6  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 13320   0043F8  0E00               	movlw	0
 13321   0043FA  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 13322   0043FC  0E80               	movlw	128
 13323   0043FE  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 13324   004400  0E00               	movlw	0
 13325   004402  1A31               	xorwf	___flge@ff2^0,f,c
 13326   004404  0E00               	movlw	0
 13327   004406  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 13328   004408  0E00               	movlw	0
 13329   00440A  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 13330   00440C  0E80               	movlw	128
 13331   00440E  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 13332   004410  5031               	movf	___flge@ff2^0,w,c
 13333   004412  5C2D               	subwf	___flge@ff1^0,w,c
 13334   004414  5032               	movf	(___flge@ff2+1)^0,w,c
 13335   004416  582E               	subwfb	(___flge@ff1+1)^0,w,c
 13336   004418  5033               	movf	(___flge@ff2+2)^0,w,c
 13337   00441A  582F               	subwfb	(___flge@ff1+2)^0,w,c
 13338   00441C  5034               	movf	(___flge@ff2+3)^0,w,c
 13339   00441E  5830               	subwfb	(___flge@ff1+3)^0,w,c
 13340   004420  B0D8               	btfsc	status,0,c
 13341   004422  EF15  F022         	goto	u8051
 13342   004426  EF17  F022         	goto	u8050
 13343   00442A                     u8051:
 13344   00442A  EF1A  F022         	goto	l6890
 13345   00442E                     u8050:
 13346   00442E  90D8               	bcf	status,0,c
 13347   004430  EF1B  F022         	goto	l980
 13348   004434                     l6890:
 13349   004434  80D8               	bsf	status,0,c
 13350   004436                     l980:
 13351   004436  0012               	return		;funcret
 13352   004438                     __end_of___flge:
 13353                           	callstack 0
 13354                           
 13355 ;; *************** function ___fleq *****************
 13356 ;; Defined at:
 13357 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;  ff1             4    5[COMRAM] unsigned char 
 13360 ;;  ff2             4    9[COMRAM] unsigned char 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;		None
 13363 ;; Return value:  Size  Location     Type
 13364 ;;		None               void
 13365 ;; Registers used:
 13366 ;;		wreg, status,2, status,0
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13372 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13374 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13375 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13376 ;;Total ram usage:       12 bytes
 13377 ;; Hardware stack levels used: 1
 13378 ;; Hardware stack levels required when called: 1
 13379 ;; This function calls:
 13380 ;;		Nothing
 13381 ;; This function is called by:
 13382 ;;		_efgtoa
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           	psect	text48
 13387   004A9E                     __ptext48:
 13388                           	callstack 0
 13389   004A9E                     ___fleq:
 13390                           	callstack 24
 13391   004A9E  0E00               	movlw	0
 13392   004AA0  1406               	andwf	___fleq@ff1^0,w,c
 13393   004AA2  6E0E               	movwf	??___fleq^0,c
 13394   004AA4  0E00               	movlw	0
 13395   004AA6  1407               	andwf	(___fleq@ff1+1)^0,w,c
 13396   004AA8  6E0F               	movwf	(??___fleq+1)^0,c
 13397   004AAA  0E80               	movlw	128
 13398   004AAC  1408               	andwf	(___fleq@ff1+2)^0,w,c
 13399   004AAE  6E10               	movwf	(??___fleq+2)^0,c
 13400   004AB0  0E7F               	movlw	127
 13401   004AB2  1409               	andwf	(___fleq@ff1+3)^0,w,c
 13402   004AB4  6E11               	movwf	(??___fleq+3)^0,c
 13403   004AB6  500E               	movf	??___fleq^0,w,c
 13404   004AB8  100F               	iorwf	(??___fleq+1)^0,w,c
 13405   004ABA  1010               	iorwf	(??___fleq+2)^0,w,c
 13406   004ABC  1011               	iorwf	(??___fleq+3)^0,w,c
 13407   004ABE  A4D8               	btfss	status,2,c
 13408   004AC0  EF64  F025         	goto	u7981
 13409   004AC4  EF66  F025         	goto	u7980
 13410   004AC8                     u7981:
 13411   004AC8  EF6E  F025         	goto	l6860
 13412   004ACC                     u7980:
 13413   004ACC  0E00               	movlw	0
 13414   004ACE  6E06               	movwf	___fleq@ff1^0,c
 13415   004AD0  0E00               	movlw	0
 13416   004AD2  6E07               	movwf	(___fleq@ff1+1)^0,c
 13417   004AD4  0E00               	movlw	0
 13418   004AD6  6E08               	movwf	(___fleq@ff1+2)^0,c
 13419   004AD8  0E00               	movlw	0
 13420   004ADA  6E09               	movwf	(___fleq@ff1+3)^0,c
 13421   004ADC                     l6860:
 13422   004ADC  0E00               	movlw	0
 13423   004ADE  140A               	andwf	___fleq@ff2^0,w,c
 13424   004AE0  6E0E               	movwf	??___fleq^0,c
 13425   004AE2  0E00               	movlw	0
 13426   004AE4  140B               	andwf	(___fleq@ff2+1)^0,w,c
 13427   004AE6  6E0F               	movwf	(??___fleq+1)^0,c
 13428   004AE8  0E80               	movlw	128
 13429   004AEA  140C               	andwf	(___fleq@ff2+2)^0,w,c
 13430   004AEC  6E10               	movwf	(??___fleq+2)^0,c
 13431   004AEE  0E7F               	movlw	127
 13432   004AF0  140D               	andwf	(___fleq@ff2+3)^0,w,c
 13433   004AF2  6E11               	movwf	(??___fleq+3)^0,c
 13434   004AF4  500E               	movf	??___fleq^0,w,c
 13435   004AF6  100F               	iorwf	(??___fleq+1)^0,w,c
 13436   004AF8  1010               	iorwf	(??___fleq+2)^0,w,c
 13437   004AFA  1011               	iorwf	(??___fleq+3)^0,w,c
 13438   004AFC  A4D8               	btfss	status,2,c
 13439   004AFE  EF83  F025         	goto	u7991
 13440   004B02  EF85  F025         	goto	u7990
 13441   004B06                     u7991:
 13442   004B06  EF8D  F025         	goto	l6864
 13443   004B0A                     u7990:
 13444   004B0A  0E00               	movlw	0
 13445   004B0C  6E0A               	movwf	___fleq@ff2^0,c
 13446   004B0E  0E00               	movlw	0
 13447   004B10  6E0B               	movwf	(___fleq@ff2+1)^0,c
 13448   004B12  0E00               	movlw	0
 13449   004B14  6E0C               	movwf	(___fleq@ff2+2)^0,c
 13450   004B16  0E00               	movlw	0
 13451   004B18  6E0D               	movwf	(___fleq@ff2+3)^0,c
 13452   004B1A                     l6864:
 13453   004B1A  500A               	movf	___fleq@ff2^0,w,c
 13454   004B1C  1806               	xorwf	___fleq@ff1^0,w,c
 13455   004B1E  E10F               	bnz	u8000
 13456   004B20  500B               	movf	(___fleq@ff2+1)^0,w,c
 13457   004B22  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 13458   004B24  E10C               	bnz	u8000
 13459   004B26  500C               	movf	(___fleq@ff2+2)^0,w,c
 13460   004B28  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 13461   004B2A  E109               	bnz	u8000
 13462   004B2C  500D               	movf	(___fleq@ff2+3)^0,w,c
 13463   004B2E  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 13464   004B30  B4D8               	btfsc	status,2,c
 13465   004B32  EF9D  F025         	goto	u8001
 13466   004B36  EF9F  F025         	goto	u8000
 13467   004B3A                     u8001:
 13468   004B3A  EFA2  F025         	goto	l6868
 13469   004B3E                     u8000:
 13470   004B3E  90D8               	bcf	status,0,c
 13471   004B40  EFA3  F025         	goto	l969
 13472   004B44                     l6868:
 13473   004B44  80D8               	bsf	status,0,c
 13474   004B46                     l969:
 13475   004B46  0012               	return		;funcret
 13476   004B48                     __end_of___fleq:
 13477                           	callstack 0
 13478                           
 13479 ;; *************** function ___fldiv *****************
 13480 ;; Defined at:
 13481 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;  b               4   44[COMRAM] unsigned char 
 13484 ;;  a               4   48[COMRAM] unsigned char 
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;  grs             4   63[COMRAM] unsigned long 
 13487 ;;  rem             4   56[COMRAM] unsigned long 
 13488 ;;  new_exp         2   61[COMRAM] short 
 13489 ;;  aexp            1   68[COMRAM] unsigned char 
 13490 ;;  bexp            1   67[COMRAM] unsigned char 
 13491 ;;  sign            1   60[COMRAM] unsigned char 
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  4   44[COMRAM] unsigned char 
 13494 ;; Registers used:
 13495 ;;		wreg, status,2, status,0
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13505 ;;Total ram usage:       25 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; Hardware stack levels required when called: 1
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_runDAC
 13512 ;;		_runADC
 13513 ;;		_efgtoa
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text49
 13518   002648                     __ptext49:
 13519                           	callstack 0
 13520   002648                     ___fldiv:
 13521                           	callstack 24
 13522   002648  5030               	movf	(___fldiv@b+3)^0,w,c
 13523   00264A  0B80               	andlw	128
 13524   00264C  6E3D               	movwf	___fldiv@sign^0,c
 13525   00264E  5030               	movf	(___fldiv@b+3)^0,w,c
 13526   002650  2430               	addwf	(___fldiv@b+3)^0,w,c
 13527   002652  6E44               	movwf	___fldiv@bexp^0,c
 13528   002654  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13529   002656  EF2F  F013         	goto	u7441
 13530   00265A  EF31  F013         	goto	u7440
 13531   00265E                     u7441:
 13532   00265E  EF32  F013         	goto	l6508
 13533   002662                     u7440:
 13534   002662  8044               	bsf	___fldiv@bexp^0,0,c
 13535   002664                     l6508:
 13536   002664  5044               	movf	___fldiv@bexp^0,w,c
 13537   002666  B4D8               	btfsc	status,2,c
 13538   002668  EF38  F013         	goto	u7451
 13539   00266C  EF3A  F013         	goto	u7450
 13540   002670                     u7451:
 13541   002670  EF4F  F013         	goto	l6518
 13542   002674                     u7450:
 13543   002674  2844               	incf	___fldiv@bexp^0,w,c
 13544   002676  A4D8               	btfss	status,2,c
 13545   002678  EF40  F013         	goto	u7461
 13546   00267C  EF42  F013         	goto	u7460
 13547   002680                     u7461:
 13548   002680  EF4A  F013         	goto	l6514
 13549   002684                     u7460:
 13550   002684  0E00               	movlw	0
 13551   002686  6E2D               	movwf	___fldiv@b^0,c
 13552   002688  0E00               	movlw	0
 13553   00268A  6E2E               	movwf	(___fldiv@b+1)^0,c
 13554   00268C  0E00               	movlw	0
 13555   00268E  6E2F               	movwf	(___fldiv@b+2)^0,c
 13556   002690  0E00               	movlw	0
 13557   002692  6E30               	movwf	(___fldiv@b+3)^0,c
 13558   002694                     l6514:
 13559   002694  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13560   002696  0E00               	movlw	0
 13561   002698  6E30               	movwf	(___fldiv@b+3)^0,c
 13562   00269A  EF57  F013         	goto	l6520
 13563   00269E                     l6518:
 13564   00269E  0E00               	movlw	0
 13565   0026A0  6E2D               	movwf	___fldiv@b^0,c
 13566   0026A2  0E00               	movlw	0
 13567   0026A4  6E2E               	movwf	(___fldiv@b+1)^0,c
 13568   0026A6  0E00               	movlw	0
 13569   0026A8  6E2F               	movwf	(___fldiv@b+2)^0,c
 13570   0026AA  0E00               	movlw	0
 13571   0026AC  6E30               	movwf	(___fldiv@b+3)^0,c
 13572   0026AE                     l6520:
 13573   0026AE  5034               	movf	(___fldiv@a+3)^0,w,c
 13574   0026B0  0B80               	andlw	128
 13575   0026B2  1A3D               	xorwf	___fldiv@sign^0,f,c
 13576   0026B4  5034               	movf	(___fldiv@a+3)^0,w,c
 13577   0026B6  2434               	addwf	(___fldiv@a+3)^0,w,c
 13578   0026B8  6E45               	movwf	___fldiv@aexp^0,c
 13579   0026BA  AE33               	btfss	(___fldiv@a+2)^0,7,c
 13580   0026BC  EF62  F013         	goto	u7471
 13581   0026C0  EF64  F013         	goto	u7470
 13582   0026C4                     u7471:
 13583   0026C4  EF65  F013         	goto	l6528
 13584   0026C8                     u7470:
 13585   0026C8  8045               	bsf	___fldiv@aexp^0,0,c
 13586   0026CA                     l6528:
 13587   0026CA  5045               	movf	___fldiv@aexp^0,w,c
 13588   0026CC  B4D8               	btfsc	status,2,c
 13589   0026CE  EF6B  F013         	goto	u7481
 13590   0026D2  EF6D  F013         	goto	u7480
 13591   0026D6                     u7481:
 13592   0026D6  EF82  F013         	goto	l6538
 13593   0026DA                     u7480:
 13594   0026DA  2845               	incf	___fldiv@aexp^0,w,c
 13595   0026DC  A4D8               	btfss	status,2,c
 13596   0026DE  EF73  F013         	goto	u7491
 13597   0026E2  EF75  F013         	goto	u7490
 13598   0026E6                     u7491:
 13599   0026E6  EF7D  F013         	goto	l6534
 13600   0026EA                     u7490:
 13601   0026EA  0E00               	movlw	0
 13602   0026EC  6E31               	movwf	___fldiv@a^0,c
 13603   0026EE  0E00               	movlw	0
 13604   0026F0  6E32               	movwf	(___fldiv@a+1)^0,c
 13605   0026F2  0E00               	movlw	0
 13606   0026F4  6E33               	movwf	(___fldiv@a+2)^0,c
 13607   0026F6  0E00               	movlw	0
 13608   0026F8  6E34               	movwf	(___fldiv@a+3)^0,c
 13609   0026FA                     l6534:
 13610   0026FA  8E33               	bsf	(___fldiv@a+2)^0,7,c
 13611   0026FC  0E00               	movlw	0
 13612   0026FE  6E34               	movwf	(___fldiv@a+3)^0,c
 13613   002700  EF8A  F013         	goto	l6540
 13614   002704                     l6538:
 13615   002704  0E00               	movlw	0
 13616   002706  6E31               	movwf	___fldiv@a^0,c
 13617   002708  0E00               	movlw	0
 13618   00270A  6E32               	movwf	(___fldiv@a+1)^0,c
 13619   00270C  0E00               	movlw	0
 13620   00270E  6E33               	movwf	(___fldiv@a+2)^0,c
 13621   002710  0E00               	movlw	0
 13622   002712  6E34               	movwf	(___fldiv@a+3)^0,c
 13623   002714                     l6540:
 13624   002714  5031               	movf	___fldiv@a^0,w,c
 13625   002716  1032               	iorwf	(___fldiv@a+1)^0,w,c
 13626   002718  1033               	iorwf	(___fldiv@a+2)^0,w,c
 13627   00271A  1034               	iorwf	(___fldiv@a+3)^0,w,c
 13628   00271C  A4D8               	btfss	status,2,c
 13629   00271E  EF93  F013         	goto	u7501
 13630   002722  EF95  F013         	goto	u7500
 13631   002726                     u7501:
 13632   002726  EFAD  F013         	goto	l6552
 13633   00272A                     u7500:
 13634   00272A  0E00               	movlw	0
 13635   00272C  6E2D               	movwf	___fldiv@b^0,c
 13636   00272E  0E00               	movlw	0
 13637   002730  6E2E               	movwf	(___fldiv@b+1)^0,c
 13638   002732  0E00               	movlw	0
 13639   002734  6E2F               	movwf	(___fldiv@b+2)^0,c
 13640   002736  0E00               	movlw	0
 13641   002738  6E30               	movwf	(___fldiv@b+3)^0,c
 13642   00273A  0E80               	movlw	128
 13643   00273C  122F               	iorwf	(___fldiv@b+2)^0,f,c
 13644   00273E  0E7F               	movlw	127
 13645   002740  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13646   002742                     l6546:
 13647   002742  503D               	movf	___fldiv@sign^0,w,c
 13648   002744  1230               	iorwf	(___fldiv@b+3)^0,f,c
 13649   002746  C02D  F02D         	movff	___fldiv@b,?___fldiv
 13650   00274A  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 13651   00274E  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 13652   002752  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 13653   002756  EFF0  F014         	goto	l1292
 13654   00275A                     l6552:
 13655   00275A  5044               	movf	___fldiv@bexp^0,w,c
 13656   00275C  A4D8               	btfss	status,2,c
 13657   00275E  EFB3  F013         	goto	u7511
 13658   002762  EFB5  F013         	goto	u7510
 13659   002766                     u7511:
 13660   002766  EFBF  F013         	goto	l6560
 13661   00276A                     u7510:
 13662   00276A  0E00               	movlw	0
 13663   00276C  6E2D               	movwf	?___fldiv^0,c
 13664   00276E  0E00               	movlw	0
 13665   002770  6E2E               	movwf	(?___fldiv+1)^0,c
 13666   002772  0E00               	movlw	0
 13667   002774  6E2F               	movwf	(?___fldiv+2)^0,c
 13668   002776  0E00               	movlw	0
 13669   002778  6E30               	movwf	(?___fldiv+3)^0,c
 13670   00277A  EFF0  F014         	goto	l1292
 13671   00277E                     l6560:
 13672   00277E  5045               	movf	___fldiv@aexp^0,w,c
 13673   002780  C044  F035         	movff	___fldiv@bexp,??___fldiv
 13674   002784  6A36               	clrf	(??___fldiv+1)^0,c
 13675   002786  5E35               	subwf	??___fldiv^0,f,c
 13676   002788  0E00               	movlw	0
 13677   00278A  5A36               	subwfb	(??___fldiv+1)^0,f,c
 13678   00278C  0E7F               	movlw	127
 13679   00278E  2435               	addwf	??___fldiv^0,w,c
 13680   002790  6E3E               	movwf	___fldiv@new_exp^0,c
 13681   002792  0E00               	movlw	0
 13682   002794  2036               	addwfc	(??___fldiv+1)^0,w,c
 13683   002796  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13684   002798  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 13685   00279C  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 13686   0027A0  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 13687   0027A4  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 13688   0027A8  0E00               	movlw	0
 13689   0027AA  6E2D               	movwf	___fldiv@b^0,c
 13690   0027AC  0E00               	movlw	0
 13691   0027AE  6E2E               	movwf	(___fldiv@b+1)^0,c
 13692   0027B0  0E00               	movlw	0
 13693   0027B2  6E2F               	movwf	(___fldiv@b+2)^0,c
 13694   0027B4  0E00               	movlw	0
 13695   0027B6  6E30               	movwf	(___fldiv@b+3)^0,c
 13696   0027B8  0E00               	movlw	0
 13697   0027BA  6E40               	movwf	___fldiv@grs^0,c
 13698   0027BC  0E00               	movlw	0
 13699   0027BE  6E41               	movwf	(___fldiv@grs+1)^0,c
 13700   0027C0  0E00               	movlw	0
 13701   0027C2  6E42               	movwf	(___fldiv@grs+2)^0,c
 13702   0027C4  0E00               	movlw	0
 13703   0027C6  6E43               	movwf	(___fldiv@grs+3)^0,c
 13704   0027C8  0E00               	movlw	0
 13705   0027CA  6E45               	movwf	___fldiv@aexp^0,c
 13706   0027CC  EF20  F014         	goto	l1294
 13707   0027D0                     l6570:
 13708   0027D0  5045               	movf	___fldiv@aexp^0,w,c
 13709   0027D2  B4D8               	btfsc	status,2,c
 13710   0027D4  EFEE  F013         	goto	u7521
 13711   0027D8  EFF0  F013         	goto	u7520
 13712   0027DC                     u7521:
 13713   0027DC  EF07  F014         	goto	l6578
 13714   0027E0                     u7520:
 13715   0027E0  90D8               	bcf	status,0,c
 13716   0027E2  3639               	rlcf	___fldiv@rem^0,f,c
 13717   0027E4  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 13718   0027E6  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 13719   0027E8  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 13720   0027EA  90D8               	bcf	status,0,c
 13721   0027EC  362D               	rlcf	___fldiv@b^0,f,c
 13722   0027EE  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13723   0027F0  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13724   0027F2  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13725   0027F4  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13726   0027F6  EFFF  F013         	goto	u7531
 13727   0027FA  EF01  F014         	goto	u7530
 13728   0027FE                     u7531:
 13729   0027FE  EF02  F014         	goto	l1297
 13730   002802                     u7530:
 13731   002802  802D               	bsf	___fldiv@b^0,0,c
 13732   002804                     l1297:
 13733   002804  90D8               	bcf	status,0,c
 13734   002806  3640               	rlcf	___fldiv@grs^0,f,c
 13735   002808  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13736   00280A  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13737   00280C  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13738   00280E                     l6578:
 13739   00280E  5031               	movf	___fldiv@a^0,w,c
 13740   002810  5C39               	subwf	___fldiv@rem^0,w,c
 13741   002812  5032               	movf	(___fldiv@a+1)^0,w,c
 13742   002814  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 13743   002816  5033               	movf	(___fldiv@a+2)^0,w,c
 13744   002818  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 13745   00281A  5034               	movf	(___fldiv@a+3)^0,w,c
 13746   00281C  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 13747   00281E  A0D8               	btfss	status,0,c
 13748   002820  EF14  F014         	goto	u7541
 13749   002824  EF16  F014         	goto	u7540
 13750   002828                     u7541:
 13751   002828  EF1F  F014         	goto	l6584
 13752   00282C                     u7540:
 13753   00282C  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 13754   00282E  5031               	movf	___fldiv@a^0,w,c
 13755   002830  5E39               	subwf	___fldiv@rem^0,f,c
 13756   002832  5032               	movf	(___fldiv@a+1)^0,w,c
 13757   002834  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 13758   002836  5033               	movf	(___fldiv@a+2)^0,w,c
 13759   002838  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 13760   00283A  5034               	movf	(___fldiv@a+3)^0,w,c
 13761   00283C  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 13762   00283E                     l6584:
 13763   00283E  2A45               	incf	___fldiv@aexp^0,f,c
 13764   002840                     l1294:
 13765   002840  0E19               	movlw	25
 13766   002842  6445               	cpfsgt	___fldiv@aexp^0,c
 13767   002844  EF26  F014         	goto	u7551
 13768   002848  EF28  F014         	goto	u7550
 13769   00284C                     u7551:
 13770   00284C  EFE8  F013         	goto	l6570
 13771   002850                     u7550:
 13772   002850  5039               	movf	___fldiv@rem^0,w,c
 13773   002852  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 13774   002854  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 13775   002856  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 13776   002858  B4D8               	btfsc	status,2,c
 13777   00285A  EF31  F014         	goto	u7561
 13778   00285E  EF33  F014         	goto	u7560
 13779   002862                     u7561:
 13780   002862  EF4B  F014         	goto	l6596
 13781   002866                     u7560:
 13782   002866  8040               	bsf	___fldiv@grs^0,0,c
 13783   002868  EF4B  F014         	goto	l6596
 13784   00286C                     l6590:
 13785   00286C  90D8               	bcf	status,0,c
 13786   00286E  362D               	rlcf	___fldiv@b^0,f,c
 13787   002870  362E               	rlcf	(___fldiv@b+1)^0,f,c
 13788   002872  362F               	rlcf	(___fldiv@b+2)^0,f,c
 13789   002874  3630               	rlcf	(___fldiv@b+3)^0,f,c
 13790   002876  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13791   002878  EF40  F014         	goto	u7571
 13792   00287C  EF42  F014         	goto	u7570
 13793   002880                     u7571:
 13794   002880  EF43  F014         	goto	l1303
 13795   002884                     u7570:
 13796   002884  802D               	bsf	___fldiv@b^0,0,c
 13797   002886                     l1303:
 13798   002886  90D8               	bcf	status,0,c
 13799   002888  3640               	rlcf	___fldiv@grs^0,f,c
 13800   00288A  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 13801   00288C  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 13802   00288E  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 13803   002890  063E               	decf	___fldiv@new_exp^0,f,c
 13804   002892  A0D8               	btfss	status,0,c
 13805   002894  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 13806   002896                     l6596:
 13807   002896  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 13808   002898  EF50  F014         	goto	u7581
 13809   00289C  EF52  F014         	goto	u7580
 13810   0028A0                     u7581:
 13811   0028A0  EF36  F014         	goto	l6590
 13812   0028A4                     u7580:
 13813   0028A4  0E00               	movlw	0
 13814   0028A6  6E45               	movwf	___fldiv@aexp^0,c
 13815   0028A8  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 13816   0028AA  EF59  F014         	goto	u7591
 13817   0028AE  EF5B  F014         	goto	u7590
 13818   0028B2                     u7591:
 13819   0028B2  EF7F  F014         	goto	l1305
 13820   0028B6                     u7590:
 13821   0028B6  0EFF               	movlw	255
 13822   0028B8  1440               	andwf	___fldiv@grs^0,w,c
 13823   0028BA  6E35               	movwf	??___fldiv^0,c
 13824   0028BC  0EFF               	movlw	255
 13825   0028BE  1441               	andwf	(___fldiv@grs+1)^0,w,c
 13826   0028C0  6E36               	movwf	(??___fldiv+1)^0,c
 13827   0028C2  0EFF               	movlw	255
 13828   0028C4  1442               	andwf	(___fldiv@grs+2)^0,w,c
 13829   0028C6  6E37               	movwf	(??___fldiv+2)^0,c
 13830   0028C8  0E7F               	movlw	127
 13831   0028CA  1443               	andwf	(___fldiv@grs+3)^0,w,c
 13832   0028CC  6E38               	movwf	(??___fldiv+3)^0,c
 13833   0028CE  5035               	movf	??___fldiv^0,w,c
 13834   0028D0  1036               	iorwf	(??___fldiv+1)^0,w,c
 13835   0028D2  1037               	iorwf	(??___fldiv+2)^0,w,c
 13836   0028D4  1038               	iorwf	(??___fldiv+3)^0,w,c
 13837   0028D6  B4D8               	btfsc	status,2,c
 13838   0028D8  EF70  F014         	goto	u7601
 13839   0028DC  EF72  F014         	goto	u7600
 13840   0028E0                     u7601:
 13841   0028E0  EF76  F014         	goto	l1306
 13842   0028E4                     u7600:
 13843   0028E4                     l6604:
 13844   0028E4  0E01               	movlw	1
 13845   0028E6  6E45               	movwf	___fldiv@aexp^0,c
 13846   0028E8  EF7F  F014         	goto	l1305
 13847   0028EC                     l1306:
 13848   0028EC  A02D               	btfss	___fldiv@b^0,0,c
 13849   0028EE  EF7B  F014         	goto	u7611
 13850   0028F2  EF7D  F014         	goto	u7610
 13851   0028F6                     u7611:
 13852   0028F6  EF7F  F014         	goto	l1305
 13853   0028FA                     u7610:
 13854   0028FA  EF72  F014         	goto	l6604
 13855   0028FE                     l1305:
 13856   0028FE  5045               	movf	___fldiv@aexp^0,w,c
 13857   002900  B4D8               	btfsc	status,2,c
 13858   002902  EF85  F014         	goto	u7621
 13859   002906  EF87  F014         	goto	u7620
 13860   00290A                     u7621:
 13861   00290A  EFAB  F014         	goto	l6616
 13862   00290E                     u7620:
 13863   00290E  0E01               	movlw	1
 13864   002910  262D               	addwf	___fldiv@b^0,f,c
 13865   002912  0E00               	movlw	0
 13866   002914  222E               	addwfc	(___fldiv@b+1)^0,f,c
 13867   002916  222F               	addwfc	(___fldiv@b+2)^0,f,c
 13868   002918  2230               	addwfc	(___fldiv@b+3)^0,f,c
 13869   00291A  A030               	btfss	(___fldiv@b+3)^0,0,c
 13870   00291C  EF92  F014         	goto	u7631
 13871   002920  EF94  F014         	goto	u7630
 13872   002924                     u7631:
 13873   002924  EFAB  F014         	goto	l6616
 13874   002928                     u7630:
 13875   002928  C02D  F035         	movff	___fldiv@b,??___fldiv
 13876   00292C  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 13877   002930  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 13878   002934  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 13879   002938  3438               	rlcf	(??___fldiv+3)^0,w,c
 13880   00293A  3238               	rrcf	(??___fldiv+3)^0,f,c
 13881   00293C  3237               	rrcf	(??___fldiv+2)^0,f,c
 13882   00293E  3236               	rrcf	(??___fldiv+1)^0,f,c
 13883   002940  3235               	rrcf	??___fldiv^0,f,c
 13884   002942  C035  F02D         	movff	??___fldiv,___fldiv@b
 13885   002946  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 13886   00294A  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 13887   00294E  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 13888   002952  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 13889   002954  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 13890   002956                     l6616:
 13891   002956  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13892   002958  EFB6  F014         	goto	u7641
 13893   00295C  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 13894   00295E  E108               	bnz	u7640
 13895   002960  283E               	incf	___fldiv@new_exp^0,w,c
 13896   002962  A0D8               	btfss	status,0,c
 13897   002964  EFB6  F014         	goto	u7641
 13898   002968  EFB8  F014         	goto	u7640
 13899   00296C                     u7641:
 13900   00296C  EFC3  F014         	goto	l6620
 13901   002970                     u7640:
 13902   002970  0E00               	movlw	0
 13903   002972  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13904   002974  683E               	setf	___fldiv@new_exp^0,c
 13905   002976  0E00               	movlw	0
 13906   002978  6E2D               	movwf	___fldiv@b^0,c
 13907   00297A  0E00               	movlw	0
 13908   00297C  6E2E               	movwf	(___fldiv@b+1)^0,c
 13909   00297E  0E00               	movlw	0
 13910   002980  6E2F               	movwf	(___fldiv@b+2)^0,c
 13911   002982  0E00               	movlw	0
 13912   002984  6E30               	movwf	(___fldiv@b+3)^0,c
 13913   002986                     l6620:
 13914   002986  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13915   002988  EFD0  F014         	goto	u7650
 13916   00298C  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 13917   00298E  E106               	bnz	u7651
 13918   002990  043E               	decf	___fldiv@new_exp^0,w,c
 13919   002992  B0D8               	btfsc	status,0,c
 13920   002994  EFCE  F014         	goto	u7651
 13921   002998  EFD0  F014         	goto	u7650
 13922   00299C                     u7651:
 13923   00299C  EFDE  F014         	goto	l6624
 13924   0029A0                     u7650:
 13925   0029A0  0E00               	movlw	0
 13926   0029A2  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 13927   0029A4  0E00               	movlw	0
 13928   0029A6  6E3E               	movwf	___fldiv@new_exp^0,c
 13929   0029A8  0E00               	movlw	0
 13930   0029AA  6E2D               	movwf	___fldiv@b^0,c
 13931   0029AC  0E00               	movlw	0
 13932   0029AE  6E2E               	movwf	(___fldiv@b+1)^0,c
 13933   0029B0  0E00               	movlw	0
 13934   0029B2  6E2F               	movwf	(___fldiv@b+2)^0,c
 13935   0029B4  0E00               	movlw	0
 13936   0029B6  6E30               	movwf	(___fldiv@b+3)^0,c
 13937   0029B8  0E00               	movlw	0
 13938   0029BA  6E3D               	movwf	___fldiv@sign^0,c
 13939   0029BC                     l6624:
 13940   0029BC  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 13941   0029C0  A044               	btfss	___fldiv@bexp^0,0,c
 13942   0029C2  EFE5  F014         	goto	u7661
 13943   0029C6  EFE7  F014         	goto	u7660
 13944   0029CA                     u7661:
 13945   0029CA  EFEA  F014         	goto	l6630
 13946   0029CE                     u7660:
 13947   0029CE  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 13948   0029D0  EFEB  F014         	goto	l6632
 13949   0029D4                     l6630:
 13950   0029D4  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 13951   0029D6                     l6632:
 13952   0029D6  90D8               	bcf	status,0,c
 13953   0029D8  3044               	rrcf	___fldiv@bexp^0,w,c
 13954   0029DA  6E30               	movwf	(___fldiv@b+3)^0,c
 13955   0029DC  EFA1  F013         	goto	l6546
 13956   0029E0                     l1292:
 13957   0029E0  0012               	return		;funcret
 13958   0029E2                     __end_of___fldiv:
 13959                           	callstack 0
 13960                           
 13961 ;; *************** function _dtoa *****************
 13962 ;; Defined at:
 13963 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 13966 ;;		 -> NULL(0), sprintf@f(12), 
 13967 ;;  d               2   33[COMRAM] int 
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  i               2   42[COMRAM] int 
 13970 ;;  p               2   39[COMRAM] int 
 13971 ;;  w               2   37[COMRAM] int 
 13972 ;;  s               1   41[COMRAM] unsigned char 
 13973 ;; Return value:  Size  Location     Type
 13974 ;;                  1    wreg      void 
 13975 ;; Registers used:
 13976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13977 ;; Tracked objects:
 13978 ;;		On entry : 0/0
 13979 ;;		On exit  : 0/0
 13980 ;;		Unchanged: 0/0
 13981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13983 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;Total ram usage:       13 bytes
 13987 ;; Hardware stack levels used: 1
 13988 ;; Hardware stack levels required when called: 5
 13989 ;; This function calls:
 13990 ;;		___awdiv
 13991 ;;		___awmod
 13992 ;;		_abs
 13993 ;;		_pad
 13994 ;; This function is called by:
 13995 ;;		_vfpfcnvrt
 13996 ;; This function uses a non-reentrant model
 13997 ;;
 13998                           
 13999                           	psect	text50
 14000   003B80                     __ptext50:
 14001                           	callstack 0
 14002   003B80                     _dtoa:
 14003                           	callstack 21
 14004   003B80                     
 14005                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 14006   003B80  BE23               	btfsc	(dtoa@d+1)^0,7,c
 14007   003B82  EFC5  F01D         	goto	u8451
 14008   003B86  EFC8  F01D         	goto	u8450
 14009   003B8A                     u8451:
 14010   003B8A  0E01               	movlw	1
 14011   003B8C  EFC9  F01D         	goto	u8460
 14012   003B90                     u8450:
 14013   003B90  0E00               	movlw	0
 14014   003B92                     u8460:
 14015   003B92  6E2A               	movwf	dtoa@s^0,c
 14016                           
 14017                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 14018   003B94  BE58               	btfsc	(_prec+1)^0,7,c
 14019   003B96  EFD1  F01D         	goto	u8470
 14020   003B9A  EFCF  F01D         	goto	u8471
 14021   003B9E                     u8471:
 14022   003B9E  EFD7  F01D         	goto	l1427
 14023   003BA2                     u8470:
 14024   003BA2  0E00               	movlw	0
 14025   003BA4  6E29               	movwf	(dtoa@p+1)^0,c
 14026   003BA6  0E01               	movlw	1
 14027   003BA8  6E28               	movwf	dtoa@p^0,c
 14028   003BAA  EFDB  F01D         	goto	l1429
 14029   003BAE                     l1427:
 14030   003BAE  C057  F028         	movff	_prec,dtoa@p
 14031   003BB2  C058  F029         	movff	_prec+1,dtoa@p+1
 14032   003BB6                     l1429:
 14033                           
 14034                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 14035   003BB6  C055  F026         	movff	_width,dtoa@w
 14036   003BBA  C056  F027         	movff	_width+1,dtoa@w+1
 14037   003BBE                     
 14038                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 14039   003BBE  502A               	movf	dtoa@s^0,w,c
 14040   003BC0  B4D8               	btfsc	status,2,c
 14041   003BC2  EFE5  F01D         	goto	u8481
 14042   003BC6  EFE7  F01D         	goto	u8480
 14043   003BCA                     u8481:
 14044   003BCA  EFFE  F01D         	goto	l1430
 14045   003BCE                     u8480:
 14046   003BCE                     
 14047                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 14048   003BCE  0626               	decf	dtoa@w^0,f,c
 14049   003BD0  A0D8               	btfss	status,0,c
 14050   003BD2  0627               	decf	(dtoa@w+1)^0,f,c
 14051   003BD4                     
 14052                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 14053   003BD4  502A               	movf	dtoa@s^0,w,c
 14054   003BD6  A4D8               	btfss	status,2,c
 14055   003BD8  EFF0  F01D         	goto	u8491
 14056   003BDC  EFF2  F01D         	goto	u8490
 14057   003BE0                     u8491:
 14058   003BE0  EFF8  F01D         	goto	l7090
 14059   003BE4                     u8490:
 14060   003BE4  0E00               	movlw	0
 14061   003BE6  6E25               	movwf	(_dtoa$4037+1)^0,c
 14062   003BE8  0E2B               	movlw	43
 14063   003BEA  6E24               	movwf	_dtoa$4037^0,c
 14064   003BEC  EFFC  F01D         	goto	l7092
 14065   003BF0                     l7090:
 14066   003BF0  0E00               	movlw	0
 14067   003BF2  6E25               	movwf	(_dtoa$4037+1)^0,c
 14068   003BF4  0E2D               	movlw	45
 14069   003BF6  6E24               	movwf	_dtoa$4037^0,c
 14070   003BF8                     l7092:
 14071   003BF8  C024  F02A         	movff	_dtoa$4037,dtoa@s
 14072   003BFC                     l1430:
 14073                           
 14074                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 14075   003BFC  0E00               	movlw	0
 14076   003BFE  6E2C               	movwf	(dtoa@i+1)^0,c
 14077   003C00  0E4F               	movlw	79
 14078   003C02  6E2B               	movwf	dtoa@i^0,c
 14079   003C04                     
 14080                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 14081   003C04  0E00               	movlw	0
 14082   003C06  0101               	movlb	1	; () banked
 14083   003C08  6F76               	movwf	(_dbuf+79)& (0+255),b
 14084                           
 14085                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14086   003C0A  EF37  F01E         	goto	l7106
 14087   003C0E                     l7096:
 14088                           
 14089                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 14090   003C0E  062B               	decf	dtoa@i^0,f,c
 14091   003C10  A0D8               	btfss	status,0,c
 14092   003C12  062C               	decf	(dtoa@i+1)^0,f,c
 14093   003C14                     
 14094                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 14095   003C14  0E27               	movlw	low _dbuf
 14096   003C16  242B               	addwf	dtoa@i^0,w,c
 14097   003C18  6ED9               	movwf	fsr2l,c
 14098   003C1A  0E01               	movlw	high _dbuf
 14099   003C1C  202C               	addwfc	(dtoa@i+1)^0,w,c
 14100   003C1E  6EDA               	movwf	fsr2h,c
 14101   003C20  C022  F006         	movff	dtoa@d,___awmod@dividend
 14102   003C24  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 14103   003C28  0E00               	movlw	0
 14104   003C2A  6E09               	movwf	(___awmod@divisor+1)^0,c
 14105   003C2C  0E0A               	movlw	10
 14106   003C2E  6E08               	movwf	___awmod@divisor^0,c
 14107   003C30  ECA0  F024         	call	___awmod	;wreg free
 14108   003C34  C006  F00C         	movff	?___awmod,abs@a
 14109   003C38  C007  F00D         	movff	?___awmod+1,abs@a+1
 14110   003C3C  ECAC  F028         	call	_abs	;wreg free
 14111   003C40  500C               	movf	?_abs^0,w,c
 14112   003C42  0F30               	addlw	48
 14113   003C44  6EDF               	movwf	indf2,c
 14114   003C46                     
 14115                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 14116   003C46  0628               	decf	dtoa@p^0,f,c
 14117   003C48  A0D8               	btfss	status,0,c
 14118   003C4A  0629               	decf	(dtoa@p+1)^0,f,c
 14119   003C4C                     
 14120                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 14121   003C4C  0626               	decf	dtoa@w^0,f,c
 14122   003C4E  A0D8               	btfss	status,0,c
 14123   003C50  0627               	decf	(dtoa@w+1)^0,f,c
 14124   003C52                     
 14125                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 14126   003C52  C022  F018         	movff	dtoa@d,___awdiv@dividend
 14127   003C56  C023  F019         	movff	dtoa@d+1,___awdiv@dividend+1
 14128   003C5A  0E00               	movlw	0
 14129   003C5C  6E1B               	movwf	(___awdiv@divisor+1)^0,c
 14130   003C5E  0E0A               	movlw	10
 14131   003C60  6E1A               	movwf	___awdiv@divisor^0,c
 14132   003C62  ECE5  F023         	call	___awdiv	;wreg free
 14133   003C66  C018  F022         	movff	?___awdiv,dtoa@d
 14134   003C6A  C019  F023         	movff	?___awdiv+1,dtoa@d+1
 14135   003C6E                     l7106:
 14136                           
 14137                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 14138   003C6E  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 14139   003C70  EF42  F01E         	goto	u8501
 14140   003C74  502C               	movf	(dtoa@i+1)^0,w,c
 14141   003C76  E108               	bnz	u8500
 14142   003C78  042B               	decf	dtoa@i^0,w,c
 14143   003C7A  A0D8               	btfss	status,0,c
 14144   003C7C  EF42  F01E         	goto	u8501
 14145   003C80  EF44  F01E         	goto	u8500
 14146   003C84                     u8501:
 14147   003C84  EF5A  F01E         	goto	l7112
 14148   003C88                     u8500:
 14149   003C88  5022               	movf	dtoa@d^0,w,c
 14150   003C8A  1023               	iorwf	(dtoa@d+1)^0,w,c
 14151   003C8C  A4D8               	btfss	status,2,c
 14152   003C8E  EF4B  F01E         	goto	u8511
 14153   003C92  EF4D  F01E         	goto	u8510
 14154   003C96                     u8511:
 14155   003C96  EF07  F01E         	goto	l7096
 14156   003C9A                     u8510:
 14157   003C9A  BE29               	btfsc	(dtoa@p+1)^0,7,c
 14158   003C9C  EF5A  F01E         	goto	u8520
 14159   003CA0  5029               	movf	(dtoa@p+1)^0,w,c
 14160   003CA2  E106               	bnz	u8521
 14161   003CA4  0428               	decf	dtoa@p^0,w,c
 14162   003CA6  B0D8               	btfsc	status,0,c
 14163   003CA8  EF58  F01E         	goto	u8521
 14164   003CAC  EF5A  F01E         	goto	u8520
 14165   003CB0                     u8521:
 14166   003CB0  EF07  F01E         	goto	l7096
 14167   003CB4                     u8520:
 14168   003CB4                     l7112:
 14169                           
 14170                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 14171   003CB4  502A               	movf	dtoa@s^0,w,c
 14172   003CB6  B4D8               	btfsc	status,2,c
 14173   003CB8  EF60  F01E         	goto	u8531
 14174   003CBC  EF62  F01E         	goto	u8530
 14175   003CC0                     u8531:
 14176   003CC0  EF6D  F01E         	goto	l7118
 14177   003CC4                     u8530:
 14178   003CC4                     
 14179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 14180   003CC4  062B               	decf	dtoa@i^0,f,c
 14181   003CC6  A0D8               	btfss	status,0,c
 14182   003CC8  062C               	decf	(dtoa@i+1)^0,f,c
 14183   003CCA                     
 14184                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 14185   003CCA  0E27               	movlw	low _dbuf
 14186   003CCC  242B               	addwf	dtoa@i^0,w,c
 14187   003CCE  6ED9               	movwf	fsr2l,c
 14188   003CD0  0E01               	movlw	high _dbuf
 14189   003CD2  202C               	addwfc	(dtoa@i+1)^0,w,c
 14190   003CD4  6EDA               	movwf	fsr2h,c
 14191   003CD6  C02A  FFDF         	movff	dtoa@s,indf2
 14192   003CDA                     l7118:
 14193                           
 14194                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 14195   003CDA  C020  F017         	movff	dtoa@fp,pad@fp
 14196   003CDE  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 14197   003CE2  0E27               	movlw	low _dbuf
 14198   003CE4  242B               	addwf	dtoa@i^0,w,c
 14199   003CE6  6E19               	movwf	pad@buf^0,c
 14200   003CE8  0E01               	movlw	high _dbuf
 14201   003CEA  202C               	addwfc	(dtoa@i+1)^0,w,c
 14202   003CEC  6E1A               	movwf	(pad@buf+1)^0,c
 14203   003CEE  C026  F01B         	movff	dtoa@w,pad@p
 14204   003CF2  C027  F01C         	movff	dtoa@w+1,pad@p+1
 14205   003CF6  ECA4  F025         	call	_pad	;wreg free
 14206   003CFA  0012               	return		;funcret
 14207   003CFC                     __end_of_dtoa:
 14208                           	callstack 0
 14209                           
 14210 ;; *************** function _pad *****************
 14211 ;; Defined at:
 14212 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 14215 ;;		 -> NULL(0), sprintf@f(12), 
 14216 ;;  buf             2   24[COMRAM] PTR unsigned char 
 14217 ;;		 -> dbuf(80), 
 14218 ;;  p               2   26[COMRAM] int 
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;  i               2   29[COMRAM] int 
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14230 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14233 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14234 ;;Total ram usage:        9 bytes
 14235 ;; Hardware stack levels used: 1
 14236 ;; Hardware stack levels required when called: 4
 14237 ;; This function calls:
 14238 ;;		_fputc
 14239 ;;		_fputs
 14240 ;; This function is called by:
 14241 ;;		_dtoa
 14242 ;;		_efgtoa
 14243 ;;		_utoa
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           	psect	text51
 14248   004B48                     __ptext51:
 14249                           	callstack 0
 14250   004B48                     _pad:
 14251                           	callstack 21
 14252   004B48                     
 14253                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 14254   004B48  A059               	btfss	_flags^0,0,c
 14255   004B4A  EFA9  F025         	goto	u8201
 14256   004B4E  EFAB  F025         	goto	u8200
 14257   004B52                     u8201:
 14258   004B52  EFB5  F025         	goto	l6988
 14259   004B56                     u8200:
 14260   004B56                     
 14261                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 14262   004B56  C019  F010         	movff	pad@buf,fputs@s
 14263   004B5A  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14264   004B5E  C017  F012         	movff	pad@fp,fputs@fp
 14265   004B62  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14266   004B66  ECE2  F027         	call	_fputs	;wreg free
 14267   004B6A                     l6988:
 14268                           
 14269                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 14270   004B6A  BE1C               	btfsc	(pad@p+1)^0,7,c
 14271   004B6C  EFBC  F025         	goto	u8210
 14272   004B70  EFBA  F025         	goto	u8211
 14273   004B74                     u8211:
 14274   004B74  EFC0  F025         	goto	l1418
 14275   004B78                     u8210:
 14276   004B78                     
 14277                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 14278   004B78  0E00               	movlw	0
 14279   004B7A  6E1C               	movwf	(pad@p+1)^0,c
 14280   004B7C  0E00               	movlw	0
 14281   004B7E  6E1B               	movwf	pad@p^0,c
 14282   004B80                     l1418:
 14283                           
 14284                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 14285   004B80  0E00               	movlw	0
 14286   004B82  6E1F               	movwf	(pad@i+1)^0,c
 14287   004B84  0E00               	movlw	0
 14288   004B86  6E1E               	movwf	pad@i^0,c
 14289                           
 14290                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14291   004B88  EFD2  F025         	goto	l6996
 14292   004B8C                     l6992:
 14293                           
 14294                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 14295   004B8C  0E00               	movlw	0
 14296   004B8E  6E08               	movwf	(fputc@c+1)^0,c
 14297   004B90  0E20               	movlw	32
 14298   004B92  6E07               	movwf	fputc@c^0,c
 14299   004B94  C017  F009         	movff	pad@fp,fputc@fp
 14300   004B98  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 14301   004B9C  EC80  F023         	call	_fputc	;wreg free
 14302   004BA0                     
 14303                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 14304   004BA0  4A1E               	infsnz	pad@i^0,f,c
 14305   004BA2  2A1F               	incf	(pad@i+1)^0,f,c
 14306   004BA4                     l6996:
 14307                           
 14308                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 14309   004BA4  501B               	movf	pad@p^0,w,c
 14310   004BA6  5C1E               	subwf	pad@i^0,w,c
 14311   004BA8  501F               	movf	(pad@i+1)^0,w,c
 14312   004BAA  0A80               	xorlw	128
 14313   004BAC  6E1D               	movwf	??_pad^0,c
 14314   004BAE  501C               	movf	(pad@p+1)^0,w,c
 14315   004BB0  0A80               	xorlw	128
 14316   004BB2  581D               	subwfb	??_pad^0,w,c
 14317   004BB4  A0D8               	btfss	status,0,c
 14318   004BB6  EFDF  F025         	goto	u8221
 14319   004BBA  EFE1  F025         	goto	u8220
 14320   004BBE                     u8221:
 14321   004BBE  EFC6  F025         	goto	l6992
 14322   004BC2                     u8220:
 14323   004BC2                     
 14324                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 14325   004BC2  B059               	btfsc	_flags^0,0,c
 14326   004BC4  EFE6  F025         	goto	u8231
 14327   004BC8  EFE8  F025         	goto	u8230
 14328   004BCC                     u8231:
 14329   004BCC  EFF2  F025         	goto	l1423
 14330   004BD0                     u8230:
 14331   004BD0                     
 14332                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 14333   004BD0  C019  F010         	movff	pad@buf,fputs@s
 14334   004BD4  C01A  F011         	movff	pad@buf+1,fputs@s+1
 14335   004BD8  C017  F012         	movff	pad@fp,fputs@fp
 14336   004BDC  C018  F013         	movff	pad@fp+1,fputs@fp+1
 14337   004BE0  ECE2  F027         	call	_fputs	;wreg free
 14338   004BE4                     l1423:
 14339   004BE4  0012               	return		;funcret
 14340   004BE6                     __end_of_pad:
 14341                           	callstack 0
 14342                           
 14343 ;; *************** function _fputs *****************
 14344 ;; Defined at:
 14345 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14348 ;;		 -> dbuf(80), 
 14349 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14350 ;;		 -> NULL(0), sprintf@f(12), 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  i               2   20[COMRAM] int 
 14353 ;;  c               1   19[COMRAM] unsigned char 
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  2   15[COMRAM] int 
 14356 ;; Registers used:
 14357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14364 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14367 ;;Total ram usage:        7 bytes
 14368 ;; Hardware stack levels used: 1
 14369 ;; Hardware stack levels required when called: 3
 14370 ;; This function calls:
 14371 ;;		_fputc
 14372 ;; This function is called by:
 14373 ;;		_pad
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text52
 14378   004FC4                     __ptext52:
 14379                           	callstack 0
 14380   004FC4                     _fputs:
 14381                           	callstack 21
 14382   004FC4  0E00               	movlw	0
 14383   004FC6  6E16               	movwf	(fputs@i+1)^0,c
 14384   004FC8  0E00               	movlw	0
 14385   004FCA  6E15               	movwf	fputs@i^0,c
 14386   004FCC  EFF3  F027         	goto	l6494
 14387   004FD0                     l6490:
 14388   004FD0  C014  F007         	movff	fputs@c,fputc@c
 14389   004FD4  6A08               	clrf	(fputc@c+1)^0,c
 14390   004FD6  C012  F009         	movff	fputs@fp,fputc@fp
 14391   004FDA  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 14392   004FDE  EC80  F023         	call	_fputc	;wreg free
 14393   004FE2  4A15               	infsnz	fputs@i^0,f,c
 14394   004FE4  2A16               	incf	(fputs@i+1)^0,f,c
 14395   004FE6                     l6494:
 14396   004FE6  5015               	movf	fputs@i^0,w,c
 14397   004FE8  2410               	addwf	fputs@s^0,w,c
 14398   004FEA  6ED9               	movwf	fsr2l,c
 14399   004FEC  5016               	movf	(fputs@i+1)^0,w,c
 14400   004FEE  2011               	addwfc	(fputs@s+1)^0,w,c
 14401   004FF0  6EDA               	movwf	fsr2h,c
 14402   004FF2  50DF               	movf	indf2,w,c
 14403   004FF4  6E14               	movwf	fputs@c^0,c
 14404   004FF6  5014               	movf	fputs@c^0,w,c
 14405   004FF8  A4D8               	btfss	status,2,c
 14406   004FFA  EF01  F028         	goto	u7431
 14407   004FFE  EF03  F028         	goto	u7430
 14408   005002                     u7431:
 14409   005002  EFE8  F027         	goto	l6490
 14410   005006                     u7430:
 14411   005006  0012               	return		;funcret
 14412   005008                     __end_of_fputs:
 14413                           	callstack 0
 14414                           
 14415 ;; *************** function _fputc *****************
 14416 ;; Defined at:
 14417 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 14418 ;; Parameters:    Size  Location     Type
 14419 ;;  c               2    6[COMRAM] int 
 14420 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 14421 ;;		 -> NULL(0), sprintf@f(12), 
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;		None
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  2    6[COMRAM] int 
 14426 ;; Registers used:
 14427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14435 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14436 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14437 ;;Total ram usage:        9 bytes
 14438 ;; Hardware stack levels used: 1
 14439 ;; Hardware stack levels required when called: 2
 14440 ;; This function calls:
 14441 ;;		_putch
 14442 ;; This function is called by:
 14443 ;;		_pad
 14444 ;;		_stoa
 14445 ;;		_vfpfcnvrt
 14446 ;;		_fputs
 14447 ;; This function uses a non-reentrant model
 14448 ;;
 14449                           
 14450                           	psect	text53
 14451   004700                     __ptext53:
 14452                           	callstack 0
 14453   004700                     _fputc:
 14454                           	callstack 21
 14455   004700  5009               	movf	fputc@fp^0,w,c
 14456   004702  100A               	iorwf	(fputc@fp+1)^0,w,c
 14457   004704  B4D8               	btfsc	status,2,c
 14458   004706  EF87  F023         	goto	u7001
 14459   00470A  EF89  F023         	goto	u7000
 14460   00470E                     u7001:
 14461   00470E  EF92  F023         	goto	l6276
 14462   004712                     u7000:
 14463   004712  5009               	movf	fputc@fp^0,w,c
 14464   004714  100A               	iorwf	(fputc@fp+1)^0,w,c
 14465   004716  A4D8               	btfss	status,2,c
 14466   004718  EF90  F023         	goto	u7011
 14467   00471C  EF92  F023         	goto	u7010
 14468   004720                     u7011:
 14469   004720  EF97  F023         	goto	l6278
 14470   004724                     u7010:
 14471   004724                     l6276:
 14472   004724  5007               	movf	fputc@c^0,w,c
 14473   004726  EC10  F029         	call	_putch
 14474   00472A  EFE4  F023         	goto	l1652
 14475   00472E                     l6278:
 14476   00472E  EE20 F00A          	lfsr	2,10
 14477   004732  5009               	movf	fputc@fp^0,w,c
 14478   004734  26D9               	addwf	fsr2l,f,c
 14479   004736  500A               	movf	(fputc@fp+1)^0,w,c
 14480   004738  22DA               	addwfc	fsr2h,f,c
 14481   00473A  50DE               	movf	postinc2,w,c
 14482   00473C  10DE               	iorwf	postinc2,w,c
 14483   00473E  B4D8               	btfsc	status,2,c
 14484   004740  EFA4  F023         	goto	u7021
 14485   004744  EFA6  F023         	goto	u7020
 14486   004748                     u7021:
 14487   004748  EFC1  F023         	goto	l6282
 14488   00474C                     u7020:
 14489   00474C  EE20 F00A          	lfsr	2,10
 14490   004750  5009               	movf	fputc@fp^0,w,c
 14491   004752  26D9               	addwf	fsr2l,f,c
 14492   004754  500A               	movf	(fputc@fp+1)^0,w,c
 14493   004756  22DA               	addwfc	fsr2h,f,c
 14494   004758  EE10 F003          	lfsr	1,3
 14495   00475C  5009               	movf	fputc@fp^0,w,c
 14496   00475E  26E1               	addwf	fsr1l,f,c
 14497   004760  500A               	movf	(fputc@fp+1)^0,w,c
 14498   004762  22E2               	addwfc	fsr1h,f,c
 14499   004764  50DE               	movf	postinc2,w,c
 14500   004766  5CE6               	subwf	postinc1,w,c
 14501   004768  50E6               	movf	postinc1,w,c
 14502   00476A  0A80               	xorlw	128
 14503   00476C  6E0F               	movwf	(??_fputc+4)^0,c
 14504   00476E  50DE               	movf	postinc2,w,c
 14505   004770  0A80               	xorlw	128
 14506   004772  580F               	subwfb	(??_fputc+4)^0,w,c
 14507   004774  B0D8               	btfsc	status,0,c
 14508   004776  EFBF  F023         	goto	u7031
 14509   00477A  EFC1  F023         	goto	u7030
 14510   00477E                     u7031:
 14511   00477E  EFE4  F023         	goto	l1652
 14512   004782                     u7030:
 14513   004782                     l6282:
 14514   004782  EE20 F003          	lfsr	2,3
 14515   004786  5009               	movf	fputc@fp^0,w,c
 14516   004788  26D9               	addwf	fsr2l,f,c
 14517   00478A  500A               	movf	(fputc@fp+1)^0,w,c
 14518   00478C  22DA               	addwfc	fsr2h,f,c
 14519   00478E  CFDE F00B          	movff	postinc2,??_fputc
 14520   004792  CFDD F00C          	movff	postdec2,??_fputc+1
 14521   004796  C009  FFD9         	movff	fputc@fp,fsr2l
 14522   00479A  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 14523   00479E  CFDE F00D          	movff	postinc2,??_fputc+2
 14524   0047A2  CFDD F00E          	movff	postdec2,??_fputc+3
 14525   0047A6  500B               	movf	??_fputc^0,w,c
 14526   0047A8  240D               	addwf	(??_fputc+2)^0,w,c
 14527   0047AA  6ED9               	movwf	fsr2l,c
 14528   0047AC  500C               	movf	(??_fputc+1)^0,w,c
 14529   0047AE  200E               	addwfc	(??_fputc+3)^0,w,c
 14530   0047B0  6EDA               	movwf	fsr2h,c
 14531   0047B2  C007  FFDF         	movff	fputc@c,indf2
 14532   0047B6  EE20 F003          	lfsr	2,3
 14533   0047BA  5009               	movf	fputc@fp^0,w,c
 14534   0047BC  26D9               	addwf	fsr2l,f,c
 14535   0047BE  500A               	movf	(fputc@fp+1)^0,w,c
 14536   0047C0  22DA               	addwfc	fsr2h,f,c
 14537   0047C2  2ADE               	incf	postinc2,f,c
 14538   0047C4  0E00               	movlw	0
 14539   0047C6  22DD               	addwfc	postdec2,f,c
 14540   0047C8                     l1652:
 14541   0047C8  0012               	return		;funcret
 14542   0047CA                     __end_of_fputc:
 14543                           	callstack 0
 14544                           
 14545 ;; *************** function _putch *****************
 14546 ;; Defined at:
 14547 ;;		line 11 in file "putch.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  data            1    wreg     unsigned char 
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  data            1    5[COMRAM] unsigned char 
 14552 ;; Return value:  Size  Location     Type
 14553 ;;                  1    wreg      void 
 14554 ;; Registers used:
 14555 ;;		wreg
 14556 ;; Tracked objects:
 14557 ;;		On entry : 0/0
 14558 ;;		On exit  : 0/0
 14559 ;;		Unchanged: 0/0
 14560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14565 ;;Total ram usage:        1 bytes
 14566 ;; Hardware stack levels used: 1
 14567 ;; Hardware stack levels required when called: 1
 14568 ;; This function calls:
 14569 ;;		Nothing
 14570 ;; This function is called by:
 14571 ;;		_fputc
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575                           	psect	text54
 14576   005220                     __ptext54:
 14577                           	callstack 0
 14578   005220                     _putch:
 14579                           	callstack 21
 14580                           
 14581                           ;incstack = 0
 14582                           ;putch@data stored from wreg
 14583   005220  6E06               	movwf	putch@data^0,c
 14584   005222                     l270:
 14585   005222  A89E               	btfss	3998,4,c	;volatile
 14586   005224  EF16  F029         	goto	u6991
 14587   005228  EF18  F029         	goto	u6990
 14588   00522C                     u6991:
 14589   00522C  EF11  F029         	goto	l270
 14590   005230                     u6990:
 14591   005230                     
 14592                           ;putch.c: 13:     TXREG1 = data;
 14593   005230  C006  FFAD         	movff	putch@data,4013	;volatile
 14594   005234  0012               	return		;funcret
 14595   005236                     __end_of_putch:
 14596                           	callstack 0
 14597                           
 14598 ;; *************** function _abs *****************
 14599 ;; Defined at:
 14600 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;  a               2   11[COMRAM] int 
 14603 ;; Auto vars:     Size  Location     Type
 14604 ;;		None
 14605 ;; Return value:  Size  Location     Type
 14606 ;;                  2   11[COMRAM] int 
 14607 ;; Registers used:
 14608 ;;		wreg, status,2, status,0
 14609 ;; Tracked objects:
 14610 ;;		On entry : 0/0
 14611 ;;		On exit  : 0/0
 14612 ;;		Unchanged: 0/0
 14613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14618 ;;Total ram usage:        4 bytes
 14619 ;; Hardware stack levels used: 1
 14620 ;; Hardware stack levels required when called: 1
 14621 ;; This function calls:
 14622 ;;		Nothing
 14623 ;; This function is called by:
 14624 ;;		_dtoa
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text55
 14629   005158                     __ptext55:
 14630                           	callstack 0
 14631   005158                     _abs:
 14632                           	callstack 24
 14633   005158  BE0D               	btfsc	(abs@a+1)^0,7,c
 14634   00515A  EFB1  F028         	goto	u8241
 14635   00515E  EFB3  F028         	goto	u8240
 14636   005162                     u8241:
 14637   005162  EFB9  F028         	goto	l1611
 14638   005166                     u8240:
 14639   005166  C00C  F00C         	movff	abs@a,?_abs
 14640   00516A  C00D  F00D         	movff	abs@a+1,?_abs+1
 14641   00516E  EFC5  F028         	goto	l1614
 14642   005172                     l1611:
 14643   005172  C00C  F00E         	movff	abs@a,??_abs
 14644   005176  C00D  F00F         	movff	abs@a+1,??_abs+1
 14645   00517A  1E0E               	comf	??_abs^0,f,c
 14646   00517C  1E0F               	comf	(??_abs+1)^0,f,c
 14647   00517E  4A0E               	infsnz	??_abs^0,f,c
 14648   005180  2A0F               	incf	(??_abs+1)^0,f,c
 14649   005182  C00E  F00C         	movff	??_abs,?_abs
 14650   005186  C00F  F00D         	movff	??_abs+1,?_abs+1
 14651   00518A                     l1614:
 14652   00518A  0012               	return		;funcret
 14653   00518C                     __end_of_abs:
 14654                           	callstack 0
 14655                           
 14656 ;; *************** function ___awmod *****************
 14657 ;; Defined at:
 14658 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;  dividend        2    5[COMRAM] int 
 14661 ;;  divisor         2    7[COMRAM] int 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;  sign            1   10[COMRAM] unsigned char 
 14664 ;;  counter         1    9[COMRAM] unsigned char 
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  2    5[COMRAM] int 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14678 ;;Total ram usage:        6 bytes
 14679 ;; Hardware stack levels used: 1
 14680 ;; Hardware stack levels required when called: 1
 14681 ;; This function calls:
 14682 ;;		Nothing
 14683 ;; This function is called by:
 14684 ;;		_dtoa
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text56
 14689   004940                     __ptext56:
 14690                           	callstack 0
 14691   004940                     ___awmod:
 14692                           	callstack 24
 14693   004940  0E00               	movlw	0
 14694   004942  6E0B               	movwf	___awmod@sign^0,c
 14695   004944  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 14696   004946  EFA9  F024         	goto	u7920
 14697   00494A  EFA7  F024         	goto	u7921
 14698   00494E                     u7921:
 14699   00494E  EFAF  F024         	goto	l6828
 14700   004952                     u7920:
 14701   004952  6C06               	negf	___awmod@dividend^0,c
 14702   004954  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14703   004956  B0D8               	btfsc	status,0,c
 14704   004958  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14705   00495A  0E01               	movlw	1
 14706   00495C  6E0B               	movwf	___awmod@sign^0,c
 14707   00495E                     l6828:
 14708   00495E  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 14709   004960  EFB6  F024         	goto	u7930
 14710   004964  EFB4  F024         	goto	u7931
 14711   004968                     u7931:
 14712   004968  EFBA  F024         	goto	l6832
 14713   00496C                     u7930:
 14714   00496C  6C08               	negf	___awmod@divisor^0,c
 14715   00496E  1E09               	comf	(___awmod@divisor+1)^0,f,c
 14716   004970  B0D8               	btfsc	status,0,c
 14717   004972  2A09               	incf	(___awmod@divisor+1)^0,f,c
 14718   004974                     l6832:
 14719   004974  5008               	movf	___awmod@divisor^0,w,c
 14720   004976  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 14721   004978  B4D8               	btfsc	status,2,c
 14722   00497A  EFC1  F024         	goto	u7941
 14723   00497E  EFC3  F024         	goto	u7940
 14724   004982                     u7941:
 14725   004982  EFE7  F024         	goto	l6848
 14726   004986                     u7940:
 14727   004986  0E01               	movlw	1
 14728   004988  6E0A               	movwf	___awmod@counter^0,c
 14729   00498A  EFCB  F024         	goto	l6838
 14730   00498E                     l6836:
 14731   00498E  90D8               	bcf	status,0,c
 14732   004990  3608               	rlcf	___awmod@divisor^0,f,c
 14733   004992  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 14734   004994  2A0A               	incf	___awmod@counter^0,f,c
 14735   004996                     l6838:
 14736   004996  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 14737   004998  EFD0  F024         	goto	u7951
 14738   00499C  EFD2  F024         	goto	u7950
 14739   0049A0                     u7951:
 14740   0049A0  EFC7  F024         	goto	l6836
 14741   0049A4                     u7950:
 14742   0049A4                     l6840:
 14743   0049A4  5008               	movf	___awmod@divisor^0,w,c
 14744   0049A6  5C06               	subwf	___awmod@dividend^0,w,c
 14745   0049A8  5009               	movf	(___awmod@divisor+1)^0,w,c
 14746   0049AA  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 14747   0049AC  A0D8               	btfss	status,0,c
 14748   0049AE  EFDB  F024         	goto	u7961
 14749   0049B2  EFDD  F024         	goto	u7960
 14750   0049B6                     u7961:
 14751   0049B6  EFE1  F024         	goto	l6844
 14752   0049BA                     u7960:
 14753   0049BA  5008               	movf	___awmod@divisor^0,w,c
 14754   0049BC  5E06               	subwf	___awmod@dividend^0,f,c
 14755   0049BE  5009               	movf	(___awmod@divisor+1)^0,w,c
 14756   0049C0  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 14757   0049C2                     l6844:
 14758   0049C2  90D8               	bcf	status,0,c
 14759   0049C4  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 14760   0049C6  3208               	rrcf	___awmod@divisor^0,f,c
 14761   0049C8  2E0A               	decfsz	___awmod@counter^0,f,c
 14762   0049CA  EFD2  F024         	goto	l6840
 14763   0049CE                     l6848:
 14764   0049CE  500B               	movf	___awmod@sign^0,w,c
 14765   0049D0  B4D8               	btfsc	status,2,c
 14766   0049D2  EFED  F024         	goto	u7971
 14767   0049D6  EFEF  F024         	goto	u7970
 14768   0049DA                     u7971:
 14769   0049DA  EFF3  F024         	goto	l6852
 14770   0049DE                     u7970:
 14771   0049DE  6C06               	negf	___awmod@dividend^0,c
 14772   0049E0  1E07               	comf	(___awmod@dividend+1)^0,f,c
 14773   0049E2  B0D8               	btfsc	status,0,c
 14774   0049E4  2A07               	incf	(___awmod@dividend+1)^0,f,c
 14775   0049E6                     l6852:
 14776   0049E6  C006  F006         	movff	___awmod@dividend,?___awmod
 14777   0049EA  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 14778   0049EE  0012               	return		;funcret
 14779   0049F0                     __end_of___awmod:
 14780                           	callstack 0
 14781                           
 14782 ;; *************** function ___awdiv *****************
 14783 ;; Defined at:
 14784 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  dividend        2   23[COMRAM] int 
 14787 ;;  divisor         2   25[COMRAM] int 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  quotient        2   29[COMRAM] int 
 14790 ;;  sign            1   28[COMRAM] unsigned char 
 14791 ;;  counter         1   27[COMRAM] unsigned char 
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  2   23[COMRAM] int 
 14794 ;; Registers used:
 14795 ;;		wreg, status,2, status,0
 14796 ;; Tracked objects:
 14797 ;;		On entry : 0/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;Total ram usage:        8 bytes
 14806 ;; Hardware stack levels used: 1
 14807 ;; Hardware stack levels required when called: 1
 14808 ;; This function calls:
 14809 ;;		Nothing
 14810 ;; This function is called by:
 14811 ;;		_runPWM
 14812 ;;		_runGAME
 14813 ;;		_dtoa
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           	psect	text57
 14818   0047CA                     __ptext57:
 14819                           	callstack 0
 14820   0047CA                     ___awdiv:
 14821                           	callstack 24
 14822   0047CA  0E00               	movlw	0
 14823   0047CC  6E1D               	movwf	___awdiv@sign^0,c
 14824   0047CE  BE1B               	btfsc	(___awdiv@divisor+1)^0,7,c
 14825   0047D0  EFEE  F023         	goto	u7860
 14826   0047D4  EFEC  F023         	goto	u7861
 14827   0047D8                     u7861:
 14828   0047D8  EFF4  F023         	goto	l6784
 14829   0047DC                     u7860:
 14830   0047DC  6C1A               	negf	___awdiv@divisor^0,c
 14831   0047DE  1E1B               	comf	(___awdiv@divisor+1)^0,f,c
 14832   0047E0  B0D8               	btfsc	status,0,c
 14833   0047E2  2A1B               	incf	(___awdiv@divisor+1)^0,f,c
 14834   0047E4  0E01               	movlw	1
 14835   0047E6  6E1D               	movwf	___awdiv@sign^0,c
 14836   0047E8                     l6784:
 14837   0047E8  BE19               	btfsc	(___awdiv@dividend+1)^0,7,c
 14838   0047EA  EFFB  F023         	goto	u7870
 14839   0047EE  EFF9  F023         	goto	u7871
 14840   0047F2                     u7871:
 14841   0047F2  EF01  F024         	goto	l6790
 14842   0047F6                     u7870:
 14843   0047F6  6C18               	negf	___awdiv@dividend^0,c
 14844   0047F8  1E19               	comf	(___awdiv@dividend+1)^0,f,c
 14845   0047FA  B0D8               	btfsc	status,0,c
 14846   0047FC  2A19               	incf	(___awdiv@dividend+1)^0,f,c
 14847   0047FE  0E01               	movlw	1
 14848   004800  1A1D               	xorwf	___awdiv@sign^0,f,c
 14849   004802                     l6790:
 14850   004802  0E00               	movlw	0
 14851   004804  6E1F               	movwf	(___awdiv@quotient+1)^0,c
 14852   004806  0E00               	movlw	0
 14853   004808  6E1E               	movwf	___awdiv@quotient^0,c
 14854   00480A  501A               	movf	___awdiv@divisor^0,w,c
 14855   00480C  101B               	iorwf	(___awdiv@divisor+1)^0,w,c
 14856   00480E  B4D8               	btfsc	status,2,c
 14857   004810  EF0C  F024         	goto	u7881
 14858   004814  EF0E  F024         	goto	u7880
 14859   004818                     u7881:
 14860   004818  EF36  F024         	goto	l6812
 14861   00481C                     u7880:
 14862   00481C  0E01               	movlw	1
 14863   00481E  6E1C               	movwf	___awdiv@counter^0,c
 14864   004820  EF16  F024         	goto	l6798
 14865   004824                     l6796:
 14866   004824  90D8               	bcf	status,0,c
 14867   004826  361A               	rlcf	___awdiv@divisor^0,f,c
 14868   004828  361B               	rlcf	(___awdiv@divisor+1)^0,f,c
 14869   00482A  2A1C               	incf	___awdiv@counter^0,f,c
 14870   00482C                     l6798:
 14871   00482C  AE1B               	btfss	(___awdiv@divisor+1)^0,7,c
 14872   00482E  EF1B  F024         	goto	u7891
 14873   004832  EF1D  F024         	goto	u7890
 14874   004836                     u7891:
 14875   004836  EF12  F024         	goto	l6796
 14876   00483A                     u7890:
 14877   00483A                     l6800:
 14878   00483A  90D8               	bcf	status,0,c
 14879   00483C  361E               	rlcf	___awdiv@quotient^0,f,c
 14880   00483E  361F               	rlcf	(___awdiv@quotient+1)^0,f,c
 14881   004840  501A               	movf	___awdiv@divisor^0,w,c
 14882   004842  5C18               	subwf	___awdiv@dividend^0,w,c
 14883   004844  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14884   004846  5819               	subwfb	(___awdiv@dividend+1)^0,w,c
 14885   004848  A0D8               	btfss	status,0,c
 14886   00484A  EF29  F024         	goto	u7901
 14887   00484E  EF2B  F024         	goto	u7900
 14888   004852                     u7901:
 14889   004852  EF30  F024         	goto	l6808
 14890   004856                     u7900:
 14891   004856  501A               	movf	___awdiv@divisor^0,w,c
 14892   004858  5E18               	subwf	___awdiv@dividend^0,f,c
 14893   00485A  501B               	movf	(___awdiv@divisor+1)^0,w,c
 14894   00485C  5A19               	subwfb	(___awdiv@dividend+1)^0,f,c
 14895   00485E  801E               	bsf	___awdiv@quotient^0,0,c
 14896   004860                     l6808:
 14897   004860  90D8               	bcf	status,0,c
 14898   004862  321B               	rrcf	(___awdiv@divisor+1)^0,f,c
 14899   004864  321A               	rrcf	___awdiv@divisor^0,f,c
 14900   004866  2E1C               	decfsz	___awdiv@counter^0,f,c
 14901   004868  EF1D  F024         	goto	l6800
 14902   00486C                     l6812:
 14903   00486C  501D               	movf	___awdiv@sign^0,w,c
 14904   00486E  B4D8               	btfsc	status,2,c
 14905   004870  EF3C  F024         	goto	u7911
 14906   004874  EF3E  F024         	goto	u7910
 14907   004878                     u7911:
 14908   004878  EF42  F024         	goto	l6816
 14909   00487C                     u7910:
 14910   00487C  6C1E               	negf	___awdiv@quotient^0,c
 14911   00487E  1E1F               	comf	(___awdiv@quotient+1)^0,f,c
 14912   004880  B0D8               	btfsc	status,0,c
 14913   004882  2A1F               	incf	(___awdiv@quotient+1)^0,f,c
 14914   004884                     l6816:
 14915   004884  C01E  F018         	movff	___awdiv@quotient,?___awdiv
 14916   004888  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
 14917   00488C  0012               	return		;funcret
 14918   00488E                     __end_of___awdiv:
 14919                           	callstack 0
 14920                           
 14921 ;; *************** function _LCD_ShowString *****************
 14922 ;; Defined at:
 14923 ;;		line 55 in file "lcd.c"
 14924 ;; Parameters:    Size  Location     Type
 14925 ;;  lineNum         1    wreg     unsigned char 
 14926 ;;  textData        2    6[COMRAM] PTR unsigned char 
 14927 ;;		 -> STR_33(17), runGAME@approxText(17), runGAME@text(17), runADC@text(17), 
 14928 ;;		 -> moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_15(17), STR_14(17), 
 14929 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 14930 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 14931 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
 14932 ;;		 -> STR_1(17), 
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;  lineNum         1   10[COMRAM] unsigned char 
 14935 ;;  i               1   11[COMRAM] unsigned char 
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1    wreg      void 
 14938 ;; Registers used:
 14939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14949 ;;Total ram usage:        6 bytes
 14950 ;; Hardware stack levels used: 1
 14951 ;; Hardware stack levels required when called: 2
 14952 ;; This function calls:
 14953 ;;		_LCD_Send
 14954 ;; This function is called by:
 14955 ;;		_main
 14956 ;;		_moveDisplay
 14957 ;;		_runADC
 14958 ;;		_runGAME
 14959 ;; This function uses a non-reentrant model
 14960 ;;
 14961                           
 14962                           	psect	text58
 14963   00488E                     __ptext58:
 14964                           	callstack 0
 14965   00488E                     _LCD_ShowString:
 14966                           	callstack 27
 14967                           
 14968                           ;incstack = 0
 14969                           ;LCD_ShowString@lineNum stored from wreg
 14970   00488E  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 14971   004890                     
 14972                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 14973   004890  806B               	bsf	107,0,c	;volatile
 14974   004892                     l132:
 14975   004892  B06B               	btfsc	107,0,c	;volatile
 14976   004894  EF4E  F024         	goto	u9361
 14977   004898  EF50  F024         	goto	u9360
 14978   00489C                     u9361:
 14979   00489C  EF49  F024         	goto	l132
 14980   0048A0                     u9360:
 14981   0048A0                     
 14982                           ;lcd.c: 62:     SSP2IF = 0;
 14983   0048A0  9EA4               	bcf	4004,7,c	;volatile
 14984   0048A2                     
 14985                           ;lcd.c: 64:     LCD_Send(0x7c);
 14986   0048A2  0E7C               	movlw	124
 14987   0048A4  ECED  F028         	call	_LCD_Send
 14988                           
 14989                           ;lcd.c: 66:     LCD_Send(0x80);
 14990   0048A8  0E80               	movlw	128
 14991   0048AA  ECED  F028         	call	_LCD_Send
 14992   0048AE                     
 14993                           ;lcd.c: 68:     if(lineNum == 1){
 14994   0048AE  040B               	decf	LCD_ShowString@lineNum^0,w,c
 14995   0048B0  A4D8               	btfss	status,2,c
 14996   0048B2  EF5D  F024         	goto	u9371
 14997   0048B6  EF5F  F024         	goto	u9370
 14998   0048BA                     u9371:
 14999   0048BA  EF64  F024         	goto	l7718
 15000   0048BE                     u9370:
 15001   0048BE                     
 15002                           ;lcd.c: 69:         LCD_Send(0x80);
 15003   0048BE  0E80               	movlw	128
 15004   0048C0  ECED  F028         	call	_LCD_Send
 15005                           
 15006                           ;lcd.c: 70:     }
 15007   0048C4  EF70  F024         	goto	l136
 15008   0048C8                     l7718:
 15009   0048C8  0E02               	movlw	2
 15010   0048CA  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 15011   0048CC  A4D8               	btfss	status,2,c
 15012   0048CE  EF6B  F024         	goto	u9381
 15013   0048D2  EF6D  F024         	goto	u9380
 15014   0048D6                     u9381:
 15015   0048D6  EF70  F024         	goto	l136
 15016   0048DA                     u9380:
 15017   0048DA                     
 15018                           ;lcd.c: 72:         LCD_Send(0xC0);
 15019   0048DA  0EC0               	movlw	192
 15020   0048DC  ECED  F028         	call	_LCD_Send
 15021   0048E0                     l136:
 15022                           
 15023                           ;lcd.c: 75:     LCD_Send(0x40);
 15024   0048E0  0E40               	movlw	64
 15025   0048E2  ECED  F028         	call	_LCD_Send
 15026   0048E6                     
 15027                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 15028   0048E6  0E00               	movlw	0
 15029   0048E8  6E0C               	movwf	LCD_ShowString@i^0,c
 15030   0048EA                     l7728:
 15031                           
 15032                           ;lcd.c: 78:         LCD_Send(textData[i]);
 15033   0048EA  500C               	movf	LCD_ShowString@i^0,w,c
 15034   0048EC  2407               	addwf	LCD_ShowString@textData^0,w,c
 15035   0048EE  6E09               	movwf	??_LCD_ShowString^0,c
 15036   0048F0  0E00               	movlw	0
 15037   0048F2  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 15038   0048F4  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 15039   0048F6  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 15040   0048FA  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 15041   0048FE  0E00               	movlw	low (__mediumconst shr (0+16))
 15042   004900  6EF8               	movwf	tblptru,c
 15043   004902  0E0F               	movlw	(high __ramtop+-1)
 15044   004904  64F7               	cpfsgt	tblptrh,c
 15045   004906  D003               	bra	u9397
 15046   004908  0008               	tblrd		*
 15047   00490A  50F5               	movf	tablat,w,c
 15048   00490C  D005               	bra	u9390
 15049   00490E                     u9397:
 15050   00490E  CFF6 FFE1          	movff	tblptrl,fsr1l
 15051   004912  CFF7 FFE2          	movff	tblptrh,fsr1h
 15052   004916  50E7               	movf	indf1,w,c
 15053   004918                     u9390:
 15054   004918  ECED  F028         	call	_LCD_Send
 15055   00491C                     
 15056                           ;lcd.c: 79:     }
 15057   00491C  2A0C               	incf	LCD_ShowString@i^0,f,c
 15058   00491E  0E0F               	movlw	15
 15059   004920  640C               	cpfsgt	LCD_ShowString@i^0,c
 15060   004922  EF95  F024         	goto	u9401
 15061   004926  EF97  F024         	goto	u9400
 15062   00492A                     u9401:
 15063   00492A  EF75  F024         	goto	l7728
 15064   00492E                     u9400:
 15065   00492E                     
 15066                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 15067   00492E  846B               	bsf	107,2,c	;volatile
 15068   004930                     l140:
 15069   004930  B46B               	btfsc	107,2,c	;volatile
 15070   004932  EF9D  F024         	goto	u9411
 15071   004936  EF9F  F024         	goto	u9410
 15072   00493A                     u9411:
 15073   00493A  EF98  F024         	goto	l140
 15074   00493E                     u9410:
 15075   00493E  0012               	return		;funcret
 15076   004940                     __end_of_LCD_ShowString:
 15077                           	callstack 0
 15078                           
 15079 ;; *************** function _LCD_Clear *****************
 15080 ;; Defined at:
 15081 ;;		line 94 in file "lcd.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;		None
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      void 
 15088 ;; Registers used:
 15089 ;;		wreg, cstack
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15099 ;;Total ram usage:        0 bytes
 15100 ;; Hardware stack levels used: 1
 15101 ;; Hardware stack levels required when called: 2
 15102 ;; This function calls:
 15103 ;;		_LCD_Send
 15104 ;; This function is called by:
 15105 ;;		_moveDisplay
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           	psect	text59
 15110   0050EE                     __ptext59:
 15111                           	callstack 0
 15112   0050EE                     _LCD_Clear:
 15113                           	callstack 27
 15114   0050EE                     
 15115                           ;lcd.c: 95:     SSP2CON2bits.SEN = 1;
 15116   0050EE  806B               	bsf	107,0,c	;volatile
 15117   0050F0                     l155:
 15118   0050F0  B06B               	btfsc	107,0,c	;volatile
 15119   0050F2  EF7D  F028         	goto	u9421
 15120   0050F6  EF7F  F028         	goto	u9420
 15121   0050FA                     u9421:
 15122   0050FA  EF78  F028         	goto	l155
 15123   0050FE                     u9420:
 15124   0050FE                     
 15125                           ;lcd.c: 97:     SSP2IF = 0;
 15126   0050FE  9EA4               	bcf	4004,7,c	;volatile
 15127   005100                     
 15128                           ;lcd.c: 99:     LCD_Send(0x7C);
 15129   005100  0E7C               	movlw	124
 15130   005102  ECED  F028         	call	_LCD_Send
 15131                           
 15132                           ;lcd.c: 100:     LCD_Send(0x80);
 15133   005106  0E80               	movlw	128
 15134   005108  ECED  F028         	call	_LCD_Send
 15135                           
 15136                           ;lcd.c: 101:     LCD_Send(0x01);
 15137   00510C  0E01               	movlw	1
 15138   00510E  ECED  F028         	call	_LCD_Send
 15139   005112                     
 15140                           ;lcd.c: 103:     SSP2CON2bits.PEN = 1;
 15141   005112  846B               	bsf	107,2,c	;volatile
 15142   005114                     l158:
 15143   005114  B46B               	btfsc	107,2,c	;volatile
 15144   005116  EF8F  F028         	goto	u9431
 15145   00511A  EF91  F028         	goto	u9430
 15146   00511E                     u9431:
 15147   00511E  EF8A  F028         	goto	l158
 15148   005122                     u9430:
 15149   005122  0012               	return		;funcret
 15150   005124                     __end_of_LCD_Clear:
 15151                           	callstack 0
 15152                           
 15153 ;; *************** function _LCD_Init *****************
 15154 ;; Defined at:
 15155 ;;		line 3 in file "lcd.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      void 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2, cstack
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15173 ;;Total ram usage:        1 bytes
 15174 ;; Hardware stack levels used: 1
 15175 ;; Hardware stack levels required when called: 2
 15176 ;; This function calls:
 15177 ;;		_LCD_Send
 15178 ;; This function is called by:
 15179 ;;		_main
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text60
 15184   004626                     __ptext60:
 15185                           	callstack 0
 15186   004626                     _LCD_Init:
 15187                           	callstack 28
 15188   004626                     
 15189                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 15190   004626  010F               	movlb	15	; () banked
 15191   004628  913B               	bcf	59,0,b	;volatile
 15192                           
 15193                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 15194   00462A  933B               	bcf	59,1,b	;volatile
 15195                           
 15196                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 15197   00462C  8095               	bsf	149,0,c	;volatile
 15198                           
 15199                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 15200   00462E  8295               	bsf	149,1,c	;volatile
 15201                           
 15202                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 15203   004630  9092               	bcf	146,0,c	;volatile
 15204                           
 15205                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 15206   004632  8089               	bsf	137,0,c	;volatile
 15207   004634                     
 15208                           ; BSR set to: 15
 15209                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 15210   004634  506C               	movf	108,w,c	;volatile
 15211   004636  0BF0               	andlw	-16
 15212   004638  0908               	iorlw	8
 15213   00463A  6E6C               	movwf	108,c	;volatile
 15214                           
 15215                           ;lcd.c: 15:     SSP2ADD = 19;
 15216   00463C  0E13               	movlw	19
 15217   00463E  6E6E               	movwf	110,c	;volatile
 15218   004640                     
 15219                           ; BSR set to: 15
 15220                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 15221   004640  8A6C               	bsf	108,5,c	;volatile
 15222   004642                     
 15223                           ; BSR set to: 15
 15224                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15225   004642  0E34               	movlw	52
 15226   004644  6E07               	movwf	??_LCD_Init^0,c
 15227   004646  0EF2               	movlw	242
 15228   004648                     u10507:
 15229   004648  2EE8               	decfsz	wreg,f,c
 15230   00464A  D7FE               	bra	u10507
 15231   00464C  2E07               	decfsz	??_LCD_Init^0,f,c
 15232   00464E  D7FC               	bra	u10507
 15233   004650                     
 15234                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 15235   004650  806B               	bsf	107,0,c	;volatile
 15236   004652                     l123:
 15237   004652  B06B               	btfsc	107,0,c	;volatile
 15238   004654  EF2E  F023         	goto	u9701
 15239   004658  EF30  F023         	goto	u9700
 15240   00465C                     u9701:
 15241   00465C  EF29  F023         	goto	l123
 15242   004660                     u9700:
 15243   004660                     
 15244                           ;lcd.c: 22:     SSP2IF = 0;
 15245   004660  9EA4               	bcf	4004,7,c	;volatile
 15246   004662                     
 15247                           ;lcd.c: 27:     LCD_Send(0x7C);
 15248   004662  0E7C               	movlw	124
 15249   004664  ECED  F028         	call	_LCD_Send
 15250                           
 15251                           ;lcd.c: 28:     LCD_Send(0x80);
 15252   004668  0E80               	movlw	128
 15253   00466A  ECED  F028         	call	_LCD_Send
 15254                           
 15255                           ;lcd.c: 29:     LCD_Send(0x38);
 15256   00466E  0E38               	movlw	56
 15257   004670  ECED  F028         	call	_LCD_Send
 15258                           
 15259                           ;lcd.c: 30:     LCD_Send(0x80);
 15260   004674  0E80               	movlw	128
 15261   004676  ECED  F028         	call	_LCD_Send
 15262                           
 15263                           ;lcd.c: 31:     LCD_Send(0x39);
 15264   00467A  0E39               	movlw	57
 15265   00467C  ECED  F028         	call	_LCD_Send
 15266                           
 15267                           ;lcd.c: 32:     LCD_Send(0x80);
 15268   004680  0E80               	movlw	128
 15269   004682  ECED  F028         	call	_LCD_Send
 15270                           
 15271                           ;lcd.c: 33:     LCD_Send(0x17);
 15272   004686  0E17               	movlw	23
 15273   004688  ECED  F028         	call	_LCD_Send
 15274                           
 15275                           ;lcd.c: 34:     LCD_Send(0x80);
 15276   00468C  0E80               	movlw	128
 15277   00468E  ECED  F028         	call	_LCD_Send
 15278                           
 15279                           ;lcd.c: 35:     LCD_Send(0x7A);
 15280   004692  0E7A               	movlw	122
 15281   004694  ECED  F028         	call	_LCD_Send
 15282                           
 15283                           ;lcd.c: 36:     LCD_Send(0x80);
 15284   004698  0E80               	movlw	128
 15285   00469A  ECED  F028         	call	_LCD_Send
 15286                           
 15287                           ;lcd.c: 37:     LCD_Send(0x5E);
 15288   00469E  0E5E               	movlw	94
 15289   0046A0  ECED  F028         	call	_LCD_Send
 15290                           
 15291                           ;lcd.c: 38:     LCD_Send(0x80);
 15292   0046A4  0E80               	movlw	128
 15293   0046A6  ECED  F028         	call	_LCD_Send
 15294                           
 15295                           ;lcd.c: 39:     LCD_Send(0x6B);
 15296   0046AA  0E6B               	movlw	107
 15297   0046AC  ECED  F028         	call	_LCD_Send
 15298                           
 15299                           ;lcd.c: 40:     LCD_Send(0x80);
 15300   0046B0  0E80               	movlw	128
 15301   0046B2  ECED  F028         	call	_LCD_Send
 15302                           
 15303                           ;lcd.c: 41:     LCD_Send(0x0C);
 15304   0046B6  0E0C               	movlw	12
 15305   0046B8  ECED  F028         	call	_LCD_Send
 15306                           
 15307                           ;lcd.c: 42:     LCD_Send(0x80);
 15308   0046BC  0E80               	movlw	128
 15309   0046BE  ECED  F028         	call	_LCD_Send
 15310                           
 15311                           ;lcd.c: 43:     LCD_Send(0x01);
 15312   0046C2  0E01               	movlw	1
 15313   0046C4  ECED  F028         	call	_LCD_Send
 15314                           
 15315                           ;lcd.c: 44:     LCD_Send(0x80);
 15316   0046C8  0E80               	movlw	128
 15317   0046CA  ECED  F028         	call	_LCD_Send
 15318                           
 15319                           ;lcd.c: 45:     LCD_Send(0x06);
 15320   0046CE  0E06               	movlw	6
 15321   0046D0  ECED  F028         	call	_LCD_Send
 15322                           
 15323                           ;lcd.c: 46:     LCD_Send(0x80);
 15324   0046D4  0E80               	movlw	128
 15325   0046D6  ECED  F028         	call	_LCD_Send
 15326                           
 15327                           ;lcd.c: 47:     LCD_Send(0x02);
 15328   0046DA  0E02               	movlw	2
 15329   0046DC  ECED  F028         	call	_LCD_Send
 15330   0046E0                     
 15331                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 15332   0046E0  846B               	bsf	107,2,c	;volatile
 15333   0046E2                     l126:
 15334   0046E2  B46B               	btfsc	107,2,c	;volatile
 15335   0046E4  EF76  F023         	goto	u9711
 15336   0046E8  EF78  F023         	goto	u9710
 15337   0046EC                     u9711:
 15338   0046EC  EF71  F023         	goto	l126
 15339   0046F0                     u9710:
 15340   0046F0                     
 15341                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 15342   0046F0  0E34               	movlw	52
 15343   0046F2  6E07               	movwf	??_LCD_Init^0,c
 15344   0046F4  0EF2               	movlw	242
 15345   0046F6                     u10517:
 15346   0046F6  2EE8               	decfsz	wreg,f,c
 15347   0046F8  D7FE               	bra	u10517
 15348   0046FA  2E07               	decfsz	??_LCD_Init^0,f,c
 15349   0046FC  D7FC               	bra	u10517
 15350   0046FE  0012               	return		;funcret
 15351   004700                     __end_of_LCD_Init:
 15352                           	callstack 0
 15353                           
 15354 ;; *************** function _LCD_Send *****************
 15355 ;; Defined at:
 15356 ;;		line 85 in file "lcd.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;  data            1    wreg     unsigned char 
 15359 ;; Auto vars:     Size  Location     Type
 15360 ;;  data            1    5[COMRAM] unsigned char 
 15361 ;; Return value:  Size  Location     Type
 15362 ;;                  1    wreg      void 
 15363 ;; Registers used:
 15364 ;;		wreg
 15365 ;; Tracked objects:
 15366 ;;		On entry : 0/0
 15367 ;;		On exit  : 0/0
 15368 ;;		Unchanged: 0/0
 15369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15374 ;;Total ram usage:        1 bytes
 15375 ;; Hardware stack levels used: 1
 15376 ;; Hardware stack levels required when called: 1
 15377 ;; This function calls:
 15378 ;;		Nothing
 15379 ;; This function is called by:
 15380 ;;		_LCD_Init
 15381 ;;		_LCD_ShowString
 15382 ;;		_LCD_Clear
 15383 ;; This function uses a non-reentrant model
 15384 ;;
 15385                           
 15386                           	psect	text61
 15387   0051DA                     __ptext61:
 15388                           	callstack 0
 15389   0051DA                     _LCD_Send:
 15390                           	callstack 27
 15391                           
 15392                           ;incstack = 0
 15393                           ;LCD_Send@data stored from wreg
 15394   0051DA  6E06               	movwf	LCD_Send@data^0,c
 15395   0051DC                     
 15396                           ;lcd.c: 87:     SSP2BUF = data;
 15397   0051DC  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 15398   0051E0                     l146:
 15399   0051E0  B06D               	btfsc	109,0,c	;volatile
 15400   0051E2  EFF5  F028         	goto	u9261
 15401   0051E6  EFF7  F028         	goto	u9260
 15402   0051EA                     u9261:
 15403   0051EA  EFF0  F028         	goto	l146
 15404   0051EE                     u9260:
 15405   0051EE                     l149:
 15406   0051EE  AEA4               	btfss	4004,7,c	;volatile
 15407   0051F0  EFFC  F028         	goto	u9271
 15408   0051F4  EFFE  F028         	goto	u9270
 15409   0051F8                     u9271:
 15410   0051F8  EFF7  F028         	goto	l149
 15411   0051FC                     u9270:
 15412   0051FC                     
 15413                           ;lcd.c: 90:     SSP2IF = 0;
 15414   0051FC  9EA4               	bcf	4004,7,c	;volatile
 15415   0051FE  0012               	return		;funcret
 15416   005200                     __end_of_LCD_Send:
 15417                           	callstack 0
 15418                           
 15419 ;; *************** function _ISR *****************
 15420 ;; Defined at:
 15421 ;;		line 11 in file "interrupt.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;		None
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;  temp            1    4[COMRAM] unsigned char 
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  1    wreg      void 
 15428 ;; Registers used:
 15429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15439 ;;Total ram usage:        5 bytes
 15440 ;; Hardware stack levels used: 1
 15441 ;; This function calls:
 15442 ;;		Nothing
 15443 ;; This function is called by:
 15444 ;;		Interrupt level 2
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448                           	psect	intcode
 15449   000008                     __pintcode:
 15450                           	callstack 0
 15451   000008                     _ISR:
 15452                           	callstack 21
 15453                           
 15454                           ;incstack = 0
 15455   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15456   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 15457   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 15458   000012                     
 15459                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 15460   000012  A09D               	btfss	3997,0,c	;volatile
 15461   000014  EF0E  F000         	goto	i2u686_41
 15462   000018  EF10  F000         	goto	i2u686_40
 15463   00001C                     i2u686_41:
 15464   00001C  EF49  F000         	goto	i2l6236
 15465   000020                     i2u686_40:
 15466   000020  A09E               	btfss	3998,0,c	;volatile
 15467   000022  EF15  F000         	goto	i2u687_41
 15468   000026  EF17  F000         	goto	i2u687_40
 15469   00002A                     i2u687_41:
 15470   00002A  EF49  F000         	goto	i2l6236
 15471   00002E                     i2u687_40:
 15472   00002E  0101               	movlb	1	; () banked
 15473   000030  5126               	movf	_GPIOIE& (0+255),w,b
 15474   000032  B4D8               	btfsc	status,2,c
 15475   000034  EF1E  F000         	goto	i2u688_41
 15476   000038  EF20  F000         	goto	i2u688_40
 15477   00003C                     i2u688_41:
 15478   00003C  EF49  F000         	goto	i2l6236
 15479   000040                     i2u688_40:
 15480   000040                     
 15481                           ; BSR set to: 1
 15482                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 15483   000040  A480               	btfss	128,2,c	;volatile
 15484   000042  EF25  F000         	goto	i2u689_41
 15485   000046  EF27  F000         	goto	i2u689_40
 15486   00004A                     i2u689_41:
 15487   00004A  EF44  F000         	goto	i2l412
 15488   00004E                     i2u689_40:
 15489   00004E                     
 15490                           ; BSR set to: 1
 15491                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 15492   00004E  0E03               	movlw	3
 15493   000050  6E02               	movwf	(??_ISR+1)^0,c
 15494   000052  0E08               	movlw	8
 15495   000054  6E01               	movwf	??_ISR^0,c
 15496   000056  0E77               	movlw	119
 15497   000058                     i2u1052_47:
 15498   000058  2EE8               	decfsz	wreg,f,c
 15499   00005A  D7FE               	bra	i2u1052_47
 15500   00005C  2E01               	decfsz	??_ISR^0,f,c
 15501   00005E  D7FC               	bra	i2u1052_47
 15502   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 15503   000062  D7FA               	bra	i2u1052_47
 15504   000064  0000               	nop	
 15505   000066                     
 15506                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 15507   000066  A480               	btfss	128,2,c	;volatile
 15508   000068  EF38  F000         	goto	i2u690_41
 15509   00006C  EF3A  F000         	goto	i2u690_40
 15510   000070                     i2u690_41:
 15511   000070  EF44  F000         	goto	i2l412
 15512   000074                     i2u690_40:
 15513   000074                     i2l414:
 15514   000074  B480               	btfsc	128,2,c	;volatile
 15515   000076  EF3F  F000         	goto	i2u691_41
 15516   00007A  EF41  F000         	goto	i2u691_40
 15517   00007E                     i2u691_41:
 15518   00007E  EF3A  F000         	goto	i2l414
 15519   000082                     i2u691_40:
 15520   000082                     
 15521                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 15522   000082  0E00               	movlw	0
 15523   000084  0100               	movlb	0	; () banked
 15524   000086  6FFE               	movwf	_keepStateGPIO& (0+255),b
 15525   000088                     i2l412:
 15526                           
 15527                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 15528   000088  0E9E               	movlw	158
 15529   00008A  6ECF               	movwf	207,c	;volatile
 15530   00008C  0E58               	movlw	88
 15531   00008E  6ECE               	movwf	206,c	;volatile
 15532   000090                     
 15533                           ;interrupt.c: 23:         TMR1IF = 0;
 15534   000090  909E               	bcf	3998,0,c	;volatile
 15535   000092                     i2l6236:
 15536                           
 15537                           ;interrupt.c: 26:     if(TMR1IE && TMR1IF && GAMEIE){
 15538   000092  A09D               	btfss	3997,0,c	;volatile
 15539   000094  EF4E  F000         	goto	i2u692_41
 15540   000098  EF50  F000         	goto	i2u692_40
 15541   00009C                     i2u692_41:
 15542   00009C  EF66  F000         	goto	i2l6248
 15543   0000A0                     i2u692_40:
 15544   0000A0  A09E               	btfss	3998,0,c	;volatile
 15545   0000A2  EF55  F000         	goto	i2u693_41
 15546   0000A6  EF57  F000         	goto	i2u693_40
 15547   0000AA                     i2u693_41:
 15548   0000AA  EF66  F000         	goto	i2l6248
 15549   0000AE                     i2u693_40:
 15550   0000AE  0101               	movlb	1	; () banked
 15551   0000B0  5124               	movf	_GAMEIE& (0+255),w,b
 15552   0000B2  B4D8               	btfsc	status,2,c
 15553   0000B4  EF5E  F000         	goto	i2u694_41
 15554   0000B8  EF60  F000         	goto	i2u694_40
 15555   0000BC                     i2u694_41:
 15556   0000BC  EF66  F000         	goto	i2l6248
 15557   0000C0                     i2u694_40:
 15558   0000C0                     
 15559                           ; BSR set to: 1
 15560                           ;interrupt.c: 27:         GAMEtime += 1;
 15561   0000C0  2B23               	incf	_GAMEtime& (0+255),f,b
 15562   0000C2                     
 15563                           ; BSR set to: 1
 15564                           ;interrupt.c: 29:         TMR1 = 0xFFFF - (62500 - 1);
 15565   0000C2  0E0B               	movlw	11
 15566   0000C4  6ECF               	movwf	207,c	;volatile
 15567   0000C6  0EDC               	movlw	220
 15568   0000C8  6ECE               	movwf	206,c	;volatile
 15569   0000CA                     
 15570                           ; BSR set to: 1
 15571                           ;interrupt.c: 30:         TMR1IF = 0;
 15572   0000CA  909E               	bcf	3998,0,c	;volatile
 15573   0000CC                     i2l6248:
 15574                           
 15575                           ;interrupt.c: 33:     if(RC1IE && RC1IF && UARTIE){
 15576   0000CC  AA9D               	btfss	3997,5,c	;volatile
 15577   0000CE  EF6B  F000         	goto	i2u695_41
 15578   0000D2  EF6D  F000         	goto	i2u695_40
 15579   0000D6                     i2u695_41:
 15580   0000D6  EFA1  F000         	goto	i2l423
 15581   0000DA                     i2u695_40:
 15582   0000DA  AA9E               	btfss	3998,5,c	;volatile
 15583   0000DC  EF72  F000         	goto	i2u696_41
 15584   0000E0  EF74  F000         	goto	i2u696_40
 15585   0000E4                     i2u696_41:
 15586   0000E4  EFA1  F000         	goto	i2l423
 15587   0000E8                     i2u696_40:
 15588   0000E8  0101               	movlb	1	; () banked
 15589   0000EA  5125               	movf	_UARTIE& (0+255),w,b
 15590   0000EC  B4D8               	btfsc	status,2,c
 15591   0000EE  EF7B  F000         	goto	i2u697_41
 15592   0000F2  EF7D  F000         	goto	i2u697_40
 15593   0000F6                     i2u697_41:
 15594   0000F6  EFA1  F000         	goto	i2l423
 15595   0000FA                     i2u697_40:
 15596   0000FA                     
 15597                           ; BSR set to: 1
 15598                           ;interrupt.c: 34:         char temp = RCREG1;
 15599   0000FA  CFAE F005          	movff	4014,ISR@temp	;volatile
 15600   0000FE                     
 15601                           ; BSR set to: 1
 15602                           ;interrupt.c: 35:         static int i = 0;;interrupt.c: 37:         if(temp != '\n'){
 15603   0000FE  0E0A               	movlw	10
 15604   000100  1805               	xorwf	ISR@temp^0,w,c
 15605   000102  B4D8               	btfsc	status,2,c
 15606   000104  EF86  F000         	goto	i2u698_41
 15607   000108  EF88  F000         	goto	i2u698_40
 15608   00010C                     i2u698_41:
 15609   00010C  EF94  F000         	goto	i2l6262
 15610   000110                     i2u698_40:
 15611   000110                     
 15612                           ; BSR set to: 1
 15613                           ;interrupt.c: 38:             gmail.data[i] = temp;
 15614   000110  0E77               	movlw	low _gmail
 15615   000112  2521               	addwf	ISR@i& (0+255),w,b
 15616   000114  6ED9               	movwf	fsr2l,c
 15617   000116  0E01               	movlw	high _gmail
 15618   000118  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15619   00011A  6EDA               	movwf	fsr2h,c
 15620   00011C  C005  FFDF         	movff	ISR@temp,indf2
 15621   000120                     
 15622                           ; BSR set to: 1
 15623                           ;interrupt.c: 39:             i++;
 15624   000120  4B21               	infsnz	ISR@i& (0+255),f,b
 15625   000122  2B22               	incf	(ISR@i+1)& (0+255),f,b
 15626                           
 15627                           ;interrupt.c: 40:         } else {
 15628   000124  EFA1  F000         	goto	i2l423
 15629   000128                     i2l6262:
 15630                           
 15631                           ; BSR set to: 1
 15632                           ;interrupt.c: 41:             gmail.full = 1;
 15633   000128  0E01               	movlw	1
 15634   00012A  6F96               	movwf	(_gmail+31)& (0+255),b	;volatile
 15635   00012C                     
 15636                           ; BSR set to: 1
 15637                           ;interrupt.c: 42:             gmail.data[i] = '\0';
 15638   00012C  0E77               	movlw	low _gmail
 15639   00012E  2521               	addwf	ISR@i& (0+255),w,b
 15640   000130  6ED9               	movwf	fsr2l,c
 15641   000132  0E01               	movlw	high _gmail
 15642   000134  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 15643   000136  6EDA               	movwf	fsr2h,c
 15644   000138  6ADF               	clrf	indf2,c
 15645   00013A                     
 15646                           ; BSR set to: 1
 15647                           ;interrupt.c: 43:             i = 0;
 15648   00013A  0E00               	movlw	0
 15649   00013C  6F22               	movwf	(ISR@i+1)& (0+255),b
 15650   00013E  0E00               	movlw	0
 15651   000140  6F21               	movwf	ISR@i& (0+255),b
 15652   000142                     i2l423:
 15653   000142  C004  FFDA         	movff	??_ISR+3,fsr2h
 15654   000146  C003  FFD9         	movff	??_ISR+2,fsr2l
 15655   00014A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15656   00014C  0011               	retfie		f
 15657   00014E                     __end_of_ISR:
 15658                           	callstack 0
 15659                           
 15660                           	psect	rparam
 15661   000000                     
 15662                           	psect	temp
 15663   00005A                     btemp:
 15664                           	callstack 0
 15665   00005A                     	ds	1
 15666   000000                     int$flags	set	btemp
 15667   000000                     wtemp8	set	btemp+1
 15668   000000                     ttemp5	set	btemp+1
 15669   000000                     ttemp6	set	btemp+4
 15670   000000                     ttemp7	set	btemp+8
 15671                           
 15672                           	psect	config
 15673                           
 15674                           ; Padding undefined space
 15675   300000                     	org	3145728
 15676   300000  FF                 	db	255
 15677                           
 15678                           ;Config register CONFIG1H @ 0x300001
 15679                           ;	Oscillator Selection bits
 15680                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 15681                           ;	4X PLL Enable
 15682                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15683                           ;	Primary clock enable bit
 15684                           ;	PRICLKEN = 0x1, unprogrammed default
 15685                           ;	Fail-Safe Clock Monitor Enable bit
 15686                           ;	FCMEN = 0x0, unprogrammed default
 15687                           ;	Internal/External Oscillator Switchover bit
 15688                           ;	IESO = 0x0, unprogrammed default
 15689   300001                     	org	3145729
 15690   300001  33                 	db	51
 15691                           
 15692                           ;Config register CONFIG2L @ 0x300002
 15693                           ;	unspecified, using default values
 15694                           ;	Power-up Timer Enable bit
 15695                           ;	PWRTEN = 0x1, unprogrammed default
 15696                           ;	Brown-out Reset Enable bits
 15697                           ;	BOREN = 0x3, unprogrammed default
 15698                           ;	Brown Out Reset Voltage bits
 15699                           ;	BORV = 0x3, unprogrammed default
 15700   300002                     	org	3145730
 15701   300002  1F                 	db	31
 15702                           
 15703                           ;Config register CONFIG2H @ 0x300003
 15704                           ;	Watchdog Timer Enable bits
 15705                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15706                           ;	Watchdog Timer Postscale Select bits
 15707                           ;	WDTPS = 0xF, unprogrammed default
 15708   300003                     	org	3145731
 15709   300003  3C                 	db	60
 15710                           tosu	equ	0xFFF
 15711                           tosh	equ	0xFFE
 15712                           tosl	equ	0xFFD
 15713                           stkptr	equ	0xFFC
 15714                           pclatu	equ	0xFFB
 15715                           pclath	equ	0xFFA
 15716                           pcl	equ	0xFF9
 15717                           tblptru	equ	0xFF8
 15718                           tblptrh	equ	0xFF7
 15719                           tblptrl	equ	0xFF6
 15720                           tablat	equ	0xFF5
 15721                           prodh	equ	0xFF4
 15722                           prodl	equ	0xFF3
 15723                           indf0	equ	0xFEF
 15724                           postinc0	equ	0xFEE
 15725                           postdec0	equ	0xFED
 15726                           preinc0	equ	0xFEC
 15727                           plusw0	equ	0xFEB
 15728                           fsr0h	equ	0xFEA
 15729                           fsr0l	equ	0xFE9
 15730                           wreg	equ	0xFE8
 15731                           indf1	equ	0xFE7
 15732                           postinc1	equ	0xFE6
 15733                           postdec1	equ	0xFE5
 15734                           preinc1	equ	0xFE4
 15735                           plusw1	equ	0xFE3
 15736                           fsr1h	equ	0xFE2
 15737                           fsr1l	equ	0xFE1
 15738                           bsr	equ	0xFE0
 15739                           indf2	equ	0xFDF
 15740                           postinc2	equ	0xFDE
 15741                           postdec2	equ	0xFDD
 15742                           preinc2	equ	0xFDC
 15743                           plusw2	equ	0xFDB
 15744                           fsr2h	equ	0xFDA
 15745                           fsr2l	equ	0xFD9
 15746                           status	equ	0xFD8

Data Sizes:
    Strings     324
    Constant    64
    Data        40
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    158     159
    BANK1           256     51     246
    BANK2           256      0      34
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[17]), 
		 -> runGAME@text(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[17]), 
		 -> STR_12(CODE[17]), STR_13(CODE[17]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_33(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[17]), STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), 
		 -> STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4526	PTR unsigned char  size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), 
		 -> STR_21(CODE[4]), STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    moveDisplay@F6965	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), 
		 -> STR_21(CODE[4]), STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_17(CODE[5]), STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), 
		 -> STR_21(CODE[4]), STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_16(CODE[5]), STR_28(CODE[5]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6975	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3927$buffer	PTR unsigned char  size(2) Largest target is 0

    S3927$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), STR_29(CODE[19]), 
		 -> STR_30(CODE[17]), STR_31(CODE[19]), STR_32(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), runGAME@approxText(BANK1[17]), 
		 -> runGAME@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_17(CODE[5]), 
		 -> STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), STR_21(CODE[4]), 
		 -> STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), STR_40(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 31
		 -> ?_printf(BANK0[2]), runUART@reversed(BANK0[31]), ?_sprintf(BANK0[2]), STR_17(CODE[5]), 
		 -> STR_18(CODE[5]), STR_19(CODE[4]), STR_20(CODE[4]), STR_21(CODE[4]), 
		 -> STR_22(CODE[5]), STR_23(CODE[6]), STR_24(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_34(CODE[4]), STR_37(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> gmail(BANK1[32]), gmail$data(BANK1[31]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[5]), STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), 
		 -> STR_28(CODE[5]), STR_29(CODE[19]), STR_30(CODE[17]), STR_31(CODE[19]), 
		 -> STR_32(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[5]), STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), 
		 -> STR_28(CODE[5]), STR_29(CODE[19]), STR_30(CODE[17]), STR_31(CODE[19]), 
		 -> STR_32(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[5]), STR_25(CODE[6]), STR_26(CODE[5]), STR_27(CODE[19]), 
		 -> STR_28(CODE[5]), STR_29(CODE[19]), STR_30(CODE[17]), STR_31(CODE[19]), 
		 -> STR_32(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _rand->___lmul
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->___awdiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    ___awdiv->_rand
    _LCD_ShowString->_LCD_Send
    _LCD_Clear->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_runUART
    _runUART->_printf
    _runGAME->_sprintf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  438041
                                            154 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGAME
                            _runGPIO
                           _runMUSIC
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                             40    40      0   63853
                                            114 BANK0     40    40      0
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0    1304
                                             31 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runMUSIC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             31    31      0     495
                                              6 COMRAM    31    31      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runGAME                                             44    44      0   69451
                                            135 BANK0      2     2      0
                                              0 BANK1     42    42      0
                     _LCD_ShowString
                            ___awdiv
                            ___lbdiv
                               _rand
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     456
                                             17 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  153096
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   63191
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   79687
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   67600
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                          _LCD_Clear
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   64496
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   62888
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   62082
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                10     6      4    6310
                                             31 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     412
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     421
                                              5 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   41068
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7673
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4963
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1165
                                             23 COMRAM     8     4      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    2296
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      31
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_Clear
       _LCD_Send
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
               _rand (ARG)
                 ___lmul
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
           _utoa
             ___lwdiv
             ___lwmod
             _pad
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGAME
     _LCD_ShowString
     ___awdiv
     ___lbdiv
     _rand
     _sprintf
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runMUSIC
   _runPWM
     ___awdiv
   _runUART
     _printf
     _strlen

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      22       9       13.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhhhhh      A      0       0      36        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     210      54        0.0%
DATA                 0      0     210       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 21:33:21 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FEA7                          _C1 FEA3                          _C2 FE9F  
                        _C3 FE9B                          l61 2AE0                          l63 2AD2  
                        l56 2A8E                          l66 2CC0                          l58 2A80  
                        _S1 FE87                          l68 2B14                          _S2 FE83  
                        _S3 FE7F                          _S4 FE7B                ___awdiv@sign 001D  
       ___wmul@multiplicand 0008                         l123 4652                         l140 4930  
                       l132 4892                         l125 4660                         l126 46E2  
                       l134 48A0                         l151 51FC                         l143 493E  
                       l303 422A                         l231 2F38                         l152 51FE  
                       l136 48E0                         l129 46FE                         l161 5122  
                       l146 51E0                         l250 5040                         l242 2FD4  
                       l234 2F3A                         l155 50F0                         l139 492E  
                       l251 5044                         l149 51EE                         l157 50FE  
                       l245 501E                         l158 5114                         l270 5222  
                       l350 527A                         l247 502C                         l248 5032  
                       l273 5234                         l353 526C                         l521 4002  
                       l362 5242                         l522 4100                         l356 525E  
                       l372 3FAA                         l365 5288                         l525 40BA  
                       l710 51D8                         l462 361A                         l534 40EE  
                       l526 407C                         l359 5250                         l519 3FF4  
                       l472 3606                         l464 3458                         l721 4D20  
                       l377 3FBC                         l722 4D30                         l378 3FD2  
                       l538 4118                         l475 362C                         l467 34F8  
                       l707 528A                         l476 362E                         l581 3DFA  
                       l662 225E                         l680 2080                         l664 1F82  
                       l592 3E54                         l681 2090                         l593 3E66  
                       l682 20A0                         l691 2270                         l675 2040  
                       l579 3E42                         l692 2284                         l684 2172  
                       l676 2216                         l941 488C                         l677 2050  
                       l589 3E2E                         l678 2060                         l679 2070  
                       l688 224A                         l954 49EE                         l980 4436  
                       l975 43F0                         l984 507E                         l969 4B46  
                       _GIE 7F97                         _PR2 0FBB                         _ISR 0008  
                       _abs 5158                         _pad 4B48                ___awmod@sign 000B  
                       prod 0FF3                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0021                ___flmul@bexp 0026  
              ___flmul@sign 0020                ___flmul@temp 002B                ___flmul@prod 0027  
                      ?_ISR 0001                        ISR@i 0121                ___fltol@exp1 0053  
                      l1007 4332                        l1201 4C50                        l1211 4D8C  
                      ?_abs 000C                        l1116 4DF0                        l1303 2886  
                      l1240 1756                        l1208 4C58                        l1305 28FE  
                      l1306 28EC                        l1218 4D94                        l1331 1D2E  
                      l1324 1B38                        l1421 4BC2                        l1341 1E5E  
                      l1333 1DA6                        l1501 3A86                        l1430 3BFC  
                      l1334 1D94                        l1238 17A2                        l1423 4BE4  
                      l1255 18BC                        l1247 1A72                        l1239 1790  
                      l1328 1E9C                        l1264 198C                        l1280 4F7C  
                      l1441 3CFA                        l1265 197A                        l1513 3B7E  
                      l1418 4B80                        l1611 5172                        l1427 3BAE  
                      l1292 29E0                        l1620 341C                        l1452 0B4A  
                      l1508 3B36                        l1372 391C                        l1429 3BB6  
                      l1533 4A9C                        l1525 4624                        l1517 4550  
                      l1365 3884                        l1614 518A                        l1294 2840  
                      l1606 4534                        l1623 3360                        l1455 04E4  
                      l1519 4558                        l1640 4EEA                        l1560 10A6  
                      l1368 39E0                        l1297 2804                        l1457 032A  
                      l1529 4A94                        l1634 4E46                        l1379 3978  
                      l1652 47C8                        l1660 5006                        l1388 4FC2  
                      l1485 092E                        l1728 382C                        l1744 24A8  
                      l1745 2646                        l1762 5156                        l1667 521E  
                      l1675 4CC6                        l1596 4F34                        l1757 3206  
                      l1694 15B0                        l1774 50EC                        l7000 5158  
                      l1768 50B6                        l7002 5166                        l7010 44BE  
                      l7100 3C46                        l6300 1602                        l7012 44CA  
                      l7004 4438                        l7110 3C9A                        l7102 3C4C  
                      l6310 1634                        l6302 160A                        l7022 452C  
                      l7006 4458                        l7030 4DF2                        ?_pad 0017  
                      l7112 3CB4                        l7104 3C52                        l6400 180C  
                      l6320 166A                        l6312 163A                        l6304 161A  
                      l7008 4496                        l7016 44D6                        l7040 3228  
                      l7032 4E00                        l7200 0436                        l8000 3FCC  
                      l7114 3CC4                        l7106 3C6E                        l6402 1810  
                      l6410 1830                        l6330 16A6                        l6322 167A  
                      l6314 1648                        l6306 1620                        l7018 44E8  
                      l7050 3314                        l7042 3280                        l7034 4E14  
                      l7026 5080                        l7210 04EC                        l7202 046A  
                      l7130 017A                        l7122 0152                        l8010 3D0E  
                      l7116 3CCA                        l7108 3C88                        l6412 1856  
                      l6420 18AC                        l6404 181E                        l6340 16C4  
                      l6332 16B4                        l6324 167C                        l6316 164A  
                      l6308 1632                        l7060 33FC                        l7052 3350  
                      l7044 3294                        l7028 5088                        l7300 0984  
                      l7220 051E                        l7212 04FA                        l7204 0472  
                      l7140 01D0                        l7132 019E                        l7124 0158  
                      l8100 40C8                        l8020 3D1E                        l8012 3D10  
                      l8004 3CFC                        l6270 5230                        l7118 3CDA  
                      l6510 2674                        l6502 2648                        l6430 1900  
                      l6422 18D2                        l6414 188A                        l6406 1820  
                      l6350 16D8                        l6342 16C8                        l6334 16B8  
                      l6318 165A                        l6326 1684                        l7062 340C  
                      l7046 32A2                        l7054 3384                        l7038 3208  
                      l7070 4EBC                        l7310 09B8                        l7302 098A  
                      l7222 0530                        l7230 0570                        l7214 0506  
                      l7150 0220                        l7142 01DC                        l7134 01A8  
                      l7126 0168                        l8110 4114                        l8102 40E0  
                      l8030 3D86                        l8022 3D2A                        l8014 3D12  
                      l8006 3D08                        l6280 474C                        l6272 4700  
                      l7080 3BA2                        l6600 28A8                        l6520 26AE  
                      l6512 2684                        l6504 2654                        l6440 192A  
                      l6432 190E                        l6424 18E2                        l6416 188C  
                      l6408 182A                        l6360 16EC                        l6352 16DC  
                      l6344 16CC                        l6336 16BC                        l6328 1694  
                      l7056 33C0                        l7072 4EC0                        l7312 09BE  
                      l7304 0990                        l7320 0A56                        l7240 0658  
                      l7232 0578                        l7224 053E                        l7216 0510  
                      l7208 04B2                        l7160 0254                        l7152 0224  
                      l7144 01E4                        l7136 01B0                        l7128 0176  
                      l7400 45C6                        l8120 3436                        l8200 2F1A  
                      l8112 4116                        l8040 3DC2                        l8032 3D8A  
                      l8024 3D3C                        l8016 3D1A                        l8008 3D0C  
                      l6282 4782                        l6274 4712                        l7090 3BF0  
                      l7082 3BBE                        l6610 291A                        l6602 28B6  
                      l6530 26DA                        l6522 26B4                        l6514 2694  
                      l6506 2662                        l6450 195C                        l6442 193A  
                      l6434 1910                        l6418 189C                        l6370 173E  
                      l6362 16F0                        l6354 16E0                        l6346 16D0  
                      l6338 16C0                        l6290 15CE                        l7058 33D4  
                      l7074 4ECC                        l7066 4E9C                        l7330 0AD6  
                      l7322 0A74                        l7314 0A16                        l7306 09A2  
                      l7250 0716                        l7242 068C                        l7234 0588  
                      l7226 0556                        l7218 0518                        l7170 02B0  
                      l7154 022A                        l7138 01C0                        l7146 01E8  
                      l7410 49F0                        l7402 45D8                        l8130 3466  
                      l8122 3438                        l8210 2F7E                        l8202 2F48  
                      l8106 40FC                        l8050 3DDE                        l8034 3DA0  
                      l8026 3D50                        l8018 3D1C                        l6268 5222  
                      l6276 4724                        l7092 3BF8                        l7084 3BCE  
                      l6620 2986                        l6612 2928                        l6604 28E4  
                      l6540 2714                        l6532 26EA                        l6524 26BA  
                      l6516 2696                        l6508 2664                        l6700 1BFE  
                      l6460 19B6                        l6452 1972                        l6436 191E  
                      l6428 18F6                        l6444 193C                        l6380 1782  
                      l6372 174E                        l6356 16E4                        l6348 16D4  
                      l6364 16F4                        l6292 15D0                        l7068 4EB0  
                      l7076 4ED0                        l7340 0B2A                        l7332 0AE4  
                      l7324 0A90                        l7316 0A4A                        l7308 09B4  
                      l7260 07B2                        l7252 072C                        l7236 059C  
                      l7244 0692                        l7228 0568                        l7172 02B6  
                      l7156 0232                        l7148 020E                        l7164 0274  
                      l7420 4A62                        l7412 49F8                        l7404 45EA  
                      l7500 0C2C                        l8140 3524                        l8132 3484  
                      l8124 3444                        l8116 341E                        l8220 2FAC  
                      l8212 2F84                        l8204 2F5C                        l8300 2112  
                      l8108 4110                        l8060 3E5A                        l8052 3E08  
                      l8036 3DAA                        l8028 3D5E                        l6278 472E  
                      l7094 3C04                        l7086 3BD4                        l7078 3B80  
                      l6630 29D4                        l6622 29A0                        l6614 2952  
                      l6542 272A                        l6534 26FA                        l6526 26C8  
                      l6518 269E                        l6710 1C60                        l6702 1C0A  
                      l6470 1A32                        l6462 19F0                        l6438 1926  
                      l6446 194A                        l6382 1784                        l6374 1764  
                      l6366 16F8                        l6358 16E8                        l6294 15E0  
                      l6286 15B2                        l7334 0AFC                        l7326 0A98  
                      l7318 0A52                        l7262 0808                        l7270 085A  
                      l7254 075E                        l7246 06B0                        l7238 0600  
                      l7190 0340                        l7174 02BE                        l7166 029A  
                      l7182 02DA                        l7158 024A                        l7414 4A1A  
                      l7422 4A6E                        l7350 3A10                        l7406 4604  
                      l7510 0C76                        l7502 0C38                        l7430 3894  
                      l8150 35F8                        l8142 358E                        l8134 34EE  
                      l8126 344E                        l8118 3426                        l8222 2FB0  
                      l8214 2F92                        l8206 2F6A                        l8310 2174  
                      l8302 2116                        l8230 1EDC                        l8070 3FD4  
                      l8062 3E60                        l8054 3E20                        l8046 3DCC  
                      l8038 3DBC                        l6800 483A                        l7096 3C0E  
                      l7088 3BE4                        l6632 29D6                        l6624 29BC  
                      l6608 290E                        l6616 2956                        l6560 277E  
                      l6544 273A                        l6552 275A                        l6536 26FC  
                      l6528 26CA                        l6720 1CF6                        l6712 1C6C  
                      l6704 1C1A                        l6640 1A74                        l6480 1A52  
                      l6472 1A36                        l6456 199C                        l6464 19F2  
                      l6448 194E                        l6392 17D4                        l6384 178E  
                      l6376 1770                        l6368 1722                        l6296 15F0  
                      l6288 15C0                        l7336 0B0C                        l7328 0AA6  
                      l7280 088C                        l7272 086A                        l7264 080E  
                      l7256 076E                        l7248 06E4                        l7192 0374  
                      l7184 02F4                        l7168 02AC                        l7416 4A26  
                      l7352 3A14                        l7344 39E2                        l7520 0CC8  
                      l7512 0C7E                        l7504 0C4C                        l7440 38D2  
                      l7432 38AA                        l7424 3830                        l8144 35C4  
                      l8136 34F6                        l8128 3456                        l8216 2F98  
                      l8208 2F70                        l8224 2FC2                        l8160 2D0A  
                      l8312 2190                        l8304 213C                        l8240 1EF8  
                      l8232 1EDE                        l8080 402C                        l8072 3FD6  
                      l8064 3E62                        l8048 3DDA                        l6810 4866  
                      l6802 4840                        l6490 4FD0                        l7098 3C14  
                      l6626 29C0                        l6618 2970                        l6570 27D0  
                      l6562 2798                        l6554 276A                        l6546 2742  
                      l6538 2704                        l6730 1D4C                        l6722 1D14  
                      l6714 1C88                        l6706 1C34                        l6650 1AB0  
                      l6642 1A80                        l6482 1A60                        l6474 1A44  
                      l6466 1A02                        l6458 19A8                        l6394 17E4  
                      l6386 17B0                        l6378 1774                        l6298 1600  
                      l7338 0B22                        l7290 095E                        l7282 0906  
                      l7274 0872                        l7266 0842                        l7258 077E  
                      l7194 03B2                        l7418 4A42                        l7370 3B18  
                      l7362 3AA8                        l7354 3A52                        l7346 39FC  
                      l7602 0FF4                        l7530 0D36                        l7522 0CE8  
                      l7506 0C5C                        l7450 395A                        l7442 3904  
                      l7426 3840                        l8154 3614                        l8146 35D2  
                      l8138 3506                        l8218 2FA6                        l8170 2D24  
                      l8162 2D0C                        l8330 2258                        l8314 219E  
                      l8306 215A                        l8322 21D0                        l8250 1F04  
                      l8242 1EFA                        l8234 1EEA                        l8226 1E9E  
                      l8090 408A                        l8082 4048                        l8074 3FF0  
                      l8066 3E64                        l8058 3E3C                        l8410 2B6C  
                      l8402 2B26                        l6804 4856                        l6812 486C  
                      l6820 4940                        l6492 4FE2                        l6628 29CE  
                      l6580 282C                        l6572 27E0                        l6564 27A8  
                      l6556 276A                        l6548 2746                        l6740 1DB6  
                      l6732 1D50                        l6724 1D1E                        l6716 1CB2  
                      l6708 1C44                        l6660 1AE2                        l6652 1AC0  
                      l6644 1A8E                        l6484 1A62                        l6476 1A4A  
                      l6468 1A12                        l6396 17F2                        l6388 17C0  
                      l7292 0962                        l7284 0926                        l7276 0878  
                      l7268 0856                        l7196 03E4                        l7188 033A  
                      l7380 3B60                        l7364 3ABC                        l7372 3B1C  
                      l7356 3A60                        l7348 3A04                        l7612 1056  
                      l7604 100A                        l7540 0DA4                        l7532 0D50  
                      l7524 0D04                        l7508 0C6E                        l7516 0C86  
                      l7460 39B0                        l7452 3968                        l7444 3906  
                      l7436 38BE                        l7428 384E                        l8148 35E0  
                      l7700 2632                        l8180 2D32                        l8172 2D2A  
                      l8164 2D0E                        l8156 2CEE                        l8332 2280  
                      l8324 2224                        l8316 21AC                        l8308 2160  
                      l8260 1F16                        l8252 1F0C                        l8244 1EFC  
                      l8236 1EF0                        l8228 1ECC                        l8092 409C  
                      l8084 4056                        l8076 3FF2                        l8420 2B98  
                      l8404 2B42                        l8340 29FC                        l7710 4890  
                      l6814 487C                        l6806 485E                        l6830 496C  
                      l6822 4944                        l6494 4FE6                        l6590 286C  
                      l6582 282E                        l6574 27F4                        l6566 27B8  
                      l6750 1E18                        l6742 1DC2                        l6734 1D5E  
                      l6726 1D2C                        l6718 1CE8                        l6670 1B22  
                      l6662 1AF0                        l6654 1AC6                        l6646 1A90  
                      l6478 1A4C                        l6398 1800                        l6910 4282  
                      l6902 422C                        l7294 0968                        l7286 0940  
                      l7278 0880                        l7198 0422                        l7366 3AC0  
                      l7358 3A7E                        l7390 4572                        l7382 4536  
                      l7606 1028                        l7614 106E                        l7518 0CAC  
                      l7470 0B4C                        l7462 39C0                        l7454 3986  
                      l7446 3912                        l7438 38C6                        l8190 2E1A  
                      l8182 2D4E                        l8174 2D2C                        l8166 2D10  
                      l8158 2D02                        l8326 223C                        l8318 21B2  
                      l8270 1F80                        l8262 1F22                        l8254 1F0E  
                      l8246 1EFE                        l8238 1EF4                        l8094 40A4  
                      l8086 406E                        l8078 4020                        l8422 2BA6  
                      l8414 2B74                        l8406 2B46                        l8350 2A08  
                      l8342 29FE                        l7632 51DC                        l7720 48DA  
                      l7712 48A2                        l6816 4884                        l6808 4860  
                      l6840 49A4                        l6832 4974                        l6824 4952  
                      l6488 4FC4                        l6592 2876                        l6584 283E  
                      l6576 2802                        l6568 27C8                        l6760 1E80  
                      l6752 1E2C                        l6744 1DD0                        l6736 1D8C  
                      l6728 1D3E                        l6680 1B6C                        l6672 1B28  
                      l6664 1AF2                        l6656 1AD6                        l6648 1AA0  
                      l6912 4284                        l6904 4244                        l7296 0970  
                      l7288 094E                        l6496 51B4                        l7376 3B48  
                      l7368 3AE2                        l7392 4578                        l7384 4544  
                      l7560 0E4A                        l7544 0DC0                        l7536 0D68  
                      l7528 0D20                        l7480 0B94                        l7472 0B70  
                      l7464 39CE                        l7456 3988                        l7448 394E  
                      l7624 5124                        l8192 2E82                        l8184 2D5E  
                      l8176 2D2E                        l8168 2D12                        l7640 4CF6  
                      l8280 1FE6                        l8272 1F90                        l8264 1F48  
                      l8256 1F12                        l8248 1F02                        l8096 40B4  
                      l8440 2C3A                        l8432 2BD2                        l8416 2B90  
                      l8408 2B50                        l8360 2A12                        l8352 2A0A  
                      l8344 2A00                        l8336 29E2                        l7730 491C  
                      l7722 48E6                        l7714 48AE                        l6850 49DE  
                      l6842 49BA                        l6834 4986                        l6826 495A  
                      l6594 2884                        l6586 2850                        l6578 280E  
                      l6762 1E82                        l6754 1E46                        l6746 1DFA  
                      l6690 1BBC                        l6682 1B78                        l6674 1B48  
                      l6666 1B02                        l6658 1ADC                        l6770 4F36  
                      l6914 4294                        l7298 0980                        l6498 51D0  
                      l7378 3B5C                        l7394 459E                        l7386 4560  
                      l7570 0EE4                        l7562 0E56                        l7554 0E0C  
                      l7546 0DD6                        l7538 0D88                        l7482 0B96  
                      l7490 0BCC                        l7474 0B7C                        l7618 1080  
                      l7650 4F2A                        l7466 39D0                        l7458 398C  
                      l7626 5144                        l8194 2EA6                        l8186 2DAE  
                      l8178 2D30                        l7642 4D00                        l7634 4CC8  
                      l8282 1FEE                        l8290 2006                        l8274 1FAE  
                      l8266 1F66                        l8258 1F16                        l8098 40BA  
                      l8442 2C54                        l8434 2BEE                        l8426 2BAE  
                      l8370 2A1C                        l8362 2A14                        l8354 2A0C  
                      l8346 2A02                        l8338 29FA                        l7732 491E  
                      l7716 48BE                        l7708 4890                        l6780 47DC  
                      l6852 49E6                        l6844 49C2                        l6836 498E  
                      l6828 495E                        l6588 2866                        l6596 2896  
                      l6860 4ADC                        l6756 1E62                        l6764 1E88  
                      l6748 1DFE                        l6692 1BC8                        l6684 1B82  
                      l6676 1B58                        l6668 1B12                        l6772 4F48  
                      l6940 4312                        l6924 42BE                        l6916 4298  
                      l6908 4258                        l7396 45A4                        l7388 4568  
                      l7580 0F2E                        l7564 0E5E                        l7548 0DF4  
                      l7556 0E24                        l7492 0BDC                        l7484 0BA6  
                      l7476 0B88                        l7644 4EEC                        l7740 500A  
                      l7628 5146                        l7812 13E0                        l8196 2F0E  
                      l8188 2DC0                        l7900 4DAC                        l7636 4CD8  
                      l8284 1FF6                        l8292 202E                        l8276 1FCC  
                      l8268 1F78                        l8460 2CE2                        l8436 2C06  
                      l8428 2BCA                        l8380 2A2E                        l8372 2A1E  
                      l8364 2A16                        l8356 2A0E                        l8348 2A06  
                      l7734 50EE                        l7718 48C8                        l6790 4802  
                      l6782 47E4                        l6846 49C8                        l6838 4996  
                      l6598 28A4                        l6862 4B0A                        l6766 1E8C  
                      l6758 1E72                        l6694 1BD4                        l6686 1B98  
                      l6942 4322                        l6934 42E6                        l6926 42C8  
                      l6918 42A6                        l6950 4C00                        l7398 45AA  
                      l7582 0F3C                        l7566 0E80                        l7574 0EF6  
                      l7558 0E28                        l7494 0BF0                        l7478 0B8C  
                      l7646 4EF8                        l7742 5018                        l7670 22DC  
                      l7662 2286                        l7654 2FD6                        l7830 14BE  
                      l7814 13F0                        l7806 13A8                        l7822 1484  
                      l7750 10CE                        l7910 4DDE                        l7902 4DB4  
                      l7638 4CE6                        l8294 20B0                        l8286 1FFE  
                      l8278 1FDE                        l8446 2C5C                        l8438 2C2C  
                      l8454 2C80                        l8390 2A9C                        l8382 2A3C  
                      l8374 2A20                        l8366 2A18                        l8358 2A10  
                      l7736 5100                        l7728 48EA                        l6792 480A  
                      l6784 47E8                        l6776 47CA                        l6848 49CE  
                      l6864 4B1A                        l6856 4A9E                        l6880 43B0  
                      l6872 4334                        l6696 1BE2                        l6688 1BA4  
                      l6936 42F2                        l6928 42D2                        l6960 4C3A  
                      l6952 4C08                        l7584 0F4E                        l7592 0F66  
                      l7576 0F06                        l7568 0EB2                        l7496 0BFE  
                      l7488 0BAE                        l7648 4F0E                        l7744 501A  
                      l7680 244A                        l7672 2300                        l7664 22A6  
                      l7832 14E2                        l7824 149A                        l7816 1428  
                      l7752 10D0                        l7912 4DE2                        l7904 4DB8  
                      l8296 20B4                        l8456 2CC2                        l8448 2C78  
                      l8392 2AB4                        l8384 2A4A                        l8376 2A24  
                      l8368 2A1A                        l7930 4650                        l7922 4626  
                      l7738 5112                        l6794 481C                        l6786 47F6  
                      l6778 47CE                        l6866 4B3E                        l6858 4ACC  
                      l6890 4434                        l6882 43BE                        l6874 4362  
                      l6698 1BEE                        l6938 4302                        l6962 4C42  
                      l6954 4C10                        l6946 4BE6                        l6970 4D44  
                      l7586 0F56                        l7594 0F84                        l7498 0C08  
                      l7850 5200                        l7658 3630                        l7690 24D8  
                      l7682 245A                        l7674 236C                        l7666 22BC  
                      l7842 1556                        l7834 1506                        l7826 14AA  
                      l7818 145C                        l7770 11C0                        l7754 10EE  
                      l7762 1140                        l7746 10A8                        l7914 4DE4  
                      l7906 4DBA                        l8298 20E2                        l8458 2CD4  
                      l8394 2AC2                        l8386 2A62                        l8378 2A2A  
                      l7932 4662                        l7924 4634                        l6796 4824  
                      l6788 47FE                        l6868 4B44                        l6884 43D0  
                      l6876 4372                        l6964 4C44                        l6956 4C1E  
                      l6948 4BEE                        l6980 4D80                        l6972 4D4C  
                      l7596 0FA4                        l7588 0F5E                        l7860 4F94  
                      l7940 4122                        l7852 5204                        l7692 2544  
                      l7684 248C                        l7676 2392                        l7668 22BE  
                      l7764 115E                        l7756 1104                        l7748 10B8  
                      l7916 4DE8                        l7908 4DC8                        l8396 2AEE  
                      l8388 2A70                        l7934 46E0                        l7926 4640  
                      l6798 482C                        l6990 4B78                        l6886 43DE  
                      l6878 43A0                        l6894 5046                        l6966 4C4A  
                      l6958 4C24                        l6982 4D86                        l6974 4D54  
                      l7598 0FCC                        l7862 4F9C                        l7942 4138  
                      l7694 256A                        l7678 23EA                        l7838 152E  
                      l7766 117C                        l7782 1258                        l7758 1118  
                      l7918 4DEE                        l7870 5262                        l8398 2B06  
                      l7936 46F0                        l7928 4642                        l6992 4B8C  
                      l6984 4B48                        l6888 442E                        l6896 505E  
                      l6976 4D62                        l6968 4D32                        l7864 4FB2  
                      l7856 4F7E                        l7960 4226                        l7944 414A  
                      l7952 4168                        l7696 25C2                        l7688 24B4  
                      l7848 1592                        l7784 1268                        l7768 118C  
                      l7776 11FC                        l7792 1324                        l7872 5254  
                      l7880 50B8                        l6994 4BA0                        l6986 4B56  
                      l6898 506E                        l6978 4D78                        l7858 4F8C  
                      l7946 4150                        l7954 4188                        l7938 411E  
                      l7698 261A                        l7794 1342                        l7786 12B4  
                      l7778 1230                        l7890 4C5A                        l7874 5246  
                      l7970 3E9C                        l7882 50C4                        l6996 4BA4  
                      l6988 4B6A                        l7956 420A                        l7948 4162  
                      l7796 1360                        l7788 12FC                        l7892 4C98  
                      l7868 5270                        l7876 5238                        l7980 3ECA  
                      l7972 3E9E                        l7964 3E68                        l7884 50C8  
                      l6998 4BD0                        l7958 4218                        l7798 1370  
                      l7878 527E                        l7990 3F4E                        l7982 3EEC  
                      l7974 3EA6                        l7966 3E92                        l7886 50E0  
                      l7896 4D98                        l7992 3F52                        l7976 3EB0  
                      l7968 3E9A                        l7898 4D9C                        l7994 3F6E  
                      l7978 3EB8                        l7996 3F86                        l7988 3EF4  
                      l7998 3FA6                        STR_1 FF37                        STR_2 FEBD  
                      STR_3 FF15                        STR_4 FF8C                        STR_5 FF59  
                      STR_6 FEBD                        STR_7 FF7B                        STR_8 FF6A  
                      STR_9 FF9D                        u7000 4712                        u7001 470E  
                      u7010 4724                        u7011 4720                        _PEIE 7F96  
                      u7020 474C                        u7100 166A                        u7021 4748  
                      u7101 1666                        u7030 4782                        u7110 16A6  
                      u7031 477E                        u7111 16A2                        u8000 4B3E  
                      u7200 17C0                        u7120 16B4                        u7040 15CE  
                      u8001 4B3A                        u7201 17BC                        u7121 16B0  
                      u7041 15CA                        u8010 4362                        u7210 17F2  
                      u7130 1722                        u7050 15E0                        u8011 435E  
                      u7211 17EE                        u7131 171E                        u7051 15DC  
                      u8020 43A0                        u7300 193A                        u7220 1800  
                      u7140 173A                        u7060 15F0                        u8100 42BA  
                      u8021 439C                        u7301 1936                        u7221 17FC  
                      u7141 1734                        u7061 15EC                        u8101 42B6  
                      u8030 43BE                        u7310 194A                        u7230 181E  
                      u7150 173C                        u7070 1632                        u8110 42E2  
                      u8031 43BA                        u7311 1946                        u7231 181A  
                      u7071 162E                        u8111 42DE                        u8200 4B56  
                      u8040 43DE                        u7400 1A32                        u7320 195C  
                      u7240 1856                        u7160 1764                        u7080 1648  
                      u8120 4302                        u9000 4604                        u8201 4B52  
                      u8041 43DA                        u7401 1A2E                        u7321 1958  
                      u7241 1852                        u7161 1760                        u7081 1644  
                      u8121 42FE                        u9001 4600                        u8210 4B78  
                      u8050 442E                        u7410 1A44                        u7330 1972  
                      u7250 189C                        u7170 1782                        u7090 165A  
                      u8130 4312                        u9010 4A1A                        u8211 4B74  
                      u8051 442A                        u7411 1A40                        u7331 196E  
                      u7251 1898                        u7171 177E                        u7091 1656  
                      u8131 430E                        u9011 4A16                        u8220 4BC2  
                      u7500 272A                        u8060 505E                        u7420 1A60  
                      u7340 1988                        u7260 18D2                        u7180 17A2  
                      u8300 4522                        u9020 4A94                        u8140 4C00  
                      u9100 3986                        u8221 4BBE                        u7501 2726  
                      u8061 505A                        u7421 1A5C                        u7341 1984  
                      u7261 18CE                        u7181 179E                        u8301 451C  
                      u9021 4A90                        u8141 4BFC                        u9101 3982  
                      u7430 5006                        u8230 4BD0                        u7510 276A  
                      u7350 199C                        u7270 18E2                        u7190 17B0  
                      u8070 4244                        u8310 4524                        u8150 4C1E  
                      u9110 39C0                        u9030 3840                        u7431 5002  
                      u8231 4BCC                        u7511 2766                        u7351 1998  
                      u7271 18DE                        u7191 17AC                        u8071 4240  
                      u8151 4C1A                        u9111 39BC                        u9031 383C  
                      u8240 5166                        u7600 28E4                        u7520 27E0  
                      u7440 2662                        u7360 19B6                        u7280 190E  
                      u8080 4278                        u8400 3350                        u8320 50B6  
                      u8160 4C3A                        u9200 0E4A                        u9120 39CE  
                      u9040 384E                        u8241 5162                        u7601 28E0  
                      u7521 27DC                        u7441 265E                        u7361 19B2  
                      u7281 190A                        u8401 334C                        u8321 50B2  
                      u8161 4C36                        u9201 0E46                        u9121 39CA  
                      u9041 384A                        u7610 28FA                        u7530 2802  
                      u7450 2674                        u7370 19F0                        u7290 191E  
                      u8090 42A6                        u8250 4478                        u8410 33A4  
                      u8330 4E00                        u8170 4D44                        u9210 0E80  
                      u9130 0B70                        u9050 38AA                        u7611 28F6  
                      u7531 27FE                        u7451 2670                        u7371 19EC  
                      u7291 191A                        u8091 42A2                        u8331 4DFC  
                      u8171 4D40                        u9211 0E7C                        u9131 0B6C  
                      u9051 38A6                        u8500 3C88                        u7620 290E  
                      u7540 282C                        u7460 2684                        u7700 1AF0  
                      u7380 1A02                        u8260 4496                        u8420 33C0  
                      u8340 3250                        u8180 4D62                        u9220 0EB2  
                      u9140 0BDC                        u9300 4F2A                        u9060 3900  
                      u8501 3C84                        u7621 290A                        u7541 2828  
                      u7461 2680                        u7701 1AEC                        u7381 19FE  
                      u8085 426E                        u8261 4492                        u8421 33BC  
                      u8181 4D5E                        u9221 0EAE                        u9141 0BD8  
                      u9301 4F26                        u9061 38FC                        u8510 3C9A  
                      u7630 2928                        u7550 2850                        u7470 26C8  
                      u7710 1B02                        u7390 1A12                        u8270 44BE  
                      u8430 33FC                        u8350 3280                        u8190 4D78  
                      u9230 0EE4                        u9150 0BFE                        u9070 394A  
                      u9310 22B8                        u8511 3C96                        u7631 2924  
                      u7551 284C                        u7471 26C4                        u7711 1AFE  
                      u7391 1A0E                        u8271 44BA                        u8255 446E  
                      u8431 33F8                        u8415 339A                        u8351 327C  
                      u8191 4D74                        u9231 0EE0                        u9151 0BFA  
                      u9071 3946                        u9311 22B2                        u9400 492E  
                      u8520 3CB4                        u7640 2970                        u7560 2866  
                      u7480 26DA                        u7800 1DA2                        u7720 1B12  
                      u8280 44E8                        u8360 32A2                        u8440 4EEA  
                      u8600 02AC                        u9240 0F06                        u9160 0C2C  
                      u9080 3968                        u9320 22BA                        u9401 492A  
                      u8521 3CB0                        u7641 296C                        u7561 2862  
                      u7481 26D6                        u7801 1D9E                        u7721 1B0E  
                      u8281 44E4                        u8361 329E                        u8345 3246  
                      u8441 4EE6                        u8601 02A8                        u9241 0F02  
                      u9161 0C28                        u9081 3964                        u9410 493E  
                      u8530 3CC4                        u8450 3B90                        u7650 29A0  
                      u7570 2884                        u7490 26EA                        u7810 1DB6  
                      u7730 1B48                        u8610 0326                        u9250 0FA0  
                      u9170 0CC8                        u9090 3978                        u9330 22DC  
                      u9411 493A                        u8531 3CC0                        u8451 3B8A  
                      u7651 299C                        u7571 2880                        u7491 26E6  
                      u7811 1DB2                        u7731 1B44                        u8611 0322  
                      u9251 0F9C                        u9171 0CC4                        u9091 3974  
                      u9331 22D8                        u9260 51EE                        u9420 50FE  
                      u7900 4856                        u8460 3B92                        u7660 29CE  
                      u7580 28A4                        u7820 1DD0                        u7740 1B58  
                      u8380 3310                        u8700 0568                        u8620 03B2  
                      u8540 0176                        u9180 0CE4                        u9340 245A  
                      u9500 115E                        u9261 51EA                        u9421 50FA  
                      u7901 4852                        u7661 29CA                        u7581 28A0  
                      u7821 1DCC                        u7741 1B54                        u8381 330C  
                      u8701 0564                        u8621 03AE                        u8541 0172  
                      u9181 0CE0                        u9341 2456                        u9501 115A  
                      u9270 51FC                        u9430 5122                        u7910 487C  
                      u8470 3BA2                        u7590 28B6                        u7830 1E18  
                      u7750 1CD2                        u7670 1A8E                        u8390 3334  
                      u8710 06B0                        u8630 03E4                        u8550 01C0  
                      u9190 0D84                        u9350 2642                        u9510 117C  
                      u9271 51F8                        u9431 511E                        u7911 4878  
                      u8471 3B9E                        u7591 28B2                        u7831 1E14  
                      u7671 1A8A                        u8295 44FA                        u8375 32B6  
                      u8711 06AC                        u8631 03E0                        u8551 01BC  
                      u9191 0D80                        u9351 263E                        u9511 1178  
                      u9360 48A0                        u7920 4952                        u8480 3BCE  
                      u7840 1E46                        u7760 1D2C                        u7680 1AA0  
                      u8376 32C0                        u8800 09A2                        u8720 0716  
                      u8640 0422                        u8560 01D0                        u9440 502C  
                      u9520 118C                        u9280 4CE6                        u9361 489C  
                      u7921 494E                        u8481 3BCA                        u7841 1E42  
                      u7761 1D28                        u7681 1A9C                        u8377 32D0  
                      u8801 099E                        u8721 0712                        u8641 041E  
                      u8561 01CC                        u9441 5028                        u9521 1188  
                      u9281 4CE2                        u9370 48BE                        u7930 496C  
                      u8490 3BE4                        u7850 1E80                        u7770 1D4C  
                      u7690 1AB0                        u8810 0A74                        u8730 075E  
                      u8650 04AE                        u8570 020E                        u9450 5040  
                      u9530 1268                        u9290 4D20                        u9371 48BA  
                      u7931 4968                        u8491 3BE0                        u7851 1E7C  
                      u7771 1D48                        u7755 1CC8                        u7691 1AAC  
                      u8395 332A                        u8811 0A70                        u8731 075A  
                      u8651 04AA                        u8571 020A                        u9451 503C  
                      u9531 1264                        u9291 4D1C                        u9700 4660  
                      u9380 48DA                        u7860 47DC                        u7940 4986  
                      u7780 1D5E                        u8820 0A90                        u8740 076E  
                      u8660 04E4                        u8580 0220                        u8900 3A7E  
                      u9540 1342                        u9460 10CA                        u9701 465C  
                      u9381 48D6                        u7861 47D8                        u7941 4982  
                      u7781 1D5A                        u8821 0A8C                        u8741 076A  
                      u8661 04E0                        u8581 021C                        u8901 3A7A  
                      u9541 133E                        u9461 10C4                        u9605 526A  
                      u9710 46F0                        u9390 4918                        u7870 47F6  
                      u7950 49A4                        u6990 5230                        u7790 1D8C  
                      u8830 0AF6                        u8750 0808                        u8670 04FA  
                      u8590 029A                        u8910 3AA4                        u9550 1360  
                      u9470 10CC                        u9606 526C                        u9711 46EC  
                      u7871 47F2                        u7951 49A0                        u6991 522C  
                      u7791 1D88                        u8831 0AF0                        u8751 0804  
                      u8671 04F6                        u8591 0296                        u8911 3AA0  
                      u9551 135C                        u9615 525C                        u7880 481C  
                      u7960 49BA                        u8840 0AF8                        u8760 0856  
                      u8680 0530                        u8920 3ADE                        u9560 1370  
                      u9480 10EE                        u9616 525E                        u9800 3F4C  
                      u7881 4818                        u7961 49B6                        u8761 0852  
                      u8681 052C                        u8921 3ADA                        u9721 412C  
                      u9561 136C                        u9481 10EA                        u9625 524E  
                      u7890 483A                        u7970 49DE                        u8850 0B0C  
                      u8770 0906                        u8690 053E                        u8930 3B04  
                      u9730 414A                        u9570 13F0                        u9490 1104  
                      u9626 5250                        u9810 3F6E                        u9650 50E0  
                      u7891 4836                        u7971 49DA                        u8851 0B08  
                      u8771 0902                        u8691 053A                        u9731 4146  
                      u9571 13EC                        u9491 1100                        u9635 5240  
                      u9811 3F6A                        u9651 50DC                        u7980 4ACC  
                      u8780 0940                        u8940 3B36                        u8860 39FC  
                      u9740 4162                        u9580 149A                        u9660 4CB8  
                      u9636 5242                        u9820 3FA6                        u9900 3E54  
                      u9397 490E                        u7981 4AC8                        u8781 093C  
                      u8941 3B32                        u8861 39F8                        u9741 415E  
                      u9581 1496                        u9645 5286                        u9821 3FA2  
                      u9901 3E50                        u7990 4B0A                        u8790 094E  
                      u8950 3B44                        u8870 3A42                        u9670 4DAC  
                      u9646 5288                        u9830 3FBC                        u9910 4002  
                      u7991 4B06                        u8791 094A                        u8951 3B40  
                      u9671 4DA8                        u9831 3FB8                        u9751 3EC2  
                      u9911 3FFE                        u8960 3B7E                        u8880 3A52  
                      u9680 4DC8                        u9920 4056                        u9840 3D3C  
                      u8961 3B7A                        u8937 3AFA                        u8881 3A4E  
                      u9681 4DC4                        u9665 4CAE                        u9761 3ED4  
                      u9921 4052                        u9841 3D38                        u8890 3A60  
                      u8970 4544                        u9690 4DDE                        u9930 407C  
                      u9850 3DA0                        u8891 3A5C                        u8971 4540  
                      u9691 4DDA                        u9595 5278                        u9931 4078  
                      u9851 3D9C                        u8980 45D8                        u9596 527A  
                      u9940 408A                        u9860 3DFA                        u8877 3A38  
                      u8981 45D4                        u9941 4086                        u9861 3DF6  
                      u8990 45EA                        u9790 3F4A                        u9950 409C  
                      u9870 3E08                        u8991 45E6                        u9791 3F44  
                      u9951 4098                        u9871 3E04                        u9784 3F34  
                      u9960 40B4                        u9880 3E2E                        u9785 3F30  
                      u9961 40B0                        u9881 3E2A                        _TMR1 0FCE  
                      u9778 3F06                        u9970 40C8                        u9890 3E3C  
                      u9779 3F4E                        u9971 40C4                        u9891 3E38  
                      u9980 40EE                        u9981 40EA                        u9990 40FC  
                      u9991 40F8                        abs@a 000C                        _dbuf 0127  
                      _half FE97                        _labs 4DF2                        _main 29E2  
                      _dtoa 3B80                        _rand 4C5A                        _seed 0197  
                      _prec 0057                        _sinf 10A8                        pad@i 001E  
                      pad@p 001B                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 39E2                        btemp 005A  
                      _utoa 4536               ___fpclassifyf 4438                        prodh 0FF4  
                      prodl 0FF3                        start 014E             ___fldiv@new_exp 003E  
              ___param_bank 0000                       ??_ISR 0001              _LCD_ShowString 488E  
                     ??_abs 000E                       ??_pad 001D            __end_of_LCD_Init 4700  
          __end_of_LCD_Send 5200               ___fltol@sign1 0052                       ?_labs 0006  
           __end_of___fladd 1A74                       ?_main 0001                       ?_dtoa 0020  
           __end_of___fldiv 29E2                       ?_rand 0012             __end_of___awdiv 488E  
           __end_of___cosdf 382E             __end_of___lbdiv 4DF2             __end_of___flneg 5080  
                     STR_10 FF48                       STR_11 FEBD                       STR_12 FF26  
                     STR_20 FFF7                       STR_13 FFAE                       STR_21 FFF3  
                     STR_14 FEBD                       STR_30 FEF3                       STR_22 FFD7  
                     STR_15 FEBD                       STR_31 FEBB                       STR_23 FFC6  
                     STR_16 FFE6                       STR_40 FFBF                       STR_32 FEE1  
                     STR_24 FFD6                       STR_25 FFCC                       STR_33 FF04  
                     STR_17 FFDC                       STR_26 FFCD                       STR_34 FFEB  
                     STR_18 FFE1                       STR_27 FECE                       STR_19 FFFB  
                     STR_28 FFD2             __end_of___awmod 49F0                       STR_37 FFEF  
                     STR_29 FEBB                       ?_sinf 00A4             __end_of___flmul 1E9E  
           __end_of___flsub 4F7E             __end_of___fltol 4334                       ?_stoa 0010  
                     u10000 4110                       u10001 410C                       u10011 343E  
                     u10020 3466                       u10100 2F48                       u10021 3462  
                     u10101 2F44                       u10030 3506                       u10110 2F6A  
                     u10031 3502                       u10111 2F66                       ?_utoa 0020  
                     u10040 35E0                       u10120 2F7E                       u10200 2112  
                     u10041 35DC                       u10121 2F7A                       u10201 210E  
                     u10050 3606                       u10130 2F92                       u10210 2224  
                     u10051 3602                       u10131 2F8E                       u10211 2220  
                     u10060 3614                       u10140 2FA6                       u10220 224A  
                     u10300 2AE0                       u10061 3610                       u10141 2FA2  
                     u10221 2246                       u10301 2ADC                       u10070 362C  
                     u10150 2FD4                       u10230 2258                       u10310 2AEE  
                     u10071 3628                       u10151 2FD0                       u10231 2254  
                     u10311 2AEA                       u10080 2D5E                       u10240 2270  
                     u10320 2B14                       u10081 2D5A                       u10241 226C  
                     u10161 1EE4                       u10321 2B10                       u10090 2DC0  
                     u10330 2B22                       u10250 2A4A                       u10091 2DBC  
                     u10171 1F1C                       u10331 2B1E                       u10251 2A46  
                     u10180 1F90                       u10340 2CD4                       u10260 2A70  
                     u10181 1F8C                       u10341 2CD0                       u10261 2A6C  
                     u10190 20E2                       u10270 2A8E                       u10191 20DE  
                     u10407 2C20                       u10271 2A8A                       u10280 2A9C  
                     u10417 2C46                       u10281 2A98                       u10290 2AC2  
                     u10507 4648                       u10427 3E14                       u10291 2ABE  
           ___awdiv@divisor 001A                       u10517 46F6                       u10437 4060  
                     u10357 29EE                       u10447 40D2                       u10367 2A56  
                     u10457 3F78                       u10377 2AA8                       u10467 21BE  
                     u10387 2AFA                       u10477 2230                       u10397 2BFA  
                     u10487 2FB8                       u10497 35EC                       _RC1IE 7CED  
                     _RC1IF 7CF5             __end_of___lwdiv 4C5A             __end_of___sindf 3208  
           __end_of___lwmod 4D96                       i2l412 0088                       i2l414 0074  
                     i2l423 0142                ___sindf$4532 0070             ___awdiv@counter 001C  
              ___sindf$4533 0074                ___sindf$4534 0078                vfpfcnvrt@fmt 00BB  
                     _TX1IF 7CF4         ___lmul@multiplicand 000A             __end_of_pio2_1t FE8F  
                     _fabsf 5124                       _flags 0059                       _gmail 0177  
       read_prec_or_width@c 000E         read_prec_or_width@n 000F                       _fputc 4700  
                     _fputs 4FC4                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FE97                       _putch 5220  
                     dtoa@d 0022                       dtoa@i 002B                       dtoa@p 0028  
                     dtoa@s 002A                       dtoa@w 0026        __end_of_LED1_Control 527C  
           __end_of_runGAME 2286             __end_of_runGPIO 3FD4                       pclath 0FFA  
                     tablat 0FF5             __end_of_runUART 3E68        __end_of_LED2_Control 526E  
                     sinf@n 00B0                       sinf@x 00A4                       sinf@y 00B6  
                     plusw1 0FE3                       plusw2 0FDB                       stoa@l 001C  
                     stoa@p 0016                       stoa@s 0012                       stoa@w 0018  
                     ttemp5 005B                       ttemp6 005E                       ttemp7 0062  
                     utoa@d 0022        __end_of_LED3_Control 5260                       utoa@i 0028  
                     utoa@p 0026                       utoa@w 0024                       status 0FD8  
                     wtemp8 005B             __end_of_sprintf 4FC4              ?___fpclassifyf 0006  
           ___lbdiv@divisor 0006        __end_of_LED4_Control 5252             ___lbdiv@counter 0008  
      __end_of_LED5_Control 5244             runUART@reversed 00D4        __end_of_LED6_Control 528A  
           __initialization 4E48      __end_of_LCD_ShowString 4940                __end_of_half FE9B  
              __end_of_labs 4E48                __end_of_main 2CEE                __end_of_dtoa 3CFC  
              __end_of_rand 4CC8                __end_of_sinf 15B2                __end_of_stoa 3B80  
              __end_of_utoa 4626                LCD_Send@data 0006                      ??_labs 000A  
                    ??_main 00FA                      ??_dtoa 0024                      ??_rand 0014  
                    ??_sinf 0054                      ??_stoa 0014                      ??_utoa 0024  
         __end_of_LCD_Clear 5124               __activetblptr 0002  __end_of_read_prec_or_width 4A9E  
              ?_moveDisplay 00E7                      ?_fabsf 0006                      ?_fputc 0007  
                    ?_fputs 0010                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    _CCPR1L 0FBE            ___awdiv@dividend 0018                      _GAMEIE 0124  
                    ?_putch 0001                      _GODONE 7E11                      _GPIOIE 0126  
                    i2l6220 0020                      i2l6222 002E                      i2l6240 00AE  
                    i2l6232 0082                      i2l6224 0040                      i2l6250 00DA  
                    i2l6242 00C0                      i2l6234 0090                      i2l6226 004E  
                    i2l6218 0012                      i2l6260 0120                      i2l6252 00E8  
                    i2l6244 00C2                      i2l6228 0066                      i2l6236 0092  
                    i2l6262 0128                      i2l6254 00FA                      i2l6246 00CA  
                    i2l6238 00A0                      i2l6264 012C                      i2l6256 00FE  
                    i2l6248 00CC                      i2l6266 013A                      i2l6258 0110  
                    _RCREG1 0FAE               ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C  
             ___rem_pio2f@x 0084               ___rem_pio2f@y 0088               vfpfcnvrt@done 00BF  
                    _UARTIE 0125                      _SPBRG1 0FAF                      _TMR1IE 7CE8  
                    _TMR1IF 7CF0                      _TMR2IE 7CE9                      _TMR2IF 7CF1  
                    _TMR1ON 7E68                      _TMR2ON 7DD2                      _SSP1IF 7CF3  
                    _SSP2IF 7D27                      _TXREG1 0FAD            __end_of___xxtofl 39E2  
              _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC             ?_LCD_ShowString 0007  
                    _s1pio2 FEB7                      _s2pio2 FEB3                      _s3pio2 FEAF  
                    _s4pio2 FEAB                      ___flge 4334                      ___fleq 4A9E  
                    ___lmul 4CC8                   ??___fladd 004E                      ___wmul 51B4  
                 ??___fldiv 0035                   ??___awdiv 001C                   ??___cosdf 0052  
                 ??___lbdiv 0007                   ??___flneg 0052                   ??___awmod 000A  
                 ??___flmul 001C                   ??___flsub 0052                   ??___fltol 0068  
          runUART@keepState 00F3                      _efgtoa 0152                   ??___lwdiv 000A  
                 ??___sindf 0052                   ??___lwmod 000A                      _pio2_1 FE8F  
                    _floorf 3208                      fabsf@u 000A                      fabsf@x 0006  
                    _memcpy 4E9C        read_prec_or_width@ap 000D                      clear_0 4E6E  
                    clear_1 4E7A            ___awdiv@quotient 001E                      _runADC 341E  
                    _runDAC 2CEE             ___awmod@divisor 0008                      isa$std 0001  
                    _runPWM 3FD4        runGAME@keepStateGAME 01BE             ___awmod@counter 000A  
                    _printf 5200                      pad@buf 0019                      dtoa@fp 0020  
                    _strcpy 5080                      _strlen 50B8                      fputc@c 0007  
                    fputs@c 0014                      fputs@i 0015                      fputs@s 0010  
          __end_of_runMUSIC 528C             ___fpclassifyf@e 000E             ___fpclassifyf@u 0010  
           ___fpclassifyf@x 0006                __mediumconst FE7A                   ??_runGAME 00E7  
                    sinf@ux 00BA                   ??_runGPIO 0007                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 5046  
                 ??_runUART 00D2                      stoa@cp 001A                      stoa@fp 0010  
          __end_of_vfprintf 4F36                      utoa@fp 0020                   ??_sprintf 0054  
          ___lbdiv@dividend 0007                  ___flge@ff1 002D                  ___flge@ff2 0031  
           ??___fpclassifyf 000A                ___xxtofl@arg 0010                ___xxtofl@exp 000F  
              ___xxtofl@val 0006                  ___fleq@ff1 0006                  ___fleq@ff2 000A  
                __accesstop 0060     __end_of__initialization 4E8E                   ?_LCD_Init 0001  
                 ?_LCD_Send 0001                  ___flneg@f1 0080               ___rparam_used 0001  
                ___fltol@f1 0064              __pcstackCOMRAM 0001           LED4_Control@state 0006  
              __pidataBANK1 518C               __end_of_fabsf 5158               __end_of_fputc 47CA  
             __end_of_fputs 5008               __end_of_putch 5236                  __end_of_C0 FEAB  
                __end_of_C1 FEA7                  __end_of_C2 FEA3                  __end_of_C3 FE9F  
                __end_of_S1 FE8B                  __end_of_S2 FE87                  __end_of_S3 FE83  
                __end_of_S4 FE7F            ___lbdiv@quotient 0009                     ??_fabsf 000A  
                   ??_fputc 000B                     ??_fputs 0014                     ??_putch 0006  
                __pbssBANK0 00FE                  __pbssBANK1 0100                  __pbssBANK2 0200  
                ??_LCD_Init 0007                  ??_LCD_Send 0006                 runADC@F6967 0100  
              SPI_write@LSB 0007                SPI_write@MSB 0006                     ISR@temp 0005  
                   ?___flge 002D                     ?___fleq 0006                     ?___lmul 0006  
                   ?___wmul 0006                     ?_efgtoa 0084               ??___rem_pio2f 0089  
                   ?_floorf 0046                _LED1_Control 526E                     ?_memcpy 0006  
            ___lmul@product 000E                     ?_runADC 0001                     ?_runDAC 0001  
              _LED2_Control 5260         runGAME@randomNumber 01C3                     ?_runPWM 0001  
                   ?_printf 00CE                     ?_strcpy 0006                     ?_strlen 0006  
              _LED3_Control 5252                _LED4_Control 5244                   ?___xxtofl 0006  
              _LED5_Control 5236              ___rem_pio2f@fn 0098              ___rem_pio2f@ty 008B  
            ___rem_pio2f@ux 0094                _LED6_Control 527C                     _SSP2ADD 0F6E  
                   _SSP1BUF 0FC9                     _SSP2BUF 0F6F                 runGAME@pot1 01C1  
               runGAME@text 019B           runGPIO@LEDControl 0015             LCD_ShowString@i 000C  
                   __Hparam 0000                     __Lparam 0000                   ?_runMUSIC 0001  
                   ___fladd 15B2                     ___fldiv 2648                     ___awdiv 47CA  
                   ___cosdf 3630                     ___lbdiv 4D96                     ___flneg 5046  
                   ___awmod 4940                     ___flmul 1A74                     ___flsub 4F36  
                   ___fltol 422C                     ___lwdiv 4BE6                     ___sindf 2FD6  
                   ___lwmod 4D32                   ?_vfprintf 00C7              main@setUpAgain 00FC  
                   __pcinit 4E48                     __ramtop 1000                     __ptext0 29E2  
                   __ptext1 3CFC                     __ptext2 50B8                     __ptext3 3FD4  
                   __ptext4 528A                     __ptext5 3E68                     __ptext6 5236  
                   __ptext7 5244                     __ptext8 5252                     __ptext9 5260  
                   _pio2_1t FE8B                   _T1CONbits 0FCD             runPWM@keepState 0022  
     read_prec_or_width@fmt 000C                  ??___xxtofl 000A         __end_of___rem_pio2f 2648  
          ___awmod@dividend 0006                     _invpio2 FE93                     _runGAME 1E9E  
                   _runGPIO 3E68                     efgtoa@c 008A                     efgtoa@d 0098  
                   efgtoa@e 009C                     efgtoa@f 0086                     efgtoa@g 00AF  
                   efgtoa@h 00A6                     efgtoa@i 00A4                     efgtoa@l 00AA  
                   efgtoa@m 009A                     efgtoa@n 00B3                     efgtoa@p 008F  
                   efgtoa@t 0091                     efgtoa@u 00B5                     efgtoa@w 009E  
                   _runUART 3CFC                   _LCD_Clear 50EE                     _sprintf 4F7E  
          ___rem_pio2f$4531 008F        end_of_initialization 4E8E                     floorf@e 0064  
                   floorf@m 0060                     floorf@u 0066                     floorf@x 0046  
                   memcpy@d 000D                     memcpy@n 000A                     memcpy@s 000F  
                   fputc@fp 0009            ___rem_pio2f@F526 0115               __Lmediumconst FE7A  
                   fputs@fp 0012            ??_LCD_ShowString 0009          _read_prec_or_width 49F0  
                 i2u1052_47 0058           LED1_Control@state 0006       LCD_ShowString@lineNum 000B  
          ___rem_pio2f@sign 0093          runGAME@GAMEdivider 01C0                  ??_runMUSIC 0006  
         __end_of_vfpfcnvrt 10A8                  efgtoa@mode 0096                  efgtoa@sign 00AE  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 000C  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 00C0                  ??_vfprintf 0054                     strcpy@d 000A  
                   strlen@a 0008                     strlen@s 0006                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0063               ___xxtofl@sign 000E  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95                  ?_LCD_Clear 0001        ??_read_prec_or_width 000E  
               ___fldiv@grs 0040                 ___fldiv@rem 0039                   _SPI_write 5008  
               ___flmul@grs 0022                 _CCP1CONbits 0FBD           LED5_Control@state 0006  
            __end_of_s1pio2 FEBB              __end_of_s2pio2 FEB7              __end_of_s3pio2 FEB3  
            __end_of_s4pio2 FEAF              __end_of___flge 4438              __end_of___fleq 4B48  
            __end_of___lmul 4D32                 vfpfcnvrt@ap 00BC                 vfpfcnvrt@cp 00C5  
               ___rem_pio2f 2286                 vfpfcnvrt@fp 00B9              __end_of___wmul 51DA  
            __end_of_efgtoa 0B4C              __end_of_pio2_1 FE93        moveDisplay@menuItem1 019B  
      moveDisplay@menuItem2 01AC              __end_of_floorf 341E        moveDisplay@menuItems 01BD  
            __end_of_memcpy 4EEC                  floorf@F521 0119              __end_of_runADC 3630  
            __end_of_runDAC 2FD6              __end_of_runPWM 411A              __end_of_printf 5220  
            __end_of_strcpy 50B8              __end_of_strlen 50EE         start_initialization 4E48  
               __end_of_ISR 014E                 __end_of_abs 518C                 __end_of_pad 4BE6  
                ?_SPI_write 0001       __end_of___fpclassifyf 4536             runADC@keepState 01B8  
               vfprintf@fmt 00C9                    ??___flge 0035                    ??___fleq 000E  
                  ??___lmul 000E                    ??___wmul 000A                    ??_efgtoa 008B  
               __pdataBANK1 01CE                    ??_floorf 004A                    ??_memcpy 000C  
                  ??_runADC 00E7                    ??_runDAC 00D2                    ??_runPWM 0020  
                  ??_printf 0054                    ??_strcpy 000A                    ??_strlen 0008  
          runGAME@GAMEround 01BF                   ___fladd@a 004A                   ___fladd@b 0046  
                 ___fldiv@a 0031                   ___fldiv@b 002D               runGPIO@states 0009  
                 ___cosdf@r 0068                   ___cosdf@w 0078                   ___cosdf@x 0064  
                 ___cosdf@z 007C                   ___flmul@a 0018                   ___flmul@b 0014  
               __pbssCOMRAM 0055                   ___flsub@a 0068                   ___flsub@b 0064  
             __pcstackBANK0 0060               __pcstackBANK1 019B                 ??_LCD_Clear 0007  
                 ___sindf@r 0068                   ___sindf@s 007C                   ___sindf@w 006C  
                 ___sindf@x 0064                   ___sindf@z 0080       runGPIO@numberOfStates 0021  
               _efgtoa$4068 0093            ___lwdiv@dividend 0006                   _dtoa$4037 0024  
             SPI_write@data 0008                   __pintcode 0008               __pmediumconst FE7A  
                  ?___fladd 0046                    ?___fldiv 002D                    ?___awdiv 0018  
                  ?___cosdf 0064                    ?___lbdiv 0006                    ?___flneg 0080  
                  ?___awmod 0006                    ?___flmul 0014                    ?___flsub 0064  
                  ?___fltol 0064                  runADC@pot1 01B4                  runADC@pot2 01B6  
                  ?___lwdiv 0006                    ?___sindf 0064                    ?___lwmod 0006  
                runADC@text 019B                   fabsf@F465 0111               ??_moveDisplay 00E8  
                  ?_runGAME 0001                    ?_runGPIO 0001                    ?_runUART 0001  
           runDAC@keepState 00DB            ___lwdiv@quotient 000B                    ?_sprintf 00CE  
                 _sinf$4243 00A8                   _sinf$4244 00AC                   _sinf$4527 00B2  
                  _GAMEtime 0123                 ??_SPI_write 0006              runDAC@DACindex 00DD  
                  _LCD_Init 4626                    _LCD_Send 51DA              ___wmul@product 000A  
                  _LATAbits 0F89                    _LATBbits 0F8A                    _LATCbits 0F8B  
                  _LATDbits 0F8C                runGAME@F6970 0200                runGAME@F6964 0211  
                runUART@len 00F4           LED2_Control@state 0006                    i2u690_40 0074  
                  i2u690_41 0070                    i2u691_40 0082                    i2u691_41 007E  
                  i2u692_40 00A0                    i2u692_41 009C                    i2u693_40 00AE  
                  i2u693_41 00AA                    i2u694_40 00C0                    i2u686_40 0020  
                  i2u694_41 00BC                    i2u686_41 001C                    i2u695_40 00DA  
                  i2u687_40 002E                    i2u695_41 00D6                    i2u687_41 002A  
                  i2u696_40 00E8                    i2u688_40 0040                    i2u696_41 00E4  
                  i2u688_41 003C                    i2u697_40 00FA                    i2u689_40 004E  
                  i2u697_41 00F6                    i2u689_41 004A                    i2u698_40 0110  
                  i2u698_41 010C                   _vfpfcnvrt 0B4C                  _ADCON0bits 0FC2  
                _ADCON2bits 0FC0           ___wmul@multiplier 0006                   main@menuI 00FD  
          moveDisplay@F6965 01CE                  vfpfcnvrt@c 00C4           ___lmul@multiplier 0006  
                 copy_data0 4E5C           runGAME@approxText 01AC         __end_of_moveDisplay 422C  
          moveDisplay@menuI 01CD            moveDisplay@where 00E7                runGPIO@F6975 01EA  
              runGPIO@F6993 01DE                runGPIO@GPIOi 0023                    __Hrparam 0000  
                 memcpy@tmp 000C                  vfprintf@ap 00CB                    __Lrparam 0000  
                vfprintf@fp 00C7             runGAME@GAMEpart 01BD           LED6_Control@state 0006  
              ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELCbits 0F3A  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 011D  
                sprintf@fmt 00D0                    ___xxtofl 382E             ___lwdiv@divisor 0008  
           ___lwdiv@counter 000A                    __ptext10 526E                    __ptext11 527C  
                  __ptext20 5124                    __ptext12 1E9E                    __ptext21 3630  
                  __ptext13 4C5A                    __ptext30 4536                    __ptext22 5200  
                  __ptext14 4CC8                    __ptext31 4D32                    __ptext23 5008  
                  __ptext15 4D96                    __ptext40 3208                    __ptext32 4BE6  
                  __ptext24 341E                    __ptext16 2CEE                    __ptext41 4438  
                  __ptext33 39E2                    __ptext25 382E                    __ptext17 10A8  
                  __ptext50 3B80                    __ptext42 422C                    __ptext34 49F0  
                  __ptext26 411A                    __ptext18 2FD6                    __ptext51 4B48  
                  __ptext43 4F36                    __ptext35 51B4                    __ptext27 4F7E  
                  __ptext19 2286                    __ptext60 4626                    __ptext52 4FC4  
                  __ptext44 15B2                    __ptext36 0152                    __ptext28 4EEC  
                  __ptext61 51DA                    __ptext53 4700                    __ptext45 5046  
                  __ptext37 5080                    __ptext29 0B4C                    __ptext54 5220  
                  __ptext46 1A74                    __ptext38 4E9C                    __ptext55 5158  
                  __ptext47 4334                    __ptext39 4DF2                    __ptext56 4940  
                  __ptext48 4A9E                    __ptext57 47CA                    __ptext49 2648  
                  __ptext58 488E                    __ptext59 50EE              runADC@voltage1 01AC  
            runADC@voltage2 01B0                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0006                    efgtoa@fp 0084  
                  efgtoa@ne 008D                    efgtoa@pp 0095                    efgtoa@ou 00A0  
                  _runMUSIC 528A                    isa$xinst 0000                    int$flags 005A  
               _runDAC$4524 00D3                 _runDAC$4525 00D7                    _vfprintf 4EEC  
             ?_LED1_Control 0001                   printf@fmt 00CE                _SSP1STATbits 0FC7  
             ?_LED2_Control 0001                _SSP2STATbits 0F6D               ?_LED3_Control 0001  
             ?_LED4_Control 0001                   putch@data 0006               ?_LED5_Control 0001  
                  memcpy@d1 0006               ?_LED6_Control 0001                    memcpy@s1 0008  
               _moveDisplay 411A                    intlevel2 0000                   sprintf@ap 00DA  
          ___lwmod@dividend 0006                   strcpy@src 0008                  _RCSTA1bits 0FAB  
                  sinf@sign 00B1                    runGPIO@j 0024                    runUART@i 00F6  
                  runUART@p 00F8                 efgtoa@nmode 0097                    printf@ap 0054  
            ??_LED1_Control 0006              ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD  
    LCD_ShowString@textData 0007              ??_LED3_Control 0006              ??_LED4_Control 0006  
                  sprintf@f 00DB                    sprintf@s 00CE              ??_LED5_Control 0006  
           ___lwmod@divisor 0008              ??_LED6_Control 0006             ___lwmod@counter 000A  
          runPWM@multiplier 0023               ___fladd@signs 0060                ___fladd@aexp 0061  
              ___fladd@bexp 0062                ___cosdf$4530 0074                ___cosdf$4528 006C  
              ___cosdf$4529 0070               _keepStateGPIO 00FE           LED3_Control@state 0006  
