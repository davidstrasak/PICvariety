

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 11:14:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Generated 12/10/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F46K22 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     
   108                           	psect	idataBANK1
   109   00474C                     __pidataBANK1:
   110                           	callstack 0
   111                           
   112                           ;initializer for moveDisplay@F6961
   113   00474C  DB                 	db	low STR_11
   114   00474D  FF                 	db	high STR_11
   115   00474E  E0                 	db	low STR_12
   116   00474F  FF                 	db	high STR_12
   117   004750  FA                 	db	low STR_13
   118   004751  FF                 	db	high STR_13
   119   004752  F6                 	db	low STR_14
   120   004753  FF                 	db	high STR_14
   121   004754  F2                 	db	low STR_15
   122   004755  FF                 	db	high STR_15
   123   004756  D6                 	db	low STR_16
   124   004757  FF                 	db	high STR_16
   125   004758  CA                 	db	low STR_17
   126   004759  FF                 	db	high STR_17
   127   00475A  3A                 	db	low (STR_22+16)
   128   00475B  FF                 	db	high (STR_22+16)
   129                           
   130                           ;initializer for runGPIO@F6991
   131   00475C  20                 	db	32
   132   00475D  30                 	db	48
   133   00475E  18                 	db	24
   134   00475F  0C                 	db	12
   135   004760  06                 	db	6
   136   004761  03                 	db	3
   137   004762  01                 	db	1
   138   004763  03                 	db	3
   139   004764  06                 	db	6
   140   004765  0C                 	db	12
   141   004766  18                 	db	24
   142   004767  30                 	db	48
   143                           
   144                           ;initializer for runGPIO@F6973
   145   004768  2E                 	db	low _LED1_Control
   146   004769  48                 	db	high _LED1_Control
   147   00476A  20                 	db	low _LED2_Control
   148   00476B  48                 	db	high _LED2_Control
   149   00476C  12                 	db	low _LED3_Control
   150   00476D  48                 	db	high _LED3_Control
   151   00476E  04                 	db	low _LED4_Control
   152   00476F  48                 	db	high _LED4_Control
   153   004770  F6                 	db	low _LED5_Control
   154   004771  47                 	db	high _LED5_Control
   155   004772  3C                 	db	low _LED6_Control
   156   004773  48                 	db	high _LED6_Control
   157                           
   158                           	psect	mediumconst
   159   00FED6                     __pmediumconst:
   160                           	callstack 0
   161   00FED6  00                 	db	0
   162   00FED7  6C3C               	dw	27708
   163   00FED9  3636               	dw	13878
   164   00FEDB                     __end_of_S4:
   165                           	callstack 0
   166   00FEDB  07CF               	dw	1999
   167   00FEDD  B950               	dw	47440
   168   00FEDF                     __end_of_S3:
   169                           	callstack 0
   170   00FEDF  8884               	dw	34948
   171   00FEE1  3C08               	dw	15368
   172   00FEE3                     __end_of_S2:
   173                           	callstack 0
   174   00FEE3  AAAB               	dw	43691
   175   00FEE5  BE2A               	dw	48682
   176   00FEE7                     __end_of_S1:
   177                           	callstack 0
   178   00FEE7  85A3               	dw	34211
   179   00FEE9  3288               	dw	12936
   180   00FEEB                     __end_of_pio2_1t:
   181                           	callstack 0
   182   00FEEB  0FDA               	dw	4058
   183   00FEED  3FC9               	dw	16329
   184   00FEEF                     __end_of_pio2_1:
   185                           	callstack 0
   186   00FEEF  F983               	dw	63875
   187   00FEF1  3F22               	dw	16162
   188   00FEF3                     __end_of_invpio2:
   189                           	callstack 0
   190   00FEF3  0000               	dw	0
   191   00FEF5  3F00               	dw	16128
   192   00FEF7                     __end_of_half:
   193                           	callstack 0
   194   00FEF7  9A17               	dw	39447
   195   00FEF9  37CC               	dw	14284
   196   00FEFB                     __end_of_C3:
   197                           	callstack 0
   198   00FEFB  043F               	dw	1087
   199   00FEFD  BAB6               	dw	47798
   200   00FEFF                     __end_of_C2:
   201                           	callstack 0
   202   00FEFF  AA9F               	dw	43679
   203   00FF01  3D2A               	dw	15658
   204   00FF03                     __end_of_C1:
   205                           	callstack 0
   206   00FF03  0000               	dw	0
   207   00FF05  BF00               	dw	48896
   208   00FF07                     __end_of_C0:
   209                           	callstack 0
   210   00FF07  0FDB               	dw	4059
   211   00FF09  40C9               	dw	16585
   212   00FF0B                     __end_of_s4pio2:
   213                           	callstack 0
   214   00FF0B  CBE4               	dw	52196
   215   00FF0D  4096               	dw	16534
   216   00FF0F                     __end_of_s3pio2:
   217                           	callstack 0
   218   00FF0F  0FDB               	dw	4059
   219   00FF11  4049               	dw	16457
   220   00FF13                     __end_of_s2pio2:
   221                           	callstack 0
   222   00FF13  0FDB               	dw	4059
   223   00FF15  3FC9               	dw	16329
   224   00FF17                     __end_of_s1pio2:
   225                           	callstack 0
   226   000000                     _ADRESL	set	4035
   227   000000                     _RCREG1	set	4014
   228   000000                     _ANSELCbits	set	3898
   229   000000                     _TXREG1	set	4013
   230   000000                     _ADRESH	set	4036
   231   000000                     _LATBbits	set	3978
   232   000000                     _TXSTA1bits	set	4012
   233   000000                     _ANSELBbits	set	3897
   234   000000                     _TRISBbits	set	3987
   235   000000                     _SSP2STATbits	set	3949
   236   000000                     _SSP2ADD	set	3950
   237   000000                     _ANSELDbits	set	3899
   238   000000                     _PORTAbits	set	3968
   239   000000                     _PORTCbits	set	3970
   240   000000                     _LATCbits	set	3979
   241   000000                     _LATDbits	set	3980
   242   000000                     _ANSELAbits	set	3896
   243   000000                     _TRISAbits	set	3986
   244   000000                     _TRISCbits	set	3988
   245   000000                     _ANSELC	set	3898
   246   000000                     _TRISD	set	3989
   247   000000                     _TMR2IE	set	31977
   248   000000                     _TMR2IF	set	31985
   249   000000                     _RC1IF	set	31989
   250   000000                     _RC1IE	set	31981
   251   000000                     _TMR1ON	set	32360
   252   000000                     _TMR1IF	set	31984
   253   000000                     _GIE	set	32663
   254   000000                     _TX1IF	set	31988
   255   000000                     _GODONE	set	32273
   256   000000                     _TRISDbits	set	3989
   257   000000                     _TMR1IE	set	31976
   258   000000                     _SSP1IF	set	31987
   259   000000                     _SSP2IF	set	32039
   260   000000                     _LATAbits	set	3977
   261   000000                     _CCPTMRS0bits	set	3913
   262   000000                     _ANSELEbits	set	3900
   263   000000                     _SSP2CON2bits	set	3947
   264   000000                     _SSP2CON1bits	set	3948
   265   000000                     _SSP2BUF	set	3951
   266   000000                     _RCSTA1bits	set	4011
   267   000000                     _SPBRG1	set	4015
   268   000000                     _ADCON2bits	set	4032
   269   000000                     _SSP1CON1bits	set	4038
   270   000000                     _SSP1BUF	set	4041
   271   000000                     _SSP1STATbits	set	4039
   272   000000                     _ADCON0bits	set	4034
   273   000000                     _PR2	set	4027
   274   000000                     _TMR2ON	set	32210
   275   000000                     _T1CONbits	set	4045
   276   000000                     _TMR1	set	4046
   277   000000                     _PEIE	set	32662
   278   000000                     _CCP1CONbits	set	4029
   279   000000                     _CCPR1L	set	4030
   280   00FF17                     STR_21:
   281   00FF17  50                 	db	80	;'P'
   282   00FF18  4F                 	db	79	;'O'
   283   00FF19  54                 	db	84	;'T'
   284   00FF1A  31                 	db	49	;'1'
   285   00FF1B  3A                 	db	58	;':'
   286   00FF1C  25                 	db	37
   287   00FF1D  2E                 	db	46
   288   00FF1E  31                 	db	49	;'1'
   289   00FF1F  66                 	db	102	;'f'
   290   00FF20  50                 	db	80	;'P'
   291   00FF21  4F                 	db	79	;'O'
   292   00FF22  54                 	db	84	;'T'
   293   00FF23  32                 	db	50	;'2'
   294   00FF24  3A                 	db	58	;':'
   295   00FF25  25                 	db	37
   296   00FF26  2E                 	db	46
   297   00FF27  31                 	db	49	;'1'
   298   00FF28  66                 	db	102	;'f'
   299   00FF29  00                 	db	0
   300   00FF2A                     STR_22:
   301   00FF2A  44                 	db	68	;'D'
   302   00FF2B  6F                 	db	111	;'o'
   303   00FF2C  73                 	db	115	;'s'
   304   00FF2D  74                 	db	116	;'t'
   305   00FF2E  61                 	db	97	;'a'
   306   00FF2F  6C                 	db	108	;'l'
   307   00FF30  20                 	db	32
   308   00FF31  6A                 	db	106	;'j'
   309   00FF32  73                 	db	115	;'s'
   310   00FF33  65                 	db	101	;'e'
   311   00FF34  6D                 	db	109	;'m'
   312   00FF35  20                 	db	32
   313   00FF36  25                 	db	37
   314   00FF37  73                 	db	115	;'s'
   315   00FF38  20                 	db	32
   316   00FF39  0A                 	db	10
   317   00FF3A  00                 	db	0
   318   00FF3B                     STR_2:
   319   00FF3B  20                 	db	32
   320   00FF3C  20                 	db	32
   321   00FF3D  20                 	db	32
   322   00FF3E  20                 	db	32
   323   00FF3F  20                 	db	32
   324   00FF40  20                 	db	32
   325   00FF41  20                 	db	32
   326   00FF42  20                 	db	32
   327   00FF43  20                 	db	32
   328   00FF44  20                 	db	32
   329   00FF45  20                 	db	32
   330   00FF46  20                 	db	32
   331   00FF47  20                 	db	32
   332   00FF48  20                 	db	32
   333   00FF49  20                 	db	32
   334   00FF4A  20                 	db	32
   335   00FF4B  00                 	db	0
   336   00FF4C                     STR_3:
   337   00FF4C  42                 	db	66	;'B'
   338   00FF4D  52                 	db	82	;'R'
   339   00FF4E  3A                 	db	58	;':'
   340   00FF4F  20                 	db	32
   341   00FF50  31                 	db	49	;'1'
   342   00FF51  39                 	db	57	;'9'
   343   00FF52  32                 	db	50	;'2'
   344   00FF53  30                 	db	48	;'0'
   345   00FF54  30                 	db	48	;'0'
   346   00FF55  20                 	db	32
   347   00FF56  20                 	db	32
   348   00FF57  20                 	db	32
   349   00FF58  20                 	db	32
   350   00FF59  20                 	db	32
   351   00FF5A  20                 	db	32
   352   00FF5B  20                 	db	32
   353   00FF5C  00                 	db	0
   354   00FF5D                     STR_1:
   355   00FF5D  50                 	db	80	;'P'
   356   00FF5E  6F                 	db	111	;'o'
   357   00FF5F  7A                 	db	122	;'z'
   358   00FF60  6F                 	db	111	;'o'
   359   00FF61  72                 	db	114	;'r'
   360   00FF62  21                 	db	33
   361   00FF63  20                 	db	32
   362   00FF64  48                 	db	72	;'H'
   363   00FF65  61                 	db	97	;'a'
   364   00FF66  64                 	db	100	;'d'
   365   00FF67  21                 	db	33
   366   00FF68  21                 	db	33
   367   00FF69  21                 	db	33
   368   00FF6A  20                 	db	32
   369   00FF6B  20                 	db	32
   370   00FF6C  20                 	db	32
   371   00FF6D  00                 	db	0
   372   00FF6E                     STR_5:
   373   00FF6E  5A                 	db	90	;'Z'
   374   00FF6F  6D                 	db	109	;'m'
   375   00FF70  61                 	db	97	;'a'
   376   00FF71  63                 	db	99	;'c'
   377   00FF72  6B                 	db	107	;'k'
   378   00FF73  6E                 	db	110	;'n'
   379   00FF74  65                 	db	101	;'e'
   380   00FF75  74                 	db	116	;'t'
   381   00FF76  65                 	db	101	;'e'
   382   00FF77  20                 	db	32
   383   00FF78  42                 	db	66	;'B'
   384   00FF79  54                 	db	84	;'T'
   385   00FF7A  4E                 	db	78	;'N'
   386   00FF7B  32                 	db	50	;'2'
   387   00FF7C  20                 	db	32
   388   00FF7D  20                 	db	32
   389   00FF7E  00                 	db	0
   390   00FF7F                     STR_8:
   391   00FF7F  52                 	db	82	;'R'
   392   00FF80  42                 	db	66	;'B'
   393   00FF81  30                 	db	48	;'0'
   394   00FF82  2D                 	db	45
   395   00FF83  41                 	db	65	;'A'
   396   00FF84  32                 	db	50	;'2'
   397   00FF85  2C                 	db	44
   398   00FF86  20                 	db	32
   399   00FF87  42                 	db	66	;'B'
   400   00FF88  52                 	db	82	;'R'
   401   00FF89  3A                 	db	58	;':'
   402   00FF8A  31                 	db	49	;'1'
   403   00FF8B  39                 	db	57	;'9'
   404   00FF8C  32                 	db	50	;'2'
   405   00FF8D  30                 	db	48	;'0'
   406   00FF8E  30                 	db	48	;'0'
   407   00FF8F  00                 	db	0
   408   00FF90                     STR_7:
   409   00FF90  56                 	db	86	;'V'
   410   00FF91  6F                 	db	111	;'o'
   411   00FF92  6C                 	db	108	;'l'
   412   00FF93  74                 	db	116	;'t'
   413   00FF94  79                 	db	121	;'y'
   414   00FF95  20                 	db	32
   415   00FF96  6E                 	db	110	;'n'
   416   00FF97  61                 	db	97	;'a'
   417   00FF98  20                 	db	32
   418   00FF99  50                 	db	80	;'P'
   419   00FF9A  4F                 	db	79	;'O'
   420   00FF9B  54                 	db	84	;'T'
   421   00FF9C  65                 	db	101	;'e'
   422   00FF9D  63                 	db	99	;'c'
   423   00FF9E  68                 	db	104	;'h'
   424   00FF9F  3A                 	db	58	;':'
   425   00FFA0  00                 	db	0
   426   00FFA1                     STR_4:
   427   00FFA1  4B                 	db	75	;'K'
   428   00FFA2  6F                 	db	111	;'o'
   429   00FFA3  6E                 	db	110	;'n'
   430   00FFA4  65                 	db	101	;'e'
   431   00FFA5  63                 	db	99	;'c'
   432   00FFA6  20                 	db	32
   433   00FFA7  2D                 	db	45
   434   00FFA8  20                 	db	32
   435   00FFA9  6E                 	db	110	;'n'
   436   00FFAA  65                 	db	101	;'e'
   437   00FFAB  77                 	db	119	;'w'
   438   00FFAC  20                 	db	32
   439   00FFAD  6C                 	db	108	;'l'
   440   00FFAE  69                 	db	105	;'i'
   441   00FFAF  6E                 	db	110	;'n'
   442   00FFB0  65                 	db	101	;'e'
   443   00FFB1  00                 	db	0
   444   00FFB2                     STR_9:
   445   00FFB2  31                 	db	49	;'1'
   446   00FFB3  3A                 	db	58	;':'
   447   00FFB4  74                 	db	116	;'t'
   448   00FFB5  72                 	db	114	;'r'
   449   00FFB6  2C                 	db	44
   450   00FFB7  32                 	db	50	;'2'
   451   00FFB8  3A                 	db	58	;':'
   452   00FFB9  73                 	db	115	;'s'
   453   00FFBA  69                 	db	105	;'i'
   454   00FFBB  6E                 	db	110	;'n'
   455   00FFBC  2C                 	db	44
   456   00FFBD  33                 	db	51	;'3'
   457   00FFBE  3A                 	db	58	;':'
   458   00FFBF  70                 	db	112	;'p'
   459   00FFC0  69                 	db	105	;'i'
   460   00FFC1  6C                 	db	108	;'l'
   461   00FFC2  00                 	db	0
   462   00FFC3                     STR_29:
   463   00FFC3  28                 	db	40
   464   00FFC4  6E                 	db	110	;'n'
   465   00FFC5  75                 	db	117	;'u'
   466   00FFC6  6C                 	db	108	;'l'
   467   00FFC7  6C                 	db	108	;'l'
   468   00FFC8  29                 	db	41
   469   00FFC9  00                 	db	0
   470   00FFCA                     STR_17:
   471   00FFCA  4D                 	db	77	;'M'
   472   00FFCB  55                 	db	85	;'U'
   473   00FFCC  53                 	db	83	;'S'
   474   00FFCD  49                 	db	73	;'I'
   475   00FFCE  43                 	db	67	;'C'
   476   00FFCF  00                 	db	0
   477   00FFD0                     STR_19:
   478   00FFD0  3E                 	db	62	;'>'
   479   00FFD1  25                 	db	37
   480   00FFD2  2D                 	db	45
   481   00FFD3  2A                 	db	42
   482   00FFD4  73                 	db	115	;'s'
   483   00FFD5  00                 	db	0
   484   00FFD6                     STR_16:
   485   00FFD6  47                 	db	71	;'G'
   486   00FFD7  41                 	db	65	;'A'
   487   00FFD8  4D                 	db	77	;'M'
   488   00FFD9  45                 	db	69	;'E'
   489   00FFDA  00                 	db	0
   490   00FFDB                     STR_11:
   491   00FFDB  47                 	db	71	;'G'
   492   00FFDC  50                 	db	80	;'P'
   493   00FFDD  49                 	db	73	;'I'
   494   00FFDE  4F                 	db	79	;'O'
   495   00FFDF  00                 	db	0
   496   00FFE0                     STR_12:
   497   00FFE0  55                 	db	85	;'U'
   498   00FFE1  41                 	db	65	;'A'
   499   00FFE2  52                 	db	82	;'R'
   500   00FFE3  54                 	db	84	;'T'
   501   00FFE4  00                 	db	0
   502   00FFE5                     STR_10:
   503   00FFE5  25                 	db	37
   504   00FFE6  64                 	db	100	;'d'
   505   00FFE7  20                 	db	32
   506   00FFE8  0D                 	db	13
   507   00FFE9  00                 	db	0
   508   00FFEA                     STR_23:
   509   00FFEA  69                 	db	105	;'i'
   510   00FFEB  6E                 	db	110	;'n'
   511   00FFEC  66                 	db	102	;'f'
   512   00FFED  00                 	db	0
   513   00FFEE                     STR_26:
   514   00FFEE  6E                 	db	110	;'n'
   515   00FFEF  61                 	db	97	;'a'
   516   00FFF0  6E                 	db	110	;'n'
   517   00FFF1  00                 	db	0
   518   00FFF2                     STR_15:
   519   00FFF2  44                 	db	68	;'D'
   520   00FFF3  41                 	db	65	;'A'
   521   00FFF4  43                 	db	67	;'C'
   522   00FFF5  00                 	db	0
   523   00FFF6                     STR_14:
   524   00FFF6  41                 	db	65	;'A'
   525   00FFF7  44                 	db	68	;'D'
   526   00FFF8  43                 	db	67	;'C'
   527   00FFF9  00                 	db	0
   528   00FFFA                     STR_13:
   529   00FFFA  50                 	db	80	;'P'
   530   00FFFB  57                 	db	87	;'W'
   531   00FFFC  4D                 	db	77	;'M'
   532   00FFFD  00                 	db	0
   533   00FFFE  00                 	db	0	; dummy byte at the end
   534   000000                     
   535                           ; #config settings
   536                           
   537                           	psect	cinit
   538   00451A                     __pcinit:
   539                           	callstack 0
   540   00451A                     start_initialization:
   541                           	callstack 0
   542   00451A                     __initialization:
   543                           	callstack 0
   544                           
   545                           ; Initialize objects allocated to BANK1 (40 bytes)
   546                           ; load TBLPTR registers with __pidataBANK1
   547   00451A  0E4C               	movlw	low __pidataBANK1
   548   00451C  6EF6               	movwf	tblptrl,c
   549   00451E  0E47               	movlw	high __pidataBANK1
   550   004520  6EF7               	movwf	tblptrh,c
   551   004522  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   552   004524  6EF8               	movwf	tblptru,c
   553   004526  EE01  F0B3         	lfsr	0,__pdataBANK1
   554   00452A  EE10 F028          	lfsr	1,40
   555   00452E                     copy_data0:
   556   00452E  0009               	tblrd		*+
   557   004530  CFF5 FFEE          	movff	tablat,postinc0
   558   004534  50E5               	movf	postdec1,w,c
   559   004536  50E1               	movf	fsr1l,w,c
   560   004538  E1FA               	bnz	copy_data0
   561                           
   562                           ; Clear objects allocated to BANK1 (128 bytes)
   563   00453A  EE01  F000         	lfsr	0,__pbssBANK1
   564   00453E  0E80               	movlw	128
   565   004540                     clear_0:
   566   004540  6AEE               	clrf	postinc0,c
   567   004542  06E8               	decf	wreg,f,c
   568   004544  E1FD               	bnz	clear_0
   569                           
   570                           ; Clear objects allocated to BANK0 (1 bytes)
   571   004546  0100               	movlb	0
   572   004548  6BEE               	clrf	__pbssBANK0& (0+255),b
   573                           
   574                           ; Clear objects allocated to COMRAM (5 bytes)
   575   00454A  6A59               	clrf	(__pbssCOMRAM+4)& (0+255),c
   576   00454C  6A58               	clrf	(__pbssCOMRAM+3)& (0+255),c
   577   00454E  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
   578   004550  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
   579   004552  6A55               	clrf	__pbssCOMRAM& (0+255),c
   580   004554                     end_of_initialization:
   581                           	callstack 0
   582   004554                     __end_of__initialization:
   583                           	callstack 0
   584   004554  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   585   004556  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   586   004558  0E00               	movlw	low (__Lmediumconst shr (0+16))
   587   00455A  6EF8               	movwf	tblptru,c
   588   00455C  0100               	movlb	0
   589   00455E  EFAA  F013         	goto	_main	;jump to C main() function
   590                           
   591                           	psect	bssCOMRAM
   592   000055                     __pbssCOMRAM:
   593                           	callstack 0
   594   000055                     _width:
   595                           	callstack 0
   596   000055                     	ds	2
   597   000057                     _prec:
   598                           	callstack 0
   599   000057                     	ds	2
   600   000059                     _flags:
   601                           	callstack 0
   602   000059                     	ds	1
   603                           
   604                           	psect	bssBANK0
   605   0000EE                     __pbssBANK0:
   606                           	callstack 0
   607   0000EE                     _keepStateGPIO:
   608                           	callstack 0
   609   0000EE                     	ds	1
   610                           
   611                           	psect	bssBANK1
   612   000100                     __pbssBANK1:
   613                           	callstack 0
   614   000100                     	ds	17
   615   000111                     fabsf@F465:
   616                           	callstack 0
   617   000111                     	ds	4
   618   000115                     ___rem_pio2f@F526:
   619                           	callstack 0
   620   000115                     	ds	4
   621   000119                     floorf@F521:
   622                           	callstack 0
   623   000119                     	ds	4
   624   00011D                     ___fpclassifyf@F465:
   625                           	callstack 0
   626   00011D                     	ds	4
   627   000121                     ISR@i:
   628                           	callstack 0
   629   000121                     	ds	2
   630   000123                     _UARTIE:
   631                           	callstack 0
   632   000123                     	ds	1
   633   000124                     _GPIOIE:
   634                           	callstack 0
   635   000124                     	ds	1
   636   000125                     _dbuf:
   637                           	callstack 0
   638   000125                     	ds	80
   639   000175                     _gmail:
   640                           	callstack 0
   641   000175                     	ds	11
   642                           
   643                           	psect	dataBANK1
   644   0001B3                     __pdataBANK1:
   645                           	callstack 0
   646   0001B3                     moveDisplay@F6961:
   647                           	callstack 0
   648   0001B3                     	ds	16
   649   0001C3                     runGPIO@F6991:
   650                           	callstack 0
   651   0001C3                     	ds	12
   652   0001CF                     runGPIO@F6973:
   653                           	callstack 0
   654   0001CF                     	ds	12
   655                           
   656                           	psect	cstackBANK1
   657   000180                     __pcstackBANK1:
   658                           	callstack 0
   659   000180                     moveDisplay@menuItem1:
   660                           	callstack 0
   661   000180                     runADC@text:
   662                           	callstack 0
   663                           
   664                           ; 17 bytes @ 0x0
   665   000180                     	ds	17
   666   000191                     runADC@voltage1:
   667                           	callstack 0
   668   000191                     moveDisplay@menuItem2:
   669                           	callstack 0
   670                           
   671                           ; 17 bytes @ 0x11
   672   000191                     	ds	4
   673   000195                     runADC@voltage2:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x15
   677   000195                     	ds	4
   678   000199                     runADC@pot1:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x19
   682   000199                     	ds	2
   683   00019B                     runADC@pot2:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x1B
   687   00019B                     	ds	2
   688   00019D                     runADC@keepState:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x1D
   692   00019D                     	ds	5
   693   0001A2                     moveDisplay@menuItems:
   694                           	callstack 0
   695                           
   696                           ; 16 bytes @ 0x22
   697   0001A2                     	ds	16
   698   0001B2                     moveDisplay@menuI:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x32
   702   0001B2                     	ds	1
   703                           
   704                           	psect	cstackBANK0
   705   000060                     __pcstackBANK0:
   706                           	callstack 0
   707   000060                     ___fladd@signs:
   708                           	callstack 0
   709   000060                     floorf@m:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x0
   713   000060                     	ds	1
   714   000061                     ___fladd@aexp:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x1
   718   000061                     	ds	1
   719   000062                     ___fladd@bexp:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x2
   723   000062                     	ds	1
   724   000063                     ___fladd@grs:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x3
   728   000063                     	ds	1
   729   000064                     ?___flsub:
   730                           	callstack 0
   731   000064                     ?___sindf:
   732                           	callstack 0
   733   000064                     ?___cosdf:
   734                           	callstack 0
   735   000064                     ?___fltol:
   736                           	callstack 0
   737   000064                     floorf@e:
   738                           	callstack 0
   739   000064                     ___fltol@f1:
   740                           	callstack 0
   741   000064                     ___flsub@b:
   742                           	callstack 0
   743   000064                     ___cosdf@x:
   744                           	callstack 0
   745   000064                     ___sindf@x:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x4
   749   000064                     	ds	2
   750   000066                     floorf@u:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x6
   754   000066                     	ds	2
   755   000068                     ??___fltol:
   756   000068                     ___flsub@a:
   757                           	callstack 0
   758   000068                     ___cosdf@r:
   759                           	callstack 0
   760   000068                     ___sindf@r:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x8
   764   000068                     	ds	4
   765   00006C                     ___sindf@w:
   766                           	callstack 0
   767   00006C                     ___cosdf$4121:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0xC
   771   00006C                     	ds	4
   772   000070                     ___cosdf$4122:
   773                           	callstack 0
   774   000070                     ___sindf$4125:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x10
   778   000070                     	ds	4
   779   000074                     ___cosdf$4123:
   780                           	callstack 0
   781   000074                     ___sindf$4126:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x14
   785   000074                     	ds	4
   786   000078                     ___cosdf@w:
   787                           	callstack 0
   788   000078                     ___sindf$4127:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x18
   792   000078                     	ds	4
   793   00007C                     ___cosdf@z:
   794                           	callstack 0
   795   00007C                     ___sindf@s:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x1C
   799   00007C                     	ds	4
   800   000080                     ?___flneg:
   801                           	callstack 0
   802   000080                     ___flneg@f1:
   803                           	callstack 0
   804   000080                     ___sindf@z:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x20
   808   000080                     	ds	4
   809   000084                     ?___rem_pio2f:
   810                           	callstack 0
   811   000084                     efgtoa@fp:
   812                           	callstack 0
   813   000084                     ___rem_pio2f@x:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x24
   817   000084                     	ds	2
   818   000086                     efgtoa@f:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x26
   822   000086                     	ds	2
   823   000088                     ___rem_pio2f@y:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x28
   827   000088                     	ds	1
   828   000089                     ??___rem_pio2f:
   829                           
   830                           ; 1 bytes @ 0x29
   831   000089                     	ds	1
   832   00008A                     efgtoa@c:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x2A
   836   00008A                     	ds	1
   837   00008B                     ??_efgtoa:
   838   00008B                     ___rem_pio2f@ty:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x2B
   842   00008B                     	ds	2
   843   00008D                     efgtoa@ne:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2D
   847   00008D                     	ds	2
   848   00008F                     efgtoa@p:
   849                           	callstack 0
   850   00008F                     ___rem_pio2f$4124:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x2F
   854   00008F                     	ds	2
   855   000091                     efgtoa@t:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x31
   859   000091                     	ds	2
   860   000093                     ___rem_pio2f@sign:
   861                           	callstack 0
   862   000093                     _efgtoa$3679:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x33
   866   000093                     	ds	1
   867   000094                     ___rem_pio2f@ux:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x34
   871   000094                     	ds	1
   872   000095                     efgtoa@pp:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x35
   876   000095                     	ds	1
   877   000096                     efgtoa@mode:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x36
   881   000096                     	ds	1
   882   000097                     efgtoa@nmode:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x37
   886   000097                     	ds	1
   887   000098                     efgtoa@d:
   888                           	callstack 0
   889   000098                     ___rem_pio2f@fn:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x38
   893   000098                     	ds	2
   894   00009A                     efgtoa@m:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x3A
   898   00009A                     	ds	2
   899   00009C                     efgtoa@e:
   900                           	callstack 0
   901   00009C                     ___rem_pio2f@t:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x3C
   905   00009C                     	ds	2
   906   00009E                     efgtoa@w:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x3E
   910   00009E                     	ds	2
   911   0000A0                     efgtoa@ou:
   912                           	callstack 0
   913   0000A0                     ___rem_pio2f@n:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x40
   917   0000A0                     	ds	4
   918   0000A4                     ?_sinf:
   919                           	callstack 0
   920   0000A4                     efgtoa@i:
   921                           	callstack 0
   922   0000A4                     sinf@x:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x44
   926   0000A4                     	ds	2
   927   0000A6                     efgtoa@h:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x46
   931   0000A6                     	ds	2
   932   0000A8                     _sinf$3843:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x48
   936   0000A8                     	ds	2
   937   0000AA                     efgtoa@l:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0x4A
   941   0000AA                     	ds	2
   942   0000AC                     _sinf$3844:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0x4C
   946   0000AC                     	ds	2
   947   0000AE                     efgtoa@sign:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x4E
   951   0000AE                     	ds	1
   952   0000AF                     efgtoa@g:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x4F
   956   0000AF                     	ds	1
   957   0000B0                     sinf@n:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x50
   961   0000B0                     	ds	1
   962   0000B1                     sinf@sign:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x51
   966   0000B1                     	ds	1
   967   0000B2                     _sinf$4120:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x52
   971   0000B2                     	ds	1
   972   0000B3                     efgtoa@n:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x53
   976   0000B3                     	ds	2
   977   0000B5                     efgtoa@u:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x55
   981   0000B5                     	ds	1
   982   0000B6                     sinf@y:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x56
   986   0000B6                     	ds	3
   987   0000B9                     vfpfcnvrt@fp:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x59
   991   0000B9                     	ds	1
   992   0000BA                     sinf@ux:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x5A
   996   0000BA                     	ds	1
   997   0000BB                     vfpfcnvrt@fmt:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x5B
  1001   0000BB                     	ds	1
  1002   0000BC                     vfpfcnvrt@ap:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x5C
  1006   0000BC                     	ds	1
  1007   0000BD                     ??_vfpfcnvrt:
  1008                           
  1009                           ; 1 bytes @ 0x5D
  1010   0000BD                     	ds	2
  1011   0000BF                     vfpfcnvrt@convarg:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x5F
  1015   0000BF                     	ds	4
  1016   0000C3                     vfpfcnvrt@c:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x63
  1020   0000C3                     	ds	1
  1021   0000C4                     vfpfcnvrt@done:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x64
  1025   0000C4                     	ds	1
  1026   0000C5                     vfpfcnvrt@cp:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x65
  1030   0000C5                     	ds	2
  1031   0000C7                     ?_vfprintf:
  1032                           	callstack 0
  1033   0000C7                     vfprintf@fp:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x67
  1037   0000C7                     	ds	2
  1038   0000C9                     vfprintf@fmt:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x69
  1042   0000C9                     	ds	2
  1043   0000CB                     vfprintf@ap:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x6B
  1047   0000CB                     	ds	1
  1048   0000CC                     vfprintf@cfmt:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x6C
  1052   0000CC                     	ds	2
  1053   0000CE                     ?_printf:
  1054                           	callstack 0
  1055   0000CE                     ?_sprintf:
  1056                           	callstack 0
  1057   0000CE                     sprintf@s:
  1058                           	callstack 0
  1059   0000CE                     printf@fmt:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x6E
  1063   0000CE                     	ds	2
  1064   0000D0                     sprintf@fmt:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x70
  1068   0000D0                     	ds	2
  1069   0000D2                     ??_runUART:
  1070   0000D2                     ??_runDAC:
  1071                           
  1072                           ; 1 bytes @ 0x72
  1073   0000D2                     	ds	1
  1074   0000D3                     _runDAC$4117:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x73
  1078   0000D3                     	ds	1
  1079   0000D4                     runUART@keepState:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x74
  1083   0000D4                     	ds	3
  1084   0000D7                     _runDAC$4118:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x77
  1088   0000D7                     	ds	3
  1089   0000DA                     sprintf@ap:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x7A
  1093   0000DA                     	ds	1
  1094   0000DB                     runDAC@keepState:
  1095                           	callstack 0
  1096   0000DB                     sprintf@f:
  1097                           	callstack 0
  1098                           
  1099                           ; 12 bytes @ 0x7B
  1100   0000DB                     	ds	1
  1101   0000DC                     runDAC@selectModeDAC:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x7C
  1105   0000DC                     	ds	1
  1106   0000DD                     runDAC@DACindex:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x7D
  1110   0000DD                     	ds	10
  1111   0000E7                     ??_runADC:
  1112   0000E7                     moveDisplay@where:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x87
  1116   0000E7                     	ds	1
  1117   0000E8                     ??_moveDisplay:
  1118                           
  1119                           ; 1 bytes @ 0x88
  1120   0000E8                     	ds	2
  1121   0000EA                     ??_main:
  1122                           
  1123                           ; 1 bytes @ 0x8A
  1124   0000EA                     	ds	2
  1125   0000EC                     main@setUpAgain:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x8C
  1129   0000EC                     	ds	1
  1130   0000ED                     main@menuI:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x8D
  1134   0000ED                     	ds	1
  1135                           
  1136                           	psect	cstackCOMRAM
  1137   000001                     __pcstackCOMRAM:
  1138                           	callstack 0
  1139   000001                     ??_ISR:
  1140                           
  1141                           ; 1 bytes @ 0x0
  1142   000001                     	ds	4
  1143   000005                     ISR@temp:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x4
  1147   000005                     	ds	1
  1148   000006                     ?___fpclassifyf:
  1149                           	callstack 0
  1150   000006                     ?___wmul:
  1151                           	callstack 0
  1152   000006                     ?___awdiv:
  1153                           	callstack 0
  1154   000006                     ?___awmod:
  1155                           	callstack 0
  1156   000006                     ?_labs:
  1157                           	callstack 0
  1158   000006                     ?_fabsf:
  1159                           	callstack 0
  1160   000006                     ?___xxtofl:
  1161                           	callstack 0
  1162   000006                     LCD_Send@data:
  1163                           	callstack 0
  1164   000006                     SPI_write@MSB:
  1165                           	callstack 0
  1166   000006                     putch@data:
  1167                           	callstack 0
  1168   000006                     LED1_Control@state:
  1169                           	callstack 0
  1170   000006                     LED2_Control@state:
  1171                           	callstack 0
  1172   000006                     LED3_Control@state:
  1173                           	callstack 0
  1174   000006                     LED4_Control@state:
  1175                           	callstack 0
  1176   000006                     LED5_Control@state:
  1177                           	callstack 0
  1178   000006                     LED6_Control@state:
  1179                           	callstack 0
  1180   000006                     ___wmul@multiplier:
  1181                           	callstack 0
  1182   000006                     ___awdiv@dividend:
  1183                           	callstack 0
  1184   000006                     ___awmod@dividend:
  1185                           	callstack 0
  1186   000006                     memcpy@d1:
  1187                           	callstack 0
  1188   000006                     strcpy@dest:
  1189                           	callstack 0
  1190   000006                     ___fleq@ff1:
  1191                           	callstack 0
  1192   000006                     ___xxtofl@val:
  1193                           	callstack 0
  1194   000006                     ___fpclassifyf@x:
  1195                           	callstack 0
  1196   000006                     labs@a:
  1197                           	callstack 0
  1198   000006                     fabsf@x:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x5
  1202   000006                     	ds	1
  1203   000007                     ??_LCD_Init:
  1204   000007                     ??_runGPIO:
  1205   000007                     SPI_write@LSB:
  1206                           	callstack 0
  1207   000007                     LCD_ShowString@textData:
  1208                           	callstack 0
  1209   000007                     fputc@c:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x6
  1213   000007                     	ds	1
  1214   000008                     SPI_write@data:
  1215                           	callstack 0
  1216   000008                     ___wmul@multiplicand:
  1217                           	callstack 0
  1218   000008                     ___awdiv@divisor:
  1219                           	callstack 0
  1220   000008                     ___awmod@divisor:
  1221                           	callstack 0
  1222   000008                     memcpy@s1:
  1223                           	callstack 0
  1224   000008                     strcpy@src:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x7
  1228   000008                     	ds	1
  1229   000009                     ??_LCD_ShowString:
  1230   000009                     fputc@fp:
  1231                           	callstack 0
  1232   000009                     runGPIO@states:
  1233                           	callstack 0
  1234                           
  1235                           ; 12 bytes @ 0x8
  1236   000009                     	ds	1
  1237   00000A                     ??___fpclassifyf:
  1238   00000A                     ??_labs:
  1239   00000A                     ??___xxtofl:
  1240   00000A                     ___awdiv@counter:
  1241                           	callstack 0
  1242   00000A                     ___awmod@counter:
  1243                           	callstack 0
  1244   00000A                     ___wmul@product:
  1245                           	callstack 0
  1246   00000A                     memcpy@n:
  1247                           	callstack 0
  1248   00000A                     strcpy@d:
  1249                           	callstack 0
  1250   00000A                     ___fleq@ff2:
  1251                           	callstack 0
  1252   00000A                     fabsf@u:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x9
  1256   00000A                     	ds	1
  1257   00000B                     ??_fputc:
  1258   00000B                     LCD_ShowString@lineNum:
  1259                           	callstack 0
  1260   00000B                     ___awdiv@sign:
  1261                           	callstack 0
  1262   00000B                     ___awmod@sign:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0xA
  1266   00000B                     	ds	1
  1267   00000C                     ?_abs:
  1268                           	callstack 0
  1269   00000C                     ?_read_prec_or_width:
  1270                           	callstack 0
  1271   00000C                     LCD_ShowString@i:
  1272                           	callstack 0
  1273   00000C                     read_prec_or_width@fmt:
  1274                           	callstack 0
  1275   00000C                     memcpy@tmp:
  1276                           	callstack 0
  1277   00000C                     ___awdiv@quotient:
  1278                           	callstack 0
  1279   00000C                     abs@a:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0xB
  1283   00000C                     	ds	1
  1284   00000D                     read_prec_or_width@ap:
  1285                           	callstack 0
  1286   00000D                     memcpy@d:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0xC
  1290   00000D                     	ds	1
  1291   00000E                     ??_runPWM:
  1292   00000E                     ??_abs:
  1293   00000E                     ??___fleq:
  1294   00000E                     ___xxtofl@sign:
  1295                           	callstack 0
  1296   00000E                     read_prec_or_width@c:
  1297                           	callstack 0
  1298   00000E                     ___fpclassifyf@e:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0xD
  1302   00000E                     	ds	1
  1303   00000F                     ___xxtofl@exp:
  1304                           	callstack 0
  1305   00000F                     read_prec_or_width@n:
  1306                           	callstack 0
  1307   00000F                     memcpy@s:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0xE
  1311   00000F                     	ds	1
  1312   000010                     runPWM@keepState:
  1313                           	callstack 0
  1314   000010                     stoa@fp:
  1315                           	callstack 0
  1316   000010                     fputs@s:
  1317                           	callstack 0
  1318   000010                     ___xxtofl@arg:
  1319                           	callstack 0
  1320   000010                     ___fpclassifyf@u:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0xF
  1324   000010                     	ds	1
  1325   000011                     runPWM@multiplier:
  1326                           	callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x10
  1329   000011                     	ds	1
  1330   000012                     stoa@s:
  1331                           	callstack 0
  1332   000012                     fputs@fp:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x11
  1336   000012                     	ds	2
  1337   000014                     ??_stoa:
  1338   000014                     ?___flmul:
  1339                           	callstack 0
  1340   000014                     fputs@c:
  1341                           	callstack 0
  1342   000014                     ___flmul@b:
  1343                           	callstack 0
  1344                           
  1345                           ; 4 bytes @ 0x13
  1346   000014                     	ds	1
  1347   000015                     fputs@i:
  1348                           	callstack 0
  1349   000015                     runGPIO@LEDControl:
  1350                           	callstack 0
  1351                           
  1352                           ; 12 bytes @ 0x14
  1353   000015                     	ds	1
  1354   000016                     stoa@p:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x15
  1358   000016                     	ds	1
  1359   000017                     pad@fp:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x16
  1363   000017                     	ds	1
  1364   000018                     stoa@w:
  1365                           	callstack 0
  1366   000018                     ___flmul@a:
  1367                           	callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x17
  1370   000018                     	ds	1
  1371   000019                     pad@buf:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x18
  1375   000019                     	ds	1
  1376   00001A                     stoa@cp:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x19
  1380   00001A                     	ds	1
  1381   00001B                     pad@p:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x1A
  1385   00001B                     	ds	1
  1386   00001C                     ??___flmul:
  1387   00001C                     stoa@l:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x1B
  1391   00001C                     	ds	1
  1392   00001D                     ??_pad:
  1393                           
  1394                           ; 1 bytes @ 0x1C
  1395   00001D                     	ds	1
  1396   00001E                     pad@i:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x1D
  1400   00001E                     	ds	2
  1401   000020                     ___flmul@sign:
  1402                           	callstack 0
  1403   000020                     dtoa@fp:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x1F
  1407   000020                     	ds	1
  1408   000021                     runGPIO@GPIOreverse:
  1409                           	callstack 0
  1410   000021                     ___flmul@aexp:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x20
  1414   000021                     	ds	1
  1415   000022                     runGPIO@numberOfStates:
  1416                           	callstack 0
  1417   000022                     dtoa@d:
  1418                           	callstack 0
  1419   000022                     ___flmul@grs:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x21
  1423   000022                     	ds	2
  1424   000024                     runGPIO@GPIOi:
  1425                           	callstack 0
  1426   000024                     _dtoa$3648:
  1427                           	callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x23
  1430   000024                     	ds	1
  1431   000025                     runGPIO@j:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x24
  1435   000025                     	ds	1
  1436   000026                     ___flmul@bexp:
  1437                           	callstack 0
  1438   000026                     dtoa@w:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x25
  1442   000026                     	ds	1
  1443   000027                     ___flmul@prod:
  1444                           	callstack 0
  1445                           
  1446                           ; 4 bytes @ 0x26
  1447   000027                     	ds	1
  1448   000028                     dtoa@p:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x27
  1452   000028                     	ds	2
  1453   00002A                     dtoa@s:
  1454                           	callstack 0
  1455                           
  1456                           ; 1 bytes @ 0x29
  1457   00002A                     	ds	1
  1458   00002B                     ___flmul@temp:
  1459                           	callstack 0
  1460   00002B                     dtoa@i:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x2A
  1464   00002B                     	ds	2
  1465   00002D                     ?___fldiv:
  1466                           	callstack 0
  1467   00002D                     ___flge@ff1:
  1468                           	callstack 0
  1469   00002D                     ___fldiv@b:
  1470                           	callstack 0
  1471                           
  1472                           ; 4 bytes @ 0x2C
  1473   00002D                     	ds	4
  1474   000031                     ___flge@ff2:
  1475                           	callstack 0
  1476   000031                     ___fldiv@a:
  1477                           	callstack 0
  1478                           
  1479                           ; 4 bytes @ 0x30
  1480   000031                     	ds	4
  1481   000035                     ??___fldiv:
  1482   000035                     ??___flge:
  1483                           
  1484                           ; 1 bytes @ 0x34
  1485   000035                     	ds	4
  1486   000039                     ___fldiv@rem:
  1487                           	callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x38
  1490   000039                     	ds	4
  1491   00003D                     ___fldiv@sign:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x3C
  1495   00003D                     	ds	1
  1496   00003E                     ___fldiv@new_exp:
  1497                           	callstack 0
  1498                           
  1499                           ; 2 bytes @ 0x3D
  1500   00003E                     	ds	2
  1501   000040                     ___fldiv@grs:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x3F
  1505   000040                     	ds	4
  1506   000044                     ___fldiv@bexp:
  1507                           	callstack 0
  1508                           
  1509                           ; 1 bytes @ 0x43
  1510   000044                     	ds	1
  1511   000045                     ___fldiv@aexp:
  1512                           	callstack 0
  1513                           
  1514                           ; 1 bytes @ 0x44
  1515   000045                     	ds	1
  1516   000046                     ?___fladd:
  1517                           	callstack 0
  1518   000046                     ?_floorf:
  1519                           	callstack 0
  1520   000046                     ___fladd@b:
  1521                           	callstack 0
  1522   000046                     floorf@x:
  1523                           	callstack 0
  1524                           
  1525                           ; 4 bytes @ 0x45
  1526   000046                     	ds	4
  1527   00004A                     ??_floorf:
  1528   00004A                     ___fladd@a:
  1529                           	callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x49
  1532   00004A                     	ds	4
  1533   00004E                     ??___fladd:
  1534                           
  1535                           ; 1 bytes @ 0x4D
  1536   00004E                     	ds	4
  1537   000052                     ___fltol@sign1:
  1538                           	callstack 0
  1539                           
  1540                           ; 1 bytes @ 0x51
  1541   000052                     	ds	1
  1542   000053                     ___fltol@exp1:
  1543                           	callstack 0
  1544                           
  1545                           ; 1 bytes @ 0x52
  1546   000053                     	ds	1
  1547   000054                     printf@ap:
  1548                           	callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x53
  1551   000054                     	ds	1
  1552                           
  1553 ;;
  1554 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1555 ;;
  1556 ;; *************** function _main *****************
  1557 ;; Defined at:
  1558 ;;		line 10 in file "main.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  menuI           1  141[BANK0 ] unsigned char 
  1563 ;;  setUpAgain      1  140[BANK0 ] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;Total ram usage:        4 bytes
  1578 ;; Hardware stack levels required when called: 10
  1579 ;; This function calls:
  1580 ;;		_LCD_Init
  1581 ;;		_LCD_ShowString
  1582 ;;		_moveDisplay
  1583 ;;		_runADC
  1584 ;;		_runDAC
  1585 ;;		_runGPIO
  1586 ;;		_runPWM
  1587 ;;		_runUART
  1588 ;; This function is called by:
  1589 ;;		Startup code after reset
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text0
  1594   002754                     __ptext0:
  1595                           	callstack 0
  1596   002754                     _main:
  1597                           	callstack 21
  1598   002754                     
  1599                           ;main.c: 11:     _delay((unsigned long)((100)*(32E6/4000.0)));
  1600   002754  0E05               	movlw	5
  1601   002756  0100               	movlb	0	; () banked
  1602   002758  6FEB               	movwf	(??_main+1)& (0+255),b
  1603   00275A  0E0F               	movlw	15
  1604   00275C  6FEA               	movwf	??_main& (0+255),b
  1605   00275E  0EF1               	movlw	241
  1606   002760                     u9427:
  1607   002760  2EE8               	decfsz	wreg,f,c
  1608   002762  D7FE               	bra	u9427
  1609   002764  2FEA               	decfsz	??_main& (0+255),f,b
  1610   002766  D7FC               	bra	u9427
  1611   002768  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1612   00276A  D7FA               	bra	u9427
  1613   00276C                     
  1614                           ;main.c: 13:     TRISCbits.RC0 = 1;
  1615   00276C  8094               	bsf	148,0,c	;volatile
  1616   00276E                     
  1617                           ;main.c: 14:     TRISAbits.RA4 = 1;
  1618   00276E  8892               	bsf	146,4,c	;volatile
  1619   002770                     
  1620                           ;main.c: 15:     TRISAbits.RA3 = 1;
  1621   002770  8692               	bsf	146,3,c	;volatile
  1622   002772                     
  1623                           ;main.c: 16:     TRISAbits.RA2 = 1;
  1624   002772  8492               	bsf	146,2,c	;volatile
  1625   002774                     
  1626                           ;main.c: 17:     ANSELAbits.ANSA3 = 0;
  1627   002774  010F               	movlb	15	; () banked
  1628   002776  9738               	bcf	56,3,b	;volatile
  1629   002778                     
  1630                           ; BSR set to: 15
  1631                           ;main.c: 18:     ANSELAbits.ANSA2 = 0;
  1632   002778  9538               	bcf	56,2,b	;volatile
  1633   00277A                     
  1634                           ; BSR set to: 15
  1635                           ;main.c: 21:     TRISDbits.RD2 = 0;
  1636   00277A  9495               	bcf	149,2,c	;volatile
  1637   00277C                     
  1638                           ; BSR set to: 15
  1639                           ;main.c: 22:     TRISDbits.RD3 = 0;
  1640   00277C  9695               	bcf	149,3,c	;volatile
  1641   00277E                     
  1642                           ; BSR set to: 15
  1643                           ;main.c: 23:     TRISCbits.RC4 = 0;
  1644   00277E  9894               	bcf	148,4,c	;volatile
  1645   002780                     
  1646                           ; BSR set to: 15
  1647                           ;main.c: 24:     TRISDbits.RD4 = 0;
  1648   002780  9895               	bcf	149,4,c	;volatile
  1649   002782                     
  1650                           ; BSR set to: 15
  1651                           ;main.c: 25:     TRISDbits.RD5 = 0;
  1652   002782  9A95               	bcf	149,5,c	;volatile
  1653   002784                     
  1654                           ; BSR set to: 15
  1655                           ;main.c: 26:     TRISDbits.RD6 = 0;
  1656   002784  9C95               	bcf	149,6,c	;volatile
  1657   002786                     
  1658                           ; BSR set to: 15
  1659                           ;main.c: 27:     LATDbits.LD2 = 1;
  1660   002786  848C               	bsf	140,2,c	;volatile
  1661   002788                     
  1662                           ; BSR set to: 15
  1663                           ;main.c: 28:     LATDbits.LD3 = 1;
  1664   002788  868C               	bsf	140,3,c	;volatile
  1665   00278A                     
  1666                           ; BSR set to: 15
  1667                           ;main.c: 29:     LATCbits.LC4 = 1;
  1668   00278A  888B               	bsf	139,4,c	;volatile
  1669   00278C                     
  1670                           ; BSR set to: 15
  1671                           ;main.c: 30:     LATDbits.LD4 = 1;
  1672   00278C  888C               	bsf	140,4,c	;volatile
  1673   00278E                     
  1674                           ; BSR set to: 15
  1675                           ;main.c: 31:     LATDbits.LD5 = 1;
  1676   00278E  8A8C               	bsf	140,5,c	;volatile
  1677   002790                     
  1678                           ; BSR set to: 15
  1679                           ;main.c: 32:     LATDbits.LD6 = 1;
  1680   002790  8C8C               	bsf	140,6,c	;volatile
  1681   002792                     
  1682                           ; BSR set to: 15
  1683                           ;main.c: 35:     LCD_Init();
  1684   002792  ECD3  F01E         	call	_LCD_Init	;wreg free
  1685   002796                     
  1686                           ;main.c: 36:     uint8_t menuI = 0;
  1687   002796  0E00               	movlw	0
  1688   002798  0100               	movlb	0	; () banked
  1689   00279A  6FED               	movwf	main@menuI& (0+255),b
  1690   00279C                     
  1691                           ; BSR set to: 0
  1692                           ;main.c: 37:     uint8_t setUpAgain = 0;
  1693   00279C  0E00               	movlw	0
  1694   00279E  6FEC               	movwf	main@setUpAgain& (0+255),b
  1695   0027A0                     
  1696                           ; BSR set to: 0
  1697                           ;main.c: 44:     menuI = moveDisplay(menuI,0);
  1698   0027A0  0E00               	movlw	0
  1699   0027A2  6FE7               	movwf	moveDisplay@where& (0+255),b
  1700   0027A4  51ED               	movf	main@menuI& (0+255),w,b
  1701   0027A6  ECC7  F01C         	call	_moveDisplay
  1702   0027AA  0100               	movlb	0	; () banked
  1703   0027AC  6FED               	movwf	main@menuI& (0+255),b
  1704   0027AE                     l7239:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;main.c: 47:         if(PORTCbits.RC0){
  1708   0027AE  A082               	btfss	130,0,c	;volatile
  1709   0027B0  EFDC  F013         	goto	u9301
  1710   0027B4  EFDE  F013         	goto	u9300
  1711   0027B8                     u9301:
  1712   0027B8  EF00  F014         	goto	l7249
  1713   0027BC                     u9300:
  1714   0027BC                     
  1715                           ; BSR set to: 0
  1716                           ;main.c: 48:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1717   0027BC  0E03               	movlw	3
  1718   0027BE  0100               	movlb	0	; () banked
  1719   0027C0  6FEB               	movwf	(??_main+1)& (0+255),b
  1720   0027C2  0E08               	movlw	8
  1721   0027C4  6FEA               	movwf	??_main& (0+255),b
  1722   0027C6  0E77               	movlw	119
  1723   0027C8                     u9437:
  1724   0027C8  2EE8               	decfsz	wreg,f,c
  1725   0027CA  D7FE               	bra	u9437
  1726   0027CC  2FEA               	decfsz	??_main& (0+255),f,b
  1727   0027CE  D7FC               	bra	u9437
  1728   0027D0  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1729   0027D2  D7FA               	bra	u9437
  1730   0027D4                     
  1731                           ;main.c: 49:             if(PORTCbits.RC0){
  1732   0027D4  A082               	btfss	130,0,c	;volatile
  1733   0027D6  EFEF  F013         	goto	u9311
  1734   0027DA  EFF1  F013         	goto	u9310
  1735   0027DE                     u9311:
  1736   0027DE  EF00  F014         	goto	l7249
  1737   0027E2                     u9310:
  1738   0027E2                     l50:
  1739   0027E2  B082               	btfsc	130,0,c	;volatile
  1740   0027E4  EFF6  F013         	goto	u9321
  1741   0027E8  EFF8  F013         	goto	u9320
  1742   0027EC                     u9321:
  1743   0027EC  EFF1  F013         	goto	l50
  1744   0027F0                     u9320:
  1745   0027F0                     
  1746                           ;main.c: 51:                 menuI = moveDisplay(menuI,2);
  1747   0027F0  0E02               	movlw	2
  1748   0027F2  0100               	movlb	0	; () banked
  1749   0027F4  6FE7               	movwf	moveDisplay@where& (0+255),b
  1750   0027F6  51ED               	movf	main@menuI& (0+255),w,b
  1751   0027F8  ECC7  F01C         	call	_moveDisplay
  1752   0027FC  0100               	movlb	0	; () banked
  1753   0027FE  6FED               	movwf	main@menuI& (0+255),b
  1754   002800                     l7249:
  1755                           
  1756                           ;main.c: 54:         if(PORTAbits.RA4){
  1757   002800  A880               	btfss	128,4,c	;volatile
  1758   002802  EF05  F014         	goto	u9331
  1759   002806  EF07  F014         	goto	u9330
  1760   00280A                     u9331:
  1761   00280A  EF29  F014         	goto	l7259
  1762   00280E                     u9330:
  1763   00280E                     
  1764                           ;main.c: 55:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1765   00280E  0E03               	movlw	3
  1766   002810  0100               	movlb	0	; () banked
  1767   002812  6FEB               	movwf	(??_main+1)& (0+255),b
  1768   002814  0E08               	movlw	8
  1769   002816  6FEA               	movwf	??_main& (0+255),b
  1770   002818  0E77               	movlw	119
  1771   00281A                     u9447:
  1772   00281A  2EE8               	decfsz	wreg,f,c
  1773   00281C  D7FE               	bra	u9447
  1774   00281E  2FEA               	decfsz	??_main& (0+255),f,b
  1775   002820  D7FC               	bra	u9447
  1776   002822  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1777   002824  D7FA               	bra	u9447
  1778   002826                     
  1779                           ;main.c: 56:             if(PORTAbits.RA4){
  1780   002826  A880               	btfss	128,4,c	;volatile
  1781   002828  EF18  F014         	goto	u9341
  1782   00282C  EF1A  F014         	goto	u9340
  1783   002830                     u9341:
  1784   002830  EF29  F014         	goto	l7259
  1785   002834                     u9340:
  1786   002834                     l55:
  1787   002834  B880               	btfsc	128,4,c	;volatile
  1788   002836  EF1F  F014         	goto	u9351
  1789   00283A  EF21  F014         	goto	u9350
  1790   00283E                     u9351:
  1791   00283E  EF1A  F014         	goto	l55
  1792   002842                     u9350:
  1793   002842                     
  1794                           ;main.c: 58:                 menuI = moveDisplay(menuI,1);
  1795   002842  0E01               	movlw	1
  1796   002844  0100               	movlb	0	; () banked
  1797   002846  6FE7               	movwf	moveDisplay@where& (0+255),b
  1798   002848  51ED               	movf	main@menuI& (0+255),w,b
  1799   00284A  ECC7  F01C         	call	_moveDisplay
  1800   00284E  0100               	movlb	0	; () banked
  1801   002850  6FED               	movwf	main@menuI& (0+255),b
  1802   002852                     l7259:
  1803                           
  1804                           ;main.c: 61:         if(PORTAbits.RA3){
  1805   002852  A680               	btfss	128,3,c	;volatile
  1806   002854  EF2E  F014         	goto	u9361
  1807   002858  EF30  F014         	goto	u9360
  1808   00285C                     u9361:
  1809   00285C  EFC2  F014         	goto	l58
  1810   002860                     u9360:
  1811   002860                     
  1812                           ;main.c: 62:             _delay((unsigned long)((50)*(32E6/4000.0)));
  1813   002860  0E03               	movlw	3
  1814   002862  0100               	movlb	0	; () banked
  1815   002864  6FEB               	movwf	(??_main+1)& (0+255),b
  1816   002866  0E08               	movlw	8
  1817   002868  6FEA               	movwf	??_main& (0+255),b
  1818   00286A  0E77               	movlw	119
  1819   00286C                     u9457:
  1820   00286C  2EE8               	decfsz	wreg,f,c
  1821   00286E  D7FE               	bra	u9457
  1822   002870  2FEA               	decfsz	??_main& (0+255),f,b
  1823   002872  D7FC               	bra	u9457
  1824   002874  2FEB               	decfsz	(??_main+1)& (0+255),f,b
  1825   002876  D7FA               	bra	u9457
  1826   002878                     
  1827                           ;main.c: 63:             if(PORTAbits.RA3){
  1828   002878  A680               	btfss	128,3,c	;volatile
  1829   00287A  EF41  F014         	goto	u9371
  1830   00287E  EF43  F014         	goto	u9370
  1831   002882                     u9371:
  1832   002882  EFC2  F014         	goto	l58
  1833   002886                     u9370:
  1834   002886                     l60:
  1835   002886  B680               	btfsc	128,3,c	;volatile
  1836   002888  EF48  F014         	goto	u9381
  1837   00288C  EF4A  F014         	goto	u9380
  1838   002890                     u9381:
  1839   002890  EF43  F014         	goto	l60
  1840   002894                     u9380:
  1841   002894  EFA2  F014         	goto	l7299
  1842   002898                     l7267:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;main.c: 67:                         LCD_ShowString((char)1, "Pozor! Had!!!   ");
  1846   002898  0E5D               	movlw	low STR_1
  1847   00289A  6E07               	movwf	LCD_ShowString@textData^0,c
  1848   00289C  0EFF               	movlw	high STR_1
  1849   00289E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1850   0028A0  0E01               	movlw	1
  1851   0028A2  EC69  F020         	call	_LCD_ShowString
  1852                           
  1853                           ;main.c: 68:                         LCD_ShowString((char)2, "                ");
  1854   0028A6  0E3B               	movlw	low STR_2
  1855   0028A8  6E07               	movwf	LCD_ShowString@textData^0,c
  1856   0028AA  0EFF               	movlw	high STR_2
  1857   0028AC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1858   0028AE  0E02               	movlw	2
  1859   0028B0  EC69  F020         	call	_LCD_ShowString
  1860   0028B4                     
  1861                           ;main.c: 69:                         runGPIO();
  1862   0028B4  EC6C  F01B         	call	_runGPIO	;wreg free
  1863   0028B8                     l7271:
  1864                           
  1865                           ;main.c: 70:                         setUpAgain = 1;
  1866   0028B8  0E01               	movlw	1
  1867   0028BA  0100               	movlb	0	; () banked
  1868   0028BC  6FEC               	movwf	main@setUpAgain& (0+255),b
  1869                           
  1870                           ;main.c: 71:                         break;
  1871   0028BE  EFC2  F014         	goto	l58
  1872   0028C2                     l7273:
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;main.c: 73:                         LCD_ShowString((char)1, "BR: 19200       ");
  1876   0028C2  0E4C               	movlw	low STR_3
  1877   0028C4  6E07               	movwf	LCD_ShowString@textData^0,c
  1878   0028C6  0EFF               	movlw	high STR_3
  1879   0028C8  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1880   0028CA  0E01               	movlw	1
  1881   0028CC  EC69  F020         	call	_LCD_ShowString
  1882                           
  1883                           ;main.c: 74:                         LCD_ShowString((char)2, "Konec - new line");
  1884   0028D0  0EA1               	movlw	low STR_4
  1885   0028D2  6E07               	movwf	LCD_ShowString@textData^0,c
  1886   0028D4  0EFF               	movlw	high STR_4
  1887   0028D6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1888   0028D8  0E02               	movlw	2
  1889   0028DA  EC69  F020         	call	_LCD_ShowString
  1890   0028DE                     
  1891                           ;main.c: 75:                         runUART();
  1892   0028DE  ECA5  F01F         	call	_runUART	;wreg free
  1893   0028E2  EF5C  F014         	goto	l7271
  1894   0028E6                     l7279:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;main.c: 79:                         LCD_ShowString((char)1, "Zmacknete BTN2  ");
  1898   0028E6  0E6E               	movlw	low STR_5
  1899   0028E8  6E07               	movwf	LCD_ShowString@textData^0,c
  1900   0028EA  0EFF               	movlw	high STR_5
  1901   0028EC  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1902   0028EE  0E01               	movlw	1
  1903   0028F0  EC69  F020         	call	_LCD_ShowString
  1904                           
  1905                           ;main.c: 80:                         LCD_ShowString((char)2, "                ");
  1906   0028F4  0E3B               	movlw	low STR_2
  1907   0028F6  6E07               	movwf	LCD_ShowString@textData^0,c
  1908   0028F8  0EFF               	movlw	high STR_2
  1909   0028FA  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1910   0028FC  0E02               	movlw	2
  1911   0028FE  EC69  F020         	call	_LCD_ShowString
  1912   002902                     
  1913                           ;main.c: 81:                         runPWM();
  1914   002902  EC24  F01C         	call	_runPWM	;wreg free
  1915   002906  EF5C  F014         	goto	l7271
  1916   00290A                     l7285:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 85:                         LCD_ShowString((char)1, "Volty na POTech:");
  1920   00290A  0E90               	movlw	low STR_7
  1921   00290C  6E07               	movwf	LCD_ShowString@textData^0,c
  1922   00290E  0EFF               	movlw	high STR_7
  1923   002910  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1924   002912  0E01               	movlw	1
  1925   002914  EC69  F020         	call	_LCD_ShowString
  1926   002918                     
  1927                           ;main.c: 86:                         runADC();
  1928   002918  ECFD  F016         	call	_runADC	;wreg free
  1929   00291C  EF5C  F014         	goto	l7271
  1930   002920                     l7291:
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 90:                         LCD_ShowString((char)1, "RB0-A2, BR:19200");
  1934   002920  0E7F               	movlw	low STR_8
  1935   002922  6E07               	movwf	LCD_ShowString@textData^0,c
  1936   002924  0EFF               	movlw	high STR_8
  1937   002926  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1938   002928  0E01               	movlw	1
  1939   00292A  EC69  F020         	call	_LCD_ShowString
  1940                           
  1941                           ;main.c: 91:                         LCD_ShowString((char)2, "1:tr,2:sin,3:pil");
  1942   00292E  0EB2               	movlw	low STR_9
  1943   002930  6E07               	movwf	LCD_ShowString@textData^0,c
  1944   002932  0EFF               	movlw	high STR_9
  1945   002934  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  1946   002936  0E02               	movlw	2
  1947   002938  EC69  F020         	call	_LCD_ShowString
  1948   00293C                     
  1949                           ;main.c: 92:                         runDAC();
  1950   00293C  EC36  F012         	call	_runDAC	;wreg free
  1951   002940  EF5C  F014         	goto	l7271
  1952   002944                     l7299:
  1953   002944  0100               	movlb	0	; () banked
  1954   002946  51ED               	movf	main@menuI& (0+255),w,b
  1955                           
  1956                           ; Switch size 1, requested type "simple"
  1957                           ; Number of cases is 7, Range of values is 0 to 6
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte           22    12 (average)
  1961                           ;	Chosen strategy is simple_byte
  1962   002948  0A00               	xorlw	0	; case 0
  1963   00294A  B4D8               	btfsc	status,2,c
  1964   00294C  EF4C  F014         	goto	l7267
  1965   002950  0A01               	xorlw	1	; case 1
  1966   002952  B4D8               	btfsc	status,2,c
  1967   002954  EF61  F014         	goto	l7273
  1968   002958  0A03               	xorlw	3	; case 2
  1969   00295A  B4D8               	btfsc	status,2,c
  1970   00295C  EF73  F014         	goto	l7279
  1971   002960  0A01               	xorlw	1	; case 3
  1972   002962  B4D8               	btfsc	status,2,c
  1973   002964  EF85  F014         	goto	l7285
  1974   002968  0A07               	xorlw	7	; case 4
  1975   00296A  B4D8               	btfsc	status,2,c
  1976   00296C  EF90  F014         	goto	l7291
  1977   002970  0A01               	xorlw	1	; case 5
  1978   002972  B4D8               	btfsc	status,2,c
  1979   002974  EFC2  F014         	goto	l58
  1980   002978  0A03               	xorlw	3	; case 6
  1981   00297A  B4D8               	btfsc	status,2,c
  1982   00297C  EFC2  F014         	goto	l58
  1983   002980  EFC2  F014         	goto	l58
  1984   002984                     l58:
  1985                           
  1986                           ;main.c: 103:         if(PORTAbits.RA2){
  1987   002984  5080               	movf	128,w,c	;volatile
  1988   002986                     
  1989                           ;main.c: 107:         if(setUpAgain){
  1990   002986  0100               	movlb	0	; () banked
  1991   002988  51EC               	movf	main@setUpAgain& (0+255),w,b
  1992   00298A  B4D8               	btfsc	status,2,c
  1993   00298C  EFCA  F014         	goto	u9391
  1994   002990  EFCC  F014         	goto	u9390
  1995   002994                     u9391:
  1996   002994  EFD7  F013         	goto	l7239
  1997   002998                     u9390:
  1998   002998                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 108:         menuI = moveDisplay(menuI,0);
  2001   002998  0E00               	movlw	0
  2002   00299A  6FE7               	movwf	moveDisplay@where& (0+255),b
  2003   00299C  51ED               	movf	main@menuI& (0+255),w,b
  2004   00299E  ECC7  F01C         	call	_moveDisplay
  2005   0029A2  0100               	movlb	0	; () banked
  2006   0029A4  6FED               	movwf	main@menuI& (0+255),b
  2007   0029A6                     
  2008                           ; BSR set to: 0
  2009                           ;main.c: 109:         setUpAgain = 0;
  2010   0029A6  0E00               	movlw	0
  2011   0029A8  6FEC               	movwf	main@setUpAgain& (0+255),b
  2012   0029AA  EFD7  F013         	goto	l7239
  2013   0029AE  EF83  F000         	goto	start
  2014   0029B2                     __end_of_main:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _runUART *****************
  2018 ;; Defined at:
  2019 ;;		line 4 in file "UART.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  keepState       1  116[BANK0 ] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;Total ram usage:        3 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 9
  2040 ;; This function calls:
  2041 ;;		_printf
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text1
  2048   003F4A                     __ptext1:
  2049                           	callstack 0
  2050   003F4A                     _runUART:
  2051                           	callstack 21
  2052   003F4A                     
  2053                           ;UART.c: 6:     TRISAbits.RA2 = 1;
  2054   003F4A  8492               	bsf	146,2,c	;volatile
  2055   003F4C                     
  2056                           ;UART.c: 8:     ANSELC = 0x00;
  2057   003F4C  0E00               	movlw	0
  2058   003F4E  010F               	movlb	15	; () banked
  2059   003F50  6F3A               	movwf	58,b	;volatile
  2060                           
  2061                           ;UART.c: 9:     TRISD = 0x00;
  2062   003F52  0E00               	movlw	0
  2063   003F54  6E95               	movwf	149,c	;volatile
  2064   003F56                     
  2065                           ; BSR set to: 15
  2066                           ;UART.c: 10:     TRISCbits.TRISC6 = 1;
  2067   003F56  8C94               	bsf	148,6,c	;volatile
  2068   003F58                     
  2069                           ; BSR set to: 15
  2070                           ;UART.c: 11:     TRISCbits.TRISC7 = 1;
  2071   003F58  8E94               	bsf	148,7,c	;volatile
  2072                           
  2073                           ;UART.c: 14:     SPBRG1 = 25;
  2074   003F5A  0E19               	movlw	25
  2075   003F5C  6EAF               	movwf	175,c	;volatile
  2076   003F5E                     
  2077                           ; BSR set to: 15
  2078                           ;UART.c: 16:     TXSTA1bits.SYNC = 0;
  2079   003F5E  98AC               	bcf	172,4,c	;volatile
  2080   003F60                     
  2081                           ; BSR set to: 15
  2082                           ;UART.c: 17:     RCSTA1bits.SPEN = 1;
  2083   003F60  8EAB               	bsf	171,7,c	;volatile
  2084   003F62                     
  2085                           ; BSR set to: 15
  2086                           ;UART.c: 18:     TXSTA1bits.TXEN = 1;
  2087   003F62  8AAC               	bsf	172,5,c	;volatile
  2088   003F64                     
  2089                           ; BSR set to: 15
  2090                           ;UART.c: 19:     RCSTA1bits.CREN = 1;
  2091   003F64  88AB               	bsf	171,4,c	;volatile
  2092                           
  2093                           ;UART.c: 21:     UARTIE = 1;
  2094   003F66  0E01               	movlw	1
  2095   003F68  0101               	movlb	1	; () banked
  2096   003F6A  6F23               	movwf	_UARTIE& (0+255),b
  2097   003F6C                     
  2098                           ; BSR set to: 1
  2099                           ;UART.c: 22:     RC1IE = 1;
  2100   003F6C  8A9D               	bsf	3997,5,c	;volatile
  2101   003F6E                     
  2102                           ; BSR set to: 1
  2103                           ;UART.c: 23:     PEIE = 1;
  2104   003F6E  8CF2               	bsf	4082,6,c	;volatile
  2105   003F70                     
  2106                           ; BSR set to: 1
  2107                           ;UART.c: 24:     GIE = 1;
  2108   003F70  8EF2               	bsf	4082,7,c	;volatile
  2109                           
  2110                           ;UART.c: 26:     uint8_t keepState = 1;
  2111   003F72  0E01               	movlw	1
  2112   003F74  0100               	movlb	0	; () banked
  2113   003F76  6FD4               	movwf	runUART@keepState& (0+255),b
  2114                           
  2115                           ;UART.c: 28:     while(keepState){
  2116   003F78  EFFA  F01F         	goto	l534
  2117   003F7C                     l7015:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;UART.c: 29:         if(gmail.full){
  2121   003F7C  0101               	movlb	1	; () banked
  2122   003F7E  517F               	movf	(_gmail+10)& (0+255),w,b	;volatile
  2123   003F80  B4D8               	btfsc	status,2,c
  2124   003F82  EFC5  F01F         	goto	u9001
  2125   003F86  EFC7  F01F         	goto	u9000
  2126   003F8A                     u9001:
  2127   003F8A  EFD6  F01F         	goto	l7023
  2128   003F8E                     u9000:
  2129   003F8E                     
  2130                           ; BSR set to: 1
  2131                           ;UART.c: 30:             LATDbits.LD2 ^= 1;
  2132   003F8E  748C               	btg	140,2,c	;volatile
  2133   003F90                     
  2134                           ; BSR set to: 1
  2135                           ;UART.c: 31:             printf("Dostal jsem %s \n",gmail.data);
  2136   003F90  0E2A               	movlw	low STR_22
  2137   003F92  0100               	movlb	0	; () banked
  2138   003F94  6FCE               	movwf	printf@fmt& (0+255),b
  2139   003F96  0EFF               	movlw	high STR_22
  2140   003F98  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  2141   003F9A  0E75               	movlw	low _gmail
  2142   003F9C  6FD0               	movwf	(?_printf+2)& (0+255),b
  2143   003F9E  0E01               	movlw	high _gmail
  2144   003FA0  6FD1               	movwf	(?_printf+3)& (0+255),b
  2145   003FA2  ECE0  F023         	call	_printf	;wreg free
  2146   003FA6                     
  2147                           ;UART.c: 32:             gmail.full = 0;
  2148   003FA6  0E00               	movlw	0
  2149   003FA8  0101               	movlb	1	; () banked
  2150   003FAA  6F7F               	movwf	(_gmail+10)& (0+255),b	;volatile
  2151   003FAC                     l7023:
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;UART.c: 35:         if(PORTAbits.RA2){
  2155   003FAC  A480               	btfss	128,2,c	;volatile
  2156   003FAE  EFDB  F01F         	goto	u9011
  2157   003FB2  EFDD  F01F         	goto	u9010
  2158   003FB6                     u9011:
  2159   003FB6  EFFA  F01F         	goto	l534
  2160   003FBA                     u9010:
  2161   003FBA                     
  2162                           ; BSR set to: 1
  2163                           ;UART.c: 36:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2164   003FBA  0E03               	movlw	3
  2165   003FBC  0100               	movlb	0	; () banked
  2166   003FBE  6FD3               	movwf	(??_runUART+1)& (0+255),b
  2167   003FC0  0E08               	movlw	8
  2168   003FC2  6FD2               	movwf	??_runUART& (0+255),b
  2169   003FC4  0E77               	movlw	119
  2170   003FC6                     u9467:
  2171   003FC6  2EE8               	decfsz	wreg,f,c
  2172   003FC8  D7FE               	bra	u9467
  2173   003FCA  2FD2               	decfsz	??_runUART& (0+255),f,b
  2174   003FCC  D7FC               	bra	u9467
  2175   003FCE  2FD3               	decfsz	(??_runUART+1)& (0+255),f,b
  2176   003FD0  D7FA               	bra	u9467
  2177   003FD2                     
  2178                           ;UART.c: 37:             if(PORTAbits.RA2){
  2179   003FD2  A480               	btfss	128,2,c	;volatile
  2180   003FD4  EFEE  F01F         	goto	u9021
  2181   003FD8  EFF0  F01F         	goto	u9020
  2182   003FDC                     u9021:
  2183   003FDC  EFFA  F01F         	goto	l534
  2184   003FE0                     u9020:
  2185   003FE0                     l539:
  2186   003FE0  B480               	btfsc	128,2,c	;volatile
  2187   003FE2  EFF5  F01F         	goto	u9031
  2188   003FE6  EFF7  F01F         	goto	u9030
  2189   003FEA                     u9031:
  2190   003FEA  EFF0  F01F         	goto	l539
  2191   003FEE                     u9030:
  2192   003FEE                     
  2193                           ;UART.c: 39:                 keepState = 0;
  2194   003FEE  0E00               	movlw	0
  2195   003FF0  0100               	movlb	0	; () banked
  2196   003FF2  6FD4               	movwf	runUART@keepState& (0+255),b
  2197   003FF4                     l534:
  2198                           
  2199                           ;UART.c: 28:     while(keepState){
  2200   003FF4  0100               	movlb	0	; () banked
  2201   003FF6  51D4               	movf	runUART@keepState& (0+255),w,b
  2202   003FF8  A4D8               	btfss	status,2,c
  2203   003FFA  EF01  F020         	goto	u9041
  2204   003FFE  EF03  F020         	goto	u9040
  2205   004002                     u9041:
  2206   004002  EFBE  F01F         	goto	l7015
  2207   004006                     u9040:
  2208   004006                     
  2209                           ; BSR set to: 0
  2210                           ;UART.c: 49:     UARTIE = 0;
  2211   004006  0E00               	movlw	0
  2212   004008  0101               	movlb	1	; () banked
  2213   00400A  6F23               	movwf	_UARTIE& (0+255),b
  2214   00400C                     
  2215                           ; BSR set to: 1
  2216   00400C  0012               	return		;funcret
  2217   00400E                     __end_of_runUART:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _runPWM *****************
  2221 ;; Defined at:
  2222 ;;		line 11 in file "PWM.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  multiplier      1   16[COMRAM] unsigned char 
  2227 ;;  keepState       1   15[COMRAM] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;Total ram usage:        4 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 2
  2244 ;; This function calls:
  2245 ;;		___awdiv
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text2
  2252   003848                     __ptext2:
  2253                           	callstack 0
  2254   003848                     _runPWM:
  2255                           	callstack 28
  2256   003848                     
  2257                           ;PWM.c: 13:     TRISCbits.RC2 = 1;
  2258   003848  8494               	bsf	148,2,c	;volatile
  2259   00384A                     
  2260                           ;PWM.c: 14:     CCPTMRS0bits.C1TSEL = 0b00;
  2261   00384A  0EFC               	movlw	-4
  2262   00384C  010F               	movlb	15	; () banked
  2263   00384E  1749               	andwf	73,f,b	;volatile
  2264                           
  2265                           ;PWM.c: 15:     PR2 = 199;
  2266   003850  0EC7               	movlw	199
  2267   003852  6EBB               	movwf	187,c	;volatile
  2268                           
  2269                           ;PWM.c: 16:     CCP1CONbits.CCP1M |= 0b1100;
  2270   003854  0E0C               	movlw	12
  2271   003856  12BD               	iorwf	189,f,c	;volatile
  2272                           
  2273                           ;PWM.c: 17:     CCP1CONbits.P1M = 0b10;
  2274   003858  50BD               	movf	189,w,c	;volatile
  2275   00385A  0B3F               	andlw	-193
  2276   00385C  0980               	iorlw	128
  2277   00385E  6EBD               	movwf	189,c	;volatile
  2278                           
  2279                           ;PWM.c: 18:     CCPR1L = 0;
  2280   003860  0E00               	movlw	0
  2281   003862  6EBE               	movwf	190,c	;volatile
  2282   003864                     
  2283                           ; BSR set to: 15
  2284                           ;PWM.c: 19:     TMR2IF = 0;
  2285   003864  929E               	bcf	3998,1,c	;volatile
  2286   003866                     
  2287                           ; BSR set to: 15
  2288                           ;PWM.c: 20:     TMR2ON = 1;
  2289   003866  84BA               	bsf	4026,2,c	;volatile
  2290   003868                     l476:
  2291   003868  A29E               	btfss	3998,1,c	;volatile
  2292   00386A  EF39  F01C         	goto	u9051
  2293   00386E  EF3B  F01C         	goto	u9050
  2294   003872                     u9051:
  2295   003872  EF34  F01C         	goto	l476
  2296   003876                     u9050:
  2297   003876                     
  2298                           ;PWM.c: 22:     TRISCbits.RC2 = 1;
  2299   003876  8494               	bsf	148,2,c	;volatile
  2300                           
  2301                           ;PWM.c: 25:     TRISAbits.RA4 = 1;
  2302   003878  8892               	bsf	146,4,c	;volatile
  2303                           
  2304                           ;PWM.c: 26:     TRISAbits.RA2 = 1;
  2305   00387A  8492               	bsf	146,2,c	;volatile
  2306                           
  2307                           ;PWM.c: 28:     TRISDbits.RD2 = 0;
  2308   00387C  9495               	bcf	149,2,c	;volatile
  2309                           
  2310                           ;PWM.c: 29:     TRISDbits.RD3 = 0;
  2311   00387E  9695               	bcf	149,3,c	;volatile
  2312                           
  2313                           ;PWM.c: 30:     TRISCbits.RC4 = 0;
  2314   003880  9894               	bcf	148,4,c	;volatile
  2315                           
  2316                           ;PWM.c: 31:     TRISDbits.RD4 = 0;
  2317   003882  9895               	bcf	149,4,c	;volatile
  2318                           
  2319                           ;PWM.c: 32:     TRISDbits.RD5 = 0;
  2320   003884  9A95               	bcf	149,5,c	;volatile
  2321                           
  2322                           ;PWM.c: 33:     TRISDbits.RD6 = 0;
  2323   003886  9C95               	bcf	149,6,c	;volatile
  2324                           
  2325                           ;PWM.c: 34:     LATDbits.LD2 = 1;
  2326   003888  848C               	bsf	140,2,c	;volatile
  2327                           
  2328                           ;PWM.c: 35:     LATDbits.LD3 = 1;
  2329   00388A  868C               	bsf	140,3,c	;volatile
  2330                           
  2331                           ;PWM.c: 36:     LATCbits.LC4 = 1;
  2332   00388C  888B               	bsf	139,4,c	;volatile
  2333                           
  2334                           ;PWM.c: 37:     LATDbits.LD4 = 1;
  2335   00388E  888C               	bsf	140,4,c	;volatile
  2336                           
  2337                           ;PWM.c: 38:     LATDbits.LD5 = 1;
  2338   003890  8A8C               	bsf	140,5,c	;volatile
  2339                           
  2340                           ;PWM.c: 39:     LATDbits.LD6 = 1;
  2341   003892  8C8C               	bsf	140,6,c	;volatile
  2342   003894                     
  2343                           ;PWM.c: 41:     uint8_t keepState;;PWM.c: 42:     keepState = 1;
  2344   003894  0E01               	movlw	1
  2345   003896  6E10               	movwf	runPWM@keepState^0,c
  2346                           
  2347                           ;PWM.c: 44:     uint8_t multiplier;;PWM.c: 45:     multiplier = 0;
  2348   003898  0E00               	movlw	0
  2349   00389A  6E11               	movwf	runPWM@multiplier^0,c
  2350                           
  2351                           ;PWM.c: 47:     while(keepState){
  2352   00389C  EFBA  F01C         	goto	l479
  2353   0038A0                     l7047:
  2354                           
  2355                           ;PWM.c: 49:         CCPR1L = multiplier*199/5;
  2356   0038A0  5011               	movf	runPWM@multiplier^0,w,c
  2357   0038A2  0DC7               	mullw	199
  2358   0038A4  CFF3 F006          	movff	prodl,___awdiv@dividend
  2359   0038A8  CFF4 F007          	movff	prodh,___awdiv@dividend+1
  2360   0038AC  0E00               	movlw	0
  2361   0038AE  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2362   0038B0  0E05               	movlw	5
  2363   0038B2  6E08               	movwf	___awdiv@divisor^0,c
  2364   0038B4  EC07  F020         	call	___awdiv	;wreg free
  2365   0038B8  5006               	movf	?___awdiv^0,w,c
  2366   0038BA  6EBE               	movwf	190,c	;volatile
  2367   0038BC                     
  2368                           ;PWM.c: 51:         if(PORTAbits.RA4){
  2369   0038BC  A880               	btfss	128,4,c	;volatile
  2370   0038BE  EF63  F01C         	goto	u9061
  2371   0038C2  EF65  F01C         	goto	u9060
  2372   0038C6                     u9061:
  2373   0038C6  EF97  F01C         	goto	l7065
  2374   0038CA                     u9060:
  2375   0038CA                     
  2376                           ;PWM.c: 52:             _delay((unsigned long)((50)*(32E6/4000.0)));
  2377   0038CA  0E03               	movlw	3
  2378   0038CC  6E0F               	movwf	(??_runPWM+1)^0,c
  2379   0038CE  0E08               	movlw	8
  2380   0038D0  6E0E               	movwf	??_runPWM^0,c
  2381   0038D2  0E77               	movlw	119
  2382   0038D4                     u9477:
  2383   0038D4  2EE8               	decfsz	wreg,f,c
  2384   0038D6  D7FE               	bra	u9477
  2385   0038D8  2E0E               	decfsz	??_runPWM^0,f,c
  2386   0038DA  D7FC               	bra	u9477
  2387   0038DC  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2388   0038DE  D7FA               	bra	u9477
  2389   0038E0  0000               	nop	
  2390   0038E2                     
  2391                           ;PWM.c: 53:             if(PORTAbits.RA4){
  2392   0038E2  A880               	btfss	128,4,c	;volatile
  2393   0038E4  EF76  F01C         	goto	u9071
  2394   0038E8  EF78  F01C         	goto	u9070
  2395   0038EC                     u9071:
  2396   0038EC  EF97  F01C         	goto	l7065
  2397   0038F0                     u9070:
  2398   0038F0                     l483:
  2399   0038F0  B880               	btfsc	128,4,c	;volatile
  2400   0038F2  EF7D  F01C         	goto	u9081
  2401   0038F6  EF7F  F01C         	goto	u9080
  2402   0038FA                     u9081:
  2403   0038FA  EF78  F01C         	goto	l483
  2404   0038FE                     u9080:
  2405   0038FE                     
  2406                           ;PWM.c: 55:                 if(multiplier == 5 ){
  2407   0038FE  0E05               	movlw	5
  2408   003900  1811               	xorwf	runPWM@multiplier^0,w,c
  2409   003902  A4D8               	btfss	status,2,c
  2410   003904  EF86  F01C         	goto	u9091
  2411   003908  EF88  F01C         	goto	u9090
  2412   00390C                     u9091:
  2413   00390C  EF8C  F01C         	goto	l7061
  2414   003910                     u9090:
  2415   003910                     
  2416                           ;PWM.c: 56:                     multiplier = 0;
  2417   003910  0E00               	movlw	0
  2418   003912  6E11               	movwf	runPWM@multiplier^0,c
  2419                           
  2420                           ;PWM.c: 57:                 } else if(multiplier <5){
  2421   003914  EF97  F01C         	goto	l7065
  2422   003918                     l7061:
  2423   003918  0E05               	movlw	5
  2424   00391A  6011               	cpfslt	runPWM@multiplier^0,c
  2425   00391C  EF92  F01C         	goto	u9101
  2426   003920  EF94  F01C         	goto	u9100
  2427   003924                     u9101:
  2428   003924  EF97  F01C         	goto	l482
  2429   003928                     u9100:
  2430   003928                     
  2431                           ;PWM.c: 58:                     multiplier++;
  2432   003928  2A11               	incf	runPWM@multiplier^0,f,c
  2433   00392A  EF97  F01C         	goto	l7065
  2434   00392E                     l482:
  2435   00392E                     l7065:
  2436                           
  2437                           ;PWM.c: 63:         if(PORTAbits.RA2){
  2438   00392E  A480               	btfss	128,2,c	;volatile
  2439   003930  EF9C  F01C         	goto	u9111
  2440   003934  EF9E  F01C         	goto	u9110
  2441   003938                     u9111:
  2442   003938  EFBA  F01C         	goto	l479
  2443   00393C                     u9110:
  2444   00393C                     
  2445                           ;PWM.c: 64:         _delay((unsigned long)((50)*(32E6/4000.0)));
  2446   00393C  0E03               	movlw	3
  2447   00393E  6E0F               	movwf	(??_runPWM+1)^0,c
  2448   003940  0E08               	movlw	8
  2449   003942  6E0E               	movwf	??_runPWM^0,c
  2450   003944  0E77               	movlw	119
  2451   003946                     u9487:
  2452   003946  2EE8               	decfsz	wreg,f,c
  2453   003948  D7FE               	bra	u9487
  2454   00394A  2E0E               	decfsz	??_runPWM^0,f,c
  2455   00394C  D7FC               	bra	u9487
  2456   00394E  2E0F               	decfsz	(??_runPWM+1)^0,f,c
  2457   003950  D7FA               	bra	u9487
  2458   003952  0000               	nop	
  2459   003954                     
  2460                           ;PWM.c: 65:         if(PORTAbits.RA2){
  2461   003954  A480               	btfss	128,2,c	;volatile
  2462   003956  EFAF  F01C         	goto	u9121
  2463   00395A  EFB1  F01C         	goto	u9120
  2464   00395E                     u9121:
  2465   00395E  EFBA  F01C         	goto	l479
  2466   003962                     u9120:
  2467   003962                     l491:
  2468   003962  B480               	btfsc	128,2,c	;volatile
  2469   003964  EFB6  F01C         	goto	u9131
  2470   003968  EFB8  F01C         	goto	u9130
  2471   00396C                     u9131:
  2472   00396C  EFB1  F01C         	goto	l491
  2473   003970                     u9130:
  2474   003970                     
  2475                           ;PWM.c: 67:             keepState = 0;
  2476   003970  0E00               	movlw	0
  2477   003972  6E10               	movwf	runPWM@keepState^0,c
  2478   003974                     l479:
  2479                           
  2480                           ;PWM.c: 47:     while(keepState){
  2481   003974  5010               	movf	runPWM@keepState^0,w,c
  2482   003976  A4D8               	btfss	status,2,c
  2483   003978  EFC0  F01C         	goto	u9141
  2484   00397C  EFC2  F01C         	goto	u9140
  2485   003980                     u9141:
  2486   003980  EF50  F01C         	goto	l7047
  2487   003984                     u9140:
  2488   003984                     
  2489                           ;PWM.c: 74:     CCP1CONbits.CCP1M = 0b0000;
  2490   003984  0EF0               	movlw	-16
  2491   003986  16BD               	andwf	189,f,c	;volatile
  2492   003988                     
  2493                           ;PWM.c: 75:     TMR2ON = 0;
  2494   003988  94BA               	bcf	4026,2,c	;volatile
  2495   00398A                     
  2496                           ;PWM.c: 76:     TMR2IE = 0;
  2497   00398A  929D               	bcf	3997,1,c	;volatile
  2498   00398C  0012               	return		;funcret
  2499   00398E                     __end_of_runPWM:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _runGPIO *****************
  2503 ;; Defined at:
  2504 ;;		line 19 in file "GPIO.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  j               2   36[COMRAM] int 
  2509 ;;  states         12    8[COMRAM] unsigned char [12]
  2510 ;;  LEDControl     12   20[COMRAM] PTR FTN(unsigned char ,)
  2511 ;;		 -> LED6_Control(1), LED5_Control(1), LED4_Control(1), LED3_Control(1), 
  2512 ;;		 -> LED2_Control(1), LED1_Control(1), 
  2513 ;;  numberOfStat    2   33[COMRAM] int 
  2514 ;;  GPIOi           1   35[COMRAM] unsigned char 
  2515 ;;  GPIOreverse     1   32[COMRAM] unsigned char 
  2516 ;;  GPIOindex       1    0        unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:       32 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 2
  2533 ;; This function calls:
  2534 ;;		_LED1_Control
  2535 ;;		_LED2_Control
  2536 ;;		_LED3_Control
  2537 ;;		_LED4_Control
  2538 ;;		_LED5_Control
  2539 ;;		_LED6_Control
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text3
  2546   0036D8                     __ptext3:
  2547                           	callstack 0
  2548   0036D8                     _runGPIO:
  2549                           	callstack 28
  2550   0036D8                     
  2551                           ;GPIO.c: 21:     TRISDbits.RD2 = 0;
  2552   0036D8  9495               	bcf	149,2,c	;volatile
  2553                           
  2554                           ;GPIO.c: 22:     TRISDbits.RD3 = 0;
  2555   0036DA  9695               	bcf	149,3,c	;volatile
  2556                           
  2557                           ;GPIO.c: 23:     TRISCbits.RC4 = 0;
  2558   0036DC  9894               	bcf	148,4,c	;volatile
  2559                           
  2560                           ;GPIO.c: 24:     TRISDbits.RD4 = 0;
  2561   0036DE  9895               	bcf	149,4,c	;volatile
  2562                           
  2563                           ;GPIO.c: 25:     TRISDbits.RD5 = 0;
  2564   0036E0  9A95               	bcf	149,5,c	;volatile
  2565                           
  2566                           ;GPIO.c: 26:     TRISDbits.RD6 = 0;
  2567   0036E2  9C95               	bcf	149,6,c	;volatile
  2568                           
  2569                           ;GPIO.c: 27:     ANSELDbits.ANSD2 = 0;
  2570   0036E4  010F               	movlb	15	; () banked
  2571   0036E6  953B               	bcf	59,2,b	;volatile
  2572                           
  2573                           ;GPIO.c: 28:     ANSELDbits.ANSD3 = 0;
  2574   0036E8  973B               	bcf	59,3,b	;volatile
  2575                           
  2576                           ;GPIO.c: 29:     ANSELCbits.ANSC4 = 0;
  2577   0036EA  993A               	bcf	58,4,b	;volatile
  2578                           
  2579                           ;GPIO.c: 30:     ANSELDbits.ANSD4 = 0;
  2580   0036EC  993B               	bcf	59,4,b	;volatile
  2581                           
  2582                           ;GPIO.c: 31:     ANSELDbits.ANSD5 = 0;
  2583   0036EE  9B3B               	bcf	59,5,b	;volatile
  2584                           
  2585                           ;GPIO.c: 32:     ANSELDbits.ANSD6 = 0;
  2586   0036F0  9D3B               	bcf	59,6,b	;volatile
  2587                           
  2588                           ;GPIO.c: 33:     LATDbits.LD2 = 1;
  2589   0036F2  848C               	bsf	140,2,c	;volatile
  2590                           
  2591                           ;GPIO.c: 34:     LATDbits.LD3 = 1;
  2592   0036F4  868C               	bsf	140,3,c	;volatile
  2593                           
  2594                           ;GPIO.c: 35:     LATCbits.LC4 = 1;
  2595   0036F6  888B               	bsf	139,4,c	;volatile
  2596                           
  2597                           ;GPIO.c: 36:     LATDbits.LD4 = 1;
  2598   0036F8  888C               	bsf	140,4,c	;volatile
  2599                           
  2600                           ;GPIO.c: 37:     LATDbits.LD5 = 1;
  2601   0036FA  8A8C               	bsf	140,5,c	;volatile
  2602                           
  2603                           ;GPIO.c: 38:     LATDbits.LD6 = 1;
  2604   0036FC  8C8C               	bsf	140,6,c	;volatile
  2605                           
  2606                           ;GPIO.c: 41:     TRISAbits.RA2 = 1;
  2607   0036FE  8492               	bsf	146,2,c	;volatile
  2608                           
  2609                           ;GPIO.c: 42:     ANSELAbits.ANSA2 = 0;
  2610   003700  9538               	bcf	56,2,b	;volatile
  2611   003702                     
  2612                           ; BSR set to: 15
  2613                           ;GPIO.c: 47:     T1CONbits.TMR1CS = 0b00;
  2614   003702  0E3F               	movlw	-193
  2615   003704  16CD               	andwf	205,f,c	;volatile
  2616                           
  2617                           ;GPIO.c: 48:     T1CONbits.T1CKPS = 0b11;
  2618   003706  0E30               	movlw	48
  2619   003708  12CD               	iorwf	205,f,c	;volatile
  2620   00370A                     
  2621                           ; BSR set to: 15
  2622                           ;GPIO.c: 49:     TMR1IE = 1;
  2623   00370A  809D               	bsf	3997,0,c	;volatile
  2624   00370C                     
  2625                           ; BSR set to: 15
  2626                           ;GPIO.c: 50:     PEIE = 1;
  2627   00370C  8CF2               	bsf	4082,6,c	;volatile
  2628   00370E                     
  2629                           ; BSR set to: 15
  2630                           ;GPIO.c: 51:     GIE = 1;
  2631   00370E  8EF2               	bsf	4082,7,c	;volatile
  2632                           
  2633                           ;GPIO.c: 52:     GPIOIE = 1;
  2634   003710  0E01               	movlw	1
  2635   003712  0101               	movlb	1	; () banked
  2636   003714  6F24               	movwf	_GPIOIE& (0+255),b
  2637   003716                     
  2638                           ; BSR set to: 1
  2639                           ;GPIO.c: 53:     TMR1IF = 1;
  2640   003716  809E               	bsf	3998,0,c	;volatile
  2641                           
  2642                           ;GPIO.c: 54:     TMR1 = 0xFFFF - (25000 - 1);
  2643   003718  0E9E               	movlw	158
  2644   00371A  6ECF               	movwf	207,c	;volatile
  2645   00371C  0E58               	movlw	88
  2646   00371E  6ECE               	movwf	206,c	;volatile
  2647   003720                     
  2648                           ; BSR set to: 1
  2649                           ;GPIO.c: 55:     TMR1ON = 1;
  2650   003720  80CD               	bsf	4045,0,c	;volatile
  2651                           
  2652                           ;GPIO.c: 58:     keepStateGPIO = 1;
  2653   003722  0E01               	movlw	1
  2654   003724  0100               	movlb	0	; () banked
  2655   003726  6FEE               	movwf	_keepStateGPIO& (0+255),b
  2656                           
  2657                           ;GPIO.c: 61:     uint8_t GPIOreverse;;GPIO.c: 62:     GPIOreverse = 0;
  2658   003728  0E00               	movlw	0
  2659   00372A  6E21               	movwf	runGPIO@GPIOreverse^0,c
  2660   00372C                     
  2661                           ; BSR set to: 0
  2662                           ;GPIO.c: 64:     void (*LEDControl[])(unsigned char) = {LED1_Control, LED2_Control, LED3
      +                          _Control, LED4_Control, LED5_Control, LED6_Control};
  2663   00372C  EE21  F0CF         	lfsr	2,runGPIO@F6973
  2664   003730  EE10  F015         	lfsr	1,runGPIO@LEDControl
  2665   003734  0E0B               	movlw	11
  2666   003736                     u8911:
  2667   003736  CFDB FFE3          	movff	plusw2,plusw1
  2668   00373A  06E8               	decf	wreg,f,c
  2669   00373C  E2FC               	bc	u8911
  2670   00373E                     
  2671                           ; BSR set to: 0
  2672                           ;GPIO.c: 65:     unsigned char states[] = {0b100000, 0b110000, 0b011000, 0b001100, 0b000
      +                          110, 0b000011, 0b000001, 0b000011, 0b000110, 0b001100, 0b011000, 0b110000};
  2673   00373E  EE21  F0C3         	lfsr	2,runGPIO@F6991
  2674   003742  EE10  F009         	lfsr	1,runGPIO@states
  2675   003746  0E0B               	movlw	11
  2676   003748                     u8921:
  2677   003748  CFDB FFE3          	movff	plusw2,plusw1
  2678   00374C  06E8               	decf	wreg,f,c
  2679   00374E  E2FC               	bc	u8921
  2680                           
  2681                           ;GPIO.c: 66:     int numberOfStates = sizeof(states) / sizeof(states[0]);
  2682   003750  0E00               	movlw	0
  2683   003752  6E23               	movwf	(runGPIO@numberOfStates+1)^0,c
  2684   003754  0E0C               	movlw	12
  2685   003756  6E22               	movwf	runGPIO@numberOfStates^0,c
  2686                           
  2687                           ;GPIO.c: 67:     uint8_t GPIOi;;GPIO.c: 68:     GPIOi = 0;
  2688   003758  0E00               	movlw	0
  2689   00375A  6E24               	movwf	runGPIO@GPIOi^0,c
  2690                           
  2691                           ;GPIO.c: 70:     while(keepStateGPIO){
  2692   00375C  EF0F  F01C         	goto	l342
  2693   003760                     l6971:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;GPIO.c: 72:         for(int j = 0; j < 6; j++) {
  2697   003760  0E00               	movlw	0
  2698   003762  6E26               	movwf	(runGPIO@j+1)^0,c
  2699   003764  0E00               	movlw	0
  2700   003766  6E25               	movwf	runGPIO@j^0,c
  2701   003768                     l6977:
  2702                           
  2703                           ;GPIO.c: 73:             (*LEDControl[j])(!((states[GPIOi] >> (5 - j)) & 0x1));
  2704   003768  5025               	movf	runGPIO@j^0,w,c
  2705   00376A  0D02               	mullw	2
  2706   00376C  50F3               	movf	243,w,c
  2707   00376E  0F15               	addlw	low runGPIO@LEDControl
  2708   003770  6ED9               	movwf	fsr2l,c
  2709   003772  6ADA               	clrf	fsr2h,c
  2710   003774  D802               	call	u8938
  2711   003776  EFE1  F01B         	goto	u8939
  2712   00377A                     u8938:
  2713   00377A  0005               	push	
  2714   00377C  6EFA               	movwf	pclath,c
  2715   00377E  50DE               	movf	postinc2,w,c
  2716   003780  6EFD               	movwf	tosl,c
  2717   003782  50DE               	movf	postinc2,w,c
  2718   003784  6EFE               	movwf	tosh,c
  2719   003786  50F8               	movf	tblptru,w,c
  2720   003788  6EFF               	movwf	tosu,c
  2721   00378A  50FA               	movf	pclath,w,c
  2722   00378C  5025               	movf	runGPIO@j^0,w,c
  2723   00378E  0805               	sublw	5
  2724   003790  6E07               	movwf	??_runGPIO^0,c
  2725   003792  5024               	movf	runGPIO@GPIOi^0,w,c
  2726   003794  0F09               	addlw	low runGPIO@states
  2727   003796  6ED9               	movwf	fsr2l,c
  2728   003798  6ADA               	clrf	fsr2h,c
  2729   00379A  50DF               	movf	indf2,w,c
  2730   00379C  6E08               	movwf	(??_runGPIO+1)^0,c
  2731   00379E  2A07               	incf	??_runGPIO^0,f,c
  2732   0037A0  EFD4  F01B         	goto	u8944
  2733   0037A4                     u8945:
  2734   0037A4  90D8               	bcf	status,0,c
  2735   0037A6  3208               	rrcf	(??_runGPIO+1)^0,f,c
  2736   0037A8                     u8944:
  2737   0037A8  2E07               	decfsz	??_runGPIO^0,f,c
  2738   0037AA  EFD2  F01B         	goto	u8945
  2739   0037AE  A008               	btfss	(??_runGPIO+1)^0,0,c
  2740   0037B0  EFDC  F01B         	goto	u8951
  2741   0037B4  EFDF  F01B         	goto	u8950
  2742   0037B8                     u8951:
  2743   0037B8  0E01               	movlw	1
  2744   0037BA  EFE0  F01B         	goto	u8960
  2745   0037BE                     u8950:
  2746   0037BE  0E00               	movlw	0
  2747   0037C0                     u8960:
  2748   0037C0  0012               	return		;indir
  2749   0037C2                     u8939:
  2750   0037C2                     
  2751                           ;GPIO.c: 74:         }
  2752   0037C2  4A25               	infsnz	runGPIO@j^0,f,c
  2753   0037C4  2A26               	incf	(runGPIO@j+1)^0,f,c
  2754   0037C6  BE26               	btfsc	(runGPIO@j+1)^0,7,c
  2755   0037C8  EFEF  F01B         	goto	u8971
  2756   0037CC  5026               	movf	(runGPIO@j+1)^0,w,c
  2757   0037CE  E109               	bnz	u8970
  2758   0037D0  0E06               	movlw	6
  2759   0037D2  5C25               	subwf	runGPIO@j^0,w,c
  2760   0037D4  A0D8               	btfss	status,0,c
  2761   0037D6  EFEF  F01B         	goto	u8971
  2762   0037DA  EFF1  F01B         	goto	u8970
  2763   0037DE                     u8971:
  2764   0037DE  EFB4  F01B         	goto	l6977
  2765   0037E2                     u8970:
  2766   0037E2                     
  2767                           ;GPIO.c: 75:         _delay((unsigned long)((400)*(32E6/4000.0)));
  2768   0037E2  0E11               	movlw	17
  2769   0037E4  6E08               	movwf	(??_runGPIO+1)^0,c
  2770   0037E6  0E3C               	movlw	60
  2771   0037E8  6E07               	movwf	??_runGPIO^0,c
  2772   0037EA  0ECB               	movlw	203
  2773   0037EC                     u9497:
  2774   0037EC  2EE8               	decfsz	wreg,f,c
  2775   0037EE  D7FE               	bra	u9497
  2776   0037F0  2E07               	decfsz	??_runGPIO^0,f,c
  2777   0037F2  D7FC               	bra	u9497
  2778   0037F4  2E08               	decfsz	(??_runGPIO+1)^0,f,c
  2779   0037F6  D7FA               	bra	u9497
  2780   0037F8  0000               	nop	
  2781   0037FA                     
  2782                           ;GPIO.c: 76:         GPIOi++;
  2783   0037FA  2A24               	incf	runGPIO@GPIOi^0,f,c
  2784                           
  2785                           ;GPIO.c: 77:         if(GPIOi == numberOfStates){
  2786   0037FC  5024               	movf	runGPIO@GPIOi^0,w,c
  2787   0037FE  6E07               	movwf	??_runGPIO^0,c
  2788   003800  6A08               	clrf	(??_runGPIO+1)^0,c
  2789   003802  5022               	movf	runGPIO@numberOfStates^0,w,c
  2790   003804  1807               	xorwf	??_runGPIO^0,w,c
  2791   003806  E107               	bnz	u8981
  2792   003808  5023               	movf	(runGPIO@numberOfStates+1)^0,w,c
  2793   00380A  1808               	xorwf	(??_runGPIO+1)^0,w,c
  2794   00380C  A4D8               	btfss	status,2,c
  2795   00380E  EF0B  F01C         	goto	u8981
  2796   003812  EF0D  F01C         	goto	u8980
  2797   003816                     u8981:
  2798   003816  EF0F  F01C         	goto	l342
  2799   00381A                     u8980:
  2800   00381A                     
  2801                           ;GPIO.c: 78:             GPIOi = 0;
  2802   00381A  0E00               	movlw	0
  2803   00381C  6E24               	movwf	runGPIO@GPIOi^0,c
  2804   00381E                     l342:
  2805                           
  2806                           ;GPIO.c: 70:     while(keepStateGPIO){
  2807   00381E  0100               	movlb	0	; () banked
  2808   003820  51EE               	movf	_keepStateGPIO& (0+255),w,b
  2809   003822  A4D8               	btfss	status,2,c
  2810   003824  EF16  F01C         	goto	u8991
  2811   003828  EF18  F01C         	goto	u8990
  2812   00382C                     u8991:
  2813   00382C  EFB0  F01B         	goto	l6971
  2814   003830                     u8990:
  2815   003830                     
  2816                           ; BSR set to: 0
  2817                           ;GPIO.c: 83:     LATDbits.LD2 = 1;
  2818   003830  848C               	bsf	140,2,c	;volatile
  2819                           
  2820                           ;GPIO.c: 84:     LATDbits.LD3 = 1;
  2821   003832  868C               	bsf	140,3,c	;volatile
  2822                           
  2823                           ;GPIO.c: 85:     LATCbits.LC4 = 1;
  2824   003834  888B               	bsf	139,4,c	;volatile
  2825                           
  2826                           ;GPIO.c: 86:     LATDbits.LD4 = 1;
  2827   003836  888C               	bsf	140,4,c	;volatile
  2828                           
  2829                           ;GPIO.c: 87:     LATDbits.LD5 = 1;
  2830   003838  8A8C               	bsf	140,5,c	;volatile
  2831                           
  2832                           ;GPIO.c: 88:     LATDbits.LD6 = 1;
  2833   00383A  8C8C               	bsf	140,6,c	;volatile
  2834                           
  2835                           ;GPIO.c: 89:     TMR1ON = 0;
  2836   00383C  90CD               	bcf	4045,0,c	;volatile
  2837                           
  2838                           ;GPIO.c: 90:     TMR1IE = 0;
  2839   00383E  909D               	bcf	3997,0,c	;volatile
  2840   003840                     
  2841                           ; BSR set to: 0
  2842                           ;GPIO.c: 91:     GPIOIE = 0;
  2843   003840  0E00               	movlw	0
  2844   003842  0101               	movlb	1	; () banked
  2845   003844  6F24               	movwf	_GPIOIE& (0+255),b
  2846   003846                     
  2847                           ; BSR set to: 1
  2848   003846  0012               	return		;funcret
  2849   003848                     __end_of_runGPIO:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _LED5_Control *****************
  2853 ;; Defined at:
  2854 ;;		line 14 in file "GPIO.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  state           1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  state           1    5[COMRAM] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:        1 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_runGPIO
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text4
  2883   0047F6                     __ptext4:
  2884                           	callstack 0
  2885   0047F6                     _LED5_Control:
  2886                           	callstack 28
  2887                           
  2888                           ; BSR set to: 1
  2889                           ;incstack = 0
  2890                           ;LED5_Control@state stored from wreg
  2891   0047F6  6E06               	movwf	LED5_Control@state^0,c
  2892   0047F8  B006               	btfsc	LED5_Control@state^0,0,c
  2893   0047FA  D002               	bra	u8845
  2894   0047FC  9A8C               	bcf	140,5,c	;volatile
  2895   0047FE  D001               	bra	u8846
  2896   004800                     u8845:
  2897   004800  8A8C               	bsf	140,5,c	;volatile
  2898   004802                     u8846:
  2899   004802  0012               	return		;funcret
  2900   004804                     __end_of_LED5_Control:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _LED4_Control *****************
  2904 ;; Defined at:
  2905 ;;		line 13 in file "GPIO.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  state           1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  state           1    5[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        1 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 1
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_runGPIO
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text5
  2934   004804                     __ptext5:
  2935                           	callstack 0
  2936   004804                     _LED4_Control:
  2937                           	callstack 28
  2938                           
  2939                           ;incstack = 0
  2940                           ;LED4_Control@state stored from wreg
  2941   004804  6E06               	movwf	LED4_Control@state^0,c
  2942   004806  B006               	btfsc	LED4_Control@state^0,0,c
  2943   004808  D002               	bra	u8835
  2944   00480A  988C               	bcf	140,4,c	;volatile
  2945   00480C  D001               	bra	u8836
  2946   00480E                     u8835:
  2947   00480E  888C               	bsf	140,4,c	;volatile
  2948   004810                     u8836:
  2949   004810  0012               	return		;funcret
  2950   004812                     __end_of_LED4_Control:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _LED3_Control *****************
  2954 ;; Defined at:
  2955 ;;		line 12 in file "GPIO.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  state           1    wreg     unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  state           1    5[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;Total ram usage:        1 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_runGPIO
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text6
  2984   004812                     __ptext6:
  2985                           	callstack 0
  2986   004812                     _LED3_Control:
  2987                           	callstack 28
  2988                           
  2989                           ;incstack = 0
  2990                           ;LED3_Control@state stored from wreg
  2991   004812  6E06               	movwf	LED3_Control@state^0,c
  2992   004814  B006               	btfsc	LED3_Control@state^0,0,c
  2993   004816  D002               	bra	u8825
  2994   004818  988B               	bcf	139,4,c	;volatile
  2995   00481A  D001               	bra	u8826
  2996   00481C                     u8825:
  2997   00481C  888B               	bsf	139,4,c	;volatile
  2998   00481E                     u8826:
  2999   00481E  0012               	return		;funcret
  3000   004820                     __end_of_LED3_Control:
  3001                           	callstack 0
  3002                           
  3003 ;; *************** function _LED2_Control *****************
  3004 ;; Defined at:
  3005 ;;		line 11 in file "GPIO.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  state           1    wreg     unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  state           1    5[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        1 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_runGPIO
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text7
  3034   004820                     __ptext7:
  3035                           	callstack 0
  3036   004820                     _LED2_Control:
  3037                           	callstack 28
  3038                           
  3039                           ;incstack = 0
  3040                           ;LED2_Control@state stored from wreg
  3041   004820  6E06               	movwf	LED2_Control@state^0,c
  3042   004822  B006               	btfsc	LED2_Control@state^0,0,c
  3043   004824  D002               	bra	u8815
  3044   004826  968C               	bcf	140,3,c	;volatile
  3045   004828  D001               	bra	u8816
  3046   00482A                     u8815:
  3047   00482A  868C               	bsf	140,3,c	;volatile
  3048   00482C                     u8816:
  3049   00482C  0012               	return		;funcret
  3050   00482E                     __end_of_LED2_Control:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _LED1_Control *****************
  3054 ;; Defined at:
  3055 ;;		line 10 in file "GPIO.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  state           1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  state           1    5[COMRAM] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;Total ram usage:        1 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_runGPIO
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text8
  3084   00482E                     __ptext8:
  3085                           	callstack 0
  3086   00482E                     _LED1_Control:
  3087                           	callstack 28
  3088                           
  3089                           ;incstack = 0
  3090                           ;LED1_Control@state stored from wreg
  3091   00482E  6E06               	movwf	LED1_Control@state^0,c
  3092   004830  B006               	btfsc	LED1_Control@state^0,0,c
  3093   004832  D002               	bra	u8805
  3094   004834  948C               	bcf	140,2,c	;volatile
  3095   004836  D001               	bra	u8806
  3096   004838                     u8805:
  3097   004838  848C               	bsf	140,2,c	;volatile
  3098   00483A                     u8806:
  3099   00483A  0012               	return		;funcret
  3100   00483C                     __end_of_LED1_Control:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _LED6_Control *****************
  3104 ;; Defined at:
  3105 ;;		line 15 in file "GPIO.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  state           1    wreg     unsigned char 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  state           1    5[COMRAM] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;Total ram usage:        1 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_runGPIO
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text9
  3134   00483C                     __ptext9:
  3135                           	callstack 0
  3136   00483C                     _LED6_Control:
  3137                           	callstack 28
  3138                           
  3139                           ;incstack = 0
  3140                           ;LED6_Control@state stored from wreg
  3141   00483C  6E06               	movwf	LED6_Control@state^0,c
  3142   00483E  B006               	btfsc	LED6_Control@state^0,0,c
  3143   004840  D002               	bra	u8855
  3144   004842  9C8C               	bcf	140,6,c	;volatile
  3145   004844  D001               	bra	u8856
  3146   004846                     u8855:
  3147   004846  8C8C               	bsf	140,6,c	;volatile
  3148   004848                     u8856:
  3149   004848  0012               	return		;funcret
  3150   00484A                     __end_of_LED6_Control:
  3151                           	callstack 0
  3152                           
  3153 ;; *************** function _runDAC *****************
  3154 ;; Defined at:
  3155 ;;		line 10 in file "DAC.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  DACindex        1  125[BANK0 ] unsigned char 
  3160 ;;  selectModeDA    1  124[BANK0 ] unsigned char 
  3161 ;;  keepState       1  123[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;Total ram usage:       12 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 9
  3178 ;; This function calls:
  3179 ;;		_SPI_write
  3180 ;;		___fladd
  3181 ;;		___fldiv
  3182 ;;		___flmul
  3183 ;;		___fltol
  3184 ;;		___xxtofl
  3185 ;;		_printf
  3186 ;;		_sinf
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text10
  3193   00246C                     __ptext10:
  3194                           	callstack 0
  3195   00246C                     _runDAC:
  3196                           	callstack 21
  3197   00246C                     
  3198                           ;DAC.c: 12:     TRISCbits.RC0 = 1;
  3199   00246C  8094               	bsf	148,0,c	;volatile
  3200                           
  3201                           ;DAC.c: 13:     TRISAbits.RA4 = 1;
  3202   00246E  8892               	bsf	146,4,c	;volatile
  3203                           
  3204                           ;DAC.c: 14:     TRISAbits.RA3 = 1;
  3205   002470  8692               	bsf	146,3,c	;volatile
  3206                           
  3207                           ;DAC.c: 15:     TRISAbits.RA2 = 1;
  3208   002472  8492               	bsf	146,2,c	;volatile
  3209                           
  3210                           ;DAC.c: 16:     ANSELAbits.ANSA3 = 0;
  3211   002474  010F               	movlb	15	; () banked
  3212   002476  9738               	bcf	56,3,b	;volatile
  3213                           
  3214                           ;DAC.c: 17:     ANSELAbits.ANSA2 = 0;
  3215   002478  9538               	bcf	56,2,b	;volatile
  3216                           
  3217                           ;DAC.c: 20:     TRISBbits.RB3 = 0;
  3218   00247A  9693               	bcf	147,3,c	;volatile
  3219                           
  3220                           ;DAC.c: 21:     TRISCbits.RC3 = 0;
  3221   00247C  9694               	bcf	148,3,c	;volatile
  3222                           
  3223                           ;DAC.c: 22:     TRISCbits.RC5 = 0;
  3224   00247E  9A94               	bcf	148,5,c	;volatile
  3225   002480                     
  3226                           ; BSR set to: 15
  3227                           ;DAC.c: 24:     SSP1CON1bits.SSPM = 0b0010;
  3228   002480  50C6               	movf	198,w,c	;volatile
  3229   002482  0BF0               	andlw	-16
  3230   002484  0902               	iorlw	2
  3231   002486  6EC6               	movwf	198,c	;volatile
  3232   002488                     
  3233                           ; BSR set to: 15
  3234                           ;DAC.c: 25:     SSP1CON1bits.CKP = 0;
  3235   002488  98C6               	bcf	198,4,c	;volatile
  3236   00248A                     
  3237                           ; BSR set to: 15
  3238                           ;DAC.c: 26:     SSP1STATbits.CKE = 1;
  3239   00248A  8CC7               	bsf	199,6,c	;volatile
  3240   00248C                     
  3241                           ; BSR set to: 15
  3242                           ;DAC.c: 27:     SSP1CON1bits.SSPEN = 1;
  3243   00248C  8AC6               	bsf	198,5,c	;volatile
  3244   00248E                     
  3245                           ; BSR set to: 15
  3246                           ;DAC.c: 30:     ANSELBbits.ANSB0 = 1;
  3247   00248E  8139               	bsf	57,0,b	;volatile
  3248   002490                     
  3249                           ; BSR set to: 15
  3250                           ;DAC.c: 32:     ADCON2bits.ADFM = 0;
  3251   002490  9EC0               	bcf	192,7,c	;volatile
  3252                           
  3253                           ;DAC.c: 33:     ADCON2bits.ADCS = 0b110;
  3254   002492  50C0               	movf	192,w,c	;volatile
  3255   002494  0BF8               	andlw	-8
  3256   002496  0906               	iorlw	6
  3257   002498  6EC0               	movwf	192,c	;volatile
  3258                           
  3259                           ;DAC.c: 34:     ADCON2bits.ACQT = 0b110;
  3260   00249A  50C0               	movf	192,w,c	;volatile
  3261   00249C  0BC7               	andlw	-57
  3262   00249E  0930               	iorlw	48
  3263   0024A0  6EC0               	movwf	192,c	;volatile
  3264   0024A2                     
  3265                           ; BSR set to: 15
  3266                           ;DAC.c: 35:     ADCON0bits.ADON = 1;
  3267   0024A2  80C2               	bsf	194,0,c	;volatile
  3268                           
  3269                           ;DAC.c: 38:     SPBRG1 = 25;
  3270   0024A4  0E19               	movlw	25
  3271   0024A6  6EAF               	movwf	175,c	;volatile
  3272   0024A8                     
  3273                           ; BSR set to: 15
  3274                           ;DAC.c: 39:     RCSTA1bits.SPEN = 1;
  3275   0024A8  8EAB               	bsf	171,7,c	;volatile
  3276   0024AA                     
  3277                           ; BSR set to: 15
  3278                           ;DAC.c: 40:     TXSTA1bits.SYNC = 0;
  3279   0024AA  98AC               	bcf	172,4,c	;volatile
  3280   0024AC                     
  3281                           ; BSR set to: 15
  3282                           ;DAC.c: 41:     TXSTA1bits.TXEN = 1;
  3283   0024AC  8AAC               	bsf	172,5,c	;volatile
  3284   0024AE                     
  3285                           ; BSR set to: 15
  3286                           ;DAC.c: 42:     RCSTA1bits.CREN = 1;
  3287   0024AE  88AB               	bsf	171,4,c	;volatile
  3288   0024B0                     
  3289                           ; BSR set to: 15
  3290                           ;DAC.c: 45:     LATBbits.LB3 = 1;
  3291   0024B0  868A               	bsf	138,3,c	;volatile
  3292                           
  3293                           ;DAC.c: 47:     ADCON0bits.CHS = 12;
  3294   0024B2  50C2               	movf	194,w,c	;volatile
  3295   0024B4  0B83               	andlw	-125
  3296   0024B6  0930               	iorlw	48
  3297   0024B8  6EC2               	movwf	194,c	;volatile
  3298                           
  3299                           ;DAC.c: 49:     uint8_t selectModeDAC = 1;
  3300   0024BA  0E01               	movlw	1
  3301   0024BC  0100               	movlb	0	; () banked
  3302   0024BE  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3303                           
  3304                           ;DAC.c: 50:     uint8_t keepState;;DAC.c: 51:     keepState = 1;
  3305   0024C0  0E01               	movlw	1
  3306   0024C2  6FDB               	movwf	runDAC@keepState& (0+255),b
  3307                           
  3308                           ;DAC.c: 52:     uint8_t DACindex = 0;
  3309   0024C4  0E00               	movlw	0
  3310   0024C6  6FDD               	movwf	runDAC@DACindex& (0+255),b
  3311                           
  3312                           ;DAC.c: 54:     while(keepState){
  3313   0024C8  EFA0  F013         	goto	l7191
  3314   0024CC                     l7149:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;DAC.c: 57:                 if(DACindex<255/2){
  3318   0024CC  0E7F               	movlw	127
  3319   0024CE  61DD               	cpfslt	runDAC@DACindex& (0+255),b
  3320   0024D0  EF6C  F012         	goto	u9221
  3321   0024D4  EF6E  F012         	goto	u9220
  3322   0024D8                     u9221:
  3323   0024D8  EF96  F012         	goto	l7153
  3324   0024DC                     u9220:
  3325   0024DC                     
  3326                           ; BSR set to: 0
  3327                           ;DAC.c: 58:                     SPI_write((uint8_t)(1.9*DACindex));
  3328   0024DC  0E33               	movlw	51
  3329   0024DE  6E18               	movwf	___flmul@a^0,c
  3330   0024E0  0E33               	movlw	51
  3331   0024E2  6E19               	movwf	(___flmul@a+1)^0,c
  3332   0024E4  0EF3               	movlw	243
  3333   0024E6  6E1A               	movwf	(___flmul@a+2)^0,c
  3334   0024E8  0E3F               	movlw	63
  3335   0024EA  6E1B               	movwf	(___flmul@a+3)^0,c
  3336   0024EC  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3337   0024EE  6E06               	movwf	___xxtofl@val^0,c
  3338   0024F0  6A07               	clrf	(___xxtofl@val+1)^0,c
  3339   0024F2  6A08               	clrf	(___xxtofl@val+2)^0,c
  3340   0024F4  6A09               	clrf	(___xxtofl@val+3)^0,c
  3341   0024F6  0E01               	movlw	1
  3342   0024F8  EC05  F019         	call	___xxtofl
  3343   0024FC  C006  F014         	movff	?___xxtofl,___flmul@b
  3344   002500  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3345   002504  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3346   002508  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3347   00250C  EC68  F00A         	call	___flmul	;wreg free
  3348   002510  C014  F064         	movff	?___flmul,___fltol@f1
  3349   002514  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3350   002518  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3351   00251C  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3352   002520  EC4E  F01D         	call	___fltol	;wreg free
  3353   002524  0100               	movlb	0	; () banked
  3354   002526  5164               	movf	?___fltol& (0+255),w,b
  3355   002528  EC1A  F023         	call	_SPI_write
  3356   00252C                     l7153:
  3357                           
  3358                           ;DAC.c: 60:                 if(DACindex>=255/2){
  3359   00252C  0E7E               	movlw	126
  3360   00252E  0100               	movlb	0	; () banked
  3361   002530  65DD               	cpfsgt	runDAC@DACindex& (0+255),b
  3362   002532  EF9D  F012         	goto	u9231
  3363   002536  EF9F  F012         	goto	u9230
  3364   00253A                     u9231:
  3365   00253A  EF5B  F013         	goto	l215
  3366   00253E                     u9230:
  3367   00253E                     
  3368                           ; BSR set to: 0
  3369                           ;DAC.c: 61:                     SPI_write((uint8_t)(1.9*(255-DACindex)));
  3370   00253E  0E33               	movlw	51
  3371   002540  6E18               	movwf	___flmul@a^0,c
  3372   002542  0E33               	movlw	51
  3373   002544  6E19               	movwf	(___flmul@a+1)^0,c
  3374   002546  0EF3               	movlw	243
  3375   002548  6E1A               	movwf	(___flmul@a+2)^0,c
  3376   00254A  0E3F               	movlw	63
  3377   00254C  6E1B               	movwf	(___flmul@a+3)^0,c
  3378   00254E  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3379   002550  0AFF               	xorlw	255
  3380   002552  6FD2               	movwf	??_runDAC& (0+255),b
  3381   002554  51D2               	movf	??_runDAC& (0+255),w,b
  3382   002556  6E06               	movwf	___xxtofl@val^0,c
  3383   002558  6A07               	clrf	(___xxtofl@val+1)^0,c
  3384   00255A  6A08               	clrf	(___xxtofl@val+2)^0,c
  3385   00255C  6A09               	clrf	(___xxtofl@val+3)^0,c
  3386   00255E  0E01               	movlw	1
  3387   002560  EC05  F019         	call	___xxtofl
  3388   002564  C006  F014         	movff	?___xxtofl,___flmul@b
  3389   002568  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3390   00256C  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3391   002570  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3392   002574  EC68  F00A         	call	___flmul	;wreg free
  3393   002578  C014  F064         	movff	?___flmul,___fltol@f1
  3394   00257C  C015  F065         	movff	?___flmul+1,___fltol@f1+1
  3395   002580  C016  F066         	movff	?___flmul+2,___fltol@f1+2
  3396   002584  C017  F067         	movff	?___flmul+3,___fltol@f1+3
  3397   002588  EC4E  F01D         	call	___fltol	;wreg free
  3398   00258C  0100               	movlb	0	; () banked
  3399   00258E  5164               	movf	?___fltol& (0+255),w,b
  3400   002590  EC1A  F023         	call	_SPI_write
  3401   002594  EF5B  F013         	goto	l215
  3402   002598                     l7157:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3406   002598  0E00               	movlw	0
  3407   00259A  6E31               	movwf	___fldiv@a^0,c
  3408   00259C  0E00               	movlw	0
  3409   00259E  6E32               	movwf	(___fldiv@a+1)^0,c
  3410   0025A0  0E7F               	movlw	127
  3411   0025A2  6E33               	movwf	(___fldiv@a+2)^0,c
  3412   0025A4  0E43               	movlw	67
  3413   0025A6  6E34               	movwf	(___fldiv@a+3)^0,c
  3414   0025A8  0EC3               	movlw	195
  3415   0025AA  6E18               	movwf	___flmul@a^0,c
  3416   0025AC  0EF5               	movlw	245
  3417   0025AE  6E19               	movwf	(___flmul@a+1)^0,c
  3418   0025B0  0EC8               	movlw	200
  3419   0025B2  6E1A               	movwf	(___flmul@a+2)^0,c
  3420   0025B4  0E40               	movlw	64
  3421   0025B6  6E1B               	movwf	(___flmul@a+3)^0,c
  3422   0025B8  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3423   0025BA  6E06               	movwf	___xxtofl@val^0,c
  3424   0025BC  6A07               	clrf	(___xxtofl@val+1)^0,c
  3425   0025BE  6A08               	clrf	(___xxtofl@val+2)^0,c
  3426   0025C0  6A09               	clrf	(___xxtofl@val+3)^0,c
  3427   0025C2  0E01               	movlw	1
  3428   0025C4  EC05  F019         	call	___xxtofl
  3429   0025C8  C006  F014         	movff	?___xxtofl,___flmul@b
  3430   0025CC  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  3431   0025D0  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  3432   0025D4  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  3433   0025D8  EC68  F00A         	call	___flmul	;wreg free
  3434   0025DC  C014  F02D         	movff	?___flmul,___fldiv@b
  3435   0025E0  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  3436   0025E4  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  3437   0025E8  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  3438   0025EC  EC69  F010         	call	___fldiv	;wreg free
  3439   0025F0  C02D  F0D3         	movff	?___fldiv,_runDAC$4117
  3440   0025F4  C02E  F0D4         	movff	?___fldiv+1,_runDAC$4117+1
  3441   0025F8  C02F  F0D5         	movff	?___fldiv+2,_runDAC$4117+2
  3442   0025FC  C030  F0D6         	movff	?___fldiv+3,_runDAC$4117+3
  3443   002600                     
  3444                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3445   002600  C0D3  F0A4         	movff	_runDAC$4117,sinf@x
  3446   002604  C0D4  F0A5         	movff	_runDAC$4117+1,sinf@x+1
  3447   002608  C0D5  F0A6         	movff	_runDAC$4117+2,sinf@x+2
  3448   00260C  C0D6  F0A7         	movff	_runDAC$4117+3,sinf@x+3
  3449   002610  EC82  F005         	call	_sinf	;wreg free
  3450   002614  C0A4  F0D7         	movff	?_sinf,_runDAC$4118
  3451   002618  C0A5  F0D8         	movff	?_sinf+1,_runDAC$4118+1
  3452   00261C  C0A6  F0D9         	movff	?_sinf+2,_runDAC$4118+2
  3453   002620  C0A7  F0DA         	movff	?_sinf+3,_runDAC$4118+3
  3454   002624                     
  3455                           ;DAC.c: 65:                 SPI_write((uint8_t)(255/2*sinf(2*3.14*DACindex/255)+255/2));
  3456   002624  0E00               	movlw	0
  3457   002626  6E4A               	movwf	___fladd@a^0,c
  3458   002628  0E00               	movlw	0
  3459   00262A  6E4B               	movwf	(___fladd@a+1)^0,c
  3460   00262C  0EFE               	movlw	254
  3461   00262E  6E4C               	movwf	(___fladd@a+2)^0,c
  3462   002630  0E42               	movlw	66
  3463   002632  6E4D               	movwf	(___fladd@a+3)^0,c
  3464   002634  0E00               	movlw	0
  3465   002636  6E18               	movwf	___flmul@a^0,c
  3466   002638  0E00               	movlw	0
  3467   00263A  6E19               	movwf	(___flmul@a+1)^0,c
  3468   00263C  0EFE               	movlw	254
  3469   00263E  6E1A               	movwf	(___flmul@a+2)^0,c
  3470   002640  0E42               	movlw	66
  3471   002642  6E1B               	movwf	(___flmul@a+3)^0,c
  3472   002644  C0D7  F014         	movff	_runDAC$4118,___flmul@b
  3473   002648  C0D8  F015         	movff	_runDAC$4118+1,___flmul@b+1
  3474   00264C  C0D9  F016         	movff	_runDAC$4118+2,___flmul@b+2
  3475   002650  C0DA  F017         	movff	_runDAC$4118+3,___flmul@b+3
  3476   002654  EC68  F00A         	call	___flmul	;wreg free
  3477   002658  C014  F046         	movff	?___flmul,___fladd@b
  3478   00265C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  3479   002660  C016  F048         	movff	?___flmul+2,___fladd@b+2
  3480   002664  C017  F049         	movff	?___flmul+3,___fladd@b+3
  3481   002668  EC07  F008         	call	___fladd	;wreg free
  3482   00266C  C046  F064         	movff	?___fladd,___fltol@f1
  3483   002670  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  3484   002674  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  3485   002678  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  3486   00267C  EC4E  F01D         	call	___fltol	;wreg free
  3487   002680  0100               	movlb	0	; () banked
  3488   002682  5164               	movf	?___fltol& (0+255),w,b
  3489   002684  EC1A  F023         	call	_SPI_write
  3490                           
  3491                           ;DAC.c: 66:                 break;
  3492   002688  EF5B  F013         	goto	l215
  3493   00268C                     l7163:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;DAC.c: 68:                 SPI_write(255 - DACindex);
  3497   00268C  51DD               	movf	runDAC@DACindex& (0+255),w,b
  3498   00268E  0AFF               	xorlw	255
  3499   002690  EC1A  F023         	call	_SPI_write
  3500                           
  3501                           ;DAC.c: 69:                 break;
  3502   002694  EF5B  F013         	goto	l215
  3503   002698                     l7167:
  3504                           
  3505                           ; BSR set to: 0
  3506   002698  51DC               	movf	runDAC@selectModeDAC& (0+255),w,b
  3507                           
  3508                           ; Switch size 1, requested type "simple"
  3509                           ; Number of cases is 3, Range of values is 1 to 3
  3510                           ; switch strategies available:
  3511                           ; Name         Instructions Cycles
  3512                           ; simple_byte           10     6 (average)
  3513                           ;	Chosen strategy is simple_byte
  3514   00269A  0A01               	xorlw	1	; case 1
  3515   00269C  B4D8               	btfsc	status,2,c
  3516   00269E  EF66  F012         	goto	l7149
  3517   0026A2  0A03               	xorlw	3	; case 2
  3518   0026A4  B4D8               	btfsc	status,2,c
  3519   0026A6  EFCC  F012         	goto	l7157
  3520   0026AA  0A01               	xorlw	1	; case 3
  3521   0026AC  B4D8               	btfsc	status,2,c
  3522   0026AE  EF46  F013         	goto	l7163
  3523   0026B2  EF5B  F013         	goto	l215
  3524   0026B6                     l215:
  3525                           
  3526                           ;DAC.c: 71:         GODONE = 1;
  3527   0026B6  82C2               	bsf	4034,1,c	;volatile
  3528   0026B8                     l218:
  3529   0026B8  B2C2               	btfsc	4034,1,c	;volatile
  3530   0026BA  EF61  F013         	goto	u9241
  3531   0026BE  EF63  F013         	goto	u9240
  3532   0026C2                     u9241:
  3533   0026C2  EF5C  F013         	goto	l218
  3534   0026C6                     u9240:
  3535   0026C6                     
  3536                           ;DAC.c: 74:         printf("%d \r", ADRESH);
  3537   0026C6  0EE5               	movlw	low STR_10
  3538   0026C8  0100               	movlb	0	; () banked
  3539   0026CA  6FCE               	movwf	printf@fmt& (0+255),b
  3540   0026CC  0EFF               	movlw	high STR_10
  3541   0026CE  6FCF               	movwf	(printf@fmt+1)& (0+255),b
  3542   0026D0  CFC4 F0D0          	movff	4036,?_printf+2	;volatile
  3543   0026D4  6BD1               	clrf	(?_printf+3)& (0+255),b
  3544   0026D6  ECE0  F023         	call	_printf	;wreg free
  3545   0026DA                     
  3546                           ;DAC.c: 75:         if(PORTCbits.RC0){
  3547   0026DA  A082               	btfss	130,0,c	;volatile
  3548   0026DC  EF72  F013         	goto	u9251
  3549   0026E0  EF74  F013         	goto	u9250
  3550   0026E4                     u9251:
  3551   0026E4  EF77  F013         	goto	l7175
  3552   0026E8                     u9250:
  3553   0026E8                     
  3554                           ;DAC.c: 76:             selectModeDAC = 1;
  3555   0026E8  0E01               	movlw	1
  3556   0026EA  0100               	movlb	0	; () banked
  3557   0026EC  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3558   0026EE                     l7175:
  3559                           
  3560                           ;DAC.c: 78:         if(PORTAbits.RA4){
  3561   0026EE  A880               	btfss	128,4,c	;volatile
  3562   0026F0  EF7C  F013         	goto	u9261
  3563   0026F4  EF7E  F013         	goto	u9260
  3564   0026F8                     u9261:
  3565   0026F8  EF81  F013         	goto	l7179
  3566   0026FC                     u9260:
  3567   0026FC                     
  3568                           ;DAC.c: 79:             selectModeDAC = 2;
  3569   0026FC  0E02               	movlw	2
  3570   0026FE  0100               	movlb	0	; () banked
  3571   002700  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3572   002702                     l7179:
  3573                           
  3574                           ;DAC.c: 81:         if(PORTAbits.RA3){
  3575   002702  A680               	btfss	128,3,c	;volatile
  3576   002704  EF86  F013         	goto	u9271
  3577   002708  EF88  F013         	goto	u9270
  3578   00270C                     u9271:
  3579   00270C  EF8B  F013         	goto	l7183
  3580   002710                     u9270:
  3581   002710                     
  3582                           ;DAC.c: 82:             selectModeDAC = 3;
  3583   002710  0E03               	movlw	3
  3584   002712  0100               	movlb	0	; () banked
  3585   002714  6FDC               	movwf	runDAC@selectModeDAC& (0+255),b
  3586   002716                     l7183:
  3587                           
  3588                           ;DAC.c: 84:         if(PORTAbits.RA2){
  3589   002716  A480               	btfss	128,2,c	;volatile
  3590   002718  EF90  F013         	goto	u9281
  3591   00271C  EF92  F013         	goto	u9280
  3592   002720                     u9281:
  3593   002720  EF95  F013         	goto	l7187
  3594   002724                     u9280:
  3595   002724                     
  3596                           ;DAC.c: 85:             keepState = 0;
  3597   002724  0E00               	movlw	0
  3598   002726  0100               	movlb	0	; () banked
  3599   002728  6FDB               	movwf	runDAC@keepState& (0+255),b
  3600   00272A                     l7187:
  3601                           
  3602                           ;DAC.c: 87:         DACindex++;
  3603   00272A  0100               	movlb	0	; () banked
  3604   00272C  2BDD               	incf	runDAC@DACindex& (0+255),f,b
  3605   00272E                     
  3606                           ; BSR set to: 0
  3607                           ;DAC.c: 88:         _delay((unsigned long)((10)*(32E6/4000.0)));
  3608   00272E  0E68               	movlw	104
  3609   002730  0100               	movlb	0	; () banked
  3610   002732  6FD2               	movwf	??_runDAC& (0+255),b
  3611   002734  0EE4               	movlw	228
  3612   002736                     u9507:
  3613   002736  2EE8               	decfsz	wreg,f,c
  3614   002738  D7FE               	bra	u9507
  3615   00273A  2FD2               	decfsz	??_runDAC& (0+255),f,b
  3616   00273C  D7FC               	bra	u9507
  3617   00273E  0000               	nop	
  3618   002740                     l7191:
  3619                           
  3620                           ;DAC.c: 54:     while(keepState){
  3621   002740  0100               	movlb	0	; () banked
  3622   002742  51DB               	movf	runDAC@keepState& (0+255),w,b
  3623   002744  A4D8               	btfss	status,2,c
  3624   002746  EFA7  F013         	goto	u9291
  3625   00274A  EFA9  F013         	goto	u9290
  3626   00274E                     u9291:
  3627   00274E  EF4C  F013         	goto	l7167
  3628   002752                     u9290:
  3629   002752                     
  3630                           ; BSR set to: 0
  3631   002752  0012               	return		;funcret
  3632   002754                     __end_of_runDAC:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _sinf *****************
  3636 ;; Defined at:
  3637 ;;		line 27 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sinf.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  x               4   68[BANK0 ] float 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  ux              4   90[BANK0 ] struct .
  3642 ;;  y               4   86[BANK0 ] struct .
  3643 ;;  sign            1   81[BANK0 ] _Bool 
  3644 ;;  n               1   80[BANK0 ] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  4   68[BANK0 ] float 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;Total ram usage:       26 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 4
  3661 ;; This function calls:
  3662 ;;		___cosdf
  3663 ;;		___fladd
  3664 ;;		___flneg
  3665 ;;		___rem_pio2f
  3666 ;;		___sindf
  3667 ;; This function is called by:
  3668 ;;		_runDAC
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text11
  3673   000B04                     __ptext11:
  3674                           	callstack 0
  3675   000B04                     _sinf:
  3676                           	callstack 25
  3677   000B04  C0A4  F0BA         	movff	sinf@x,sinf@ux
  3678   000B08  C0A5  F0BB         	movff	sinf@x+1,sinf@ux+1
  3679   000B0C  C0A6  F0BC         	movff	sinf@x+2,sinf@ux+2
  3680   000B10  C0A7  F0BD         	movff	sinf@x+3,sinf@ux+3
  3681   000B14  0100               	movlb	0	; () banked
  3682   000B16  BFBD               	btfsc	(sinf@ux+3)& (0+255),7,b
  3683   000B18  EF90  F005         	goto	u8671
  3684   000B1C  EF93  F005         	goto	u8670
  3685   000B20                     u8671:
  3686   000B20  0E01               	movlw	1
  3687   000B22  EF94  F005         	goto	u8680
  3688   000B26                     u8670:
  3689   000B26  0E00               	movlw	0
  3690   000B28                     u8680:
  3691   000B28  6FB1               	movwf	sinf@sign& (0+255),b
  3692   000B2A                     
  3693                           ; BSR set to: 0
  3694   000B2A  9FBD               	bcf	(sinf@ux+3)& (0+255),7,b
  3695   000B2C                     
  3696                           ; BSR set to: 0
  3697   000B2C  0EDB               	movlw	219
  3698   000B2E  5DBA               	subwf	sinf@ux& (0+255),w,b
  3699   000B30  0E0F               	movlw	15
  3700   000B32  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3701   000B34  0E49               	movlw	73
  3702   000B36  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3703   000B38  0E3F               	movlw	63
  3704   000B3A  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3705   000B3C  B0D8               	btfsc	status,0,c
  3706   000B3E  EFA3  F005         	goto	u8691
  3707   000B42  EFA5  F005         	goto	u8690
  3708   000B46                     u8691:
  3709   000B46  EFCE  F005         	goto	l6795
  3710   000B4A                     u8690:
  3711   000B4A                     
  3712                           ; BSR set to: 0
  3713   000B4A  0E80               	movlw	128
  3714   000B4C  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  3715   000B4E  0E39               	movlw	57
  3716   000B50  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3717   000B52  B0D8               	btfsc	status,0,c
  3718   000B54  EFAE  F005         	goto	u8701
  3719   000B58  EFB0  F005         	goto	u8700
  3720   000B5C                     u8701:
  3721   000B5C  EFBA  F005         	goto	l6791
  3722   000B60                     u8700:
  3723   000B60                     
  3724                           ; BSR set to: 0
  3725   000B60  C0A4  F0A4         	movff	sinf@x,?_sinf
  3726   000B64  C0A5  F0A5         	movff	sinf@x+1,?_sinf+1
  3727   000B68  C0A6  F0A6         	movff	sinf@x+2,?_sinf+2
  3728   000B6C  C0A7  F0A7         	movff	sinf@x+3,?_sinf+3
  3729   000B70  EF06  F008         	goto	l1489
  3730   000B74                     l6791:
  3731                           
  3732                           ; BSR set to: 0
  3733   000B74  C0A4  F064         	movff	sinf@x,___sindf@x
  3734   000B78  C0A5  F065         	movff	sinf@x+1,___sindf@x+1
  3735   000B7C  C0A6  F066         	movff	sinf@x+2,___sindf@x+2
  3736   000B80  C0A7  F067         	movff	sinf@x+3,___sindf@x+3
  3737   000B84  ECD9  F014         	call	___sindf	;wreg free
  3738   000B88  C064  F0A4         	movff	?___sindf,?_sinf
  3739   000B8C  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  3740   000B90  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  3741   000B94  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  3742   000B98  EF06  F008         	goto	l1489
  3743   000B9C                     l6795:
  3744                           
  3745                           ; BSR set to: 0
  3746   000B9C  0ED2               	movlw	210
  3747   000B9E  5DBA               	subwf	sinf@ux& (0+255),w,b
  3748   000BA0  0E53               	movlw	83
  3749   000BA2  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3750   000BA4  0E7B               	movlw	123
  3751   000BA6  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3752   000BA8  0E40               	movlw	64
  3753   000BAA  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3754   000BAC  B0D8               	btfsc	status,0,c
  3755   000BAE  EFDB  F005         	goto	u8711
  3756   000BB2  EFDD  F005         	goto	u8710
  3757   000BB6                     u8711:
  3758   000BB6  EFC0  F006         	goto	l6825
  3759   000BBA                     u8710:
  3760   000BBA                     
  3761                           ; BSR set to: 0
  3762   000BBA  0EE4               	movlw	228
  3763   000BBC  5DBA               	subwf	sinf@ux& (0+255),w,b
  3764   000BBE  0ECB               	movlw	203
  3765   000BC0  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3766   000BC2  0E16               	movlw	22
  3767   000BC4  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3768   000BC6  0E40               	movlw	64
  3769   000BC8  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3770   000BCA  B0D8               	btfsc	status,0,c
  3771   000BCC  EFEA  F005         	goto	u8721
  3772   000BD0  EFEC  F005         	goto	u8720
  3773   000BD4                     u8721:
  3774   000BD4  EF5A  F006         	goto	l6815
  3775   000BD8                     u8720:
  3776   000BD8                     
  3777                           ; BSR set to: 0
  3778   000BD8  51B1               	movf	sinf@sign& (0+255),w,b
  3779   000BDA  B4D8               	btfsc	status,2,c
  3780   000BDC  EFF2  F005         	goto	u8731
  3781   000BE0  EFF4  F005         	goto	u8730
  3782   000BE4                     u8731:
  3783   000BE4  EF2C  F006         	goto	l6809
  3784   000BE8                     u8730:
  3785   000BE8                     
  3786                           ; BSR set to: 0
  3787   000BE8  0EDB               	movlw	219
  3788   000BEA  6E4A               	movwf	___fladd@a^0,c
  3789   000BEC  0E0F               	movlw	15
  3790   000BEE  6E4B               	movwf	(___fladd@a+1)^0,c
  3791   000BF0  0EC9               	movlw	201
  3792   000BF2  6E4C               	movwf	(___fladd@a+2)^0,c
  3793   000BF4  0E3F               	movlw	63
  3794   000BF6  6E4D               	movwf	(___fladd@a+3)^0,c
  3795   000BF8  C0A4  F046         	movff	sinf@x,___fladd@b
  3796   000BFC  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3797   000C00  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3798   000C04  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3799   000C08  EC07  F008         	call	___fladd	;wreg free
  3800   000C0C  C046  F0B2         	movff	?___fladd,_sinf$4120
  3801   000C10  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  3802   000C14  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  3803   000C18  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  3804   000C1C                     l6803:
  3805   000C1C  C0B2  F064         	movff	_sinf$4120,___cosdf@x
  3806   000C20  C0B3  F065         	movff	_sinf$4120+1,___cosdf@x+1
  3807   000C24  C0B4  F066         	movff	_sinf$4120+2,___cosdf@x+2
  3808   000C28  C0B5  F067         	movff	_sinf$4120+3,___cosdf@x+3
  3809   000C2C  EC06  F018         	call	___cosdf	;wreg free
  3810   000C30  C064  F080         	movff	?___cosdf,___flneg@f1
  3811   000C34  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  3812   000C38  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  3813   000C3C  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  3814   000C40  EC39  F023         	call	___flneg	;wreg free
  3815   000C44  C080  F0A4         	movff	?___flneg,?_sinf
  3816   000C48  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  3817   000C4C  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  3818   000C50  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  3819   000C54  EF06  F008         	goto	l1489
  3820   000C58                     l6809:
  3821                           
  3822                           ; BSR set to: 0
  3823   000C58  C0A4  F046         	movff	sinf@x,___fladd@b
  3824   000C5C  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3825   000C60  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3826   000C64  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3827   000C68  0EDB               	movlw	219
  3828   000C6A  6E4A               	movwf	___fladd@a^0,c
  3829   000C6C  0E0F               	movlw	15
  3830   000C6E  6E4B               	movwf	(___fladd@a+1)^0,c
  3831   000C70  0EC9               	movlw	201
  3832   000C72  6E4C               	movwf	(___fladd@a+2)^0,c
  3833   000C74  0EBF               	movlw	191
  3834   000C76  6E4D               	movwf	(___fladd@a+3)^0,c
  3835   000C78  EC07  F008         	call	___fladd	;wreg free
  3836   000C7C  C046  F0B2         	movff	?___fladd,_sinf$4120
  3837   000C80  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  3838   000C84  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  3839   000C88  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  3840   000C8C                     l6811:
  3841   000C8C  C0B2  F064         	movff	_sinf$4120,___cosdf@x
  3842   000C90  C0B3  F065         	movff	_sinf$4120+1,___cosdf@x+1
  3843   000C94  C0B4  F066         	movff	_sinf$4120+2,___cosdf@x+2
  3844   000C98  C0B5  F067         	movff	_sinf$4120+3,___cosdf@x+3
  3845   000C9C  EC06  F018         	call	___cosdf	;wreg free
  3846   000CA0  C064  F0A4         	movff	?___cosdf,?_sinf
  3847   000CA4  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  3848   000CA8  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  3849   000CAC  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  3850   000CB0  EF06  F008         	goto	l1489
  3851   000CB4                     l6815:
  3852                           
  3853                           ; BSR set to: 0
  3854   000CB4  51B1               	movf	sinf@sign& (0+255),w,b
  3855   000CB6  A4D8               	btfss	status,2,c
  3856   000CB8  EF60  F006         	goto	u8741
  3857   000CBC  EF62  F006         	goto	u8740
  3858   000CC0                     u8741:
  3859   000CC0  EF88  F006         	goto	l6819
  3860   000CC4                     u8740:
  3861   000CC4                     
  3862                           ; BSR set to: 0
  3863   000CC4  0EDB               	movlw	219
  3864   000CC6  6E4A               	movwf	___fladd@a^0,c
  3865   000CC8  0E0F               	movlw	15
  3866   000CCA  6E4B               	movwf	(___fladd@a+1)^0,c
  3867   000CCC  0E49               	movlw	73
  3868   000CCE  6E4C               	movwf	(___fladd@a+2)^0,c
  3869   000CD0  0EC0               	movlw	192
  3870   000CD2  6E4D               	movwf	(___fladd@a+3)^0,c
  3871   000CD4  C0A4  F046         	movff	sinf@x,___fladd@b
  3872   000CD8  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3873   000CDC  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3874   000CE0  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3875   000CE4  EC07  F008         	call	___fladd	;wreg free
  3876   000CE8  C046  F080         	movff	?___fladd,___flneg@f1
  3877   000CEC  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  3878   000CF0  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  3879   000CF4  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  3880   000CF8  EC39  F023         	call	___flneg	;wreg free
  3881   000CFC  C080  F0A8         	movff	?___flneg,_sinf$3843
  3882   000D00  C081  F0A9         	movff	?___flneg+1,_sinf$3843+1
  3883   000D04  C082  F0AA         	movff	?___flneg+2,_sinf$3843+2
  3884   000D08  C083  F0AB         	movff	?___flneg+3,_sinf$3843+3
  3885   000D0C  EFAC  F006         	goto	l6821
  3886   000D10                     l6819:
  3887                           
  3888                           ; BSR set to: 0
  3889   000D10  0EDB               	movlw	219
  3890   000D12  6E4A               	movwf	___fladd@a^0,c
  3891   000D14  0E0F               	movlw	15
  3892   000D16  6E4B               	movwf	(___fladd@a+1)^0,c
  3893   000D18  0E49               	movlw	73
  3894   000D1A  6E4C               	movwf	(___fladd@a+2)^0,c
  3895   000D1C  0E40               	movlw	64
  3896   000D1E  6E4D               	movwf	(___fladd@a+3)^0,c
  3897   000D20  C0A4  F046         	movff	sinf@x,___fladd@b
  3898   000D24  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3899   000D28  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3900   000D2C  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3901   000D30  EC07  F008         	call	___fladd	;wreg free
  3902   000D34  C046  F080         	movff	?___fladd,___flneg@f1
  3903   000D38  C047  F081         	movff	?___fladd+1,___flneg@f1+1
  3904   000D3C  C048  F082         	movff	?___fladd+2,___flneg@f1+2
  3905   000D40  C049  F083         	movff	?___fladd+3,___flneg@f1+3
  3906   000D44  EC39  F023         	call	___flneg	;wreg free
  3907   000D48  C080  F0A8         	movff	?___flneg,_sinf$3843
  3908   000D4C  C081  F0A9         	movff	?___flneg+1,_sinf$3843+1
  3909   000D50  C082  F0AA         	movff	?___flneg+2,_sinf$3843+2
  3910   000D54  C083  F0AB         	movff	?___flneg+3,_sinf$3843+3
  3911   000D58                     l6821:
  3912   000D58  C0A8  F064         	movff	_sinf$3843,___sindf@x
  3913   000D5C  C0A9  F065         	movff	_sinf$3843+1,___sindf@x+1
  3914   000D60  C0AA  F066         	movff	_sinf$3843+2,___sindf@x+2
  3915   000D64  C0AB  F067         	movff	_sinf$3843+3,___sindf@x+3
  3916   000D68  ECD9  F014         	call	___sindf	;wreg free
  3917   000D6C  C064  F0A4         	movff	?___sindf,?_sinf
  3918   000D70  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  3919   000D74  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  3920   000D78  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  3921   000D7C  EF06  F008         	goto	l1489
  3922   000D80                     l6825:
  3923                           
  3924                           ; BSR set to: 0
  3925   000D80  0ED6               	movlw	214
  3926   000D82  5DBA               	subwf	sinf@ux& (0+255),w,b
  3927   000D84  0E31               	movlw	49
  3928   000D86  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3929   000D88  0EE2               	movlw	226
  3930   000D8A  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3931   000D8C  0E40               	movlw	64
  3932   000D8E  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3933   000D90  B0D8               	btfsc	status,0,c
  3934   000D92  EFCD  F006         	goto	u8751
  3935   000D96  EFCF  F006         	goto	u8750
  3936   000D9A                     u8751:
  3937   000D9A  EF70  F007         	goto	l6855
  3938   000D9E                     u8750:
  3939   000D9E                     
  3940                           ; BSR set to: 0
  3941   000D9E  0EE0               	movlw	224
  3942   000DA0  5DBA               	subwf	sinf@ux& (0+255),w,b
  3943   000DA2  0EED               	movlw	237
  3944   000DA4  59BB               	subwfb	(sinf@ux+1)& (0+255),w,b
  3945   000DA6  0EAF               	movlw	175
  3946   000DA8  59BC               	subwfb	(sinf@ux+2)& (0+255),w,b
  3947   000DAA  0E40               	movlw	64
  3948   000DAC  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  3949   000DAE  B0D8               	btfsc	status,0,c
  3950   000DB0  EFDC  F006         	goto	u8761
  3951   000DB4  EFDE  F006         	goto	u8760
  3952   000DB8                     u8761:
  3953   000DB8  EF1E  F007         	goto	l6845
  3954   000DBC                     u8760:
  3955   000DBC                     
  3956                           ; BSR set to: 0
  3957   000DBC  51B1               	movf	sinf@sign& (0+255),w,b
  3958   000DBE  B4D8               	btfsc	status,2,c
  3959   000DC0  EFE4  F006         	goto	u8771
  3960   000DC4  EFE6  F006         	goto	u8770
  3961   000DC8                     u8771:
  3962   000DC8  EF02  F007         	goto	l6839
  3963   000DCC                     u8770:
  3964   000DCC                     
  3965                           ; BSR set to: 0
  3966   000DCC  C0A4  F046         	movff	sinf@x,___fladd@b
  3967   000DD0  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3968   000DD4  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3969   000DD8  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3970   000DDC  0EE4               	movlw	228
  3971   000DDE  6E4A               	movwf	___fladd@a^0,c
  3972   000DE0  0ECB               	movlw	203
  3973   000DE2  6E4B               	movwf	(___fladd@a+1)^0,c
  3974   000DE4  0E96               	movlw	150
  3975   000DE6  6E4C               	movwf	(___fladd@a+2)^0,c
  3976   000DE8  0E40               	movlw	64
  3977   000DEA  6E4D               	movwf	(___fladd@a+3)^0,c
  3978   000DEC  EC07  F008         	call	___fladd	;wreg free
  3979   000DF0  C046  F0B2         	movff	?___fladd,_sinf$4120
  3980   000DF4  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  3981   000DF8  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  3982   000DFC  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  3983   000E00  EF46  F006         	goto	l6811
  3984   000E04                     l6839:
  3985                           
  3986                           ; BSR set to: 0
  3987   000E04  0EE4               	movlw	228
  3988   000E06  6E4A               	movwf	___fladd@a^0,c
  3989   000E08  0ECB               	movlw	203
  3990   000E0A  6E4B               	movwf	(___fladd@a+1)^0,c
  3991   000E0C  0E96               	movlw	150
  3992   000E0E  6E4C               	movwf	(___fladd@a+2)^0,c
  3993   000E10  0EC0               	movlw	192
  3994   000E12  6E4D               	movwf	(___fladd@a+3)^0,c
  3995   000E14  C0A4  F046         	movff	sinf@x,___fladd@b
  3996   000E18  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  3997   000E1C  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  3998   000E20  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  3999   000E24  EC07  F008         	call	___fladd	;wreg free
  4000   000E28  C046  F0B2         	movff	?___fladd,_sinf$4120
  4001   000E2C  C047  F0B3         	movff	?___fladd+1,_sinf$4120+1
  4002   000E30  C048  F0B4         	movff	?___fladd+2,_sinf$4120+2
  4003   000E34  C049  F0B5         	movff	?___fladd+3,_sinf$4120+3
  4004   000E38  EF0E  F006         	goto	l6803
  4005   000E3C                     l6845:
  4006                           
  4007                           ; BSR set to: 0
  4008   000E3C  51B1               	movf	sinf@sign& (0+255),w,b
  4009   000E3E  A4D8               	btfss	status,2,c
  4010   000E40  EF24  F007         	goto	u8781
  4011   000E44  EF26  F007         	goto	u8780
  4012   000E48                     u8781:
  4013   000E48  EF42  F007         	goto	l6849
  4014   000E4C                     u8780:
  4015   000E4C                     
  4016                           ; BSR set to: 0
  4017   000E4C  C0A4  F046         	movff	sinf@x,___fladd@b
  4018   000E50  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4019   000E54  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4020   000E58  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4021   000E5C  0EDB               	movlw	219
  4022   000E5E  6E4A               	movwf	___fladd@a^0,c
  4023   000E60  0E0F               	movlw	15
  4024   000E62  6E4B               	movwf	(___fladd@a+1)^0,c
  4025   000E64  0EC9               	movlw	201
  4026   000E66  6E4C               	movwf	(___fladd@a+2)^0,c
  4027   000E68  0EC0               	movlw	192
  4028   000E6A  6E4D               	movwf	(___fladd@a+3)^0,c
  4029   000E6C  EC07  F008         	call	___fladd	;wreg free
  4030   000E70  C046  F0AC         	movff	?___fladd,_sinf$3844
  4031   000E74  C047  F0AD         	movff	?___fladd+1,_sinf$3844+1
  4032   000E78  C048  F0AE         	movff	?___fladd+2,_sinf$3844+2
  4033   000E7C  C049  F0AF         	movff	?___fladd+3,_sinf$3844+3
  4034   000E80  EF5C  F007         	goto	l6851
  4035   000E84                     l6849:
  4036                           
  4037                           ; BSR set to: 0
  4038   000E84  C0A4  F046         	movff	sinf@x,___fladd@b
  4039   000E88  C0A5  F047         	movff	sinf@x+1,___fladd@b+1
  4040   000E8C  C0A6  F048         	movff	sinf@x+2,___fladd@b+2
  4041   000E90  C0A7  F049         	movff	sinf@x+3,___fladd@b+3
  4042   000E94  0EDB               	movlw	219
  4043   000E96  6E4A               	movwf	___fladd@a^0,c
  4044   000E98  0E0F               	movlw	15
  4045   000E9A  6E4B               	movwf	(___fladd@a+1)^0,c
  4046   000E9C  0EC9               	movlw	201
  4047   000E9E  6E4C               	movwf	(___fladd@a+2)^0,c
  4048   000EA0  0E40               	movlw	64
  4049   000EA2  6E4D               	movwf	(___fladd@a+3)^0,c
  4050   000EA4  EC07  F008         	call	___fladd	;wreg free
  4051   000EA8  C046  F0AC         	movff	?___fladd,_sinf$3844
  4052   000EAC  C047  F0AD         	movff	?___fladd+1,_sinf$3844+1
  4053   000EB0  C048  F0AE         	movff	?___fladd+2,_sinf$3844+2
  4054   000EB4  C049  F0AF         	movff	?___fladd+3,_sinf$3844+3
  4055   000EB8                     l6851:
  4056   000EB8  C0AC  F064         	movff	_sinf$3844,___sindf@x
  4057   000EBC  C0AD  F065         	movff	_sinf$3844+1,___sindf@x+1
  4058   000EC0  C0AE  F066         	movff	_sinf$3844+2,___sindf@x+2
  4059   000EC4  C0AF  F067         	movff	_sinf$3844+3,___sindf@x+3
  4060   000EC8  ECD9  F014         	call	___sindf	;wreg free
  4061   000ECC  C064  F0A4         	movff	?___sindf,?_sinf
  4062   000ED0  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4063   000ED4  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4064   000ED8  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4065   000EDC  EF06  F008         	goto	l1489
  4066   000EE0                     l6855:
  4067                           
  4068                           ; BSR set to: 0
  4069   000EE0  0E80               	movlw	128
  4070   000EE2  5DBC               	subwf	(sinf@ux+2)& (0+255),w,b
  4071   000EE4  0E7F               	movlw	127
  4072   000EE6  59BD               	subwfb	(sinf@ux+3)& (0+255),w,b
  4073   000EE8  A0D8               	btfss	status,0,c
  4074   000EEA  EF79  F007         	goto	u8791
  4075   000EEE  EF7B  F007         	goto	u8790
  4076   000EF2                     u8791:
  4077   000EF2  EF8D  F007         	goto	l6863
  4078   000EF6                     u8790:
  4079   000EF6                     
  4080                           ; BSR set to: 0
  4081   000EF6  0EFF               	movlw	255
  4082   000EF8  13BA               	iorwf	sinf@ux& (0+255),f,b
  4083   000EFA  0EFF               	movlw	255
  4084   000EFC  13BB               	iorwf	(sinf@ux+1)& (0+255),f,b
  4085   000EFE  0EFF               	movlw	255
  4086   000F00  13BC               	iorwf	(sinf@ux+2)& (0+255),f,b
  4087   000F02  0E00               	movlw	0
  4088   000F04  13BD               	iorwf	(sinf@ux+3)& (0+255),f,b
  4089   000F06                     
  4090                           ; BSR set to: 0
  4091   000F06  C0BA  F0A4         	movff	sinf@ux,?_sinf
  4092   000F0A  C0BB  F0A5         	movff	sinf@ux+1,?_sinf+1
  4093   000F0E  C0BC  F0A6         	movff	sinf@ux+2,?_sinf+2
  4094   000F12  C0BD  F0A7         	movff	sinf@ux+3,?_sinf+3
  4095   000F16  EF06  F008         	goto	l1489
  4096   000F1A                     l6863:
  4097                           
  4098                           ; BSR set to: 0
  4099   000F1A  C0A4  F084         	movff	sinf@x,___rem_pio2f@x
  4100   000F1E  C0A5  F085         	movff	sinf@x+1,___rem_pio2f@x+1
  4101   000F22  C0A6  F086         	movff	sinf@x+2,___rem_pio2f@x+2
  4102   000F26  C0A7  F087         	movff	sinf@x+3,___rem_pio2f@x+3
  4103   000F2A  0EB6               	movlw	low sinf@y
  4104   000F2C  6F88               	movwf	___rem_pio2f@y& (0+255),b
  4105   000F2E  EC88  F00E         	call	___rem_pio2f	;wreg free
  4106   000F32  0100               	movlb	0	; () banked
  4107   000F34  5184               	movf	?___rem_pio2f& (0+255),w,b
  4108   000F36  0B03               	andlw	3
  4109   000F38  6FB0               	movwf	sinf@n& (0+255),b
  4110   000F3A  EFF7  F007         	goto	l6881
  4111   000F3E                     l6865:
  4112                           
  4113                           ; BSR set to: 0
  4114   000F3E  C0B6  F080         	movff	sinf@y,___flneg@f1
  4115   000F42  C0B7  F081         	movff	sinf@y+1,___flneg@f1+1
  4116   000F46  C0B8  F082         	movff	sinf@y+2,___flneg@f1+2
  4117   000F4A  C0B9  F083         	movff	sinf@y+3,___flneg@f1+3
  4118   000F4E  EC39  F023         	call	___flneg	;wreg free
  4119   000F52  C080  F0B6         	movff	?___flneg,sinf@y
  4120   000F56  C081  F0B7         	movff	?___flneg+1,sinf@y+1
  4121   000F5A  C082  F0B8         	movff	?___flneg+2,sinf@y+2
  4122   000F5E  C083  F0B9         	movff	?___flneg+3,sinf@y+3
  4123   000F62                     l6867:
  4124   000F62  C0B6  F064         	movff	sinf@y,___sindf@x
  4125   000F66  C0B7  F065         	movff	sinf@y+1,___sindf@x+1
  4126   000F6A  C0B8  F066         	movff	sinf@y+2,___sindf@x+2
  4127   000F6E  C0B9  F067         	movff	sinf@y+3,___sindf@x+3
  4128   000F72  ECD9  F014         	call	___sindf	;wreg free
  4129   000F76  C064  F0A4         	movff	?___sindf,?_sinf
  4130   000F7A  C065  F0A5         	movff	?___sindf+1,?_sinf+1
  4131   000F7E  C066  F0A6         	movff	?___sindf+2,?_sinf+2
  4132   000F82  C067  F0A7         	movff	?___sindf+3,?_sinf+3
  4133   000F86  EF06  F008         	goto	l1489
  4134   000F8A                     l6871:
  4135                           
  4136                           ; BSR set to: 0
  4137   000F8A  C0B6  F064         	movff	sinf@y,___cosdf@x
  4138   000F8E  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4139   000F92  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4140   000F96  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4141   000F9A  EC06  F018         	call	___cosdf	;wreg free
  4142   000F9E  C064  F0A4         	movff	?___cosdf,?_sinf
  4143   000FA2  C065  F0A5         	movff	?___cosdf+1,?_sinf+1
  4144   000FA6  C066  F0A6         	movff	?___cosdf+2,?_sinf+2
  4145   000FAA  C067  F0A7         	movff	?___cosdf+3,?_sinf+3
  4146   000FAE  EF06  F008         	goto	l1489
  4147   000FB2                     l6875:
  4148                           
  4149                           ; BSR set to: 0
  4150   000FB2  C0B6  F064         	movff	sinf@y,___cosdf@x
  4151   000FB6  C0B7  F065         	movff	sinf@y+1,___cosdf@x+1
  4152   000FBA  C0B8  F066         	movff	sinf@y+2,___cosdf@x+2
  4153   000FBE  C0B9  F067         	movff	sinf@y+3,___cosdf@x+3
  4154   000FC2  EC06  F018         	call	___cosdf	;wreg free
  4155   000FC6  C064  F080         	movff	?___cosdf,___flneg@f1
  4156   000FCA  C065  F081         	movff	?___cosdf+1,___flneg@f1+1
  4157   000FCE  C066  F082         	movff	?___cosdf+2,___flneg@f1+2
  4158   000FD2  C067  F083         	movff	?___cosdf+3,___flneg@f1+3
  4159   000FD6  EC39  F023         	call	___flneg	;wreg free
  4160   000FDA  C080  F0A4         	movff	?___flneg,?_sinf
  4161   000FDE  C081  F0A5         	movff	?___flneg+1,?_sinf+1
  4162   000FE2  C082  F0A6         	movff	?___flneg+2,?_sinf+2
  4163   000FE6  C083  F0A7         	movff	?___flneg+3,?_sinf+3
  4164   000FEA  EF06  F008         	goto	l1489
  4165   000FEE                     l6881:
  4166                           
  4167                           ; BSR set to: 0
  4168   000FEE  51B0               	movf	sinf@n& (0+255),w,b
  4169                           
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 3, Range of values is 0 to 2
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte           10     6 (average)
  4175                           ;	Chosen strategy is simple_byte
  4176   000FF0  0A00               	xorlw	0	; case 0
  4177   000FF2  B4D8               	btfsc	status,2,c
  4178   000FF4  EFB1  F007         	goto	l6867
  4179   000FF8  0A01               	xorlw	1	; case 1
  4180   000FFA  B4D8               	btfsc	status,2,c
  4181   000FFC  EFC5  F007         	goto	l6871
  4182   001000  0A03               	xorlw	3	; case 2
  4183   001002  B4D8               	btfsc	status,2,c
  4184   001004  EF9F  F007         	goto	l6865
  4185   001008  EFD9  F007         	goto	l6875
  4186   00100C                     l1489:
  4187   00100C  0012               	return		;funcret
  4188   00100E                     __end_of_sinf:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function ___sindf *****************
  4192 ;; Defined at:
  4193 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__sindf.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  x               4    4[BANK0 ] float 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  z               4   32[BANK0 ] float 
  4198 ;;  s               4   28[BANK0 ] float 
  4199 ;;  w               4   12[BANK0 ] float 
  4200 ;;  r               4    8[BANK0 ] float 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  4    4[BANK0 ] float 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:       32 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 2
  4217 ;; This function calls:
  4218 ;;		___fladd
  4219 ;;		___flmul
  4220 ;; This function is called by:
  4221 ;;		_sinf
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text12
  4226   0029B2                     __ptext12:
  4227                           	callstack 0
  4228   0029B2                     ___sindf:
  4229                           	callstack 26
  4230   0029B2  C064  F014         	movff	___sindf@x,___flmul@b
  4231   0029B6  C065  F015         	movff	___sindf@x+1,___flmul@b+1
  4232   0029BA  C066  F016         	movff	___sindf@x+2,___flmul@b+2
  4233   0029BE  C067  F017         	movff	___sindf@x+3,___flmul@b+3
  4234   0029C2  C064  F018         	movff	___sindf@x,___flmul@a
  4235   0029C6  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4236   0029CA  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4237   0029CE  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4238   0029D2  EC68  F00A         	call	___flmul	;wreg free
  4239   0029D6  C014  F080         	movff	?___flmul,___sindf@z
  4240   0029DA  C015  F081         	movff	?___flmul+1,___sindf@z+1
  4241   0029DE  C016  F082         	movff	?___flmul+2,___sindf@z+2
  4242   0029E2  C017  F083         	movff	?___flmul+3,___sindf@z+3
  4243   0029E6  C080  F014         	movff	___sindf@z,___flmul@b
  4244   0029EA  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4245   0029EE  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4246   0029F2  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4247   0029F6  C080  F018         	movff	___sindf@z,___flmul@a
  4248   0029FA  C081  F019         	movff	___sindf@z+1,___flmul@a+1
  4249   0029FE  C082  F01A         	movff	___sindf@z+2,___flmul@a+2
  4250   002A02  C083  F01B         	movff	___sindf@z+3,___flmul@a+3
  4251   002A06  EC68  F00A         	call	___flmul	;wreg free
  4252   002A0A  C014  F06C         	movff	?___flmul,___sindf@w
  4253   002A0E  C015  F06D         	movff	?___flmul+1,___sindf@w+1
  4254   002A12  C016  F06E         	movff	?___flmul+2,___sindf@w+2
  4255   002A16  C017  F06F         	movff	?___flmul+3,___sindf@w+3
  4256   002A1A  0E3C               	movlw	60
  4257   002A1C  6E18               	movwf	___flmul@a^0,c
  4258   002A1E  0E6C               	movlw	108
  4259   002A20  6E19               	movwf	(___flmul@a+1)^0,c
  4260   002A22  0E36               	movlw	54
  4261   002A24  6E1A               	movwf	(___flmul@a+2)^0,c
  4262   002A26  0E36               	movlw	54
  4263   002A28  6E1B               	movwf	(___flmul@a+3)^0,c
  4264   002A2A  C080  F014         	movff	___sindf@z,___flmul@b
  4265   002A2E  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4266   002A32  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4267   002A36  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4268   002A3A  EC68  F00A         	call	___flmul	;wreg free
  4269   002A3E  C014  F046         	movff	?___flmul,___fladd@b
  4270   002A42  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4271   002A46  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4272   002A4A  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4273   002A4E  0ECF               	movlw	207
  4274   002A50  6E4A               	movwf	___fladd@a^0,c
  4275   002A52  0E07               	movlw	7
  4276   002A54  6E4B               	movwf	(___fladd@a+1)^0,c
  4277   002A56  0E50               	movlw	80
  4278   002A58  6E4C               	movwf	(___fladd@a+2)^0,c
  4279   002A5A  0EB9               	movlw	185
  4280   002A5C  6E4D               	movwf	(___fladd@a+3)^0,c
  4281   002A5E  EC07  F008         	call	___fladd	;wreg free
  4282   002A62  C046  F068         	movff	?___fladd,___sindf@r
  4283   002A66  C047  F069         	movff	?___fladd+1,___sindf@r+1
  4284   002A6A  C048  F06A         	movff	?___fladd+2,___sindf@r+2
  4285   002A6E  C049  F06B         	movff	?___fladd+3,___sindf@r+3
  4286   002A72  C080  F014         	movff	___sindf@z,___flmul@b
  4287   002A76  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4288   002A7A  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4289   002A7E  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4290   002A82  C064  F018         	movff	___sindf@x,___flmul@a
  4291   002A86  C065  F019         	movff	___sindf@x+1,___flmul@a+1
  4292   002A8A  C066  F01A         	movff	___sindf@x+2,___flmul@a+2
  4293   002A8E  C067  F01B         	movff	___sindf@x+3,___flmul@a+3
  4294   002A92  EC68  F00A         	call	___flmul	;wreg free
  4295   002A96  C014  F07C         	movff	?___flmul,___sindf@s
  4296   002A9A  C015  F07D         	movff	?___flmul+1,___sindf@s+1
  4297   002A9E  C016  F07E         	movff	?___flmul+2,___sindf@s+2
  4298   002AA2  C017  F07F         	movff	?___flmul+3,___sindf@s+3
  4299   002AA6  0EAB               	movlw	171
  4300   002AA8  6E4A               	movwf	___fladd@a^0,c
  4301   002AAA  0EAA               	movlw	170
  4302   002AAC  6E4B               	movwf	(___fladd@a+1)^0,c
  4303   002AAE  0E2A               	movlw	42
  4304   002AB0  6E4C               	movwf	(___fladd@a+2)^0,c
  4305   002AB2  0EBE               	movlw	190
  4306   002AB4  6E4D               	movwf	(___fladd@a+3)^0,c
  4307   002AB6  0E84               	movlw	132
  4308   002AB8  6E18               	movwf	___flmul@a^0,c
  4309   002ABA  0E88               	movlw	136
  4310   002ABC  6E19               	movwf	(___flmul@a+1)^0,c
  4311   002ABE  0E08               	movlw	8
  4312   002AC0  6E1A               	movwf	(___flmul@a+2)^0,c
  4313   002AC2  0E3C               	movlw	60
  4314   002AC4  6E1B               	movwf	(___flmul@a+3)^0,c
  4315   002AC6  C080  F014         	movff	___sindf@z,___flmul@b
  4316   002ACA  C081  F015         	movff	___sindf@z+1,___flmul@b+1
  4317   002ACE  C082  F016         	movff	___sindf@z+2,___flmul@b+2
  4318   002AD2  C083  F017         	movff	___sindf@z+3,___flmul@b+3
  4319   002AD6  EC68  F00A         	call	___flmul	;wreg free
  4320   002ADA  C014  F046         	movff	?___flmul,___fladd@b
  4321   002ADE  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4322   002AE2  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4323   002AE6  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4324   002AEA  EC07  F008         	call	___fladd	;wreg free
  4325   002AEE  C046  F070         	movff	?___fladd,___sindf$4125
  4326   002AF2  C047  F071         	movff	?___fladd+1,___sindf$4125+1
  4327   002AF6  C048  F072         	movff	?___fladd+2,___sindf$4125+2
  4328   002AFA  C049  F073         	movff	?___fladd+3,___sindf$4125+3
  4329   002AFE  C06C  F018         	movff	___sindf@w,___flmul@a
  4330   002B02  C06D  F019         	movff	___sindf@w+1,___flmul@a+1
  4331   002B06  C06E  F01A         	movff	___sindf@w+2,___flmul@a+2
  4332   002B0A  C06F  F01B         	movff	___sindf@w+3,___flmul@a+3
  4333   002B0E  C07C  F014         	movff	___sindf@s,___flmul@b
  4334   002B12  C07D  F015         	movff	___sindf@s+1,___flmul@b+1
  4335   002B16  C07E  F016         	movff	___sindf@s+2,___flmul@b+2
  4336   002B1A  C07F  F017         	movff	___sindf@s+3,___flmul@b+3
  4337   002B1E  EC68  F00A         	call	___flmul	;wreg free
  4338   002B22  C014  F074         	movff	?___flmul,___sindf$4126
  4339   002B26  C015  F075         	movff	?___flmul+1,___sindf$4126+1
  4340   002B2A  C016  F076         	movff	?___flmul+2,___sindf$4126+2
  4341   002B2E  C017  F077         	movff	?___flmul+3,___sindf$4126+3
  4342   002B32  C064  F04A         	movff	___sindf@x,___fladd@a
  4343   002B36  C065  F04B         	movff	___sindf@x+1,___fladd@a+1
  4344   002B3A  C066  F04C         	movff	___sindf@x+2,___fladd@a+2
  4345   002B3E  C067  F04D         	movff	___sindf@x+3,___fladd@a+3
  4346   002B42  C07C  F018         	movff	___sindf@s,___flmul@a
  4347   002B46  C07D  F019         	movff	___sindf@s+1,___flmul@a+1
  4348   002B4A  C07E  F01A         	movff	___sindf@s+2,___flmul@a+2
  4349   002B4E  C07F  F01B         	movff	___sindf@s+3,___flmul@a+3
  4350   002B52  C070  F014         	movff	___sindf$4125,___flmul@b
  4351   002B56  C071  F015         	movff	___sindf$4125+1,___flmul@b+1
  4352   002B5A  C072  F016         	movff	___sindf$4125+2,___flmul@b+2
  4353   002B5E  C073  F017         	movff	___sindf$4125+3,___flmul@b+3
  4354   002B62  EC68  F00A         	call	___flmul	;wreg free
  4355   002B66  C014  F046         	movff	?___flmul,___fladd@b
  4356   002B6A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4357   002B6E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4358   002B72  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4359   002B76  EC07  F008         	call	___fladd	;wreg free
  4360   002B7A  C046  F078         	movff	?___fladd,___sindf$4127
  4361   002B7E  C047  F079         	movff	?___fladd+1,___sindf$4127+1
  4362   002B82  C048  F07A         	movff	?___fladd+2,___sindf$4127+2
  4363   002B86  C049  F07B         	movff	?___fladd+3,___sindf$4127+3
  4364   002B8A  C078  F046         	movff	___sindf$4127,___fladd@b
  4365   002B8E  C079  F047         	movff	___sindf$4127+1,___fladd@b+1
  4366   002B92  C07A  F048         	movff	___sindf$4127+2,___fladd@b+2
  4367   002B96  C07B  F049         	movff	___sindf$4127+3,___fladd@b+3
  4368   002B9A  C068  F018         	movff	___sindf@r,___flmul@a
  4369   002B9E  C069  F019         	movff	___sindf@r+1,___flmul@a+1
  4370   002BA2  C06A  F01A         	movff	___sindf@r+2,___flmul@a+2
  4371   002BA6  C06B  F01B         	movff	___sindf@r+3,___flmul@a+3
  4372   002BAA  C074  F014         	movff	___sindf$4126,___flmul@b
  4373   002BAE  C075  F015         	movff	___sindf$4126+1,___flmul@b+1
  4374   002BB2  C076  F016         	movff	___sindf$4126+2,___flmul@b+2
  4375   002BB6  C077  F017         	movff	___sindf$4126+3,___flmul@b+3
  4376   002BBA  EC68  F00A         	call	___flmul	;wreg free
  4377   002BBE  C014  F04A         	movff	?___flmul,___fladd@a
  4378   002BC2  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4379   002BC6  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4380   002BCA  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4381   002BCE  EC07  F008         	call	___fladd	;wreg free
  4382   002BD2  C046  F064         	movff	?___fladd,?___sindf
  4383   002BD6  C047  F065         	movff	?___fladd+1,?___sindf+1
  4384   002BDA  C048  F066         	movff	?___fladd+2,?___sindf+2
  4385   002BDE  C049  F067         	movff	?___fladd+3,?___sindf+3
  4386   002BE2  0012               	return		;funcret
  4387   002BE4                     __end_of___sindf:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function ___rem_pio2f *****************
  4391 ;; Defined at:
  4392 ;;		line 44 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__rem_pio2f.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  x               4   36[BANK0 ] float 
  4395 ;;  y               1   40[BANK0 ] PTR 
  4396 ;;		 -> sinf@y(4), 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  n               4   64[BANK0 ] long 
  4399 ;;  t               4   60[BANK0 ] float 
  4400 ;;  fn              4   56[BANK0 ] float 
  4401 ;;  ux              4   52[BANK0 ] struct .
  4402 ;;  ty              4   43[BANK0 ] [1]
  4403 ;;  sign            1   51[BANK0 ] _Bool 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  2   36[BANK0 ] int 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:       32 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 3
  4420 ;; This function calls:
  4421 ;;		___fladd
  4422 ;;		___flmul
  4423 ;;		___flneg
  4424 ;;		___flsub
  4425 ;;		___fltol
  4426 ;;		___xxtofl
  4427 ;;		_fabsf
  4428 ;; This function is called by:
  4429 ;;		_sinf
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text13
  4434   001D10                     __ptext13:
  4435                           	callstack 0
  4436   001D10                     ___rem_pio2f:
  4437                           	callstack 25
  4438   001D10  C115  F094         	movff	___rem_pio2f@F526,___rem_pio2f@ux
  4439   001D14  C116  F095         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
  4440   001D18  C117  F096         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
  4441   001D1C  C118  F097         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
  4442   001D20  C084  F094         	movff	___rem_pio2f@x,___rem_pio2f@ux
  4443   001D24  C085  F095         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
  4444   001D28  C086  F096         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
  4445   001D2C  C087  F097         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
  4446   001D30  0100               	movlb	0	; () banked
  4447   001D32  BF97               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
  4448   001D34  EF9E  F00E         	goto	u8541
  4449   001D38  EFA1  F00E         	goto	u8540
  4450   001D3C                     u8541:
  4451   001D3C  0E01               	movlw	1
  4452   001D3E  EFA2  F00E         	goto	u8550
  4453   001D42                     u8540:
  4454   001D42  0E00               	movlw	0
  4455   001D44                     u8550:
  4456   001D44  6F93               	movwf	___rem_pio2f@sign& (0+255),b
  4457   001D46                     
  4458                           ; BSR set to: 0
  4459   001D46  9F97               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
  4460   001D48                     
  4461                           ; BSR set to: 0
  4462   001D48  0EDB               	movlw	219
  4463   001D4A  5D94               	subwf	___rem_pio2f@ux& (0+255),w,b
  4464   001D4C  0E0F               	movlw	15
  4465   001D4E  5995               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
  4466   001D50  0EC9               	movlw	201
  4467   001D52  5996               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
  4468   001D54  0E4D               	movlw	77
  4469   001D56  5997               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
  4470   001D58  B0D8               	btfsc	status,0,c
  4471   001D5A  EFB1  F00E         	goto	u8561
  4472   001D5E  EFB3  F00E         	goto	u8560
  4473   001D62                     u8561:
  4474   001D62  EF9F  F00F         	goto	l6727
  4475   001D66                     u8560:
  4476   001D66                     
  4477                           ; BSR set to: 0
  4478   001D66  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4479   001D6A  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4480   001D6E  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4481   001D72  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4482   001D76  EC72  F023         	call	_fabsf	;wreg free
  4483   001D7A  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4484   001D7E  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4485   001D82  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4486   001D86  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4487   001D8A  0E00               	movlw	0
  4488   001D8C  6E4A               	movwf	___fladd@a^0,c
  4489   001D8E  0E00               	movlw	0
  4490   001D90  6E4B               	movwf	(___fladd@a+1)^0,c
  4491   001D92  0E00               	movlw	0
  4492   001D94  6E4C               	movwf	(___fladd@a+2)^0,c
  4493   001D96  0E3F               	movlw	63
  4494   001D98  6E4D               	movwf	(___fladd@a+3)^0,c
  4495   001D9A  0E83               	movlw	131
  4496   001D9C  6E18               	movwf	___flmul@a^0,c
  4497   001D9E  0EF9               	movlw	249
  4498   001DA0  6E19               	movwf	(___flmul@a+1)^0,c
  4499   001DA2  0E22               	movlw	34
  4500   001DA4  6E1A               	movwf	(___flmul@a+2)^0,c
  4501   001DA6  0E3F               	movlw	63
  4502   001DA8  6E1B               	movwf	(___flmul@a+3)^0,c
  4503   001DAA  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4504   001DAE  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4505   001DB2  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4506   001DB6  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4507   001DBA  EC68  F00A         	call	___flmul	;wreg free
  4508   001DBE  C014  F046         	movff	?___flmul,___fladd@b
  4509   001DC2  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4510   001DC6  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4511   001DCA  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4512   001DCE  EC07  F008         	call	___fladd	;wreg free
  4513   001DD2  C046  F064         	movff	?___fladd,___fltol@f1
  4514   001DD6  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4515   001DDA  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4516   001DDE  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4517   001DE2  EC4E  F01D         	call	___fltol	;wreg free
  4518   001DE6  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4519   001DEA  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4520   001DEE  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4521   001DF2  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4522   001DF6  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4523   001DFA  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4524   001DFE  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4525   001E02  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4526   001E06  0E01               	movlw	1
  4527   001E08  EC05  F019         	call	___xxtofl
  4528   001E0C  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4529   001E10  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4530   001E14  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4531   001E18  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4532   001E1C  0EDA               	movlw	218
  4533   001E1E  6E18               	movwf	___flmul@a^0,c
  4534   001E20  0E0F               	movlw	15
  4535   001E22  6E19               	movwf	(___flmul@a+1)^0,c
  4536   001E24  0EC9               	movlw	201
  4537   001E26  6E1A               	movwf	(___flmul@a+2)^0,c
  4538   001E28  0E3F               	movlw	63
  4539   001E2A  6E1B               	movwf	(___flmul@a+3)^0,c
  4540   001E2C  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4541   001E30  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4542   001E34  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4543   001E38  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4544   001E3C  EC68  F00A         	call	___flmul	;wreg free
  4545   001E40  C014  F068         	movff	?___flmul,___flsub@a
  4546   001E44  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4547   001E48  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4548   001E4C  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4549   001E50  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4550   001E54  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4551   001E58  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4552   001E5C  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4553   001E60  ECB1  F022         	call	___flsub	;wreg free
  4554   001E64  C064  F08F         	movff	?___flsub,___rem_pio2f$4124
  4555   001E68  C065  F090         	movff	?___flsub+1,___rem_pio2f$4124+1
  4556   001E6C  C066  F091         	movff	?___flsub+2,___rem_pio2f$4124+2
  4557   001E70  C067  F092         	movff	?___flsub+3,___rem_pio2f$4124+3
  4558   001E74  C08F  F064         	movff	___rem_pio2f$4124,___flsub@b
  4559   001E78  C090  F065         	movff	___rem_pio2f$4124+1,___flsub@b+1
  4560   001E7C  C091  F066         	movff	___rem_pio2f$4124+2,___flsub@b+2
  4561   001E80  C092  F067         	movff	___rem_pio2f$4124+3,___flsub@b+3
  4562   001E84  0EA3               	movlw	163
  4563   001E86  6E18               	movwf	___flmul@a^0,c
  4564   001E88  0E85               	movlw	133
  4565   001E8A  6E19               	movwf	(___flmul@a+1)^0,c
  4566   001E8C  0E88               	movlw	136
  4567   001E8E  6E1A               	movwf	(___flmul@a+2)^0,c
  4568   001E90  0E32               	movlw	50
  4569   001E92  6E1B               	movwf	(___flmul@a+3)^0,c
  4570   001E94  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4571   001E98  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4572   001E9C  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4573   001EA0  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4574   001EA4  EC68  F00A         	call	___flmul	;wreg free
  4575   001EA8  C014  F068         	movff	?___flmul,___flsub@a
  4576   001EAC  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4577   001EB0  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4578   001EB4  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4579   001EB8  ECB1  F022         	call	___flsub	;wreg free
  4580   001EBC  0100               	movlb	0	; () banked
  4581   001EBE  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4582   001EC0  6ED9               	movwf	fsr2l,c
  4583   001EC2  6ADA               	clrf	fsr2h,c
  4584   001EC4  C064  FFDE         	movff	?___flsub,postinc2
  4585   001EC8  C065  FFDE         	movff	?___flsub+1,postinc2
  4586   001ECC  C066  FFDE         	movff	?___flsub+2,postinc2
  4587   001ED0  C067  FFDE         	movff	?___flsub+3,postinc2
  4588   001ED4                     
  4589                           ; BSR set to: 0
  4590   001ED4  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4591   001ED6  B4D8               	btfsc	status,2,c
  4592   001ED8  EF70  F00F         	goto	u8571
  4593   001EDC  EF72  F00F         	goto	u8570
  4594   001EE0                     u8571:
  4595   001EE0  EF99  F00F         	goto	l1539
  4596   001EE4                     u8570:
  4597   001EE4                     l6721:
  4598                           
  4599                           ; BSR set to: 0
  4600   001EE4  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4601   001EE6  6ED9               	movwf	fsr2l,c
  4602   001EE8  6ADA               	clrf	fsr2h,c
  4603   001EEA  CFDE F080          	movff	postinc2,___flneg@f1
  4604   001EEE  CFDE F081          	movff	postinc2,___flneg@f1+1
  4605   001EF2  CFDE F082          	movff	postinc2,___flneg@f1+2
  4606   001EF6  CFDE F083          	movff	postinc2,___flneg@f1+3
  4607   001EFA  EC39  F023         	call	___flneg	;wreg free
  4608   001EFE  0100               	movlb	0	; () banked
  4609   001F00  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4610   001F02  6ED9               	movwf	fsr2l,c
  4611   001F04  6ADA               	clrf	fsr2h,c
  4612   001F06  C080  FFDE         	movff	?___flneg,postinc2
  4613   001F0A  C081  FFDE         	movff	?___flneg+1,postinc2
  4614   001F0E  C082  FFDE         	movff	?___flneg+2,postinc2
  4615   001F12  C083  FFDE         	movff	?___flneg+3,postinc2
  4616   001F16                     
  4617                           ; BSR set to: 0
  4618   001F16  C0A0  F089         	movff	___rem_pio2f@n,??___rem_pio2f
  4619   001F1A  C0A1  F08A         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
  4620   001F1E  1F89               	comf	??___rem_pio2f& (0+255),f,b
  4621   001F20  1F8A               	comf	(??___rem_pio2f+1)& (0+255),f,b
  4622   001F22  4B89               	infsnz	??___rem_pio2f& (0+255),f,b
  4623   001F24  2B8A               	incf	(??___rem_pio2f+1)& (0+255),f,b
  4624   001F26  C089  F084         	movff	??___rem_pio2f,?___rem_pio2f
  4625   001F2A  C08A  F085         	movff	??___rem_pio2f+1,?___rem_pio2f+1
  4626   001F2E  EF68  F010         	goto	l1540
  4627   001F32                     l1539:
  4628                           
  4629                           ; BSR set to: 0
  4630   001F32  C0A0  F084         	movff	___rem_pio2f@n,?___rem_pio2f
  4631   001F36  C0A1  F085         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
  4632   001F3A  EF68  F010         	goto	l1540
  4633   001F3E                     l6727:
  4634                           
  4635                           ; BSR set to: 0
  4636   001F3E  C084  F006         	movff	___rem_pio2f@x,fabsf@x
  4637   001F42  C085  F007         	movff	___rem_pio2f@x+1,fabsf@x+1
  4638   001F46  C086  F008         	movff	___rem_pio2f@x+2,fabsf@x+2
  4639   001F4A  C087  F009         	movff	___rem_pio2f@x+3,fabsf@x+3
  4640   001F4E  EC72  F023         	call	_fabsf	;wreg free
  4641   001F52  C006  F09C         	movff	?_fabsf,___rem_pio2f@t
  4642   001F56  C007  F09D         	movff	?_fabsf+1,___rem_pio2f@t+1
  4643   001F5A  C008  F09E         	movff	?_fabsf+2,___rem_pio2f@t+2
  4644   001F5E  C009  F09F         	movff	?_fabsf+3,___rem_pio2f@t+3
  4645   001F62  0E00               	movlw	0
  4646   001F64  6E4A               	movwf	___fladd@a^0,c
  4647   001F66  0E00               	movlw	0
  4648   001F68  6E4B               	movwf	(___fladd@a+1)^0,c
  4649   001F6A  0E00               	movlw	0
  4650   001F6C  6E4C               	movwf	(___fladd@a+2)^0,c
  4651   001F6E  0E3F               	movlw	63
  4652   001F70  6E4D               	movwf	(___fladd@a+3)^0,c
  4653   001F72  0E83               	movlw	131
  4654   001F74  6E18               	movwf	___flmul@a^0,c
  4655   001F76  0EF9               	movlw	249
  4656   001F78  6E19               	movwf	(___flmul@a+1)^0,c
  4657   001F7A  0E22               	movlw	34
  4658   001F7C  6E1A               	movwf	(___flmul@a+2)^0,c
  4659   001F7E  0E3F               	movlw	63
  4660   001F80  6E1B               	movwf	(___flmul@a+3)^0,c
  4661   001F82  C09C  F014         	movff	___rem_pio2f@t,___flmul@b
  4662   001F86  C09D  F015         	movff	___rem_pio2f@t+1,___flmul@b+1
  4663   001F8A  C09E  F016         	movff	___rem_pio2f@t+2,___flmul@b+2
  4664   001F8E  C09F  F017         	movff	___rem_pio2f@t+3,___flmul@b+3
  4665   001F92  EC68  F00A         	call	___flmul	;wreg free
  4666   001F96  C014  F046         	movff	?___flmul,___fladd@b
  4667   001F9A  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4668   001F9E  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4669   001FA2  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4670   001FA6  EC07  F008         	call	___fladd	;wreg free
  4671   001FAA  C046  F064         	movff	?___fladd,___fltol@f1
  4672   001FAE  C047  F065         	movff	?___fladd+1,___fltol@f1+1
  4673   001FB2  C048  F066         	movff	?___fladd+2,___fltol@f1+2
  4674   001FB6  C049  F067         	movff	?___fladd+3,___fltol@f1+3
  4675   001FBA  EC4E  F01D         	call	___fltol	;wreg free
  4676   001FBE  C064  F0A0         	movff	?___fltol,___rem_pio2f@n
  4677   001FC2  C065  F0A1         	movff	?___fltol+1,___rem_pio2f@n+1
  4678   001FC6  C066  F0A2         	movff	?___fltol+2,___rem_pio2f@n+2
  4679   001FCA  C067  F0A3         	movff	?___fltol+3,___rem_pio2f@n+3
  4680   001FCE  C0A0  F006         	movff	___rem_pio2f@n,___xxtofl@val
  4681   001FD2  C0A1  F007         	movff	___rem_pio2f@n+1,___xxtofl@val+1
  4682   001FD6  C0A2  F008         	movff	___rem_pio2f@n+2,___xxtofl@val+2
  4683   001FDA  C0A3  F009         	movff	___rem_pio2f@n+3,___xxtofl@val+3
  4684   001FDE  0E01               	movlw	1
  4685   001FE0  EC05  F019         	call	___xxtofl
  4686   001FE4  C006  F098         	movff	?___xxtofl,___rem_pio2f@fn
  4687   001FE8  C007  F099         	movff	?___xxtofl+1,___rem_pio2f@fn+1
  4688   001FEC  C008  F09A         	movff	?___xxtofl+2,___rem_pio2f@fn+2
  4689   001FF0  C009  F09B         	movff	?___xxtofl+3,___rem_pio2f@fn+3
  4690   001FF4  0EDA               	movlw	218
  4691   001FF6  6E18               	movwf	___flmul@a^0,c
  4692   001FF8  0E0F               	movlw	15
  4693   001FFA  6E19               	movwf	(___flmul@a+1)^0,c
  4694   001FFC  0EC9               	movlw	201
  4695   001FFE  6E1A               	movwf	(___flmul@a+2)^0,c
  4696   002000  0E3F               	movlw	63
  4697   002002  6E1B               	movwf	(___flmul@a+3)^0,c
  4698   002004  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4699   002008  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4700   00200C  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4701   002010  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4702   002014  EC68  F00A         	call	___flmul	;wreg free
  4703   002018  C014  F068         	movff	?___flmul,___flsub@a
  4704   00201C  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4705   002020  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4706   002024  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4707   002028  C09C  F064         	movff	___rem_pio2f@t,___flsub@b
  4708   00202C  C09D  F065         	movff	___rem_pio2f@t+1,___flsub@b+1
  4709   002030  C09E  F066         	movff	___rem_pio2f@t+2,___flsub@b+2
  4710   002034  C09F  F067         	movff	___rem_pio2f@t+3,___flsub@b+3
  4711   002038  ECB1  F022         	call	___flsub	;wreg free
  4712   00203C  C064  F08F         	movff	?___flsub,___rem_pio2f$4124
  4713   002040  C065  F090         	movff	?___flsub+1,___rem_pio2f$4124+1
  4714   002044  C066  F091         	movff	?___flsub+2,___rem_pio2f$4124+2
  4715   002048  C067  F092         	movff	?___flsub+3,___rem_pio2f$4124+3
  4716   00204C  C08F  F064         	movff	___rem_pio2f$4124,___flsub@b
  4717   002050  C090  F065         	movff	___rem_pio2f$4124+1,___flsub@b+1
  4718   002054  C091  F066         	movff	___rem_pio2f$4124+2,___flsub@b+2
  4719   002058  C092  F067         	movff	___rem_pio2f$4124+3,___flsub@b+3
  4720   00205C  0EA3               	movlw	163
  4721   00205E  6E18               	movwf	___flmul@a^0,c
  4722   002060  0E85               	movlw	133
  4723   002062  6E19               	movwf	(___flmul@a+1)^0,c
  4724   002064  0E88               	movlw	136
  4725   002066  6E1A               	movwf	(___flmul@a+2)^0,c
  4726   002068  0E32               	movlw	50
  4727   00206A  6E1B               	movwf	(___flmul@a+3)^0,c
  4728   00206C  C098  F014         	movff	___rem_pio2f@fn,___flmul@b
  4729   002070  C099  F015         	movff	___rem_pio2f@fn+1,___flmul@b+1
  4730   002074  C09A  F016         	movff	___rem_pio2f@fn+2,___flmul@b+2
  4731   002078  C09B  F017         	movff	___rem_pio2f@fn+3,___flmul@b+3
  4732   00207C  EC68  F00A         	call	___flmul	;wreg free
  4733   002080  C014  F068         	movff	?___flmul,___flsub@a
  4734   002084  C015  F069         	movff	?___flmul+1,___flsub@a+1
  4735   002088  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  4736   00208C  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  4737   002090  ECB1  F022         	call	___flsub	;wreg free
  4738   002094  C064  F08B         	movff	?___flsub,___rem_pio2f@ty
  4739   002098  C065  F08C         	movff	?___flsub+1,___rem_pio2f@ty+1
  4740   00209C  C066  F08D         	movff	?___flsub+2,___rem_pio2f@ty+2
  4741   0020A0  C067  F08E         	movff	?___flsub+3,___rem_pio2f@ty+3
  4742   0020A4  0100               	movlb	0	; () banked
  4743   0020A6  5188               	movf	___rem_pio2f@y& (0+255),w,b
  4744   0020A8  6ED9               	movwf	fsr2l,c
  4745   0020AA  6ADA               	clrf	fsr2h,c
  4746   0020AC  C08B  FFDE         	movff	___rem_pio2f@ty,postinc2
  4747   0020B0  C08C  FFDE         	movff	___rem_pio2f@ty+1,postinc2
  4748   0020B4  C08D  FFDE         	movff	___rem_pio2f@ty+2,postinc2
  4749   0020B8  C08E  FFDE         	movff	___rem_pio2f@ty+3,postinc2
  4750   0020BC                     
  4751                           ; BSR set to: 0
  4752   0020BC  5193               	movf	___rem_pio2f@sign& (0+255),w,b
  4753   0020BE  B4D8               	btfsc	status,2,c
  4754   0020C0  EF64  F010         	goto	u8581
  4755   0020C4  EF66  F010         	goto	u8580
  4756   0020C8                     u8581:
  4757   0020C8  EF99  F00F         	goto	l1539
  4758   0020CC                     u8580:
  4759   0020CC  EF72  F00F         	goto	l6721
  4760   0020D0                     l1540:
  4761                           
  4762                           ; BSR set to: 0
  4763   0020D0  0012               	return		;funcret
  4764   0020D2                     __end_of___rem_pio2f:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _fabsf *****************
  4768 ;; Defined at:
  4769 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fabsf.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  x               4    5[COMRAM] float 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  u               4    9[COMRAM] struct .
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  4    5[COMRAM] float 
  4776 ;; Registers used:
  4777 ;;		status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;Total ram usage:        8 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		___rem_pio2f
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text14
  4798   0046E4                     __ptext14:
  4799                           	callstack 0
  4800   0046E4                     _fabsf:
  4801                           	callstack 26
  4802   0046E4  C111  F00A         	movff	fabsf@F465,fabsf@u
  4803   0046E8  C112  F00B         	movff	fabsf@F465+1,fabsf@u+1
  4804   0046EC  C113  F00C         	movff	fabsf@F465+2,fabsf@u+2
  4805   0046F0  C114  F00D         	movff	fabsf@F465+3,fabsf@u+3
  4806   0046F4  C006  F00A         	movff	fabsf@x,fabsf@u
  4807   0046F8  C007  F00B         	movff	fabsf@x+1,fabsf@u+1
  4808   0046FC  C008  F00C         	movff	fabsf@x+2,fabsf@u+2
  4809   004700  C009  F00D         	movff	fabsf@x+3,fabsf@u+3
  4810   004704  9E0D               	bcf	(fabsf@u+3)^0,7,c
  4811   004706  C00A  F006         	movff	fabsf@u,?_fabsf
  4812   00470A  C00B  F007         	movff	fabsf@u+1,?_fabsf+1
  4813   00470E  C00C  F008         	movff	fabsf@u+2,?_fabsf+2
  4814   004712  C00D  F009         	movff	fabsf@u+3,?_fabsf+3
  4815   004716  0012               	return		;funcret
  4816   004718                     __end_of_fabsf:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function ___cosdf *****************
  4820 ;; Defined at:
  4821 ;;		line 26 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__cosdf.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  x               4    4[BANK0 ] float 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  z               4   28[BANK0 ] float 
  4826 ;;  w               4   24[BANK0 ] float 
  4827 ;;  r               4    8[BANK0 ] float 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  4    4[BANK0 ] float 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:       28 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 2
  4844 ;; This function calls:
  4845 ;;		___fladd
  4846 ;;		___flmul
  4847 ;; This function is called by:
  4848 ;;		_sinf
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text15
  4853   00300C                     __ptext15:
  4854                           	callstack 0
  4855   00300C                     ___cosdf:
  4856                           	callstack 26
  4857   00300C  C064  F014         	movff	___cosdf@x,___flmul@b
  4858   003010  C065  F015         	movff	___cosdf@x+1,___flmul@b+1
  4859   003014  C066  F016         	movff	___cosdf@x+2,___flmul@b+2
  4860   003018  C067  F017         	movff	___cosdf@x+3,___flmul@b+3
  4861   00301C  C064  F018         	movff	___cosdf@x,___flmul@a
  4862   003020  C065  F019         	movff	___cosdf@x+1,___flmul@a+1
  4863   003024  C066  F01A         	movff	___cosdf@x+2,___flmul@a+2
  4864   003028  C067  F01B         	movff	___cosdf@x+3,___flmul@a+3
  4865   00302C  EC68  F00A         	call	___flmul	;wreg free
  4866   003030  C014  F07C         	movff	?___flmul,___cosdf@z
  4867   003034  C015  F07D         	movff	?___flmul+1,___cosdf@z+1
  4868   003038  C016  F07E         	movff	?___flmul+2,___cosdf@z+2
  4869   00303C  C017  F07F         	movff	?___flmul+3,___cosdf@z+3
  4870   003040  C07C  F014         	movff	___cosdf@z,___flmul@b
  4871   003044  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  4872   003048  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  4873   00304C  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  4874   003050  C07C  F018         	movff	___cosdf@z,___flmul@a
  4875   003054  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  4876   003058  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  4877   00305C  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  4878   003060  EC68  F00A         	call	___flmul	;wreg free
  4879   003064  C014  F078         	movff	?___flmul,___cosdf@w
  4880   003068  C015  F079         	movff	?___flmul+1,___cosdf@w+1
  4881   00306C  C016  F07A         	movff	?___flmul+2,___cosdf@w+2
  4882   003070  C017  F07B         	movff	?___flmul+3,___cosdf@w+3
  4883   003074  0E17               	movlw	23
  4884   003076  6E18               	movwf	___flmul@a^0,c
  4885   003078  0E9A               	movlw	154
  4886   00307A  6E19               	movwf	(___flmul@a+1)^0,c
  4887   00307C  0ECC               	movlw	204
  4888   00307E  6E1A               	movwf	(___flmul@a+2)^0,c
  4889   003080  0E37               	movlw	55
  4890   003082  6E1B               	movwf	(___flmul@a+3)^0,c
  4891   003084  C07C  F014         	movff	___cosdf@z,___flmul@b
  4892   003088  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  4893   00308C  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  4894   003090  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  4895   003094  EC68  F00A         	call	___flmul	;wreg free
  4896   003098  C014  F046         	movff	?___flmul,___fladd@b
  4897   00309C  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4898   0030A0  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4899   0030A4  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4900   0030A8  0E3F               	movlw	63
  4901   0030AA  6E4A               	movwf	___fladd@a^0,c
  4902   0030AC  0E04               	movlw	4
  4903   0030AE  6E4B               	movwf	(___fladd@a+1)^0,c
  4904   0030B0  0EB6               	movlw	182
  4905   0030B2  6E4C               	movwf	(___fladd@a+2)^0,c
  4906   0030B4  0EBA               	movlw	186
  4907   0030B6  6E4D               	movwf	(___fladd@a+3)^0,c
  4908   0030B8  EC07  F008         	call	___fladd	;wreg free
  4909   0030BC  C046  F068         	movff	?___fladd,___cosdf@r
  4910   0030C0  C047  F069         	movff	?___fladd+1,___cosdf@r+1
  4911   0030C4  C048  F06A         	movff	?___fladd+2,___cosdf@r+2
  4912   0030C8  C049  F06B         	movff	?___fladd+3,___cosdf@r+3
  4913   0030CC  0E00               	movlw	0
  4914   0030CE  6E4A               	movwf	___fladd@a^0,c
  4915   0030D0  0E00               	movlw	0
  4916   0030D2  6E4B               	movwf	(___fladd@a+1)^0,c
  4917   0030D4  0E80               	movlw	128
  4918   0030D6  6E4C               	movwf	(___fladd@a+2)^0,c
  4919   0030D8  0E3F               	movlw	63
  4920   0030DA  6E4D               	movwf	(___fladd@a+3)^0,c
  4921   0030DC  0E00               	movlw	0
  4922   0030DE  6E18               	movwf	___flmul@a^0,c
  4923   0030E0  0E00               	movlw	0
  4924   0030E2  6E19               	movwf	(___flmul@a+1)^0,c
  4925   0030E4  0E00               	movlw	0
  4926   0030E6  6E1A               	movwf	(___flmul@a+2)^0,c
  4927   0030E8  0EBF               	movlw	191
  4928   0030EA  6E1B               	movwf	(___flmul@a+3)^0,c
  4929   0030EC  C07C  F014         	movff	___cosdf@z,___flmul@b
  4930   0030F0  C07D  F015         	movff	___cosdf@z+1,___flmul@b+1
  4931   0030F4  C07E  F016         	movff	___cosdf@z+2,___flmul@b+2
  4932   0030F8  C07F  F017         	movff	___cosdf@z+3,___flmul@b+3
  4933   0030FC  EC68  F00A         	call	___flmul	;wreg free
  4934   003100  C014  F046         	movff	?___flmul,___fladd@b
  4935   003104  C015  F047         	movff	?___flmul+1,___fladd@b+1
  4936   003108  C016  F048         	movff	?___flmul+2,___fladd@b+2
  4937   00310C  C017  F049         	movff	?___flmul+3,___fladd@b+3
  4938   003110  EC07  F008         	call	___fladd	;wreg free
  4939   003114  C046  F06C         	movff	?___fladd,___cosdf$4121
  4940   003118  C047  F06D         	movff	?___fladd+1,___cosdf$4121+1
  4941   00311C  C048  F06E         	movff	?___fladd+2,___cosdf$4121+2
  4942   003120  C049  F06F         	movff	?___fladd+3,___cosdf$4121+3
  4943   003124  C07C  F018         	movff	___cosdf@z,___flmul@a
  4944   003128  C07D  F019         	movff	___cosdf@z+1,___flmul@a+1
  4945   00312C  C07E  F01A         	movff	___cosdf@z+2,___flmul@a+2
  4946   003130  C07F  F01B         	movff	___cosdf@z+3,___flmul@a+3
  4947   003134  C078  F014         	movff	___cosdf@w,___flmul@b
  4948   003138  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  4949   00313C  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  4950   003140  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  4951   003144  EC68  F00A         	call	___flmul	;wreg free
  4952   003148  C014  F070         	movff	?___flmul,___cosdf$4122
  4953   00314C  C015  F071         	movff	?___flmul+1,___cosdf$4122+1
  4954   003150  C016  F072         	movff	?___flmul+2,___cosdf$4122+2
  4955   003154  C017  F073         	movff	?___flmul+3,___cosdf$4122+3
  4956   003158  0E9F               	movlw	159
  4957   00315A  6E18               	movwf	___flmul@a^0,c
  4958   00315C  0EAA               	movlw	170
  4959   00315E  6E19               	movwf	(___flmul@a+1)^0,c
  4960   003160  0E2A               	movlw	42
  4961   003162  6E1A               	movwf	(___flmul@a+2)^0,c
  4962   003164  0E3D               	movlw	61
  4963   003166  6E1B               	movwf	(___flmul@a+3)^0,c
  4964   003168  C078  F014         	movff	___cosdf@w,___flmul@b
  4965   00316C  C079  F015         	movff	___cosdf@w+1,___flmul@b+1
  4966   003170  C07A  F016         	movff	___cosdf@w+2,___flmul@b+2
  4967   003174  C07B  F017         	movff	___cosdf@w+3,___flmul@b+3
  4968   003178  EC68  F00A         	call	___flmul	;wreg free
  4969   00317C  C014  F04A         	movff	?___flmul,___fladd@a
  4970   003180  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4971   003184  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4972   003188  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4973   00318C  C06C  F046         	movff	___cosdf$4121,___fladd@b
  4974   003190  C06D  F047         	movff	___cosdf$4121+1,___fladd@b+1
  4975   003194  C06E  F048         	movff	___cosdf$4121+2,___fladd@b+2
  4976   003198  C06F  F049         	movff	___cosdf$4121+3,___fladd@b+3
  4977   00319C  EC07  F008         	call	___fladd	;wreg free
  4978   0031A0  C046  F074         	movff	?___fladd,___cosdf$4123
  4979   0031A4  C047  F075         	movff	?___fladd+1,___cosdf$4123+1
  4980   0031A8  C048  F076         	movff	?___fladd+2,___cosdf$4123+2
  4981   0031AC  C049  F077         	movff	?___fladd+3,___cosdf$4123+3
  4982   0031B0  C074  F046         	movff	___cosdf$4123,___fladd@b
  4983   0031B4  C075  F047         	movff	___cosdf$4123+1,___fladd@b+1
  4984   0031B8  C076  F048         	movff	___cosdf$4123+2,___fladd@b+2
  4985   0031BC  C077  F049         	movff	___cosdf$4123+3,___fladd@b+3
  4986   0031C0  C068  F018         	movff	___cosdf@r,___flmul@a
  4987   0031C4  C069  F019         	movff	___cosdf@r+1,___flmul@a+1
  4988   0031C8  C06A  F01A         	movff	___cosdf@r+2,___flmul@a+2
  4989   0031CC  C06B  F01B         	movff	___cosdf@r+3,___flmul@a+3
  4990   0031D0  C070  F014         	movff	___cosdf$4122,___flmul@b
  4991   0031D4  C071  F015         	movff	___cosdf$4122+1,___flmul@b+1
  4992   0031D8  C072  F016         	movff	___cosdf$4122+2,___flmul@b+2
  4993   0031DC  C073  F017         	movff	___cosdf$4122+3,___flmul@b+3
  4994   0031E0  EC68  F00A         	call	___flmul	;wreg free
  4995   0031E4  C014  F04A         	movff	?___flmul,___fladd@a
  4996   0031E8  C015  F04B         	movff	?___flmul+1,___fladd@a+1
  4997   0031EC  C016  F04C         	movff	?___flmul+2,___fladd@a+2
  4998   0031F0  C017  F04D         	movff	?___flmul+3,___fladd@a+3
  4999   0031F4  EC07  F008         	call	___fladd	;wreg free
  5000   0031F8  C046  F064         	movff	?___fladd,?___cosdf
  5001   0031FC  C047  F065         	movff	?___fladd+1,?___cosdf+1
  5002   003200  C048  F066         	movff	?___fladd+2,?___cosdf+2
  5003   003204  C049  F067         	movff	?___fladd+3,?___cosdf+3
  5004   003208  0012               	return		;funcret
  5005   00320A                     __end_of___cosdf:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function _printf *****************
  5009 ;; Defined at:
  5010 ;;		line 5 in file "D:\MPLABX\Compiler\pic\sources\c99\common\printf.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  5013 ;;		 -> STR_22(17), STR_10(5), 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  ret             2    0        int 
  5016 ;;  ap              1   83[COMRAM] PTR void [1]
  5017 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2  110[BANK0 ] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;Total ram usage:        5 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; Hardware stack levels required when called: 8
  5034 ;; This function calls:
  5035 ;;		_vfprintf
  5036 ;; This function is called by:
  5037 ;;		_runDAC
  5038 ;;		_runUART
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text16
  5043   0047C0                     __ptext16:
  5044                           	callstack 0
  5045   0047C0                     _printf:
  5046                           	callstack 21
  5047   0047C0  0ED0               	movlw	low (?_printf+2)
  5048   0047C2  6E54               	movwf	printf@ap^0,c
  5049   0047C4  0E00               	movlw	0
  5050   0047C6  0100               	movlb	0	; () banked
  5051   0047C8  6FC7               	movwf	vfprintf@fp& (0+255),b
  5052   0047CA  0E00               	movlw	0
  5053   0047CC  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5054   0047CE  C0CE  F0C9         	movff	printf@fmt,vfprintf@fmt
  5055   0047D2  C0CF  F0CA         	movff	printf@fmt+1,vfprintf@fmt+1
  5056   0047D6  0E54               	movlw	low printf@ap
  5057   0047D8  6FCB               	movwf	vfprintf@ap& (0+255),b
  5058   0047DA  EC68  F022         	call	_vfprintf	;wreg free
  5059   0047DE  0012               	return		;funcret
  5060   0047E0                     __end_of_printf:
  5061                           	callstack 0
  5062                           
  5063 ;; *************** function _SPI_write *****************
  5064 ;; Defined at:
  5065 ;;		line 93 in file "DAC.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  data            1    wreg     unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  data            1    7[COMRAM] unsigned char 
  5070 ;;  LSB             1    6[COMRAM] unsigned char 
  5071 ;;  MSB             1    5[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;Total ram usage:        3 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_runDAC
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text17
  5096   004634                     __ptext17:
  5097                           	callstack 0
  5098   004634                     _SPI_write:
  5099                           	callstack 28
  5100                           
  5101                           ;incstack = 0
  5102                           ;SPI_write@data stored from wreg
  5103   004634  6E08               	movwf	SPI_write@data^0,c
  5104   004636                     
  5105                           ;DAC.c: 94:     uint8_t MSB, LSB;;DAC.c: 96:     MSB = (uint8_t)(0b00110000 | (data >> 4
      +                          ));
  5106   004636  3808               	swapf	SPI_write@data^0,w,c
  5107   004638  0B0F               	andlw	15
  5108   00463A  0930               	iorlw	48
  5109   00463C  6E06               	movwf	SPI_write@MSB^0,c
  5110                           
  5111                           ;DAC.c: 97:     LSB = (uint8_t)(data << 4);
  5112   00463E  3808               	swapf	SPI_write@data^0,w,c
  5113   004640  0BF0               	andlw	240
  5114   004642  6E07               	movwf	SPI_write@LSB^0,c
  5115   004644                     
  5116                           ;DAC.c: 99:     LATBbits.LB3 = 0;
  5117   004644  968A               	bcf	138,3,c	;volatile
  5118   004646                     
  5119                           ;DAC.c: 101:     SSP1BUF = MSB;
  5120   004646  C006  FFC9         	movff	SPI_write@MSB,4041	;volatile
  5121   00464A                     l229:
  5122   00464A  A69E               	btfss	3998,3,c	;volatile
  5123   00464C  EF2A  F023         	goto	u8651
  5124   004650  EF2C  F023         	goto	u8650
  5125   004654                     u8651:
  5126   004654  EF25  F023         	goto	l229
  5127   004658                     u8650:
  5128   004658                     
  5129                           ;DAC.c: 103:     SSP1IF = 0;
  5130   004658  969E               	bcf	3998,3,c	;volatile
  5131                           
  5132                           ;DAC.c: 105:     SSP1BUF = LSB;
  5133   00465A  C007  FFC9         	movff	SPI_write@LSB,4041	;volatile
  5134   00465E                     l232:
  5135   00465E  A69E               	btfss	3998,3,c	;volatile
  5136   004660  EF34  F023         	goto	u8661
  5137   004664  EF36  F023         	goto	u8660
  5138   004668                     u8661:
  5139   004668  EF2F  F023         	goto	l232
  5140   00466C                     u8660:
  5141   00466C                     
  5142                           ;DAC.c: 107:     SSP1IF = 0;
  5143   00466C  969E               	bcf	3998,3,c	;volatile
  5144                           
  5145                           ;DAC.c: 109:     LATBbits.LB3 = 1;
  5146   00466E  868A               	bsf	138,3,c	;volatile
  5147   004670  0012               	return		;funcret
  5148   004672                     __end_of_SPI_write:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _runADC *****************
  5152 ;; Defined at:
  5153 ;;		line 13 in file "ADC.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;		None
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  text           17    0[BANK1 ] unsigned char [17]
  5158 ;;  voltage2        4   21[BANK1 ] float 
  5159 ;;  voltage1        4   17[BANK1 ] float 
  5160 ;;  pot2            2   27[BANK1 ] unsigned short 
  5161 ;;  pot1            2   25[BANK1 ] unsigned short 
  5162 ;;  keepState       1   29[BANK1 ] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Totals:         0       2      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;Total ram usage:       32 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 9
  5179 ;; This function calls:
  5180 ;;		_LCD_ShowString
  5181 ;;		___fldiv
  5182 ;;		___flmul
  5183 ;;		___xxtofl
  5184 ;;		_sprintf
  5185 ;; This function is called by:
  5186 ;;		_main
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text18
  5191   002DFA                     __ptext18:
  5192                           	callstack 0
  5193   002DFA                     _runADC:
  5194                           	callstack 21
  5195   002DFA                     
  5196                           ;ADC.c: 16: ANSELAbits.ANSA5 = 1;
  5197   002DFA  010F               	movlb	15	; () banked
  5198   002DFC  8B38               	bsf	56,5,b	;volatile
  5199                           
  5200                           ;ADC.c: 17: ANSELEbits.ANSE0 = 1;
  5201   002DFE  813C               	bsf	60,0,b	;volatile
  5202                           
  5203                           ;ADC.c: 19: ADCON2bits.ADFM = 1;
  5204   002E00  8EC0               	bsf	192,7,c	;volatile
  5205   002E02                     
  5206                           ; BSR set to: 15
  5207                           ;ADC.c: 20: ADCON2bits.ADCS = 0b110;
  5208   002E02  50C0               	movf	192,w,c	;volatile
  5209   002E04  0BF8               	andlw	-8
  5210   002E06  0906               	iorlw	6
  5211   002E08  6EC0               	movwf	192,c	;volatile
  5212                           
  5213                           ;ADC.c: 21: ADCON2bits.ACQT = 0b110;
  5214   002E0A  50C0               	movf	192,w,c	;volatile
  5215   002E0C  0BC7               	andlw	-57
  5216   002E0E  0930               	iorlw	48
  5217   002E10  6EC0               	movwf	192,c	;volatile
  5218   002E12                     
  5219                           ; BSR set to: 15
  5220                           ;ADC.c: 22: ADCON0bits.ADON = 1;
  5221   002E12  80C2               	bsf	194,0,c	;volatile
  5222   002E14                     
  5223                           ; BSR set to: 15
  5224                           ;ADC.c: 25: uint16_t pot1, pot2;;ADC.c: 26: float voltage1, voltage2;;ADC.c: 27: char te
      +                          xt[17] = "";
  5225   002E14  EE21  F080         	lfsr	2,runADC@text
  5226   002E18  0E10               	movlw	16
  5227   002E1A                     u9151:
  5228   002E1A  6ADE               	clrf	postinc2,c
  5229   002E1C  06E8               	decf	wreg,f,c
  5230   002E1E  E2FD               	bc	u9151
  5231   002E20                     
  5232                           ; BSR set to: 15
  5233                           ;ADC.c: 28: uint8_t keepState = 1;
  5234   002E20  0E01               	movlw	1
  5235   002E22  0101               	movlb	1	; () banked
  5236   002E24  6F9D               	movwf	runADC@keepState& (0+255),b
  5237                           
  5238                           ;ADC.c: 30: while(keepState){
  5239   002E26  EFFB  F017         	goto	l423
  5240   002E2A                     l7093:
  5241                           
  5242                           ; BSR set to: 1
  5243                           ;ADC.c: 32:     ADCON0bits.CHS = 5;
  5244   002E2A  50C2               	movf	194,w,c	;volatile
  5245   002E2C  0B83               	andlw	-125
  5246   002E2E  0914               	iorlw	20
  5247   002E30  6EC2               	movwf	194,c	;volatile
  5248   002E32                     
  5249                           ; BSR set to: 1
  5250                           ;ADC.c: 33:     GODONE = 1;
  5251   002E32  82C2               	bsf	4034,1,c	;volatile
  5252   002E34                     l425:
  5253   002E34  B2C2               	btfsc	4034,1,c	;volatile
  5254   002E36  EF1F  F017         	goto	u9161
  5255   002E3A  EF21  F017         	goto	u9160
  5256   002E3E                     u9161:
  5257   002E3E  EF1A  F017         	goto	l425
  5258   002E42                     u9160:
  5259   002E42                     
  5260                           ;ADC.c: 35:     pot1 = (uint16_t)((ADRESH << 8) | ADRESL);
  5261   002E42  50C3               	movf	195,w,c	;volatile
  5262   002E44  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5263   002E48  0100               	movlb	0	; () banked
  5264   002E4A  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5265   002E4C  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5266   002E50  6BE7               	clrf	??_runADC& (0+255),b
  5267   002E52  11E7               	iorwf	??_runADC& (0+255),w,b
  5268   002E54  0101               	movlb	1	; () banked
  5269   002E56  6F99               	movwf	runADC@pot1& (0+255),b
  5270   002E58  0100               	movlb	0	; () banked
  5271   002E5A  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5272   002E5C  0101               	movlb	1	; () banked
  5273   002E5E  6F9A               	movwf	(runADC@pot1+1)& (0+255),b
  5274   002E60                     
  5275                           ; BSR set to: 1
  5276                           ;ADC.c: 36:     voltage1 = (float)pot1 / (float)(1023) * (float)(3.3);
  5277   002E60  0E00               	movlw	0
  5278   002E62  6E31               	movwf	___fldiv@a^0,c
  5279   002E64  0EC0               	movlw	192
  5280   002E66  6E32               	movwf	(___fldiv@a+1)^0,c
  5281   002E68  0E7F               	movlw	127
  5282   002E6A  6E33               	movwf	(___fldiv@a+2)^0,c
  5283   002E6C  0E44               	movlw	68
  5284   002E6E  6E34               	movwf	(___fldiv@a+3)^0,c
  5285   002E70  C199  F006         	movff	runADC@pot1,___xxtofl@val
  5286   002E74  C19A  F007         	movff	runADC@pot1+1,___xxtofl@val+1
  5287   002E78  6A08               	clrf	(___xxtofl@val+2)^0,c
  5288   002E7A  6A09               	clrf	(___xxtofl@val+3)^0,c
  5289   002E7C  0E00               	movlw	0
  5290   002E7E  EC05  F019         	call	___xxtofl
  5291   002E82  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5292   002E86  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5293   002E8A  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5294   002E8E  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5295   002E92  EC69  F010         	call	___fldiv	;wreg free
  5296   002E96  C02D  F014         	movff	?___fldiv,___flmul@b
  5297   002E9A  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5298   002E9E  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5299   002EA2  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5300   002EA6  0E33               	movlw	51
  5301   002EA8  6E18               	movwf	___flmul@a^0,c
  5302   002EAA  0E33               	movlw	51
  5303   002EAC  6E19               	movwf	(___flmul@a+1)^0,c
  5304   002EAE  0E53               	movlw	83
  5305   002EB0  6E1A               	movwf	(___flmul@a+2)^0,c
  5306   002EB2  0E40               	movlw	64
  5307   002EB4  6E1B               	movwf	(___flmul@a+3)^0,c
  5308   002EB6  EC68  F00A         	call	___flmul	;wreg free
  5309   002EBA  C014  F191         	movff	?___flmul,runADC@voltage1
  5310   002EBE  C015  F192         	movff	?___flmul+1,runADC@voltage1+1
  5311   002EC2  C016  F193         	movff	?___flmul+2,runADC@voltage1+2
  5312   002EC6  C017  F194         	movff	?___flmul+3,runADC@voltage1+3
  5313   002ECA                     
  5314                           ;ADC.c: 39:     ADCON0bits.CHS = 4;
  5315   002ECA  50C2               	movf	194,w,c	;volatile
  5316   002ECC  0B83               	andlw	-125
  5317   002ECE  0910               	iorlw	16
  5318   002ED0  6EC2               	movwf	194,c	;volatile
  5319   002ED2                     
  5320                           ;ADC.c: 40:     GODONE = 1;
  5321   002ED2  82C2               	bsf	4034,1,c	;volatile
  5322   002ED4                     l428:
  5323   002ED4  B2C2               	btfsc	4034,1,c	;volatile
  5324   002ED6  EF6F  F017         	goto	u9171
  5325   002EDA  EF71  F017         	goto	u9170
  5326   002EDE                     u9171:
  5327   002EDE  EF6A  F017         	goto	l428
  5328   002EE2                     u9170:
  5329   002EE2                     
  5330                           ;ADC.c: 42:     pot2 = (uint16_t)((ADRESH << 8) | ADRESL);
  5331   002EE2  50C3               	movf	195,w,c	;volatile
  5332   002EE4  CFC4 F0E7          	movff	4036,??_runADC	;volatile
  5333   002EE8  0100               	movlb	0	; () banked
  5334   002EEA  6BE8               	clrf	(??_runADC+1)& (0+255),b
  5335   002EEC  C0E7  F0E8         	movff	??_runADC,??_runADC+1
  5336   002EF0  6BE7               	clrf	??_runADC& (0+255),b
  5337   002EF2  11E7               	iorwf	??_runADC& (0+255),w,b
  5338   002EF4  0101               	movlb	1	; () banked
  5339   002EF6  6F9B               	movwf	runADC@pot2& (0+255),b
  5340   002EF8  0100               	movlb	0	; () banked
  5341   002EFA  51E8               	movf	(??_runADC+1)& (0+255),w,b
  5342   002EFC  0101               	movlb	1	; () banked
  5343   002EFE  6F9C               	movwf	(runADC@pot2+1)& (0+255),b
  5344   002F00                     
  5345                           ; BSR set to: 1
  5346                           ;ADC.c: 43:     voltage2 = (float)pot2 / (float)(1023) * (float)(3.3);
  5347   002F00  0E00               	movlw	0
  5348   002F02  6E31               	movwf	___fldiv@a^0,c
  5349   002F04  0EC0               	movlw	192
  5350   002F06  6E32               	movwf	(___fldiv@a+1)^0,c
  5351   002F08  0E7F               	movlw	127
  5352   002F0A  6E33               	movwf	(___fldiv@a+2)^0,c
  5353   002F0C  0E44               	movlw	68
  5354   002F0E  6E34               	movwf	(___fldiv@a+3)^0,c
  5355   002F10  C19B  F006         	movff	runADC@pot2,___xxtofl@val
  5356   002F14  C19C  F007         	movff	runADC@pot2+1,___xxtofl@val+1
  5357   002F18  6A08               	clrf	(___xxtofl@val+2)^0,c
  5358   002F1A  6A09               	clrf	(___xxtofl@val+3)^0,c
  5359   002F1C  0E00               	movlw	0
  5360   002F1E  EC05  F019         	call	___xxtofl
  5361   002F22  C006  F02D         	movff	?___xxtofl,___fldiv@b
  5362   002F26  C007  F02E         	movff	?___xxtofl+1,___fldiv@b+1
  5363   002F2A  C008  F02F         	movff	?___xxtofl+2,___fldiv@b+2
  5364   002F2E  C009  F030         	movff	?___xxtofl+3,___fldiv@b+3
  5365   002F32  EC69  F010         	call	___fldiv	;wreg free
  5366   002F36  C02D  F014         	movff	?___fldiv,___flmul@b
  5367   002F3A  C02E  F015         	movff	?___fldiv+1,___flmul@b+1
  5368   002F3E  C02F  F016         	movff	?___fldiv+2,___flmul@b+2
  5369   002F42  C030  F017         	movff	?___fldiv+3,___flmul@b+3
  5370   002F46  0E33               	movlw	51
  5371   002F48  6E18               	movwf	___flmul@a^0,c
  5372   002F4A  0E33               	movlw	51
  5373   002F4C  6E19               	movwf	(___flmul@a+1)^0,c
  5374   002F4E  0E53               	movlw	83
  5375   002F50  6E1A               	movwf	(___flmul@a+2)^0,c
  5376   002F52  0E40               	movlw	64
  5377   002F54  6E1B               	movwf	(___flmul@a+3)^0,c
  5378   002F56  EC68  F00A         	call	___flmul	;wreg free
  5379   002F5A  C014  F195         	movff	?___flmul,runADC@voltage2
  5380   002F5E  C015  F196         	movff	?___flmul+1,runADC@voltage2+1
  5381   002F62  C016  F197         	movff	?___flmul+2,runADC@voltage2+2
  5382   002F66  C017  F198         	movff	?___flmul+3,runADC@voltage2+3
  5383   002F6A                     
  5384                           ;ADC.c: 45:     sprintf(text, "POT1:%.1fPOT2:%.1f", voltage1, voltage2);
  5385   002F6A  0E80               	movlw	low runADC@text
  5386   002F6C  0100               	movlb	0	; () banked
  5387   002F6E  6FCE               	movwf	sprintf@s& (0+255),b
  5388   002F70  0E01               	movlw	high runADC@text
  5389   002F72  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5390   002F74  0E17               	movlw	low STR_21
  5391   002F76  6FD0               	movwf	sprintf@fmt& (0+255),b
  5392   002F78  0EFF               	movlw	high STR_21
  5393   002F7A  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5394   002F7C  C191  F0D2         	movff	runADC@voltage1,?_sprintf+4
  5395   002F80  C192  F0D3         	movff	runADC@voltage1+1,?_sprintf+5
  5396   002F84  C193  F0D4         	movff	runADC@voltage1+2,?_sprintf+6
  5397   002F88  C194  F0D5         	movff	runADC@voltage1+3,?_sprintf+7
  5398   002F8C  C195  F0D6         	movff	runADC@voltage2,?_sprintf+8
  5399   002F90  C196  F0D7         	movff	runADC@voltage2+1,?_sprintf+9
  5400   002F94  C197  F0D8         	movff	runADC@voltage2+2,?_sprintf+10
  5401   002F98  C198  F0D9         	movff	runADC@voltage2+3,?_sprintf+11
  5402   002F9C  ECD5  F022         	call	_sprintf	;wreg free
  5403   002FA0                     
  5404                           ;ADC.c: 46:     LCD_ShowString(2, text);
  5405   002FA0  0E80               	movlw	low runADC@text
  5406   002FA2  6E07               	movwf	LCD_ShowString@textData^0,c
  5407   002FA4  0E01               	movlw	high runADC@text
  5408   002FA6  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5409   002FA8  0E02               	movlw	2
  5410   002FAA  EC69  F020         	call	_LCD_ShowString
  5411   002FAE                     
  5412                           ;ADC.c: 48:     if(PORTAbits.RA2){
  5413   002FAE  A480               	btfss	128,2,c	;volatile
  5414   002FB0  EFDC  F017         	goto	u9181
  5415   002FB4  EFDE  F017         	goto	u9180
  5416   002FB8                     u9181:
  5417   002FB8  EFFB  F017         	goto	l423
  5418   002FBC                     u9180:
  5419   002FBC                     
  5420                           ;ADC.c: 49:         _delay((unsigned long)((50)*(32E6/4000.0)));
  5421   002FBC  0E03               	movlw	3
  5422   002FBE  0100               	movlb	0	; () banked
  5423   002FC0  6FE8               	movwf	(??_runADC+1)& (0+255),b
  5424   002FC2  0E08               	movlw	8
  5425   002FC4  6FE7               	movwf	??_runADC& (0+255),b
  5426   002FC6  0E77               	movlw	119
  5427   002FC8                     u9517:
  5428   002FC8  2EE8               	decfsz	wreg,f,c
  5429   002FCA  D7FE               	bra	u9517
  5430   002FCC  2FE7               	decfsz	??_runADC& (0+255),f,b
  5431   002FCE  D7FC               	bra	u9517
  5432   002FD0  2FE8               	decfsz	(??_runADC+1)& (0+255),f,b
  5433   002FD2  D7FA               	bra	u9517
  5434   002FD4                     
  5435                           ;ADC.c: 50:         if(PORTAbits.RA2){
  5436   002FD4  A480               	btfss	128,2,c	;volatile
  5437   002FD6  EFEF  F017         	goto	u9191
  5438   002FDA  EFF1  F017         	goto	u9190
  5439   002FDE                     u9191:
  5440   002FDE  EFFB  F017         	goto	l423
  5441   002FE2                     u9190:
  5442   002FE2                     l433:
  5443   002FE2  B480               	btfsc	128,2,c	;volatile
  5444   002FE4  EFF6  F017         	goto	u9201
  5445   002FE8  EFF8  F017         	goto	u9200
  5446   002FEC                     u9201:
  5447   002FEC  EFF1  F017         	goto	l433
  5448   002FF0                     u9200:
  5449   002FF0                     
  5450                           ;ADC.c: 52:             keepState = 0;
  5451   002FF0  0E00               	movlw	0
  5452   002FF2  0101               	movlb	1	; () banked
  5453   002FF4  6F9D               	movwf	runADC@keepState& (0+255),b
  5454   002FF6                     l423:
  5455                           
  5456                           ;ADC.c: 30: while(keepState){
  5457   002FF6  0101               	movlb	1	; () banked
  5458   002FF8  519D               	movf	runADC@keepState& (0+255),w,b
  5459   002FFA  A4D8               	btfss	status,2,c
  5460   002FFC  EF02  F018         	goto	u9211
  5461   003000  EF04  F018         	goto	u9210
  5462   003004                     u9211:
  5463   003004  EF15  F017         	goto	l7093
  5464   003008                     u9210:
  5465   003008                     
  5466                           ; BSR set to: 1
  5467                           ;ADC.c: 58: ADCON0bits.ADON = 0;
  5468   003008  90C2               	bcf	194,0,c	;volatile
  5469   00300A                     
  5470                           ; BSR set to: 1
  5471   00300A  0012               	return		;funcret
  5472   00300C                     __end_of_runADC:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function ___xxtofl *****************
  5476 ;; Defined at:
  5477 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\xxtofl.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  sign            1    wreg     unsigned char 
  5480 ;;  val             4    5[COMRAM] long 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  sign            1   13[COMRAM] unsigned char 
  5483 ;;  arg             4   15[COMRAM] unsigned long 
  5484 ;;  exp             1   14[COMRAM] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  4    5[COMRAM] unsigned char 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:       14 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 1
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_runDAC
  5505 ;;		_runADC
  5506 ;;		___rem_pio2f
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text19
  5511   00320A                     __ptext19:
  5512                           	callstack 0
  5513   00320A                     ___xxtofl:
  5514                           	callstack 26
  5515                           
  5516                           ; BSR set to: 1
  5517                           ;incstack = 0
  5518                           ;___xxtofl@sign stored from wreg
  5519   00320A  6E0E               	movwf	___xxtofl@sign^0,c
  5520   00320C  500E               	movf	___xxtofl@sign^0,w,c
  5521   00320E  B4D8               	btfsc	status,2,c
  5522   003210  EF0C  F019         	goto	u8291
  5523   003214  EF0E  F019         	goto	u8290
  5524   003218                     u8291:
  5525   003218  EF30  F019         	goto	l1201
  5526   00321C                     u8290:
  5527   00321C  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5528   00321E  EF15  F019         	goto	u8300
  5529   003222  EF13  F019         	goto	u8301
  5530   003226                     u8301:
  5531   003226  EF30  F019         	goto	l1201
  5532   00322A                     u8300:
  5533   00322A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  5534   00322E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  5535   003232  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  5536   003236  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  5537   00323A  1E0A               	comf	??___xxtofl^0,f,c
  5538   00323C  1E0B               	comf	(??___xxtofl+1)^0,f,c
  5539   00323E  1E0C               	comf	(??___xxtofl+2)^0,f,c
  5540   003240  1E0D               	comf	(??___xxtofl+3)^0,f,c
  5541   003242  2A0A               	incf	??___xxtofl^0,f,c
  5542   003244  0E00               	movlw	0
  5543   003246  220B               	addwfc	(??___xxtofl+1)^0,f,c
  5544   003248  220C               	addwfc	(??___xxtofl+2)^0,f,c
  5545   00324A  220D               	addwfc	(??___xxtofl+3)^0,f,c
  5546   00324C  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  5547   003250  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  5548   003254  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  5549   003258  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  5550   00325C  EF38  F019         	goto	l6517
  5551   003260                     l1201:
  5552   003260  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  5553   003264  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5554   003268  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5555   00326C  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5556   003270                     l6517:
  5557   003270  5006               	movf	___xxtofl@val^0,w,c
  5558   003272  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  5559   003274  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  5560   003276  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  5561   003278  A4D8               	btfss	status,2,c
  5562   00327A  EF41  F019         	goto	u8311
  5563   00327E  EF43  F019         	goto	u8310
  5564   003282                     u8311:
  5565   003282  EF4D  F019         	goto	l6523
  5566   003286                     u8310:
  5567   003286  0E00               	movlw	0
  5568   003288  6E06               	movwf	?___xxtofl^0,c
  5569   00328A  0E00               	movlw	0
  5570   00328C  6E07               	movwf	(?___xxtofl+1)^0,c
  5571   00328E  0E00               	movlw	0
  5572   003290  6E08               	movwf	(?___xxtofl+2)^0,c
  5573   003292  0E00               	movlw	0
  5574   003294  6E09               	movwf	(?___xxtofl+3)^0,c
  5575   003296  EFDE  F019         	goto	l1204
  5576   00329A                     l6523:
  5577   00329A  0E96               	movlw	150
  5578   00329C  6E0F               	movwf	___xxtofl@exp^0,c
  5579   00329E  EF57  F019         	goto	l6527
  5580   0032A2                     l6525:
  5581   0032A2  2A0F               	incf	___xxtofl@exp^0,f,c
  5582   0032A4  90D8               	bcf	status,0,c
  5583   0032A6  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5584   0032A8  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5585   0032AA  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5586   0032AC  3210               	rrcf	___xxtofl@arg^0,f,c
  5587   0032AE                     l6527:
  5588   0032AE  0E00               	movlw	0
  5589   0032B0  1410               	andwf	___xxtofl@arg^0,w,c
  5590   0032B2  6E0A               	movwf	??___xxtofl^0,c
  5591   0032B4  0E00               	movlw	0
  5592   0032B6  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5593   0032B8  6E0B               	movwf	(??___xxtofl+1)^0,c
  5594   0032BA  0E00               	movlw	0
  5595   0032BC  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5596   0032BE  6E0C               	movwf	(??___xxtofl+2)^0,c
  5597   0032C0  0EFE               	movlw	254
  5598   0032C2  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5599   0032C4  6E0D               	movwf	(??___xxtofl+3)^0,c
  5600   0032C6  500A               	movf	??___xxtofl^0,w,c
  5601   0032C8  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5602   0032CA  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5603   0032CC  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5604   0032CE  A4D8               	btfss	status,2,c
  5605   0032D0  EF6C  F019         	goto	u8321
  5606   0032D4  EF6E  F019         	goto	u8320
  5607   0032D8                     u8321:
  5608   0032D8  EF51  F019         	goto	l6525
  5609   0032DC                     u8320:
  5610   0032DC  EF7C  F019         	goto	l1208
  5611   0032E0                     l6529:
  5612   0032E0  2A0F               	incf	___xxtofl@exp^0,f,c
  5613   0032E2  0E01               	movlw	1
  5614   0032E4  2610               	addwf	___xxtofl@arg^0,f,c
  5615   0032E6  0E00               	movlw	0
  5616   0032E8  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5617   0032EA  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5618   0032EC  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5619   0032EE  90D8               	bcf	status,0,c
  5620   0032F0  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5621   0032F2  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5622   0032F4  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5623   0032F6  3210               	rrcf	___xxtofl@arg^0,f,c
  5624   0032F8                     l1208:
  5625   0032F8  0E00               	movlw	0
  5626   0032FA  1410               	andwf	___xxtofl@arg^0,w,c
  5627   0032FC  6E0A               	movwf	??___xxtofl^0,c
  5628   0032FE  0E00               	movlw	0
  5629   003300  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5630   003302  6E0B               	movwf	(??___xxtofl+1)^0,c
  5631   003304  0E00               	movlw	0
  5632   003306  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5633   003308  6E0C               	movwf	(??___xxtofl+2)^0,c
  5634   00330A  0EFF               	movlw	255
  5635   00330C  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5636   00330E  6E0D               	movwf	(??___xxtofl+3)^0,c
  5637   003310  500A               	movf	??___xxtofl^0,w,c
  5638   003312  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5639   003314  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5640   003316  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5641   003318  A4D8               	btfss	status,2,c
  5642   00331A  EF91  F019         	goto	u8331
  5643   00331E  EF93  F019         	goto	u8330
  5644   003322                     u8331:
  5645   003322  EF70  F019         	goto	l6529
  5646   003326                     u8330:
  5647   003326  EF9B  F019         	goto	l6537
  5648   00332A                     l6535:
  5649   00332A  060F               	decf	___xxtofl@exp^0,f,c
  5650   00332C  90D8               	bcf	status,0,c
  5651   00332E  3610               	rlcf	___xxtofl@arg^0,f,c
  5652   003330  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5653   003332  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5654   003334  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5655   003336                     l6537:
  5656   003336  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5657   003338  EFA0  F019         	goto	u8341
  5658   00333C  EFA2  F019         	goto	u8340
  5659   003340                     u8341:
  5660   003340  EFAA  F019         	goto	l1215
  5661   003344                     u8340:
  5662   003344  0E02               	movlw	2
  5663   003346  600F               	cpfslt	___xxtofl@exp^0,c
  5664   003348  EFA8  F019         	goto	u8351
  5665   00334C  EFAA  F019         	goto	u8350
  5666   003350                     u8351:
  5667   003350  EF95  F019         	goto	l6535
  5668   003354                     u8350:
  5669   003354                     l1215:
  5670   003354  B00F               	btfsc	___xxtofl@exp^0,0,c
  5671   003356  EFAF  F019         	goto	u8361
  5672   00335A  EFB1  F019         	goto	u8360
  5673   00335E                     u8361:
  5674   00335E  EFB2  F019         	goto	l6543
  5675   003362                     u8360:
  5676   003362  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5677   003364                     l6543:
  5678   003364  90D8               	bcf	status,0,c
  5679   003366  320F               	rrcf	___xxtofl@exp^0,f,c
  5680   003368  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5681   00336C  6A0B               	clrf	(??___xxtofl+1)^0,c
  5682   00336E  6A0C               	clrf	(??___xxtofl+2)^0,c
  5683   003370  6A0D               	clrf	(??___xxtofl+3)^0,c
  5684   003372  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5685   003376  6A0C               	clrf	(??___xxtofl+2)^0,c
  5686   003378  6A0B               	clrf	(??___xxtofl+1)^0,c
  5687   00337A  6A0A               	clrf	??___xxtofl^0,c
  5688   00337C  500A               	movf	??___xxtofl^0,w,c
  5689   00337E  1210               	iorwf	___xxtofl@arg^0,f,c
  5690   003380  500B               	movf	(??___xxtofl+1)^0,w,c
  5691   003382  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5692   003384  500C               	movf	(??___xxtofl+2)^0,w,c
  5693   003386  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5694   003388  500D               	movf	(??___xxtofl+3)^0,w,c
  5695   00338A  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5696   00338C  500E               	movf	___xxtofl@sign^0,w,c
  5697   00338E  B4D8               	btfsc	status,2,c
  5698   003390  EFCC  F019         	goto	u8371
  5699   003394  EFCE  F019         	goto	u8370
  5700   003398                     u8371:
  5701   003398  EFD6  F019         	goto	l6553
  5702   00339C                     u8370:
  5703   00339C  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5704   00339E  EFD5  F019         	goto	u8380
  5705   0033A2  EFD3  F019         	goto	u8381
  5706   0033A6                     u8381:
  5707   0033A6  EFD6  F019         	goto	l6553
  5708   0033AA                     u8380:
  5709   0033AA  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5710   0033AC                     l6553:
  5711   0033AC  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5712   0033B0  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5713   0033B4  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5714   0033B8  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5715   0033BC                     l1204:
  5716   0033BC  0012               	return		;funcret
  5717   0033BE                     __end_of___xxtofl:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function _moveDisplay *****************
  5721 ;; Defined at:
  5722 ;;		line 11 in file "menu.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  menuI           1    wreg     unsigned char 
  5725 ;;  where           1  135[BANK0 ] unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  menuI           1   50[BANK1 ] unsigned char 
  5728 ;;  menuItem2      17   17[BANK1 ] unsigned char [17]
  5729 ;;  menuItem1      17    0[BANK1 ] unsigned char [17]
  5730 ;;  menuItems      16   34[BANK1 ] PTR unsigned char [8]
  5731 ;;		 -> STR_18(1), STR_17(6), STR_16(5), STR_15(4), 
  5732 ;;		 -> STR_14(4), STR_13(4), STR_12(5), STR_11(5), 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      unsigned char 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5742 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Totals:         0       3      51       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;Total ram usage:       54 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 9
  5749 ;; This function calls:
  5750 ;;		_LCD_ShowString
  5751 ;;		_sprintf
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text20
  5758   00398E                     __ptext20:
  5759                           	callstack 0
  5760   00398E                     _moveDisplay:
  5761                           	callstack 21
  5762                           
  5763                           ;incstack = 0
  5764                           ;moveDisplay@menuI stored from wreg
  5765   00398E  0101               	movlb	1	; () banked
  5766   003990  6FB2               	movwf	moveDisplay@menuI& (0+255),b
  5767   003992                     
  5768                           ;menu.c: 13:     char* menuItems[] = {"GPIO", "UART", "PWM", "ADC", "DAC", "GAME", "MUSI
      +                          C", ""};
  5769   003992  EE21  F0B3         	lfsr	2,moveDisplay@F6961
  5770   003996  EE11  F0A2         	lfsr	1,moveDisplay@menuItems
  5771   00399A  0E0F               	movlw	15
  5772   00399C                     u8881:
  5773   00399C  CFDB FFE3          	movff	plusw2,plusw1
  5774   0039A0  06E8               	decf	wreg,f,c
  5775   0039A2  E2FC               	bc	u8881
  5776                           
  5777                           ;menu.c: 14:     switch (where){
  5778   0039A4  EFEC  F01C         	goto	l6941
  5779   0039A8                     l6931:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;menu.c: 18:             if(menuI<6){
  5783   0039A8  0E06               	movlw	6
  5784   0039AA  0101               	movlb	1	; () banked
  5785   0039AC  61B2               	cpfslt	moveDisplay@menuI& (0+255),b
  5786   0039AE  EFDB  F01C         	goto	u8891
  5787   0039B2  EFDD  F01C         	goto	u8890
  5788   0039B6                     u8891:
  5789   0039B6  EFFC  F01C         	goto	l6943
  5790   0039BA                     u8890:
  5791   0039BA                     
  5792                           ; BSR set to: 1
  5793                           ;menu.c: 19:             menuI++;
  5794   0039BA  2BB2               	incf	moveDisplay@menuI& (0+255),f,b
  5795   0039BC  EFFC  F01C         	goto	l6943
  5796   0039C0                     l6935:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;menu.c: 23:             if(menuI>0){
  5800   0039C0  0101               	movlb	1	; () banked
  5801   0039C2  51B2               	movf	moveDisplay@menuI& (0+255),w,b
  5802   0039C4  B4D8               	btfsc	status,2,c
  5803   0039C6  EFE7  F01C         	goto	u8901
  5804   0039CA  EFE9  F01C         	goto	u8900
  5805   0039CE                     u8901:
  5806   0039CE  EFFC  F01C         	goto	l6943
  5807   0039D2                     u8900:
  5808   0039D2                     
  5809                           ; BSR set to: 1
  5810                           ;menu.c: 24:             menuI--;
  5811   0039D2  07B2               	decf	moveDisplay@menuI& (0+255),f,b
  5812   0039D4  EFFC  F01C         	goto	l6943
  5813   0039D8                     l6941:
  5814   0039D8  0100               	movlb	0	; () banked
  5815   0039DA  51E7               	movf	moveDisplay@where& (0+255),w,b
  5816                           
  5817                           ; Switch size 1, requested type "simple"
  5818                           ; Number of cases is 3, Range of values is 0 to 2
  5819                           ; switch strategies available:
  5820                           ; Name         Instructions Cycles
  5821                           ; simple_byte           10     6 (average)
  5822                           ;	Chosen strategy is simple_byte
  5823   0039DC  0A00               	xorlw	0	; case 0
  5824   0039DE  B4D8               	btfsc	status,2,c
  5825   0039E0  EFFC  F01C         	goto	l6943
  5826   0039E4  0A01               	xorlw	1	; case 1
  5827   0039E6  B4D8               	btfsc	status,2,c
  5828   0039E8  EFD4  F01C         	goto	l6931
  5829   0039EC  0A03               	xorlw	3	; case 2
  5830   0039EE  B4D8               	btfsc	status,2,c
  5831   0039F0  EFE0  F01C         	goto	l6935
  5832   0039F4  EFFC  F01C         	goto	l6943
  5833   0039F8                     l6943:
  5834                           
  5835                           ;menu.c: 28:     char menuItem1[17];;menu.c: 29:     char menuItem2[17];;menu.c: 30:    
      +                           sprintf(menuItem1, ">%-*s", 15, menuItems[menuI]);
  5836   0039F8  0E80               	movlw	low moveDisplay@menuItem1
  5837   0039FA  0100               	movlb	0	; () banked
  5838   0039FC  6FCE               	movwf	sprintf@s& (0+255),b
  5839   0039FE  0E01               	movlw	high moveDisplay@menuItem1
  5840   003A00  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5841   003A02  0ED0               	movlw	low STR_19
  5842   003A04  6FD0               	movwf	sprintf@fmt& (0+255),b
  5843   003A06  0EFF               	movlw	high STR_19
  5844   003A08  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5845   003A0A  0E00               	movlw	0
  5846   003A0C  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  5847   003A0E  0E0F               	movlw	15
  5848   003A10  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  5849   003A12  0101               	movlb	1	; () banked
  5850   003A14  51B2               	movf	moveDisplay@menuI& (0+255),w,b
  5851   003A16  0D02               	mullw	2
  5852   003A18  0EA2               	movlw	low moveDisplay@menuItems
  5853   003A1A  24F3               	addwf	243,w,c
  5854   003A1C  6ED9               	movwf	fsr2l,c
  5855   003A1E  0E01               	movlw	high moveDisplay@menuItems
  5856   003A20  20F4               	addwfc	prodh,w,c
  5857   003A22  6EDA               	movwf	fsr2h,c
  5858   003A24  CFDE F0D4          	movff	postinc2,?_sprintf+6
  5859   003A28  CFDD F0D5          	movff	postdec2,?_sprintf+7
  5860   003A2C  ECD5  F022         	call	_sprintf	;wreg free
  5861                           
  5862                           ;menu.c: 31:     sprintf(menuItem2, "%-*s", 16, menuItems[menuI+1]);
  5863   003A30  0E91               	movlw	low moveDisplay@menuItem2
  5864   003A32  0100               	movlb	0	; () banked
  5865   003A34  6FCE               	movwf	sprintf@s& (0+255),b
  5866   003A36  0E01               	movlw	high moveDisplay@menuItem2
  5867   003A38  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  5868   003A3A  0ED1               	movlw	low (STR_19+1)
  5869   003A3C  6FD0               	movwf	sprintf@fmt& (0+255),b
  5870   003A3E  0EFF               	movlw	high (STR_19+1)
  5871   003A40  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  5872   003A42  0E00               	movlw	0
  5873   003A44  6FD3               	movwf	(?_sprintf+5)& (0+255),b
  5874   003A46  0E10               	movlw	16
  5875   003A48  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  5876   003A4A  0101               	movlb	1	; () banked
  5877   003A4C  51B2               	movf	moveDisplay@menuI& (0+255),w,b
  5878   003A4E  0100               	movlb	0	; () banked
  5879   003A50  6FE8               	movwf	??_moveDisplay& (0+255),b
  5880   003A52  6BE9               	clrf	(??_moveDisplay+1)& (0+255),b
  5881   003A54  90D8               	bcf	status,0,c
  5882   003A56  37E8               	rlcf	??_moveDisplay& (0+255),f,b
  5883   003A58  37E9               	rlcf	(??_moveDisplay+1)& (0+255),f,b
  5884   003A5A  0E02               	movlw	2
  5885   003A5C  27E8               	addwf	??_moveDisplay& (0+255),f,b
  5886   003A5E  0E00               	movlw	0
  5887   003A60  23E9               	addwfc	(??_moveDisplay+1)& (0+255),f,b
  5888   003A62  0EA2               	movlw	low moveDisplay@menuItems
  5889   003A64  25E8               	addwf	??_moveDisplay& (0+255),w,b
  5890   003A66  6ED9               	movwf	fsr2l,c
  5891   003A68  0E01               	movlw	high moveDisplay@menuItems
  5892   003A6A  21E9               	addwfc	(??_moveDisplay+1)& (0+255),w,b
  5893   003A6C  6EDA               	movwf	fsr2h,c
  5894   003A6E  CFDE F0D4          	movff	postinc2,?_sprintf+6
  5895   003A72  CFDD F0D5          	movff	postdec2,?_sprintf+7
  5896   003A76  ECD5  F022         	call	_sprintf	;wreg free
  5897   003A7A                     
  5898                           ;menu.c: 32:     LCD_ShowString((char)1, menuItem1);
  5899   003A7A  0E80               	movlw	low moveDisplay@menuItem1
  5900   003A7C  6E07               	movwf	LCD_ShowString@textData^0,c
  5901   003A7E  0E01               	movlw	high moveDisplay@menuItem1
  5902   003A80  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5903   003A82  0E01               	movlw	1
  5904   003A84  EC69  F020         	call	_LCD_ShowString
  5905   003A88                     
  5906                           ;menu.c: 33:     LCD_ShowString((char)2, menuItem2);
  5907   003A88  0E91               	movlw	low moveDisplay@menuItem2
  5908   003A8A  6E07               	movwf	LCD_ShowString@textData^0,c
  5909   003A8C  0E01               	movlw	high moveDisplay@menuItem2
  5910   003A8E  6E08               	movwf	(LCD_ShowString@textData+1)^0,c
  5911   003A90  0E02               	movlw	2
  5912   003A92  EC69  F020         	call	_LCD_ShowString
  5913   003A96                     
  5914                           ;menu.c: 35:     return menuI;
  5915   003A96  0101               	movlb	1	; () banked
  5916   003A98  51B2               	movf	moveDisplay@menuI& (0+255),w,b
  5917   003A9A                     
  5918                           ; BSR set to: 1
  5919   003A9A  0012               	return		;funcret
  5920   003A9C                     __end_of_moveDisplay:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _sprintf *****************
  5924 ;; Defined at:
  5925 ;;		line 9 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_sprintf.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  s               2  110[BANK0 ] PTR unsigned char 
  5928 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), 
  5929 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  5930 ;;		 -> STR_21(19), STR_20(5), STR_19(6), 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  f              12  123[BANK0 ] struct _IO_FILE
  5933 ;;  ret             2    0        int 
  5934 ;;  ap              1  122[BANK0 ] PTR void [1]
  5935 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  2  110[BANK0 ] int 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5945 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;Total ram usage:       25 bytes
  5950 ;; Hardware stack levels used: 1
  5951 ;; Hardware stack levels required when called: 8
  5952 ;; This function calls:
  5953 ;;		_vfprintf
  5954 ;; This function is called by:
  5955 ;;		_moveDisplay
  5956 ;;		_runADC
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text21
  5961   0045AA                     __ptext21:
  5962                           	callstack 0
  5963   0045AA                     _sprintf:
  5964                           	callstack 21
  5965   0045AA  0ED2               	movlw	low (?_sprintf+4)
  5966   0045AC  0100               	movlb	0	; () banked
  5967   0045AE  6FDA               	movwf	sprintf@ap& (0+255),b
  5968   0045B0  C0CE  F0DB         	movff	sprintf@s,sprintf@f
  5969   0045B4  C0CF  F0DC         	movff	sprintf@s+1,sprintf@f+1
  5970   0045B8                     
  5971                           ; BSR set to: 0
  5972   0045B8  0E00               	movlw	0
  5973   0045BA  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  5974   0045BC  0E00               	movlw	0
  5975   0045BE  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  5976   0045C0                     
  5977                           ; BSR set to: 0
  5978   0045C0  0E00               	movlw	0
  5979   0045C2  6FE6               	movwf	(sprintf@f+11)& (0+255),b
  5980   0045C4  0E00               	movlw	0
  5981   0045C6  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  5982   0045C8                     
  5983                           ; BSR set to: 0
  5984   0045C8  0EDB               	movlw	low sprintf@f
  5985   0045CA  6FC7               	movwf	vfprintf@fp& (0+255),b
  5986   0045CC  6BC8               	clrf	(vfprintf@fp+1)& (0+255),b
  5987   0045CE  C0D0  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  5988   0045D2  C0D1  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5989   0045D6  0EDA               	movlw	low sprintf@ap
  5990   0045D8  6FCB               	movwf	vfprintf@ap& (0+255),b
  5991   0045DA  EC68  F022         	call	_vfprintf	;wreg free
  5992   0045DE  0100               	movlb	0	; () banked
  5993   0045E0  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  5994   0045E2  25CE               	addwf	sprintf@s& (0+255),w,b
  5995   0045E4  6ED9               	movwf	fsr2l,c
  5996   0045E6  51DF               	movf	(sprintf@f+4)& (0+255),w,b
  5997   0045E8  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  5998   0045EA  6EDA               	movwf	fsr2h,c
  5999   0045EC  6ADF               	clrf	indf2,c
  6000   0045EE                     
  6001                           ; BSR set to: 0
  6002   0045EE  0012               	return		;funcret
  6003   0045F0                     __end_of_sprintf:
  6004                           	callstack 0
  6005                           
  6006 ;; *************** function _vfprintf *****************
  6007 ;; Defined at:
  6008 ;;		line 1817 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6011 ;;		 -> NULL(0), sprintf@f(12), 
  6012 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6013 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6014 ;;		 -> STR_10(5), 
  6015 ;;  ap              1  107[BANK0 ] PTR PTR void 
  6016 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  6019 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6020 ;;		 -> STR_10(5), 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  2  103[BANK0 ] int 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6030 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;Total ram usage:        7 bytes
  6035 ;; Hardware stack levels used: 1
  6036 ;; Hardware stack levels required when called: 7
  6037 ;; This function calls:
  6038 ;;		_vfpfcnvrt
  6039 ;; This function is called by:
  6040 ;;		_sprintf
  6041 ;;		_printf
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text22
  6046   0044D0                     __ptext22:
  6047                           	callstack 0
  6048   0044D0                     _vfprintf:
  6049                           	callstack 21
  6050   0044D0                     
  6051                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE *fp, const 
      +                          char *fmt, va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1818: {;D:\MP
      +                          LABX\Compiler\pic\sources\c99\common\doprnt.c: 1820:     char *cfmt;;D:\MPLABX\Compiler\
      +                          pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6052   0044D0  C0C9  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  6053   0044D4  C0CA  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6054                           
  6055                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6056   0044D8  EF79  F022         	goto	l6687
  6057   0044DC                     l6685:
  6058                           
  6059                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt, ap);
  6060   0044DC  C0C7  F0B9         	movff	vfprintf@fp,vfpfcnvrt@fp
  6061   0044E0  C0C8  F0BA         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6062   0044E4  0ECC               	movlw	low vfprintf@cfmt
  6063   0044E6  0100               	movlb	0	; () banked
  6064   0044E8  6FBB               	movwf	vfpfcnvrt@fmt& (0+255),b
  6065   0044EA  C0CB  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  6066   0044EE  EC7D  F00C         	call	_vfpfcnvrt	;wreg free
  6067   0044F2                     l6687:
  6068                           
  6069                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt) {
  6070   0044F2  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  6071   0044F6  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6072   0044FA                     	if	0	;tblptru may be non-zero
  6073   0044FA                     	endif
  6074   0044FA                     	if	0	;tblptru may be non-zero
  6075   0044FA                     	endif
  6076   0044FA  0008               	tblrd		*
  6077   0044FC  50F5               	movf	tablat,w,c
  6078   0044FE  0900               	iorlw	0
  6079   004500  A4D8               	btfss	status,2,c
  6080   004502  EF85  F022         	goto	u8531
  6081   004506  EF87  F022         	goto	u8530
  6082   00450A                     u8531:
  6083   00450A  EF6E  F022         	goto	l6685
  6084   00450E                     u8530:
  6085   00450E                     
  6086                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6087   00450E  0E00               	movlw	0
  6088   004510  0100               	movlb	0	; () banked
  6089   004512  6FC8               	movwf	(?_vfprintf+1)& (0+255),b
  6090   004514  0E00               	movlw	0
  6091   004516  6FC7               	movwf	?_vfprintf& (0+255),b
  6092   004518                     
  6093                           ; BSR set to: 0
  6094   004518  0012               	return		;funcret
  6095   00451A                     __end_of_vfprintf:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _vfpfcnvrt *****************
  6099 ;; Defined at:
  6100 ;;		line 1177 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  fp              2   89[BANK0 ] PTR struct _IO_FILE
  6103 ;;		 -> NULL(0), sprintf@f(12), 
  6104 ;;  fmt             1   91[BANK0 ] PTR PTR unsigned char 
  6105 ;;		 -> vfprintf@cfmt(2), 
  6106 ;;  ap              1   92[BANK0 ] PTR PTR void 
  6107 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  convarg         4   95[BANK0 ] struct .
  6110 ;;  cp              2  101[BANK0 ] PTR unsigned char 
  6111 ;;		 -> STR_22(17), STR_21(19), STR_20(5), STR_19(6), 
  6112 ;;		 -> STR_10(5), 
  6113 ;;  done            1  100[BANK0 ] _Bool 
  6114 ;;  c               1   99[BANK0 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6124 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;Total ram usage:       14 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 6
  6131 ;; This function calls:
  6132 ;;		_dtoa
  6133 ;;		_efgtoa
  6134 ;;		_fputc
  6135 ;;		_read_prec_or_width
  6136 ;;		_stoa
  6137 ;; This function is called by:
  6138 ;;		_vfprintf
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text23
  6143   0018FA                     __ptext23:
  6144                           	callstack 0
  6145   0018FA                     _vfpfcnvrt:
  6146                           	callstack 21
  6147   0018FA                     
  6148                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1178: {;D:\MPLABX\Co
      +                          mpiler\pic\sources\c99\common\doprnt.c: 1179:     char c, *cp;;D:\MPLABX\Compiler\pic\so
      +                          urces\c99\common\doprnt.c: 1180:     _Bool done;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1188:  } convarg;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1201:
      +                               if ((*fmt)[0] == '%') {
  6149   0018FA  0100               	movlb	0	; () banked
  6150   0018FC  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6151   0018FE  6ED9               	movwf	fsr2l,c
  6152   001900  6ADA               	clrf	fsr2h,c
  6153   001902  CFDE FFF6          	movff	postinc2,tblptrl
  6154   001906  CFDD FFF7          	movff	postdec2,tblptrh
  6155   00190A                     	if	0	;tblptru may be non-zero
  6156   00190A                     	endif
  6157   00190A                     	if	0	;tblptru may be non-zero
  6158   00190A                     	endif
  6159   00190A  0008               	tblrd		*
  6160   00190C  50F5               	movf	tablat,w,c
  6161   00190E  0A25               	xorlw	37
  6162   001910  A4D8               	btfss	status,2,c
  6163   001912  EF8D  F00C         	goto	u8391
  6164   001916  EF8F  F00C         	goto	u8390
  6165   00191A                     u8391:
  6166   00191A  EF74  F00E         	goto	l6667
  6167   00191E                     u8390:
  6168   00191E                     
  6169                           ; BSR set to: 0
  6170                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  6171   00191E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6172   001920  6ED9               	movwf	fsr2l,c
  6173   001922  6ADA               	clrf	fsr2h,c
  6174   001924  2ADE               	incf	postinc2,f,c
  6175   001926  0E00               	movlw	0
  6176   001928  22DD               	addwfc	postdec2,f,c
  6177   00192A                     
  6178                           ; BSR set to: 0
  6179                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1204:         flags = width = 0;
  6180   00192A  0E00               	movlw	0
  6181   00192C  6E56               	movwf	(_width+1)^0,c
  6182   00192E  0E00               	movlw	0
  6183   001930  6E55               	movwf	_width^0,c
  6184   001932  C055  F059         	movff	_width,_flags
  6185   001936                     
  6186                           ; BSR set to: 0
  6187                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1205:         prec = -1;
  6188   001936  6857               	setf	_prec^0,c
  6189   001938  6858               	setf	(_prec+1)^0,c
  6190   00193A                     
  6191                           ; BSR set to: 0
  6192                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1209:         done = 0;
  6193   00193A  0E00               	movlw	0
  6194   00193C  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6195                           
  6196                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6197   00193E  EFBD  F00C         	goto	l6577
  6198   001942                     l6567:
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1214:                     flags |= 
      +                          (1 << 0);
  6202   001942  8059               	bsf	_flags^0,0,c
  6203   001944                     
  6204                           ; BSR set to: 0
  6205                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1215:                     ++*fmt;
  6206   001944  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6207   001946  6ED9               	movwf	fsr2l,c
  6208   001948  6ADA               	clrf	fsr2h,c
  6209   00194A  2ADE               	incf	postinc2,f,c
  6210   00194C  0E00               	movlw	0
  6211   00194E  22DD               	addwfc	postdec2,f,c
  6212                           
  6213                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1216:                     break;
  6214   001950  EFBD  F00C         	goto	l6577
  6215   001954                     l6571:
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1243:                     done = 1;
  6219   001954  0E01               	movlw	1
  6220   001956  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6221                           
  6222                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1244:                     break;
  6223   001958  EFBD  F00C         	goto	l6577
  6224   00195C                     l6575:
  6225                           
  6226                           ; BSR set to: 0
  6227   00195C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6228   00195E  6ED9               	movwf	fsr2l,c
  6229   001960  6ADA               	clrf	fsr2h,c
  6230   001962  CFDE FFF6          	movff	postinc2,tblptrl
  6231   001966  CFDD FFF7          	movff	postdec2,tblptrh
  6232   00196A                     	if	0	;tblptru may be non-zero
  6233   00196A                     	endif
  6234   00196A                     	if	0	;tblptru may be non-zero
  6235   00196A                     	endif
  6236   00196A  0008               	tblrd		*
  6237   00196C  50F5               	movf	tablat,w,c
  6238                           
  6239                           ; Switch size 1, requested type "simple"
  6240                           ; Number of cases is 1, Range of values is 45 to 45
  6241                           ; switch strategies available:
  6242                           ; Name         Instructions Cycles
  6243                           ; simple_byte            4     3 (average)
  6244                           ;	Chosen strategy is simple_byte
  6245   00196E  0A2D               	xorlw	45	; case 45
  6246   001970  B4D8               	btfsc	status,2,c
  6247   001972  EFA1  F00C         	goto	l6567
  6248   001976  EFAA  F00C         	goto	l6571
  6249   00197A                     l6577:
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1210:         while (!done) {
  6253   00197A  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6254   00197C  B4D8               	btfsc	status,2,c
  6255   00197E  EFC3  F00C         	goto	u8401
  6256   001982  EFC5  F00C         	goto	u8400
  6257   001986                     u8401:
  6258   001986  EFAE  F00C         	goto	l6575
  6259   00198A                     u8400:
  6260   00198A                     
  6261                           ; BSR set to: 0
  6262                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1256:   width = read_prec_or_width(
      +                          fmt, ap);
  6263   00198A  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6264   00198E  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6265   001992  EC1A  F021         	call	_read_prec_or_width	;wreg free
  6266   001996  C00C  F055         	movff	?_read_prec_or_width,_width
  6267   00199A  C00D  F056         	movff	?_read_prec_or_width+1,_width+1
  6268   00199E                     
  6269                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1257:   if (width < 0) {
  6270   00199E  BE56               	btfsc	(_width+1)^0,7,c
  6271   0019A0  EFD6  F00C         	goto	u8410
  6272   0019A4  EFD4  F00C         	goto	u8411
  6273   0019A8                     u8411:
  6274   0019A8  EFDB  F00C         	goto	l6585
  6275   0019AC                     u8410:
  6276   0019AC                     
  6277                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1258:    flags |= (1 << 0);
  6278   0019AC  8059               	bsf	_flags^0,0,c
  6279                           
  6280                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1259:    width = -width;
  6281   0019AE  6C55               	negf	_width^0,c
  6282   0019B0  1E56               	comf	(_width+1)^0,f,c
  6283   0019B2  B0D8               	btfsc	status,0,c
  6284   0019B4  2A56               	incf	(_width+1)^0,f,c
  6285   0019B6                     l6585:
  6286                           
  6287                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1265:         if ((*fmt)[0] == '.')
      +                           {
  6288   0019B6  0100               	movlb	0	; () banked
  6289   0019B8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6290   0019BA  6ED9               	movwf	fsr2l,c
  6291   0019BC  6ADA               	clrf	fsr2h,c
  6292   0019BE  CFDE FFF6          	movff	postinc2,tblptrl
  6293   0019C2  CFDD FFF7          	movff	postdec2,tblptrh
  6294   0019C6                     	if	0	;tblptru may be non-zero
  6295   0019C6                     	endif
  6296   0019C6                     	if	0	;tblptru may be non-zero
  6297   0019C6                     	endif
  6298   0019C6  0008               	tblrd		*
  6299   0019C8  50F5               	movf	tablat,w,c
  6300   0019CA  0A2E               	xorlw	46
  6301   0019CC  A4D8               	btfss	status,2,c
  6302   0019CE  EFEB  F00C         	goto	u8421
  6303   0019D2  EFED  F00C         	goto	u8420
  6304   0019D6                     u8421:
  6305   0019D6  EFFD  F00C         	goto	l6591
  6306   0019DA                     u8420:
  6307   0019DA                     
  6308                           ; BSR set to: 0
  6309                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1266:             ++*fmt;
  6310   0019DA  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6311   0019DC  6ED9               	movwf	fsr2l,c
  6312   0019DE  6ADA               	clrf	fsr2h,c
  6313   0019E0  2ADE               	incf	postinc2,f,c
  6314   0019E2  0E00               	movlw	0
  6315   0019E4  22DD               	addwfc	postdec2,f,c
  6316   0019E6                     
  6317                           ; BSR set to: 0
  6318                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1267:    prec = read_prec_or_width(
      +                          fmt, ap);
  6319   0019E6  C0BB  F00C         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6320   0019EA  C0BC  F00D         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6321   0019EE  EC1A  F021         	call	_read_prec_or_width	;wreg free
  6322   0019F2  C00C  F057         	movff	?_read_prec_or_width,_prec
  6323   0019F6  C00D  F058         	movff	?_read_prec_or_width+1,_prec+1
  6324   0019FA                     l6591:
  6325                           
  6326                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  6327   0019FA  0100               	movlb	0	; () banked
  6328   0019FC  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6329   0019FE  6ED9               	movwf	fsr2l,c
  6330   001A00  6ADA               	clrf	fsr2h,c
  6331   001A02  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6332   001A06  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6333   001A0A                     
  6334                           ; BSR set to: 0
  6335                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 'd' || *cp == 'i
      +                          ') {
  6336   001A0A  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6337   001A0E  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6338   001A12                     	if	0	;tblptru may be non-zero
  6339   001A12                     	endif
  6340   001A12                     	if	0	;tblptru may be non-zero
  6341   001A12                     	endif
  6342   001A12  0008               	tblrd		*
  6343   001A14  50F5               	movf	tablat,w,c
  6344   001A16  0A64               	xorlw	100
  6345   001A18  B4D8               	btfsc	status,2,c
  6346   001A1A  EF11  F00D         	goto	u8431
  6347   001A1E  EF13  F00D         	goto	u8430
  6348   001A22                     u8431:
  6349   001A22  EF21  F00D         	goto	l6597
  6350   001A26                     u8430:
  6351   001A26                     
  6352                           ; BSR set to: 0
  6353   001A26  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6354   001A2A  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6355   001A2E                     	if	0	;tblptru may be non-zero
  6356   001A2E                     	endif
  6357   001A2E                     	if	0	;tblptru may be non-zero
  6358   001A2E                     	endif
  6359   001A2E  0008               	tblrd		*
  6360   001A30  50F5               	movf	tablat,w,c
  6361   001A32  0A69               	xorlw	105
  6362   001A34  A4D8               	btfss	status,2,c
  6363   001A36  EF1F  F00D         	goto	u8441
  6364   001A3A  EF21  F00D         	goto	u8440
  6365   001A3E                     u8441:
  6366   001A3E  EF46  F00D         	goto	l6605
  6367   001A42                     u8440:
  6368   001A42                     l6597:
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1404:    convarg.sint = (vfpf_sint_
      +                          t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6372   001A42  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6373   001A44  6ED9               	movwf	fsr2l,c
  6374   001A46  6ADA               	clrf	fsr2h,c
  6375   001A48  0E02               	movlw	2
  6376   001A4A  26DF               	addwf	indf2,f,c
  6377   001A4C  5CDF               	subwf	indf2,w,c
  6378   001A4E  6ED9               	movwf	fsr2l,c
  6379   001A50  6ADA               	clrf	fsr2h,c
  6380   001A52  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6381   001A56  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6382   001A5A                     
  6383                           ; BSR set to: 0
  6384                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+1;
  6385   001A5A  0E01               	movlw	1
  6386   001A5C  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6387   001A5E  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6388   001A60  0E00               	movlw	0
  6389   001A62  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6390   001A64  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6391   001A66  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6392   001A68  6ED9               	movwf	fsr2l,c
  6393   001A6A  6ADA               	clrf	fsr2h,c
  6394   001A6C  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6395   001A70  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6396   001A74                     
  6397                           ; BSR set to: 0
  6398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1432:    return (void) dtoa(fp, con
      +                          varg.sint);;	Return value of _vfpfcnvrt is never used
  6399   001A74  C0B9  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  6400   001A78  C0BA  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6401   001A7C  C0BF  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  6402   001A80  C0C0  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6403   001A84  ECAE  F01A         	call	_dtoa	;wreg free
  6404   001A88  EF87  F00E         	goto	l1373
  6405   001A8C                     l6605:
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6409   001A8C  0E00               	movlw	0
  6410   001A8E  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6411   001A90                     
  6412                           ; BSR set to: 0
  6413                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt)[0] == 's') {
  6414   001A90  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6415   001A92  6ED9               	movwf	fsr2l,c
  6416   001A94  6ADA               	clrf	fsr2h,c
  6417   001A96  CFDE FFF6          	movff	postinc2,tblptrl
  6418   001A9A  CFDD FFF7          	movff	postdec2,tblptrh
  6419   001A9E                     	if	0	;tblptru may be non-zero
  6420   001A9E                     	endif
  6421   001A9E                     	if	0	;tblptru may be non-zero
  6422   001A9E                     	endif
  6423   001A9E  0008               	tblrd		*
  6424   001AA0  50F5               	movf	tablat,w,c
  6425   001AA2  0A73               	xorlw	115
  6426   001AA4  A4D8               	btfss	status,2,c
  6427   001AA6  EF57  F00D         	goto	u8451
  6428   001AAA  EF59  F00D         	goto	u8450
  6429   001AAE                     u8451:
  6430   001AAE  EF63  F00D         	goto	l6613
  6431   001AB2                     u8450:
  6432   001AB2                     
  6433                           ; BSR set to: 0
  6434                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6435   001AB2  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6436   001AB4  6ED9               	movwf	fsr2l,c
  6437   001AB6  6ADA               	clrf	fsr2h,c
  6438   001AB8  2ADE               	incf	postinc2,f,c
  6439   001ABA  0E00               	movlw	0
  6440   001ABC  22DD               	addwfc	postdec2,f,c
  6441   001ABE                     l6611:
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1659:    done = 1;
  6445   001ABE  0E01               	movlw	1
  6446   001AC0  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  6447                           
  6448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1660:   }
  6449   001AC2  EFAF  F00D         	goto	l6623
  6450   001AC6                     l6613:
  6451                           
  6452                           ; BSR set to: 0
  6453   001AC6  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6454   001AC8  6ED9               	movwf	fsr2l,c
  6455   001ACA  6ADA               	clrf	fsr2h,c
  6456   001ACC  CFDE FFF6          	movff	postinc2,tblptrl
  6457   001AD0  CFDD FFF7          	movff	postdec2,tblptrh
  6458   001AD4                     	if	0	;tblptru may be non-zero
  6459   001AD4                     	endif
  6460   001AD4                     	if	0	;tblptru may be non-zero
  6461   001AD4                     	endif
  6462   001AD4  0008               	tblrd		*
  6463   001AD6  50F5               	movf	tablat,w,c
  6464   001AD8  0A6C               	xorlw	108
  6465   001ADA  A4D8               	btfss	status,2,c
  6466   001ADC  EF72  F00D         	goto	u8461
  6467   001AE0  EF74  F00D         	goto	u8460
  6468   001AE4                     u8461:
  6469   001AE4  EFAF  F00D         	goto	l6623
  6470   001AE8                     u8460:
  6471   001AE8                     
  6472                           ; BSR set to: 0
  6473   001AE8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6474   001AEA  6ED9               	movwf	fsr2l,c
  6475   001AEC  6ADA               	clrf	fsr2h,c
  6476   001AEE  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6477   001AF2  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6478   001AF6  0E01               	movlw	1
  6479   001AF8  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6480   001AFA  0E00               	movlw	0
  6481   001AFC  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6482   001AFE  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6483   001B02  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6484   001B06                     	if	0	;tblptru may be non-zero
  6485   001B06                     	endif
  6486   001B06                     	if	0	;tblptru may be non-zero
  6487   001B06                     	endif
  6488   001B06  0008               	tblrd		*
  6489   001B08  50F5               	movf	tablat,w,c
  6490   001B0A  0A6C               	xorlw	108
  6491   001B0C  A4D8               	btfss	status,2,c
  6492   001B0E  EF8B  F00D         	goto	u8471
  6493   001B12  EF8D  F00D         	goto	u8470
  6494   001B16                     u8471:
  6495   001B16  EFAF  F00D         	goto	l6623
  6496   001B1A                     u8470:
  6497   001B1A                     
  6498                           ; BSR set to: 0
  6499   001B1A  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6500   001B1C  6ED9               	movwf	fsr2l,c
  6501   001B1E  6ADA               	clrf	fsr2h,c
  6502   001B20  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  6503   001B24  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  6504   001B28  0E02               	movlw	2
  6505   001B2A  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6506   001B2C  0E00               	movlw	0
  6507   001B2E  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6508   001B30  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6509   001B34  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6510   001B38                     	if	0	;tblptru may be non-zero
  6511   001B38                     	endif
  6512   001B38                     	if	0	;tblptru may be non-zero
  6513   001B38                     	endif
  6514   001B38  0008               	tblrd		*
  6515   001B3A  50F5               	movf	tablat,w,c
  6516   001B3C  0A73               	xorlw	115
  6517   001B3E  A4D8               	btfss	status,2,c
  6518   001B40  EFA4  F00D         	goto	u8481
  6519   001B44  EFA6  F00D         	goto	u8480
  6520   001B48                     u8481:
  6521   001B48  EFAF  F00D         	goto	l6623
  6522   001B4C                     u8480:
  6523   001B4C                     
  6524                           ; BSR set to: 0
  6525                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 3;
  6526   001B4C  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6527   001B4E  6ED9               	movwf	fsr2l,c
  6528   001B50  6ADA               	clrf	fsr2h,c
  6529   001B52  0E03               	movlw	3
  6530   001B54  26DE               	addwf	postinc2,f,c
  6531   001B56  0E00               	movlw	0
  6532   001B58  22DD               	addwfc	postdec2,f,c
  6533   001B5A  EF5F  F00D         	goto	l6611
  6534   001B5E                     l6623:
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1665:   if (done) {
  6538   001B5E  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  6539   001B60  B4D8               	btfsc	status,2,c
  6540   001B62  EFB5  F00D         	goto	u8491
  6541   001B66  EFB7  F00D         	goto	u8490
  6542   001B6A                     u8491:
  6543   001B6A  EFCB  F00D         	goto	l6629
  6544   001B6E                     u8490:
  6545   001B6E                     
  6546                           ; BSR set to: 0
  6547                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1682:    return (void) stoa(fp, (*(
      +                          char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpfcnvrt is never use
      +                          d
  6548   001B6E  C0B9  F010         	movff	vfpfcnvrt@fp,stoa@fp
  6549   001B72  C0BA  F011         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6550   001B76  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6551   001B78  6ED9               	movwf	fsr2l,c
  6552   001B7A  6ADA               	clrf	fsr2h,c
  6553   001B7C  0E02               	movlw	2
  6554   001B7E  26DF               	addwf	indf2,f,c
  6555   001B80  5CDF               	subwf	indf2,w,c
  6556   001B82  6ED9               	movwf	fsr2l,c
  6557   001B84  6ADA               	clrf	fsr2h,c
  6558   001B86  CFDE F012          	movff	postinc2,stoa@s
  6559   001B8A  CFDE F013          	movff	postinc2,stoa@s+1
  6560   001B8E  ECDF  F019         	call	_stoa	;wreg free
  6561   001B92  EF87  F00E         	goto	l1373
  6562   001B96                     l6629:
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  6566   001B96  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6567   001B98  6ED9               	movwf	fsr2l,c
  6568   001B9A  6ADA               	clrf	fsr2h,c
  6569   001B9C  CFDE F0C5          	movff	postinc2,vfpfcnvrt@cp
  6570   001BA0  CFDD F0C6          	movff	postdec2,vfpfcnvrt@cp+1
  6571   001BA4                     
  6572                           ; BSR set to: 0
  6573                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6574   001BA4  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6575   001BA8  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6576   001BAC                     	if	0	;tblptru may be non-zero
  6577   001BAC                     	endif
  6578   001BAC                     	if	0	;tblptru may be non-zero
  6579   001BAC                     	endif
  6580   001BAC  0008               	tblrd		*
  6581   001BAE  CFF5 F0C3          	movff	tablat,vfpfcnvrt@c
  6582                           
  6583                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  6584   001BB2  EFE7  F00D         	goto	l6641
  6585   001BB6                     l6633:
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6589   001BB6  4BC5               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  6590   001BB8  2BC6               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  6591                           
  6592                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1696:     break;
  6593   001BBA  EFF6  F00D         	goto	l6643
  6594   001BBE                     l6635:
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  6598   001BBE  0E6C               	movlw	108
  6599   001BC0  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6600                           
  6601                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1722:     break;
  6602   001BC2  EFF6  F00D         	goto	l6643
  6603   001BC6                     l6637:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6607   001BC6  0E00               	movlw	0
  6608   001BC8  6FC3               	movwf	vfpfcnvrt@c& (0+255),b
  6609                           
  6610                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1725:     break;
  6611   001BCA  EFF6  F00D         	goto	l6643
  6612   001BCE                     l6641:
  6613                           
  6614                           ; BSR set to: 0
  6615   001BCE  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6616                           
  6617                           ; Switch size 1, requested type "simple"
  6618                           ; Number of cases is 3, Range of values is 76 to 108
  6619                           ; switch strategies available:
  6620                           ; Name         Instructions Cycles
  6621                           ; simple_byte           10     6 (average)
  6622                           ;	Chosen strategy is simple_byte
  6623   001BD0  0A4C               	xorlw	76	; case 76
  6624   001BD2  B4D8               	btfsc	status,2,c
  6625   001BD4  EFDB  F00D         	goto	l6633
  6626   001BD8  0A2A               	xorlw	42	; case 102
  6627   001BDA  B4D8               	btfsc	status,2,c
  6628   001BDC  EFDF  F00D         	goto	l6635
  6629   001BE0  0A0A               	xorlw	10	; case 108
  6630   001BE2  B4D8               	btfsc	status,2,c
  6631   001BE4  EFDB  F00D         	goto	l6633
  6632   001BE8  EFE3  F00D         	goto	l6637
  6633   001BEC                     l6643:
  6634                           
  6635                           ; BSR set to: 0
  6636   001BEC  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6637   001BF0  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6638   001BF4                     	if	0	;tblptru may be non-zero
  6639   001BF4                     	endif
  6640   001BF4                     	if	0	;tblptru may be non-zero
  6641   001BF4                     	endif
  6642   001BF4  0008               	tblrd		*
  6643   001BF6  50F5               	movf	tablat,w,c
  6644   001BF8  0A66               	xorlw	102
  6645   001BFA  A4D8               	btfss	status,2,c
  6646   001BFC  EF02  F00E         	goto	u8501
  6647   001C00  EF04  F00E         	goto	u8500
  6648   001C04                     u8501:
  6649   001C04  EF6B  F00E         	goto	l6663
  6650   001C08                     u8500:
  6651   001C08  EF2E  F00E         	goto	l6651
  6652   001C0C                     l6645:
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = (long double
      +                          )(*(double *)__va_arg(*(double **)ap, (double)0));
  6656   001C0C  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6657   001C0E  6ED9               	movwf	fsr2l,c
  6658   001C10  6ADA               	clrf	fsr2h,c
  6659   001C12  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6660   001C16  0E04               	movlw	4
  6661   001C18  26DF               	addwf	indf2,f,c
  6662   001C1A  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6663   001C1C  6ED9               	movwf	fsr2l,c
  6664   001C1E  6ADA               	clrf	fsr2h,c
  6665   001C20  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6666   001C24  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6667   001C28  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6668   001C2C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6669                           
  6670                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1757:      break;
  6671   001C30  EF39  F00E         	goto	l6653
  6672   001C34                     l6647:
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = (long double
      +                          )(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6676   001C34  51BC               	movf	vfpfcnvrt@ap& (0+255),w,b
  6677   001C36  6ED9               	movwf	fsr2l,c
  6678   001C38  6ADA               	clrf	fsr2h,c
  6679   001C3A  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  6680   001C3E  0E04               	movlw	4
  6681   001C40  26DF               	addwf	indf2,f,c
  6682   001C42  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  6683   001C44  6ED9               	movwf	fsr2l,c
  6684   001C46  6ADA               	clrf	fsr2h,c
  6685   001C48  CFDE F0BF          	movff	postinc2,vfpfcnvrt@convarg
  6686   001C4C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg+1
  6687   001C50  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+2
  6688   001C54  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+3
  6689                           
  6690                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1760:      break;
  6691   001C58  EF39  F00E         	goto	l6653
  6692   001C5C                     l6651:
  6693                           
  6694                           ; BSR set to: 0
  6695   001C5C  51C3               	movf	vfpfcnvrt@c& (0+255),w,b
  6696                           
  6697                           ; Switch size 1, requested type "simple"
  6698                           ; Number of cases is 2, Range of values is 76 to 108
  6699                           ; switch strategies available:
  6700                           ; Name         Instructions Cycles
  6701                           ; simple_byte            7     4 (average)
  6702                           ;	Chosen strategy is simple_byte
  6703   001C5E  0A4C               	xorlw	76	; case 76
  6704   001C60  B4D8               	btfsc	status,2,c
  6705   001C62  EF1A  F00E         	goto	l6647
  6706   001C66  0A20               	xorlw	32	; case 108
  6707   001C68  B4D8               	btfsc	status,2,c
  6708   001C6A  EF06  F00E         	goto	l6645
  6709   001C6E  EF39  F00E         	goto	l6653
  6710   001C72                     l6653:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  6714   001C72  0E01               	movlw	1
  6715   001C74  25C5               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6716   001C76  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  6717   001C78  0E00               	movlw	0
  6718   001C7A  21C6               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6719   001C7C  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6720   001C7E  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6721   001C80  6ED9               	movwf	fsr2l,c
  6722   001C82  6ADA               	clrf	fsr2h,c
  6723   001C84  C0BD  FFDE         	movff	??_vfpfcnvrt,postinc2
  6724   001C88  C0BE  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6725                           
  6726                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  6727   001C8C  EF5F  F00E         	goto	l6661
  6728   001C90                     l6655:
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1790:      return (void) efgtoa(fp,
      +                           convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6732   001C90  C0B9  F084         	movff	vfpfcnvrt@fp,efgtoa@fp
  6733   001C94  C0BA  F085         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6734   001C98  C0BF  F086         	movff	vfpfcnvrt@convarg,efgtoa@f
  6735   001C9C  C0C0  F087         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6736   001CA0  C0C1  F088         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6737   001CA4  C0C2  F089         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6738   001CA8  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6739   001CAC  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6740   001CB0                     	if	0	;tblptru may be non-zero
  6741   001CB0                     	endif
  6742   001CB0                     	if	0	;tblptru may be non-zero
  6743   001CB0                     	endif
  6744   001CB0  0008               	tblrd		*
  6745   001CB2  CFF5 F08A          	movff	tablat,efgtoa@c
  6746   001CB6  EC85  F000         	call	_efgtoa	;wreg free
  6747   001CBA  EF87  F00E         	goto	l1373
  6748   001CBE                     l6661:
  6749                           
  6750                           ; BSR set to: 0
  6751   001CBE  C0C5  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6752   001CC2  C0C6  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6753   001CC6                     	if	0	;tblptru may be non-zero
  6754   001CC6                     	endif
  6755   001CC6                     	if	0	;tblptru may be non-zero
  6756   001CC6                     	endif
  6757   001CC6  0008               	tblrd		*
  6758   001CC8  50F5               	movf	tablat,w,c
  6759                           
  6760                           ; Switch size 1, requested type "simple"
  6761                           ; Number of cases is 1, Range of values is 102 to 102
  6762                           ; switch strategies available:
  6763                           ; Name         Instructions Cycles
  6764                           ; simple_byte            4     3 (average)
  6765                           ;	Chosen strategy is simple_byte
  6766   001CCA  0A66               	xorlw	102	; case 102
  6767   001CCC  B4D8               	btfsc	status,2,c
  6768   001CCE  EF48  F00E         	goto	l6655
  6769   001CD2  EF6B  F00E         	goto	l6663
  6770   001CD6                     l6663:
  6771                           
  6772                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  6773   001CD6  0100               	movlb	0	; () banked
  6774   001CD8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6775   001CDA  6ED9               	movwf	fsr2l,c
  6776   001CDC  6ADA               	clrf	fsr2h,c
  6777   001CDE  2ADE               	incf	postinc2,f,c
  6778   001CE0  0E00               	movlw	0
  6779   001CE2  22DD               	addwfc	postdec2,f,c
  6780   001CE4  EF87  F00E         	goto	l1373
  6781   001CE8                     l6667:
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*fmt)[0], fp)
      +                          ;
  6785   001CE8  51BB               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6786   001CEA  6ED9               	movwf	fsr2l,c
  6787   001CEC  6ADA               	clrf	fsr2h,c
  6788   001CEE  CFDE FFF6          	movff	postinc2,tblptrl
  6789   001CF2  CFDD FFF7          	movff	postdec2,tblptrh
  6790   001CF6                     	if	0	;tblptru may be non-zero
  6791   001CF6                     	endif
  6792   001CF6                     	if	0	;tblptru may be non-zero
  6793   001CF6                     	endif
  6794   001CF6  0008               	tblrd		*
  6795   001CF8  50F5               	movf	tablat,w,c
  6796   001CFA  6E07               	movwf	fputc@c^0,c
  6797   001CFC  6A08               	clrf	(fputc@c+1)^0,c
  6798   001CFE  C0B9  F009         	movff	vfpfcnvrt@fp,fputc@fp
  6799   001D02  C0BA  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6800   001D06  EC40  F01F         	call	_fputc	;wreg free
  6801   001D0A  EF6B  F00E         	goto	l6663
  6802   001D0E                     l1373:
  6803   001D0E  0012               	return		;funcret
  6804   001D10                     __end_of_vfpfcnvrt:
  6805                           	callstack 0
  6806                           
  6807 ;; *************** function _stoa *****************
  6808 ;; Defined at:
  6809 ;;		line 942 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6812 ;;		 -> NULL(0), sprintf@f(12), 
  6813 ;;  s               2   17[COMRAM] PTR unsigned char 
  6814 ;;		 -> ?_printf(2), ?_sprintf(2), STR_18(1), STR_17(6), 
  6815 ;;		 -> STR_16(5), STR_15(4), STR_14(4), STR_13(4), 
  6816 ;;		 -> STR_12(5), STR_11(5), gmail(11), 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;  l               2   27[COMRAM] int 
  6819 ;;  cp              2   25[COMRAM] PTR unsigned char 
  6820 ;;		 -> ?_printf(2), STR_29(7), ?_sprintf(2), STR_18(1), 
  6821 ;;		 -> STR_17(6), STR_16(5), STR_15(4), STR_14(4), 
  6822 ;;		 -> STR_13(4), STR_12(5), STR_11(5), gmail(11), 
  6823 ;;  w               2   23[COMRAM] int 
  6824 ;;  p               2   21[COMRAM] int 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;Total ram usage:       14 bytes
  6839 ;; Hardware stack levels used: 1
  6840 ;; Hardware stack levels required when called: 3
  6841 ;; This function calls:
  6842 ;;		_fputc
  6843 ;; This function is called by:
  6844 ;;		_vfpfcnvrt
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text24
  6849   0033BE                     __ptext24:
  6850                           	callstack 0
  6851   0033BE                     _stoa:
  6852                           	callstack 23
  6853   0033BE                     
  6854                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 942: static void stoa(FILE *fp, cha
      +                          r *s);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 943: {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 944:     char *cp;;D:\MPLABX\Compiler\pic\sources\c99\commo
      +                          n\doprnt.c: 945:     int l, p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 947: 
      +                           int w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 951:     cp = s;
  6855   0033BE  C012  F01A         	movff	stoa@s,stoa@cp
  6856   0033C2  C013  F01B         	movff	stoa@s+1,stoa@cp+1
  6857                           
  6858                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 952:     if (!cp) {
  6859   0033C6  501A               	movf	stoa@cp^0,w,c
  6860   0033C8  101B               	iorwf	(stoa@cp+1)^0,w,c
  6861   0033CA  A4D8               	btfss	status,2,c
  6862   0033CC  EFEA  F019         	goto	u8161
  6863   0033D0  EFEC  F019         	goto	u8160
  6864   0033D4                     u8161:
  6865   0033D4  EFF0  F019         	goto	l6463
  6866   0033D8                     u8160:
  6867   0033D8                     
  6868                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 953:         cp = "(null)";
  6869   0033D8  0EC3               	movlw	low STR_29
  6870   0033DA  6E1A               	movwf	stoa@cp^0,c
  6871   0033DC  0EFF               	movlw	high STR_29
  6872   0033DE  6E1B               	movwf	(stoa@cp+1)^0,c
  6873   0033E0                     l6463:
  6874                           
  6875                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 957:  for (l = 0; cp[l] != '\0'; l+
      +                          +) {
  6876   0033E0  0E00               	movlw	0
  6877   0033E2  6E1D               	movwf	(stoa@l+1)^0,c
  6878   0033E4  0E00               	movlw	0
  6879   0033E6  6E1C               	movwf	stoa@l^0,c
  6880   0033E8  EFF8  F019         	goto	l6467
  6881   0033EC                     l6465:
  6882   0033EC  4A1C               	infsnz	stoa@l^0,f,c
  6883   0033EE  2A1D               	incf	(stoa@l+1)^0,f,c
  6884   0033F0                     l6467:
  6885   0033F0  501C               	movf	stoa@l^0,w,c
  6886   0033F2  241A               	addwf	stoa@cp^0,w,c
  6887   0033F4  6E14               	movwf	??_stoa^0,c
  6888   0033F6  501D               	movf	(stoa@l+1)^0,w,c
  6889   0033F8  201B               	addwfc	(stoa@cp+1)^0,w,c
  6890   0033FA  6E15               	movwf	(??_stoa+1)^0,c
  6891   0033FC  C014  FFF6         	movff	??_stoa,tblptrl
  6892   003400  C015  FFF7         	movff	??_stoa+1,tblptrh
  6893   003404  0E00               	movlw	low (__mediumconst shr (0+16))
  6894   003406  6EF8               	movwf	tblptru,c
  6895   003408  0E0F               	movlw	(high __ramtop+-1)
  6896   00340A  64F7               	cpfsgt	tblptrh,c
  6897   00340C  D003               	bra	u8177
  6898   00340E  0008               	tblrd		*
  6899   003410  50F5               	movf	tablat,w,c
  6900   003412  D005               	bra	u8170
  6901   003414                     u8177:
  6902   003414  CFF6 FFE1          	movff	tblptrl,fsr1l
  6903   003418  CFF7 FFE2          	movff	tblptrh,fsr1h
  6904   00341C  50E7               	movf	indf1,w,c
  6905   00341E                     u8170:
  6906   00341E  0900               	iorlw	0
  6907   003420  A4D8               	btfss	status,2,c
  6908   003422  EF15  F01A         	goto	u8181
  6909   003426  EF17  F01A         	goto	u8180
  6910   00342A                     u8181:
  6911   00342A  EFF6  F019         	goto	l6465
  6912   00342E                     u8180:
  6913   00342E                     
  6914                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 961:  if (!(prec < 0) && (prec < l)
      +                          ) {
  6915   00342E  BE58               	btfsc	(_prec+1)^0,7,c
  6916   003430  EF1C  F01A         	goto	u8191
  6917   003434  EF1E  F01A         	goto	u8190
  6918   003438                     u8191:
  6919   003438  EF31  F01A         	goto	l1337
  6920   00343C                     u8190:
  6921   00343C  501C               	movf	stoa@l^0,w,c
  6922   00343E  5C57               	subwf	_prec^0,w,c
  6923   003440  5058               	movf	(_prec+1)^0,w,c
  6924   003442  0A80               	xorlw	128
  6925   003444  6E14               	movwf	??_stoa^0,c
  6926   003446  501D               	movf	(stoa@l+1)^0,w,c
  6927   003448  0A80               	xorlw	128
  6928   00344A  5814               	subwfb	??_stoa^0,w,c
  6929   00344C  B0D8               	btfsc	status,0,c
  6930   00344E  EF2B  F01A         	goto	u8201
  6931   003452  EF2D  F01A         	goto	u8200
  6932   003456                     u8201:
  6933   003456  EF31  F01A         	goto	l1337
  6934   00345A                     u8200:
  6935   00345A                     
  6936                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 962:   l = prec;
  6937   00345A  C057  F01C         	movff	_prec,stoa@l
  6938   00345E  C058  F01D         	movff	_prec+1,stoa@l+1
  6939   003462                     l1337:
  6940                           
  6941                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 965:     p = l;
  6942   003462  C01C  F016         	movff	stoa@l,stoa@p
  6943   003466  C01D  F017         	movff	stoa@l+1,stoa@p+1
  6944                           
  6945                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 969:     w = width;
  6946   00346A  C055  F018         	movff	_width,stoa@w
  6947   00346E  C056  F019         	movff	_width+1,stoa@w+1
  6948                           
  6949                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 970:     if (!(flags & (1 << 0))) {
  6950   003472  B059               	btfsc	_flags^0,0,c
  6951   003474  EF3E  F01A         	goto	u8211
  6952   003478  EF40  F01A         	goto	u8210
  6953   00347C                     u8211:
  6954   00347C  EF7C  F01A         	goto	l6487
  6955   003480                     u8210:
  6956   003480  EF4E  F01A         	goto	l6481
  6957   003484                     l6477:
  6958                           
  6959                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 972:             fputc(' ', fp);
  6960   003484  0E00               	movlw	0
  6961   003486  6E08               	movwf	(fputc@c+1)^0,c
  6962   003488  0E20               	movlw	32
  6963   00348A  6E07               	movwf	fputc@c^0,c
  6964   00348C  C010  F009         	movff	stoa@fp,fputc@fp
  6965   003490  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  6966   003494  EC40  F01F         	call	_fputc	;wreg free
  6967   003498                     
  6968                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 973:             ++l;
  6969   003498  4A1C               	infsnz	stoa@l^0,f,c
  6970   00349A  2A1D               	incf	(stoa@l+1)^0,f,c
  6971   00349C                     l6481:
  6972                           
  6973                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 971:         while (l < w) {
  6974   00349C  5018               	movf	stoa@w^0,w,c
  6975   00349E  5C1C               	subwf	stoa@l^0,w,c
  6976   0034A0  501D               	movf	(stoa@l+1)^0,w,c
  6977   0034A2  0A80               	xorlw	128
  6978   0034A4  6E14               	movwf	??_stoa^0,c
  6979   0034A6  5019               	movf	(stoa@w+1)^0,w,c
  6980   0034A8  0A80               	xorlw	128
  6981   0034AA  5814               	subwfb	??_stoa^0,w,c
  6982   0034AC  A0D8               	btfss	status,0,c
  6983   0034AE  EF5B  F01A         	goto	u8221
  6984   0034B2  EF5D  F01A         	goto	u8220
  6985   0034B6                     u8221:
  6986   0034B6  EF42  F01A         	goto	l6477
  6987   0034BA                     u8220:
  6988   0034BA  EF7C  F01A         	goto	l6487
  6989   0034BE                     l6483:
  6990                           
  6991                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 980:         fputc(*cp, fp);
  6992   0034BE  C01A  FFF6         	movff	stoa@cp,tblptrl
  6993   0034C2  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  6994   0034C6  0E00               	movlw	low (__mediumconst shr (0+16))
  6995   0034C8  6EF8               	movwf	tblptru,c
  6996   0034CA  0E0F               	movlw	(high __ramtop+-1)
  6997   0034CC  64F7               	cpfsgt	tblptrh,c
  6998   0034CE  D003               	bra	u8237
  6999   0034D0  0008               	tblrd		*
  7000   0034D2  50F5               	movf	tablat,w,c
  7001   0034D4  D005               	bra	u8230
  7002   0034D6                     u8237:
  7003   0034D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7004   0034DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7005   0034DE  50E7               	movf	indf1,w,c
  7006   0034E0                     u8230:
  7007   0034E0  6E14               	movwf	??_stoa^0,c
  7008   0034E2  5014               	movf	??_stoa^0,w,c
  7009   0034E4  6E07               	movwf	fputc@c^0,c
  7010   0034E6  6A08               	clrf	(fputc@c+1)^0,c
  7011   0034E8  C010  F009         	movff	stoa@fp,fputc@fp
  7012   0034EC  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7013   0034F0  EC40  F01F         	call	_fputc	;wreg free
  7014   0034F4                     
  7015                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 981:         ++cp;
  7016   0034F4  4A1A               	infsnz	stoa@cp^0,f,c
  7017   0034F6  2A1B               	incf	(stoa@cp+1)^0,f,c
  7018   0034F8                     l6487:
  7019                           
  7020                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 979:     while (p--) {
  7021   0034F8  0616               	decf	stoa@p^0,f,c
  7022   0034FA  A0D8               	btfss	status,0,c
  7023   0034FC  0617               	decf	(stoa@p+1)^0,f,c
  7024   0034FE  2816               	incf	stoa@p^0,w,c
  7025   003500  E106               	bnz	u8241
  7026   003502  2817               	incf	(stoa@p+1)^0,w,c
  7027   003504  A4D8               	btfss	status,2,c
  7028   003506  EF87  F01A         	goto	u8241
  7029   00350A  EF89  F01A         	goto	u8240
  7030   00350E                     u8241:
  7031   00350E  EF5F  F01A         	goto	l6483
  7032   003512                     u8240:
  7033   003512                     
  7034                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 986:     if (flags & (1 << 0)) {
  7035   003512  A059               	btfss	_flags^0,0,c
  7036   003514  EF8E  F01A         	goto	u8251
  7037   003518  EF90  F01A         	goto	u8250
  7038   00351C                     u8251:
  7039   00351C  EFAD  F01A         	goto	l1349
  7040   003520                     u8250:
  7041   003520  EF9E  F01A         	goto	l6495
  7042   003524                     l6491:
  7043                           
  7044                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 988:             fputc(' ', fp);
  7045   003524  0E00               	movlw	0
  7046   003526  6E08               	movwf	(fputc@c+1)^0,c
  7047   003528  0E20               	movlw	32
  7048   00352A  6E07               	movwf	fputc@c^0,c
  7049   00352C  C010  F009         	movff	stoa@fp,fputc@fp
  7050   003530  C011  F00A         	movff	stoa@fp+1,fputc@fp+1
  7051   003534  EC40  F01F         	call	_fputc	;wreg free
  7052   003538                     
  7053                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 989:             ++l;
  7054   003538  4A1C               	infsnz	stoa@l^0,f,c
  7055   00353A  2A1D               	incf	(stoa@l+1)^0,f,c
  7056   00353C                     l6495:
  7057                           
  7058                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 987:         while (l < w) {
  7059   00353C  5018               	movf	stoa@w^0,w,c
  7060   00353E  5C1C               	subwf	stoa@l^0,w,c
  7061   003540  501D               	movf	(stoa@l+1)^0,w,c
  7062   003542  0A80               	xorlw	128
  7063   003544  6E14               	movwf	??_stoa^0,c
  7064   003546  5019               	movf	(stoa@w+1)^0,w,c
  7065   003548  0A80               	xorlw	128
  7066   00354A  5814               	subwfb	??_stoa^0,w,c
  7067   00354C  A0D8               	btfss	status,0,c
  7068   00354E  EFAB  F01A         	goto	u8261
  7069   003552  EFAD  F01A         	goto	u8260
  7070   003556                     u8261:
  7071   003556  EF92  F01A         	goto	l6491
  7072   00355A                     u8260:
  7073   00355A                     l1349:
  7074   00355A  0012               	return		;funcret
  7075   00355C                     __end_of_stoa:
  7076                           	callstack 0
  7077                           
  7078 ;; *************** function _read_prec_or_width *****************
  7079 ;; Defined at:
  7080 ;;		line 1158 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  fmt             1   11[COMRAM] PTR PTR const unsigned c
  7083 ;;		 -> vfprintf@cfmt(2), 
  7084 ;;  ap              1   12[COMRAM] PTR PTR void [1]
  7085 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  c               1   13[COMRAM] unsigned char 
  7088 ;;  n               2   14[COMRAM] int 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  2   11[COMRAM] int 
  7091 ;; Registers used:
  7092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;Total ram usage:        5 bytes
  7103 ;; Hardware stack levels used: 1
  7104 ;; Hardware stack levels required when called: 2
  7105 ;; This function calls:
  7106 ;;		___wmul
  7107 ;; This function is called by:
  7108 ;;		_vfpfcnvrt
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text25
  7113   004234                     __ptext25:
  7114                           	callstack 0
  7115   004234                     _read_prec_or_width:
  7116                           	callstack 24
  7117   004234                     
  7118                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1159:     int n = 0;
  7119   004234  0E00               	movlw	0
  7120   004236  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7121   004238  0E00               	movlw	0
  7122   00423A  6E0F               	movwf	read_prec_or_width@n^0,c
  7123   00423C                     
  7124                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1160:     if ((*fmt)[0] == '*') {
  7125   00423C  500C               	movf	read_prec_or_width@fmt^0,w,c
  7126   00423E  6ED9               	movwf	fsr2l,c
  7127   004240  6ADA               	clrf	fsr2h,c
  7128   004242  CFDE FFF6          	movff	postinc2,tblptrl
  7129   004246  CFDD FFF7          	movff	postdec2,tblptrh
  7130   00424A                     	if	0	;tblptru may be non-zero
  7131   00424A                     	endif
  7132   00424A                     	if	0	;tblptru may be non-zero
  7133   00424A                     	endif
  7134   00424A  0008               	tblrd		*
  7135   00424C  50F5               	movf	tablat,w,c
  7136   00424E  0A2A               	xorlw	42
  7137   004250  A4D8               	btfss	status,2,c
  7138   004252  EF2D  F021         	goto	u8271
  7139   004256  EF2F  F021         	goto	u8270
  7140   00425A                     u8271:
  7141   00425A  EF59  F021         	goto	l6509
  7142   00425E                     u8270:
  7143   00425E                     
  7144                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1161:         ++*fmt;
  7145   00425E  500C               	movf	read_prec_or_width@fmt^0,w,c
  7146   004260  6ED9               	movwf	fsr2l,c
  7147   004262  6ADA               	clrf	fsr2h,c
  7148   004264  2ADE               	incf	postinc2,f,c
  7149   004266  0E00               	movlw	0
  7150   004268  22DD               	addwfc	postdec2,f,c
  7151   00426A                     
  7152                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1162:         n = (*(int *)__va_arg
      +                          (*(int **)*ap, (int)0));
  7153   00426A  500D               	movf	read_prec_or_width@ap^0,w,c
  7154   00426C  6ED9               	movwf	fsr2l,c
  7155   00426E  6ADA               	clrf	fsr2h,c
  7156   004270  0E02               	movlw	2
  7157   004272  26DF               	addwf	indf2,f,c
  7158   004274  5CDF               	subwf	indf2,w,c
  7159   004276  6ED9               	movwf	fsr2l,c
  7160   004278  6ADA               	clrf	fsr2h,c
  7161   00427A  CFDE F00F          	movff	postinc2,read_prec_or_width@n
  7162   00427E  CFDE F010          	movff	postinc2,read_prec_or_width@n+1
  7163                           
  7164                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1163:     } else {
  7165   004282  EF6C  F021         	goto	l1353
  7166   004286                     l6505:
  7167                           
  7168                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1166:             n = n * 10 + c;
  7169   004286  C00F  F006         	movff	read_prec_or_width@n,___wmul@multiplier
  7170   00428A  C010  F007         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7171   00428E  0E00               	movlw	0
  7172   004290  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7173   004292  0E0A               	movlw	10
  7174   004294  6E08               	movwf	___wmul@multiplicand^0,c
  7175   004296  ECBA  F023         	call	___wmul	;wreg free
  7176   00429A  500E               	movf	read_prec_or_width@c^0,w,c
  7177   00429C  2406               	addwf	?___wmul^0,w,c
  7178   00429E  6E0F               	movwf	read_prec_or_width@n^0,c
  7179   0042A0  0E00               	movlw	0
  7180   0042A2  2007               	addwfc	(?___wmul+1)^0,w,c
  7181   0042A4  6E10               	movwf	(read_prec_or_width@n+1)^0,c
  7182   0042A6                     
  7183                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1167:             ++*fmt;
  7184   0042A6  500C               	movf	read_prec_or_width@fmt^0,w,c
  7185   0042A8  6ED9               	movwf	fsr2l,c
  7186   0042AA  6ADA               	clrf	fsr2h,c
  7187   0042AC  2ADE               	incf	postinc2,f,c
  7188   0042AE  0E00               	movlw	0
  7189   0042B0  22DD               	addwfc	postdec2,f,c
  7190   0042B2                     l6509:
  7191                           
  7192                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1165:         while ((c = ((unsigne
      +                          d)(*fmt)[0]) - '0') < 10) {
  7193   0042B2  500C               	movf	read_prec_or_width@fmt^0,w,c
  7194   0042B4  6ED9               	movwf	fsr2l,c
  7195   0042B6  6ADA               	clrf	fsr2h,c
  7196   0042B8  CFDE FFF6          	movff	postinc2,tblptrl
  7197   0042BC  CFDD FFF7          	movff	postdec2,tblptrh
  7198   0042C0                     	if	0	;tblptru may be non-zero
  7199   0042C0                     	endif
  7200   0042C0                     	if	0	;tblptru may be non-zero
  7201   0042C0                     	endif
  7202   0042C0  0008               	tblrd		*
  7203   0042C2  50F5               	movf	tablat,w,c
  7204   0042C4  0FD0               	addlw	208
  7205   0042C6  6E0E               	movwf	read_prec_or_width@c^0,c
  7206   0042C8  0E09               	movlw	9
  7207   0042CA  640E               	cpfsgt	read_prec_or_width@c^0,c
  7208   0042CC  EF6A  F021         	goto	u8281
  7209   0042D0  EF6C  F021         	goto	u8280
  7210   0042D4                     u8281:
  7211   0042D4  EF43  F021         	goto	l6505
  7212   0042D8                     u8280:
  7213   0042D8                     l1353:
  7214                           
  7215                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 1170:     return n;
  7216   0042D8  C00F  F00C         	movff	read_prec_or_width@n,?_read_prec_or_width
  7217   0042DC  C010  F00D         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7218   0042E0  0012               	return		;funcret
  7219   0042E2                     __end_of_read_prec_or_width:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function ___wmul *****************
  7223 ;; Defined at:
  7224 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\Umul16.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  multiplier      2    5[COMRAM] unsigned int 
  7227 ;;  multiplicand    2    7[COMRAM] unsigned int 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  product         2    9[COMRAM] unsigned int 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  2    5[COMRAM] unsigned int 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0, prodl, prodh
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7243 ;;Total ram usage:        6 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; Hardware stack levels required when called: 1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_read_prec_or_width
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text26
  7254   004774                     __ptext26:
  7255                           	callstack 0
  7256   004774                     ___wmul:
  7257                           	callstack 24
  7258   004774  5006               	movf	___wmul@multiplier^0,w,c
  7259   004776  0208               	mulwf	___wmul@multiplicand^0,c
  7260   004778  CFF3 F00A          	movff	prodl,___wmul@product
  7261   00477C  CFF4 F00B          	movff	prodh,___wmul@product+1
  7262   004780  5006               	movf	___wmul@multiplier^0,w,c
  7263   004782  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  7264   004784  50F3               	movf	243,w,c
  7265   004786  260B               	addwf	(___wmul@product+1)^0,f,c
  7266   004788  5007               	movf	(___wmul@multiplier+1)^0,w,c
  7267   00478A  0208               	mulwf	___wmul@multiplicand^0,c
  7268   00478C  50F3               	movf	243,w,c
  7269   00478E  260B               	addwf	(___wmul@product+1)^0,f,c
  7270   004790  C00A  F006         	movff	___wmul@product,?___wmul
  7271   004794  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  7272   004798  0012               	return		;funcret
  7273   00479A                     __end_of___wmul:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _efgtoa *****************
  7277 ;; Defined at:
  7278 ;;		line 587 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  7281 ;;		 -> NULL(0), sprintf@f(12), 
  7282 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  7283 ;;  c               1   42[BANK0 ] unsigned char 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  u               4   85[BANK0 ] struct flui
  7286 ;;  g               4   79[BANK0 ] struct flui
  7287 ;;  l               4   74[BANK0 ] struct flui
  7288 ;;  h               4   70[BANK0 ] struct flui
  7289 ;;  ou              4   64[BANK0 ] struct flui
  7290 ;;  n               2   83[BANK0 ] int 
  7291 ;;  i               2   68[BANK0 ] int 
  7292 ;;  w               2   62[BANK0 ] int 
  7293 ;;  e               2   60[BANK0 ] int 
  7294 ;;  m               2   58[BANK0 ] int 
  7295 ;;  d               2   56[BANK0 ] int 
  7296 ;;  t               2   49[BANK0 ] int 
  7297 ;;  p               2   47[BANK0 ] int 
  7298 ;;  ne              2   45[BANK0 ] int 
  7299 ;;  sign            1   78[BANK0 ] unsigned char 
  7300 ;;  nmode           1   55[BANK0 ] unsigned char 
  7301 ;;  mode            1   54[BANK0 ] unsigned char 
  7302 ;;  pp              1   53[BANK0 ] unsigned char 
  7303 ;;  esign           1    0        unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7313 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;Total ram usage:       53 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 5
  7320 ;; This function calls:
  7321 ;;		___fladd
  7322 ;;		___fldiv
  7323 ;;		___fleq
  7324 ;;		___flge
  7325 ;;		___flmul
  7326 ;;		___flneg
  7327 ;;		___flsub
  7328 ;;		___fltol
  7329 ;;		___fpclassifyf
  7330 ;;		_floorf
  7331 ;;		_labs
  7332 ;;		_memcpy
  7333 ;;		_pad
  7334 ;;		_strcpy
  7335 ;; This function is called by:
  7336 ;;		_vfpfcnvrt
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text27
  7341   00010A                     __ptext27:
  7342                           	callstack 0
  7343   00010A                     _efgtoa:
  7344                           	callstack 21
  7345   00010A                     
  7346                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 587: static void efgtoa(FILE *fp, l
      +                          ong double f, char c);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 588: {;D:\MPLA
      +                          BX\Compiler\pic\sources\c99\common\doprnt.c: 589:     char mode, nmode, pp, sign, esign;
      +                          ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, 
      +                          t, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 591:     long double h, l;;D:\
      +                          MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  7347   00010A  0E00               	movlw	0
  7348   00010C  0100               	movlb	0	; () banked
  7349   00010E  6FAE               	movwf	efgtoa@sign& (0+255),b
  7350   000110                     
  7351                           ; BSR set to: 0
  7352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7353   000110  C086  F0AF         	movff	efgtoa@f,efgtoa@g
  7354   000114  C087  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  7355   000118  C088  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  7356   00011C  C089  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  7357   000120                     
  7358                           ; BSR set to: 0
  7359                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0) {
  7360   000120  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7361   000122  EF97  F000         	goto	u7840
  7362   000126  EF95  F000         	goto	u7841
  7363   00012A                     u7841:
  7364   00012A  EFAB  F000         	goto	l6247
  7365   00012E                     u7840:
  7366   00012E                     
  7367                           ; BSR set to: 0
  7368                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  7369   00012E  0E01               	movlw	1
  7370   000130  6FAE               	movwf	efgtoa@sign& (0+255),b
  7371   000132                     
  7372                           ; BSR set to: 0
  7373                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f;
  7374   000132  C0AF  F080         	movff	efgtoa@g,___flneg@f1
  7375   000136  C0B0  F081         	movff	efgtoa@g+1,___flneg@f1+1
  7376   00013A  C0B1  F082         	movff	efgtoa@g+2,___flneg@f1+2
  7377   00013E  C0B2  F083         	movff	efgtoa@g+3,___flneg@f1+3
  7378   000142  EC39  F023         	call	___flneg	;wreg free
  7379   000146  C080  F0AF         	movff	?___flneg,efgtoa@g
  7380   00014A  C081  F0B0         	movff	?___flneg+1,efgtoa@g+1
  7381   00014E  C082  F0B1         	movff	?___flneg+2,efgtoa@g+2
  7382   000152  C083  F0B2         	movff	?___flneg+3,efgtoa@g+3
  7383   000156                     l6247:
  7384                           
  7385                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7386   000156  0E00               	movlw	0
  7387   000158  0100               	movlb	0	; () banked
  7388   00015A  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7389   00015C  0E00               	movlw	0
  7390   00015E  6FB3               	movwf	efgtoa@n& (0+255),b
  7391   000160                     
  7392                           ; BSR set to: 0
  7393                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 604:     w = width;
  7394   000160  C055  F09E         	movff	_width,efgtoa@w
  7395   000164  C056  F09F         	movff	_width+1,efgtoa@w+1
  7396   000168                     
  7397                           ; BSR set to: 0
  7398                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7399   000168  51AE               	movf	efgtoa@sign& (0+255),w,b
  7400   00016A  B4D8               	btfsc	status,2,c
  7401   00016C  EFBA  F000         	goto	u7851
  7402   000170  EFBC  F000         	goto	u7850
  7403   000174                     u7851:
  7404   000174  EFD0  F000         	goto	l6261
  7405   000178                     u7850:
  7406   000178                     
  7407                           ; BSR set to: 0
  7408                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 609:    ) {;D:\MPLABX\Compiler\pic\
      +                          sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  7409   000178  51AE               	movf	efgtoa@sign& (0+255),w,b
  7410   00017A  A4D8               	btfss	status,2,c
  7411   00017C  EFC2  F000         	goto	u7861
  7412   000180  EFC4  F000         	goto	u7860
  7413   000184                     u7861:
  7414   000184  EFCA  F000         	goto	l6257
  7415   000188                     u7860:
  7416   000188                     
  7417                           ; BSR set to: 0
  7418   000188  0E00               	movlw	0
  7419   00018A  6F94               	movwf	(_efgtoa$3679+1)& (0+255),b
  7420   00018C  0E2B               	movlw	43
  7421   00018E  6F93               	movwf	_efgtoa$3679& (0+255),b
  7422   000190  EFCE  F000         	goto	l6259
  7423   000194                     l6257:
  7424                           
  7425                           ; BSR set to: 0
  7426   000194  0E00               	movlw	0
  7427   000196  6F94               	movwf	(_efgtoa$3679+1)& (0+255),b
  7428   000198  0E2D               	movlw	45
  7429   00019A  6F93               	movwf	_efgtoa$3679& (0+255),b
  7430   00019C                     l6259:
  7431                           
  7432                           ; BSR set to: 0
  7433   00019C  C093  F0AE         	movff	_efgtoa$3679,efgtoa@sign
  7434   0001A0                     l6261:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclassifyf(g.f) =
      +                          = 1 )) {
  7438   0001A0  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7439   0001A4  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7440   0001A8  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7441   0001AC  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7442   0001B0  EC54  F01E         	call	___fpclassifyf	;wreg free
  7443   0001B4  0406               	decf	?___fpclassifyf^0,w,c
  7444   0001B6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7445   0001B8  A4D8               	btfss	status,2,c
  7446   0001BA  EFE1  F000         	goto	u7871
  7447   0001BE  EFE3  F000         	goto	u7870
  7448   0001C2                     u7871:
  7449   0001C2  EF16  F001         	goto	l6279
  7450   0001C6                     u7870:
  7451   0001C6                     
  7452                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  7453   0001C6  0100               	movlb	0	; () banked
  7454   0001C8  51AE               	movf	efgtoa@sign& (0+255),w,b
  7455   0001CA  B4D8               	btfsc	status,2,c
  7456   0001CC  EFEA  F000         	goto	u7881
  7457   0001D0  EFEC  F000         	goto	u7880
  7458   0001D4                     u7881:
  7459   0001D4  EFF5  F000         	goto	l6271
  7460   0001D8                     u7880:
  7461   0001D8                     
  7462                           ; BSR set to: 0
  7463                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  7464   0001D8  C0AE  F125         	movff	efgtoa@sign,_dbuf
  7465   0001DC                     
  7466                           ; BSR set to: 0
  7467                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 622:    w--;
  7468   0001DC  079E               	decf	efgtoa@w& (0+255),f,b
  7469   0001DE  A0D8               	btfss	status,0,c
  7470   0001E0  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7471   0001E2                     
  7472                           ; BSR set to: 0
  7473                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7474   0001E2  0E00               	movlw	0
  7475   0001E4  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7476   0001E6  0E01               	movlw	1
  7477   0001E8  6FB3               	movwf	efgtoa@n& (0+255),b
  7478   0001EA                     l6271:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 631:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  7482   0001EA  0E25               	movlw	low _dbuf
  7483   0001EC  25B3               	addwf	efgtoa@n& (0+255),w,b
  7484   0001EE  6E06               	movwf	strcpy@dest^0,c
  7485   0001F0  0E01               	movlw	high _dbuf
  7486   0001F2  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7487   0001F4  6E07               	movwf	(strcpy@dest+1)^0,c
  7488   0001F6  0EEA               	movlw	low STR_23
  7489   0001F8  6E08               	movwf	strcpy@src^0,c
  7490   0001FA  0EFF               	movlw	high STR_23
  7491   0001FC  6E09               	movwf	(strcpy@src+1)^0,c
  7492   0001FE  EC56  F023         	call	_strcpy	;wreg free
  7493   000202                     l6273:
  7494                           
  7495                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 633:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7496   000202  0100               	movlb	0	; () banked
  7497   000204  0EFD               	movlw	253
  7498   000206  279E               	addwf	efgtoa@w& (0+255),f,b
  7499   000208  0EFF               	movlw	255
  7500   00020A  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7501   00020C                     
  7502                           ; BSR set to: 0
  7503                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 635:         return (void) pad(fp, 
      +                          &dbuf[0], w);
  7504   00020C  C084  F017         	movff	efgtoa@fp,pad@fp
  7505   000210  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  7506   000214  0E25               	movlw	low _dbuf
  7507   000216  6E19               	movwf	pad@buf^0,c
  7508   000218  0E01               	movlw	high _dbuf
  7509   00021A  6E1A               	movwf	(pad@buf+1)^0,c
  7510   00021C  C09E  F01B         	movff	efgtoa@w,pad@p
  7511   000220  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  7512   000224  ECC6  F021         	call	_pad	;wreg free
  7513   000228  EF81  F005         	goto	l1288
  7514   00022C                     l6279:
  7515                           
  7516                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclassifyf(g.f) =
      +                          = 0 )) {
  7517   00022C  C0AF  F006         	movff	efgtoa@g,___fpclassifyf@x
  7518   000230  C0B0  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7519   000234  C0B1  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7520   000238  C0B2  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7521   00023C  EC54  F01E         	call	___fpclassifyf	;wreg free
  7522   000240  5006               	movf	?___fpclassifyf^0,w,c
  7523   000242  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  7524   000244  A4D8               	btfss	status,2,c
  7525   000246  EF27  F001         	goto	u7891
  7526   00024A  EF29  F001         	goto	u7890
  7527   00024E                     u7891:
  7528   00024E  EF49  F001         	goto	l6297
  7529   000252                     u7890:
  7530   000252                     
  7531                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  7532   000252  0100               	movlb	0	; () banked
  7533   000254  51AE               	movf	efgtoa@sign& (0+255),w,b
  7534   000256  B4D8               	btfsc	status,2,c
  7535   000258  EF30  F001         	goto	u7901
  7536   00025C  EF32  F001         	goto	u7900
  7537   000260                     u7901:
  7538   000260  EF3B  F001         	goto	l6289
  7539   000264                     u7900:
  7540   000264                     
  7541                           ; BSR set to: 0
  7542                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  7543   000264  C0AE  F125         	movff	efgtoa@sign,_dbuf
  7544   000268                     
  7545                           ; BSR set to: 0
  7546                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 640:    w--;
  7547   000268  079E               	decf	efgtoa@w& (0+255),f,b
  7548   00026A  A0D8               	btfss	status,0,c
  7549   00026C  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  7550   00026E                     
  7551                           ; BSR set to: 0
  7552                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7553   00026E  0E00               	movlw	0
  7554   000270  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  7555   000272  0E01               	movlw	1
  7556   000274  6FB3               	movwf	efgtoa@n& (0+255),b
  7557   000276                     l6289:
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 649:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  7561   000276  0E25               	movlw	low _dbuf
  7562   000278  25B3               	addwf	efgtoa@n& (0+255),w,b
  7563   00027A  6E06               	movwf	strcpy@dest^0,c
  7564   00027C  0E01               	movlw	high _dbuf
  7565   00027E  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7566   000280  6E07               	movwf	(strcpy@dest+1)^0,c
  7567   000282  0EEE               	movlw	low STR_26
  7568   000284  6E08               	movwf	strcpy@src^0,c
  7569   000286  0EFF               	movlw	high STR_26
  7570   000288  6E09               	movwf	(strcpy@src+1)^0,c
  7571   00028A  EC56  F023         	call	_strcpy	;wreg free
  7572   00028E  EF01  F001         	goto	l6273
  7573   000292                     l6297:
  7574                           
  7575                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  7576   000292  0E00               	movlw	0
  7577   000294  0100               	movlb	0	; () banked
  7578   000296  6FB5               	movwf	efgtoa@u& (0+255),b
  7579   000298  0E00               	movlw	0
  7580   00029A  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  7581   00029C  0E80               	movlw	128
  7582   00029E  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  7583   0002A0  0E3F               	movlw	63
  7584   0002A2  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  7585                           
  7586                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7587   0002A4  0E00               	movlw	0
  7588   0002A6  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7589   0002A8  0E00               	movlw	0
  7590   0002AA  6F9C               	movwf	efgtoa@e& (0+255),b
  7591   0002AC                     
  7592                           ; BSR set to: 0
  7593                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)) {
  7594   0002AC  C0AF  F006         	movff	efgtoa@g,___fleq@ff1
  7595   0002B0  C0B0  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  7596   0002B4  C0B1  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  7597   0002B8  C0B2  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  7598   0002BC  0E00               	movlw	0
  7599   0002BE  6E0A               	movwf	___fleq@ff2^0,c
  7600   0002C0  0E00               	movlw	0
  7601   0002C2  6E0B               	movwf	(___fleq@ff2+1)^0,c
  7602   0002C4  0E00               	movlw	0
  7603   0002C6  6E0C               	movwf	(___fleq@ff2+2)^0,c
  7604   0002C8  0E00               	movlw	0
  7605   0002CA  6E0D               	movwf	(___fleq@ff2+3)^0,c
  7606   0002CC  EC71  F021         	call	___fleq	;wreg free
  7607   0002D0  B0D8               	btfsc	status,0,c
  7608   0002D2  EF6D  F001         	goto	u7911
  7609   0002D6  EF6F  F001         	goto	u7910
  7610   0002DA                     u7911:
  7611   0002DA  EF4E  F002         	goto	l1291
  7612   0002DE                     u7910:
  7613   0002DE  EF7C  F001         	goto	l6305
  7614   0002E2                     l1293:
  7615                           
  7616                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7617   0002E2  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  7618   0002E6  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  7619   0002EA  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  7620   0002EE  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  7621   0002F2                     
  7622                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7623   0002F2  0100               	movlb	0	; () banked
  7624   0002F4  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  7625   0002F6  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  7626   0002F8                     l6305:
  7627                           
  7628                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g).u-((ou.f = 
      +                          u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7629   0002F8  C0B5  F014         	movff	efgtoa@u,___flmul@b
  7630   0002FC  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  7631   000300  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  7632   000304  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  7633   000308  0E00               	movlw	0
  7634   00030A  6E18               	movwf	___flmul@a^0,c
  7635   00030C  0E00               	movlw	0
  7636   00030E  6E19               	movwf	(___flmul@a+1)^0,c
  7637   000310  0E20               	movlw	32
  7638   000312  6E1A               	movwf	(___flmul@a+2)^0,c
  7639   000314  0E41               	movlw	65
  7640   000316  6E1B               	movwf	(___flmul@a+3)^0,c
  7641   000318  EC68  F00A         	call	___flmul	;wreg free
  7642   00031C  C014  F0A0         	movff	?___flmul,efgtoa@ou
  7643   000320  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  7644   000324  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  7645   000328  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  7646   00032C  0100               	movlb	0	; () banked
  7647   00032E  51A0               	movf	efgtoa@ou& (0+255),w,b
  7648   000330  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7649   000332  6E06               	movwf	labs@a^0,c
  7650   000334  51A1               	movf	(efgtoa@ou+1)& (0+255),w,b
  7651   000336  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7652   000338  6E07               	movwf	(labs@a+1)^0,c
  7653   00033A  51A2               	movf	(efgtoa@ou+2)& (0+255),w,b
  7654   00033C  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7655   00033E  6E08               	movwf	(labs@a+2)^0,c
  7656   000340  51A3               	movf	(efgtoa@ou+3)& (0+255),w,b
  7657   000342  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7658   000344  6E09               	movwf	(labs@a+3)^0,c
  7659   000346  EC15  F022         	call	_labs	;wreg free
  7660   00034A  BE09               	btfsc	(?_labs+3)^0,7,c
  7661   00034C  EFB3  F001         	goto	u7921
  7662   000350  5009               	movf	(?_labs+3)^0,w,c
  7663   000352  1008               	iorwf	(?_labs+2)^0,w,c
  7664   000354  1007               	iorwf	(?_labs+1)^0,w,c
  7665   000356  E109               	bnz	u7920
  7666   000358  0E02               	movlw	2
  7667   00035A  5C06               	subwf	?_labs^0,w,c
  7668   00035C  A0D8               	btfss	status,0,c
  7669   00035E  EFB3  F001         	goto	u7921
  7670   000362  EFB5  F001         	goto	u7920
  7671   000366                     u7921:
  7672   000366  EF71  F001         	goto	l1293
  7673   00036A                     u7920:
  7674   00036A  C0A0  F02D         	movff	efgtoa@ou,___flge@ff1
  7675   00036E  C0A1  F02E         	movff	efgtoa@ou+1,___flge@ff1+1
  7676   000372  C0A2  F02F         	movff	efgtoa@ou+2,___flge@ff1+2
  7677   000376  C0A3  F030         	movff	efgtoa@ou+3,___flge@ff1+3
  7678   00037A  C0AF  F031         	movff	efgtoa@g,___flge@ff2
  7679   00037E  C0B0  F032         	movff	efgtoa@g+1,___flge@ff2+1
  7680   000382  C0B1  F033         	movff	efgtoa@g+2,___flge@ff2+2
  7681   000386  C0B2  F034         	movff	efgtoa@g+3,___flge@ff2+3
  7682   00038A  ECD2  F01D         	call	___flge	;wreg free
  7683   00038E  A0D8               	btfss	status,0,c
  7684   000390  EFCC  F001         	goto	u7931
  7685   000394  EFCE  F001         	goto	u7930
  7686   000398                     u7931:
  7687   000398  EF71  F001         	goto	l1293
  7688   00039C                     u7930:
  7689   00039C                     
  7690                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-(u).u) <= 1)
      +                          ) {
  7691   00039C  0100               	movlb	0	; () banked
  7692   00039E  51B5               	movf	efgtoa@u& (0+255),w,b
  7693   0003A0  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7694   0003A2  6E06               	movwf	labs@a^0,c
  7695   0003A4  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  7696   0003A6  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7697   0003A8  6E07               	movwf	(labs@a+1)^0,c
  7698   0003AA  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  7699   0003AC  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7700   0003AE  6E08               	movwf	(labs@a+2)^0,c
  7701   0003B0  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  7702   0003B2  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7703   0003B4  6E09               	movwf	(labs@a+3)^0,c
  7704   0003B6  EC15  F022         	call	_labs	;wreg free
  7705   0003BA  BE09               	btfsc	(?_labs+3)^0,7,c
  7706   0003BC  EFED  F001         	goto	u7940
  7707   0003C0  5009               	movf	(?_labs+3)^0,w,c
  7708   0003C2  1008               	iorwf	(?_labs+2)^0,w,c
  7709   0003C4  1007               	iorwf	(?_labs+1)^0,w,c
  7710   0003C6  E107               	bnz	u7941
  7711   0003C8  0E02               	movlw	2
  7712   0003CA  5C06               	subwf	?_labs^0,w,c
  7713   0003CC  B0D8               	btfsc	status,0,c
  7714   0003CE  EFEB  F001         	goto	u7941
  7715   0003D2  EFED  F001         	goto	u7940
  7716   0003D6                     u7941:
  7717   0003D6  EF35  F002         	goto	l6323
  7718   0003DA                     u7940:
  7719   0003DA                     l6313:
  7720                           
  7721                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7722   0003DA  C0B5  F0AF         	movff	efgtoa@u,efgtoa@g
  7723   0003DE  C0B6  F0B0         	movff	efgtoa@u+1,efgtoa@g+1
  7724   0003E2  C0B7  F0B1         	movff	efgtoa@u+2,efgtoa@g+2
  7725   0003E6  C0B8  F0B2         	movff	efgtoa@u+3,efgtoa@g+3
  7726                           
  7727                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 666:   }
  7728   0003EA  EF4E  F002         	goto	l1291
  7729   0003EE                     l6315:
  7730                           
  7731                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0;
  7732   0003EE  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  7733   0003F2  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  7734   0003F6  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  7735   0003FA  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  7736   0003FE  0E00               	movlw	0
  7737   000400  6E31               	movwf	___fldiv@a^0,c
  7738   000402  0E00               	movlw	0
  7739   000404  6E32               	movwf	(___fldiv@a+1)^0,c
  7740   000406  0E20               	movlw	32
  7741   000408  6E33               	movwf	(___fldiv@a+2)^0,c
  7742   00040A  0E41               	movlw	65
  7743   00040C  6E34               	movwf	(___fldiv@a+3)^0,c
  7744   00040E  EC69  F010         	call	___fldiv	;wreg free
  7745   000412  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  7746   000416  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  7747   00041A  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  7748   00041E  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  7749   000422                     
  7750                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 670:     --e;
  7751   000422  0100               	movlb	0	; () banked
  7752   000424  079C               	decf	efgtoa@e& (0+255),f,b
  7753   000426  A0D8               	btfss	status,0,c
  7754   000428  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  7755   00042A                     
  7756                           ; BSR set to: 0
  7757                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).u-(u).u) <= 
      +                          1)) {
  7758   00042A  51B5               	movf	efgtoa@u& (0+255),w,b
  7759   00042C  5DAF               	subwf	efgtoa@g& (0+255),w,b
  7760   00042E  6E06               	movwf	labs@a^0,c
  7761   000430  51B6               	movf	(efgtoa@u+1)& (0+255),w,b
  7762   000432  59B0               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7763   000434  6E07               	movwf	(labs@a+1)^0,c
  7764   000436  51B7               	movf	(efgtoa@u+2)& (0+255),w,b
  7765   000438  59B1               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7766   00043A  6E08               	movwf	(labs@a+2)^0,c
  7767   00043C  51B8               	movf	(efgtoa@u+3)& (0+255),w,b
  7768   00043E  59B2               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7769   000440  6E09               	movwf	(labs@a+3)^0,c
  7770   000442  EC15  F022         	call	_labs	;wreg free
  7771   000446  BE09               	btfsc	(?_labs+3)^0,7,c
  7772   000448  EF33  F002         	goto	u7950
  7773   00044C  5009               	movf	(?_labs+3)^0,w,c
  7774   00044E  1008               	iorwf	(?_labs+2)^0,w,c
  7775   000450  1007               	iorwf	(?_labs+1)^0,w,c
  7776   000452  E107               	bnz	u7951
  7777   000454  0E02               	movlw	2
  7778   000456  5C06               	subwf	?_labs^0,w,c
  7779   000458  B0D8               	btfsc	status,0,c
  7780   00045A  EF31  F002         	goto	u7951
  7781   00045E  EF33  F002         	goto	u7950
  7782   000462                     u7951:
  7783   000462  EF35  F002         	goto	l6323
  7784   000466                     u7950:
  7785   000466  EFED  F001         	goto	l6313
  7786   00046A                     l6323:
  7787                           
  7788                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.f) {
  7789   00046A  C0AF  F02D         	movff	efgtoa@g,___flge@ff1
  7790   00046E  C0B0  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  7791   000472  C0B1  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  7792   000476  C0B2  F030         	movff	efgtoa@g+3,___flge@ff1+3
  7793   00047A  C0B5  F031         	movff	efgtoa@u,___flge@ff2
  7794   00047E  C0B6  F032         	movff	efgtoa@u+1,___flge@ff2+1
  7795   000482  C0B7  F033         	movff	efgtoa@u+2,___flge@ff2+2
  7796   000486  C0B8  F034         	movff	efgtoa@u+3,___flge@ff2+3
  7797   00048A  ECD2  F01D         	call	___flge	;wreg free
  7798   00048E  A0D8               	btfss	status,0,c
  7799   000490  EF4C  F002         	goto	u7961
  7800   000494  EF4E  F002         	goto	u7960
  7801   000498                     u7961:
  7802   000498  EFF7  F001         	goto	l6315
  7803   00049C                     u7960:
  7804   00049C                     l1291:
  7805                           
  7806                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7807   00049C  C08A  F096         	movff	efgtoa@c,efgtoa@mode
  7808                           
  7809                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
  7810   0004A0  C096  F097         	movff	efgtoa@mode,efgtoa@nmode
  7811   0004A4                     
  7812                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 695:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  7813   0004A4  BE58               	btfsc	(_prec+1)^0,7,c
  7814   0004A6  EF57  F002         	goto	u7971
  7815   0004AA  EF59  F002         	goto	u7970
  7816   0004AE                     u7971:
  7817   0004AE  EF5F  F002         	goto	l6329
  7818   0004B2                     u7970:
  7819   0004B2  C057  F08F         	movff	_prec,efgtoa@p
  7820   0004B6  C058  F090         	movff	_prec+1,efgtoa@p+1
  7821   0004BA  EF64  F002         	goto	l6331
  7822   0004BE                     l6329:
  7823   0004BE  0E00               	movlw	0
  7824   0004C0  0100               	movlb	0	; () banked
  7825   0004C2  6F90               	movwf	(efgtoa@p+1)& (0+255),b
  7826   0004C4  0E06               	movlw	6
  7827   0004C6  6F8F               	movwf	efgtoa@p& (0+255),b
  7828   0004C8                     l6331:
  7829                           
  7830                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 697:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 711:     m = p;
  7831   0004C8  C08F  F09A         	movff	efgtoa@p,efgtoa@m
  7832   0004CC  C090  F09B         	movff	efgtoa@p+1,efgtoa@m+1
  7833   0004D0                     
  7834                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 715:  {;D:\MPLABX\Compiler\pic\sour
      +                          ces\c99\common\doprnt.c: 716:         ++m;
  7835   0004D0  0100               	movlb	0	; () banked
  7836   0004D2  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  7837   0004D4  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  7838   0004D6                     
  7839                           ; BSR set to: 0
  7840                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 717:     };D:\MPLABX\Compiler\pic\s
      +                          ources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
  7841   0004D6  0E66               	movlw	102
  7842   0004D8  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  7843   0004DA  A4D8               	btfss	status,2,c
  7844   0004DC  EF72  F002         	goto	u7981
  7845   0004E0  EF74  F002         	goto	u7980
  7846   0004E4                     u7981:
  7847   0004E4  EF94  F002         	goto	l6345
  7848   0004E8                     u7980:
  7849   0004E8                     
  7850                           ; BSR set to: 0
  7851                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 722:         if (e < 0) {
  7852   0004E8  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7853   0004EA  EF7B  F002         	goto	u7990
  7854   0004EE  EF79  F002         	goto	u7991
  7855   0004F2                     u7991:
  7856   0004F2  EF87  F002         	goto	l6341
  7857   0004F6                     u7990:
  7858   0004F6                     
  7859                           ; BSR set to: 0
  7860                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 723:             u.f = 1.0;
  7861   0004F6  0E00               	movlw	0
  7862   0004F8  6FB5               	movwf	efgtoa@u& (0+255),b
  7863   0004FA  0E00               	movlw	0
  7864   0004FC  6FB6               	movwf	(efgtoa@u+1)& (0+255),b
  7865   0004FE  0E80               	movlw	128
  7866   000500  6FB7               	movwf	(efgtoa@u+2)& (0+255),b
  7867   000502  0E3F               	movlw	63
  7868   000504  6FB8               	movwf	(efgtoa@u+3)& (0+255),b
  7869                           
  7870                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 724:             e = 0;
  7871   000506  0E00               	movlw	0
  7872   000508  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  7873   00050A  0E00               	movlw	0
  7874   00050C  6F9C               	movwf	efgtoa@e& (0+255),b
  7875   00050E                     l6341:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 726:         if (!(mode == 'g')) {
  7879   00050E  0E67               	movlw	103
  7880   000510  1996               	xorwf	efgtoa@mode& (0+255),w,b
  7881   000512  B4D8               	btfsc	status,2,c
  7882   000514  EF8E  F002         	goto	u8001
  7883   000518  EF90  F002         	goto	u8000
  7884   00051C                     u8001:
  7885   00051C  EF94  F002         	goto	l6345
  7886   000520                     u8000:
  7887   000520                     
  7888                           ; BSR set to: 0
  7889                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 727:             m += e;
  7890   000520  519C               	movf	efgtoa@e& (0+255),w,b
  7891   000522  279A               	addwf	efgtoa@m& (0+255),f,b
  7892   000524  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  7893   000526  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7894   000528                     l6345:
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7898   000528  0E00               	movlw	0
  7899   00052A  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  7900   00052C  0E00               	movlw	0
  7901   00052E  6FA4               	movwf	efgtoa@i& (0+255),b
  7902   000530                     
  7903                           ; BSR set to: 0
  7904                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  7905   000530  C0AF  F0A6         	movff	efgtoa@g,efgtoa@h
  7906   000534  C0B0  F0A7         	movff	efgtoa@g+1,efgtoa@h+1
  7907   000538  C0B1  F0A8         	movff	efgtoa@g+2,efgtoa@h+2
  7908   00053C  C0B2  F0A9         	movff	efgtoa@g+3,efgtoa@h+3
  7909   000540                     
  7910                           ; BSR set to: 0
  7911                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  7912   000540  C0B5  F0A0         	movff	efgtoa@u,efgtoa@ou
  7913   000544  C0B6  F0A1         	movff	efgtoa@u+1,efgtoa@ou+1
  7914   000548  C0B7  F0A2         	movff	efgtoa@u+2,efgtoa@ou+2
  7915   00054C  C0B8  F0A3         	movff	efgtoa@u+3,efgtoa@ou+3
  7916                           
  7917                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  7918   000550  EF25  F003         	goto	l6359
  7919   000554                     l6351:
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 737:         l = floorf(h/u.f);
  7923   000554  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  7924   000558  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  7925   00055C  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  7926   000560  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  7927   000564  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  7928   000568  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  7929   00056C  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  7930   000570  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  7931   000574  EC69  F010         	call	___fldiv	;wreg free
  7932   000578  C02D  F046         	movff	?___fldiv,floorf@x
  7933   00057C  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  7934   000580  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  7935   000584  C030  F049         	movff	?___fldiv+3,floorf@x+3
  7936   000588  ECF2  F015         	call	_floorf	;wreg free
  7937   00058C  C046  F0AA         	movff	?_floorf,efgtoa@l
  7938   000590  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  7939   000594  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  7940   000598  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  7941                           
  7942                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 738:         d = (int)l;
  7943   00059C  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  7944   0005A0  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  7945   0005A4  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  7946   0005A8  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  7947   0005AC  EC4E  F01D         	call	___fltol	;wreg free
  7948   0005B0  C064  F098         	movff	?___fltol,efgtoa@d
  7949   0005B4  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  7950   0005B8                     
  7951                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f;
  7952   0005B8  C0A6  F064         	movff	efgtoa@h,___flsub@b
  7953   0005BC  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  7954   0005C0  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  7955   0005C4  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  7956   0005C8  C0AA  F018         	movff	efgtoa@l,___flmul@a
  7957   0005CC  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  7958   0005D0  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  7959   0005D4  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  7960   0005D8  C0B5  F014         	movff	efgtoa@u,___flmul@b
  7961   0005DC  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  7962   0005E0  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  7963   0005E4  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  7964   0005E8  EC68  F00A         	call	___flmul	;wreg free
  7965   0005EC  C014  F068         	movff	?___flmul,___flsub@a
  7966   0005F0  C015  F069         	movff	?___flmul+1,___flsub@a+1
  7967   0005F4  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  7968   0005F8  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  7969   0005FC  ECB1  F022         	call	___flsub	;wreg free
  7970   000600  C064  F0A6         	movff	?___flsub,efgtoa@h
  7971   000604  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  7972   000608  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  7973   00060C  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  7974   000610                     
  7975                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/10.0;
  7976   000610  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  7977   000614  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  7978   000618  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  7979   00061C  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  7980   000620  0E00               	movlw	0
  7981   000622  6E31               	movwf	___fldiv@a^0,c
  7982   000624  0E00               	movlw	0
  7983   000626  6E32               	movwf	(___fldiv@a+1)^0,c
  7984   000628  0E20               	movlw	32
  7985   00062A  6E33               	movwf	(___fldiv@a+2)^0,c
  7986   00062C  0E41               	movlw	65
  7987   00062E  6E34               	movwf	(___fldiv@a+3)^0,c
  7988   000630  EC69  F010         	call	___fldiv	;wreg free
  7989   000634  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  7990   000638  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  7991   00063C  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  7992   000640  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  7993   000644                     
  7994                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 741:         ++i;
  7995   000644  0100               	movlb	0	; () banked
  7996   000646  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  7997   000648  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  7998   00064A                     l6359:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 736:     while (i < m) {
  8002   00064A  519A               	movf	efgtoa@m& (0+255),w,b
  8003   00064C  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8004   00064E  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8005   000650  0A80               	xorlw	128
  8006   000652  6F8B               	movwf	??_efgtoa& (0+255),b
  8007   000654  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8008   000656  0A80               	xorlw	128
  8009   000658  598B               	subwfb	??_efgtoa& (0+255),w,b
  8010   00065A  A0D8               	btfss	status,0,c
  8011   00065C  EF32  F003         	goto	u8011
  8012   000660  EF34  F003         	goto	u8010
  8013   000664                     u8011:
  8014   000664  EFAA  F002         	goto	l6351
  8015   000668                     u8010:
  8016   000668                     
  8017                           ; BSR set to: 0
  8018                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
  8019   000668  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8020   00066C  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8021   000670  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8022   000674  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8023   000678  0E00               	movlw	0
  8024   00067A  6E18               	movwf	___flmul@a^0,c
  8025   00067C  0E00               	movlw	0
  8026   00067E  6E19               	movwf	(___flmul@a+1)^0,c
  8027   000680  0EA0               	movlw	160
  8028   000682  6E1A               	movwf	(___flmul@a+2)^0,c
  8029   000684  0E40               	movlw	64
  8030   000686  6E1B               	movwf	(___flmul@a+3)^0,c
  8031   000688  EC68  F00A         	call	___flmul	;wreg free
  8032   00068C  C014  F0AA         	movff	?___flmul,efgtoa@l
  8033   000690  C015  F0AB         	movff	?___flmul+1,efgtoa@l+1
  8034   000694  C016  F0AC         	movff	?___flmul+2,efgtoa@l+2
  8035   000698  C017  F0AD         	movff	?___flmul+3,efgtoa@l+3
  8036   00069C                     
  8037                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
  8038   00069C  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8039   0006A0  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8040   0006A4  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8041   0006A8  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8042   0006AC  C0AA  F031         	movff	efgtoa@l,___flge@ff2
  8043   0006B0  C0AB  F032         	movff	efgtoa@l+1,___flge@ff2+1
  8044   0006B4  C0AC  F033         	movff	efgtoa@l+2,___flge@ff2+2
  8045   0006B8  C0AD  F034         	movff	efgtoa@l+3,___flge@ff2+3
  8046   0006BC  ECD2  F01D         	call	___flge	;wreg free
  8047   0006C0  B0D8               	btfsc	status,0,c
  8048   0006C2  EF65  F003         	goto	u8021
  8049   0006C6  EF67  F003         	goto	u8020
  8050   0006CA                     u8021:
  8051   0006CA  EF72  F003         	goto	l6367
  8052   0006CE                     u8020:
  8053   0006CE                     
  8054                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
  8055   0006CE  0E00               	movlw	0
  8056   0006D0  0100               	movlb	0	; () banked
  8057   0006D2  6FAA               	movwf	efgtoa@l& (0+255),b
  8058   0006D4  0E00               	movlw	0
  8059   0006D6  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8060   0006D8  0E00               	movlw	0
  8061   0006DA  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8062   0006DC  0E00               	movlw	0
  8063   0006DE  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8064                           
  8065                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 748:     } else {
  8066   0006E0  EF9B  F003         	goto	l6373
  8067   0006E4                     l6367:
  8068                           
  8069                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 750:         if ((h == l) && !(d % 
      +                          2)) {
  8070   0006E4  C0A6  F006         	movff	efgtoa@h,___fleq@ff1
  8071   0006E8  C0A7  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  8072   0006EC  C0A8  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  8073   0006F0  C0A9  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  8074   0006F4  C0AA  F00A         	movff	efgtoa@l,___fleq@ff2
  8075   0006F8  C0AB  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  8076   0006FC  C0AC  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  8077   000700  C0AD  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  8078   000704  EC71  F021         	call	___fleq	;wreg free
  8079   000708  A0D8               	btfss	status,0,c
  8080   00070A  EF89  F003         	goto	u8031
  8081   00070E  EF8B  F003         	goto	u8030
  8082   000712                     u8031:
  8083   000712  EF9B  F003         	goto	l6373
  8084   000716                     u8030:
  8085   000716  0100               	movlb	0	; () banked
  8086   000718  B198               	btfsc	efgtoa@d& (0+255),0,b
  8087   00071A  EF91  F003         	goto	u8041
  8088   00071E  EF93  F003         	goto	u8040
  8089   000722                     u8041:
  8090   000722  EF9B  F003         	goto	l6373
  8091   000726                     u8040:
  8092   000726                     
  8093                           ; BSR set to: 0
  8094                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 751:             l = 0.0;
  8095   000726  0E00               	movlw	0
  8096   000728  6FAA               	movwf	efgtoa@l& (0+255),b
  8097   00072A  0E00               	movlw	0
  8098   00072C  6FAB               	movwf	(efgtoa@l+1)& (0+255),b
  8099   00072E  0E00               	movlw	0
  8100   000730  6FAC               	movwf	(efgtoa@l+2)& (0+255),b
  8101   000732  0E00               	movlw	0
  8102   000734  6FAD               	movwf	(efgtoa@l+3)& (0+255),b
  8103   000736                     l6373:
  8104                           
  8105                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
  8106   000736  C0AF  F046         	movff	efgtoa@g,___fladd@b
  8107   00073A  C0B0  F047         	movff	efgtoa@g+1,___fladd@b+1
  8108   00073E  C0B1  F048         	movff	efgtoa@g+2,___fladd@b+2
  8109   000742  C0B2  F049         	movff	efgtoa@g+3,___fladd@b+3
  8110   000746  C0AA  F04A         	movff	efgtoa@l,___fladd@a
  8111   00074A  C0AB  F04B         	movff	efgtoa@l+1,___fladd@a+1
  8112   00074E  C0AC  F04C         	movff	efgtoa@l+2,___fladd@a+2
  8113   000752  C0AD  F04D         	movff	efgtoa@l+3,___fladd@a+3
  8114   000756  EC07  F008         	call	___fladd	;wreg free
  8115   00075A  C046  F0A6         	movff	?___fladd,efgtoa@h
  8116   00075E  C047  F0A7         	movff	?___fladd+1,efgtoa@h+1
  8117   000762  C048  F0A8         	movff	?___fladd+2,efgtoa@h+2
  8118   000766  C049  F0A9         	movff	?___fladd+3,efgtoa@h+3
  8119   00076A                     
  8120                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  8121   00076A  C0A6  F02D         	movff	efgtoa@h,___flge@ff1
  8122   00076E  C0A7  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  8123   000772  C0A8  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  8124   000776  C0A9  F030         	movff	efgtoa@h+3,___flge@ff1+3
  8125   00077A  0E00               	movlw	0
  8126   00077C  6E18               	movwf	___flmul@a^0,c
  8127   00077E  0E00               	movlw	0
  8128   000780  6E19               	movwf	(___flmul@a+1)^0,c
  8129   000782  0E20               	movlw	32
  8130   000784  6E1A               	movwf	(___flmul@a+2)^0,c
  8131   000786  0E41               	movlw	65
  8132   000788  6E1B               	movwf	(___flmul@a+3)^0,c
  8133   00078A  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8134   00078E  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8135   000792  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8136   000796  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8137   00079A  EC68  F00A         	call	___flmul	;wreg free
  8138   00079E  C014  F031         	movff	?___flmul,___flge@ff2
  8139   0007A2  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  8140   0007A6  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  8141   0007AA  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  8142   0007AE  ECD2  F01D         	call	___flge	;wreg free
  8143   0007B2  A0D8               	btfss	status,0,c
  8144   0007B4  EFDE  F003         	goto	u8051
  8145   0007B8  EFE0  F003         	goto	u8050
  8146   0007BC                     u8051:
  8147   0007BC  EF09  F004         	goto	l6385
  8148   0007C0                     u8050:
  8149   0007C0                     
  8150                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 759:   e++;
  8151   0007C0  0100               	movlb	0	; () banked
  8152   0007C2  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  8153   0007C4  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  8154   0007C6                     
  8155                           ; BSR set to: 0
  8156                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
  8157   0007C6  C0A0  F014         	movff	efgtoa@ou,___flmul@b
  8158   0007CA  C0A1  F015         	movff	efgtoa@ou+1,___flmul@b+1
  8159   0007CE  C0A2  F016         	movff	efgtoa@ou+2,___flmul@b+2
  8160   0007D2  C0A3  F017         	movff	efgtoa@ou+3,___flmul@b+3
  8161   0007D6  0E00               	movlw	0
  8162   0007D8  6E18               	movwf	___flmul@a^0,c
  8163   0007DA  0E00               	movlw	0
  8164   0007DC  6E19               	movwf	(___flmul@a+1)^0,c
  8165   0007DE  0E20               	movlw	32
  8166   0007E0  6E1A               	movwf	(___flmul@a+2)^0,c
  8167   0007E2  0E41               	movlw	65
  8168   0007E4  6E1B               	movwf	(___flmul@a+3)^0,c
  8169   0007E6  EC68  F00A         	call	___flmul	;wreg free
  8170   0007EA  C014  F0A0         	movff	?___flmul,efgtoa@ou
  8171   0007EE  C015  F0A1         	movff	?___flmul+1,efgtoa@ou+1
  8172   0007F2  C016  F0A2         	movff	?___flmul+2,efgtoa@ou+2
  8173   0007F6  C017  F0A3         	movff	?___flmul+3,efgtoa@ou+3
  8174   0007FA                     
  8175                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f') {
  8176   0007FA  0E66               	movlw	102
  8177   0007FC  0100               	movlb	0	; () banked
  8178   0007FE  1997               	xorwf	efgtoa@nmode& (0+255),w,b
  8179   000800  A4D8               	btfss	status,2,c
  8180   000802  EF05  F004         	goto	u8061
  8181   000806  EF07  F004         	goto	u8060
  8182   00080A                     u8061:
  8183   00080A  EF09  F004         	goto	l6385
  8184   00080E                     u8060:
  8185   00080E                     
  8186                           ; BSR set to: 0
  8187                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 764:    m++;
  8188   00080E  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  8189   000810  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  8190   000812                     l6385:
  8191                           
  8192                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8193   000812  C0A0  F0B5         	movff	efgtoa@ou,efgtoa@u
  8194   000816  C0A1  F0B6         	movff	efgtoa@ou+1,efgtoa@u+1
  8195   00081A  C0A2  F0B7         	movff	efgtoa@ou+2,efgtoa@u+2
  8196   00081E  C0A3  F0B8         	movff	efgtoa@ou+3,efgtoa@u+3
  8197   000822                     
  8198                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8199   000822  C09C  F08D         	movff	efgtoa@e,efgtoa@ne
  8200   000826  C09D  F08E         	movff	efgtoa@e+1,efgtoa@ne+1
  8201   00082A                     
  8202                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8203   00082A  0E00               	movlw	0
  8204   00082C  0100               	movlb	0	; () banked
  8205   00082E  6F95               	movwf	efgtoa@pp& (0+255),b
  8206   000830                     
  8207                           ; BSR set to: 0
  8208                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8209   000830  0E00               	movlw	0
  8210   000832  6F92               	movwf	(efgtoa@t+1)& (0+255),b
  8211   000834  0E00               	movlw	0
  8212   000836  6F91               	movwf	efgtoa@t& (0+255),b
  8213   000838                     
  8214                           ; BSR set to: 0
  8215                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8216   000838  0E00               	movlw	0
  8217   00083A  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8218   00083C  0E00               	movlw	0
  8219   00083E  6FA4               	movwf	efgtoa@i& (0+255),b
  8220                           
  8221                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8222   000840  EF07  F005         	goto	l6435
  8223   000844                     l6395:
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 780:         l = floorf(h/u.f);
  8227   000844  C0A6  F02D         	movff	efgtoa@h,___fldiv@b
  8228   000848  C0A7  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  8229   00084C  C0A8  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  8230   000850  C0A9  F030         	movff	efgtoa@h+3,___fldiv@b+3
  8231   000854  C0B5  F031         	movff	efgtoa@u,___fldiv@a
  8232   000858  C0B6  F032         	movff	efgtoa@u+1,___fldiv@a+1
  8233   00085C  C0B7  F033         	movff	efgtoa@u+2,___fldiv@a+2
  8234   000860  C0B8  F034         	movff	efgtoa@u+3,___fldiv@a+3
  8235   000864  EC69  F010         	call	___fldiv	;wreg free
  8236   000868  C02D  F046         	movff	?___fldiv,floorf@x
  8237   00086C  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  8238   000870  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  8239   000874  C030  F049         	movff	?___fldiv+3,floorf@x+3
  8240   000878  ECF2  F015         	call	_floorf	;wreg free
  8241   00087C  C046  F0AA         	movff	?_floorf,efgtoa@l
  8242   000880  C047  F0AB         	movff	?_floorf+1,efgtoa@l+1
  8243   000884  C048  F0AC         	movff	?_floorf+2,efgtoa@l+2
  8244   000888  C049  F0AD         	movff	?_floorf+3,efgtoa@l+3
  8245                           
  8246                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 781:         d = (int)l > 9 ? 9 : (
      +                          int)l;
  8247   00088C  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8248   000890  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8249   000894  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8250   000898  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8251   00089C  EC4E  F01D         	call	___fltol	;wreg free
  8252   0008A0  0100               	movlb	0	; () banked
  8253   0008A2  BF65               	btfsc	(?___fltol+1)& (0+255),7,b
  8254   0008A4  EF5F  F004         	goto	u8070
  8255   0008A8  5165               	movf	(?___fltol+1)& (0+255),w,b
  8256   0008AA  E107               	bnz	u8071
  8257   0008AC  0E0A               	movlw	10
  8258   0008AE  5D64               	subwf	?___fltol& (0+255),w,b
  8259   0008B0  B0D8               	btfsc	status,0,c
  8260   0008B2  EF5D  F004         	goto	u8071
  8261   0008B6  EF5F  F004         	goto	u8070
  8262   0008BA                     u8071:
  8263   0008BA  EF6F  F004         	goto	l6399
  8264   0008BE                     u8070:
  8265   0008BE                     
  8266                           ; BSR set to: 0
  8267   0008BE  C0AA  F064         	movff	efgtoa@l,___fltol@f1
  8268   0008C2  C0AB  F065         	movff	efgtoa@l+1,___fltol@f1+1
  8269   0008C6  C0AC  F066         	movff	efgtoa@l+2,___fltol@f1+2
  8270   0008CA  C0AD  F067         	movff	efgtoa@l+3,___fltol@f1+3
  8271   0008CE  EC4E  F01D         	call	___fltol	;wreg free
  8272   0008D2  C064  F098         	movff	?___fltol,efgtoa@d
  8273   0008D6  C065  F099         	movff	?___fltol+1,efgtoa@d+1
  8274   0008DA  EF73  F004         	goto	l1321
  8275   0008DE                     l6399:
  8276                           
  8277                           ; BSR set to: 0
  8278   0008DE  0E00               	movlw	0
  8279   0008E0  6F99               	movwf	(efgtoa@d+1)& (0+255),b
  8280   0008E2  0E09               	movlw	9
  8281   0008E4  6F98               	movwf	efgtoa@d& (0+255),b
  8282   0008E6                     l1321:
  8283                           
  8284                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 792:   {;D:\MPLABX\Compiler\pic\sou
      +                          rces\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) {
  8285   0008E6  0100               	movlb	0	; () banked
  8286   0008E8  5195               	movf	efgtoa@pp& (0+255),w,b
  8287   0008EA  A4D8               	btfss	status,2,c
  8288   0008EC  EF7A  F004         	goto	u8081
  8289   0008F0  EF7C  F004         	goto	u8080
  8290   0008F4                     u8081:
  8291   0008F4  EFA4  F004         	goto	l6419
  8292   0008F8                     u8080:
  8293   0008F8                     
  8294                           ; BSR set to: 0
  8295   0008F8  BF8E               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8296   0008FA  EF83  F004         	goto	u8090
  8297   0008FE  EF81  F004         	goto	u8091
  8298   000902                     u8091:
  8299   000902  EFA4  F004         	goto	l6419
  8300   000906                     u8090:
  8301   000906                     
  8302                           ; BSR set to: 0
  8303                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 794:                 dbuf[n++] = '.
      +                          ';
  8304   000906  0E25               	movlw	low _dbuf
  8305   000908  25B3               	addwf	efgtoa@n& (0+255),w,b
  8306   00090A  6ED9               	movwf	fsr2l,c
  8307   00090C  0E01               	movlw	high _dbuf
  8308   00090E  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8309   000910  6EDA               	movwf	fsr2h,c
  8310   000912  0E2E               	movlw	46
  8311   000914  6EDF               	movwf	indf2,c
  8312   000916                     
  8313                           ; BSR set to: 0
  8314   000916  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8315   000918  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8316   00091A                     
  8317                           ; BSR set to: 0
  8318                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 795:                 --w;
  8319   00091A  079E               	decf	efgtoa@w& (0+255),f,b
  8320   00091C  A0D8               	btfss	status,0,c
  8321   00091E  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8322   000920                     
  8323                           ; BSR set to: 0
  8324                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 796:                 pp = 1;
  8325   000920  0E01               	movlw	1
  8326   000922  6F95               	movwf	efgtoa@pp& (0+255),b
  8327   000924  EFA4  F004         	goto	l6419
  8328   000928                     l6411:
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 799:                 dbuf[n++] = '0
      +                          ';
  8332   000928  0E25               	movlw	low _dbuf
  8333   00092A  25B3               	addwf	efgtoa@n& (0+255),w,b
  8334   00092C  6ED9               	movwf	fsr2l,c
  8335   00092E  0E01               	movlw	high _dbuf
  8336   000930  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8337   000932  6EDA               	movwf	fsr2h,c
  8338   000934  0E30               	movlw	48
  8339   000936  6EDF               	movwf	indf2,c
  8340   000938                     
  8341                           ; BSR set to: 0
  8342   000938  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8343   00093A  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8344   00093C                     
  8345                           ; BSR set to: 0
  8346                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 800:                 --w;
  8347   00093C  079E               	decf	efgtoa@w& (0+255),f,b
  8348   00093E  A0D8               	btfss	status,0,c
  8349   000940  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8350   000942                     
  8351                           ; BSR set to: 0
  8352                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 801:                 --t;
  8353   000942  0791               	decf	efgtoa@t& (0+255),f,b
  8354   000944  A0D8               	btfss	status,0,c
  8355   000946  0792               	decf	(efgtoa@t+1)& (0+255),f,b
  8356   000948                     l6419:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 798:             while (t) {
  8360   000948  5191               	movf	efgtoa@t& (0+255),w,b
  8361   00094A  1192               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8362   00094C  A4D8               	btfss	status,2,c
  8363   00094E  EFAB  F004         	goto	u8101
  8364   000952  EFAD  F004         	goto	u8100
  8365   000956                     u8101:
  8366   000956  EF94  F004         	goto	l6411
  8367   00095A                     u8100:
  8368   00095A                     
  8369                           ; BSR set to: 0
  8370                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 803:             dbuf[n++] = (char)
      +                          ((int)'0' + d);
  8371   00095A  0E25               	movlw	low _dbuf
  8372   00095C  25B3               	addwf	efgtoa@n& (0+255),w,b
  8373   00095E  6ED9               	movwf	fsr2l,c
  8374   000960  0E01               	movlw	high _dbuf
  8375   000962  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8376   000964  6EDA               	movwf	fsr2h,c
  8377   000966  5198               	movf	efgtoa@d& (0+255),w,b
  8378   000968  0F30               	addlw	48
  8379   00096A  6EDF               	movwf	indf2,c
  8380   00096C                     
  8381                           ; BSR set to: 0
  8382   00096C  4BB3               	infsnz	efgtoa@n& (0+255),f,b
  8383   00096E  2BB4               	incf	(efgtoa@n+1)& (0+255),f,b
  8384   000970                     
  8385                           ; BSR set to: 0
  8386                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 804:             --w;
  8387   000970  079E               	decf	efgtoa@w& (0+255),f,b
  8388   000972  A0D8               	btfss	status,0,c
  8389   000974  079F               	decf	(efgtoa@w+1)& (0+255),f,b
  8390   000976                     
  8391                           ; BSR set to: 0
  8392                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 805:         };D:\MPLABX\Compiler\p
      +                          ic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
  8393   000976  C0A6  F064         	movff	efgtoa@h,___flsub@b
  8394   00097A  C0A7  F065         	movff	efgtoa@h+1,___flsub@b+1
  8395   00097E  C0A8  F066         	movff	efgtoa@h+2,___flsub@b+2
  8396   000982  C0A9  F067         	movff	efgtoa@h+3,___flsub@b+3
  8397   000986  C0AA  F018         	movff	efgtoa@l,___flmul@a
  8398   00098A  C0AB  F019         	movff	efgtoa@l+1,___flmul@a+1
  8399   00098E  C0AC  F01A         	movff	efgtoa@l+2,___flmul@a+2
  8400   000992  C0AD  F01B         	movff	efgtoa@l+3,___flmul@a+3
  8401   000996  C0B5  F014         	movff	efgtoa@u,___flmul@b
  8402   00099A  C0B6  F015         	movff	efgtoa@u+1,___flmul@b+1
  8403   00099E  C0B7  F016         	movff	efgtoa@u+2,___flmul@b+2
  8404   0009A2  C0B8  F017         	movff	efgtoa@u+3,___flmul@b+3
  8405   0009A6  EC68  F00A         	call	___flmul	;wreg free
  8406   0009AA  C014  F068         	movff	?___flmul,___flsub@a
  8407   0009AE  C015  F069         	movff	?___flmul+1,___flsub@a+1
  8408   0009B2  C016  F06A         	movff	?___flmul+2,___flsub@a+2
  8409   0009B6  C017  F06B         	movff	?___flmul+3,___flsub@a+3
  8410   0009BA  ECB1  F022         	call	___flsub	;wreg free
  8411   0009BE  C064  F0A6         	movff	?___flsub,efgtoa@h
  8412   0009C2  C065  F0A7         	movff	?___flsub+1,efgtoa@h+1
  8413   0009C6  C066  F0A8         	movff	?___flsub+2,efgtoa@h+2
  8414   0009CA  C067  F0A9         	movff	?___flsub+3,efgtoa@h+3
  8415   0009CE                     
  8416                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/10.0;
  8417   0009CE  C0B5  F02D         	movff	efgtoa@u,___fldiv@b
  8418   0009D2  C0B6  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  8419   0009D6  C0B7  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  8420   0009DA  C0B8  F030         	movff	efgtoa@u+3,___fldiv@b+3
  8421   0009DE  0E00               	movlw	0
  8422   0009E0  6E31               	movwf	___fldiv@a^0,c
  8423   0009E2  0E00               	movlw	0
  8424   0009E4  6E32               	movwf	(___fldiv@a+1)^0,c
  8425   0009E6  0E20               	movlw	32
  8426   0009E8  6E33               	movwf	(___fldiv@a+2)^0,c
  8427   0009EA  0E41               	movlw	65
  8428   0009EC  6E34               	movwf	(___fldiv@a+3)^0,c
  8429   0009EE  EC69  F010         	call	___fldiv	;wreg free
  8430   0009F2  C02D  F0B5         	movff	?___fldiv,efgtoa@u
  8431   0009F6  C02E  F0B6         	movff	?___fldiv+1,efgtoa@u+1
  8432   0009FA  C02F  F0B7         	movff	?___fldiv+2,efgtoa@u+2
  8433   0009FE  C030  F0B8         	movff	?___fldiv+3,efgtoa@u+3
  8434   000A02                     
  8435                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 808:         --ne;
  8436   000A02  0100               	movlb	0	; () banked
  8437   000A04  078D               	decf	efgtoa@ne& (0+255),f,b
  8438   000A06  A0D8               	btfss	status,0,c
  8439   000A08  078E               	decf	(efgtoa@ne+1)& (0+255),f,b
  8440   000A0A                     
  8441                           ; BSR set to: 0
  8442                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8443   000A0A  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  8444   000A0C  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  8445   000A0E                     l6435:
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 779:     while ((i < m) && (n < (80
      +                           - 5))) {
  8449   000A0E  519A               	movf	efgtoa@m& (0+255),w,b
  8450   000A10  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8451   000A12  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8452   000A14  0A80               	xorlw	128
  8453   000A16  6F8B               	movwf	??_efgtoa& (0+255),b
  8454   000A18  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  8455   000A1A  0A80               	xorlw	128
  8456   000A1C  598B               	subwfb	??_efgtoa& (0+255),w,b
  8457   000A1E  B0D8               	btfsc	status,0,c
  8458   000A20  EF14  F005         	goto	u8111
  8459   000A24  EF16  F005         	goto	u8110
  8460   000A28                     u8111:
  8461   000A28  EF24  F005         	goto	l6439
  8462   000A2C                     u8110:
  8463   000A2C                     
  8464                           ; BSR set to: 0
  8465   000A2C  BFB4               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8466   000A2E  EF22  F005         	goto	u8121
  8467   000A32  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8468   000A34  E109               	bnz	u8120
  8469   000A36  0E4B               	movlw	75
  8470   000A38  5DB3               	subwf	efgtoa@n& (0+255),w,b
  8471   000A3A  A0D8               	btfss	status,0,c
  8472   000A3C  EF22  F005         	goto	u8121
  8473   000A40  EF24  F005         	goto	u8120
  8474   000A44                     u8121:
  8475   000A44  EF22  F004         	goto	l6395
  8476   000A48                     u8120:
  8477   000A48                     l6439:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) - 1;
  8481   000A48  0E00               	movlw	0
  8482   000A4A  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  8483   000A4C  0E4F               	movlw	79
  8484   000A4E  6FA4               	movwf	efgtoa@i& (0+255),b
  8485   000A50                     
  8486                           ; BSR set to: 0
  8487                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0';
  8488   000A50  0E25               	movlw	low _dbuf
  8489   000A52  25A4               	addwf	efgtoa@i& (0+255),w,b
  8490   000A54  6ED9               	movwf	fsr2l,c
  8491   000A56  0E01               	movlw	high _dbuf
  8492   000A58  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8493   000A5A  6EDA               	movwf	fsr2h,c
  8494   000A5C  6ADF               	clrf	indf2,c
  8495   000A5E                     
  8496                           ; BSR set to: 0
  8497                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n], &dbuf[0], 
      +                          (size_t)n);
  8498   000A5E  0E25               	movlw	low _dbuf
  8499   000A60  6F8B               	movwf	??_efgtoa& (0+255),b
  8500   000A62  0E01               	movlw	high _dbuf
  8501   000A64  6F8C               	movwf	(??_efgtoa+1)& (0+255),b
  8502   000A66  51B3               	movf	efgtoa@n& (0+255),w,b
  8503   000A68  5F8B               	subwf	??_efgtoa& (0+255),f,b
  8504   000A6A  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8505   000A6C  5B8C               	subwfb	(??_efgtoa+1)& (0+255),f,b
  8506   000A6E  51A4               	movf	efgtoa@i& (0+255),w,b
  8507   000A70  258B               	addwf	??_efgtoa& (0+255),w,b
  8508   000A72  6E06               	movwf	memcpy@d1^0,c
  8509   000A74  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8510   000A76  218C               	addwfc	(??_efgtoa+1)& (0+255),w,b
  8511   000A78  6E07               	movwf	(memcpy@d1+1)^0,c
  8512   000A7A  0E25               	movlw	low _dbuf
  8513   000A7C  6E08               	movwf	memcpy@s1^0,c
  8514   000A7E  0E01               	movlw	high _dbuf
  8515   000A80  6E09               	movwf	(memcpy@s1+1)^0,c
  8516   000A82  C0B3  F00A         	movff	efgtoa@n,memcpy@n
  8517   000A86  C0B4  F00B         	movff	efgtoa@n+1,memcpy@n+1
  8518   000A8A  EC40  F022         	call	_memcpy	;wreg free
  8519   000A8E                     
  8520                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8521   000A8E  0100               	movlb	0	; () banked
  8522   000A90  51B3               	movf	efgtoa@n& (0+255),w,b
  8523   000A92  5DA4               	subwf	efgtoa@i& (0+255),w,b
  8524   000A94  6FB3               	movwf	efgtoa@n& (0+255),b
  8525   000A96  51B4               	movf	(efgtoa@n+1)& (0+255),w,b
  8526   000A98  59A5               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8527   000A9A  6FB4               	movwf	(efgtoa@n+1)& (0+255),b
  8528   000A9C                     
  8529                           ; BSR set to: 0
  8530                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  8531   000A9C  51AE               	movf	efgtoa@sign& (0+255),w,b
  8532   000A9E  A4D8               	btfss	status,2,c
  8533   000AA0  EF54  F005         	goto	u8131
  8534   000AA4  EF57  F005         	goto	u8130
  8535   000AA8                     u8131:
  8536   000AA8  0E01               	movlw	1
  8537   000AAA  EF58  F005         	goto	u8140
  8538   000AAE                     u8130:
  8539   000AAE  0E00               	movlw	0
  8540   000AB0                     u8140:
  8541   000AB0  6FA4               	movwf	efgtoa@i& (0+255),b
  8542   000AB2  6BA5               	clrf	(efgtoa@i+1)& (0+255),b
  8543   000AB4                     
  8544                           ; BSR set to: 0
  8545                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8546   000AB4  51AE               	movf	efgtoa@sign& (0+255),w,b
  8547   000AB6  B4D8               	btfsc	status,2,c
  8548   000AB8  EF60  F005         	goto	u8151
  8549   000ABC  EF62  F005         	goto	u8150
  8550   000AC0                     u8151:
  8551   000AC0  EF6D  F005         	goto	l6453
  8552   000AC4                     u8150:
  8553   000AC4                     
  8554                           ; BSR set to: 0
  8555                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign;
  8556   000AC4  07B3               	decf	efgtoa@n& (0+255),f,b
  8557   000AC6  A0D8               	btfss	status,0,c
  8558   000AC8  07B4               	decf	(efgtoa@n+1)& (0+255),f,b
  8559   000ACA  0E25               	movlw	low _dbuf
  8560   000ACC  25B3               	addwf	efgtoa@n& (0+255),w,b
  8561   000ACE  6ED9               	movwf	fsr2l,c
  8562   000AD0  0E01               	movlw	high _dbuf
  8563   000AD2  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8564   000AD4  6EDA               	movwf	fsr2h,c
  8565   000AD6  C0AE  FFDF         	movff	efgtoa@sign,indf2
  8566   000ADA                     l6453:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8570   000ADA  51A4               	movf	efgtoa@i& (0+255),w,b
  8571   000ADC  5F9E               	subwf	efgtoa@w& (0+255),f,b
  8572   000ADE  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  8573   000AE0  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8574   000AE2                     
  8575                           ; BSR set to: 0
  8576                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 867:     return (void) pad(fp, &dbu
      +                          f[n], w);
  8577   000AE2  C084  F017         	movff	efgtoa@fp,pad@fp
  8578   000AE6  C085  F018         	movff	efgtoa@fp+1,pad@fp+1
  8579   000AEA  0E25               	movlw	low _dbuf
  8580   000AEC  25B3               	addwf	efgtoa@n& (0+255),w,b
  8581   000AEE  6E19               	movwf	pad@buf^0,c
  8582   000AF0  0E01               	movlw	high _dbuf
  8583   000AF2  21B4               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8584   000AF4  6E1A               	movwf	(pad@buf+1)^0,c
  8585   000AF6  C09E  F01B         	movff	efgtoa@w,pad@p
  8586   000AFA  C09F  F01C         	movff	efgtoa@w+1,pad@p+1
  8587   000AFE  ECC6  F021         	call	_pad	;wreg free
  8588   000B02                     l1288:
  8589   000B02  0012               	return		;funcret
  8590   000B04                     __end_of_efgtoa:
  8591                           	callstack 0
  8592                           
  8593 ;; *************** function _strcpy *****************
  8594 ;; Defined at:
  8595 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\strcpy.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  dest            2    5[COMRAM] PTR unsigned char 
  8598 ;;		 -> dbuf(80), 
  8599 ;;  src             2    7[COMRAM] PTR const unsigned char 
  8600 ;;		 -> STR_26(4), STR_23(4), 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  d               2    9[COMRAM] PTR unsigned char 
  8603 ;;		 -> dbuf(80), 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  2    5[COMRAM] PTR unsigned char 
  8606 ;; Registers used:
  8607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;Total ram usage:        6 bytes
  8618 ;; Hardware stack levels used: 1
  8619 ;; Hardware stack levels required when called: 1
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_efgtoa
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text28
  8628   0046AC                     __ptext28:
  8629                           	callstack 0
  8630   0046AC                     _strcpy:
  8631                           	callstack 24
  8632   0046AC  C006  F00A         	movff	strcpy@dest,strcpy@d
  8633   0046B0  C007  F00B         	movff	strcpy@dest+1,strcpy@d+1
  8634   0046B4                     l6143:
  8635   0046B4  C008  FFF6         	movff	strcpy@src,tblptrl
  8636   0046B8  C009  FFF7         	movff	strcpy@src+1,tblptrh
  8637   0046BC  4A08               	infsnz	strcpy@src^0,f,c
  8638   0046BE  2A09               	incf	(strcpy@src+1)^0,f,c
  8639   0046C0                     	if	0	;tblptru may be non-zero
  8640   0046C0                     	endif
  8641   0046C0                     	if	0	;tblptru may be non-zero
  8642   0046C0                     	endif
  8643   0046C0  C00A  FFD9         	movff	strcpy@d,fsr2l
  8644   0046C4  C00B  FFDA         	movff	strcpy@d+1,fsr2h
  8645   0046C8  4A0A               	infsnz	strcpy@d^0,f,c
  8646   0046CA  2A0B               	incf	(strcpy@d+1)^0,f,c
  8647   0046CC  0008               	tblrd		*
  8648   0046CE  CFF5 FFDF          	movff	tablat,indf2
  8649   0046D2  50DF               	movf	indf2,w,c
  8650   0046D4  A4D8               	btfss	status,2,c
  8651   0046D6  EF6F  F023         	goto	u7621
  8652   0046DA  EF71  F023         	goto	u7620
  8653   0046DE                     u7621:
  8654   0046DE  EF5A  F023         	goto	l6143
  8655   0046E2                     u7620:
  8656   0046E2  0012               	return		;funcret
  8657   0046E4                     __end_of_strcpy:
  8658                           	callstack 0
  8659                           
  8660 ;; *************** function _memcpy *****************
  8661 ;; Defined at:
  8662 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\memcpy.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  d1              2    5[COMRAM] PTR void 
  8665 ;;		 -> dbuf(80), 
  8666 ;;  s1              2    7[COMRAM] PTR const void 
  8667 ;;		 -> dbuf(80), 
  8668 ;;  n               2    9[COMRAM] unsigned int 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  s               2   14[COMRAM] PTR const unsigned char 
  8671 ;;		 -> dbuf(80), 
  8672 ;;  d               2   12[COMRAM] PTR unsigned char 
  8673 ;;		 -> dbuf(80), 
  8674 ;;  tmp             1   11[COMRAM] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  2    5[COMRAM] PTR void 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8684 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;Total ram usage:       11 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		_efgtoa
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text29
  8699   004480                     __ptext29:
  8700                           	callstack 0
  8701   004480                     _memcpy:
  8702                           	callstack 24
  8703   004480  C008  F00F         	movff	memcpy@s1,memcpy@s
  8704   004484  C009  F010         	movff	memcpy@s1+1,memcpy@s+1
  8705   004488  C006  F00D         	movff	memcpy@d1,memcpy@d
  8706   00448C  C007  F00E         	movff	memcpy@d1+1,memcpy@d+1
  8707   004490  EF5A  F022         	goto	l6191
  8708   004494                     l6183:
  8709   004494  C00F  FFD9         	movff	memcpy@s,fsr2l
  8710   004498  C010  FFDA         	movff	memcpy@s+1,fsr2h
  8711   00449C  50DF               	movf	indf2,w,c
  8712   00449E  6E0C               	movwf	memcpy@tmp^0,c
  8713   0044A0  4A0F               	infsnz	memcpy@s^0,f,c
  8714   0044A2  2A10               	incf	(memcpy@s+1)^0,f,c
  8715   0044A4  C00D  FFD9         	movff	memcpy@d,fsr2l
  8716   0044A8  C00E  FFDA         	movff	memcpy@d+1,fsr2h
  8717   0044AC  C00C  FFDF         	movff	memcpy@tmp,indf2
  8718   0044B0  4A0D               	infsnz	memcpy@d^0,f,c
  8719   0044B2  2A0E               	incf	(memcpy@d+1)^0,f,c
  8720   0044B4                     l6191:
  8721   0044B4  060A               	decf	memcpy@n^0,f,c
  8722   0044B6  A0D8               	btfss	status,0,c
  8723   0044B8  060B               	decf	(memcpy@n+1)^0,f,c
  8724   0044BA  280A               	incf	memcpy@n^0,w,c
  8725   0044BC  E106               	bnz	u7741
  8726   0044BE  280B               	incf	(memcpy@n+1)^0,w,c
  8727   0044C0  A4D8               	btfss	status,2,c
  8728   0044C2  EF65  F022         	goto	u7741
  8729   0044C6  EF67  F022         	goto	u7740
  8730   0044CA                     u7741:
  8731   0044CA  EF4A  F022         	goto	l6183
  8732   0044CE                     u7740:
  8733   0044CE  0012               	return		;funcret
  8734   0044D0                     __end_of_memcpy:
  8735                           	callstack 0
  8736                           
  8737 ;; *************** function _labs *****************
  8738 ;; Defined at:
  8739 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\labs.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  a               4    5[COMRAM] long 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  4    5[COMRAM] long 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;Total ram usage:        8 bytes
  8758 ;; Hardware stack levels used: 1
  8759 ;; Hardware stack levels required when called: 1
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_efgtoa
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text30
  8768   00442A                     __ptext30:
  8769                           	callstack 0
  8770   00442A                     _labs:
  8771                           	callstack 24
  8772   00442A  BE09               	btfsc	(labs@a+3)^0,7,c
  8773   00442C  EF1A  F022         	goto	u7631
  8774   004430  EF1C  F022         	goto	u7630
  8775   004434                     u7631:
  8776   004434  EF26  F022         	goto	l6149
  8777   004438                     u7630:
  8778   004438  C006  F006         	movff	labs@a,?_labs
  8779   00443C  C007  F007         	movff	labs@a+1,?_labs+1
  8780   004440  C008  F008         	movff	labs@a+2,?_labs+2
  8781   004444  C009  F009         	movff	labs@a+3,?_labs+3
  8782   004448  EF3F  F022         	goto	l1437
  8783   00444C                     l6149:
  8784   00444C  C006  F00A         	movff	labs@a,??_labs
  8785   004450  C007  F00B         	movff	labs@a+1,??_labs+1
  8786   004454  C008  F00C         	movff	labs@a+2,??_labs+2
  8787   004458  C009  F00D         	movff	labs@a+3,??_labs+3
  8788   00445C  1E0A               	comf	??_labs^0,f,c
  8789   00445E  1E0B               	comf	(??_labs+1)^0,f,c
  8790   004460  1E0C               	comf	(??_labs+2)^0,f,c
  8791   004462  1E0D               	comf	(??_labs+3)^0,f,c
  8792   004464  2A0A               	incf	??_labs^0,f,c
  8793   004466  0E00               	movlw	0
  8794   004468  220B               	addwfc	(??_labs+1)^0,f,c
  8795   00446A  220C               	addwfc	(??_labs+2)^0,f,c
  8796   00446C  220D               	addwfc	(??_labs+3)^0,f,c
  8797   00446E  C00A  F006         	movff	??_labs,?_labs
  8798   004472  C00B  F007         	movff	??_labs+1,?_labs+1
  8799   004476  C00C  F008         	movff	??_labs+2,?_labs+2
  8800   00447A  C00D  F009         	movff	??_labs+3,?_labs+3
  8801   00447E                     l1437:
  8802   00447E  0012               	return		;funcret
  8803   004480                     __end_of_labs:
  8804                           	callstack 0
  8805                           
  8806 ;; *************** function _floorf *****************
  8807 ;; Defined at:
  8808 ;;		line 3 in file "D:\MPLABX\Compiler\pic\sources\c99\common\floorf.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;  x               4   69[COMRAM] float 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  u               4    6[BANK0 ] struct .
  8813 ;;  m               4    0[BANK0 ] unsigned long 
  8814 ;;  e               2    4[BANK0 ] int 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  4   69[COMRAM] float 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;Total ram usage:       20 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; Hardware stack levels required when called: 1
  8831 ;; This function calls:
  8832 ;;		Nothing
  8833 ;; This function is called by:
  8834 ;;		_efgtoa
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text31
  8839   002BE4                     __ptext31:
  8840                           	callstack 0
  8841   002BE4                     _floorf:
  8842                           	callstack 24
  8843   002BE4  C119  F066         	movff	floorf@F521,floorf@u
  8844   002BE8  C11A  F067         	movff	floorf@F521+1,floorf@u+1
  8845   002BEC  C11B  F068         	movff	floorf@F521+2,floorf@u+2
  8846   002BF0  C11C  F069         	movff	floorf@F521+3,floorf@u+3
  8847   002BF4  C046  F066         	movff	floorf@x,floorf@u
  8848   002BF8  C047  F067         	movff	floorf@x+1,floorf@u+1
  8849   002BFC  C048  F068         	movff	floorf@x+2,floorf@u+2
  8850   002C00  C049  F069         	movff	floorf@x+3,floorf@u+3
  8851   002C04  0E81               	movlw	129
  8852   002C06  6E4A               	movwf	??_floorf^0,c
  8853   002C08  0EFF               	movlw	255
  8854   002C0A  6E4B               	movwf	(??_floorf+1)^0,c
  8855   002C0C  C066  F04C         	movff	floorf@u,??_floorf+2
  8856   002C10  C067  F04D         	movff	floorf@u+1,??_floorf+3
  8857   002C14  C068  F04E         	movff	floorf@u+2,??_floorf+4
  8858   002C18  C069  F04F         	movff	floorf@u+3,??_floorf+5
  8859   002C1C  0E18               	movlw	24
  8860   002C1E  EF16  F016         	goto	u7640
  8861   002C22                     u7645:
  8862   002C22  90D8               	bcf	status,0,c
  8863   002C24  324F               	rrcf	(??_floorf+5)^0,f,c
  8864   002C26  324E               	rrcf	(??_floorf+4)^0,f,c
  8865   002C28  324D               	rrcf	(??_floorf+3)^0,f,c
  8866   002C2A  324C               	rrcf	(??_floorf+2)^0,f,c
  8867   002C2C                     u7640:
  8868   002C2C  2EE8               	decfsz	wreg,f,c
  8869   002C2E  EF11  F016         	goto	u7645
  8870   002C32  504C               	movf	(??_floorf+2)^0,w,c
  8871   002C34  244A               	addwf	??_floorf^0,w,c
  8872   002C36  0100               	movlb	0	; () banked
  8873   002C38  6F64               	movwf	floorf@e& (0+255),b
  8874   002C3A  0E00               	movlw	0
  8875   002C3C  204B               	addwfc	(??_floorf+1)^0,w,c
  8876   002C3E  6F65               	movwf	(floorf@e+1)& (0+255),b
  8877   002C40  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  8878   002C42  EF2C  F016         	goto	u7651
  8879   002C46  5165               	movf	(floorf@e+1)& (0+255),w,b
  8880   002C48  E109               	bnz	u7650
  8881   002C4A  0E17               	movlw	23
  8882   002C4C  5D64               	subwf	floorf@e& (0+255),w,b
  8883   002C4E  A0D8               	btfss	status,0,c
  8884   002C50  EF2C  F016         	goto	u7651
  8885   002C54  EF2E  F016         	goto	u7650
  8886   002C58                     u7651:
  8887   002C58  EF38  F016         	goto	l6159
  8888   002C5C                     u7650:
  8889   002C5C                     l6157:
  8890                           
  8891                           ; BSR set to: 0
  8892   002C5C  C046  F046         	movff	floorf@x,?_floorf
  8893   002C60  C047  F047         	movff	floorf@x+1,?_floorf+1
  8894   002C64  C048  F048         	movff	floorf@x+2,?_floorf+2
  8895   002C68  C049  F049         	movff	floorf@x+3,?_floorf+3
  8896   002C6C  EFFC  F016         	goto	l1423
  8897   002C70                     l6159:
  8898                           
  8899                           ; BSR set to: 0
  8900   002C70  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  8901   002C72  EF3D  F016         	goto	u7661
  8902   002C76  EF3F  F016         	goto	u7660
  8903   002C7A                     u7661:
  8904   002C7A  EFB0  F016         	goto	l6169
  8905   002C7E                     u7660:
  8906   002C7E                     
  8907                           ; BSR set to: 0
  8908   002C7E  C064  F04A         	movff	floorf@e,??_floorf
  8909   002C82  0EFF               	movlw	255
  8910   002C84  6E4B               	movwf	(??_floorf+1)^0,c
  8911   002C86  0EFF               	movlw	255
  8912   002C88  6E4C               	movwf	(??_floorf+2)^0,c
  8913   002C8A  0E7F               	movlw	127
  8914   002C8C  6E4D               	movwf	(??_floorf+3)^0,c
  8915   002C8E  0E00               	movlw	0
  8916   002C90  6E4E               	movwf	(??_floorf+4)^0,c
  8917   002C92                     u7675:
  8918   002C92  664A               	tstfsz	??_floorf^0,c
  8919   002C94  EF4E  F016         	goto	u7676
  8920   002C98  EF56  F016         	goto	u7677
  8921   002C9C                     u7676:
  8922   002C9C  344E               	rlcf	(??_floorf+4)^0,w,c
  8923   002C9E  324E               	rrcf	(??_floorf+4)^0,f,c
  8924   002CA0  324D               	rrcf	(??_floorf+3)^0,f,c
  8925   002CA2  324C               	rrcf	(??_floorf+2)^0,f,c
  8926   002CA4  324B               	rrcf	(??_floorf+1)^0,f,c
  8927   002CA6  2E4A               	decfsz	??_floorf^0,f,c
  8928   002CA8  EF49  F016         	goto	u7675
  8929   002CAC                     u7677:
  8930   002CAC  C04B  F060         	movff	??_floorf+1,floorf@m
  8931   002CB0  C04C  F061         	movff	??_floorf+2,floorf@m+1
  8932   002CB4  C04D  F062         	movff	??_floorf+3,floorf@m+2
  8933   002CB8  C04E  F063         	movff	??_floorf+4,floorf@m+3
  8934   002CBC  0100               	movlb	0	; () banked
  8935   002CBE  5160               	movf	floorf@m& (0+255),w,b
  8936   002CC0  1566               	andwf	floorf@u& (0+255),w,b
  8937   002CC2  6E4A               	movwf	??_floorf^0,c
  8938   002CC4  5161               	movf	(floorf@m+1)& (0+255),w,b
  8939   002CC6  1567               	andwf	(floorf@u+1)& (0+255),w,b
  8940   002CC8  6E4B               	movwf	(??_floorf+1)^0,c
  8941   002CCA  5162               	movf	(floorf@m+2)& (0+255),w,b
  8942   002CCC  1568               	andwf	(floorf@u+2)& (0+255),w,b
  8943   002CCE  6E4C               	movwf	(??_floorf+2)^0,c
  8944   002CD0  5163               	movf	(floorf@m+3)& (0+255),w,b
  8945   002CD2  1569               	andwf	(floorf@u+3)& (0+255),w,b
  8946   002CD4  6E4D               	movwf	(??_floorf+3)^0,c
  8947   002CD6  504A               	movf	??_floorf^0,w,c
  8948   002CD8  104B               	iorwf	(??_floorf+1)^0,w,c
  8949   002CDA  104C               	iorwf	(??_floorf+2)^0,w,c
  8950   002CDC  104D               	iorwf	(??_floorf+3)^0,w,c
  8951   002CDE  A4D8               	btfss	status,2,c
  8952   002CE0  EF74  F016         	goto	u7681
  8953   002CE4  EF76  F016         	goto	u7680
  8954   002CE8                     u7681:
  8955   002CE8  EF78  F016         	goto	l6165
  8956   002CEC                     u7680:
  8957   002CEC  EF2E  F016         	goto	l6157
  8958   002CF0                     l6165:
  8959                           
  8960                           ; BSR set to: 0
  8961   002CF0  C066  F04A         	movff	floorf@u,??_floorf
  8962   002CF4  C067  F04B         	movff	floorf@u+1,??_floorf+1
  8963   002CF8  C068  F04C         	movff	floorf@u+2,??_floorf+2
  8964   002CFC  C069  F04D         	movff	floorf@u+3,??_floorf+3
  8965   002D00  0E20               	movlw	32
  8966   002D02  EF88  F016         	goto	u7690
  8967   002D06                     u7695:
  8968   002D06  90D8               	bcf	status,0,c
  8969   002D08  324D               	rrcf	(??_floorf+3)^0,f,c
  8970   002D0A  324C               	rrcf	(??_floorf+2)^0,f,c
  8971   002D0C  324B               	rrcf	(??_floorf+1)^0,f,c
  8972   002D0E  324A               	rrcf	??_floorf^0,f,c
  8973   002D10                     u7690:
  8974   002D10  2EE8               	decfsz	wreg,f,c
  8975   002D12  EF83  F016         	goto	u7695
  8976   002D16  504A               	movf	??_floorf^0,w,c
  8977   002D18  104B               	iorwf	(??_floorf+1)^0,w,c
  8978   002D1A  104C               	iorwf	(??_floorf+2)^0,w,c
  8979   002D1C  104D               	iorwf	(??_floorf+3)^0,w,c
  8980   002D1E  B4D8               	btfsc	status,2,c
  8981   002D20  EF94  F016         	goto	u7701
  8982   002D24  EF96  F016         	goto	u7700
  8983   002D28                     u7701:
  8984   002D28  EF9E  F016         	goto	l1426
  8985   002D2C                     u7700:
  8986   002D2C                     
  8987                           ; BSR set to: 0
  8988   002D2C  5160               	movf	floorf@m& (0+255),w,b
  8989   002D2E  2766               	addwf	floorf@u& (0+255),f,b
  8990   002D30  5161               	movf	(floorf@m+1)& (0+255),w,b
  8991   002D32  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  8992   002D34  5162               	movf	(floorf@m+2)& (0+255),w,b
  8993   002D36  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  8994   002D38  5163               	movf	(floorf@m+3)& (0+255),w,b
  8995   002D3A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  8996   002D3C                     l1426:
  8997                           
  8998                           ; BSR set to: 0
  8999   002D3C  1D60               	comf	floorf@m& (0+255),w,b
  9000   002D3E  6E4A               	movwf	??_floorf^0,c
  9001   002D40  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9002   002D42  6E4B               	movwf	(??_floorf+1)^0,c
  9003   002D44  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9004   002D46  6E4C               	movwf	(??_floorf+2)^0,c
  9005   002D48  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9006   002D4A  6E4D               	movwf	(??_floorf+3)^0,c
  9007   002D4C  504A               	movf	??_floorf^0,w,c
  9008   002D4E  1766               	andwf	floorf@u& (0+255),f,b
  9009   002D50  504B               	movf	(??_floorf+1)^0,w,c
  9010   002D52  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9011   002D54  504C               	movf	(??_floorf+2)^0,w,c
  9012   002D56  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9013   002D58  504D               	movf	(??_floorf+3)^0,w,c
  9014   002D5A  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9015   002D5C  EFF4  F016         	goto	l6177
  9016   002D60                     l6169:
  9017                           
  9018                           ; BSR set to: 0
  9019   002D60  C066  F04A         	movff	floorf@u,??_floorf
  9020   002D64  C067  F04B         	movff	floorf@u+1,??_floorf+1
  9021   002D68  C068  F04C         	movff	floorf@u+2,??_floorf+2
  9022   002D6C  C069  F04D         	movff	floorf@u+3,??_floorf+3
  9023   002D70  0E20               	movlw	32
  9024   002D72  EFC0  F016         	goto	u7710
  9025   002D76                     u7715:
  9026   002D76  90D8               	bcf	status,0,c
  9027   002D78  324D               	rrcf	(??_floorf+3)^0,f,c
  9028   002D7A  324C               	rrcf	(??_floorf+2)^0,f,c
  9029   002D7C  324B               	rrcf	(??_floorf+1)^0,f,c
  9030   002D7E  324A               	rrcf	??_floorf^0,f,c
  9031   002D80                     u7710:
  9032   002D80  2EE8               	decfsz	wreg,f,c
  9033   002D82  EFBB  F016         	goto	u7715
  9034   002D86  504A               	movf	??_floorf^0,w,c
  9035   002D88  104B               	iorwf	(??_floorf+1)^0,w,c
  9036   002D8A  104C               	iorwf	(??_floorf+2)^0,w,c
  9037   002D8C  104D               	iorwf	(??_floorf+3)^0,w,c
  9038   002D8E  A4D8               	btfss	status,2,c
  9039   002D90  EFCC  F016         	goto	u7721
  9040   002D94  EFCE  F016         	goto	u7720
  9041   002D98                     u7721:
  9042   002D98  EFD8  F016         	goto	l6173
  9043   002D9C                     u7720:
  9044   002D9C                     
  9045                           ; BSR set to: 0
  9046   002D9C  0E00               	movlw	0
  9047   002D9E  6F66               	movwf	floorf@u& (0+255),b
  9048   002DA0  0E00               	movlw	0
  9049   002DA2  6F67               	movwf	(floorf@u+1)& (0+255),b
  9050   002DA4  0E00               	movlw	0
  9051   002DA6  6F68               	movwf	(floorf@u+2)& (0+255),b
  9052   002DA8  0E00               	movlw	0
  9053   002DAA  6F69               	movwf	(floorf@u+3)& (0+255),b
  9054   002DAC  EFF4  F016         	goto	l6177
  9055   002DB0                     l6173:
  9056                           
  9057                           ; BSR set to: 0
  9058   002DB0  90D8               	bcf	status,0,c
  9059   002DB2  3566               	rlcf	floorf@u& (0+255),w,b
  9060   002DB4  6E4A               	movwf	??_floorf^0,c
  9061   002DB6  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9062   002DB8  6E4B               	movwf	(??_floorf+1)^0,c
  9063   002DBA  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9064   002DBC  6E4C               	movwf	(??_floorf+2)^0,c
  9065   002DBE  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9066   002DC0  6E4D               	movwf	(??_floorf+3)^0,c
  9067   002DC2  504A               	movf	??_floorf^0,w,c
  9068   002DC4  104B               	iorwf	(??_floorf+1)^0,w,c
  9069   002DC6  104C               	iorwf	(??_floorf+2)^0,w,c
  9070   002DC8  104D               	iorwf	(??_floorf+3)^0,w,c
  9071   002DCA  B4D8               	btfsc	status,2,c
  9072   002DCC  EFEA  F016         	goto	u7731
  9073   002DD0  EFEC  F016         	goto	u7730
  9074   002DD4                     u7731:
  9075   002DD4  EFF4  F016         	goto	l6177
  9076   002DD8                     u7730:
  9077   002DD8                     
  9078                           ; BSR set to: 0
  9079   002DD8  0E00               	movlw	0
  9080   002DDA  6F66               	movwf	floorf@u& (0+255),b
  9081   002DDC  0E00               	movlw	0
  9082   002DDE  6F67               	movwf	(floorf@u+1)& (0+255),b
  9083   002DE0  0E80               	movlw	128
  9084   002DE2  6F68               	movwf	(floorf@u+2)& (0+255),b
  9085   002DE4  0EBF               	movlw	191
  9086   002DE6  6F69               	movwf	(floorf@u+3)& (0+255),b
  9087   002DE8                     l6177:
  9088                           
  9089                           ; BSR set to: 0
  9090   002DE8  C066  F046         	movff	floorf@u,?_floorf
  9091   002DEC  C067  F047         	movff	floorf@u+1,?_floorf+1
  9092   002DF0  C068  F048         	movff	floorf@u+2,?_floorf+2
  9093   002DF4  C069  F049         	movff	floorf@u+3,?_floorf+3
  9094   002DF8                     l1423:
  9095                           
  9096                           ; BSR set to: 0
  9097   002DF8  0012               	return		;funcret
  9098   002DFA                     __end_of_floorf:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function ___fpclassifyf *****************
  9102 ;; Defined at:
  9103 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\__fpclassifyf.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  x               4    5[COMRAM] float 
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;  u               4   15[COMRAM] struct .
  9108 ;;  e               2   13[COMRAM] int 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  2    5[COMRAM] int 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;Total ram usage:       14 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 1
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_efgtoa
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text32
  9133   003CA8                     __ptext32:
  9134                           	callstack 0
  9135   003CA8                     ___fpclassifyf:
  9136                           	callstack 24
  9137   003CA8  C11D  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9138   003CAC  C11E  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9139   003CB0  C11F  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9140   003CB4  C120  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9141   003CB8  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  9142   003CBC  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9143   003CC0  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9144   003CC4  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9145   003CC8  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9146   003CCC  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9147   003CD0  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9148   003CD4  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9149   003CD8  0E18               	movlw	24
  9150   003CDA  EF74  F01E         	goto	u7550
  9151   003CDE                     u7555:
  9152   003CDE  90D8               	bcf	status,0,c
  9153   003CE0  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  9154   003CE2  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  9155   003CE4  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  9156   003CE6  320A               	rrcf	??___fpclassifyf^0,f,c
  9157   003CE8                     u7550:
  9158   003CE8  2EE8               	decfsz	wreg,f,c
  9159   003CEA  EF6F  F01E         	goto	u7555
  9160   003CEE  500A               	movf	??___fpclassifyf^0,w,c
  9161   003CF0  6E0E               	movwf	___fpclassifyf@e^0,c
  9162   003CF2  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  9163   003CF4  500E               	movf	___fpclassifyf@e^0,w,c
  9164   003CF6  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9165   003CF8  A4D8               	btfss	status,2,c
  9166   003CFA  EF81  F01E         	goto	u7561
  9167   003CFE  EF83  F01E         	goto	u7560
  9168   003D02                     u7561:
  9169   003D02  EFA3  F01E         	goto	l6131
  9170   003D06                     u7560:
  9171   003D06  90D8               	bcf	status,0,c
  9172   003D08  3410               	rlcf	___fpclassifyf@u^0,w,c
  9173   003D0A  6E0A               	movwf	??___fpclassifyf^0,c
  9174   003D0C  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9175   003D0E  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  9176   003D10  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9177   003D12  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  9178   003D14  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9179   003D16  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  9180   003D18  500A               	movf	??___fpclassifyf^0,w,c
  9181   003D1A  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9182   003D1C  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9183   003D1E  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9184   003D20  A4D8               	btfss	status,2,c
  9185   003D22  EF95  F01E         	goto	u7571
  9186   003D26  EF97  F01E         	goto	u7570
  9187   003D2A                     u7571:
  9188   003D2A  EF9D  F01E         	goto	l6127
  9189   003D2E                     u7570:
  9190   003D2E  0E00               	movlw	0
  9191   003D30  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9192   003D32  0E02               	movlw	2
  9193   003D34  6E06               	movwf	?___fpclassifyf^0,c
  9194   003D36  EFD2  F01E         	goto	l1409
  9195   003D3A                     l6127:
  9196   003D3A  0E00               	movlw	0
  9197   003D3C  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9198   003D3E  0E03               	movlw	3
  9199   003D40  6E06               	movwf	?___fpclassifyf^0,c
  9200   003D42  EFD2  F01E         	goto	l1409
  9201   003D46                     l6131:
  9202   003D46  280E               	incf	___fpclassifyf@e^0,w,c
  9203   003D48  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9204   003D4A  A4D8               	btfss	status,2,c
  9205   003D4C  EFAA  F01E         	goto	u7581
  9206   003D50  EFAC  F01E         	goto	u7580
  9207   003D54                     u7581:
  9208   003D54  EFCE  F01E         	goto	l6137
  9209   003D58                     u7580:
  9210   003D58  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  9211   003D5C  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9212   003D60  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9213   003D64  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9214   003D68  0E09               	movlw	9
  9215   003D6A                     u7595:
  9216   003D6A  90D8               	bcf	status,0,c
  9217   003D6C  360A               	rlcf	??___fpclassifyf^0,f,c
  9218   003D6E  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  9219   003D70  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  9220   003D72  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  9221   003D74  2EE8               	decfsz	wreg,f,c
  9222   003D76  EFB5  F01E         	goto	u7595
  9223   003D7A  500A               	movf	??___fpclassifyf^0,w,c
  9224   003D7C  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  9225   003D7E  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  9226   003D80  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  9227   003D82  B4D8               	btfsc	status,2,c
  9228   003D84  EFC6  F01E         	goto	u7601
  9229   003D88  EFC9  F01E         	goto	u7600
  9230   003D8C                     u7601:
  9231   003D8C  0E01               	movlw	1
  9232   003D8E  EFCA  F01E         	goto	u7610
  9233   003D92                     u7600:
  9234   003D92  0E00               	movlw	0
  9235   003D94                     u7610:
  9236   003D94  6E06               	movwf	?___fpclassifyf^0,c
  9237   003D96  6A07               	clrf	(?___fpclassifyf+1)^0,c
  9238   003D98  EFD2  F01E         	goto	l1409
  9239   003D9C                     l6137:
  9240   003D9C  0E00               	movlw	0
  9241   003D9E  6E07               	movwf	(?___fpclassifyf+1)^0,c
  9242   003DA0  0E04               	movlw	4
  9243   003DA2  6E06               	movwf	?___fpclassifyf^0,c
  9244   003DA4                     l1409:
  9245   003DA4  0012               	return		;funcret
  9246   003DA6                     __end_of___fpclassifyf:
  9247                           	callstack 0
  9248                           
  9249 ;; *************** function ___fltol *****************
  9250 ;; Defined at:
  9251 ;;		line 43 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fltol.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  f1              4    4[BANK0 ] int 
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;  exp1            1   82[COMRAM] unsigned char 
  9256 ;;  sign1           1   81[COMRAM] unsigned char 
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  4    4[BANK0 ] long 
  9259 ;; Registers used:
  9260 ;;		wreg, status,2, status,0
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9266 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9269 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9270 ;;Total ram usage:       10 bytes
  9271 ;; Hardware stack levels used: 1
  9272 ;; Hardware stack levels required when called: 1
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_runDAC
  9277 ;;		_efgtoa
  9278 ;;		___rem_pio2f
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text33
  9283   003A9C                     __ptext33:
  9284                           	callstack 0
  9285   003A9C                     ___fltol:
  9286                           	callstack 24
  9287   003A9C  0100               	movlb	0	; () banked
  9288   003A9E  3566               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9289   003AA0  3567               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9290   003AA2  6E53               	movwf	___fltol@exp1^0,c
  9291   003AA4  5053               	movf	___fltol@exp1^0,w,c
  9292   003AA6  A4D8               	btfss	status,2,c
  9293   003AA8  EF58  F01D         	goto	u7431
  9294   003AAC  EF5A  F01D         	goto	u7430
  9295   003AB0                     u7431:
  9296   003AB0  EF64  F01D         	goto	l6061
  9297   003AB4                     u7430:
  9298   003AB4                     l6057:
  9299                           
  9300                           ; BSR set to: 0
  9301   003AB4  0E00               	movlw	0
  9302   003AB6  6F64               	movwf	?___fltol& (0+255),b
  9303   003AB8  0E00               	movlw	0
  9304   003ABA  6F65               	movwf	(?___fltol+1)& (0+255),b
  9305   003ABC  0E00               	movlw	0
  9306   003ABE  6F66               	movwf	(?___fltol+2)& (0+255),b
  9307   003AC0  0E00               	movlw	0
  9308   003AC2  6F67               	movwf	(?___fltol+3)& (0+255),b
  9309   003AC4  EFD1  F01D         	goto	l843
  9310   003AC8                     l6061:
  9311                           
  9312                           ; BSR set to: 0
  9313   003AC8  C064  F068         	movff	___fltol@f1,??___fltol
  9314   003ACC  C065  F069         	movff	___fltol@f1+1,??___fltol+1
  9315   003AD0  C066  F06A         	movff	___fltol@f1+2,??___fltol+2
  9316   003AD4  C067  F06B         	movff	___fltol@f1+3,??___fltol+3
  9317   003AD8  0E20               	movlw	32
  9318   003ADA  EF74  F01D         	goto	u7440
  9319   003ADE                     u7445:
  9320   003ADE  90D8               	bcf	status,0,c
  9321   003AE0  336B               	rrcf	(??___fltol+3)& (0+255),f,b
  9322   003AE2  336A               	rrcf	(??___fltol+2)& (0+255),f,b
  9323   003AE4  3369               	rrcf	(??___fltol+1)& (0+255),f,b
  9324   003AE6  3368               	rrcf	??___fltol& (0+255),f,b
  9325   003AE8                     u7440:
  9326   003AE8  2EE8               	decfsz	wreg,f,c
  9327   003AEA  EF6F  F01D         	goto	u7445
  9328   003AEE  5168               	movf	??___fltol& (0+255),w,b
  9329   003AF0  6E52               	movwf	___fltol@sign1^0,c
  9330   003AF2                     
  9331                           ; BSR set to: 0
  9332   003AF2  8F66               	bsf	(___fltol@f1+2)& (0+255),7,b
  9333   003AF4                     
  9334                           ; BSR set to: 0
  9335   003AF4  0EFF               	movlw	255
  9336   003AF6  1764               	andwf	___fltol@f1& (0+255),f,b
  9337   003AF8  0EFF               	movlw	255
  9338   003AFA  1765               	andwf	(___fltol@f1+1)& (0+255),f,b
  9339   003AFC  0EFF               	movlw	255
  9340   003AFE  1766               	andwf	(___fltol@f1+2)& (0+255),f,b
  9341   003B00  0E00               	movlw	0
  9342   003B02  1767               	andwf	(___fltol@f1+3)& (0+255),f,b
  9343   003B04                     
  9344                           ; BSR set to: 0
  9345   003B04  0E96               	movlw	150
  9346   003B06  5E53               	subwf	___fltol@exp1^0,f,c
  9347   003B08                     
  9348                           ; BSR set to: 0
  9349   003B08  BE53               	btfsc	___fltol@exp1^0,7,c
  9350   003B0A  EF8B  F01D         	goto	u7450
  9351   003B0E  EF89  F01D         	goto	u7451
  9352   003B12                     u7451:
  9353   003B12  EFA1  F01D         	goto	l6081
  9354   003B16                     u7450:
  9355   003B16                     
  9356                           ; BSR set to: 0
  9357   003B16  5053               	movf	___fltol@exp1^0,w,c
  9358   003B18  0A80               	xorlw	128
  9359   003B1A  0F97               	addlw	151
  9360   003B1C  B0D8               	btfsc	status,0,c
  9361   003B1E  EF93  F01D         	goto	u7461
  9362   003B22  EF95  F01D         	goto	u7460
  9363   003B26                     u7461:
  9364   003B26  EF97  F01D         	goto	l6077
  9365   003B2A                     u7460:
  9366   003B2A  EF5A  F01D         	goto	l6057
  9367   003B2E                     l6077:
  9368                           
  9369                           ; BSR set to: 0
  9370   003B2E  90D8               	bcf	status,0,c
  9371   003B30  3367               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9372   003B32  3366               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9373   003B34  3365               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9374   003B36  3364               	rrcf	___fltol@f1& (0+255),f,b
  9375   003B38                     
  9376                           ; BSR set to: 0
  9377   003B38  3E53               	incfsz	___fltol@exp1^0,f,c
  9378   003B3A  EF97  F01D         	goto	l6077
  9379   003B3E  EFB9  F01D         	goto	l6091
  9380   003B42                     l6081:
  9381                           
  9382                           ; BSR set to: 0
  9383   003B42  0E1F               	movlw	31
  9384   003B44  6453               	cpfsgt	___fltol@exp1^0,c
  9385   003B46  EFA7  F01D         	goto	u7471
  9386   003B4A  EFA9  F01D         	goto	u7470
  9387   003B4E                     u7471:
  9388   003B4E  EFB1  F01D         	goto	l6089
  9389   003B52                     u7470:
  9390   003B52  EF5A  F01D         	goto	l6057
  9391   003B56                     l6087:
  9392                           
  9393                           ; BSR set to: 0
  9394   003B56  90D8               	bcf	status,0,c
  9395   003B58  3764               	rlcf	___fltol@f1& (0+255),f,b
  9396   003B5A  3765               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9397   003B5C  3766               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9398   003B5E  3767               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9399   003B60  0653               	decf	___fltol@exp1^0,f,c
  9400   003B62                     l6089:
  9401                           
  9402                           ; BSR set to: 0
  9403   003B62  5053               	movf	___fltol@exp1^0,w,c
  9404   003B64  A4D8               	btfss	status,2,c
  9405   003B66  EFB7  F01D         	goto	u7481
  9406   003B6A  EFB9  F01D         	goto	u7480
  9407   003B6E                     u7481:
  9408   003B6E  EFAB  F01D         	goto	l6087
  9409   003B72                     u7480:
  9410   003B72                     l6091:
  9411                           
  9412                           ; BSR set to: 0
  9413   003B72  5052               	movf	___fltol@sign1^0,w,c
  9414   003B74  B4D8               	btfsc	status,2,c
  9415   003B76  EFBF  F01D         	goto	u7491
  9416   003B7A  EFC1  F01D         	goto	u7490
  9417   003B7E                     u7491:
  9418   003B7E  EFC9  F01D         	goto	l6095
  9419   003B82                     u7490:
  9420   003B82                     
  9421                           ; BSR set to: 0
  9422   003B82  1F67               	comf	(___fltol@f1+3)& (0+255),f,b
  9423   003B84  1F66               	comf	(___fltol@f1+2)& (0+255),f,b
  9424   003B86  1F65               	comf	(___fltol@f1+1)& (0+255),f,b
  9425   003B88  6D64               	negf	___fltol@f1& (0+255),b
  9426   003B8A  0E00               	movlw	0
  9427   003B8C  2365               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9428   003B8E  2366               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9429   003B90  2367               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9430   003B92                     l6095:
  9431                           
  9432                           ; BSR set to: 0
  9433   003B92  C064  F064         	movff	___fltol@f1,?___fltol
  9434   003B96  C065  F065         	movff	___fltol@f1+1,?___fltol+1
  9435   003B9A  C066  F066         	movff	___fltol@f1+2,?___fltol+2
  9436   003B9E  C067  F067         	movff	___fltol@f1+3,?___fltol+3
  9437   003BA2                     l843:
  9438                           
  9439                           ; BSR set to: 0
  9440   003BA2  0012               	return		;funcret
  9441   003BA4                     __end_of___fltol:
  9442                           	callstack 0
  9443                           
  9444 ;; *************** function ___flsub *****************
  9445 ;; Defined at:
  9446 ;;		line 245 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  b               4    4[BANK0 ] long 
  9449 ;;  a               4    8[BANK0 ] long 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  4    4[BANK0 ] long 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9461 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;Total ram usage:        8 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; Hardware stack levels required when called: 2
  9468 ;; This function calls:
  9469 ;;		___fladd
  9470 ;; This function is called by:
  9471 ;;		_efgtoa
  9472 ;;		___rem_pio2f
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text34
  9477   004562                     __ptext34:
  9478                           	callstack 0
  9479   004562                     ___flsub:
  9480                           	callstack 23
  9481   004562  0E00               	movlw	0
  9482   004564  0100               	movlb	0	; () banked
  9483   004566  1B68               	xorwf	___flsub@a& (0+255),f,b
  9484   004568  0E00               	movlw	0
  9485   00456A  1B69               	xorwf	(___flsub@a+1)& (0+255),f,b
  9486   00456C  0E00               	movlw	0
  9487   00456E  1B6A               	xorwf	(___flsub@a+2)& (0+255),f,b
  9488   004570  0E80               	movlw	128
  9489   004572  1B6B               	xorwf	(___flsub@a+3)& (0+255),f,b
  9490   004574                     
  9491                           ; BSR set to: 0
  9492   004574  C064  F046         	movff	___flsub@b,___fladd@b
  9493   004578  C065  F047         	movff	___flsub@b+1,___fladd@b+1
  9494   00457C  C066  F048         	movff	___flsub@b+2,___fladd@b+2
  9495   004580  C067  F049         	movff	___flsub@b+3,___fladd@b+3
  9496   004584  C068  F04A         	movff	___flsub@a,___fladd@a
  9497   004588  C069  F04B         	movff	___flsub@a+1,___fladd@a+1
  9498   00458C  C06A  F04C         	movff	___flsub@a+2,___fladd@a+2
  9499   004590  C06B  F04D         	movff	___flsub@a+3,___fladd@a+3
  9500   004594  EC07  F008         	call	___fladd	;wreg free
  9501   004598  C046  F064         	movff	?___fladd,?___flsub
  9502   00459C  C047  F065         	movff	?___fladd+1,?___flsub+1
  9503   0045A0  C048  F066         	movff	?___fladd+2,?___flsub+2
  9504   0045A4  C049  F067         	movff	?___fladd+3,?___flsub+3
  9505   0045A8  0012               	return		;funcret
  9506   0045AA                     __end_of___flsub:
  9507                           	callstack 0
  9508                           
  9509 ;; *************** function ___fladd *****************
  9510 ;; Defined at:
  9511 ;;		line 10 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcadd.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  b               4   69[COMRAM] long 
  9514 ;;  a               4   73[COMRAM] long 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  grs             1    3[BANK0 ] unsigned char 
  9517 ;;  bexp            1    2[BANK0 ] unsigned char 
  9518 ;;  aexp            1    1[BANK0 ] unsigned char 
  9519 ;;  signs           1    0[BANK0 ] unsigned char 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  4   69[COMRAM] unsigned char 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9529 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;Total ram usage:       16 bytes
  9534 ;; Hardware stack levels used: 1
  9535 ;; Hardware stack levels required when called: 1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_runDAC
  9540 ;;		___flsub
  9541 ;;		_efgtoa
  9542 ;;		_sinf
  9543 ;;		___cosdf
  9544 ;;		___rem_pio2f
  9545 ;;		___sindf
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text35
  9550   00100E                     __ptext35:
  9551                           	callstack 0
  9552   00100E                     ___fladd:
  9553                           	callstack 23
  9554   00100E  5049               	movf	(___fladd@b+3)^0,w,c
  9555   001010  0B80               	andlw	128
  9556   001012  0100               	movlb	0	; () banked
  9557   001014  6F60               	movwf	___fladd@signs& (0+255),b
  9558   001016  5049               	movf	(___fladd@b+3)^0,w,c
  9559   001018  2449               	addwf	(___fladd@b+3)^0,w,c
  9560   00101A  6F62               	movwf	___fladd@bexp& (0+255),b
  9561   00101C                     
  9562                           ; BSR set to: 0
  9563   00101C  AE48               	btfss	(___fladd@b+2)^0,7,c
  9564   00101E  EF13  F008         	goto	u6401
  9565   001022  EF15  F008         	goto	u6400
  9566   001026                     u6401:
  9567   001026  EF16  F008         	goto	l5445
  9568   00102A                     u6400:
  9569   00102A                     
  9570                           ; BSR set to: 0
  9571   00102A  8162               	bsf	___fladd@bexp& (0+255),0,b
  9572   00102C                     l5445:
  9573                           
  9574                           ; BSR set to: 0
  9575   00102C  5162               	movf	___fladd@bexp& (0+255),w,b
  9576   00102E  B4D8               	btfsc	status,2,c
  9577   001030  EF1C  F008         	goto	u6411
  9578   001034  EF1E  F008         	goto	u6410
  9579   001038                     u6411:
  9580   001038  EF33  F008         	goto	l5455
  9581   00103C                     u6410:
  9582   00103C                     
  9583                           ; BSR set to: 0
  9584   00103C  2962               	incf	___fladd@bexp& (0+255),w,b
  9585   00103E  A4D8               	btfss	status,2,c
  9586   001040  EF24  F008         	goto	u6421
  9587   001044  EF26  F008         	goto	u6420
  9588   001048                     u6421:
  9589   001048  EF2E  F008         	goto	l5451
  9590   00104C                     u6420:
  9591   00104C                     
  9592                           ; BSR set to: 0
  9593   00104C  0E00               	movlw	0
  9594   00104E  6E46               	movwf	___fladd@b^0,c
  9595   001050  0E00               	movlw	0
  9596   001052  6E47               	movwf	(___fladd@b+1)^0,c
  9597   001054  0E00               	movlw	0
  9598   001056  6E48               	movwf	(___fladd@b+2)^0,c
  9599   001058  0E00               	movlw	0
  9600   00105A  6E49               	movwf	(___fladd@b+3)^0,c
  9601   00105C                     l5451:
  9602                           
  9603                           ; BSR set to: 0
  9604   00105C  8E48               	bsf	(___fladd@b+2)^0,7,c
  9605   00105E                     
  9606                           ; BSR set to: 0
  9607   00105E  0E00               	movlw	0
  9608   001060  6E49               	movwf	(___fladd@b+3)^0,c
  9609   001062  EF3B  F008         	goto	l5457
  9610   001066                     l5455:
  9611                           
  9612                           ; BSR set to: 0
  9613   001066  0E00               	movlw	0
  9614   001068  6E46               	movwf	___fladd@b^0,c
  9615   00106A  0E00               	movlw	0
  9616   00106C  6E47               	movwf	(___fladd@b+1)^0,c
  9617   00106E  0E00               	movlw	0
  9618   001070  6E48               	movwf	(___fladd@b+2)^0,c
  9619   001072  0E00               	movlw	0
  9620   001074  6E49               	movwf	(___fladd@b+3)^0,c
  9621   001076                     l5457:
  9622                           
  9623                           ; BSR set to: 0
  9624   001076  504D               	movf	(___fladd@a+3)^0,w,c
  9625   001078  0B80               	andlw	128
  9626   00107A  6F61               	movwf	___fladd@aexp& (0+255),b
  9627   00107C                     
  9628                           ; BSR set to: 0
  9629   00107C  5160               	movf	___fladd@signs& (0+255),w,b
  9630   00107E  1961               	xorwf	___fladd@aexp& (0+255),w,b
  9631   001080  B4D8               	btfsc	status,2,c
  9632   001082  EF45  F008         	goto	u6431
  9633   001086  EF47  F008         	goto	u6430
  9634   00108A                     u6431:
  9635   00108A  EF48  F008         	goto	l5463
  9636   00108E                     u6430:
  9637   00108E                     
  9638                           ; BSR set to: 0
  9639   00108E  8D60               	bsf	___fladd@signs& (0+255),6,b
  9640   001090                     l5463:
  9641                           
  9642                           ; BSR set to: 0
  9643   001090  504D               	movf	(___fladd@a+3)^0,w,c
  9644   001092  244D               	addwf	(___fladd@a+3)^0,w,c
  9645   001094  6F61               	movwf	___fladd@aexp& (0+255),b
  9646   001096                     
  9647                           ; BSR set to: 0
  9648   001096  AE4C               	btfss	(___fladd@a+2)^0,7,c
  9649   001098  EF50  F008         	goto	u6441
  9650   00109C  EF52  F008         	goto	u6440
  9651   0010A0                     u6441:
  9652   0010A0  EF53  F008         	goto	l5469
  9653   0010A4                     u6440:
  9654   0010A4                     
  9655                           ; BSR set to: 0
  9656   0010A4  8161               	bsf	___fladd@aexp& (0+255),0,b
  9657   0010A6                     l5469:
  9658                           
  9659                           ; BSR set to: 0
  9660   0010A6  5161               	movf	___fladd@aexp& (0+255),w,b
  9661   0010A8  B4D8               	btfsc	status,2,c
  9662   0010AA  EF59  F008         	goto	u6451
  9663   0010AE  EF5B  F008         	goto	u6450
  9664   0010B2                     u6451:
  9665   0010B2  EF70  F008         	goto	l5479
  9666   0010B6                     u6450:
  9667   0010B6                     
  9668                           ; BSR set to: 0
  9669   0010B6  2961               	incf	___fladd@aexp& (0+255),w,b
  9670   0010B8  A4D8               	btfss	status,2,c
  9671   0010BA  EF61  F008         	goto	u6461
  9672   0010BE  EF63  F008         	goto	u6460
  9673   0010C2                     u6461:
  9674   0010C2  EF6B  F008         	goto	l5475
  9675   0010C6                     u6460:
  9676   0010C6                     
  9677                           ; BSR set to: 0
  9678   0010C6  0E00               	movlw	0
  9679   0010C8  6E4A               	movwf	___fladd@a^0,c
  9680   0010CA  0E00               	movlw	0
  9681   0010CC  6E4B               	movwf	(___fladd@a+1)^0,c
  9682   0010CE  0E00               	movlw	0
  9683   0010D0  6E4C               	movwf	(___fladd@a+2)^0,c
  9684   0010D2  0E00               	movlw	0
  9685   0010D4  6E4D               	movwf	(___fladd@a+3)^0,c
  9686   0010D6                     l5475:
  9687                           
  9688                           ; BSR set to: 0
  9689   0010D6  8E4C               	bsf	(___fladd@a+2)^0,7,c
  9690   0010D8                     
  9691                           ; BSR set to: 0
  9692   0010D8  0E00               	movlw	0
  9693   0010DA  6E4D               	movwf	(___fladd@a+3)^0,c
  9694   0010DC  EF78  F008         	goto	l5481
  9695   0010E0                     l5479:
  9696                           
  9697                           ; BSR set to: 0
  9698   0010E0  0E00               	movlw	0
  9699   0010E2  6E4A               	movwf	___fladd@a^0,c
  9700   0010E4  0E00               	movlw	0
  9701   0010E6  6E4B               	movwf	(___fladd@a+1)^0,c
  9702   0010E8  0E00               	movlw	0
  9703   0010EA  6E4C               	movwf	(___fladd@a+2)^0,c
  9704   0010EC  0E00               	movlw	0
  9705   0010EE  6E4D               	movwf	(___fladd@a+3)^0,c
  9706   0010F0                     l5481:
  9707                           
  9708                           ; BSR set to: 0
  9709   0010F0  5162               	movf	___fladd@bexp& (0+255),w,b
  9710   0010F2  5D61               	subwf	___fladd@aexp& (0+255),w,b
  9711   0010F4  B0D8               	btfsc	status,0,c
  9712   0010F6  EF7F  F008         	goto	u6471
  9713   0010FA  EF81  F008         	goto	u6470
  9714   0010FE                     u6471:
  9715   0010FE  EFA8  F008         	goto	l5517
  9716   001102                     u6470:
  9717   001102                     
  9718                           ; BSR set to: 0
  9719   001102  AD60               	btfss	___fladd@signs& (0+255),6,b
  9720   001104  EF86  F008         	goto	u6481
  9721   001108  EF88  F008         	goto	u6480
  9722   00110C                     u6481:
  9723   00110C  EF8A  F008         	goto	l5487
  9724   001110                     u6480:
  9725   001110                     
  9726                           ; BSR set to: 0
  9727   001110  0E80               	movlw	128
  9728   001112  1B60               	xorwf	___fladd@signs& (0+255),f,b
  9729   001114                     l5487:
  9730                           
  9731                           ; BSR set to: 0
  9732   001114  C062  F063         	movff	___fladd@bexp,___fladd@grs
  9733   001118                     
  9734                           ; BSR set to: 0
  9735   001118  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  9736   00111C                     
  9737                           ; BSR set to: 0
  9738   00111C  C063  F061         	movff	___fladd@grs,___fladd@aexp
  9739   001120                     
  9740                           ; BSR set to: 0
  9741   001120  C046  F063         	movff	___fladd@b,___fladd@grs
  9742   001124                     
  9743                           ; BSR set to: 0
  9744   001124  C04A  F046         	movff	___fladd@a,___fladd@b
  9745   001128                     
  9746                           ; BSR set to: 0
  9747   001128  C063  F04A         	movff	___fladd@grs,___fladd@a
  9748   00112C                     
  9749                           ; BSR set to: 0
  9750   00112C  C047  F063         	movff	___fladd@b+1,___fladd@grs
  9751   001130                     
  9752                           ; BSR set to: 0
  9753   001130  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
  9754   001134                     
  9755                           ; BSR set to: 0
  9756   001134  C063  F04B         	movff	___fladd@grs,___fladd@a+1
  9757   001138                     
  9758                           ; BSR set to: 0
  9759   001138  C048  F063         	movff	___fladd@b+2,___fladd@grs
  9760   00113C                     
  9761                           ; BSR set to: 0
  9762   00113C  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
  9763   001140                     
  9764                           ; BSR set to: 0
  9765   001140  C063  F04C         	movff	___fladd@grs,___fladd@a+2
  9766   001144                     
  9767                           ; BSR set to: 0
  9768   001144  C049  F063         	movff	___fladd@b+3,___fladd@grs
  9769   001148                     
  9770                           ; BSR set to: 0
  9771   001148  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
  9772   00114C                     
  9773                           ; BSR set to: 0
  9774   00114C  C063  F04D         	movff	___fladd@grs,___fladd@a+3
  9775   001150                     l5517:
  9776                           
  9777                           ; BSR set to: 0
  9778   001150  0E00               	movlw	0
  9779   001152  6F63               	movwf	___fladd@grs& (0+255),b
  9780   001154                     
  9781                           ; BSR set to: 0
  9782   001154  5162               	movf	___fladd@bexp& (0+255),w,b
  9783   001156  C061  F04E         	movff	___fladd@aexp,??___fladd
  9784   00115A  6A4F               	clrf	(??___fladd+1)^0,c
  9785   00115C  5E4E               	subwf	??___fladd^0,f,c
  9786   00115E  0E00               	movlw	0
  9787   001160  5A4F               	subwfb	(??___fladd+1)^0,f,c
  9788   001162  BE4F               	btfsc	(??___fladd+1)^0,7,c
  9789   001164  EFBD  F008         	goto	u6491
  9790   001168  504F               	movf	(??___fladd+1)^0,w,c
  9791   00116A  E109               	bnz	u6490
  9792   00116C  0E1A               	movlw	26
  9793   00116E  5C4E               	subwf	??___fladd^0,w,c
  9794   001170  A0D8               	btfss	status,0,c
  9795   001172  EFBD  F008         	goto	u6491
  9796   001176  EFBF  F008         	goto	u6490
  9797   00117A                     u6491:
  9798   00117A  EFF6  F008         	goto	l1075
  9799   00117E                     u6490:
  9800   00117E                     
  9801                           ; BSR set to: 0
  9802   00117E  5046               	movf	___fladd@b^0,w,c
  9803   001180  1047               	iorwf	(___fladd@b+1)^0,w,c
  9804   001182  1048               	iorwf	(___fladd@b+2)^0,w,c
  9805   001184  1049               	iorwf	(___fladd@b+3)^0,w,c
  9806   001186  A4D8               	btfss	status,2,c
  9807   001188  EFC8  F008         	goto	u6501
  9808   00118C  EFCB  F008         	goto	u6500
  9809   001190                     u6501:
  9810   001190  0E01               	movlw	1
  9811   001192  EFCC  F008         	goto	u6510
  9812   001196                     u6500:
  9813   001196  0E00               	movlw	0
  9814   001198                     u6510:
  9815   001198  6F63               	movwf	___fladd@grs& (0+255),b
  9816   00119A                     
  9817                           ; BSR set to: 0
  9818   00119A  0E00               	movlw	0
  9819   00119C  6E46               	movwf	___fladd@b^0,c
  9820   00119E  0E00               	movlw	0
  9821   0011A0  6E47               	movwf	(___fladd@b+1)^0,c
  9822   0011A2  0E00               	movlw	0
  9823   0011A4  6E48               	movwf	(___fladd@b+2)^0,c
  9824   0011A6  0E00               	movlw	0
  9825   0011A8  6E49               	movwf	(___fladd@b+3)^0,c
  9826   0011AA                     
  9827                           ; BSR set to: 0
  9828   0011AA  C061  F062         	movff	___fladd@aexp,___fladd@bexp
  9829   0011AE  EFFF  F008         	goto	l1074
  9830   0011B2                     l1076:
  9831                           
  9832                           ; BSR set to: 0
  9833   0011B2  A163               	btfss	___fladd@grs& (0+255),0,b
  9834   0011B4  EFDE  F008         	goto	u6521
  9835   0011B8  EFE0  F008         	goto	u6520
  9836   0011BC                     u6521:
  9837   0011BC  EFE6  F008         	goto	l5529
  9838   0011C0                     u6520:
  9839   0011C0                     
  9840                           ; BSR set to: 0
  9841   0011C0  90D8               	bcf	status,0,c
  9842   0011C2  3163               	rrcf	___fladd@grs& (0+255),w,b
  9843   0011C4  0901               	iorlw	1
  9844   0011C6  6F63               	movwf	___fladd@grs& (0+255),b
  9845   0011C8  EFE8  F008         	goto	l5531
  9846   0011CC                     l5529:
  9847                           
  9848                           ; BSR set to: 0
  9849   0011CC  90D8               	bcf	status,0,c
  9850   0011CE  3363               	rrcf	___fladd@grs& (0+255),f,b
  9851   0011D0                     l5531:
  9852                           
  9853                           ; BSR set to: 0
  9854   0011D0  A046               	btfss	___fladd@b^0,0,c
  9855   0011D2  EFED  F008         	goto	u6531
  9856   0011D6  EFEF  F008         	goto	u6530
  9857   0011DA                     u6531:
  9858   0011DA  EFF0  F008         	goto	l5535
  9859   0011DE                     u6530:
  9860   0011DE                     
  9861                           ; BSR set to: 0
  9862   0011DE  8F63               	bsf	___fladd@grs& (0+255),7,b
  9863   0011E0                     l5535:
  9864                           
  9865                           ; BSR set to: 0
  9866   0011E0  3449               	rlcf	(___fladd@b+3)^0,w,c
  9867   0011E2  3249               	rrcf	(___fladd@b+3)^0,f,c
  9868   0011E4  3248               	rrcf	(___fladd@b+2)^0,f,c
  9869   0011E6  3247               	rrcf	(___fladd@b+1)^0,f,c
  9870   0011E8  3246               	rrcf	___fladd@b^0,f,c
  9871   0011EA                     
  9872                           ; BSR set to: 0
  9873   0011EA  2B62               	incf	___fladd@bexp& (0+255),f,b
  9874   0011EC                     l1075:
  9875                           
  9876                           ; BSR set to: 0
  9877   0011EC  5161               	movf	___fladd@aexp& (0+255),w,b
  9878   0011EE  5D62               	subwf	___fladd@bexp& (0+255),w,b
  9879   0011F0  A0D8               	btfss	status,0,c
  9880   0011F2  EFFD  F008         	goto	u6541
  9881   0011F6  EFFF  F008         	goto	u6540
  9882   0011FA                     u6541:
  9883   0011FA  EFD9  F008         	goto	l1076
  9884   0011FE                     u6540:
  9885   0011FE                     l1074:
  9886                           
  9887                           ; BSR set to: 0
  9888   0011FE  BD60               	btfsc	___fladd@signs& (0+255),6,b
  9889   001200  EF04  F009         	goto	u6551
  9890   001204  EF06  F009         	goto	u6550
  9891   001208                     u6551:
  9892   001208  EF46  F009         	goto	l5563
  9893   00120C                     u6550:
  9894   00120C                     
  9895                           ; BSR set to: 0
  9896   00120C  5162               	movf	___fladd@bexp& (0+255),w,b
  9897   00120E  A4D8               	btfss	status,2,c
  9898   001210  EF0C  F009         	goto	u6561
  9899   001214  EF0E  F009         	goto	u6560
  9900   001218                     u6561:
  9901   001218  EF18  F009         	goto	l5545
  9902   00121C                     u6560:
  9903   00121C                     
  9904                           ; BSR set to: 0
  9905   00121C  0E00               	movlw	0
  9906   00121E  6E46               	movwf	?___fladd^0,c
  9907   001220  0E00               	movlw	0
  9908   001222  6E47               	movwf	(?___fladd+1)^0,c
  9909   001224  0E00               	movlw	0
  9910   001226  6E48               	movwf	(?___fladd+2)^0,c
  9911   001228  0E00               	movlw	0
  9912   00122A  6E49               	movwf	(?___fladd+3)^0,c
  9913   00122C  EF67  F00A         	goto	l1083
  9914   001230                     l5545:
  9915                           
  9916                           ; BSR set to: 0
  9917   001230  504A               	movf	___fladd@a^0,w,c
  9918   001232  2646               	addwf	___fladd@b^0,f,c
  9919   001234  504B               	movf	(___fladd@a+1)^0,w,c
  9920   001236  2247               	addwfc	(___fladd@b+1)^0,f,c
  9921   001238  504C               	movf	(___fladd@a+2)^0,w,c
  9922   00123A  2248               	addwfc	(___fladd@b+2)^0,f,c
  9923   00123C  504D               	movf	(___fladd@a+3)^0,w,c
  9924   00123E  2249               	addwfc	(___fladd@b+3)^0,f,c
  9925   001240                     
  9926                           ; BSR set to: 0
  9927   001240  A049               	btfss	(___fladd@b+3)^0,0,c
  9928   001242  EF25  F009         	goto	u6571
  9929   001246  EF27  F009         	goto	u6570
  9930   00124A                     u6571:
  9931   00124A  EFD3  F009         	goto	l5599
  9932   00124E                     u6570:
  9933   00124E                     
  9934                           ; BSR set to: 0
  9935   00124E  A163               	btfss	___fladd@grs& (0+255),0,b
  9936   001250  EF2C  F009         	goto	u6581
  9937   001254  EF2E  F009         	goto	u6580
  9938   001258                     u6581:
  9939   001258  EF34  F009         	goto	l5553
  9940   00125C                     u6580:
  9941   00125C                     
  9942                           ; BSR set to: 0
  9943   00125C  90D8               	bcf	status,0,c
  9944   00125E  3163               	rrcf	___fladd@grs& (0+255),w,b
  9945   001260  0901               	iorlw	1
  9946   001262  6F63               	movwf	___fladd@grs& (0+255),b
  9947   001264  EF36  F009         	goto	l5555
  9948   001268                     l5553:
  9949                           
  9950                           ; BSR set to: 0
  9951   001268  90D8               	bcf	status,0,c
  9952   00126A  3363               	rrcf	___fladd@grs& (0+255),f,b
  9953   00126C                     l5555:
  9954                           
  9955                           ; BSR set to: 0
  9956   00126C  A046               	btfss	___fladd@b^0,0,c
  9957   00126E  EF3B  F009         	goto	u6591
  9958   001272  EF3D  F009         	goto	u6590
  9959   001276                     u6591:
  9960   001276  EF3E  F009         	goto	l5559
  9961   00127A                     u6590:
  9962   00127A                     
  9963                           ; BSR set to: 0
  9964   00127A  8F63               	bsf	___fladd@grs& (0+255),7,b
  9965   00127C                     l5559:
  9966                           
  9967                           ; BSR set to: 0
  9968   00127C  3449               	rlcf	(___fladd@b+3)^0,w,c
  9969   00127E  3249               	rrcf	(___fladd@b+3)^0,f,c
  9970   001280  3248               	rrcf	(___fladd@b+2)^0,f,c
  9971   001282  3247               	rrcf	(___fladd@b+1)^0,f,c
  9972   001284  3246               	rrcf	___fladd@b^0,f,c
  9973   001286                     
  9974                           ; BSR set to: 0
  9975   001286  2B62               	incf	___fladd@bexp& (0+255),f,b
  9976   001288  EFD3  F009         	goto	l5599
  9977   00128C                     l5563:
  9978                           
  9979                           ; BSR set to: 0
  9980   00128C  504A               	movf	___fladd@a^0,w,c
  9981   00128E  5C46               	subwf	___fladd@b^0,w,c
  9982   001290  504B               	movf	(___fladd@a+1)^0,w,c
  9983   001292  5847               	subwfb	(___fladd@b+1)^0,w,c
  9984   001294  504C               	movf	(___fladd@a+2)^0,w,c
  9985   001296  5848               	subwfb	(___fladd@b+2)^0,w,c
  9986   001298  5049               	movf	(___fladd@b+3)^0,w,c
  9987   00129A  0A80               	xorlw	128
  9988   00129C  6E4E               	movwf	??___fladd^0,c
  9989   00129E  504D               	movf	(___fladd@a+3)^0,w,c
  9990   0012A0  0A80               	xorlw	128
  9991   0012A2  584E               	subwfb	??___fladd^0,w,c
  9992   0012A4  B0D8               	btfsc	status,0,c
  9993   0012A6  EF57  F009         	goto	u6601
  9994   0012AA  EF59  F009         	goto	u6600
  9995   0012AE                     u6601:
  9996   0012AE  EF84  F009         	goto	l5573
  9997   0012B2                     u6600:
  9998   0012B2                     
  9999                           ; BSR set to: 0
 10000   0012B2  5046               	movf	___fladd@b^0,w,c
 10001   0012B4  5C4A               	subwf	___fladd@a^0,w,c
 10002   0012B6  6E4E               	movwf	??___fladd^0,c
 10003   0012B8  5047               	movf	(___fladd@b+1)^0,w,c
 10004   0012BA  584B               	subwfb	(___fladd@a+1)^0,w,c
 10005   0012BC  6E4F               	movwf	(??___fladd+1)^0,c
 10006   0012BE  5048               	movf	(___fladd@b+2)^0,w,c
 10007   0012C0  584C               	subwfb	(___fladd@a+2)^0,w,c
 10008   0012C2  6E50               	movwf	(??___fladd+2)^0,c
 10009   0012C4  5049               	movf	(___fladd@b+3)^0,w,c
 10010   0012C6  584D               	subwfb	(___fladd@a+3)^0,w,c
 10011   0012C8  6E51               	movwf	(??___fladd+3)^0,c
 10012   0012CA  0EFF               	movlw	255
 10013   0012CC  244E               	addwf	??___fladd^0,w,c
 10014   0012CE  6E46               	movwf	___fladd@b^0,c
 10015   0012D0  0EFF               	movlw	255
 10016   0012D2  204F               	addwfc	(??___fladd+1)^0,w,c
 10017   0012D4  6E47               	movwf	(___fladd@b+1)^0,c
 10018   0012D6  0EFF               	movlw	255
 10019   0012D8  2050               	addwfc	(??___fladd+2)^0,w,c
 10020   0012DA  6E48               	movwf	(___fladd@b+2)^0,c
 10021   0012DC  0EFF               	movlw	255
 10022   0012DE  2051               	addwfc	(??___fladd+3)^0,w,c
 10023   0012E0  6E49               	movwf	(___fladd@b+3)^0,c
 10024   0012E2  0E80               	movlw	128
 10025   0012E4  1B60               	xorwf	___fladd@signs& (0+255),f,b
 10026   0012E6                     
 10027                           ; BSR set to: 0
 10028   0012E6  6D63               	negf	___fladd@grs& (0+255),b
 10029   0012E8                     
 10030                           ; BSR set to: 0
 10031   0012E8  5163               	movf	___fladd@grs& (0+255),w,b
 10032   0012EA  A4D8               	btfss	status,2,c
 10033   0012EC  EF7A  F009         	goto	u6611
 10034   0012F0  EF7C  F009         	goto	u6610
 10035   0012F4                     u6611:
 10036   0012F4  EF8C  F009         	goto	l1091
 10037   0012F8                     u6610:
 10038   0012F8                     
 10039                           ; BSR set to: 0
 10040   0012F8  0E01               	movlw	1
 10041   0012FA  2646               	addwf	___fladd@b^0,f,c
 10042   0012FC  0E00               	movlw	0
 10043   0012FE  2247               	addwfc	(___fladd@b+1)^0,f,c
 10044   001300  2248               	addwfc	(___fladd@b+2)^0,f,c
 10045   001302  2249               	addwfc	(___fladd@b+3)^0,f,c
 10046   001304  EF8C  F009         	goto	l1091
 10047   001308                     l5573:
 10048                           
 10049                           ; BSR set to: 0
 10050   001308  504A               	movf	___fladd@a^0,w,c
 10051   00130A  5E46               	subwf	___fladd@b^0,f,c
 10052   00130C  504B               	movf	(___fladd@a+1)^0,w,c
 10053   00130E  5A47               	subwfb	(___fladd@b+1)^0,f,c
 10054   001310  504C               	movf	(___fladd@a+2)^0,w,c
 10055   001312  5A48               	subwfb	(___fladd@b+2)^0,f,c
 10056   001314  504D               	movf	(___fladd@a+3)^0,w,c
 10057   001316  5A49               	subwfb	(___fladd@b+3)^0,f,c
 10058   001318                     l1091:
 10059                           
 10060                           ; BSR set to: 0
 10061   001318  5046               	movf	___fladd@b^0,w,c
 10062   00131A  1047               	iorwf	(___fladd@b+1)^0,w,c
 10063   00131C  1048               	iorwf	(___fladd@b+2)^0,w,c
 10064   00131E  1049               	iorwf	(___fladd@b+3)^0,w,c
 10065   001320  A4D8               	btfss	status,2,c
 10066   001322  EF95  F009         	goto	u6621
 10067   001326  EF97  F009         	goto	u6620
 10068   00132A                     u6621:
 10069   00132A  EFCC  F009         	goto	l5597
 10070   00132E                     u6620:
 10071   00132E                     
 10072                           ; BSR set to: 0
 10073   00132E  5163               	movf	___fladd@grs& (0+255),w,b
 10074   001330  A4D8               	btfss	status,2,c
 10075   001332  EF9D  F009         	goto	u6631
 10076   001336  EF9F  F009         	goto	u6630
 10077   00133A                     u6631:
 10078   00133A  EFCC  F009         	goto	l5597
 10079   00133E                     u6630:
 10080   00133E                     
 10081                           ; BSR set to: 0
 10082   00133E  0E00               	movlw	0
 10083   001340  6E46               	movwf	?___fladd^0,c
 10084   001342  0E00               	movlw	0
 10085   001344  6E47               	movwf	(?___fladd+1)^0,c
 10086   001346  0E00               	movlw	0
 10087   001348  6E48               	movwf	(?___fladd+2)^0,c
 10088   00134A  0E00               	movlw	0
 10089   00134C  6E49               	movwf	(?___fladd+3)^0,c
 10090   00134E  EF67  F00A         	goto	l1083
 10091   001352                     l5581:
 10092                           
 10093                           ; BSR set to: 0
 10094   001352  90D8               	bcf	status,0,c
 10095   001354  3646               	rlcf	___fladd@b^0,f,c
 10096   001356  3647               	rlcf	(___fladd@b+1)^0,f,c
 10097   001358  3648               	rlcf	(___fladd@b+2)^0,f,c
 10098   00135A  3649               	rlcf	(___fladd@b+3)^0,f,c
 10099   00135C                     
 10100                           ; BSR set to: 0
 10101   00135C  AF63               	btfss	___fladd@grs& (0+255),7,b
 10102   00135E  EFB3  F009         	goto	u6641
 10103   001362  EFB5  F009         	goto	u6640
 10104   001366                     u6641:
 10105   001366  EFB6  F009         	goto	l5587
 10106   00136A                     u6640:
 10107   00136A                     
 10108                           ; BSR set to: 0
 10109   00136A  8046               	bsf	___fladd@b^0,0,c
 10110   00136C                     l5587:
 10111                           
 10112                           ; BSR set to: 0
 10113   00136C  A163               	btfss	___fladd@grs& (0+255),0,b
 10114   00136E  EFBB  F009         	goto	u6651
 10115   001372  EFBD  F009         	goto	u6650
 10116   001376                     u6651:
 10117   001376  EFC1  F009         	goto	l5591
 10118   00137A                     u6650:
 10119   00137A                     
 10120                           ; BSR set to: 0
 10121   00137A  80D8               	bsf	status,0,c
 10122   00137C  3763               	rlcf	___fladd@grs& (0+255),f,b
 10123   00137E  EFC3  F009         	goto	l5593
 10124   001382                     l5591:
 10125                           
 10126                           ; BSR set to: 0
 10127   001382  90D8               	bcf	status,0,c
 10128   001384  3763               	rlcf	___fladd@grs& (0+255),f,b
 10129   001386                     l5593:
 10130                           
 10131                           ; BSR set to: 0
 10132   001386  5162               	movf	___fladd@bexp& (0+255),w,b
 10133   001388  B4D8               	btfsc	status,2,c
 10134   00138A  EFC9  F009         	goto	u6661
 10135   00138E  EFCB  F009         	goto	u6660
 10136   001392                     u6661:
 10137   001392  EFCC  F009         	goto	l5597
 10138   001396                     u6660:
 10139   001396                     
 10140                           ; BSR set to: 0
 10141   001396  0762               	decf	___fladd@bexp& (0+255),f,b
 10142   001398                     l5597:
 10143                           
 10144                           ; BSR set to: 0
 10145   001398  AE48               	btfss	(___fladd@b+2)^0,7,c
 10146   00139A  EFD1  F009         	goto	u6671
 10147   00139E  EFD3  F009         	goto	u6670
 10148   0013A2                     u6671:
 10149   0013A2  EFA9  F009         	goto	l5581
 10150   0013A6                     u6670:
 10151   0013A6                     l5599:
 10152                           
 10153                           ; BSR set to: 0
 10154   0013A6  0E00               	movlw	0
 10155   0013A8  6F61               	movwf	___fladd@aexp& (0+255),b
 10156   0013AA                     
 10157                           ; BSR set to: 0
 10158   0013AA  AF63               	btfss	___fladd@grs& (0+255),7,b
 10159   0013AC  EFDA  F009         	goto	u6681
 10160   0013B0  EFDC  F009         	goto	u6680
 10161   0013B4                     u6681:
 10162   0013B4  EFF4  F009         	goto	l1100
 10163   0013B8                     u6680:
 10164   0013B8                     
 10165                           ; BSR set to: 0
 10166   0013B8  C063  F04E         	movff	___fladd@grs,??___fladd
 10167   0013BC  0E7F               	movlw	127
 10168   0013BE  164E               	andwf	??___fladd^0,f,c
 10169   0013C0  B4D8               	btfsc	status,2,c
 10170   0013C2  EFE5  F009         	goto	u6691
 10171   0013C6  EFE7  F009         	goto	u6690
 10172   0013CA                     u6691:
 10173   0013CA  EFEB  F009         	goto	l1101
 10174   0013CE                     u6690:
 10175   0013CE                     l5605:
 10176                           
 10177                           ; BSR set to: 0
 10178   0013CE  0E01               	movlw	1
 10179   0013D0  6F61               	movwf	___fladd@aexp& (0+255),b
 10180   0013D2  EFF4  F009         	goto	l1100
 10181   0013D6                     l1101:
 10182                           
 10183                           ; BSR set to: 0
 10184   0013D6  A046               	btfss	___fladd@b^0,0,c
 10185   0013D8  EFF0  F009         	goto	u6701
 10186   0013DC  EFF2  F009         	goto	u6700
 10187   0013E0                     u6701:
 10188   0013E0  EFF4  F009         	goto	l1100
 10189   0013E4                     u6700:
 10190   0013E4  EFE7  F009         	goto	l5605
 10191   0013E8                     l1100:
 10192                           
 10193                           ; BSR set to: 0
 10194   0013E8  5161               	movf	___fladd@aexp& (0+255),w,b
 10195   0013EA  B4D8               	btfsc	status,2,c
 10196   0013EC  EFFA  F009         	goto	u6711
 10197   0013F0  EFFC  F009         	goto	u6710
 10198   0013F4                     u6711:
 10199   0013F4  EF27  F00A         	goto	l5617
 10200   0013F8                     u6710:
 10201   0013F8                     
 10202                           ; BSR set to: 0
 10203   0013F8  0E01               	movlw	1
 10204   0013FA  2646               	addwf	___fladd@b^0,f,c
 10205   0013FC  0E00               	movlw	0
 10206   0013FE  2247               	addwfc	(___fladd@b+1)^0,f,c
 10207   001400  2248               	addwfc	(___fladd@b+2)^0,f,c
 10208   001402  2249               	addwfc	(___fladd@b+3)^0,f,c
 10209   001404                     
 10210                           ; BSR set to: 0
 10211   001404  A049               	btfss	(___fladd@b+3)^0,0,c
 10212   001406  EF07  F00A         	goto	u6721
 10213   00140A  EF09  F00A         	goto	u6720
 10214   00140E                     u6721:
 10215   00140E  EF27  F00A         	goto	l5617
 10216   001412                     u6720:
 10217   001412                     
 10218                           ; BSR set to: 0
 10219   001412  C046  F04E         	movff	___fladd@b,??___fladd
 10220   001416  C047  F04F         	movff	___fladd@b+1,??___fladd+1
 10221   00141A  C048  F050         	movff	___fladd@b+2,??___fladd+2
 10222   00141E  C049  F051         	movff	___fladd@b+3,??___fladd+3
 10223   001422  3451               	rlcf	(??___fladd+3)^0,w,c
 10224   001424  3251               	rrcf	(??___fladd+3)^0,f,c
 10225   001426  3250               	rrcf	(??___fladd+2)^0,f,c
 10226   001428  324F               	rrcf	(??___fladd+1)^0,f,c
 10227   00142A  324E               	rrcf	??___fladd^0,f,c
 10228   00142C  C04E  F046         	movff	??___fladd,___fladd@b
 10229   001430  C04F  F047         	movff	??___fladd+1,___fladd@b+1
 10230   001434  C050  F048         	movff	??___fladd+2,___fladd@b+2
 10231   001438  C051  F049         	movff	??___fladd+3,___fladd@b+3
 10232   00143C  2962               	incf	___fladd@bexp& (0+255),w,b
 10233   00143E  B4D8               	btfsc	status,2,c
 10234   001440  EF24  F00A         	goto	u6731
 10235   001444  EF26  F00A         	goto	u6730
 10236   001448                     u6731:
 10237   001448  EF27  F00A         	goto	l5617
 10238   00144C                     u6730:
 10239   00144C                     
 10240                           ; BSR set to: 0
 10241   00144C  2B62               	incf	___fladd@bexp& (0+255),f,b
 10242   00144E                     l5617:
 10243                           
 10244                           ; BSR set to: 0
 10245   00144E  2962               	incf	___fladd@bexp& (0+255),w,b
 10246   001450  B4D8               	btfsc	status,2,c
 10247   001452  EF2D  F00A         	goto	u6741
 10248   001456  EF2F  F00A         	goto	u6740
 10249   00145A                     u6741:
 10250   00145A  EF37  F00A         	goto	l5621
 10251   00145E                     u6740:
 10252   00145E                     
 10253                           ; BSR set to: 0
 10254   00145E  5162               	movf	___fladd@bexp& (0+255),w,b
 10255   001460  A4D8               	btfss	status,2,c
 10256   001462  EF35  F00A         	goto	u6751
 10257   001466  EF37  F00A         	goto	u6750
 10258   00146A                     u6751:
 10259   00146A  EF49  F00A         	goto	l5625
 10260   00146E                     u6750:
 10261   00146E                     l5621:
 10262                           
 10263                           ; BSR set to: 0
 10264   00146E  0E00               	movlw	0
 10265   001470  6E46               	movwf	___fladd@b^0,c
 10266   001472  0E00               	movlw	0
 10267   001474  6E47               	movwf	(___fladd@b+1)^0,c
 10268   001476  0E00               	movlw	0
 10269   001478  6E48               	movwf	(___fladd@b+2)^0,c
 10270   00147A  0E00               	movlw	0
 10271   00147C  6E49               	movwf	(___fladd@b+3)^0,c
 10272   00147E  5162               	movf	___fladd@bexp& (0+255),w,b
 10273   001480  A4D8               	btfss	status,2,c
 10274   001482  EF45  F00A         	goto	u6761
 10275   001486  EF47  F00A         	goto	u6760
 10276   00148A                     u6761:
 10277   00148A  EF49  F00A         	goto	l5625
 10278   00148E                     u6760:
 10279   00148E                     
 10280                           ; BSR set to: 0
 10281   00148E  0E00               	movlw	0
 10282   001490  6F60               	movwf	___fladd@signs& (0+255),b
 10283   001492                     l5625:
 10284                           
 10285                           ; BSR set to: 0
 10286   001492  A162               	btfss	___fladd@bexp& (0+255),0,b
 10287   001494  EF4E  F00A         	goto	u6771
 10288   001498  EF50  F00A         	goto	u6770
 10289   00149C                     u6771:
 10290   00149C  EF53  F00A         	goto	l5629
 10291   0014A0                     u6770:
 10292   0014A0                     
 10293                           ; BSR set to: 0
 10294   0014A0  8E48               	bsf	(___fladd@b+2)^0,7,c
 10295   0014A2  EF54  F00A         	goto	l5631
 10296   0014A6                     l5629:
 10297                           
 10298                           ; BSR set to: 0
 10299   0014A6  9E48               	bcf	(___fladd@b+2)^0,7,c
 10300   0014A8                     l5631:
 10301                           
 10302                           ; BSR set to: 0
 10303   0014A8  90D8               	bcf	status,0,c
 10304   0014AA  3162               	rrcf	___fladd@bexp& (0+255),w,b
 10305   0014AC  6E49               	movwf	(___fladd@b+3)^0,c
 10306   0014AE                     
 10307                           ; BSR set to: 0
 10308   0014AE  AF60               	btfss	___fladd@signs& (0+255),7,b
 10309   0014B0  EF5C  F00A         	goto	u6781
 10310   0014B4  EF5E  F00A         	goto	u6780
 10311   0014B8                     u6781:
 10312   0014B8  EF5F  F00A         	goto	l5637
 10313   0014BC                     u6780:
 10314   0014BC                     
 10315                           ; BSR set to: 0
 10316   0014BC  8E49               	bsf	(___fladd@b+3)^0,7,c
 10317   0014BE                     l5637:
 10318                           
 10319                           ; BSR set to: 0
 10320   0014BE  C046  F046         	movff	___fladd@b,?___fladd
 10321   0014C2  C047  F047         	movff	___fladd@b+1,?___fladd+1
 10322   0014C6  C048  F048         	movff	___fladd@b+2,?___fladd+2
 10323   0014CA  C049  F049         	movff	___fladd@b+3,?___fladd+3
 10324   0014CE                     l1083:
 10325                           
 10326                           ; BSR set to: 0
 10327   0014CE  0012               	return		;funcret
 10328   0014D0                     __end_of___fladd:
 10329                           	callstack 0
 10330                           
 10331 ;; *************** function ___flneg *****************
 10332 ;; Defined at:
 10333 ;;		line 15 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flneg.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;  f1              4   32[BANK0 ] unsigned char 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;		None
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  4   32[BANK0 ] unsigned char 
 10340 ;; Registers used:
 10341 ;;		wreg, status,2, status,0
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10351 ;;Total ram usage:        4 bytes
 10352 ;; Hardware stack levels used: 1
 10353 ;; Hardware stack levels required when called: 1
 10354 ;; This function calls:
 10355 ;;		Nothing
 10356 ;; This function is called by:
 10357 ;;		_efgtoa
 10358 ;;		_sinf
 10359 ;;		___rem_pio2f
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           	psect	text36
 10364   004672                     __ptext36:
 10365                           	callstack 0
 10366   004672                     ___flneg:
 10367                           	callstack 24
 10368   004672  0100               	movlb	0	; () banked
 10369   004674  5180               	movf	___flneg@f1& (0+255),w,b
 10370   004676  1181               	iorwf	(___flneg@f1+1)& (0+255),w,b
 10371   004678  1182               	iorwf	(___flneg@f1+2)& (0+255),w,b
 10372   00467A  1183               	iorwf	(___flneg@f1+3)& (0+255),w,b
 10373   00467C  B4D8               	btfsc	status,2,c
 10374   00467E  EF43  F023         	goto	u7421
 10375   004682  EF45  F023         	goto	u7420
 10376   004686                     u7421:
 10377   004686  EF4D  F023         	goto	l6051
 10378   00468A                     u7420:
 10379   00468A                     
 10380                           ; BSR set to: 0
 10381   00468A  0E00               	movlw	0
 10382   00468C  1B80               	xorwf	___flneg@f1& (0+255),f,b
 10383   00468E  0E00               	movlw	0
 10384   004690  1B81               	xorwf	(___flneg@f1+1)& (0+255),f,b
 10385   004692  0E00               	movlw	0
 10386   004694  1B82               	xorwf	(___flneg@f1+2)& (0+255),f,b
 10387   004696  0E80               	movlw	128
 10388   004698  1B83               	xorwf	(___flneg@f1+3)& (0+255),f,b
 10389   00469A                     l6051:
 10390                           
 10391                           ; BSR set to: 0
 10392   00469A  C080  F080         	movff	___flneg@f1,?___flneg
 10393   00469E  C081  F081         	movff	___flneg@f1+1,?___flneg+1
 10394   0046A2  C082  F082         	movff	___flneg@f1+2,?___flneg+2
 10395   0046A6  C083  F083         	movff	___flneg@f1+3,?___flneg+3
 10396   0046AA                     
 10397                           ; BSR set to: 0
 10398   0046AA  0012               	return		;funcret
 10399   0046AC                     __end_of___flneg:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function ___flmul *****************
 10403 ;; Defined at:
 10404 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcmul.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  b               4   19[COMRAM] unsigned char 
 10407 ;;  a               4   23[COMRAM] unsigned char 
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;  prod            4   38[COMRAM] struct .
 10410 ;;  grs             4   33[COMRAM] unsigned long 
 10411 ;;  temp            2   42[COMRAM] struct .
 10412 ;;  bexp            1   37[COMRAM] unsigned char 
 10413 ;;  aexp            1   32[COMRAM] unsigned char 
 10414 ;;  sign            1   31[COMRAM] unsigned char 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  4   19[COMRAM] unsigned char 
 10417 ;; Registers used:
 10418 ;;		wreg, status,2, status,0, prodl, prodh
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10425 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10428 ;;Total ram usage:       25 bytes
 10429 ;; Hardware stack levels used: 1
 10430 ;; Hardware stack levels required when called: 1
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_runDAC
 10435 ;;		_runADC
 10436 ;;		_efgtoa
 10437 ;;		___cosdf
 10438 ;;		___rem_pio2f
 10439 ;;		___sindf
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           	psect	text37
 10444   0014D0                     __ptext37:
 10445                           	callstack 0
 10446   0014D0                     ___flmul:
 10447                           	callstack 24
 10448   0014D0  5017               	movf	(___flmul@b+3)^0,w,c
 10449   0014D2  0B80               	andlw	128
 10450   0014D4  6E20               	movwf	___flmul@sign^0,c
 10451   0014D6  5017               	movf	(___flmul@b+3)^0,w,c
 10452   0014D8  2417               	addwf	(___flmul@b+3)^0,w,c
 10453   0014DA  6E26               	movwf	___flmul@bexp^0,c
 10454   0014DC  AE16               	btfss	(___flmul@b+2)^0,7,c
 10455   0014DE  EF73  F00A         	goto	u7031
 10456   0014E2  EF75  F00A         	goto	u7030
 10457   0014E6                     u7031:
 10458   0014E6  EF76  F00A         	goto	l5799
 10459   0014EA                     u7030:
 10460   0014EA  8026               	bsf	___flmul@bexp^0,0,c
 10461   0014EC                     l5799:
 10462   0014EC  5026               	movf	___flmul@bexp^0,w,c
 10463   0014EE  B4D8               	btfsc	status,2,c
 10464   0014F0  EF7C  F00A         	goto	u7041
 10465   0014F4  EF7E  F00A         	goto	u7040
 10466   0014F8                     u7041:
 10467   0014F8  EF91  F00A         	goto	l5807
 10468   0014FC                     u7040:
 10469   0014FC  2826               	incf	___flmul@bexp^0,w,c
 10470   0014FE  A4D8               	btfss	status,2,c
 10471   001500  EF84  F00A         	goto	u7051
 10472   001504  EF86  F00A         	goto	u7050
 10473   001508                     u7051:
 10474   001508  EF8E  F00A         	goto	l5805
 10475   00150C                     u7050:
 10476   00150C  0E00               	movlw	0
 10477   00150E  6E14               	movwf	___flmul@b^0,c
 10478   001510  0E00               	movlw	0
 10479   001512  6E15               	movwf	(___flmul@b+1)^0,c
 10480   001514  0E00               	movlw	0
 10481   001516  6E16               	movwf	(___flmul@b+2)^0,c
 10482   001518  0E00               	movlw	0
 10483   00151A  6E17               	movwf	(___flmul@b+3)^0,c
 10484   00151C                     l5805:
 10485   00151C  8E16               	bsf	(___flmul@b+2)^0,7,c
 10486   00151E  EF99  F00A         	goto	l5809
 10487   001522                     l5807:
 10488   001522  0E00               	movlw	0
 10489   001524  6E14               	movwf	___flmul@b^0,c
 10490   001526  0E00               	movlw	0
 10491   001528  6E15               	movwf	(___flmul@b+1)^0,c
 10492   00152A  0E00               	movlw	0
 10493   00152C  6E16               	movwf	(___flmul@b+2)^0,c
 10494   00152E  0E00               	movlw	0
 10495   001530  6E17               	movwf	(___flmul@b+3)^0,c
 10496   001532                     l5809:
 10497   001532  501B               	movf	(___flmul@a+3)^0,w,c
 10498   001534  0B80               	andlw	128
 10499   001536  1A20               	xorwf	___flmul@sign^0,f,c
 10500   001538  501B               	movf	(___flmul@a+3)^0,w,c
 10501   00153A  241B               	addwf	(___flmul@a+3)^0,w,c
 10502   00153C  6E21               	movwf	___flmul@aexp^0,c
 10503   00153E  AE1A               	btfss	(___flmul@a+2)^0,7,c
 10504   001540  EFA4  F00A         	goto	u7061
 10505   001544  EFA6  F00A         	goto	u7060
 10506   001548                     u7061:
 10507   001548  EFA7  F00A         	goto	l5817
 10508   00154C                     u7060:
 10509   00154C  8021               	bsf	___flmul@aexp^0,0,c
 10510   00154E                     l5817:
 10511   00154E  5021               	movf	___flmul@aexp^0,w,c
 10512   001550  B4D8               	btfsc	status,2,c
 10513   001552  EFAD  F00A         	goto	u7071
 10514   001556  EFAF  F00A         	goto	u7070
 10515   00155A                     u7071:
 10516   00155A  EFC2  F00A         	goto	l5825
 10517   00155E                     u7070:
 10518   00155E  2821               	incf	___flmul@aexp^0,w,c
 10519   001560  A4D8               	btfss	status,2,c
 10520   001562  EFB5  F00A         	goto	u7081
 10521   001566  EFB7  F00A         	goto	u7080
 10522   00156A                     u7081:
 10523   00156A  EFBF  F00A         	goto	l5823
 10524   00156E                     u7080:
 10525   00156E  0E00               	movlw	0
 10526   001570  6E18               	movwf	___flmul@a^0,c
 10527   001572  0E00               	movlw	0
 10528   001574  6E19               	movwf	(___flmul@a+1)^0,c
 10529   001576  0E00               	movlw	0
 10530   001578  6E1A               	movwf	(___flmul@a+2)^0,c
 10531   00157A  0E00               	movlw	0
 10532   00157C  6E1B               	movwf	(___flmul@a+3)^0,c
 10533   00157E                     l5823:
 10534   00157E  8E1A               	bsf	(___flmul@a+2)^0,7,c
 10535   001580  EFCA  F00A         	goto	l1160
 10536   001584                     l5825:
 10537   001584  0E00               	movlw	0
 10538   001586  6E18               	movwf	___flmul@a^0,c
 10539   001588  0E00               	movlw	0
 10540   00158A  6E19               	movwf	(___flmul@a+1)^0,c
 10541   00158C  0E00               	movlw	0
 10542   00158E  6E1A               	movwf	(___flmul@a+2)^0,c
 10543   001590  0E00               	movlw	0
 10544   001592  6E1B               	movwf	(___flmul@a+3)^0,c
 10545   001594                     l1160:
 10546   001594  5021               	movf	___flmul@aexp^0,w,c
 10547   001596  B4D8               	btfsc	status,2,c
 10548   001598  EFD0  F00A         	goto	u7091
 10549   00159C  EFD2  F00A         	goto	u7090
 10550   0015A0                     u7091:
 10551   0015A0  EFDA  F00A         	goto	l5829
 10552   0015A4                     u7090:
 10553   0015A4  5026               	movf	___flmul@bexp^0,w,c
 10554   0015A6  A4D8               	btfss	status,2,c
 10555   0015A8  EFD8  F00A         	goto	u7101
 10556   0015AC  EFDA  F00A         	goto	u7100
 10557   0015B0                     u7101:
 10558   0015B0  EFE4  F00A         	goto	l5833
 10559   0015B4                     u7100:
 10560   0015B4                     l5829:
 10561   0015B4  0E00               	movlw	0
 10562   0015B6  6E14               	movwf	?___flmul^0,c
 10563   0015B8  0E00               	movlw	0
 10564   0015BA  6E15               	movwf	(?___flmul+1)^0,c
 10565   0015BC  0E00               	movlw	0
 10566   0015BE  6E16               	movwf	(?___flmul+2)^0,c
 10567   0015C0  0E00               	movlw	0
 10568   0015C2  6E17               	movwf	(?___flmul+3)^0,c
 10569   0015C4  EF7C  F00C         	goto	l1164
 10570   0015C8                     l5833:
 10571   0015C8  501A               	movf	(___flmul@a+2)^0,w,c
 10572   0015CA  0214               	mulwf	___flmul@b^0,c
 10573   0015CC  CFF3 F02B          	movff	prodl,___flmul@temp
 10574   0015D0  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10575   0015D4  502B               	movf	___flmul@temp^0,w,c
 10576   0015D6  6E22               	movwf	___flmul@grs^0,c
 10577   0015D8  6A23               	clrf	(___flmul@grs+1)^0,c
 10578   0015DA  6A24               	clrf	(___flmul@grs+2)^0,c
 10579   0015DC  6A25               	clrf	(___flmul@grs+3)^0,c
 10580   0015DE  502C               	movf	(___flmul@temp+1)^0,w,c
 10581   0015E0  6E27               	movwf	___flmul@prod^0,c
 10582   0015E2  6A28               	clrf	(___flmul@prod+1)^0,c
 10583   0015E4  6A29               	clrf	(___flmul@prod+2)^0,c
 10584   0015E6  6A2A               	clrf	(___flmul@prod+3)^0,c
 10585   0015E8  5019               	movf	(___flmul@a+1)^0,w,c
 10586   0015EA  0215               	mulwf	(___flmul@b+1)^0,c
 10587   0015EC  CFF3 F02B          	movff	prodl,___flmul@temp
 10588   0015F0  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10589   0015F4  502B               	movf	___flmul@temp^0,w,c
 10590   0015F6  2622               	addwf	___flmul@grs^0,f,c
 10591   0015F8  0E00               	movlw	0
 10592   0015FA  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10593   0015FC  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10594   0015FE  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10595   001600  502C               	movf	(___flmul@temp+1)^0,w,c
 10596   001602  2627               	addwf	___flmul@prod^0,f,c
 10597   001604  0E00               	movlw	0
 10598   001606  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10599   001608  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10600   00160A  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10601   00160C  5018               	movf	___flmul@a^0,w,c
 10602   00160E  0216               	mulwf	(___flmul@b+2)^0,c
 10603   001610  CFF3 F02B          	movff	prodl,___flmul@temp
 10604   001614  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10605   001618  502B               	movf	___flmul@temp^0,w,c
 10606   00161A  2622               	addwf	___flmul@grs^0,f,c
 10607   00161C  0E00               	movlw	0
 10608   00161E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10609   001620  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10610   001622  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10611   001624  502C               	movf	(___flmul@temp+1)^0,w,c
 10612   001626  2627               	addwf	___flmul@prod^0,f,c
 10613   001628  0E00               	movlw	0
 10614   00162A  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10615   00162C  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10616   00162E  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10617   001630  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10618   001634  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10619   001638  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10620   00163C  6A22               	clrf	___flmul@grs^0,c
 10621   00163E  5018               	movf	___flmul@a^0,w,c
 10622   001640  0215               	mulwf	(___flmul@b+1)^0,c
 10623   001642  CFF3 F02B          	movff	prodl,___flmul@temp
 10624   001646  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10625   00164A  502B               	movf	___flmul@temp^0,w,c
 10626   00164C  2622               	addwf	___flmul@grs^0,f,c
 10627   00164E  502C               	movf	(___flmul@temp+1)^0,w,c
 10628   001650  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10629   001652  0E00               	movlw	0
 10630   001654  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10631   001656  0E00               	movlw	0
 10632   001658  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10633   00165A  5019               	movf	(___flmul@a+1)^0,w,c
 10634   00165C  0214               	mulwf	___flmul@b^0,c
 10635   00165E  CFF3 F02B          	movff	prodl,___flmul@temp
 10636   001662  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10637   001666  502B               	movf	___flmul@temp^0,w,c
 10638   001668  2622               	addwf	___flmul@grs^0,f,c
 10639   00166A  502C               	movf	(___flmul@temp+1)^0,w,c
 10640   00166C  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10641   00166E  0E00               	movlw	0
 10642   001670  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10643   001672  0E00               	movlw	0
 10644   001674  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10645   001676  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10646   00167A  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10647   00167E  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10648   001682  6A22               	clrf	___flmul@grs^0,c
 10649   001684  5018               	movf	___flmul@a^0,w,c
 10650   001686  0214               	mulwf	___flmul@b^0,c
 10651   001688  CFF3 F02B          	movff	prodl,___flmul@temp
 10652   00168C  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10653   001690  502B               	movf	___flmul@temp^0,w,c
 10654   001692  2622               	addwf	___flmul@grs^0,f,c
 10655   001694  502C               	movf	(___flmul@temp+1)^0,w,c
 10656   001696  2223               	addwfc	(___flmul@grs+1)^0,f,c
 10657   001698  0E00               	movlw	0
 10658   00169A  2224               	addwfc	(___flmul@grs+2)^0,f,c
 10659   00169C  0E00               	movlw	0
 10660   00169E  2225               	addwfc	(___flmul@grs+3)^0,f,c
 10661   0016A0  501A               	movf	(___flmul@a+2)^0,w,c
 10662   0016A2  0215               	mulwf	(___flmul@b+1)^0,c
 10663   0016A4  CFF3 F02B          	movff	prodl,___flmul@temp
 10664   0016A8  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10665   0016AC  502B               	movf	___flmul@temp^0,w,c
 10666   0016AE  2627               	addwf	___flmul@prod^0,f,c
 10667   0016B0  502C               	movf	(___flmul@temp+1)^0,w,c
 10668   0016B2  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10669   0016B4  0E00               	movlw	0
 10670   0016B6  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10671   0016B8  0E00               	movlw	0
 10672   0016BA  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10673   0016BC  5019               	movf	(___flmul@a+1)^0,w,c
 10674   0016BE  0216               	mulwf	(___flmul@b+2)^0,c
 10675   0016C0  CFF3 F02B          	movff	prodl,___flmul@temp
 10676   0016C4  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10677   0016C8  502B               	movf	___flmul@temp^0,w,c
 10678   0016CA  2627               	addwf	___flmul@prod^0,f,c
 10679   0016CC  502C               	movf	(___flmul@temp+1)^0,w,c
 10680   0016CE  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10681   0016D0  0E00               	movlw	0
 10682   0016D2  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10683   0016D4  0E00               	movlw	0
 10684   0016D6  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10685   0016D8  501A               	movf	(___flmul@a+2)^0,w,c
 10686   0016DA  0216               	mulwf	(___flmul@b+2)^0,c
 10687   0016DC  CFF3 F02B          	movff	prodl,___flmul@temp
 10688   0016E0  CFF4 F02C          	movff	prodh,___flmul@temp+1
 10689   0016E4  502B               	movf	___flmul@temp^0,w,c
 10690   0016E6  6E1C               	movwf	??___flmul^0,c
 10691   0016E8  502C               	movf	(___flmul@temp+1)^0,w,c
 10692   0016EA  6E1D               	movwf	(??___flmul+1)^0,c
 10693   0016EC  6A1E               	clrf	(??___flmul+2)^0,c
 10694   0016EE  6A1F               	clrf	(??___flmul+3)^0,c
 10695   0016F0  C01E  F01F         	movff	??___flmul+2,??___flmul+3
 10696   0016F4  C01D  F01E         	movff	??___flmul+1,??___flmul+2
 10697   0016F8  C01C  F01D         	movff	??___flmul,??___flmul+1
 10698   0016FC  6A1C               	clrf	??___flmul^0,c
 10699   0016FE  501C               	movf	??___flmul^0,w,c
 10700   001700  2627               	addwf	___flmul@prod^0,f,c
 10701   001702  501D               	movf	(??___flmul+1)^0,w,c
 10702   001704  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10703   001706  501E               	movf	(??___flmul+2)^0,w,c
 10704   001708  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10705   00170A  501F               	movf	(??___flmul+3)^0,w,c
 10706   00170C  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10707   00170E  C022  F01C         	movff	___flmul@grs,??___flmul
 10708   001712  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
 10709   001716  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
 10710   00171A  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
 10711   00171E  0E19               	movlw	25
 10712   001720  EF97  F00B         	goto	u7110
 10713   001724                     u7115:
 10714   001724  90D8               	bcf	status,0,c
 10715   001726  321F               	rrcf	(??___flmul+3)^0,f,c
 10716   001728  321E               	rrcf	(??___flmul+2)^0,f,c
 10717   00172A  321D               	rrcf	(??___flmul+1)^0,f,c
 10718   00172C  321C               	rrcf	??___flmul^0,f,c
 10719   00172E                     u7110:
 10720   00172E  2EE8               	decfsz	wreg,f,c
 10721   001730  EF92  F00B         	goto	u7115
 10722   001734  501C               	movf	??___flmul^0,w,c
 10723   001736  2627               	addwf	___flmul@prod^0,f,c
 10724   001738  501D               	movf	(??___flmul+1)^0,w,c
 10725   00173A  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10726   00173C  501E               	movf	(??___flmul+2)^0,w,c
 10727   00173E  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10728   001740  501F               	movf	(??___flmul+3)^0,w,c
 10729   001742  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10730   001744  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 10731   001748  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 10732   00174C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 10733   001750  6A22               	clrf	___flmul@grs^0,c
 10734   001752  5021               	movf	___flmul@aexp^0,w,c
 10735   001754  C026  F01C         	movff	___flmul@bexp,??___flmul
 10736   001758  6A1D               	clrf	(??___flmul+1)^0,c
 10737   00175A  261C               	addwf	??___flmul^0,f,c
 10738   00175C  0E00               	movlw	0
 10739   00175E  221D               	addwfc	(??___flmul+1)^0,f,c
 10740   001760  0E82               	movlw	130
 10741   001762  241C               	addwf	??___flmul^0,w,c
 10742   001764  6E2B               	movwf	___flmul@temp^0,c
 10743   001766  0EFF               	movlw	255
 10744   001768  201D               	addwfc	(??___flmul+1)^0,w,c
 10745   00176A  6E2C               	movwf	(___flmul@temp+1)^0,c
 10746   00176C  EFCD  F00B         	goto	l5881
 10747   001770                     l5875:
 10748   001770  90D8               	bcf	status,0,c
 10749   001772  3627               	rlcf	___flmul@prod^0,f,c
 10750   001774  3628               	rlcf	(___flmul@prod+1)^0,f,c
 10751   001776  3629               	rlcf	(___flmul@prod+2)^0,f,c
 10752   001778  362A               	rlcf	(___flmul@prod+3)^0,f,c
 10753   00177A  AE25               	btfss	(___flmul@grs+3)^0,7,c
 10754   00177C  EFC2  F00B         	goto	u7121
 10755   001780  EFC4  F00B         	goto	u7120
 10756   001784                     u7121:
 10757   001784  EFC5  F00B         	goto	l1167
 10758   001788                     u7120:
 10759   001788  8027               	bsf	___flmul@prod^0,0,c
 10760   00178A                     l1167:
 10761   00178A  90D8               	bcf	status,0,c
 10762   00178C  3622               	rlcf	___flmul@grs^0,f,c
 10763   00178E  3623               	rlcf	(___flmul@grs+1)^0,f,c
 10764   001790  3624               	rlcf	(___flmul@grs+2)^0,f,c
 10765   001792  3625               	rlcf	(___flmul@grs+3)^0,f,c
 10766   001794  062B               	decf	___flmul@temp^0,f,c
 10767   001796  A0D8               	btfss	status,0,c
 10768   001798  062C               	decf	(___flmul@temp+1)^0,f,c
 10769   00179A                     l5881:
 10770   00179A  AE29               	btfss	(___flmul@prod+2)^0,7,c
 10771   00179C  EFD2  F00B         	goto	u7131
 10772   0017A0  EFD4  F00B         	goto	u7130
 10773   0017A4                     u7131:
 10774   0017A4  EFB8  F00B         	goto	l5875
 10775   0017A8                     u7130:
 10776   0017A8  0E00               	movlw	0
 10777   0017AA  6E21               	movwf	___flmul@aexp^0,c
 10778   0017AC  AE25               	btfss	(___flmul@grs+3)^0,7,c
 10779   0017AE  EFDB  F00B         	goto	u7141
 10780   0017B2  EFDD  F00B         	goto	u7140
 10781   0017B6                     u7141:
 10782   0017B6  EF01  F00C         	goto	l1169
 10783   0017BA                     u7140:
 10784   0017BA  0EFF               	movlw	255
 10785   0017BC  1422               	andwf	___flmul@grs^0,w,c
 10786   0017BE  6E1C               	movwf	??___flmul^0,c
 10787   0017C0  0EFF               	movlw	255
 10788   0017C2  1423               	andwf	(___flmul@grs+1)^0,w,c
 10789   0017C4  6E1D               	movwf	(??___flmul+1)^0,c
 10790   0017C6  0EFF               	movlw	255
 10791   0017C8  1424               	andwf	(___flmul@grs+2)^0,w,c
 10792   0017CA  6E1E               	movwf	(??___flmul+2)^0,c
 10793   0017CC  0E7F               	movlw	127
 10794   0017CE  1425               	andwf	(___flmul@grs+3)^0,w,c
 10795   0017D0  6E1F               	movwf	(??___flmul+3)^0,c
 10796   0017D2  501C               	movf	??___flmul^0,w,c
 10797   0017D4  101D               	iorwf	(??___flmul+1)^0,w,c
 10798   0017D6  101E               	iorwf	(??___flmul+2)^0,w,c
 10799   0017D8  101F               	iorwf	(??___flmul+3)^0,w,c
 10800   0017DA  B4D8               	btfsc	status,2,c
 10801   0017DC  EFF2  F00B         	goto	u7151
 10802   0017E0  EFF4  F00B         	goto	u7150
 10803   0017E4                     u7151:
 10804   0017E4  EFF8  F00B         	goto	l1170
 10805   0017E8                     u7150:
 10806   0017E8                     l5889:
 10807   0017E8  0E01               	movlw	1
 10808   0017EA  6E21               	movwf	___flmul@aexp^0,c
 10809   0017EC  EF01  F00C         	goto	l1169
 10810   0017F0                     l1170:
 10811   0017F0  A027               	btfss	___flmul@prod^0,0,c
 10812   0017F2  EFFD  F00B         	goto	u7161
 10813   0017F6  EFFF  F00B         	goto	u7160
 10814   0017FA                     u7161:
 10815   0017FA  EF01  F00C         	goto	l1169
 10816   0017FE                     u7160:
 10817   0017FE  EFF4  F00B         	goto	l5889
 10818   001802                     l1169:
 10819   001802  5021               	movf	___flmul@aexp^0,w,c
 10820   001804  B4D8               	btfsc	status,2,c
 10821   001806  EF07  F00C         	goto	u7171
 10822   00180A  EF09  F00C         	goto	u7170
 10823   00180E                     u7171:
 10824   00180E  EF2D  F00C         	goto	l5901
 10825   001812                     u7170:
 10826   001812  0E01               	movlw	1
 10827   001814  2627               	addwf	___flmul@prod^0,f,c
 10828   001816  0E00               	movlw	0
 10829   001818  2228               	addwfc	(___flmul@prod+1)^0,f,c
 10830   00181A  2229               	addwfc	(___flmul@prod+2)^0,f,c
 10831   00181C  222A               	addwfc	(___flmul@prod+3)^0,f,c
 10832   00181E  A02A               	btfss	(___flmul@prod+3)^0,0,c
 10833   001820  EF14  F00C         	goto	u7181
 10834   001824  EF16  F00C         	goto	u7180
 10835   001828                     u7181:
 10836   001828  EF2D  F00C         	goto	l5901
 10837   00182C                     u7180:
 10838   00182C  C027  F01C         	movff	___flmul@prod,??___flmul
 10839   001830  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
 10840   001834  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
 10841   001838  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
 10842   00183C  341F               	rlcf	(??___flmul+3)^0,w,c
 10843   00183E  321F               	rrcf	(??___flmul+3)^0,f,c
 10844   001840  321E               	rrcf	(??___flmul+2)^0,f,c
 10845   001842  321D               	rrcf	(??___flmul+1)^0,f,c
 10846   001844  321C               	rrcf	??___flmul^0,f,c
 10847   001846  C01C  F027         	movff	??___flmul,___flmul@prod
 10848   00184A  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
 10849   00184E  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
 10850   001852  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
 10851   001856  4A2B               	infsnz	___flmul@temp^0,f,c
 10852   001858  2A2C               	incf	(___flmul@temp+1)^0,f,c
 10853   00185A                     l5901:
 10854   00185A  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 10855   00185C  EF38  F00C         	goto	u7191
 10856   001860  502C               	movf	(___flmul@temp+1)^0,w,c
 10857   001862  E108               	bnz	u7190
 10858   001864  282B               	incf	___flmul@temp^0,w,c
 10859   001866  A0D8               	btfss	status,0,c
 10860   001868  EF38  F00C         	goto	u7191
 10861   00186C  EF3A  F00C         	goto	u7190
 10862   001870                     u7191:
 10863   001870  EF44  F00C         	goto	l5905
 10864   001874                     u7190:
 10865   001874  0E00               	movlw	0
 10866   001876  6E27               	movwf	___flmul@prod^0,c
 10867   001878  0E00               	movlw	0
 10868   00187A  6E28               	movwf	(___flmul@prod+1)^0,c
 10869   00187C  0E80               	movlw	128
 10870   00187E  6E29               	movwf	(___flmul@prod+2)^0,c
 10871   001880  0E7F               	movlw	127
 10872   001882  6E2A               	movwf	(___flmul@prod+3)^0,c
 10873   001884  EF72  F00C         	goto	l5917
 10874   001888                     l5905:
 10875   001888  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
 10876   00188A  EF51  F00C         	goto	u7200
 10877   00188E  502C               	movf	(___flmul@temp+1)^0,w,c
 10878   001890  E106               	bnz	u7201
 10879   001892  042B               	decf	___flmul@temp^0,w,c
 10880   001894  B0D8               	btfsc	status,0,c
 10881   001896  EF4F  F00C         	goto	u7201
 10882   00189A  EF51  F00C         	goto	u7200
 10883   00189E                     u7201:
 10884   00189E  EF5D  F00C         	goto	l1177
 10885   0018A2                     u7200:
 10886   0018A2  0E00               	movlw	0
 10887   0018A4  6E27               	movwf	___flmul@prod^0,c
 10888   0018A6  0E00               	movlw	0
 10889   0018A8  6E28               	movwf	(___flmul@prod+1)^0,c
 10890   0018AA  0E00               	movlw	0
 10891   0018AC  6E29               	movwf	(___flmul@prod+2)^0,c
 10892   0018AE  0E00               	movlw	0
 10893   0018B0  6E2A               	movwf	(___flmul@prod+3)^0,c
 10894   0018B2  0E00               	movlw	0
 10895   0018B4  6E20               	movwf	___flmul@sign^0,c
 10896   0018B6  EF72  F00C         	goto	l5917
 10897   0018BA                     l1177:
 10898   0018BA  C02B  F026         	movff	___flmul@temp,___flmul@bexp
 10899   0018BE  0EFF               	movlw	255
 10900   0018C0  1627               	andwf	___flmul@prod^0,f,c
 10901   0018C2  0EFF               	movlw	255
 10902   0018C4  1628               	andwf	(___flmul@prod+1)^0,f,c
 10903   0018C6  0E7F               	movlw	127
 10904   0018C8  1629               	andwf	(___flmul@prod+2)^0,f,c
 10905   0018CA  0E00               	movlw	0
 10906   0018CC  162A               	andwf	(___flmul@prod+3)^0,f,c
 10907   0018CE  A026               	btfss	___flmul@bexp^0,0,c
 10908   0018D0  EF6C  F00C         	goto	u7211
 10909   0018D4  EF6E  F00C         	goto	u7210
 10910   0018D8                     u7211:
 10911   0018D8  EF6F  F00C         	goto	l5915
 10912   0018DC                     u7210:
 10913   0018DC  8E29               	bsf	(___flmul@prod+2)^0,7,c
 10914   0018DE                     l5915:
 10915   0018DE  90D8               	bcf	status,0,c
 10916   0018E0  3026               	rrcf	___flmul@bexp^0,w,c
 10917   0018E2  6E2A               	movwf	(___flmul@prod+3)^0,c
 10918   0018E4                     l5917:
 10919   0018E4  5020               	movf	___flmul@sign^0,w,c
 10920   0018E6  122A               	iorwf	(___flmul@prod+3)^0,f,c
 10921   0018E8  C027  F014         	movff	___flmul@prod,?___flmul
 10922   0018EC  C028  F015         	movff	___flmul@prod+1,?___flmul+1
 10923   0018F0  C029  F016         	movff	___flmul@prod+2,?___flmul+2
 10924   0018F4  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
 10925   0018F8                     l1164:
 10926   0018F8  0012               	return		;funcret
 10927   0018FA                     __end_of___flmul:
 10928                           	callstack 0
 10929                           
 10930 ;; *************** function ___flge *****************
 10931 ;; Defined at:
 10932 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\flge.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  ff1             4   44[COMRAM] unsigned char 
 10935 ;;  ff2             4   48[COMRAM] unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;		None               void
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10949 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10950 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10951 ;;Total ram usage:       12 bytes
 10952 ;; Hardware stack levels used: 1
 10953 ;; Hardware stack levels required when called: 1
 10954 ;; This function calls:
 10955 ;;		Nothing
 10956 ;; This function is called by:
 10957 ;;		_efgtoa
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           	psect	text38
 10962   003BA4                     __ptext38:
 10963                           	callstack 0
 10964   003BA4                     ___flge:
 10965                           	callstack 24
 10966   003BA4  0E00               	movlw	0
 10967   003BA6  142D               	andwf	___flge@ff1^0,w,c
 10968   003BA8  6E35               	movwf	??___flge^0,c
 10969   003BAA  0E00               	movlw	0
 10970   003BAC  142E               	andwf	(___flge@ff1+1)^0,w,c
 10971   003BAE  6E36               	movwf	(??___flge+1)^0,c
 10972   003BB0  0E80               	movlw	128
 10973   003BB2  142F               	andwf	(___flge@ff1+2)^0,w,c
 10974   003BB4  6E37               	movwf	(??___flge+2)^0,c
 10975   003BB6  0E7F               	movlw	127
 10976   003BB8  1430               	andwf	(___flge@ff1+3)^0,w,c
 10977   003BBA  6E38               	movwf	(??___flge+3)^0,c
 10978   003BBC  5035               	movf	??___flge^0,w,c
 10979   003BBE  1036               	iorwf	(??___flge+1)^0,w,c
 10980   003BC0  1037               	iorwf	(??___flge+2)^0,w,c
 10981   003BC2  1038               	iorwf	(??___flge+3)^0,w,c
 10982   003BC4  A4D8               	btfss	status,2,c
 10983   003BC6  EFE7  F01D         	goto	u7371
 10984   003BCA  EFE9  F01D         	goto	u7370
 10985   003BCE                     u7371:
 10986   003BCE  EFF1  F01D         	goto	l6029
 10987   003BD2                     u7370:
 10988   003BD2  0E00               	movlw	0
 10989   003BD4  6E2D               	movwf	___flge@ff1^0,c
 10990   003BD6  0E00               	movlw	0
 10991   003BD8  6E2E               	movwf	(___flge@ff1+1)^0,c
 10992   003BDA  0E00               	movlw	0
 10993   003BDC  6E2F               	movwf	(___flge@ff1+2)^0,c
 10994   003BDE  0E00               	movlw	0
 10995   003BE0  6E30               	movwf	(___flge@ff1+3)^0,c
 10996   003BE2                     l6029:
 10997   003BE2  0E00               	movlw	0
 10998   003BE4  1431               	andwf	___flge@ff2^0,w,c
 10999   003BE6  6E35               	movwf	??___flge^0,c
 11000   003BE8  0E00               	movlw	0
 11001   003BEA  1432               	andwf	(___flge@ff2+1)^0,w,c
 11002   003BEC  6E36               	movwf	(??___flge+1)^0,c
 11003   003BEE  0E80               	movlw	128
 11004   003BF0  1433               	andwf	(___flge@ff2+2)^0,w,c
 11005   003BF2  6E37               	movwf	(??___flge+2)^0,c
 11006   003BF4  0E7F               	movlw	127
 11007   003BF6  1434               	andwf	(___flge@ff2+3)^0,w,c
 11008   003BF8  6E38               	movwf	(??___flge+3)^0,c
 11009   003BFA  5035               	movf	??___flge^0,w,c
 11010   003BFC  1036               	iorwf	(??___flge+1)^0,w,c
 11011   003BFE  1037               	iorwf	(??___flge+2)^0,w,c
 11012   003C00  1038               	iorwf	(??___flge+3)^0,w,c
 11013   003C02  A4D8               	btfss	status,2,c
 11014   003C04  EF06  F01E         	goto	u7381
 11015   003C08  EF08  F01E         	goto	u7380
 11016   003C0C                     u7381:
 11017   003C0C  EF10  F01E         	goto	l6033
 11018   003C10                     u7380:
 11019   003C10  0E00               	movlw	0
 11020   003C12  6E31               	movwf	___flge@ff2^0,c
 11021   003C14  0E00               	movlw	0
 11022   003C16  6E32               	movwf	(___flge@ff2+1)^0,c
 11023   003C18  0E00               	movlw	0
 11024   003C1A  6E33               	movwf	(___flge@ff2+2)^0,c
 11025   003C1C  0E00               	movlw	0
 11026   003C1E  6E34               	movwf	(___flge@ff2+3)^0,c
 11027   003C20                     l6033:
 11028   003C20  AE30               	btfss	(___flge@ff1+3)^0,7,c
 11029   003C22  EF15  F01E         	goto	u7391
 11030   003C26  EF17  F01E         	goto	u7390
 11031   003C2A                     u7391:
 11032   003C2A  EF20  F01E         	goto	l6037
 11033   003C2E                     u7390:
 11034   003C2E  6C2D               	negf	___flge@ff1^0,c
 11035   003C30  1E2E               	comf	(___flge@ff1+1)^0,f,c
 11036   003C32  B0D8               	btfsc	status,0,c
 11037   003C34  2A2E               	incf	(___flge@ff1+1)^0,f,c
 11038   003C36  1E2F               	comf	(___flge@ff1+2)^0,f,c
 11039   003C38  B0D8               	btfsc	status,0,c
 11040   003C3A  2A2F               	incf	(___flge@ff1+2)^0,f,c
 11041   003C3C  0E80               	movlw	128
 11042   003C3E  5630               	subfwb	(___flge@ff1+3)^0,f,c
 11043   003C40                     l6037:
 11044   003C40  AE34               	btfss	(___flge@ff2+3)^0,7,c
 11045   003C42  EF25  F01E         	goto	u7401
 11046   003C46  EF27  F01E         	goto	u7400
 11047   003C4A                     u7401:
 11048   003C4A  EF30  F01E         	goto	l811
 11049   003C4E                     u7400:
 11050   003C4E  6C31               	negf	___flge@ff2^0,c
 11051   003C50  1E32               	comf	(___flge@ff2+1)^0,f,c
 11052   003C52  B0D8               	btfsc	status,0,c
 11053   003C54  2A32               	incf	(___flge@ff2+1)^0,f,c
 11054   003C56  1E33               	comf	(___flge@ff2+2)^0,f,c
 11055   003C58  B0D8               	btfsc	status,0,c
 11056   003C5A  2A33               	incf	(___flge@ff2+2)^0,f,c
 11057   003C5C  0E80               	movlw	128
 11058   003C5E  5634               	subfwb	(___flge@ff2+3)^0,f,c
 11059   003C60                     l811:
 11060   003C60  0E00               	movlw	0
 11061   003C62  1A2D               	xorwf	___flge@ff1^0,f,c
 11062   003C64  0E00               	movlw	0
 11063   003C66  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
 11064   003C68  0E00               	movlw	0
 11065   003C6A  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
 11066   003C6C  0E80               	movlw	128
 11067   003C6E  1A30               	xorwf	(___flge@ff1+3)^0,f,c
 11068   003C70  0E00               	movlw	0
 11069   003C72  1A31               	xorwf	___flge@ff2^0,f,c
 11070   003C74  0E00               	movlw	0
 11071   003C76  1A32               	xorwf	(___flge@ff2+1)^0,f,c
 11072   003C78  0E00               	movlw	0
 11073   003C7A  1A33               	xorwf	(___flge@ff2+2)^0,f,c
 11074   003C7C  0E80               	movlw	128
 11075   003C7E  1A34               	xorwf	(___flge@ff2+3)^0,f,c
 11076   003C80  5031               	movf	___flge@ff2^0,w,c
 11077   003C82  5C2D               	subwf	___flge@ff1^0,w,c
 11078   003C84  5032               	movf	(___flge@ff2+1)^0,w,c
 11079   003C86  582E               	subwfb	(___flge@ff1+1)^0,w,c
 11080   003C88  5033               	movf	(___flge@ff2+2)^0,w,c
 11081   003C8A  582F               	subwfb	(___flge@ff1+2)^0,w,c
 11082   003C8C  5034               	movf	(___flge@ff2+3)^0,w,c
 11083   003C8E  5830               	subwfb	(___flge@ff1+3)^0,w,c
 11084   003C90  B0D8               	btfsc	status,0,c
 11085   003C92  EF4D  F01E         	goto	u7411
 11086   003C96  EF4F  F01E         	goto	u7410
 11087   003C9A                     u7411:
 11088   003C9A  EF52  F01E         	goto	l6043
 11089   003C9E                     u7410:
 11090   003C9E  90D8               	bcf	status,0,c
 11091   003CA0  EF53  F01E         	goto	l816
 11092   003CA4                     l6043:
 11093   003CA4  80D8               	bsf	status,0,c
 11094   003CA6                     l816:
 11095   003CA6  0012               	return		;funcret
 11096   003CA8                     __end_of___flge:
 11097                           	callstack 0
 11098                           
 11099 ;; *************** function ___fleq *****************
 11100 ;; Defined at:
 11101 ;;		line 4 in file "D:\MPLABX\Compiler\pic\sources\c99\common\fleq.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;  ff1             4    5[COMRAM] unsigned char 
 11104 ;;  ff2             4    9[COMRAM] unsigned char 
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;		None               void
 11109 ;; Registers used:
 11110 ;;		wreg, status,2, status,0
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11116 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;Total ram usage:       12 bytes
 11121 ;; Hardware stack levels used: 1
 11122 ;; Hardware stack levels required when called: 1
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_efgtoa
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           	psect	text39
 11131   0042E2                     __ptext39:
 11132                           	callstack 0
 11133   0042E2                     ___fleq:
 11134                           	callstack 24
 11135   0042E2  0E00               	movlw	0
 11136   0042E4  1406               	andwf	___fleq@ff1^0,w,c
 11137   0042E6  6E0E               	movwf	??___fleq^0,c
 11138   0042E8  0E00               	movlw	0
 11139   0042EA  1407               	andwf	(___fleq@ff1+1)^0,w,c
 11140   0042EC  6E0F               	movwf	(??___fleq+1)^0,c
 11141   0042EE  0E80               	movlw	128
 11142   0042F0  1408               	andwf	(___fleq@ff1+2)^0,w,c
 11143   0042F2  6E10               	movwf	(??___fleq+2)^0,c
 11144   0042F4  0E7F               	movlw	127
 11145   0042F6  1409               	andwf	(___fleq@ff1+3)^0,w,c
 11146   0042F8  6E11               	movwf	(??___fleq+3)^0,c
 11147   0042FA  500E               	movf	??___fleq^0,w,c
 11148   0042FC  100F               	iorwf	(??___fleq+1)^0,w,c
 11149   0042FE  1010               	iorwf	(??___fleq+2)^0,w,c
 11150   004300  1011               	iorwf	(??___fleq+3)^0,w,c
 11151   004302  A4D8               	btfss	status,2,c
 11152   004304  EF86  F021         	goto	u7341
 11153   004308  EF88  F021         	goto	u7340
 11154   00430C                     u7341:
 11155   00430C  EF90  F021         	goto	l6013
 11156   004310                     u7340:
 11157   004310  0E00               	movlw	0
 11158   004312  6E06               	movwf	___fleq@ff1^0,c
 11159   004314  0E00               	movlw	0
 11160   004316  6E07               	movwf	(___fleq@ff1+1)^0,c
 11161   004318  0E00               	movlw	0
 11162   00431A  6E08               	movwf	(___fleq@ff1+2)^0,c
 11163   00431C  0E00               	movlw	0
 11164   00431E  6E09               	movwf	(___fleq@ff1+3)^0,c
 11165   004320                     l6013:
 11166   004320  0E00               	movlw	0
 11167   004322  140A               	andwf	___fleq@ff2^0,w,c
 11168   004324  6E0E               	movwf	??___fleq^0,c
 11169   004326  0E00               	movlw	0
 11170   004328  140B               	andwf	(___fleq@ff2+1)^0,w,c
 11171   00432A  6E0F               	movwf	(??___fleq+1)^0,c
 11172   00432C  0E80               	movlw	128
 11173   00432E  140C               	andwf	(___fleq@ff2+2)^0,w,c
 11174   004330  6E10               	movwf	(??___fleq+2)^0,c
 11175   004332  0E7F               	movlw	127
 11176   004334  140D               	andwf	(___fleq@ff2+3)^0,w,c
 11177   004336  6E11               	movwf	(??___fleq+3)^0,c
 11178   004338  500E               	movf	??___fleq^0,w,c
 11179   00433A  100F               	iorwf	(??___fleq+1)^0,w,c
 11180   00433C  1010               	iorwf	(??___fleq+2)^0,w,c
 11181   00433E  1011               	iorwf	(??___fleq+3)^0,w,c
 11182   004340  A4D8               	btfss	status,2,c
 11183   004342  EFA5  F021         	goto	u7351
 11184   004346  EFA7  F021         	goto	u7350
 11185   00434A                     u7351:
 11186   00434A  EFAF  F021         	goto	l6017
 11187   00434E                     u7350:
 11188   00434E  0E00               	movlw	0
 11189   004350  6E0A               	movwf	___fleq@ff2^0,c
 11190   004352  0E00               	movlw	0
 11191   004354  6E0B               	movwf	(___fleq@ff2+1)^0,c
 11192   004356  0E00               	movlw	0
 11193   004358  6E0C               	movwf	(___fleq@ff2+2)^0,c
 11194   00435A  0E00               	movlw	0
 11195   00435C  6E0D               	movwf	(___fleq@ff2+3)^0,c
 11196   00435E                     l6017:
 11197   00435E  500A               	movf	___fleq@ff2^0,w,c
 11198   004360  1806               	xorwf	___fleq@ff1^0,w,c
 11199   004362  E10F               	bnz	u7360
 11200   004364  500B               	movf	(___fleq@ff2+1)^0,w,c
 11201   004366  1807               	xorwf	(___fleq@ff1+1)^0,w,c
 11202   004368  E10C               	bnz	u7360
 11203   00436A  500C               	movf	(___fleq@ff2+2)^0,w,c
 11204   00436C  1808               	xorwf	(___fleq@ff1+2)^0,w,c
 11205   00436E  E109               	bnz	u7360
 11206   004370  500D               	movf	(___fleq@ff2+3)^0,w,c
 11207   004372  1809               	xorwf	(___fleq@ff1+3)^0,w,c
 11208   004374  B4D8               	btfsc	status,2,c
 11209   004376  EFBF  F021         	goto	u7361
 11210   00437A  EFC1  F021         	goto	u7360
 11211   00437E                     u7361:
 11212   00437E  EFC4  F021         	goto	l6021
 11213   004382                     u7360:
 11214   004382  90D8               	bcf	status,0,c
 11215   004384  EFC5  F021         	goto	l805
 11216   004388                     l6021:
 11217   004388  80D8               	bsf	status,0,c
 11218   00438A                     l805:
 11219   00438A  0012               	return		;funcret
 11220   00438C                     __end_of___fleq:
 11221                           	callstack 0
 11222                           
 11223 ;; *************** function ___fldiv *****************
 11224 ;; Defined at:
 11225 ;;		line 11 in file "D:\MPLABX\Compiler\pic\sources\c99\common\sprcdiv.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  b               4   44[COMRAM] unsigned char 
 11228 ;;  a               4   48[COMRAM] unsigned char 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;  grs             4   63[COMRAM] unsigned long 
 11231 ;;  rem             4   56[COMRAM] unsigned long 
 11232 ;;  new_exp         2   61[COMRAM] short 
 11233 ;;  aexp            1   68[COMRAM] unsigned char 
 11234 ;;  bexp            1   67[COMRAM] unsigned char 
 11235 ;;  sign            1   60[COMRAM] unsigned char 
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  4   44[COMRAM] unsigned char 
 11238 ;; Registers used:
 11239 ;;		wreg, status,2, status,0
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11245 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11246 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11247 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;Total ram usage:       25 bytes
 11250 ;; Hardware stack levels used: 1
 11251 ;; Hardware stack levels required when called: 1
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_runDAC
 11256 ;;		_runADC
 11257 ;;		_efgtoa
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text40
 11262   0020D2                     __ptext40:
 11263                           	callstack 0
 11264   0020D2                     ___fldiv:
 11265                           	callstack 24
 11266   0020D2  5030               	movf	(___fldiv@b+3)^0,w,c
 11267   0020D4  0B80               	andlw	128
 11268   0020D6  6E3D               	movwf	___fldiv@sign^0,c
 11269   0020D8  5030               	movf	(___fldiv@b+3)^0,w,c
 11270   0020DA  2430               	addwf	(___fldiv@b+3)^0,w,c
 11271   0020DC  6E44               	movwf	___fldiv@bexp^0,c
 11272   0020DE  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11273   0020E0  EF74  F010         	goto	u6801
 11274   0020E4  EF76  F010         	goto	u6800
 11275   0020E8                     u6801:
 11276   0020E8  EF77  F010         	goto	l5661
 11277   0020EC                     u6800:
 11278   0020EC  8044               	bsf	___fldiv@bexp^0,0,c
 11279   0020EE                     l5661:
 11280   0020EE  5044               	movf	___fldiv@bexp^0,w,c
 11281   0020F0  B4D8               	btfsc	status,2,c
 11282   0020F2  EF7D  F010         	goto	u6811
 11283   0020F6  EF7F  F010         	goto	u6810
 11284   0020FA                     u6811:
 11285   0020FA  EF94  F010         	goto	l5671
 11286   0020FE                     u6810:
 11287   0020FE  2844               	incf	___fldiv@bexp^0,w,c
 11288   002100  A4D8               	btfss	status,2,c
 11289   002102  EF85  F010         	goto	u6821
 11290   002106  EF87  F010         	goto	u6820
 11291   00210A                     u6821:
 11292   00210A  EF8F  F010         	goto	l5667
 11293   00210E                     u6820:
 11294   00210E  0E00               	movlw	0
 11295   002110  6E2D               	movwf	___fldiv@b^0,c
 11296   002112  0E00               	movlw	0
 11297   002114  6E2E               	movwf	(___fldiv@b+1)^0,c
 11298   002116  0E00               	movlw	0
 11299   002118  6E2F               	movwf	(___fldiv@b+2)^0,c
 11300   00211A  0E00               	movlw	0
 11301   00211C  6E30               	movwf	(___fldiv@b+3)^0,c
 11302   00211E                     l5667:
 11303   00211E  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11304   002120  0E00               	movlw	0
 11305   002122  6E30               	movwf	(___fldiv@b+3)^0,c
 11306   002124  EF9C  F010         	goto	l5673
 11307   002128                     l5671:
 11308   002128  0E00               	movlw	0
 11309   00212A  6E2D               	movwf	___fldiv@b^0,c
 11310   00212C  0E00               	movlw	0
 11311   00212E  6E2E               	movwf	(___fldiv@b+1)^0,c
 11312   002130  0E00               	movlw	0
 11313   002132  6E2F               	movwf	(___fldiv@b+2)^0,c
 11314   002134  0E00               	movlw	0
 11315   002136  6E30               	movwf	(___fldiv@b+3)^0,c
 11316   002138                     l5673:
 11317   002138  5034               	movf	(___fldiv@a+3)^0,w,c
 11318   00213A  0B80               	andlw	128
 11319   00213C  1A3D               	xorwf	___fldiv@sign^0,f,c
 11320   00213E  5034               	movf	(___fldiv@a+3)^0,w,c
 11321   002140  2434               	addwf	(___fldiv@a+3)^0,w,c
 11322   002142  6E45               	movwf	___fldiv@aexp^0,c
 11323   002144  AE33               	btfss	(___fldiv@a+2)^0,7,c
 11324   002146  EFA7  F010         	goto	u6831
 11325   00214A  EFA9  F010         	goto	u6830
 11326   00214E                     u6831:
 11327   00214E  EFAA  F010         	goto	l5681
 11328   002152                     u6830:
 11329   002152  8045               	bsf	___fldiv@aexp^0,0,c
 11330   002154                     l5681:
 11331   002154  5045               	movf	___fldiv@aexp^0,w,c
 11332   002156  B4D8               	btfsc	status,2,c
 11333   002158  EFB0  F010         	goto	u6841
 11334   00215C  EFB2  F010         	goto	u6840
 11335   002160                     u6841:
 11336   002160  EFC7  F010         	goto	l5691
 11337   002164                     u6840:
 11338   002164  2845               	incf	___fldiv@aexp^0,w,c
 11339   002166  A4D8               	btfss	status,2,c
 11340   002168  EFB8  F010         	goto	u6851
 11341   00216C  EFBA  F010         	goto	u6850
 11342   002170                     u6851:
 11343   002170  EFC2  F010         	goto	l5687
 11344   002174                     u6850:
 11345   002174  0E00               	movlw	0
 11346   002176  6E31               	movwf	___fldiv@a^0,c
 11347   002178  0E00               	movlw	0
 11348   00217A  6E32               	movwf	(___fldiv@a+1)^0,c
 11349   00217C  0E00               	movlw	0
 11350   00217E  6E33               	movwf	(___fldiv@a+2)^0,c
 11351   002180  0E00               	movlw	0
 11352   002182  6E34               	movwf	(___fldiv@a+3)^0,c
 11353   002184                     l5687:
 11354   002184  8E33               	bsf	(___fldiv@a+2)^0,7,c
 11355   002186  0E00               	movlw	0
 11356   002188  6E34               	movwf	(___fldiv@a+3)^0,c
 11357   00218A  EFCF  F010         	goto	l5693
 11358   00218E                     l5691:
 11359   00218E  0E00               	movlw	0
 11360   002190  6E31               	movwf	___fldiv@a^0,c
 11361   002192  0E00               	movlw	0
 11362   002194  6E32               	movwf	(___fldiv@a+1)^0,c
 11363   002196  0E00               	movlw	0
 11364   002198  6E33               	movwf	(___fldiv@a+2)^0,c
 11365   00219A  0E00               	movlw	0
 11366   00219C  6E34               	movwf	(___fldiv@a+3)^0,c
 11367   00219E                     l5693:
 11368   00219E  5031               	movf	___fldiv@a^0,w,c
 11369   0021A0  1032               	iorwf	(___fldiv@a+1)^0,w,c
 11370   0021A2  1033               	iorwf	(___fldiv@a+2)^0,w,c
 11371   0021A4  1034               	iorwf	(___fldiv@a+3)^0,w,c
 11372   0021A6  A4D8               	btfss	status,2,c
 11373   0021A8  EFD8  F010         	goto	u6861
 11374   0021AC  EFDA  F010         	goto	u6860
 11375   0021B0                     u6861:
 11376   0021B0  EFF2  F010         	goto	l5705
 11377   0021B4                     u6860:
 11378   0021B4  0E00               	movlw	0
 11379   0021B6  6E2D               	movwf	___fldiv@b^0,c
 11380   0021B8  0E00               	movlw	0
 11381   0021BA  6E2E               	movwf	(___fldiv@b+1)^0,c
 11382   0021BC  0E00               	movlw	0
 11383   0021BE  6E2F               	movwf	(___fldiv@b+2)^0,c
 11384   0021C0  0E00               	movlw	0
 11385   0021C2  6E30               	movwf	(___fldiv@b+3)^0,c
 11386   0021C4  0E80               	movlw	128
 11387   0021C6  122F               	iorwf	(___fldiv@b+2)^0,f,c
 11388   0021C8  0E7F               	movlw	127
 11389   0021CA  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11390   0021CC                     l5699:
 11391   0021CC  503D               	movf	___fldiv@sign^0,w,c
 11392   0021CE  1230               	iorwf	(___fldiv@b+3)^0,f,c
 11393   0021D0  C02D  F02D         	movff	___fldiv@b,?___fldiv
 11394   0021D4  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
 11395   0021D8  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
 11396   0021DC  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
 11397   0021E0  EF35  F012         	goto	l1128
 11398   0021E4                     l5705:
 11399   0021E4  5044               	movf	___fldiv@bexp^0,w,c
 11400   0021E6  A4D8               	btfss	status,2,c
 11401   0021E8  EFF8  F010         	goto	u6871
 11402   0021EC  EFFA  F010         	goto	u6870
 11403   0021F0                     u6871:
 11404   0021F0  EF04  F011         	goto	l5713
 11405   0021F4                     u6870:
 11406   0021F4  0E00               	movlw	0
 11407   0021F6  6E2D               	movwf	?___fldiv^0,c
 11408   0021F8  0E00               	movlw	0
 11409   0021FA  6E2E               	movwf	(?___fldiv+1)^0,c
 11410   0021FC  0E00               	movlw	0
 11411   0021FE  6E2F               	movwf	(?___fldiv+2)^0,c
 11412   002200  0E00               	movlw	0
 11413   002202  6E30               	movwf	(?___fldiv+3)^0,c
 11414   002204  EF35  F012         	goto	l1128
 11415   002208                     l5713:
 11416   002208  5045               	movf	___fldiv@aexp^0,w,c
 11417   00220A  C044  F035         	movff	___fldiv@bexp,??___fldiv
 11418   00220E  6A36               	clrf	(??___fldiv+1)^0,c
 11419   002210  5E35               	subwf	??___fldiv^0,f,c
 11420   002212  0E00               	movlw	0
 11421   002214  5A36               	subwfb	(??___fldiv+1)^0,f,c
 11422   002216  0E7F               	movlw	127
 11423   002218  2435               	addwf	??___fldiv^0,w,c
 11424   00221A  6E3E               	movwf	___fldiv@new_exp^0,c
 11425   00221C  0E00               	movlw	0
 11426   00221E  2036               	addwfc	(??___fldiv+1)^0,w,c
 11427   002220  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11428   002222  C02D  F039         	movff	___fldiv@b,___fldiv@rem
 11429   002226  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
 11430   00222A  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
 11431   00222E  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
 11432   002232  0E00               	movlw	0
 11433   002234  6E2D               	movwf	___fldiv@b^0,c
 11434   002236  0E00               	movlw	0
 11435   002238  6E2E               	movwf	(___fldiv@b+1)^0,c
 11436   00223A  0E00               	movlw	0
 11437   00223C  6E2F               	movwf	(___fldiv@b+2)^0,c
 11438   00223E  0E00               	movlw	0
 11439   002240  6E30               	movwf	(___fldiv@b+3)^0,c
 11440   002242  0E00               	movlw	0
 11441   002244  6E40               	movwf	___fldiv@grs^0,c
 11442   002246  0E00               	movlw	0
 11443   002248  6E41               	movwf	(___fldiv@grs+1)^0,c
 11444   00224A  0E00               	movlw	0
 11445   00224C  6E42               	movwf	(___fldiv@grs+2)^0,c
 11446   00224E  0E00               	movlw	0
 11447   002250  6E43               	movwf	(___fldiv@grs+3)^0,c
 11448   002252  0E00               	movlw	0
 11449   002254  6E45               	movwf	___fldiv@aexp^0,c
 11450   002256  EF65  F011         	goto	l1130
 11451   00225A                     l5723:
 11452   00225A  5045               	movf	___fldiv@aexp^0,w,c
 11453   00225C  B4D8               	btfsc	status,2,c
 11454   00225E  EF33  F011         	goto	u6881
 11455   002262  EF35  F011         	goto	u6880
 11456   002266                     u6881:
 11457   002266  EF4C  F011         	goto	l5731
 11458   00226A                     u6880:
 11459   00226A  90D8               	bcf	status,0,c
 11460   00226C  3639               	rlcf	___fldiv@rem^0,f,c
 11461   00226E  363A               	rlcf	(___fldiv@rem+1)^0,f,c
 11462   002270  363B               	rlcf	(___fldiv@rem+2)^0,f,c
 11463   002272  363C               	rlcf	(___fldiv@rem+3)^0,f,c
 11464   002274  90D8               	bcf	status,0,c
 11465   002276  362D               	rlcf	___fldiv@b^0,f,c
 11466   002278  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11467   00227A  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11468   00227C  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11469   00227E  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11470   002280  EF44  F011         	goto	u6891
 11471   002284  EF46  F011         	goto	u6890
 11472   002288                     u6891:
 11473   002288  EF47  F011         	goto	l1133
 11474   00228C                     u6890:
 11475   00228C  802D               	bsf	___fldiv@b^0,0,c
 11476   00228E                     l1133:
 11477   00228E  90D8               	bcf	status,0,c
 11478   002290  3640               	rlcf	___fldiv@grs^0,f,c
 11479   002292  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11480   002294  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11481   002296  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11482   002298                     l5731:
 11483   002298  5031               	movf	___fldiv@a^0,w,c
 11484   00229A  5C39               	subwf	___fldiv@rem^0,w,c
 11485   00229C  5032               	movf	(___fldiv@a+1)^0,w,c
 11486   00229E  583A               	subwfb	(___fldiv@rem+1)^0,w,c
 11487   0022A0  5033               	movf	(___fldiv@a+2)^0,w,c
 11488   0022A2  583B               	subwfb	(___fldiv@rem+2)^0,w,c
 11489   0022A4  5034               	movf	(___fldiv@a+3)^0,w,c
 11490   0022A6  583C               	subwfb	(___fldiv@rem+3)^0,w,c
 11491   0022A8  A0D8               	btfss	status,0,c
 11492   0022AA  EF59  F011         	goto	u6901
 11493   0022AE  EF5B  F011         	goto	u6900
 11494   0022B2                     u6901:
 11495   0022B2  EF64  F011         	goto	l5737
 11496   0022B6                     u6900:
 11497   0022B6  8C43               	bsf	(___fldiv@grs+3)^0,6,c
 11498   0022B8  5031               	movf	___fldiv@a^0,w,c
 11499   0022BA  5E39               	subwf	___fldiv@rem^0,f,c
 11500   0022BC  5032               	movf	(___fldiv@a+1)^0,w,c
 11501   0022BE  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
 11502   0022C0  5033               	movf	(___fldiv@a+2)^0,w,c
 11503   0022C2  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
 11504   0022C4  5034               	movf	(___fldiv@a+3)^0,w,c
 11505   0022C6  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
 11506   0022C8                     l5737:
 11507   0022C8  2A45               	incf	___fldiv@aexp^0,f,c
 11508   0022CA                     l1130:
 11509   0022CA  0E19               	movlw	25
 11510   0022CC  6445               	cpfsgt	___fldiv@aexp^0,c
 11511   0022CE  EF6B  F011         	goto	u6911
 11512   0022D2  EF6D  F011         	goto	u6910
 11513   0022D6                     u6911:
 11514   0022D6  EF2D  F011         	goto	l5723
 11515   0022DA                     u6910:
 11516   0022DA  5039               	movf	___fldiv@rem^0,w,c
 11517   0022DC  103A               	iorwf	(___fldiv@rem+1)^0,w,c
 11518   0022DE  103B               	iorwf	(___fldiv@rem+2)^0,w,c
 11519   0022E0  103C               	iorwf	(___fldiv@rem+3)^0,w,c
 11520   0022E2  B4D8               	btfsc	status,2,c
 11521   0022E4  EF76  F011         	goto	u6921
 11522   0022E8  EF78  F011         	goto	u6920
 11523   0022EC                     u6921:
 11524   0022EC  EF90  F011         	goto	l5749
 11525   0022F0                     u6920:
 11526   0022F0  8040               	bsf	___fldiv@grs^0,0,c
 11527   0022F2  EF90  F011         	goto	l5749
 11528   0022F6                     l5743:
 11529   0022F6  90D8               	bcf	status,0,c
 11530   0022F8  362D               	rlcf	___fldiv@b^0,f,c
 11531   0022FA  362E               	rlcf	(___fldiv@b+1)^0,f,c
 11532   0022FC  362F               	rlcf	(___fldiv@b+2)^0,f,c
 11533   0022FE  3630               	rlcf	(___fldiv@b+3)^0,f,c
 11534   002300  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11535   002302  EF85  F011         	goto	u6931
 11536   002306  EF87  F011         	goto	u6930
 11537   00230A                     u6931:
 11538   00230A  EF88  F011         	goto	l1139
 11539   00230E                     u6930:
 11540   00230E  802D               	bsf	___fldiv@b^0,0,c
 11541   002310                     l1139:
 11542   002310  90D8               	bcf	status,0,c
 11543   002312  3640               	rlcf	___fldiv@grs^0,f,c
 11544   002314  3641               	rlcf	(___fldiv@grs+1)^0,f,c
 11545   002316  3642               	rlcf	(___fldiv@grs+2)^0,f,c
 11546   002318  3643               	rlcf	(___fldiv@grs+3)^0,f,c
 11547   00231A  063E               	decf	___fldiv@new_exp^0,f,c
 11548   00231C  A0D8               	btfss	status,0,c
 11549   00231E  063F               	decf	(___fldiv@new_exp+1)^0,f,c
 11550   002320                     l5749:
 11551   002320  AE2F               	btfss	(___fldiv@b+2)^0,7,c
 11552   002322  EF95  F011         	goto	u6941
 11553   002326  EF97  F011         	goto	u6940
 11554   00232A                     u6941:
 11555   00232A  EF7B  F011         	goto	l5743
 11556   00232E                     u6940:
 11557   00232E  0E00               	movlw	0
 11558   002330  6E45               	movwf	___fldiv@aexp^0,c
 11559   002332  AE43               	btfss	(___fldiv@grs+3)^0,7,c
 11560   002334  EF9E  F011         	goto	u6951
 11561   002338  EFA0  F011         	goto	u6950
 11562   00233C                     u6951:
 11563   00233C  EFC4  F011         	goto	l1141
 11564   002340                     u6950:
 11565   002340  0EFF               	movlw	255
 11566   002342  1440               	andwf	___fldiv@grs^0,w,c
 11567   002344  6E35               	movwf	??___fldiv^0,c
 11568   002346  0EFF               	movlw	255
 11569   002348  1441               	andwf	(___fldiv@grs+1)^0,w,c
 11570   00234A  6E36               	movwf	(??___fldiv+1)^0,c
 11571   00234C  0EFF               	movlw	255
 11572   00234E  1442               	andwf	(___fldiv@grs+2)^0,w,c
 11573   002350  6E37               	movwf	(??___fldiv+2)^0,c
 11574   002352  0E7F               	movlw	127
 11575   002354  1443               	andwf	(___fldiv@grs+3)^0,w,c
 11576   002356  6E38               	movwf	(??___fldiv+3)^0,c
 11577   002358  5035               	movf	??___fldiv^0,w,c
 11578   00235A  1036               	iorwf	(??___fldiv+1)^0,w,c
 11579   00235C  1037               	iorwf	(??___fldiv+2)^0,w,c
 11580   00235E  1038               	iorwf	(??___fldiv+3)^0,w,c
 11581   002360  B4D8               	btfsc	status,2,c
 11582   002362  EFB5  F011         	goto	u6961
 11583   002366  EFB7  F011         	goto	u6960
 11584   00236A                     u6961:
 11585   00236A  EFBB  F011         	goto	l1142
 11586   00236E                     u6960:
 11587   00236E                     l5757:
 11588   00236E  0E01               	movlw	1
 11589   002370  6E45               	movwf	___fldiv@aexp^0,c
 11590   002372  EFC4  F011         	goto	l1141
 11591   002376                     l1142:
 11592   002376  A02D               	btfss	___fldiv@b^0,0,c
 11593   002378  EFC0  F011         	goto	u6971
 11594   00237C  EFC2  F011         	goto	u6970
 11595   002380                     u6971:
 11596   002380  EFC4  F011         	goto	l1141
 11597   002384                     u6970:
 11598   002384  EFB7  F011         	goto	l5757
 11599   002388                     l1141:
 11600   002388  5045               	movf	___fldiv@aexp^0,w,c
 11601   00238A  B4D8               	btfsc	status,2,c
 11602   00238C  EFCA  F011         	goto	u6981
 11603   002390  EFCC  F011         	goto	u6980
 11604   002394                     u6981:
 11605   002394  EFF0  F011         	goto	l5769
 11606   002398                     u6980:
 11607   002398  0E01               	movlw	1
 11608   00239A  262D               	addwf	___fldiv@b^0,f,c
 11609   00239C  0E00               	movlw	0
 11610   00239E  222E               	addwfc	(___fldiv@b+1)^0,f,c
 11611   0023A0  222F               	addwfc	(___fldiv@b+2)^0,f,c
 11612   0023A2  2230               	addwfc	(___fldiv@b+3)^0,f,c
 11613   0023A4  A030               	btfss	(___fldiv@b+3)^0,0,c
 11614   0023A6  EFD7  F011         	goto	u6991
 11615   0023AA  EFD9  F011         	goto	u6990
 11616   0023AE                     u6991:
 11617   0023AE  EFF0  F011         	goto	l5769
 11618   0023B2                     u6990:
 11619   0023B2  C02D  F035         	movff	___fldiv@b,??___fldiv
 11620   0023B6  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
 11621   0023BA  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
 11622   0023BE  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
 11623   0023C2  3438               	rlcf	(??___fldiv+3)^0,w,c
 11624   0023C4  3238               	rrcf	(??___fldiv+3)^0,f,c
 11625   0023C6  3237               	rrcf	(??___fldiv+2)^0,f,c
 11626   0023C8  3236               	rrcf	(??___fldiv+1)^0,f,c
 11627   0023CA  3235               	rrcf	??___fldiv^0,f,c
 11628   0023CC  C035  F02D         	movff	??___fldiv,___fldiv@b
 11629   0023D0  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
 11630   0023D4  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
 11631   0023D8  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
 11632   0023DC  4A3E               	infsnz	___fldiv@new_exp^0,f,c
 11633   0023DE  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
 11634   0023E0                     l5769:
 11635   0023E0  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11636   0023E2  EFFB  F011         	goto	u7001
 11637   0023E6  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11638   0023E8  E108               	bnz	u7000
 11639   0023EA  283E               	incf	___fldiv@new_exp^0,w,c
 11640   0023EC  A0D8               	btfss	status,0,c
 11641   0023EE  EFFB  F011         	goto	u7001
 11642   0023F2  EFFD  F011         	goto	u7000
 11643   0023F6                     u7001:
 11644   0023F6  EF08  F012         	goto	l5773
 11645   0023FA                     u7000:
 11646   0023FA  0E00               	movlw	0
 11647   0023FC  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11648   0023FE  683E               	setf	___fldiv@new_exp^0,c
 11649   002400  0E00               	movlw	0
 11650   002402  6E2D               	movwf	___fldiv@b^0,c
 11651   002404  0E00               	movlw	0
 11652   002406  6E2E               	movwf	(___fldiv@b+1)^0,c
 11653   002408  0E00               	movlw	0
 11654   00240A  6E2F               	movwf	(___fldiv@b+2)^0,c
 11655   00240C  0E00               	movlw	0
 11656   00240E  6E30               	movwf	(___fldiv@b+3)^0,c
 11657   002410                     l5773:
 11658   002410  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11659   002412  EF15  F012         	goto	u7010
 11660   002416  503F               	movf	(___fldiv@new_exp+1)^0,w,c
 11661   002418  E106               	bnz	u7011
 11662   00241A  043E               	decf	___fldiv@new_exp^0,w,c
 11663   00241C  B0D8               	btfsc	status,0,c
 11664   00241E  EF13  F012         	goto	u7011
 11665   002422  EF15  F012         	goto	u7010
 11666   002426                     u7011:
 11667   002426  EF23  F012         	goto	l5777
 11668   00242A                     u7010:
 11669   00242A  0E00               	movlw	0
 11670   00242C  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
 11671   00242E  0E00               	movlw	0
 11672   002430  6E3E               	movwf	___fldiv@new_exp^0,c
 11673   002432  0E00               	movlw	0
 11674   002434  6E2D               	movwf	___fldiv@b^0,c
 11675   002436  0E00               	movlw	0
 11676   002438  6E2E               	movwf	(___fldiv@b+1)^0,c
 11677   00243A  0E00               	movlw	0
 11678   00243C  6E2F               	movwf	(___fldiv@b+2)^0,c
 11679   00243E  0E00               	movlw	0
 11680   002440  6E30               	movwf	(___fldiv@b+3)^0,c
 11681   002442  0E00               	movlw	0
 11682   002444  6E3D               	movwf	___fldiv@sign^0,c
 11683   002446                     l5777:
 11684   002446  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
 11685   00244A  A044               	btfss	___fldiv@bexp^0,0,c
 11686   00244C  EF2A  F012         	goto	u7021
 11687   002450  EF2C  F012         	goto	u7020
 11688   002454                     u7021:
 11689   002454  EF2F  F012         	goto	l5783
 11690   002458                     u7020:
 11691   002458  8E2F               	bsf	(___fldiv@b+2)^0,7,c
 11692   00245A  EF30  F012         	goto	l5785
 11693   00245E                     l5783:
 11694   00245E  9E2F               	bcf	(___fldiv@b+2)^0,7,c
 11695   002460                     l5785:
 11696   002460  90D8               	bcf	status,0,c
 11697   002462  3044               	rrcf	___fldiv@bexp^0,w,c
 11698   002464  6E30               	movwf	(___fldiv@b+3)^0,c
 11699   002466  EFE6  F010         	goto	l5699
 11700   00246A                     l1128:
 11701   00246A  0012               	return		;funcret
 11702   00246C                     __end_of___fldiv:
 11703                           	callstack 0
 11704                           
 11705 ;; *************** function _dtoa *****************
 11706 ;; Defined at:
 11707 ;;		line 513 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 11710 ;;		 -> NULL(0), sprintf@f(12), 
 11711 ;;  d               2   33[COMRAM] int 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  i               2   42[COMRAM] int 
 11714 ;;  p               2   39[COMRAM] int 
 11715 ;;  w               2   37[COMRAM] int 
 11716 ;;  s               1   41[COMRAM] unsigned char 
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      void 
 11719 ;; Registers used:
 11720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;Total ram usage:       13 bytes
 11731 ;; Hardware stack levels used: 1
 11732 ;; Hardware stack levels required when called: 5
 11733 ;; This function calls:
 11734 ;;		___awdiv
 11735 ;;		___awmod
 11736 ;;		_abs
 11737 ;;		_pad
 11738 ;; This function is called by:
 11739 ;;		_vfpfcnvrt
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text41
 11744   00355C                     __ptext41:
 11745                           	callstack 0
 11746   00355C                     _dtoa:
 11747                           	callstack 21
 11748   00355C                     
 11749                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 513: static void dtoa(FILE *fp, vfp
      +                          f_sint_t d);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 514: {;D:\MPLABX\Compile
      +                          r\pic\sources\c99\common\doprnt.c: 515:  char s;;D:\MPLABX\Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 516:     int i, w;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 518:
      +                            int p;;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 524:     s = d < 0 ? 1 : 0;
 11750   00355C  BE23               	btfsc	(dtoa@d+1)^0,7,c
 11751   00355E  EFB3  F01A         	goto	u7751
 11752   003562  EFB6  F01A         	goto	u7750
 11753   003566                     u7751:
 11754   003566  0E01               	movlw	1
 11755   003568  EFB7  F01A         	goto	u7760
 11756   00356C                     u7750:
 11757   00356C  0E00               	movlw	0
 11758   00356E                     u7760:
 11759   00356E  6E2A               	movwf	dtoa@s^0,c
 11760                           
 11761                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 533:     p = (0 <= prec) ? prec : 1
      +                          ;
 11762   003570  BE58               	btfsc	(_prec+1)^0,7,c
 11763   003572  EFBF  F01A         	goto	u7770
 11764   003576  EFBD  F01A         	goto	u7771
 11765   00357A                     u7771:
 11766   00357A  EFC5  F01A         	goto	l1263
 11767   00357E                     u7770:
 11768   00357E  0E00               	movlw	0
 11769   003580  6E29               	movwf	(dtoa@p+1)^0,c
 11770   003582  0E01               	movlw	1
 11771   003584  6E28               	movwf	dtoa@p^0,c
 11772   003586  EFC9  F01A         	goto	l1265
 11773   00358A                     l1263:
 11774   00358A  C057  F028         	movff	_prec,dtoa@p
 11775   00358E  C058  F029         	movff	_prec+1,dtoa@p+1
 11776   003592                     l1265:
 11777                           
 11778                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 535:     w = width;
 11779   003592  C055  F026         	movff	_width,dtoa@w
 11780   003596  C056  F027         	movff	_width+1,dtoa@w+1
 11781   00359A                     
 11782                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 536:     if (s
 11783   00359A  502A               	movf	dtoa@s^0,w,c
 11784   00359C  B4D8               	btfsc	status,2,c
 11785   00359E  EFD3  F01A         	goto	u7781
 11786   0035A2  EFD5  F01A         	goto	u7780
 11787   0035A6                     u7781:
 11788   0035A6  EFEC  F01A         	goto	l1266
 11789   0035AA                     u7780:
 11790   0035AA                     
 11791                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 540:     ) {;D:\MPLABX\Compiler\pic
      +                          \sources\c99\common\doprnt.c: 541:         --w;
 11792   0035AA  0626               	decf	dtoa@w^0,f,c
 11793   0035AC  A0D8               	btfss	status,0,c
 11794   0035AE  0627               	decf	(dtoa@w+1)^0,f,c
 11795   0035B0                     
 11796                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-' : '+';
 11797   0035B0  502A               	movf	dtoa@s^0,w,c
 11798   0035B2  A4D8               	btfss	status,2,c
 11799   0035B4  EFDE  F01A         	goto	u7791
 11800   0035B8  EFE0  F01A         	goto	u7790
 11801   0035BC                     u7791:
 11802   0035BC  EFE6  F01A         	goto	l6205
 11803   0035C0                     u7790:
 11804   0035C0  0E00               	movlw	0
 11805   0035C2  6E25               	movwf	(_dtoa$3648+1)^0,c
 11806   0035C4  0E2B               	movlw	43
 11807   0035C6  6E24               	movwf	_dtoa$3648^0,c
 11808   0035C8  EFEA  F01A         	goto	l6207
 11809   0035CC                     l6205:
 11810   0035CC  0E00               	movlw	0
 11811   0035CE  6E25               	movwf	(_dtoa$3648+1)^0,c
 11812   0035D0  0E2D               	movlw	45
 11813   0035D2  6E24               	movwf	_dtoa$3648^0,c
 11814   0035D4                     l6207:
 11815   0035D4  C024  F02A         	movff	_dtoa$3648,dtoa@s
 11816   0035D8                     l1266:
 11817                           
 11818                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 552:     i = sizeof(dbuf) - 1;
 11819   0035D8  0E00               	movlw	0
 11820   0035DA  6E2C               	movwf	(dtoa@i+1)^0,c
 11821   0035DC  0E4F               	movlw	79
 11822   0035DE  6E2B               	movwf	dtoa@i^0,c
 11823   0035E0                     
 11824                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] = '\0';
 11825   0035E0  0E00               	movlw	0
 11826   0035E2  0101               	movlb	1	; () banked
 11827   0035E4  6F74               	movwf	(_dbuf+79)& (0+255),b
 11828                           
 11829                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 11830   0035E6  EF25  F01B         	goto	l6221
 11831   0035EA                     l6211:
 11832                           
 11833                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 563:     )) {;D:\MPLABX\Compiler\pi
      +                          c\sources\c99\common\doprnt.c: 564:         --i;
 11834   0035EA  062B               	decf	dtoa@i^0,f,c
 11835   0035EC  A0D8               	btfss	status,0,c
 11836   0035EE  062C               	decf	(dtoa@i+1)^0,f,c
 11837   0035F0                     
 11838                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 565:         dbuf[i] = (char)((int)
      +                          '0' + abs(d % 10));
 11839   0035F0  0E25               	movlw	low _dbuf
 11840   0035F2  242B               	addwf	dtoa@i^0,w,c
 11841   0035F4  6ED9               	movwf	fsr2l,c
 11842   0035F6  0E01               	movlw	high _dbuf
 11843   0035F8  202C               	addwfc	(dtoa@i+1)^0,w,c
 11844   0035FA  6EDA               	movwf	fsr2h,c
 11845   0035FC  C022  F006         	movff	dtoa@d,___awmod@dividend
 11846   003600  C023  F007         	movff	dtoa@d+1,___awmod@dividend+1
 11847   003604  0E00               	movlw	0
 11848   003606  6E09               	movwf	(___awmod@divisor+1)^0,c
 11849   003608  0E0A               	movlw	10
 11850   00360A  6E08               	movwf	___awmod@divisor^0,c
 11851   00360C  ECC2  F020         	call	___awmod	;wreg free
 11852   003610  C006  F00C         	movff	?___awmod,abs@a
 11853   003614  C007  F00D         	movff	?___awmod+1,abs@a+1
 11854   003618  EC8C  F023         	call	_abs	;wreg free
 11855   00361C  500C               	movf	?_abs^0,w,c
 11856   00361E  0F30               	addlw	48
 11857   003620  6EDF               	movwf	indf2,c
 11858   003622                     
 11859                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 567:         --p;
 11860   003622  0628               	decf	dtoa@p^0,f,c
 11861   003624  A0D8               	btfss	status,0,c
 11862   003626  0629               	decf	(dtoa@p+1)^0,f,c
 11863   003628                     
 11864                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 571:         --w;
 11865   003628  0626               	decf	dtoa@w^0,f,c
 11866   00362A  A0D8               	btfss	status,0,c
 11867   00362C  0627               	decf	(dtoa@w+1)^0,f,c
 11868   00362E                     
 11869                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 572:         d = d / 10;
 11870   00362E  C022  F006         	movff	dtoa@d,___awdiv@dividend
 11871   003632  C023  F007         	movff	dtoa@d+1,___awdiv@dividend+1
 11872   003636  0E00               	movlw	0
 11873   003638  6E09               	movwf	(___awdiv@divisor+1)^0,c
 11874   00363A  0E0A               	movlw	10
 11875   00363C  6E08               	movwf	___awdiv@divisor^0,c
 11876   00363E  EC07  F020         	call	___awdiv	;wreg free
 11877   003642  C006  F022         	movff	?___awdiv,dtoa@d
 11878   003646  C007  F023         	movff	?___awdiv+1,dtoa@d+1
 11879   00364A                     l6221:
 11880                           
 11881                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 554:     while (!(i < 1) && (d != 0
 11882   00364A  BE2C               	btfsc	(dtoa@i+1)^0,7,c
 11883   00364C  EF30  F01B         	goto	u7801
 11884   003650  502C               	movf	(dtoa@i+1)^0,w,c
 11885   003652  E108               	bnz	u7800
 11886   003654  042B               	decf	dtoa@i^0,w,c
 11887   003656  A0D8               	btfss	status,0,c
 11888   003658  EF30  F01B         	goto	u7801
 11889   00365C  EF32  F01B         	goto	u7800
 11890   003660                     u7801:
 11891   003660  EF48  F01B         	goto	l6227
 11892   003664                     u7800:
 11893   003664  5022               	movf	dtoa@d^0,w,c
 11894   003666  1023               	iorwf	(dtoa@d+1)^0,w,c
 11895   003668  A4D8               	btfss	status,2,c
 11896   00366A  EF39  F01B         	goto	u7811
 11897   00366E  EF3B  F01B         	goto	u7810
 11898   003672                     u7811:
 11899   003672  EFF5  F01A         	goto	l6211
 11900   003676                     u7810:
 11901   003676  BE29               	btfsc	(dtoa@p+1)^0,7,c
 11902   003678  EF48  F01B         	goto	u7820
 11903   00367C  5029               	movf	(dtoa@p+1)^0,w,c
 11904   00367E  E106               	bnz	u7821
 11905   003680  0428               	decf	dtoa@p^0,w,c
 11906   003682  B0D8               	btfsc	status,0,c
 11907   003684  EF46  F01B         	goto	u7821
 11908   003688  EF48  F01B         	goto	u7820
 11909   00368C                     u7821:
 11910   00368C  EFF5  F01A         	goto	l6211
 11911   003690                     u7820:
 11912   003690                     l6227:
 11913                           
 11914                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 576:     if (s != 0) {
 11915   003690  502A               	movf	dtoa@s^0,w,c
 11916   003692  B4D8               	btfsc	status,2,c
 11917   003694  EF4E  F01B         	goto	u7831
 11918   003698  EF50  F01B         	goto	u7830
 11919   00369C                     u7831:
 11920   00369C  EF5B  F01B         	goto	l6233
 11921   0036A0                     u7830:
 11922   0036A0                     
 11923                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 577:         --i;
 11924   0036A0  062B               	decf	dtoa@i^0,f,c
 11925   0036A2  A0D8               	btfss	status,0,c
 11926   0036A4  062C               	decf	(dtoa@i+1)^0,f,c
 11927   0036A6                     
 11928                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 578:         dbuf[i] = s;
 11929   0036A6  0E25               	movlw	low _dbuf
 11930   0036A8  242B               	addwf	dtoa@i^0,w,c
 11931   0036AA  6ED9               	movwf	fsr2l,c
 11932   0036AC  0E01               	movlw	high _dbuf
 11933   0036AE  202C               	addwfc	(dtoa@i+1)^0,w,c
 11934   0036B0  6EDA               	movwf	fsr2h,c
 11935   0036B2  C02A  FFDF         	movff	dtoa@s,indf2
 11936   0036B6                     l6233:
 11937                           
 11938                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 582:     return (void) pad(fp, &dbu
      +                          f[i], w);
 11939   0036B6  C020  F017         	movff	dtoa@fp,pad@fp
 11940   0036BA  C021  F018         	movff	dtoa@fp+1,pad@fp+1
 11941   0036BE  0E25               	movlw	low _dbuf
 11942   0036C0  242B               	addwf	dtoa@i^0,w,c
 11943   0036C2  6E19               	movwf	pad@buf^0,c
 11944   0036C4  0E01               	movlw	high _dbuf
 11945   0036C6  202C               	addwfc	(dtoa@i+1)^0,w,c
 11946   0036C8  6E1A               	movwf	(pad@buf+1)^0,c
 11947   0036CA  C026  F01B         	movff	dtoa@w,pad@p
 11948   0036CE  C027  F01C         	movff	dtoa@w+1,pad@p+1
 11949   0036D2  ECC6  F021         	call	_pad	;wreg free
 11950   0036D6  0012               	return		;funcret
 11951   0036D8                     __end_of_dtoa:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function _pad *****************
 11955 ;; Defined at:
 11956 ;;		line 193 in file "D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 11959 ;;		 -> NULL(0), sprintf@f(12), 
 11960 ;;  buf             2   24[COMRAM] PTR unsigned char 
 11961 ;;		 -> dbuf(80), 
 11962 ;;  p               2   26[COMRAM] int 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;  i               2   29[COMRAM] int 
 11965 ;; Return value:  Size  Location     Type
 11966 ;;                  1    wreg      void 
 11967 ;; Registers used:
 11968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11969 ;; Tracked objects:
 11970 ;;		On entry : 0/0
 11971 ;;		On exit  : 0/0
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11974 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11978 ;;Total ram usage:        9 bytes
 11979 ;; Hardware stack levels used: 1
 11980 ;; Hardware stack levels required when called: 4
 11981 ;; This function calls:
 11982 ;;		_fputc
 11983 ;;		_fputs
 11984 ;; This function is called by:
 11985 ;;		_dtoa
 11986 ;;		_efgtoa
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           	psect	text42
 11991   00438C                     __ptext42:
 11992                           	callstack 0
 11993   00438C                     _pad:
 11994                           	callstack 21
 11995   00438C                     
 11996                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 193: static void pad(FILE *fp, char
      +                           *buf, int p);D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 194: {;D:\MPLABX\Compi
      +                          ler\pic\sources\c99\common\doprnt.c: 195:     int i;;D:\MPLABX\Compiler\pic\sources\c99\
      +                          common\doprnt.c: 199:     if (flags & (1 << 0)) {
 11997   00438C  A059               	btfss	_flags^0,0,c
 11998   00438E  EFCB  F021         	goto	u7501
 11999   004392  EFCD  F021         	goto	u7500
 12000   004396                     u7501:
 12001   004396  EFD7  F021         	goto	l6103
 12002   00439A                     u7500:
 12003   00439A                     
 12004                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 200:         fputs((const char *)bu
      +                          f, fp);
 12005   00439A  C019  F010         	movff	pad@buf,fputs@s
 12006   00439E  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12007   0043A2  C017  F012         	movff	pad@fp,fputs@fp
 12008   0043A6  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12009   0043AA  ECF8  F022         	call	_fputs	;wreg free
 12010   0043AE                     l6103:
 12011                           
 12012                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
 12013   0043AE  BE1C               	btfsc	(pad@p+1)^0,7,c
 12014   0043B0  EFDE  F021         	goto	u7510
 12015   0043B4  EFDC  F021         	goto	u7511
 12016   0043B8                     u7511:
 12017   0043B8  EFE2  F021         	goto	l1254
 12018   0043BC                     u7510:
 12019   0043BC                     
 12020                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 12021   0043BC  0E00               	movlw	0
 12022   0043BE  6E1C               	movwf	(pad@p+1)^0,c
 12023   0043C0  0E00               	movlw	0
 12024   0043C2  6E1B               	movwf	pad@p^0,c
 12025   0043C4                     l1254:
 12026                           
 12027                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 12028   0043C4  0E00               	movlw	0
 12029   0043C6  6E1F               	movwf	(pad@i+1)^0,c
 12030   0043C8  0E00               	movlw	0
 12031   0043CA  6E1E               	movwf	pad@i^0,c
 12032                           
 12033                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12034   0043CC  EFF4  F021         	goto	l6111
 12035   0043D0                     l6107:
 12036                           
 12037                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 210:         fputc(' ', fp);
 12038   0043D0  0E00               	movlw	0
 12039   0043D2  6E08               	movwf	(fputc@c+1)^0,c
 12040   0043D4  0E20               	movlw	32
 12041   0043D6  6E07               	movwf	fputc@c^0,c
 12042   0043D8  C017  F009         	movff	pad@fp,fputc@fp
 12043   0043DC  C018  F00A         	movff	pad@fp+1,fputc@fp+1
 12044   0043E0  EC40  F01F         	call	_fputc	;wreg free
 12045   0043E4                     
 12046                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 211:         ++i;
 12047   0043E4  4A1E               	infsnz	pad@i^0,f,c
 12048   0043E6  2A1F               	incf	(pad@i+1)^0,f,c
 12049   0043E8                     l6111:
 12050                           
 12051                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 209:     while (i < p) {
 12052   0043E8  501B               	movf	pad@p^0,w,c
 12053   0043EA  5C1E               	subwf	pad@i^0,w,c
 12054   0043EC  501F               	movf	(pad@i+1)^0,w,c
 12055   0043EE  0A80               	xorlw	128
 12056   0043F0  6E1D               	movwf	??_pad^0,c
 12057   0043F2  501C               	movf	(pad@p+1)^0,w,c
 12058   0043F4  0A80               	xorlw	128
 12059   0043F6  581D               	subwfb	??_pad^0,w,c
 12060   0043F8  A0D8               	btfss	status,0,c
 12061   0043FA  EF01  F022         	goto	u7521
 12062   0043FE  EF03  F022         	goto	u7520
 12063   004402                     u7521:
 12064   004402  EFE8  F021         	goto	l6107
 12065   004406                     u7520:
 12066   004406                     
 12067                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 216:     if (!(flags & (1 << 0))) {
 12068   004406  B059               	btfsc	_flags^0,0,c
 12069   004408  EF08  F022         	goto	u7531
 12070   00440C  EF0A  F022         	goto	u7530
 12071   004410                     u7531:
 12072   004410  EF14  F022         	goto	l1259
 12073   004414                     u7530:
 12074   004414                     
 12075                           ;D:\MPLABX\Compiler\pic\sources\c99\common\doprnt.c: 218:         fputs((const char *)bu
      +                          f, fp);
 12076   004414  C019  F010         	movff	pad@buf,fputs@s
 12077   004418  C01A  F011         	movff	pad@buf+1,fputs@s+1
 12078   00441C  C017  F012         	movff	pad@fp,fputs@fp
 12079   004420  C018  F013         	movff	pad@fp+1,fputs@fp+1
 12080   004424  ECF8  F022         	call	_fputs	;wreg free
 12081   004428                     l1259:
 12082   004428  0012               	return		;funcret
 12083   00442A                     __end_of_pad:
 12084                           	callstack 0
 12085                           
 12086 ;; *************** function _fputs *****************
 12087 ;; Defined at:
 12088 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputs.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;  s               2   15[COMRAM] PTR const unsigned char 
 12091 ;;		 -> dbuf(80), 
 12092 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 12093 ;;		 -> NULL(0), sprintf@f(12), 
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;  i               2   20[COMRAM] int 
 12096 ;;  c               1   19[COMRAM] unsigned char 
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  2   15[COMRAM] int 
 12099 ;; Registers used:
 12100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12107 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12110 ;;Total ram usage:        7 bytes
 12111 ;; Hardware stack levels used: 1
 12112 ;; Hardware stack levels required when called: 3
 12113 ;; This function calls:
 12114 ;;		_fputc
 12115 ;; This function is called by:
 12116 ;;		_pad
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           	psect	text43
 12121   0045F0                     __ptext43:
 12122                           	callstack 0
 12123   0045F0                     _fputs:
 12124                           	callstack 21
 12125   0045F0  0E00               	movlw	0
 12126   0045F2  6E16               	movwf	(fputs@i+1)^0,c
 12127   0045F4  0E00               	movlw	0
 12128   0045F6  6E15               	movwf	fputs@i^0,c
 12129   0045F8  EF09  F023         	goto	l5647
 12130   0045FC                     l5643:
 12131   0045FC  C014  F007         	movff	fputs@c,fputc@c
 12132   004600  6A08               	clrf	(fputc@c+1)^0,c
 12133   004602  C012  F009         	movff	fputs@fp,fputc@fp
 12134   004606  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
 12135   00460A  EC40  F01F         	call	_fputc	;wreg free
 12136   00460E  4A15               	infsnz	fputs@i^0,f,c
 12137   004610  2A16               	incf	(fputs@i+1)^0,f,c
 12138   004612                     l5647:
 12139   004612  5015               	movf	fputs@i^0,w,c
 12140   004614  2410               	addwf	fputs@s^0,w,c
 12141   004616  6ED9               	movwf	fsr2l,c
 12142   004618  5016               	movf	(fputs@i+1)^0,w,c
 12143   00461A  2011               	addwfc	(fputs@s+1)^0,w,c
 12144   00461C  6EDA               	movwf	fsr2h,c
 12145   00461E  50DF               	movf	indf2,w,c
 12146   004620  6E14               	movwf	fputs@c^0,c
 12147   004622  5014               	movf	fputs@c^0,w,c
 12148   004624  A4D8               	btfss	status,2,c
 12149   004626  EF17  F023         	goto	u6791
 12150   00462A  EF19  F023         	goto	u6790
 12151   00462E                     u6791:
 12152   00462E  EFFE  F022         	goto	l5643
 12153   004632                     u6790:
 12154   004632  0012               	return		;funcret
 12155   004634                     __end_of_fputs:
 12156                           	callstack 0
 12157                           
 12158 ;; *************** function _fputc *****************
 12159 ;; Defined at:
 12160 ;;		line 8 in file "D:\MPLABX\Compiler\pic\sources\c99\common\nf_fputc.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  c               2    6[COMRAM] int 
 12163 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
 12164 ;;		 -> NULL(0), sprintf@f(12), 
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;		None
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  2    6[COMRAM] int 
 12169 ;; Registers used:
 12170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12180 ;;Total ram usage:        9 bytes
 12181 ;; Hardware stack levels used: 1
 12182 ;; Hardware stack levels required when called: 2
 12183 ;; This function calls:
 12184 ;;		_putch
 12185 ;; This function is called by:
 12186 ;;		_pad
 12187 ;;		_stoa
 12188 ;;		_vfpfcnvrt
 12189 ;;		_fputs
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text44
 12194   003E80                     __ptext44:
 12195                           	callstack 0
 12196   003E80                     _fputc:
 12197                           	callstack 23
 12198   003E80  5009               	movf	fputc@fp^0,w,c
 12199   003E82  100A               	iorwf	(fputc@fp+1)^0,w,c
 12200   003E84  B4D8               	btfsc	status,2,c
 12201   003E86  EF47  F01F         	goto	u6361
 12202   003E8A  EF49  F01F         	goto	u6360
 12203   003E8E                     u6361:
 12204   003E8E  EF52  F01F         	goto	l5429
 12205   003E92                     u6360:
 12206   003E92  5009               	movf	fputc@fp^0,w,c
 12207   003E94  100A               	iorwf	(fputc@fp+1)^0,w,c
 12208   003E96  A4D8               	btfss	status,2,c
 12209   003E98  EF50  F01F         	goto	u6371
 12210   003E9C  EF52  F01F         	goto	u6370
 12211   003EA0                     u6371:
 12212   003EA0  EF57  F01F         	goto	l5431
 12213   003EA4                     u6370:
 12214   003EA4                     l5429:
 12215   003EA4  5007               	movf	fputc@c^0,w,c
 12216   003EA6  ECF0  F023         	call	_putch
 12217   003EAA  EFA4  F01F         	goto	l1455
 12218   003EAE                     l5431:
 12219   003EAE  EE20 F00A          	lfsr	2,10
 12220   003EB2  5009               	movf	fputc@fp^0,w,c
 12221   003EB4  26D9               	addwf	fsr2l,f,c
 12222   003EB6  500A               	movf	(fputc@fp+1)^0,w,c
 12223   003EB8  22DA               	addwfc	fsr2h,f,c
 12224   003EBA  50DE               	movf	postinc2,w,c
 12225   003EBC  10DE               	iorwf	postinc2,w,c
 12226   003EBE  B4D8               	btfsc	status,2,c
 12227   003EC0  EF64  F01F         	goto	u6381
 12228   003EC4  EF66  F01F         	goto	u6380
 12229   003EC8                     u6381:
 12230   003EC8  EF81  F01F         	goto	l5435
 12231   003ECC                     u6380:
 12232   003ECC  EE20 F00A          	lfsr	2,10
 12233   003ED0  5009               	movf	fputc@fp^0,w,c
 12234   003ED2  26D9               	addwf	fsr2l,f,c
 12235   003ED4  500A               	movf	(fputc@fp+1)^0,w,c
 12236   003ED6  22DA               	addwfc	fsr2h,f,c
 12237   003ED8  EE10 F003          	lfsr	1,3
 12238   003EDC  5009               	movf	fputc@fp^0,w,c
 12239   003EDE  26E1               	addwf	fsr1l,f,c
 12240   003EE0  500A               	movf	(fputc@fp+1)^0,w,c
 12241   003EE2  22E2               	addwfc	fsr1h,f,c
 12242   003EE4  50DE               	movf	postinc2,w,c
 12243   003EE6  5CE6               	subwf	postinc1,w,c
 12244   003EE8  50E6               	movf	postinc1,w,c
 12245   003EEA  0A80               	xorlw	128
 12246   003EEC  6E0F               	movwf	(??_fputc+4)^0,c
 12247   003EEE  50DE               	movf	postinc2,w,c
 12248   003EF0  0A80               	xorlw	128
 12249   003EF2  580F               	subwfb	(??_fputc+4)^0,w,c
 12250   003EF4  B0D8               	btfsc	status,0,c
 12251   003EF6  EF7F  F01F         	goto	u6391
 12252   003EFA  EF81  F01F         	goto	u6390
 12253   003EFE                     u6391:
 12254   003EFE  EFA4  F01F         	goto	l1455
 12255   003F02                     u6390:
 12256   003F02                     l5435:
 12257   003F02  EE20 F003          	lfsr	2,3
 12258   003F06  5009               	movf	fputc@fp^0,w,c
 12259   003F08  26D9               	addwf	fsr2l,f,c
 12260   003F0A  500A               	movf	(fputc@fp+1)^0,w,c
 12261   003F0C  22DA               	addwfc	fsr2h,f,c
 12262   003F0E  CFDE F00B          	movff	postinc2,??_fputc
 12263   003F12  CFDD F00C          	movff	postdec2,??_fputc+1
 12264   003F16  C009  FFD9         	movff	fputc@fp,fsr2l
 12265   003F1A  C00A  FFDA         	movff	fputc@fp+1,fsr2h
 12266   003F1E  CFDE F00D          	movff	postinc2,??_fputc+2
 12267   003F22  CFDD F00E          	movff	postdec2,??_fputc+3
 12268   003F26  500B               	movf	??_fputc^0,w,c
 12269   003F28  240D               	addwf	(??_fputc+2)^0,w,c
 12270   003F2A  6ED9               	movwf	fsr2l,c
 12271   003F2C  500C               	movf	(??_fputc+1)^0,w,c
 12272   003F2E  200E               	addwfc	(??_fputc+3)^0,w,c
 12273   003F30  6EDA               	movwf	fsr2h,c
 12274   003F32  C007  FFDF         	movff	fputc@c,indf2
 12275   003F36  EE20 F003          	lfsr	2,3
 12276   003F3A  5009               	movf	fputc@fp^0,w,c
 12277   003F3C  26D9               	addwf	fsr2l,f,c
 12278   003F3E  500A               	movf	(fputc@fp+1)^0,w,c
 12279   003F40  22DA               	addwfc	fsr2h,f,c
 12280   003F42  2ADE               	incf	postinc2,f,c
 12281   003F44  0E00               	movlw	0
 12282   003F46  22DD               	addwfc	postdec2,f,c
 12283   003F48                     l1455:
 12284   003F48  0012               	return		;funcret
 12285   003F4A                     __end_of_fputc:
 12286                           	callstack 0
 12287                           
 12288 ;; *************** function _putch *****************
 12289 ;; Defined at:
 12290 ;;		line 11 in file "putch.c"
 12291 ;; Parameters:    Size  Location     Type
 12292 ;;  data            1    wreg     unsigned char 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  data            1    5[COMRAM] unsigned char 
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1    wreg      void 
 12297 ;; Registers used:
 12298 ;;		wreg
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12308 ;;Total ram usage:        1 bytes
 12309 ;; Hardware stack levels used: 1
 12310 ;; Hardware stack levels required when called: 1
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		_fputc
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text45
 12319   0047E0                     __ptext45:
 12320                           	callstack 0
 12321   0047E0                     _putch:
 12322                           	callstack 23
 12323                           
 12324                           ;incstack = 0
 12325                           ;putch@data stored from wreg
 12326   0047E0  6E06               	movwf	putch@data^0,c
 12327   0047E2                     l250:
 12328   0047E2  A89E               	btfss	3998,4,c	;volatile
 12329   0047E4  EFF6  F023         	goto	u6351
 12330   0047E8  EFF8  F023         	goto	u6350
 12331   0047EC                     u6351:
 12332   0047EC  EFF1  F023         	goto	l250
 12333   0047F0                     u6350:
 12334   0047F0                     
 12335                           ;putch.c: 13:     TXREG1 = data;
 12336   0047F0  C006  FFAD         	movff	putch@data,4013	;volatile
 12337   0047F4  0012               	return		;funcret
 12338   0047F6                     __end_of_putch:
 12339                           	callstack 0
 12340                           
 12341 ;; *************** function _abs *****************
 12342 ;; Defined at:
 12343 ;;		line 1 in file "D:\MPLABX\Compiler\pic\sources\c99\common\abs.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;  a               2   11[COMRAM] int 
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  2   11[COMRAM] int 
 12350 ;; Registers used:
 12351 ;;		wreg, status,2, status,0
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12361 ;;Total ram usage:        4 bytes
 12362 ;; Hardware stack levels used: 1
 12363 ;; Hardware stack levels required when called: 1
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		_dtoa
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text46
 12372   004718                     __ptext46:
 12373                           	callstack 0
 12374   004718                     _abs:
 12375                           	callstack 24
 12376   004718  BE0D               	btfsc	(abs@a+1)^0,7,c
 12377   00471A  EF91  F023         	goto	u7541
 12378   00471E  EF93  F023         	goto	u7540
 12379   004722                     u7541:
 12380   004722  EF99  F023         	goto	l1414
 12381   004726                     u7540:
 12382   004726  C00C  F00C         	movff	abs@a,?_abs
 12383   00472A  C00D  F00D         	movff	abs@a+1,?_abs+1
 12384   00472E  EFA5  F023         	goto	l1417
 12385   004732                     l1414:
 12386   004732  C00C  F00E         	movff	abs@a,??_abs
 12387   004736  C00D  F00F         	movff	abs@a+1,??_abs+1
 12388   00473A  1E0E               	comf	??_abs^0,f,c
 12389   00473C  1E0F               	comf	(??_abs+1)^0,f,c
 12390   00473E  4A0E               	infsnz	??_abs^0,f,c
 12391   004740  2A0F               	incf	(??_abs+1)^0,f,c
 12392   004742  C00E  F00C         	movff	??_abs,?_abs
 12393   004746  C00F  F00D         	movff	??_abs+1,?_abs+1
 12394   00474A                     l1417:
 12395   00474A  0012               	return		;funcret
 12396   00474C                     __end_of_abs:
 12397                           	callstack 0
 12398                           
 12399 ;; *************** function ___awmod *****************
 12400 ;; Defined at:
 12401 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awmod.c"
 12402 ;; Parameters:    Size  Location     Type
 12403 ;;  dividend        2    5[COMRAM] int 
 12404 ;;  divisor         2    7[COMRAM] int 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;  sign            1   10[COMRAM] unsigned char 
 12407 ;;  counter         1    9[COMRAM] unsigned char 
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  2    5[COMRAM] int 
 12410 ;; Registers used:
 12411 ;;		wreg, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;Total ram usage:        6 bytes
 12422 ;; Hardware stack levels used: 1
 12423 ;; Hardware stack levels required when called: 1
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_dtoa
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text47
 12432   004184                     __ptext47:
 12433                           	callstack 0
 12434   004184                     ___awmod:
 12435                           	callstack 24
 12436   004184  0E00               	movlw	0
 12437   004186  6E0B               	movwf	___awmod@sign^0,c
 12438   004188  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
 12439   00418A  EFCB  F020         	goto	u7280
 12440   00418E  EFC9  F020         	goto	u7281
 12441   004192                     u7281:
 12442   004192  EFD1  F020         	goto	l5981
 12443   004196                     u7280:
 12444   004196  6C06               	negf	___awmod@dividend^0,c
 12445   004198  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12446   00419A  B0D8               	btfsc	status,0,c
 12447   00419C  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12448   00419E  0E01               	movlw	1
 12449   0041A0  6E0B               	movwf	___awmod@sign^0,c
 12450   0041A2                     l5981:
 12451   0041A2  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
 12452   0041A4  EFD8  F020         	goto	u7290
 12453   0041A8  EFD6  F020         	goto	u7291
 12454   0041AC                     u7291:
 12455   0041AC  EFDC  F020         	goto	l5985
 12456   0041B0                     u7290:
 12457   0041B0  6C08               	negf	___awmod@divisor^0,c
 12458   0041B2  1E09               	comf	(___awmod@divisor+1)^0,f,c
 12459   0041B4  B0D8               	btfsc	status,0,c
 12460   0041B6  2A09               	incf	(___awmod@divisor+1)^0,f,c
 12461   0041B8                     l5985:
 12462   0041B8  5008               	movf	___awmod@divisor^0,w,c
 12463   0041BA  1009               	iorwf	(___awmod@divisor+1)^0,w,c
 12464   0041BC  B4D8               	btfsc	status,2,c
 12465   0041BE  EFE3  F020         	goto	u7301
 12466   0041C2  EFE5  F020         	goto	u7300
 12467   0041C6                     u7301:
 12468   0041C6  EF09  F021         	goto	l6001
 12469   0041CA                     u7300:
 12470   0041CA  0E01               	movlw	1
 12471   0041CC  6E0A               	movwf	___awmod@counter^0,c
 12472   0041CE  EFED  F020         	goto	l5991
 12473   0041D2                     l5989:
 12474   0041D2  90D8               	bcf	status,0,c
 12475   0041D4  3608               	rlcf	___awmod@divisor^0,f,c
 12476   0041D6  3609               	rlcf	(___awmod@divisor+1)^0,f,c
 12477   0041D8  2A0A               	incf	___awmod@counter^0,f,c
 12478   0041DA                     l5991:
 12479   0041DA  AE09               	btfss	(___awmod@divisor+1)^0,7,c
 12480   0041DC  EFF2  F020         	goto	u7311
 12481   0041E0  EFF4  F020         	goto	u7310
 12482   0041E4                     u7311:
 12483   0041E4  EFE9  F020         	goto	l5989
 12484   0041E8                     u7310:
 12485   0041E8                     l5993:
 12486   0041E8  5008               	movf	___awmod@divisor^0,w,c
 12487   0041EA  5C06               	subwf	___awmod@dividend^0,w,c
 12488   0041EC  5009               	movf	(___awmod@divisor+1)^0,w,c
 12489   0041EE  5807               	subwfb	(___awmod@dividend+1)^0,w,c
 12490   0041F0  A0D8               	btfss	status,0,c
 12491   0041F2  EFFD  F020         	goto	u7321
 12492   0041F6  EFFF  F020         	goto	u7320
 12493   0041FA                     u7321:
 12494   0041FA  EF03  F021         	goto	l5997
 12495   0041FE                     u7320:
 12496   0041FE  5008               	movf	___awmod@divisor^0,w,c
 12497   004200  5E06               	subwf	___awmod@dividend^0,f,c
 12498   004202  5009               	movf	(___awmod@divisor+1)^0,w,c
 12499   004204  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
 12500   004206                     l5997:
 12501   004206  90D8               	bcf	status,0,c
 12502   004208  3209               	rrcf	(___awmod@divisor+1)^0,f,c
 12503   00420A  3208               	rrcf	___awmod@divisor^0,f,c
 12504   00420C  2E0A               	decfsz	___awmod@counter^0,f,c
 12505   00420E  EFF4  F020         	goto	l5993
 12506   004212                     l6001:
 12507   004212  500B               	movf	___awmod@sign^0,w,c
 12508   004214  B4D8               	btfsc	status,2,c
 12509   004216  EF0F  F021         	goto	u7331
 12510   00421A  EF11  F021         	goto	u7330
 12511   00421E                     u7331:
 12512   00421E  EF15  F021         	goto	l6005
 12513   004222                     u7330:
 12514   004222  6C06               	negf	___awmod@dividend^0,c
 12515   004224  1E07               	comf	(___awmod@dividend+1)^0,f,c
 12516   004226  B0D8               	btfsc	status,0,c
 12517   004228  2A07               	incf	(___awmod@dividend+1)^0,f,c
 12518   00422A                     l6005:
 12519   00422A  C006  F006         	movff	___awmod@dividend,?___awmod
 12520   00422E  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
 12521   004232  0012               	return		;funcret
 12522   004234                     __end_of___awmod:
 12523                           	callstack 0
 12524                           
 12525 ;; *************** function ___awdiv *****************
 12526 ;; Defined at:
 12527 ;;		line 7 in file "D:\MPLABX\Compiler\pic\sources\c99\common\awdiv.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;  dividend        2    5[COMRAM] int 
 12530 ;;  divisor         2    7[COMRAM] int 
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;  quotient        2   11[COMRAM] int 
 12533 ;;  sign            1   10[COMRAM] unsigned char 
 12534 ;;  counter         1    9[COMRAM] unsigned char 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  2    5[COMRAM] int 
 12537 ;; Registers used:
 12538 ;;		wreg, status,2, status,0
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;Total ram usage:        8 bytes
 12549 ;; Hardware stack levels used: 1
 12550 ;; Hardware stack levels required when called: 1
 12551 ;; This function calls:
 12552 ;;		Nothing
 12553 ;; This function is called by:
 12554 ;;		_runPWM
 12555 ;;		_dtoa
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text48
 12560   00400E                     __ptext48:
 12561                           	callstack 0
 12562   00400E                     ___awdiv:
 12563                           	callstack 24
 12564   00400E  0E00               	movlw	0
 12565   004010  6E0B               	movwf	___awdiv@sign^0,c
 12566   004012  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
 12567   004014  EF10  F020         	goto	u7220
 12568   004018  EF0E  F020         	goto	u7221
 12569   00401C                     u7221:
 12570   00401C  EF16  F020         	goto	l5937
 12571   004020                     u7220:
 12572   004020  6C08               	negf	___awdiv@divisor^0,c
 12573   004022  1E09               	comf	(___awdiv@divisor+1)^0,f,c
 12574   004024  B0D8               	btfsc	status,0,c
 12575   004026  2A09               	incf	(___awdiv@divisor+1)^0,f,c
 12576   004028  0E01               	movlw	1
 12577   00402A  6E0B               	movwf	___awdiv@sign^0,c
 12578   00402C                     l5937:
 12579   00402C  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
 12580   00402E  EF1D  F020         	goto	u7230
 12581   004032  EF1B  F020         	goto	u7231
 12582   004036                     u7231:
 12583   004036  EF23  F020         	goto	l5943
 12584   00403A                     u7230:
 12585   00403A  6C06               	negf	___awdiv@dividend^0,c
 12586   00403C  1E07               	comf	(___awdiv@dividend+1)^0,f,c
 12587   00403E  B0D8               	btfsc	status,0,c
 12588   004040  2A07               	incf	(___awdiv@dividend+1)^0,f,c
 12589   004042  0E01               	movlw	1
 12590   004044  1A0B               	xorwf	___awdiv@sign^0,f,c
 12591   004046                     l5943:
 12592   004046  0E00               	movlw	0
 12593   004048  6E0D               	movwf	(___awdiv@quotient+1)^0,c
 12594   00404A  0E00               	movlw	0
 12595   00404C  6E0C               	movwf	___awdiv@quotient^0,c
 12596   00404E  5008               	movf	___awdiv@divisor^0,w,c
 12597   004050  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
 12598   004052  B4D8               	btfsc	status,2,c
 12599   004054  EF2E  F020         	goto	u7241
 12600   004058  EF30  F020         	goto	u7240
 12601   00405C                     u7241:
 12602   00405C  EF58  F020         	goto	l5965
 12603   004060                     u7240:
 12604   004060  0E01               	movlw	1
 12605   004062  6E0A               	movwf	___awdiv@counter^0,c
 12606   004064  EF38  F020         	goto	l5951
 12607   004068                     l5949:
 12608   004068  90D8               	bcf	status,0,c
 12609   00406A  3608               	rlcf	___awdiv@divisor^0,f,c
 12610   00406C  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
 12611   00406E  2A0A               	incf	___awdiv@counter^0,f,c
 12612   004070                     l5951:
 12613   004070  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
 12614   004072  EF3D  F020         	goto	u7251
 12615   004076  EF3F  F020         	goto	u7250
 12616   00407A                     u7251:
 12617   00407A  EF34  F020         	goto	l5949
 12618   00407E                     u7250:
 12619   00407E                     l5953:
 12620   00407E  90D8               	bcf	status,0,c
 12621   004080  360C               	rlcf	___awdiv@quotient^0,f,c
 12622   004082  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
 12623   004084  5008               	movf	___awdiv@divisor^0,w,c
 12624   004086  5C06               	subwf	___awdiv@dividend^0,w,c
 12625   004088  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12626   00408A  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
 12627   00408C  A0D8               	btfss	status,0,c
 12628   00408E  EF4B  F020         	goto	u7261
 12629   004092  EF4D  F020         	goto	u7260
 12630   004096                     u7261:
 12631   004096  EF52  F020         	goto	l5961
 12632   00409A                     u7260:
 12633   00409A  5008               	movf	___awdiv@divisor^0,w,c
 12634   00409C  5E06               	subwf	___awdiv@dividend^0,f,c
 12635   00409E  5009               	movf	(___awdiv@divisor+1)^0,w,c
 12636   0040A0  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
 12637   0040A2  800C               	bsf	___awdiv@quotient^0,0,c
 12638   0040A4                     l5961:
 12639   0040A4  90D8               	bcf	status,0,c
 12640   0040A6  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
 12641   0040A8  3208               	rrcf	___awdiv@divisor^0,f,c
 12642   0040AA  2E0A               	decfsz	___awdiv@counter^0,f,c
 12643   0040AC  EF3F  F020         	goto	l5953
 12644   0040B0                     l5965:
 12645   0040B0  500B               	movf	___awdiv@sign^0,w,c
 12646   0040B2  B4D8               	btfsc	status,2,c
 12647   0040B4  EF5E  F020         	goto	u7271
 12648   0040B8  EF60  F020         	goto	u7270
 12649   0040BC                     u7271:
 12650   0040BC  EF64  F020         	goto	l5969
 12651   0040C0                     u7270:
 12652   0040C0  6C0C               	negf	___awdiv@quotient^0,c
 12653   0040C2  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
 12654   0040C4  B0D8               	btfsc	status,0,c
 12655   0040C6  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
 12656   0040C8                     l5969:
 12657   0040C8  C00C  F006         	movff	___awdiv@quotient,?___awdiv
 12658   0040CC  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
 12659   0040D0  0012               	return		;funcret
 12660   0040D2                     __end_of___awdiv:
 12661                           	callstack 0
 12662                           
 12663 ;; *************** function _LCD_ShowString *****************
 12664 ;; Defined at:
 12665 ;;		line 55 in file "lcd.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;  lineNum         1    wreg     unsigned char 
 12668 ;;  textData        2    6[COMRAM] PTR unsigned char 
 12669 ;;		 -> runADC@text(17), moveDisplay@menuItem2(17), moveDisplay@menuItem1(17), STR_9(17), 
 12670 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
 12671 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;  lineNum         1   10[COMRAM] unsigned char 
 12674 ;;  i               1   11[COMRAM] unsigned char 
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;Total ram usage:        6 bytes
 12689 ;; Hardware stack levels used: 1
 12690 ;; Hardware stack levels required when called: 2
 12691 ;; This function calls:
 12692 ;;		_LCD_Send
 12693 ;; This function is called by:
 12694 ;;		_main
 12695 ;;		_moveDisplay
 12696 ;;		_runADC
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text49
 12701   0040D2                     __ptext49:
 12702                           	callstack 0
 12703   0040D2                     _LCD_ShowString:
 12704                           	callstack 27
 12705                           
 12706                           ;incstack = 0
 12707                           ;LCD_ShowString@lineNum stored from wreg
 12708   0040D2  6E0B               	movwf	LCD_ShowString@lineNum^0,c
 12709   0040D4                     
 12710                           ;lcd.c: 60:     SSP2CON2bits.SEN = 1;
 12711   0040D4  806B               	bsf	107,0,c	;volatile
 12712   0040D6                     l120:
 12713   0040D6  B06B               	btfsc	107,0,c	;volatile
 12714   0040D8  EF70  F020         	goto	u8591
 12715   0040DC  EF72  F020         	goto	u8590
 12716   0040E0                     u8591:
 12717   0040E0  EF6B  F020         	goto	l120
 12718   0040E4                     u8590:
 12719   0040E4                     
 12720                           ;lcd.c: 62:     SSP2IF = 0;
 12721   0040E4  9EA4               	bcf	4004,7,c	;volatile
 12722   0040E6                     
 12723                           ;lcd.c: 64:     LCD_Send(0x7c);
 12724   0040E6  0E7C               	movlw	124
 12725   0040E8  ECCD  F023         	call	_LCD_Send
 12726                           
 12727                           ;lcd.c: 66:     LCD_Send(0x80);
 12728   0040EC  0E80               	movlw	128
 12729   0040EE  ECCD  F023         	call	_LCD_Send
 12730   0040F2                     
 12731                           ;lcd.c: 68:     if(lineNum == 1){
 12732   0040F2  040B               	decf	LCD_ShowString@lineNum^0,w,c
 12733   0040F4  A4D8               	btfss	status,2,c
 12734   0040F6  EF7F  F020         	goto	u8601
 12735   0040FA  EF81  F020         	goto	u8600
 12736   0040FE                     u8601:
 12737   0040FE  EF86  F020         	goto	l6757
 12738   004102                     u8600:
 12739   004102                     
 12740                           ;lcd.c: 69:         LCD_Send(0x80);
 12741   004102  0E80               	movlw	128
 12742   004104  ECCD  F023         	call	_LCD_Send
 12743                           
 12744                           ;lcd.c: 70:     }
 12745   004108  EF92  F020         	goto	l124
 12746   00410C                     l6757:
 12747   00410C  0E02               	movlw	2
 12748   00410E  180B               	xorwf	LCD_ShowString@lineNum^0,w,c
 12749   004110  A4D8               	btfss	status,2,c
 12750   004112  EF8D  F020         	goto	u8611
 12751   004116  EF8F  F020         	goto	u8610
 12752   00411A                     u8611:
 12753   00411A  EF92  F020         	goto	l124
 12754   00411E                     u8610:
 12755   00411E                     
 12756                           ;lcd.c: 72:         LCD_Send(0xC0);
 12757   00411E  0EC0               	movlw	192
 12758   004120  ECCD  F023         	call	_LCD_Send
 12759   004124                     l124:
 12760                           
 12761                           ;lcd.c: 75:     LCD_Send(0x40);
 12762   004124  0E40               	movlw	64
 12763   004126  ECCD  F023         	call	_LCD_Send
 12764   00412A                     
 12765                           ;lcd.c: 77:     for (i = 0; i<16; i++){
 12766   00412A  0E00               	movlw	0
 12767   00412C  6E0C               	movwf	LCD_ShowString@i^0,c
 12768   00412E                     l6767:
 12769                           
 12770                           ;lcd.c: 78:         LCD_Send(textData[i]);
 12771   00412E  500C               	movf	LCD_ShowString@i^0,w,c
 12772   004130  2407               	addwf	LCD_ShowString@textData^0,w,c
 12773   004132  6E09               	movwf	??_LCD_ShowString^0,c
 12774   004134  0E00               	movlw	0
 12775   004136  2008               	addwfc	(LCD_ShowString@textData+1)^0,w,c
 12776   004138  6E0A               	movwf	(??_LCD_ShowString+1)^0,c
 12777   00413A  C009  FFF6         	movff	??_LCD_ShowString,tblptrl
 12778   00413E  C00A  FFF7         	movff	??_LCD_ShowString+1,tblptrh
 12779   004142  0E00               	movlw	low (__mediumconst shr (0+16))
 12780   004144  6EF8               	movwf	tblptru,c
 12781   004146  0E0F               	movlw	(high __ramtop+-1)
 12782   004148  64F7               	cpfsgt	tblptrh,c
 12783   00414A  D003               	bra	u8627
 12784   00414C  0008               	tblrd		*
 12785   00414E  50F5               	movf	tablat,w,c
 12786   004150  D005               	bra	u8620
 12787   004152                     u8627:
 12788   004152  CFF6 FFE1          	movff	tblptrl,fsr1l
 12789   004156  CFF7 FFE2          	movff	tblptrh,fsr1h
 12790   00415A  50E7               	movf	indf1,w,c
 12791   00415C                     u8620:
 12792   00415C  ECCD  F023         	call	_LCD_Send
 12793   004160                     
 12794                           ;lcd.c: 79:     }
 12795   004160  2A0C               	incf	LCD_ShowString@i^0,f,c
 12796   004162  0E0F               	movlw	15
 12797   004164  640C               	cpfsgt	LCD_ShowString@i^0,c
 12798   004166  EFB7  F020         	goto	u8631
 12799   00416A  EFB9  F020         	goto	u8630
 12800   00416E                     u8631:
 12801   00416E  EF97  F020         	goto	l6767
 12802   004172                     u8630:
 12803   004172                     
 12804                           ;lcd.c: 81:     SSP2CON2bits.PEN = 1;
 12805   004172  846B               	bsf	107,2,c	;volatile
 12806   004174                     l128:
 12807   004174  B46B               	btfsc	107,2,c	;volatile
 12808   004176  EFBF  F020         	goto	u8641
 12809   00417A  EFC1  F020         	goto	u8640
 12810   00417E                     u8641:
 12811   00417E  EFBA  F020         	goto	l128
 12812   004182                     u8640:
 12813   004182  0012               	return		;funcret
 12814   004184                     __end_of_LCD_ShowString:
 12815                           	callstack 0
 12816                           
 12817 ;; *************** function _LCD_Init *****************
 12818 ;; Defined at:
 12819 ;;		line 3 in file "lcd.c"
 12820 ;; Parameters:    Size  Location     Type
 12821 ;;		None
 12822 ;; Auto vars:     Size  Location     Type
 12823 ;;		None
 12824 ;; Return value:  Size  Location     Type
 12825 ;;                  1    wreg      void 
 12826 ;; Registers used:
 12827 ;;		wreg, status,2, cstack
 12828 ;; Tracked objects:
 12829 ;;		On entry : 0/0
 12830 ;;		On exit  : 0/0
 12831 ;;		Unchanged: 0/0
 12832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12837 ;;Total ram usage:        1 bytes
 12838 ;; Hardware stack levels used: 1
 12839 ;; Hardware stack levels required when called: 2
 12840 ;; This function calls:
 12841 ;;		_LCD_Send
 12842 ;; This function is called by:
 12843 ;;		_main
 12844 ;; This function uses a non-reentrant model
 12845 ;;
 12846                           
 12847                           	psect	text50
 12848   003DA6                     __ptext50:
 12849                           	callstack 0
 12850   003DA6                     _LCD_Init:
 12851                           	callstack 28
 12852   003DA6                     
 12853                           ;lcd.c: 5:     ANSELDbits.ANSD0 = 0;
 12854   003DA6  010F               	movlb	15	; () banked
 12855   003DA8  913B               	bcf	59,0,b	;volatile
 12856                           
 12857                           ;lcd.c: 6:     ANSELDbits.ANSD1 = 0;
 12858   003DAA  933B               	bcf	59,1,b	;volatile
 12859                           
 12860                           ;lcd.c: 8:     TRISDbits.TRISD0 = 1;
 12861   003DAC  8095               	bsf	149,0,c	;volatile
 12862                           
 12863                           ;lcd.c: 9:     TRISDbits.TRISD1 = 1;
 12864   003DAE  8295               	bsf	149,1,c	;volatile
 12865                           
 12866                           ;lcd.c: 10:     TRISAbits.TRISA0 = 0;
 12867   003DB0  9092               	bcf	146,0,c	;volatile
 12868                           
 12869                           ;lcd.c: 11:     LATAbits.LATA0 = 1;
 12870   003DB2  8089               	bsf	137,0,c	;volatile
 12871   003DB4                     
 12872                           ; BSR set to: 15
 12873                           ;lcd.c: 14:     SSP2CON1bits.SSPM = 0b1000;
 12874   003DB4  506C               	movf	108,w,c	;volatile
 12875   003DB6  0BF0               	andlw	-16
 12876   003DB8  0908               	iorlw	8
 12877   003DBA  6E6C               	movwf	108,c	;volatile
 12878                           
 12879                           ;lcd.c: 15:     SSP2ADD = 19;
 12880   003DBC  0E13               	movlw	19
 12881   003DBE  6E6E               	movwf	110,c	;volatile
 12882   003DC0                     
 12883                           ; BSR set to: 15
 12884                           ;lcd.c: 16:     SSP2CON1bits.SSPEN = 1;
 12885   003DC0  8A6C               	bsf	108,5,c	;volatile
 12886   003DC2                     
 12887                           ; BSR set to: 15
 12888                           ;lcd.c: 18:     _delay((unsigned long)((5)*(32E6/4000.0)));
 12889   003DC2  0E34               	movlw	52
 12890   003DC4  6E07               	movwf	??_LCD_Init^0,c
 12891   003DC6  0EF2               	movlw	242
 12892   003DC8                     u9527:
 12893   003DC8  2EE8               	decfsz	wreg,f,c
 12894   003DCA  D7FE               	bra	u9527
 12895   003DCC  2E07               	decfsz	??_LCD_Init^0,f,c
 12896   003DCE  D7FC               	bra	u9527
 12897   003DD0                     
 12898                           ;lcd.c: 20:     SSP2CON2bits.SEN = 1;
 12899   003DD0  806B               	bsf	107,0,c	;volatile
 12900   003DD2                     l111:
 12901   003DD2  B06B               	btfsc	107,0,c	;volatile
 12902   003DD4  EFEE  F01E         	goto	u8861
 12903   003DD8  EFF0  F01E         	goto	u8860
 12904   003DDC                     u8861:
 12905   003DDC  EFE9  F01E         	goto	l111
 12906   003DE0                     u8860:
 12907   003DE0                     
 12908                           ;lcd.c: 22:     SSP2IF = 0;
 12909   003DE0  9EA4               	bcf	4004,7,c	;volatile
 12910   003DE2                     
 12911                           ;lcd.c: 27:     LCD_Send(0x7C);
 12912   003DE2  0E7C               	movlw	124
 12913   003DE4  ECCD  F023         	call	_LCD_Send
 12914                           
 12915                           ;lcd.c: 28:     LCD_Send(0x80);
 12916   003DE8  0E80               	movlw	128
 12917   003DEA  ECCD  F023         	call	_LCD_Send
 12918                           
 12919                           ;lcd.c: 29:     LCD_Send(0x38);
 12920   003DEE  0E38               	movlw	56
 12921   003DF0  ECCD  F023         	call	_LCD_Send
 12922                           
 12923                           ;lcd.c: 30:     LCD_Send(0x80);
 12924   003DF4  0E80               	movlw	128
 12925   003DF6  ECCD  F023         	call	_LCD_Send
 12926                           
 12927                           ;lcd.c: 31:     LCD_Send(0x39);
 12928   003DFA  0E39               	movlw	57
 12929   003DFC  ECCD  F023         	call	_LCD_Send
 12930                           
 12931                           ;lcd.c: 32:     LCD_Send(0x80);
 12932   003E00  0E80               	movlw	128
 12933   003E02  ECCD  F023         	call	_LCD_Send
 12934                           
 12935                           ;lcd.c: 33:     LCD_Send(0x17);
 12936   003E06  0E17               	movlw	23
 12937   003E08  ECCD  F023         	call	_LCD_Send
 12938                           
 12939                           ;lcd.c: 34:     LCD_Send(0x80);
 12940   003E0C  0E80               	movlw	128
 12941   003E0E  ECCD  F023         	call	_LCD_Send
 12942                           
 12943                           ;lcd.c: 35:     LCD_Send(0x7A);
 12944   003E12  0E7A               	movlw	122
 12945   003E14  ECCD  F023         	call	_LCD_Send
 12946                           
 12947                           ;lcd.c: 36:     LCD_Send(0x80);
 12948   003E18  0E80               	movlw	128
 12949   003E1A  ECCD  F023         	call	_LCD_Send
 12950                           
 12951                           ;lcd.c: 37:     LCD_Send(0x5E);
 12952   003E1E  0E5E               	movlw	94
 12953   003E20  ECCD  F023         	call	_LCD_Send
 12954                           
 12955                           ;lcd.c: 38:     LCD_Send(0x80);
 12956   003E24  0E80               	movlw	128
 12957   003E26  ECCD  F023         	call	_LCD_Send
 12958                           
 12959                           ;lcd.c: 39:     LCD_Send(0x6B);
 12960   003E2A  0E6B               	movlw	107
 12961   003E2C  ECCD  F023         	call	_LCD_Send
 12962                           
 12963                           ;lcd.c: 40:     LCD_Send(0x80);
 12964   003E30  0E80               	movlw	128
 12965   003E32  ECCD  F023         	call	_LCD_Send
 12966                           
 12967                           ;lcd.c: 41:     LCD_Send(0x0C);
 12968   003E36  0E0C               	movlw	12
 12969   003E38  ECCD  F023         	call	_LCD_Send
 12970                           
 12971                           ;lcd.c: 42:     LCD_Send(0x80);
 12972   003E3C  0E80               	movlw	128
 12973   003E3E  ECCD  F023         	call	_LCD_Send
 12974                           
 12975                           ;lcd.c: 43:     LCD_Send(0x01);
 12976   003E42  0E01               	movlw	1
 12977   003E44  ECCD  F023         	call	_LCD_Send
 12978                           
 12979                           ;lcd.c: 44:     LCD_Send(0x80);
 12980   003E48  0E80               	movlw	128
 12981   003E4A  ECCD  F023         	call	_LCD_Send
 12982                           
 12983                           ;lcd.c: 45:     LCD_Send(0x06);
 12984   003E4E  0E06               	movlw	6
 12985   003E50  ECCD  F023         	call	_LCD_Send
 12986                           
 12987                           ;lcd.c: 46:     LCD_Send(0x80);
 12988   003E54  0E80               	movlw	128
 12989   003E56  ECCD  F023         	call	_LCD_Send
 12990                           
 12991                           ;lcd.c: 47:     LCD_Send(0x02);
 12992   003E5A  0E02               	movlw	2
 12993   003E5C  ECCD  F023         	call	_LCD_Send
 12994   003E60                     
 12995                           ;lcd.c: 49:     SSP2CON2bits.PEN = 1;
 12996   003E60  846B               	bsf	107,2,c	;volatile
 12997   003E62                     l114:
 12998   003E62  B46B               	btfsc	107,2,c	;volatile
 12999   003E64  EF36  F01F         	goto	u8871
 13000   003E68  EF38  F01F         	goto	u8870
 13001   003E6C                     u8871:
 13002   003E6C  EF31  F01F         	goto	l114
 13003   003E70                     u8870:
 13004   003E70                     
 13005                           ;lcd.c: 52:     _delay((unsigned long)((5)*(32E6/4000.0)));
 13006   003E70  0E34               	movlw	52
 13007   003E72  6E07               	movwf	??_LCD_Init^0,c
 13008   003E74  0EF2               	movlw	242
 13009   003E76                     u9537:
 13010   003E76  2EE8               	decfsz	wreg,f,c
 13011   003E78  D7FE               	bra	u9537
 13012   003E7A  2E07               	decfsz	??_LCD_Init^0,f,c
 13013   003E7C  D7FC               	bra	u9537
 13014   003E7E  0012               	return		;funcret
 13015   003E80                     __end_of_LCD_Init:
 13016                           	callstack 0
 13017                           
 13018 ;; *************** function _LCD_Send *****************
 13019 ;; Defined at:
 13020 ;;		line 85 in file "lcd.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;  data            1    wreg     unsigned char 
 13023 ;; Auto vars:     Size  Location     Type
 13024 ;;  data            1    5[COMRAM] unsigned char 
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  1    wreg      void 
 13027 ;; Registers used:
 13028 ;;		wreg
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;Total ram usage:        1 bytes
 13039 ;; Hardware stack levels used: 1
 13040 ;; Hardware stack levels required when called: 1
 13041 ;; This function calls:
 13042 ;;		Nothing
 13043 ;; This function is called by:
 13044 ;;		_LCD_Init
 13045 ;;		_LCD_ShowString
 13046 ;;		_LCD_Clear
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text51
 13051   00479A                     __ptext51:
 13052                           	callstack 0
 13053   00479A                     _LCD_Send:
 13054                           	callstack 27
 13055                           
 13056                           ;incstack = 0
 13057                           ;LCD_Send@data stored from wreg
 13058   00479A  6E06               	movwf	LCD_Send@data^0,c
 13059   00479C                     
 13060                           ;lcd.c: 87:     SSP2BUF = data;
 13061   00479C  C006  FF6F         	movff	LCD_Send@data,3951	;volatile
 13062   0047A0                     l134:
 13063   0047A0  B06D               	btfsc	109,0,c	;volatile
 13064   0047A2  EFD5  F023         	goto	u8511
 13065   0047A6  EFD7  F023         	goto	u8510
 13066   0047AA                     u8511:
 13067   0047AA  EFD0  F023         	goto	l134
 13068   0047AE                     u8510:
 13069   0047AE                     l137:
 13070   0047AE  AEA4               	btfss	4004,7,c	;volatile
 13071   0047B0  EFDC  F023         	goto	u8521
 13072   0047B4  EFDE  F023         	goto	u8520
 13073   0047B8                     u8521:
 13074   0047B8  EFD7  F023         	goto	l137
 13075   0047BC                     u8520:
 13076   0047BC                     
 13077                           ;lcd.c: 90:     SSP2IF = 0;
 13078   0047BC  9EA4               	bcf	4004,7,c	;volatile
 13079   0047BE  0012               	return		;funcret
 13080   0047C0                     __end_of_LCD_Send:
 13081                           	callstack 0
 13082                           
 13083 ;; *************** function _ISR *****************
 13084 ;; Defined at:
 13085 ;;		line 11 in file "interrupt.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;		None
 13088 ;; Auto vars:     Size  Location     Type
 13089 ;;  temp            1    4[COMRAM] unsigned char 
 13090 ;; Return value:  Size  Location     Type
 13091 ;;                  1    wreg      void 
 13092 ;; Registers used:
 13093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13094 ;; Tracked objects:
 13095 ;;		On entry : 0/0
 13096 ;;		On exit  : 0/0
 13097 ;;		Unchanged: 0/0
 13098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13102 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13103 ;;Total ram usage:        5 bytes
 13104 ;; Hardware stack levels used: 1
 13105 ;; This function calls:
 13106 ;;		Nothing
 13107 ;; This function is called by:
 13108 ;;		Interrupt level 2
 13109 ;; This function uses a non-reentrant model
 13110 ;;
 13111                           
 13112                           	psect	intcode
 13113   000008                     __pintcode:
 13114                           	callstack 0
 13115   000008                     _ISR:
 13116                           	callstack 21
 13117                           
 13118                           ;incstack = 0
 13119   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13120   00000A  CFD9 F003          	movff	fsr2l,??_ISR+2
 13121   00000E  CFDA F004          	movff	fsr2h,??_ISR+3
 13122   000012                     
 13123                           ;interrupt.c: 12:     if(TMR1IE && TMR1IF && GPIOIE){
 13124   000012  A09D               	btfss	3997,0,c	;volatile
 13125   000014  EF0E  F000         	goto	i2u625_41
 13126   000018  EF10  F000         	goto	i2u625_40
 13127   00001C                     i2u625_41:
 13128   00001C  EF49  F000         	goto	i2l5405
 13129   000020                     i2u625_40:
 13130   000020  A09E               	btfss	3998,0,c	;volatile
 13131   000022  EF15  F000         	goto	i2u626_41
 13132   000026  EF17  F000         	goto	i2u626_40
 13133   00002A                     i2u626_41:
 13134   00002A  EF49  F000         	goto	i2l5405
 13135   00002E                     i2u626_40:
 13136   00002E  0101               	movlb	1	; () banked
 13137   000030  5124               	movf	_GPIOIE& (0+255),w,b
 13138   000032  B4D8               	btfsc	status,2,c
 13139   000034  EF1E  F000         	goto	i2u627_41
 13140   000038  EF20  F000         	goto	i2u627_40
 13141   00003C                     i2u627_41:
 13142   00003C  EF49  F000         	goto	i2l5405
 13143   000040                     i2u627_40:
 13144   000040                     
 13145                           ; BSR set to: 1
 13146                           ;interrupt.c: 14:         if(PORTAbits.RA2){
 13147   000040  A480               	btfss	128,2,c	;volatile
 13148   000042  EF25  F000         	goto	i2u628_41
 13149   000046  EF27  F000         	goto	i2u628_40
 13150   00004A                     i2u628_41:
 13151   00004A  EF44  F000         	goto	i2l378
 13152   00004E                     i2u628_40:
 13153   00004E                     
 13154                           ; BSR set to: 1
 13155                           ;interrupt.c: 15:             _delay((unsigned long)((50)*(32E6/4000.0)));
 13156   00004E  0E03               	movlw	3
 13157   000050  6E02               	movwf	(??_ISR+1)^0,c
 13158   000052  0E08               	movlw	8
 13159   000054  6E01               	movwf	??_ISR^0,c
 13160   000056  0E77               	movlw	119
 13161   000058                     i2u954_47:
 13162   000058  2EE8               	decfsz	wreg,f,c
 13163   00005A  D7FE               	bra	i2u954_47
 13164   00005C  2E01               	decfsz	??_ISR^0,f,c
 13165   00005E  D7FC               	bra	i2u954_47
 13166   000060  2E02               	decfsz	(??_ISR+1)^0,f,c
 13167   000062  D7FA               	bra	i2u954_47
 13168   000064  0000               	nop	
 13169   000066                     
 13170                           ;interrupt.c: 16:             if(PORTAbits.RA2){
 13171   000066  A480               	btfss	128,2,c	;volatile
 13172   000068  EF38  F000         	goto	i2u629_41
 13173   00006C  EF3A  F000         	goto	i2u629_40
 13174   000070                     i2u629_41:
 13175   000070  EF44  F000         	goto	i2l378
 13176   000074                     i2u629_40:
 13177   000074                     i2l380:
 13178   000074  B480               	btfsc	128,2,c	;volatile
 13179   000076  EF3F  F000         	goto	i2u630_41
 13180   00007A  EF41  F000         	goto	i2u630_40
 13181   00007E                     i2u630_41:
 13182   00007E  EF3A  F000         	goto	i2l380
 13183   000082                     i2u630_40:
 13184   000082                     
 13185                           ;interrupt.c: 18:                 keepStateGPIO = 0;
 13186   000082  0E00               	movlw	0
 13187   000084  0100               	movlb	0	; () banked
 13188   000086  6FEE               	movwf	_keepStateGPIO& (0+255),b
 13189   000088                     i2l378:
 13190                           
 13191                           ;interrupt.c: 22:         TMR1 = 0xFFFF - (25000 - 1);
 13192   000088  0E9E               	movlw	158
 13193   00008A  6ECF               	movwf	207,c	;volatile
 13194   00008C  0E58               	movlw	88
 13195   00008E  6ECE               	movwf	206,c	;volatile
 13196   000090                     
 13197                           ;interrupt.c: 23:         TMR1IF = 0;
 13198   000090  909E               	bcf	3998,0,c	;volatile
 13199   000092                     i2l5405:
 13200                           
 13201                           ;interrupt.c: 26:     if(RC1IE && RC1IF && UARTIE){
 13202   000092  AA9D               	btfss	3997,5,c	;volatile
 13203   000094  EF4E  F000         	goto	i2u631_41
 13204   000098  EF50  F000         	goto	i2u631_40
 13205   00009C                     i2u631_41:
 13206   00009C  EF7D  F000         	goto	i2l388
 13207   0000A0                     i2u631_40:
 13208   0000A0  AA9E               	btfss	3998,5,c	;volatile
 13209   0000A2  EF55  F000         	goto	i2u632_41
 13210   0000A6  EF57  F000         	goto	i2u632_40
 13211   0000AA                     i2u632_41:
 13212   0000AA  EF7D  F000         	goto	i2l388
 13213   0000AE                     i2u632_40:
 13214   0000AE  0101               	movlb	1	; () banked
 13215   0000B0  5123               	movf	_UARTIE& (0+255),w,b
 13216   0000B2  B4D8               	btfsc	status,2,c
 13217   0000B4  EF5E  F000         	goto	i2u633_41
 13218   0000B8  EF60  F000         	goto	i2u633_40
 13219   0000BC                     i2u633_41:
 13220   0000BC  EF7D  F000         	goto	i2l388
 13221   0000C0                     i2u633_40:
 13222   0000C0                     
 13223                           ; BSR set to: 1
 13224                           ;interrupt.c: 27:         char temp = RCREG1;
 13225   0000C0  CFAE F005          	movff	4014,ISR@temp	;volatile
 13226   0000C4                     
 13227                           ; BSR set to: 1
 13228                           ;interrupt.c: 28:         static int i = 0;;interrupt.c: 30:         if(temp != '\n'){
 13229   0000C4  0E0A               	movlw	10
 13230   0000C6  1805               	xorwf	ISR@temp^0,w,c
 13231   0000C8  B4D8               	btfsc	status,2,c
 13232   0000CA  EF69  F000         	goto	i2u634_41
 13233   0000CE  EF6B  F000         	goto	i2u634_40
 13234   0000D2                     i2u634_41:
 13235   0000D2  EF77  F000         	goto	i2l5419
 13236   0000D6                     i2u634_40:
 13237   0000D6                     
 13238                           ; BSR set to: 1
 13239                           ;interrupt.c: 31:             gmail.data[i] = temp;
 13240   0000D6  0E75               	movlw	low _gmail
 13241   0000D8  2521               	addwf	ISR@i& (0+255),w,b
 13242   0000DA  6ED9               	movwf	fsr2l,c
 13243   0000DC  0E01               	movlw	high _gmail
 13244   0000DE  2122               	addwfc	(ISR@i+1)& (0+255),w,b
 13245   0000E0  6EDA               	movwf	fsr2h,c
 13246   0000E2  C005  FFDF         	movff	ISR@temp,indf2
 13247   0000E6                     
 13248                           ; BSR set to: 1
 13249                           ;interrupt.c: 32:             i++;
 13250   0000E6  4B21               	infsnz	ISR@i& (0+255),f,b
 13251   0000E8  2B22               	incf	(ISR@i+1)& (0+255),f,b
 13252                           
 13253                           ;interrupt.c: 33:         } else {
 13254   0000EA  EF7D  F000         	goto	i2l388
 13255   0000EE                     i2l5419:
 13256                           
 13257                           ; BSR set to: 1
 13258                           ;interrupt.c: 34:             gmail.full = 1;
 13259   0000EE  0E01               	movlw	1
 13260   0000F0  6F7F               	movwf	(_gmail+10)& (0+255),b	;volatile
 13261                           
 13262                           ;interrupt.c: 35:             i = 0;
 13263   0000F2  0E00               	movlw	0
 13264   0000F4  6F22               	movwf	(ISR@i+1)& (0+255),b
 13265   0000F6  0E00               	movlw	0
 13266   0000F8  6F21               	movwf	ISR@i& (0+255),b
 13267   0000FA                     i2l388:
 13268   0000FA  C004  FFDA         	movff	??_ISR+3,fsr2h
 13269   0000FE  C003  FFD9         	movff	??_ISR+2,fsr2l
 13270   000102  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13271   000104  0011               	retfie		f
 13272   000106                     __end_of_ISR:
 13273                           	callstack 0
 13274                           
 13275                           	psect	rparam
 13276   000000                     
 13277                           	psect	temp
 13278   00005A                     btemp:
 13279                           	callstack 0
 13280   00005A                     	ds	1
 13281   000000                     int$flags	set	btemp
 13282   000000                     wtemp8	set	btemp+1
 13283   000000                     ttemp5	set	btemp+1
 13284   000000                     ttemp6	set	btemp+4
 13285   000000                     ttemp7	set	btemp+8
 13286                           
 13287                           	psect	config
 13288                           
 13289                           ; Padding undefined space
 13290   300000                     	org	3145728
 13291   300000  FF                 	db	255
 13292                           
 13293                           ;Config register CONFIG1H @ 0x300001
 13294                           ;	Oscillator Selection bits
 13295                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13296                           ;	4X PLL Enable
 13297                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13298                           ;	Primary clock enable bit
 13299                           ;	PRICLKEN = 0x1, unprogrammed default
 13300                           ;	Fail-Safe Clock Monitor Enable bit
 13301                           ;	FCMEN = 0x0, unprogrammed default
 13302                           ;	Internal/External Oscillator Switchover bit
 13303                           ;	IESO = 0x0, unprogrammed default
 13304   300001                     	org	3145729
 13305   300001  33                 	db	51
 13306                           
 13307                           ;Config register CONFIG2L @ 0x300002
 13308                           ;	unspecified, using default values
 13309                           ;	Power-up Timer Enable bit
 13310                           ;	PWRTEN = 0x1, unprogrammed default
 13311                           ;	Brown-out Reset Enable bits
 13312                           ;	BOREN = 0x3, unprogrammed default
 13313                           ;	Brown Out Reset Voltage bits
 13314                           ;	BORV = 0x3, unprogrammed default
 13315   300002                     	org	3145730
 13316   300002  1F                 	db	31
 13317                           
 13318                           ;Config register CONFIG2H @ 0x300003
 13319                           ;	Watchdog Timer Enable bits
 13320                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13321                           ;	Watchdog Timer Postscale Select bits
 13322                           ;	WDTPS = 0xF, unprogrammed default
 13323   300003                     	org	3145731
 13324   300003  3C                 	db	60
 13325                           tosu	equ	0xFFF
 13326                           tosh	equ	0xFFE
 13327                           tosl	equ	0xFFD
 13328                           stkptr	equ	0xFFC
 13329                           pclatu	equ	0xFFB
 13330                           pclath	equ	0xFFA
 13331                           pcl	equ	0xFF9
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           indf0	equ	0xFEF
 13339                           postinc0	equ	0xFEE
 13340                           postdec0	equ	0xFED
 13341                           preinc0	equ	0xFEC
 13342                           plusw0	equ	0xFEB
 13343                           fsr0h	equ	0xFEA
 13344                           fsr0l	equ	0xFE9
 13345                           wreg	equ	0xFE8
 13346                           indf1	equ	0xFE7
 13347                           postinc1	equ	0xFE6
 13348                           postdec1	equ	0xFE5
 13349                           preinc1	equ	0xFE4
 13350                           plusw1	equ	0xFE3
 13351                           fsr1h	equ	0xFE2
 13352                           fsr1l	equ	0xFE1
 13353                           bsr	equ	0xFE0
 13354                           indf2	equ	0xFDF
 13355                           postinc2	equ	0xFDE
 13356                           postdec2	equ	0xFDD
 13357                           preinc2	equ	0xFDC
 13358                           plusw2	equ	0xFDB
 13359                           fsr2h	equ	0xFDA
 13360                           fsr2l	equ	0xFD9
 13361                           status	equ	0xFD8

Data Sizes:
    Strings     231
    Constant    64
    Data        40
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160    142     143
    BANK1           256     51     219
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_ShowString@textData	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), STR_1(CODE[17]), 
		 -> STR_2(CODE[17]), STR_3(CODE[17]), STR_4(CODE[17]), STR_5(CODE[17]), 
		 -> STR_6(CODE[17]), STR_7(CODE[17]), STR_8(CODE[17]), STR_9(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    moveDisplay$4119	PTR unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    moveDisplay@F6961	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    moveDisplay@menuItems	PTR unsigned char [8] size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), 
		 -> STR_15(CODE[4]), STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[5]), STR_22(CODE[17]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    __rem_pio2f@y	PTR  size(1) Largest target is 4
		 -> sinf@y(BANK0[4]), 

    runGPIO@F6973	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    runGPIO@LEDControl	PTR FTN(unsigned char ,)void [6] size(2) Largest target is 1
		 -> LED1_Control(), LED2_Control(), LED3_Control(), LED4_Control(), 
		 -> LED5_Control(), LED6_Control(), 

    S3538$buffer	PTR unsigned char  size(2) Largest target is 0

    S3538$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> moveDisplay@menuItem1(BANK1[17]), moveDisplay@menuItem2(BANK1[17]), runADC@text(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 11
		 -> gmail(BANK1[11]), ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_11(CODE[5]), 
		 -> STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), STR_15(CODE[4]), 
		 -> STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), STR_29(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 11
		 -> gmail(BANK1[11]), ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_11(CODE[5]), 
		 -> STR_12(CODE[5]), STR_13(CODE[4]), STR_14(CODE[4]), STR_15(CODE[4]), 
		 -> STR_16(CODE[5]), STR_17(CODE[6]), STR_18(CODE[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_23(CODE[4]), STR_26(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_10(CODE[5]), STR_19(CODE[6]), STR_20(CODE[5]), STR_21(CODE[19]), 
		 -> STR_22(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _runUART->_printf
    _runPWM->___awdiv
    _runGPIO->_LED1_Control
    _runGPIO->_LED2_Control
    _runGPIO->_LED3_Control
    _runGPIO->_LED4_Control
    _runGPIO->_LED5_Control
    _runGPIO->_LED6_Control
    _runDAC->_printf
    ___sindf->___fladd
    ___rem_pio2f->___fltol
    ___cosdf->___fladd
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _efgtoa->___fltol
    _floorf->___fldiv
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flneg->___fladd
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod
    _LCD_ShowString->_LCD_Send
    _LCD_Init->_LCD_Send

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_moveDisplay
    _runUART->_printf
    _runDAC->_printf
    _sinf->___rem_pio2f
    ___sindf->___fladd
    ___rem_pio2f->___flneg
    ___cosdf->___fladd
    _printf->_vfprintf
    _runADC->_sprintf
    _moveDisplay->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flneg
    ___fltol->___fladd
    ___flsub->___fladd
    ___flneg->___cosdf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDisplay

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  332532
                                            138 BANK0      4     4      0
                           _LCD_Init
                     _LCD_ShowString
                        _moveDisplay
                             _runADC
                             _runDAC
                            _runGPIO
                             _runPWM
                            _runUART
 ---------------------------------------------------------------------------------
 (1) _runUART                                              3     3      0   55570
                                            114 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _runPWM                                               4     4      0     944
                                             13 COMRAM     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _runGPIO                                             33    33      0     501
                                              6 COMRAM    32    32      0
                       _LED1_Control *
                       _LED2_Control *
                       _LED3_Control *
                       _LED4_Control *
                       _LED5_Control *
                       _LED6_Control *
 ---------------------------------------------------------------------------------
 (2) _LED6_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED5_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED4_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED3_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED2_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED1_Control                                         1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _runDAC                                              12    12      0  145438
                                            114 BANK0     12    12      0
                          _SPI_write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
                               _sinf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   68874
                                             68 BANK0     26    22      4
                            ___cosdf
                            ___fladd
                            ___fldiv (ARG)
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4   16012
                                              4 BANK0     32    28      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         32    27      5   27720
                                             36 BANK0     32    27      5
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     251
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4   16096
                                              4 BANK0     28    24      4
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     3      4   55533
                                             83 COMRAM     1     1      0
                                            110 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _SPI_write                                            3     3      0     130
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                              32    32      0   70319
                                            135 BANK0      2     2      0
                                              0 BANK1     30    30      0
                     _LCD_ShowString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _moveDisplay                                         54    53      1   58201
                                            135 BANK0      3     2      1
                                              0 BANK1     51    51      0
                     _LCD_ShowString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12   56118
                                            110 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5   55248
                                            103 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           14    10      4   54448
                                             89 BANK0     14    10      4
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                14    10      4    2110
                                             15 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1362
                                             11 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   40798
                                             36 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     2      4     463
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1057
                                             81 COMRAM     2     2      0
                                              4 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    8147
                                              4 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    6862
                                             69 COMRAM    12     4      8
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     875
                                             32 BANK0      4     0      4
                            ___cosdf (ARG)
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    8273
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    3263
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    7043
                                             31 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     3      6    4693
                                             22 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1928
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1428
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             11 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_ShowString                                       6     4      2    1306
                                              6 COMRAM     6     4      2
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      31
                                              6 COMRAM     1     1      0
                           _LCD_Send
 ---------------------------------------------------------------------------------
 (3) _LCD_Send                                             1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 5     5      0      45
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Send
   _LCD_ShowString
     _LCD_Send
   _moveDisplay
     _LCD_ShowString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
               ___cosdf (ARG)
                 ___fladd
                 ___flmul
               ___fladd (ARG)
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
               ___xxtofl (ARG)
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
           _stoa
             _fputc
   _runADC
     _LCD_ShowString
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
   _runDAC
     _SPI_write
     ___fladd
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _printf
       _vfprintf
     _sinf
       ___cosdf
       ___fladd
       ___fldiv (ARG)
       ___flneg (ARG)
       ___rem_pio2f (ARG)
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _fabsf
       ___sindf (ARG)
         ___fladd
         ___flmul
   _runGPIO
     _LED1_Control *
     _LED2_Control *
     _LED3_Control *
     _LED4_Control *
     _LED5_Control *
     _LED6_Control *
   _runPWM
     ___awdiv
   _runUART
     _printf

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     33      DB       7       85.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      8F       5       89.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhhhhl     22      0       0      37        0.0%
BITBIGSFRlllllh     21      0       0      52        0.0%
BITBIGSFRlllllh     10      0       0      51        0.0%
BITBIGSFRlllllh      C      0       0      53        0.0%
BITBIGSFRhhhhhh      A      0       0      36        0.0%
BITBIGSFRhhllhl      A      0       0      44        0.0%
BITBIGSFRhll         7      0       0      47        0.0%
BITBIGSFRhhllll      6      0       0      45        0.0%
BITBIGSFRlllhl       6      0       0      49        0.0%
BITBIGSFRhlh         5      0       0      46        0.0%
BITBIGSFRllh         5      0       0      48        0.0%
BITBIGSFRhhhhl       3      0       0      38        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhllhh      1      0       0      43        0.0%
BITBIGSFRhhlhhh      1      0       0      40        0.0%
BITBIGSFRhhlhl       1      0       0      41        0.0%
BITBIGSFRhhhl        1      0       0      39        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C3      54        0.0%
DATA                 0      0     1C3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 11:14:16 2024

              ___fldiv@aexp 0045                ___fldiv@bexp 0044                ___fldiv@sign 003D  
                        _C0 FF03                          _C1 FEFF                          _C2 FEFB  
                        _C3 FEF7                          l50 27E2                          l60 2886  
                        l55 2834                          l58 2984                          _S1 FEE3  
                        _S2 FEDF                          _S3 FEDB                          _S4 FED7  
              ___awdiv@sign 000B         ___wmul@multiplicand 0008                         l111 3DD2  
                       l120 40D6                         l113 3DE0                         l114 3E62  
                       l122 40E4                         l131 4182                         l140 47BE  
                       l124 4124                         l117 3E7E                         l134 47A0  
                       l127 4172                         l231 4658                         l215 26B6  
                       l128 4174                         l232 465E                         l320 483A  
                       l137 47AE                         l250 47E2                         l234 466C  
                       l226 2752                         l218 26B8                         l139 47BC  
                       l235 4670                         l323 482C                         l332 4802  
                       l253 47F4                         l229 464A                         l326 481E  
                       l342 381E                         l423 2FF6                         l335 4848  
                       l433 2FE2                         l425 2E34                         l329 4810  
                       l347 3830                         l436 3008                         l428 2ED4  
                       l348 3846                         l277 3A9A                         l437 300A  
                       l534 3FF4                         l543 400C                         l546 4798  
                       l482 392E                         l811 3C60                         l491 3962  
                       l483 38F0                         l539 3FE0                         l820 46AA  
                       l476 3868                         l805 438A                         l478 3876  
                       l495 398C                         l479 3974                         l816 3CA6  
                       l843 3BA2                         l790 4232                         l777 40D0  
                       _GIE 7F97                         _PR2 0FBB                         _ISR 0008  
                       _abs 4718                         _pad 438C                ___awmod@sign 000B  
                       prod 0FF3                         tosl 0FFD                         wreg 0FE8  
                _TXSTA1bits 0FAC                ___flmul@aexp 0021                ___flmul@bexp 0026  
              ___flmul@sign 0020                ___flmul@temp 002B                ___flmul@prod 0027  
                      ?_ISR 0001                        ISR@i 0121                ___fltol@exp1 0053  
                      l1100 13E8                        l1101 13D6                        l1201 3260  
                      l1130 22CA                        ?_abs 000C                        l1116 45A8  
                      l1204 33BC                        l1141 2388                        l1133 228E  
                      l1142 2376                        l1215 3354                        l1128 246A  
                      l1160 1594                        l1224 45EE                        l1208 32F8  
                      l1321 08E6                        l1170 17F0                        l1074 11FE  
                      l1139 2310                        l1091 1318                        l1083 14CE  
                      l1075 11EC                        l1164 18F8                        l1076 11B2  
                      l1414 4732                        l1254 43C4                        l1263 358A  
                      l1167 178A                        l1423 2DF8                        l1344 3512  
                      l1417 474A                        l1257 4406                        l1265 3592  
                      l1177 18BA                        l1169 1802                        l1409 3DA4  
                      l1353 42D8                        l1337 3462                        l1266 35D8  
                      l1426 2D3C                        l1259 4428                        l1443 44CE  
                      l1291 049C                        l1523 3208                        l1540 20D0  
                      l1277 36D6                        l1437 447E                        l1293 02E2  
                      l1357 42E0                        l1349 355A                        l1373 1D0E  
                      l1470 47DE                        l1455 3F48                        l1463 4632  
                      l1288 0B02                        l1552 2BE2                        l1563 46E2  
                      l1539 1F32                        l1557 4716                        l1399 4518  
                      l6001 4212                        l1489 100C                        l6003 4222  
                      l6011 4310                        l6005 422A                        l6101 439A  
                      l6021 4388                        l6013 4320                        l6111 43E8  
                      l6103 43AE                        l6015 434E                        l6031 3C10  
                      l6113 4414                        l6105 43BC                        l6201 35B0  
                      l6017 435E                        l6009 42E2                        l6041 3C9E  
                      l6033 3C20                        l6025 3BA4                        l6121 3CC8  
                      l7001 3F5E                        l6115 4718                        l6107 43D0  
                      l6211 35EA                        l6203 35C0                        l6019 4382  
                      l6043 3CA4                        l6035 3C2E                        l6027 3BD2  
                      l6051 469A                        l6123 3D06                        l6131 3D46  
                      l7011 3F6E                        l7003 3F60                        l6117 4726  
                      l5421 47E2                        l6109 43E4                        l6213 35F0  
                      l6221 364A                        l6205 35CC                        l6037 3C40  
                      l6029 3BE2                        l5501 1130                        l6061 3AC8  
                      l6133 3D58                        l6125 3D2E                        l6141 46AC  
                      l7101 2ECA                        l7021 3FA6                        l7013 3F70  
                      l7005 3F62                        ?_pad 0017                        l5423 47F0  
                      l5431 3EAE                        l6231 36A6                        l6223 3664  
                      l6215 3622                        l6207 35D4                        l6039 3C4E  
                      l6047 4672                        l5511 1144                        l5503 1134  
                      l6071 3B16                        l6063 3AF2                        l6055 3A9C  
                      l6127 3D3A                        l6119 3CA8                        l6143 46B4  
                      l6311 039C                        l6303 02F2                        l7111 2FA0  
                      l7103 2ED2                        l7031 3FEE                        l7023 3FAC  
                      l7015 3F7C                        l7007 3F64                        l5433 3ECC  
                      l5425 3E80                        l6233 36B6                        l6225 3676  
                      l6217 3628                        l6209 35E0                        l6049 468A  
                      l5601 13AA                        l5521 117E                        l5513 1148  
                      l5505 1138                        l5441 101C                        l6081 3B42  
                      l6065 3AF4                        l6057 3AB4                        l6137 3D9C  
                      l6161 2C7E                        l6153 2BE4                        l6145 442A  
                      l6401 08F8                        l6313 03DA                        l6305 02F8  
                      l6241 0120                        l7121 2FF0                        l7113 2FAE  
                      l7105 2EE2                        l7041 3864                        l7033 4006  
                      l7025 3FBA                        l7017 3F8E                        l7009 3F6C  
                      l7201 2772                        l5435 3F02                        l5427 3E92  
                      l6227 3690                        l6219 362E                        l5611 1404  
                      l5603 13B8                        l5531 11D0                        l5523 119A  
                      l5515 114C                        l5507 113C                        l5451 105C  
                      l5443 102A                        l6091 3B72                        l6067 3B04  
                      l6171 2D9C                        l6155 2C04                        l6147 4438  
                      l6411 0928                        l6403 0906                        l6331 04C8  
                      l6315 03EE                        l6323 046A                        l6307 032C  
                      l6251 0168                        l6243 012E                        l7115 2FBC  
                      l7107 2F00                        l7131 248C                        l7123 246C  
                      l7051 38CA                        l7043 3866                        l7027 3FD2  
                      l7019 3F90                        l7211 277E                        l7203 2774  
                      l5429 3EA4                        l6229 36A0                        l5701 21D0  
                      l5621 146E                        l5613 1412                        l5605 13CE  
                      l5541 121C                        l5533 11DE                        l5525 11AA  
                      l5509 1140                        l5517 1150                        l5461 108E  
                      l5453 105E                        l5445 102C                        l6093 3B82  
                      l6077 3B2E                        l6069 3B08                        l6173 2DB0  
                      l6165 2CF0                        l6157 2C5C                        l6149 444C  
                      l6181 4480                        l6421 095A                        l6413 0938  
                      l6405 0916                        l6341 050E                        l6333 04D0  
                      l6325 04A4                        l6317 0422                        l6309 036A  
                      l6253 0178                        l6261 01A0                        l6245 0132  
                      l6237 010A                        l6501 425E                        l7117 2FD4  
                      l7109 2F6A                        l7141 24AA                        l7133 248E  
                      l7125 2480                        l7061 3918                        l7053 38E2  
                      l7045 3894                        l7037 3848                        l7301 2986  
                      l7221 2788                        l7213 2780                        l7205 2778  
                      l5631 14A8                        l5623 148E                        l5615 144C  
                      l5551 125C                        l5535 11E0                        l5527 11C0  
                      l5519 1154                        l5471 10B6                        l5463 1090  
                      l5447 103C                        l5455 1066                        l5439 100E  
                      l6095 3B92                        l6087 3B56                        l6079 3B38  
                      l6175 2DD8                        l6167 2D2C                        l6159 2C70  
                      l6183 4494                        l6191 44B4                        l6431 0A02  
                      l6423 096C                        l6415 093C                        l6407 091A  
                      l6351 0554                        l6343 0520                        l6335 04D6  
                      l6327 04B2                        l6319 042A                        l6271 01EA  
                      l6263 01C6                        l6255 0188                        l6247 0156  
                      l6239 0110                        l6503 426A                        l6511 320C  
                      l7151 24DC                        l7143 24AC                        l7135 2490  
                      l7127 2488                        l7063 3928                        l7047 38A0  
                      l7039 384A                        l7303 2998                        l7231 2792  
                      l7223 278A                        l7215 2782                        l7207 277A  
                      l5641 45F0                        l6193 355C                        l5721 2252  
                      l5713 2208                        l5705 21E4                        l5801 14FC  
                      l5633 14AE                        l5625 1492                        l5609 13F8  
                      l5617 144E                        l5561 1286                        l5553 1268  
                      l5545 1230                        l5537 11EA                        l5529 11CC  
                      l5481 10F0                        l5473 10C6                        l5465 1096  
                      l5457 1076                        l5449 104C                        l6089 3B62  
                      l6177 2DE8                        l6169 2D60                        l6185 44A0  
                      l6441 0A50                        l6433 0A0A                        l6425 0970  
                      l6417 0942                        l6409 0920                        l6361 0668  
                      l6353 05B8                        l6337 04E8                        l6345 0528  
                      l6329 04BE                        l6281 0252                        l6273 0202  
                      l6265 01D8                        l6257 0194                        l6249 0160  
                      l6505 4286                        l6601 1A74                        l6513 321C  
                      l7161 2624                        l7153 252C                        l7145 24AE  
                      l7137 24A2                        l7129 248A                        l7073 3970  
                      l7057 38FE                        l7065 392E                        l7049 38BC  
                      l7305 29A6                        l7241 27BC                        l7233 2796  
                      l7225 278C                        l7217 2784                        l7209 277C  
                      l5643 45FC                        l6099 438C                        l6195 357E  
                      l5731 2298                        l5723 225A                        l5715 2222  
                      l5707 21F4                        l5811 1538                        l5803 150C  
                      l5635 14BC                        l5627 14A0                        l5619 145E  
                      l5571 12F8                        l5555 126C                        l5547 1240  
                      l5539 120C                        l5563 128C                        l5491 111C  
                      l5483 1102                        l5475 10D6                        l5467 10A4  
                      l5459 107C                        l6187 44A4                        l6451 0AC4  
                      l6443 0A5E                        l6427 0976                        l6419 0948  
                      l6435 0A0E                        l6371 0726                        l6363 069C  
                      l6355 0610                        l6347 0530                        l6339 04F6  
                      l6283 0264                        l6275 020C                        l6267 01DC  
                      l6259 019C                        l5651 4790                        l6507 42A6  
                      l6611 1ABE                        l6531 32E2                        l6523 329A  
                      l6515 322A                        l7091 2E20                        l7083 2DFA  
                      l7171 26DA                        l7163 268C                        l7155 253E  
                      l7147 24B0                        l7139 24A8                        l7075 3984  
                      l7067 393C                        l7059 3910                        l7251 280E  
                      l7243 27D4                        l7235 279C                        l7227 278E  
                      l7219 2786                        l5645 460E                        l6197 359A  
                      l5741 22F0                        l5733 22B6                        l5725 226A  
                      l5717 2232                        l5709 21F4                        l5661 20EE  
                      l5901 185A                        l5821 156E                        l5813 153E  
                      l5805 151C                        l5637 14BE                        l5629 14A6  
                      l5581 1352                        l5565 12B2                        l5573 1308  
                      l5557 127A                        l5549 124E                        l5493 1120  
                      l5485 1110                        l5477 10D8                        l5469 10A6  
                      l6189 44B0                        l6453 0ADA                        l6445 0A8E  
                      l6437 0A2C                        l6429 09CE                        l6381 07FA  
                      l6373 0736                        l6365 06CE                        l6357 0644  
                      l6349 0540                        l6285 0268                        l6269 01E2  
                      l6509 42B2                        l6461 33D8                        l6613 1AC6  
                      l6605 1A8C                        l6541 3362                        l6533 32EE  
                      l6525 32A2                        l6517 3270                        l7093 2E2A  
                      l7085 2E02                        l6701 1D10                        l7181 2710  
                      l7173 26E8                        l7157 2598                        l7149 24CC  
                      l7077 3988                        l7069 3954                        l7261 2860  
                      l7253 2826                        l7237 27A0                        l7229 2790  
                      l5647 4612                        l6199 35AA                        l5751 232E  
                      l5743 22F6                        l5735 22B8                        l5727 227E  
                      l5719 2242                        l5663 20FE                        l5671 2128  
                      l5655 20D2                        l5911 18CE                        l5903 1874  
                      l5823 157E                        l5815 154C                        l5807 1522  
                      l5591 1382                        l5583 135C                        l5575 132E  
                      l5567 12E6                        l5559 127C                        l5495 1124  
                      l5487 1114                        l5479 10E0                        l6455 0AE2  
                      l6447 0A9C                        l6439 0A48                        l6391 0830  
                      l6383 080E                        l6375 076A                        l6367 06E4  
                      l6359 064A                        l6287 026E                        l6279 022C  
                      l6471 343C                        l6463 33E0                        l6631 1BA4  
                      l6615 1AE8                        l6623 1B5E                        l6607 1A90  
                      l6551 33AA                        l6543 3364                        l6535 332A  
                      l6527 32AE                        l6519 3286                        l7095 2E32  
                      l7087 2E12                        l6711 1D8A                        l6703 1D30  
                      l7183 2716                        l7175 26EE                        l7167 2698  
                      l7159 2600                        l7191 2740                        l7079 398A  
                      l7271 28B8                        l7263 2878                        l7247 27F0  
                      l7239 27AE                        l5761 2398                        l5753 2332  
                      l5745 2300                        l5737 22C8                        l5729 228C  
                      l5681 2154                        l5673 2138                        l5665 210E  
                      l5657 20DE                        l5913 18DC                        l5905 1888  
                      l5841 1600                        l5833 15C8                        l5825 1584  
                      l5817 154E                        l5809 1532                        l5593 1386  
                      l5585 136A                        l5577 133E                        l5569 12E8  
                      l5497 1128                        l5489 1118                        l6449 0AB4  
                      l6393 0838                        l6377 07C0                        l6385 0812  
                      l6369 0716                        l6289 0276                        l6297 0292  
                      l5649 4774                        l6481 349C                        l6473 345A  
                      l6465 33EC                        l6633 1BB6                        l6641 1BCE  
                      l6625 1B6E                        l6617 1B1A                        l6609 1AB2  
                      l6561 192A                        l6553 33AC                        l6545 3368  
                      l6537 3336                        l6529 32E0                        l7097 2E42  
                      l7089 2E14                        l6721 1EE4                        l6713 1DF6  
                      l6705 1D46                        l6801 0BE8                        l7185 2724  
                      l7177 26FC                        l7169 26C6                        l7281 2902  
                      l7273 28C2                        l7257 2842                        l7249 2800  
                      l7193 2754                        l5931 4012                        l5771 23FA  
                      l5763 23A4                        l5755 2340                        l5747 230E  
                      l5739 22DA                        l5683 2164                        l5691 218E  
                      l5675 213E                        l5667 211E                        l5659 20EC  
                      l5915 18DE                        l5907 18A2                        l5851 164A  
                      l5843 1618                        l5835 15D4                        l5827 15A4  
                      l5819 155E                        l5595 1396                        l5587 136C  
                      l5499 112C                        l5923 4562                        l6395 0844  
                      l6387 0822                        l6379 07C6                        l6299 02AC  
                      l6491 3524                        l6483 34BE                        l6467 33F0  
                      l6459 33BE                        l6651 1C5C                        l6635 1BBE  
                      l6643 1BEC                        l6619 1B4C                        l6571 1954  
                      l6563 1936                        l6547 338C                        l6539 3344  
                      l7099 2E60                        l6731 1FCE                        l6723 1F16  
                      l6715 1E1C                        l6707 1D48                        l6811 0C8C  
                      l6803 0C1C                        l7187 272A                        l7179 2702  
                      l7291 2920                        l7275 28DE                        l7267 2898  
                      l7259 2852                        l7195 276C                        l5941 4042  
                      l5933 4020                        l5781 2458                        l5773 2410  
                      l5765 23B2                        l5757 236E                        l5749 2320  
                      l5693 219E                        l5685 2174                        l5677 2144  
                      l5669 2120                        l5909 18BE                        l5917 18E4  
                      l5861 16A0                        l5853 165A                        l5845 1624  
                      l5837 15DE                        l5829 15B4                        l5589 137A  
                      l5597 1398                        l5925 4574                        l6397 08BE  
                      l6389 082A                        l6493 3538                        l6485 34F4  
                      l6477 3484                        l6469 342E                        l6661 1CBE  
                      l6653 1C72                        l6645 1C0C                        l6637 1BC6  
                      l6629 1B96                        l6581 199E                        l6565 193A  
                      l6557 18FA                        l6549 339C                        l6733 1FF4  
                      l6717 1E74                        l6709 1D66                        l6821 0D58  
                      l7189 272E                        l6901 4830                        l7293 293C  
                      l7285 290A                        l7269 28B4                        l7197 276E  
                      l6751 40E6                        l5951 4070                        l5943 4046  
                      l5935 4028                        l5783 245E                        l5775 242A  
                      l5767 23DC                        l5695 21B4                        l5687 2184  
                      l5679 2152                        l5919 18E8                        l5871 1744  
                      l5863 16BC                        l5855 1666                        l5847 1630  
                      l5839 15F4                        l5599 13A6                        l6399 08DE  
                      l6495 353C                        l6479 3498                        l6487 34F8  
                      l6655 1C90                        l6647 1C34                        l6663 1CD6  
                      l6591 19FA                        l6583 19AC                        l6575 195C  
                      l6567 1942                        l6559 191E                        l6735 204C  
                      l6719 1ED4                        l6727 1F3E                        l6831 0DCC  
                      l6815 0CB4                        l6911 483E                        l6903 4822  
                      l7287 2918                        l7279 28E6                        l7199 2770  
                      l6681 479C                        l6921 3DD0                        l6913 3DA6  
                      l6761 412A                        l6753 40F2                        l5961 40A4  
                      l5953 407E                        l5945 404E                        l5937 402C  
                      l5929 400E                        l5785 2460                        l5777 2446  
                      l5769 23E0                        l5697 21C4                        l5689 2186  
                      l5881 179A                        l5873 1752                        l5865 16C8  
                      l5857 1676                        l5849 163E                        l5793 14D0  
                      l6497 4234                        l6593 1A0A                        l6585 19B6  
                      l6569 1944                        l6577 197A                        l6673 46E4  
                      l6737 20A4                        l6729 1F62                        l6817 0CC4  
                      l6809 0C58                        l6825 0D80                        l6905 4814  
                      l6923 3DE2                        l6915 3DB4                        l6771 4162  
                      l6755 4102                        l6747 40D4                        l5963 40AA  
                      l5955 4084                        l5947 4060                        l5939 403A  
                      l5779 244A                        l5699 21CC                        l5883 17A8  
                      l5875 1770                        l5867 16E4                        l5859 1690  
                      l5795 14DC                        l6499 423C                        l6595 1A26  
                      l6587 19DA                        l6579 198A                        l6667 1CE8  
                      l6683 44D0                        l6931 39A8                        l6675 4704  
                      l6739 20BC                        l6851 0EB8                        l6827 0D9E  
                      l6819 0D10                        l6907 4806                        l7299 2944  
                      l6925 3E60                        l6917 3DC0                        l6757 410C  
                      l6749 40D4                        l5957 409A                        l5949 4068  
                      l5965 40B0                        l5981 41A2                        l5973 4184  
                      l5893 1812                        l5885 17AC                        l5877 177A  
                      l5869 170E                        l5797 14EA                        l6597 1A42  
                      l6589 19E6                        l6685 44DC                        l6933 39BA  
                      l6941 39D8                        l6773 4636                        l6677 4706  
                      l6693 29B2                        l6829 0DBC                        l6845 0E3C  
                      l6781 0B14                        l6909 47F8                        l6927 3E70  
                      l6919 3DC2                        l6767 412E                        l6759 411E  
                      l5967 40C0                        l5959 40A2                        l5991 41DA  
                      l5983 41B0                        l5975 4188                        l5895 181E  
                      l5887 17BA                        l5879 1788                        l5799 14EC  
                      l6599 1A5A                        l6687 44F2                        l6935 39C0  
                      l6943 39F8                        l6775 4644                        l6871 0F8A  
                      l6863 0F1A                        l6847 0E4C                        l6839 0E04  
                      l6855 0EE0                        l6791 0B74                        l6783 0B2A  
                      l6769 4160                        l5969 40C8                        l5993 41E8  
                      l5985 41B8                        l5977 4196                        l5897 182C  
                      l5889 17E8                        l6689 450E                        l6945 3A7A  
                      l6937 39D2                        l6929 3992                        l6777 4646  
                      l6697 300C                        l6865 0F3E                        l6881 0FEE  
                      l6857 0EF6                        l6849 0E84                        l6785 0B2C  
                      l6961 370E                        l6953 36D8                        l5995 41FE  
                      l5987 41CA                        l5979 419E                        l5899 1856  
                      l6891 45B8                        l6947 3A88                        l6883 47C0  
                      l6875 0FB2                        l6867 0F62                        l6859 0F06  
                      l6787 0B4A                        l6795 0B9C                        l6779 0B04  
                      l6971 3760                        l6963 3716                        l6955 3702  
                      l5997 4206                        l5989 41D2                        l6893 45C0  
                      l6949 3A96                        l6885 47C4                        l6797 0BBA  
                      l6789 0B60                        l6981 37C6                        l6965 3720  
                      l6957 370A                        l5999 420C                        l6895 45C8  
                      l6799 0BD8                        l6983 37E2                        l6967 372C  
                      l6959 370C                        l6897 45DE                        l6889 45AA  
                      l6985 37FA                        l6977 3768                        l6969 373E  
                      l6993 3F4A                        l6987 381A                        l6979 37C2  
                      l6995 3F4C                        l6989 3840                        l6997 3F56  
                      l6999 3F58                        STR_1 FF5D                        STR_2 FF3B  
                      STR_3 FF4C                        STR_4 FFA1                        STR_5 FF6E  
                      STR_6 FF3B                        STR_7 FF90                        STR_8 FF7F  
                      STR_9 FFB2                        u7000 23FA                        u7001 23F6  
                      u7010 242A                        u7011 2426                        _PEIE 7F96  
                      u7020 2458                        u7100 15B4                        u7021 2454  
                      u7101 15B0                        u7110 172E                        u7030 14EA  
                      u7031 14E6                        u7200 18A2                        u7120 1788  
                      u7040 14FC                        u6400 102A                        u8000 0520  
                      u7201 189E                        u7121 1784                        u7041 14F8  
                      u6401 1026                        u8001 051C                        u7210 18DC  
                      u7130 17A8                        u7050 150C                        u6410 103C  
                      u8010 0668                        u7211 18D8                        u7131 17A4  
                      u7115 1724                        u7051 1508                        u6411 1038  
                      u8011 0664                        u7220 4020                        u7300 41CA  
                      u7140 17BA                        u7060 154C                        u6500 1196  
                      u6420 104C                        u8100 095A                        u8020 06CE  
                      u7221 401C                        u7301 41C6                        u7141 17B6  
                      u7061 1548                        u6501 1190                        u6421 1048  
                      u8101 0956                        u8021 06CA                        u7230 403A  
                      u7310 41E8                        u6350 47F0                        u7150 17E8  
                      u7070 155E                        u6510 1198                        u6430 108E  
                      u8110 0A2C                        u8030 0716                        u7231 4036  
                      u7311 41E4                        u6351 47EC                        u7151 17E4  
                      u7071 155A                        u6431 108A                        u8111 0A28  
                      u8031 0712                        u7240 4060                        u7320 41FE  
                      u6360 3E92                        u7400 3C4E                        u7160 17FE  
                      u7080 156E                        u6600 12B2                        u6520 11C0  
                      u6440 10A4                        u8120 0A48                        u8040 0726  
                      u8200 345A                        u9000 3F8E                        u7241 405C  
                      u7321 41FA                        u6361 3E8E                        u7401 3C4A  
                      u7161 17FA                        u7081 156A                        u6601 12AE  
                      u6521 11BC                        u6441 10A0                        u8121 0A44  
                      u8041 0722                        u8201 3456                        u9001 3F8A  
                      u7250 407E                        u7330 4222                        u6370 3EA4  
                      u7410 3C9E                        u7170 1812                        u7090 15A4  
                      u6610 12F8                        u6530 11DE                        u6450 10B6  
                      u8130 0AAE                        u8050 07C0                        u8210 3480  
                      u9010 3FBA                        u7251 407A                        u7331 421E  
                      u6371 3EA0                        u7411 3C9A                        u7171 180E  
                      u7091 15A0                        u6611 12F4                        u6531 11DA  
                      u6451 10B2                        u8131 0AA8                        u8051 07BC  
                      u8211 347C                        u9011 3FB6                        u7260 409A  
                      u6380 3ECC                        u7500 439A                        u7340 4310  
                      u7180 182C                        u7420 468A                        u6700 13E4  
                      u6620 132E                        u6540 11FE                        u6460 10C6  
                      u8140 0AB0                        u8060 080E                        u8220 34BA  
                      u8300 322A                        u9100 3928                        u9020 3FE0  
                      u7261 4096                        u6381 3EC8                        u7501 4396  
                      u7341 430C                        u7181 1828                        u7421 4686  
                      u6701 13E0                        u6621 132A                        u6541 11FA  
                      u6461 10C2                        u8061 080A                        u8221 34B6  
                      u8301 3226                        u9101 3924                        u9021 3FDC  
                      u7270 40C0                        u6390 3F02                        u7510 43BC  
                      u7350 434E                        u7190 1874                        u6710 13F8  
                      u6630 133E                        u6550 120C                        u6470 1102  
                      u7430 3AB4                        u8150 0AC4                        u8070 08BE  
                      u8230 34E0                        u8310 3286                        u9110 393C  
                      u9030 3FEE                        u7271 40BC                        u6391 3EFE  
                      u7511 43B8                        u7351 434A                        u7191 1870  
                      u6711 13F4                        u6631 133A                        u6551 1208  
                      u6471 10FE                        u7431 3AB0                        u8151 0AC0  
                      u8071 08BA                        u8311 3282                        u9111 3938  
                      u9031 3FEA                        u7280 4196                        u7520 4406  
                      u6800 20EC                        u7360 4382                        u6720 1412  
                      u6640 136A                        u6560 121C                        u6480 1110  
                      u7440 3AE8                        u7600 3D92                        u8080 08F8  
                      u8240 3512                        u8160 33D8                        u8400 198A  
                      u8320 32DC                        u9200 2FF0                        u9120 3962  
                      u9040 4006                        u7281 4192                        u7521 4402  
                      u6801 20E8                        u7361 437E                        u6721 140E  
                      u6641 1366                        u6561 1218                        u6481 110C  
                      u7601 3D8C                        u8081 08F4                        u8241 350E  
                      u8161 33D4                        u8401 1986                        u8321 32D8  
                      u9201 2FEC                        u9121 395E                        u9041 4002  
                      u7290 41B0                        u7530 4414                        u6810 20FE  
                      u7370 3BD2                        u6730 144C                        u6650 137A  
                      u6570 124E                        u6490 117E                        u7450 3B16  
                      u7610 3D94                        u8090 0906                        u8250 3520  
                      u8170 341E                        u8410 19AC                        u8330 3326  
                      u9210 3008                        u9130 3970                        u9050 3876  
                      u7291 41AC                        u7531 4410                        u6811 20FA  
                      u7371 3BCE                        u6731 1448                        u6651 1376  
                      u6571 124A                        u6491 117A                        u7451 3B12  
                      u8091 0902                        u8251 351C                        u8411 19A8  
                      u8331 3322                        u9211 3004                        u9131 396C  
                      u9051 3872                        u7540 4726                        u6900 22B6  
                      u6820 210E                        u7380 3C10                        u6740 145E  
                      u6660 1396                        u6580 125C                        u7460 3B2A  
                      u7700 2D2C                        u7620 46E2                        u8260 355A  
                      u8180 342E                        u8500 1C08                        u8420 19DA  
                      u8340 3344                        u9220 24DC                        u9140 3984  
                      u9060 38CA                        u9300 27BC                        u7541 4722  
                      u6901 22B2                        u6821 210A                        u7381 3C0C  
                      u6741 145A                        u6661 1392                        u6581 1258  
                      u7461 3B26                        u7445 3ADE                        u7701 2D28  
                      u7621 46DE                        u8261 3556                        u8237 34D6  
                      u8181 342A                        u8501 1C04                        u8421 19D6  
                      u8341 3340                        u9221 24D8                        u9141 3980  
                      u9061 38C6                        u9301 27B8                        u8510 47AE  
                      u6910 22DA                        u6830 2152                        u7390 3C2E  
                      u6750 146E                        u6670 13A6                        u6590 127A  
                      u7470 3B52                        u7550 3CE8                        u7710 2D80  
                      u7630 4438                        u8270 425E                        u8190 343C  
                      u8430 1A26                        u8350 3354                        u9230 253E  
                      u9070 38F0                        u9310 27E2                        u8511 47AA  
                      u6911 22D6                        u6831 214E                        u7391 3C2A  
                      u6751 146A                        u6671 13A2                        u6591 1276  
                      u7471 3B4E                        u7631 4434                        u8271 425A  
                      u8191 3438                        u8431 1A22                        u8351 3350  
                      u9151 2E1A                        u9231 253A                        u9071 38EC  
                      u9311 27DE                        u8520 47BC                        u8600 4102  
                      u7800 3664                        u6920 22F0                        u6840 2164  
                      u6760 148E                        u6680 13B8                        u7480 3B72  
                      u7560 3D06                        u7720 2D9C                        u7640 2C2C  
                      u8280 42D8                        u8440 1A42                        u8360 3362  
                      u9160 2E42                        u9240 26C6                        u9080 38FE  
                      u9320 27F0                        u8521 47B8                        u8601 40FE  
                      u7801 3660                        u6921 22EC                        u6841 2160  
                      u6761 148A                        u6681 13B4                        u7481 3B6E  
                      u7561 3D02                        u7721 2D98                        u8281 42D4  
                      u8177 3414                        u8441 1A3E                        u8361 335E  
                      u9161 2E3E                        u9241 26C2                        u9081 38FA  
                      u9321 27EC                        u8610 411E                        u7810 3676  
                      u6930 230E                        u6850 2174                        u6770 14A0  
                      u6690 13CE                        u7490 3B82                        u7570 3D2E  
                      u7730 2DD8                        u7650 2C5C                        u8450 1AB2  
                      u8530 450E                        u8370 339C                        u8290 321C  
                      u9170 2EE2                        u9250 26E8                        u9090 3910  
                      u9330 280E                        u8611 411A                        u7811 3672  
                      u6931 230A                        u6851 2170                        u6771 149C  
                      u6691 13CA                        u7491 3B7E                        u7571 3D2A  
                      u7555 3CDE                        u7731 2DD4                        u7715 2D76  
                      u7651 2C58                        u8451 1AAE                        u8531 450A  
                      u8371 3398                        u8291 3218                        u9171 2EDE  
                      u9251 26E4                        u9091 390C                        u9331 280A  
                      u8620 415C                        u7820 3690                        u6940 232E  
                      u6860 21B4                        u6780 14BC                        u7580 3D58  
                      u7660 2C7E                        u7740 44CE                        u7900 0264  
                      u8460 1AE8                        u8380 33AA                        u9180 2FBC  
                      u8540 1D42                        u8700 0B60                        u9260 26FC  
                      u9340 2834                        u7821 368C                        u6941 232A  
                      u6861 21B0                        u6781 14B8                        u7581 3D54  
                      u7661 2C7A                        u7645 2C22                        u7741 44CA  
                      u7901 0260                        u8461 1AE4                        u8381 33A6  
                      u9181 2FB8                        u8541 1D3C                        u8701 0B5C  
                      u9261 26F8                        u9341 2830                        u8630 4172  
                      u6790 4632                        u7830 36A0                        u7750 356C  
                      u6950 2340                        u6870 21F4                        u7910 02DE  
                      u8470 1B1A                        u8390 191E                        u9190 2FE2  
                      u8550 1D44                        u8710 0BBA                        u9270 2710  
                      u9350 2842                        u8631 416E                        u6791 462E  
                      u7831 369C                        u7751 3566                        u6951 233C  
                      u6871 21F0                        u7911 02DA                        u8471 1B16  
                      u8391 191A                        u9191 2FDE                        u8711 0BB6  
                      u9271 270C                        u9351 283E                        u8640 4182  
                      u7760 356E                        u6960 236E                        u6880 226A  
                      u7680 2CEC                        u7920 036A                        u7840 012E  
                      u8480 1B4C                        u8560 1D66                        u8720 0BD8  
                      u9280 2724                        u9360 2860                        u8641 417E  
                      u6961 236A                        u6881 2266                        u7681 2CE8  
                      u7921 0366                        u7841 012A                        u8481 1B48  
                      u8561 1D62                        u8721 0BD4                        u9281 2720  
                      u9361 285C                        u7770 357E                        u6970 2384  
                      u6890 228C                        u7690 2D10                        u7930 039C  
                      u7850 0178                        u8490 1B6E                        u8650 4658  
                      u8570 1EE4                        u8730 0BE8                        u9290 2752  
                      u9370 2886                        u8627 4152                        u7771 357A  
                      u6971 2380                        u6891 2288                        u7595 3D6A  
                      u7675 2C92                        u7931 0398                        u7851 0174  
                      u8491 1B6A                        u8651 4654                        u8571 1EE0  
                      u8731 0BE4                        u9291 274E                        u9507 2736  
                      u9371 2882                        u9427 2760                        u7780 35AA  
                      u6980 2398                        u7676 2C9C                        u7940 03DA  
                      u7860 0188                        u8900 39D2                        u8660 466C  
                      u8580 20CC                        u8740 0CC4                        u9380 2894  
                      u7781 35A6                        u6981 2394                        u7677 2CAC  
                      u7941 03D6                        u7861 0184                        u8901 39CE  
                      u9517 2FC8                        u8661 4668                        u8581 20C8  
                      u8741 0CC0                        u8805 4838                        u9381 2890  
                      u9437 27C8                        u8590 40E4                        u7790 35C0  
                      u6990 23B2                        u7950 0466                        u7870 01C6  
                      u8750 0D9E                        u8670 0B26                        u8806 483A  
                      u9390 2998                        u9527 3DC8                        u8591 40E0  
                      u7791 35BC                        u6991 23AE                        u7695 2D06  
                      u7951 0462                        u7871 01C2                        u8751 0D9A  
                      u8671 0B20                        u8815 482A                        u8911 3736  
                      u9391 2994                        u9447 281A                        u7960 049C  
                      u7880 01D8                        u8760 0DBC                        u8680 0B28  
                      u8816 482C                        u9537 3E76                        u7961 0498  
                      u7881 01D4                        u8761 0DB8                        u8825 481C  
                      u8921 3748                        u9457 286C                        u7970 04B2  
                      u7890 0252                        u8770 0DCC                        u8690 0B4A  
                      u8826 481E                        u7971 04AE                        u7891 024E  
                      u8771 0DC8                        u8691 0B46                        u8835 480E  
                      u9467 3FC6                        u8860 3DE0                        u7980 04E8  
                      u8780 0E4C                        u8836 4810                        u8861 3DDC  
                      u7981 04E4                        u8781 0E48                        u8845 4800  
                      u9477 38D4                        u8870 3E70                        u7990 04F6  
                      u8790 0EF6                        u8846 4802                        u8950 37BE  
                      u8871 3E6C                        u7991 04F2                        u8791 0EF2  
                      u8855 4846                        u8951 37B8                        u9487 3946  
                      u8856 4848                        u8960 37C0                        u8944 37A8  
                      u8881 399C                        u9497 37EC                        u8945 37A4  
                      u8890 39BA                        u8970 37E2                        u8938 377A  
                      u8891 39B6                        u8971 37DE                        u8939 37C2  
                      u8980 381A                        u8981 3816                        u8990 3830  
                      u8991 382C                        _TMR1 0FCE                        abs@a 000C  
                      _dbuf 0125                        _half FEF3                        _labs 442A  
                      _main 2754                        _dtoa 355C                        _prec 0057  
                      _sinf 0B04                        pad@i 001E                        pad@p 001B  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _stoa 33BE                        btemp 005A               ___fpclassifyf 3CA8  
                      prodh 0FF4                        prodl 0FF3                        start 0106  
           ___fldiv@new_exp 003E                ___param_bank 0000                       ??_ISR 0001  
            _LCD_ShowString 40D2                       ??_abs 000E                       ??_pad 001D  
          __end_of_LCD_Init 3E80            __end_of_LCD_Send 47C0               ___fltol@sign1 0052  
                     ?_labs 0006             __end_of___fladd 14D0                       ?_main 0001  
                     ?_dtoa 0020             __end_of___fldiv 246C             __end_of___awdiv 40D2  
           __end_of___cosdf 320A             __end_of___flneg 46AC                       STR_10 FFE5  
                     STR_11 FFDB                       STR_20 FFD1                       STR_12 FFE0  
                     STR_21 FF17                       STR_13 FFFA                       STR_22 FF2A  
                     STR_14 FFF6                       STR_23 FFEA                       STR_15 FFF2  
                     STR_16 FFD6                       STR_17 FFCA                       STR_26 FFEE  
                     STR_18 FF3A                       STR_19 FFD0             __end_of___awmod 4234  
                     STR_29 FFC3                       ?_sinf 00A4             __end_of___flmul 18FA  
           __end_of___flsub 45AA             __end_of___fltol 3BA4                       ?_stoa 0010  
           ___awdiv@divisor 0008                       _RC1IE 7CED                       _RC1IF 7CF5  
           __end_of___sindf 2BE4                       i2l380 0074                       i2l378 0088  
                     i2l388 00FA                ___sindf$4125 0070                ___sindf$4126 0074  
              ___sindf$4127 0078             ___awdiv@counter 000A                vfpfcnvrt@fmt 00BB  
                     _TX1IF 7CF4                       _TRISD 0F95             __end_of_pio2_1t FEEB  
                     _fabsf 46E4                       _flags 0059                       _gmail 0175  
       read_prec_or_width@c 000E         read_prec_or_width@n 000F                       _fputc 3E80  
                     _fputs 45F0                       labs@a 0006                       pad@fp 0017  
                     _width 0055             __end_of_invpio2 FEF3                       _putch 47E0  
                     dtoa@d 0022                       dtoa@i 002B                       dtoa@p 0028  
                     dtoa@s 002A                       dtoa@w 0026        __end_of_LED1_Control 483C  
           __end_of_runGPIO 3848                       pclath 0FFA                       tablat 0FF5  
           __end_of_runUART 400E        __end_of_LED2_Control 482E                       sinf@n 00B0  
                     sinf@x 00A4                       sinf@y 00B6                       plusw1 0FE3  
                     plusw2 0FDB                       stoa@l 001C                       stoa@p 0016  
                     stoa@s 0012                       stoa@w 0018                       ttemp5 005B  
                     ttemp6 005E                       ttemp7 0062        __end_of_LED3_Control 4820  
                     status 0FD8                       wtemp8 005B             __end_of_sprintf 45F0  
            ?___fpclassifyf 0006        __end_of_LED4_Control 4812        __end_of_LED5_Control 4804  
      __end_of_LED6_Control 484A             __initialization 451A      __end_of_LCD_ShowString 4184  
              __end_of_half FEF7                __end_of_labs 4480                __end_of_main 29B2  
              __end_of_dtoa 36D8                __end_of_sinf 100E                __end_of_stoa 355C  
              LCD_Send@data 0006                      ??_labs 000A                      ??_main 00EA  
                    ??_dtoa 0024                      ??_sinf 0054                      ??_stoa 0014  
             __activetblptr 0002  __end_of_read_prec_or_width 42E2                ?_moveDisplay 00E7  
                    ?_fabsf 0006                      ?_fputc 0007                      ?_fputs 0010  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      _CCPR1L 0FBE  
          ___awdiv@dividend 0006                      ?_putch 0001                      _ANSELC 0F3A  
                    _GODONE 7E11                      _GPIOIE 0124                      i2l5401 0082  
                    i2l5411 00C0                      i2l5403 0090                      i2l5413 00C4  
                    i2l5405 0092                      i2l5415 00D6                      i2l5407 00A0  
                    i2l5417 00E6                      i2l5409 00AE                      i2l5419 00EE  
                    i2l5391 002E                      i2l5393 0040                      i2l5395 004E  
                    i2l5387 0012                      i2l5397 0066                      i2l5389 0020  
                    _RCREG1 0FAE               ___rem_pio2f@n 00A0               ___rem_pio2f@t 009C  
             ___rem_pio2f@x 0084               ___rem_pio2f@y 0088               vfpfcnvrt@done 00C4  
                    _UARTIE 0123                      _SPBRG1 0FAF                      _TMR1IE 7CE8  
                    _TMR1IF 7CF0                      _TMR2IE 7CE9                      _TMR2IF 7CF1  
                    _TMR1ON 7E68                      _TMR2ON 7DD2                      _SSP1IF 7CF3  
                    _SSP2IF 7D27                      _TXREG1 0FAD            __end_of___xxtofl 33BE  
              _CCPTMRS0bits 0F49                vfprintf@cfmt 00CC             ?_LCD_ShowString 0007  
                    _s1pio2 FF13                      _s2pio2 FF0F                      _s3pio2 FF0B  
                    _s4pio2 FF07                      ___flge 3BA4                      ___fleq 42E2  
                 ??___fladd 004E                      ___wmul 4774                   ??___fldiv 0035  
                 ??___awdiv 000A                   ??___cosdf 0052                   ??___flneg 0052  
                 ??___awmod 000A                   ??___flmul 001C                   ??___flsub 0052  
                 ??___fltol 0068            runUART@keepState 00D4                      _efgtoa 010A  
                 ??___sindf 0052                      _pio2_1 FEEB                      _floorf 2BE4  
                    fabsf@u 000A                      fabsf@x 0006                      _memcpy 4480  
      read_prec_or_width@ap 000D                      clear_0 4540            ___awdiv@quotient 000C  
                    _runADC 2DFA                      _runDAC 246C             ___awmod@divisor 0008  
                    isa$std 0001                      _runPWM 3848             ___awmod@counter 000A  
                    _printf 47C0                      pad@buf 0019                      dtoa@fp 0020  
                    _strcpy 46AC                      fputc@c 0007                      fputs@c 0014  
                    fputs@i 0015                      fputs@s 0010             ___fpclassifyf@e 000E  
           ___fpclassifyf@u 0010             ___fpclassifyf@x 0006                __mediumconst FED6  
                    sinf@ux 00BA                   ??_runGPIO 0007                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8           __end_of_SPI_write 4672  
                 ??_runUART 00D2                      stoa@cp 001A                      stoa@fp 0010  
          __end_of_vfprintf 451A                   ??_sprintf 0054                  ___flge@ff1 002D  
                ___flge@ff2 0031             ??___fpclassifyf 000A                ___xxtofl@arg 0010  
              ___xxtofl@exp 000F                ___xxtofl@val 0006                  ___fleq@ff1 0006  
                ___fleq@ff2 000A                  __accesstop 0060     __end_of__initialization 4554  
                 ?_LCD_Init 0001                   ?_LCD_Send 0001                  ___flneg@f1 0080  
             ___rparam_used 0001                  ___fltol@f1 0064              __pcstackCOMRAM 0001  
         LED4_Control@state 0006                __pidataBANK1 474C               __end_of_fabsf 4718  
             __end_of_fputc 3F4A               __end_of_fputs 4634               __end_of_putch 47F6  
                __end_of_C0 FF07                  __end_of_C1 FF03                  __end_of_C2 FEFF  
                __end_of_C3 FEFB                  __end_of_S1 FEE7                  __end_of_S2 FEE3  
                __end_of_S3 FEDF                  __end_of_S4 FEDB                     ??_fabsf 000A  
                   ??_fputc 000B                     ??_fputs 0014                     ??_putch 0006  
                __pbssBANK0 00EE                  __pbssBANK1 0100                  ??_LCD_Init 0007  
                ??_LCD_Send 0006                 runADC@F6963 0100                SPI_write@LSB 0007  
              SPI_write@MSB 0006                     ISR@temp 0005                     ?___flge 002D  
                   ?___fleq 0006                     ?___wmul 0006                     ?_efgtoa 0084  
             ??___rem_pio2f 0089                     ?_floorf 0046                _LED1_Control 482E  
                   ?_memcpy 0006                     ?_runADC 0001                     ?_runDAC 0001  
              _LED2_Control 4820                     ?_runPWM 0001                     ?_printf 00CE  
                   ?_strcpy 0006                _LED3_Control 4812                _LED4_Control 4804  
                 ?___xxtofl 0006                _LED5_Control 47F6              ___rem_pio2f@fn 0098  
            ___rem_pio2f@ty 008B              ___rem_pio2f@ux 0094                _LED6_Control 483C  
                   _SSP2ADD 0F6E                     _SSP1BUF 0FC9                     _SSP2BUF 0F6F  
         runGPIO@LEDControl 0015             LCD_ShowString@i 000C                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 100E                     ___fldiv 20D2  
                   ___awdiv 400E                     ___cosdf 300C                     ___flneg 4672  
                   ___awmod 4184                     ___flmul 14D0                     ___flsub 4562  
                   ___fltol 3A9C                     ___sindf 29B2                   ?_vfprintf 00C7  
            main@setUpAgain 00EC                     __pcinit 451A                     __ramtop 1000  
                   __ptext0 2754                     __ptext1 3F4A                     __ptext2 3848  
                   __ptext3 36D8                     __ptext4 47F6                     __ptext5 4804  
                   __ptext6 4812                     __ptext7 4820                     __ptext8 482E  
                   __ptext9 483C                     _pio2_1t FEE7                   _T1CONbits 0FCD  
           runPWM@keepState 0010       read_prec_or_width@fmt 000C                  ??___xxtofl 000A  
       __end_of___rem_pio2f 20D2            ___awmod@dividend 0006                     _invpio2 FEEF  
                   _runGPIO 36D8                     efgtoa@c 008A                     efgtoa@d 0098  
                   efgtoa@e 009C                     efgtoa@f 0086                     efgtoa@g 00AF  
                   efgtoa@h 00A6                     efgtoa@i 00A4                     efgtoa@l 00AA  
                   efgtoa@m 009A                     efgtoa@n 00B3                     efgtoa@p 008F  
                   efgtoa@t 0091                     efgtoa@u 00B5                     efgtoa@w 009E  
                   _runUART 3F4A                     _sprintf 45AA            ___rem_pio2f$4124 008F  
      end_of_initialization 4554                     floorf@e 0064                     floorf@m 0060  
                   floorf@u 0066                     floorf@x 0046                     memcpy@d 000D  
                   memcpy@n 000A                     memcpy@s 000F                     fputc@fp 0009  
          ___rem_pio2f@F526 0115               __Lmediumconst FED6                     fputs@fp 0012  
          ??_LCD_ShowString 0009          _read_prec_or_width 4234           LED1_Control@state 0006  
     LCD_ShowString@lineNum 000B            ___rem_pio2f@sign 0093           __end_of_vfpfcnvrt 1D10  
                efgtoa@mode 0096                  efgtoa@sign 00AE                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 000C                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 00BF  
                ??_vfprintf 0054                     strcpy@d 000A                   _PORTAbits 0F80  
                 _PORTCbits 0F82                 ___fladd@grs 0063               ___xxtofl@sign 000E  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95        ??_read_prec_or_width 000E                 ___fldiv@grs 0040  
               ___fldiv@rem 0039                   _SPI_write 4634                 ___flmul@grs 0022  
               _CCP1CONbits 0FBD           LED5_Control@state 0006              __end_of_s1pio2 FF17  
            __end_of_s2pio2 FF13              __end_of_s3pio2 FF0F              __end_of_s4pio2 FF0B  
            __end_of___flge 3CA8              __end_of___fleq 438C                 vfpfcnvrt@ap 00BC  
               vfpfcnvrt@cp 00C5                 ___rem_pio2f 1D10                 vfpfcnvrt@fp 00B9  
            __end_of___wmul 479A              __end_of_efgtoa 0B04              __end_of_pio2_1 FEEF  
      moveDisplay@menuItem1 0180        moveDisplay@menuItem2 0191              __end_of_floorf 2DFA  
      moveDisplay@menuItems 01A2              __end_of_memcpy 44D0                  floorf@F521 0119  
            __end_of_runADC 300C              __end_of_runDAC 2754              __end_of_runPWM 398E  
            __end_of_printf 47E0              __end_of_strcpy 46E4         start_initialization 451A  
               __end_of_ISR 0106                 __end_of_abs 474C                 __end_of_pad 442A  
                ?_SPI_write 0001       __end_of___fpclassifyf 3DA6             runADC@keepState 019D  
               vfprintf@fmt 00C9                    ??___flge 0035                    ??___fleq 000E  
                  ??___wmul 000A                    ??_efgtoa 008B                 __pdataBANK1 01B3  
                  ??_floorf 004A                    ??_memcpy 000C                    ??_runADC 00E7  
                  ??_runDAC 00D2                    ??_runPWM 000E                    ??_printf 0054  
                  ??_strcpy 000A                   ___fladd@a 004A                   ___fladd@b 0046  
                 ___fldiv@a 0031                   ___fldiv@b 002D               runGPIO@states 0009  
                 ___cosdf@r 0068                   ___cosdf@w 0078                   ___cosdf@x 0064  
                 ___cosdf@z 007C                   ___flmul@a 0018                   ___flmul@b 0014  
               __pbssCOMRAM 0055                   ___flsub@a 0068                   ___flsub@b 0064  
             __pcstackBANK0 0060               __pcstackBANK1 0180                   ___sindf@r 0068  
                 ___sindf@s 007C                   ___sindf@w 006C                   ___sindf@x 0064  
                 ___sindf@z 0080       runGPIO@numberOfStates 0022                 _efgtoa$3679 0093  
                 _dtoa$3648 0024               SPI_write@data 0008                   __pintcode 0008  
             __pmediumconst FED6                    ?___fladd 0046                    ?___fldiv 002D  
                  ?___awdiv 0006                    ?___cosdf 0064                    ?___flneg 0080  
                  ?___awmod 0006                    ?___flmul 0014                    ?___flsub 0064  
                  ?___fltol 0064                  runADC@pot1 0199                  runADC@pot2 019B  
                  ?___sindf 0064                  runADC@text 0180                   fabsf@F465 0111  
             ??_moveDisplay 00E8                    ?_runGPIO 0001                    ?_runUART 0001  
           runDAC@keepState 00DB                   _sinf$4120 00B2                    ?_sprintf 00CE  
                 _sinf$3843 00A8                   _sinf$3844 00AC                 ??_SPI_write 0006  
            runDAC@DACindex 00DD                    _LCD_Init 3DA6                    _LCD_Send 479A  
            ___wmul@product 000A                    _LATAbits 0F89                    _LATBbits 0F8A  
                  _LATCbits 0F8B                    _LATDbits 0F8C           LED2_Control@state 0006  
                  i2u630_40 0082                    i2u630_41 007E                    i2u631_40 00A0  
                  i2u631_41 009C                    i2u632_40 00AE                    i2u632_41 00AA  
                  i2u633_40 00C0                    i2u625_40 0020                    i2u633_41 00BC  
                  i2u625_41 001C                    i2u634_40 00D6                    i2u626_40 002E  
                  i2u634_41 00D2                    i2u626_41 002A                    i2u627_40 0040  
                  i2u627_41 003C                    i2u628_40 004E                    i2u628_41 004A  
                  i2u629_40 0074                    i2u629_41 0070                    i2u954_47 0058  
                 _vfpfcnvrt 18FA                  _ADCON0bits 0FC2                  _ADCON2bits 0FC0  
         ___wmul@multiplier 0006                   main@menuI 00ED            moveDisplay@F6961 01B3  
                vfpfcnvrt@c 00C3                   copy_data0 452E         __end_of_moveDisplay 3A9C  
          moveDisplay@menuI 01B2            moveDisplay@where 00E7                runGPIO@F6973 01CF  
              runGPIO@F6991 01C3                runGPIO@GPIOi 0024                    __Hrparam 0000  
                 memcpy@tmp 000C                  vfprintf@ap 00CB                    __Lrparam 0000  
                vfprintf@fp 00C7          runGPIO@GPIOreverse 0021           LED6_Control@state 0006  
              ?___rem_pio2f 0084                  ?_vfpfcnvrt 00B9         runDAC@selectModeDAC 00DC  
                _ANSELAbits 0F38                  _ANSELBbits 0F39                  _ANSELCbits 0F3A  
                _ANSELDbits 0F3B                  _ANSELEbits 0F3C          ___fpclassifyf@F465 011D  
                sprintf@fmt 00D0                    ___xxtofl 320A                    __ptext10 246C  
                  __ptext11 0B04                    __ptext20 398E                    __ptext12 29B2  
                  __ptext21 45AA                    __ptext13 1D10                    __ptext30 442A  
                  __ptext22 44D0                    __ptext14 46E4                    __ptext31 2BE4  
                  __ptext23 18FA                    __ptext15 300C                    __ptext40 20D2  
                  __ptext32 3CA8                    __ptext24 33BE                    __ptext16 47C0  
                  __ptext41 355C                    __ptext33 3A9C                    __ptext25 4234  
                  __ptext17 4634                    __ptext50 3DA6                    __ptext42 438C  
                  __ptext34 4562                    __ptext26 4774                    __ptext18 2DFA  
                  __ptext51 479A                    __ptext43 45F0                    __ptext35 100E  
                  __ptext27 010A                    __ptext19 320A                    __ptext44 3E80  
                  __ptext36 4672                    __ptext28 46AC                    __ptext45 47E0  
                  __ptext37 14D0                    __ptext29 4480                    __ptext46 4718  
                  __ptext38 3BA4                    __ptext47 4184                    __ptext39 42E2  
                  __ptext48 400E                    __ptext49 40D2              runADC@voltage1 0191  
            runADC@voltage2 0195                _SSP1CON1bits 0FC6                _SSP2CON1bits 0F6C  
              _SSP2CON2bits 0F6B                  strcpy@dest 0006                    efgtoa@fp 0084  
                  efgtoa@ne 008D                    efgtoa@pp 0095                    efgtoa@ou 00A0  
                  isa$xinst 0000                    int$flags 005A                 _runDAC$4117 00D3  
               _runDAC$4118 00D7                    _vfprintf 44D0               ?_LED1_Control 0001  
                 printf@fmt 00CE                _SSP1STATbits 0FC7               ?_LED2_Control 0001  
              _SSP2STATbits 0F6D               ?_LED3_Control 0001               ?_LED4_Control 0001  
                 putch@data 0006               ?_LED5_Control 0001                    memcpy@d1 0006  
             ?_LED6_Control 0001                    memcpy@s1 0008                 _moveDisplay 398E  
                  intlevel2 0000                   sprintf@ap 00DA                   strcpy@src 0008  
                _RCSTA1bits 0FAB                    sinf@sign 00B1                    runGPIO@j 0025  
               efgtoa@nmode 0097                    printf@ap 0054              ??_LED1_Control 0006  
            ??_LED2_Control 0006                 ??_vfpfcnvrt 00BD      LCD_ShowString@textData 0007  
            ??_LED3_Control 0006              ??_LED4_Control 0006                    sprintf@f 00DB  
                  sprintf@s 00CE              ??_LED5_Control 0006              ??_LED6_Control 0006  
          runPWM@multiplier 0011               ___fladd@signs 0060                ___fladd@aexp 0061  
              ___fladd@bexp 0062                ___cosdf$4121 006C                ___cosdf$4122 0070  
              ___cosdf$4123 0074               _keepStateGPIO 00EE           LED3_Control@state 0006  
